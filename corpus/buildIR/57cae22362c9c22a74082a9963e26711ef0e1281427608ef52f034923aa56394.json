{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/alpacahq/alpaca-docs"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "oas/broker/openapi.yaml",
			"byteSize": 191728,
			"content": "openapi: 3.0.0\ninfo:\n  title: Broker API\n  description: 'Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API'\n  version: 1.0.0\n  contact:\n    name: Alpaca Support\n    email: support@alpaca.markets\n    url: 'https://alpaca.markets/support'\n  termsOfService: 'https://s3.amazonaws.com/files.alpaca.markets/disclosures/library/TermsAndConditions.pdf'\nservers:\n  - url: 'https://broker-api.sandbox.alpaca.markets'\n    description: Sandbox endpoint\n  - url: 'https://broker-api.alpaca.markets'\n    description: Production endpoint\ntags:\n  - name: Accounts\n  - name: Documents\n  - name: Trading\n  - name: Assets\n  - name: Calendar\n  - name: Events\n  - name: Funding\n  - name: OAuth\n  - name: Clock\n  - name: Journals\n  - name: Corporate Actions\n  - name: Watchlist\ncomponents:\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n  parameters:\n    ActivityType:\n      in: path\n      name: activity_type\n      required: true\n      schema:\n        type: string\n        enum:\n          - FILL\n          - ACATC\n          - ACATS\n          - CIL\n          - CSD\n          - CSW\n          - DIV\n          - DIVCGL\n          - DIVCGS\n          - DIVNRA\n          - DIVROC\n          - DIVTXEX\n          - FEE\n          - INT\n          - JNLC\n          - JNLS\n          - MA\n          - PTC\n          - REORG\n          - SPIN\n          - SPLIT\n      description: see ActivityType model for details about what the different types mean\n    Status:\n      name: status\n      in: query\n      description: Status of the orders to list.\n      schema:\n        type: string\n        enum:\n          - open\n          - closed\n          - all\n    Limit:\n      name: limit\n      in: query\n      description: The maximum number of orders in response.\n      schema:\n        type: integer\n        example: 500\n    After:\n      name: after\n      in: query\n      description: The response will include only ones submitted after this timestamp (exclusive.)\n      schema:\n        type: string\n        format: date-time\n        example: '2021-03-16T18:38:01.942282Z'\n    Until:\n      name: until\n      in: query\n      description: The response will include only ones submitted until this timestamp (exclusive.)\n      schema:\n        type: string\n        format: date-time\n        example: '2021-03-16T18:38:01.942282Z'\n    Direction:\n      name: direction\n      in: query\n      description: The chronological order of response based on the submission time. asc or desc. Defaults to desc.\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n        example: desc\n    Sort:\n      name: sort\n      in: query\n      description: The chronological order of response based on the submission time. asc or desc. Defaults to desc.\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n        example: desc\n    Nested:\n      name: nested\n      in: query\n      description: 'If true, the result will roll up multi-leg orders under the legs field of primary order.'\n      schema:\n        type: boolean\n        example: false\n    Symbols:\n      name: symbols\n      in: query\n      description: A comma-separated list of symbols to filter by.\n      schema:\n        type: string\n        example: 'AAPL,TSLA,MSFT'\n    AccountID:\n      name: account_id\n      in: path\n      required: true\n      description: Account identifier.\n      schema:\n        type: string\n        format: uuid\n    OrderID:\n      name: order_id\n      in: path\n      required: true\n      description: Order identifier.\n      schema:\n        type: string\n    DocumentID:\n      name: document_id\n      in: path\n      required: true\n      description: Document identifier.\n      schema:\n        type: string\n        format: uuid\n    DocumentType:\n      name: type\n      in: query\n      required: false\n      description: See DocumentType model for reference and explanation of values\n      schema:\n        example: identity_verification\n        type: string\n        enum:\n          - identity_verification\n          - address_verification\n          - date_of_birth_verification\n          - tax_id_verification\n          - account_approval_letter\n          - cip_result\n    PageToken:\n      name: page_token\n      in: query\n      required: false\n      schema:\n        type: string\n      description: 'TODO: find a good way to generalize the description of page_tokens'\n  schemas:\n    Account:\n      type: object\n      title: ''\n      description: Represents high level account info. Used when returning entire account information would not be useful like the getAllAccounts operation\n      x-examples:\n        example-1:\n          id: 0d18ae51-3c94-4511-b209-101e1666416b\n          account_number: '9034005019'\n          status: APPROVED\n          currency: USD\n          created_at: '2019-09-30T23:55:31.185998Z'\n          last_equity: '1500.65'\n      properties:\n        id:\n          type: string\n          format: uuid\n        account_number:\n          type: string\n          nullable: true\n        status:\n          $ref: '#/components/schemas/AccountStatus'\n        crypto_status:\n          $ref: '#/components/schemas/AccountStatus'\n        currency:\n          type: string\n          description: Always \"USD\"\n          example: USD\n        created_at:\n          type: string\n          format: date-time\n        last_equity:\n          type: string\n          format: decimal\n        kyc_results:\n          $ref: '#/components/schemas/KYCResult'\n        account_type:\n          $ref: '#/components/schemas/AccountType'\n      required:\n        - id\n        - account_number\n        - status\n        - currency\n        - created_at\n        - last_equity\n    TradeAccount:\n      type: object\n      x-examples:\n        example-1:\n          id: c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4\n          account_number: '927584925'\n          status: ACTIVE\n          currency: USD\n          buying_power: '103556.8572572922'\n          regt_buying_power: '52921.2982330664'\n          daytrading_buying_power: '103556.8572572922'\n          cash: '24861.91'\n          cash_withdrawable: '17861.91'\n          cash_transferable: '24861.91'\n          accrued_fees: '0'\n          pending_transfer_out: '0'\n          portfolio_value: '28059.3882330664'\n          pattern_day_trader: true\n          trading_blocked: false\n          transfers_blocked: false\n          account_blocked: false\n          created_at: '2021-03-01T13:28:49.270232Z'\n          trade_suspended_by_user: false\n          multiplier: '2'\n          shorting_enabled: true\n          equity: '28059.3882330664'\n          last_equity: '26977.323677655'\n          long_market_value: '3197.4782330664'\n          short_market_value: '0'\n          initial_margin: '1598.7391165332'\n          maintenance_margin: '959.24346991992'\n          last_maintenance_margin: '934.6241032965'\n          sma: '26758.0590204615'\n          daytrade_count: 0\n          previous_close: '2021-04-01T19:00:00-04:00'\n          last_long_market_value: '3115.413677655'\n          last_short_market_value: '0'\n          last_cash: '23861.91'\n          last_initial_margin: '1557.7068388275'\n          last_regt_buying_power: '50839.233677655'\n          last_daytrading_buying_power: '104433.9158860662'\n          last_buying_power: '104433.9158860662'\n          last_daytrade_count: 0\n          clearing_broker: VELOX\n        example-2:\n          id: 56712986-9ff7-4d8f-8e52-077e099e533e\n          account_number: '601612064'\n          status: ACTIVE\n          crypto_status: PAPER_ONLY\n          currency: USD\n          buying_power: '83567.42'\n          regt_buying_power: '83567.42'\n          daytrading_buying_power: '0'\n          non_marginable_buying_power: '41783.71'\n          cash: '83567.42'\n          cash_withdrawable: '0'\n          cash_transferable: '41783.71'\n          accrued_fees: '0'\n          pending_transfer_out: '0'\n          pending_transfer_in: '0'\n          portfolio_value: '83567.42'\n          pattern_day_trader: false\n          trading_blocked: false\n          transfers_blocked: false\n          account_blocked: false\n          created_at: '2022-01-21T21:25:26.713802Z'\n          trade_suspended_by_user: false\n          multiplier: '1'\n          shorting_enabled: false\n          equity: '83567.42'\n          last_equity: '41783.71'\n          long_market_value: '0'\n          short_market_value: '0'\n          initial_margin: '0'\n          maintenance_margin: '0'\n          last_maintenance_margin: '0'\n          sma: '0'\n          daytrade_count: 0\n          previous_close: '2022-02-08T19:00:00-05:00'\n          last_long_market_value: '0'\n          last_short_market_value: '0'\n          last_cash: '41783.71'\n          last_initial_margin: '0'\n          last_regt_buying_power: '41783.71'\n          last_daytrading_buying_power: '0'\n          last_buying_power: '41783.71'\n          last_daytrade_count: 0\n          clearing_broker: VELOX\n      description: |-\n        This is an extended version of the Account model found [in the trading api](https://alpaca.markets/docs/api-references/trading-api/account/#account-entity).\n\n        Extra data has been added that would be useful for brokers.\n      properties:\n        id:\n          type: string\n          example: c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4\n          format: uuid\n          description: The account ID\n        account_number:\n          type: string\n          example: '927584925'\n          description: The account number\n          nullable: true\n        status:\n          $ref: '#/components/schemas/AccountStatus'\n        currency:\n          type: string\n          example: USD\n          description: Always USD\n        buying_power:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: Current available cash buying power. If multiplier = 2 then buying_power = max(equity-initial_margin(0) * 2). If multiplier = 1 then buying_power = cash.\n        regt_buying_power:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: User’s buying power under Regulation T (excess equity - (equity - margin value) - * margin multiplier)\n        daytrading_buying_power:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: Your buying power for day trades (continuously updated value)\n        cash:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: Cash balance\n        cash_withdrawable:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: Cash available for withdrawl\n        cash_transferable:\n          type: string\n          example: '12345.6789'\n          description: Cash available for transfer (JNLC)\n        pending_transfer_out:\n          type: string\n          example: '12345.6789'\n          description: Cash pending transfer out\n        portfolio_value:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: Total value of cash + holding positions. (This field is deprecated. It is equivalent to the equity field.)\n        pattern_day_trader:\n          type: boolean\n          example: false\n          description: Whether account is flagged as pattern day trader or not\n        trading_blocked:\n          type: boolean\n          example: false\n          description: 'If true, the account is not allowed to place orders.'\n        transfers_blocked:\n          type: boolean\n          example: false\n          description: 'If true, the account is not allowed to request money transfers.'\n        account_blocked:\n          type: boolean\n          example: false\n          description: 'If true, the account activity by user is prohibited.'\n        created_at:\n          type: string\n          example: '2021-03-01T13:28:49.270232Z'\n          description: Timestamp this account was created at\n        trade_suspended_by_user:\n          type: boolean\n          example: false\n          description: 'If true, the account is not allowed to place orders.'\n        multiplier:\n          type: string\n          format: decimal\n          example: '2'\n          description: '“1”, “2”, \"3\", or \"4\"'\n        shorting_enabled:\n          type: boolean\n          example: false\n          description: Flag to denote whether or not the account is permitted to short\n        equity:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: cash + long_market_value + short_market_value\n        last_equity:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: 'Equity as of previous trading day at 16:00:00 ET'\n        long_market_value:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: Real-time MtM value of all long positions held in the account\n        short_market_value:\n          type: string\n          example: '0'\n          format: decimal\n          description: Real-time MtM value of all short positions held in the account\n        initial_margin:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: Reg T initial margin requirement (continuously updated value)\n        maintenance_margin:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: Maintenance margin requirement (continuously updated value)\n        last_maintenance_margin:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: Maintenance margin requirement on the previous trading day\n        sma:\n          type: string\n          example: '12345.6789'\n          format: decimal\n          description: Value of Special Memorandum Account (will be used at a later date to provide additional buying_power)\n        daytrade_count:\n          type: integer\n          example: 0\n          description: The current number of daytrades that have been made in the last 5 trading days (inclusive of today)\n        previous_close:\n          type: string\n          example: '2021-04-01T19:00:00-04:00'\n          description: Previous sessions close time\n        last_long_market_value:\n          type: string\n          example: '12345.6789'\n          description: 'Value of all long positions as of previous trading day at 16:00:00 ET'\n        last_short_market_value:\n          type: string\n          example: '0'\n          description: 'Value of all short positions as of previous trading day at 16:00:00 ET'\n        last_cash:\n          type: string\n          example: '12345.6789'\n          description: 'Value of all cash as of previous trading day at 16:00:00 ET'\n        last_initial_margin:\n          type: string\n          example: '12345.6789'\n          description: 'Value of Reg T margin as of previous trading day at 16:00:00 ET'\n        last_regt_buying_power:\n          type: string\n          example: '12345.6789'\n          description: 'Value of Reg T buying power as of previous trading day at 16:00:00 ET'\n        last_daytrading_buying_power:\n          type: string\n          example: '12345.6789'\n          description: 'Value of daytrading buying power as of previous trading day at 16:00:00 ET'\n        last_buying_power:\n          type: string\n          example: '12345.6789'\n          description: 'Value of buying_power as of previous trading day at 16:00:00 ET'\n        last_daytrade_count:\n          type: integer\n          example: 0\n          description: 'Value of daytrade count as of previous trading day at 16:00:00 ET'\n        clearing_broker:\n          type: string\n          example: Velox\n          description: Clearing broker\n      required:\n        - id\n        - account_number\n        - status\n        - currency\n        - created_at\n        - last_equity\n        - equity\n        - cash\n        - buying_power\n    AccountStatus:\n      type: string\n      example: ACTIVE\n      enum:\n        - ONBOARDING\n        - SUBMITTED\n        - RESUBMITTED\n        - SUBMISSION_FAILED\n        - ACTION_REQUIRED\n        - EDITED\n        - ACCOUNT_UPDATED\n        - APPROVAL_PENDING\n        - REAPPROVAL_PENDING\n        - SIGNED_UP\n        - KYC_SUBMITTED\n        - LIMITED\n        - AML_REVIEW\n        - APPROVED\n        - REJECTED\n        - ACTIVE\n        - DISABLED\n        - DISABLE_PENDING\n        - ACCOUNT_CLOSED\n        - PAPER_ONLY\n      description: |\n        Designates the current status of this account\n\n        Possible Values:\n        - **ONBOARDING**\n        An application is expected for this user, but has not been submitted yet.\n        - **SUBMITTED**\n        The application has been submitted and in process.\n        - **RESUBMITTED**\n        Resubmitted is used to display when request has been re-submitted to Apex after account update\n        - **SUBMISSION_FAILED**\n        Used to display if failure on submission\n        - **ACTION_REQUIRED**\n        The application requires manual action.\n        - **EDITED**\n        Application was edited (e.g. to match info from uploaded docs). This is a transient status.\n        - **ACCOUNT_UPDATED**\n        Used to display when Account has been modified by user\n        - **APPROVAL_PENDING**\n        Initial value. The application approval process is in process.\n        - **REAPPROVAL_PENDING**\n        This is a transient status used to display once apex approves a re-submission\n        - **SIGNED_UP**\n        Users who were directed to and competed the [first stage](https://app.alpaca.markets/signup) of v2 registration\n        - **KYC_SUBMITTED**\n        Users that have had their KYC submitted to the routed KYC Provider\n        - **LIMITED**\n        Limited Users that pass KYC but are missing financial_information and employment_details\n        - **AML_REVIEW**\n        Users that pass KYC but from a restricted/high risk country and need manual AML approval\n        - **APPROVED**\n        The account application has been approved, and waiting to be ACTIVE\n        - **REJECTED**\n        The account application is rejected for some reason\n        - **ACTIVE**\n        The account is fully active. Trading and funding are processed under this status.\n        - **DISABLED**\n        The account is disabled after ACTIVE status.\n        - **DISABLE_PENDING**\n        DisablePending is used for accounts which requested to be disabled, but have not been processed yet.\n        - **ACCOUNT_CLOSED**\n        The account is closed.\n        - **PAPER_ONLY**\n        Used to display when only paper trading is allowed for this account\n    AccountType:\n      type: string\n      title: AccountType\n      description: |-\n        Possible values are:\n\n        - trading\n        - custodial\n        - donor_advised\n        - traditional\n        - traditional_rollover\n        - roth_rollover\n        - roth\n        - trust\n      enum:\n        - trading\n        - custodial\n        - donor_advised\n        - traditional\n        - traditional_rollover\n        - roth_rollover\n        - roth\n        - trust\n      example: trading\n    AccountExtended:\n      type: object\n      description: 'Represents an account with all data available. If your api response is missing some of these fields, there is a good chance you are using a route that returns `Account` instances instead of these.'\n      x-examples:\n        example-1:\n          id: 3dcb795c-3ccc-402a-abb9-07e26a1b1326\n          account_number: '601842165'\n          status: ACTIVE\n          crypto_status: PAPER_ONLY\n          currency: USD\n          last_equity: '40645.13'\n          created_at: '2022-01-21T21:25:26.583576Z'\n          contact:\n            email_address: strange_elbakyan_97324509@example.com\n            phone_number: 614-555-0697\n            street_address:\n              - 20 N San Mateo Dr\n            city: San Mateo\n            state: CA\n            postal_code: '94401'\n          identity:\n            given_name: Strange\n            family_name: Elbakyan\n            date_of_birth: '1970-01-01'\n            tax_id_type: USA_SNN\n            country_of_citizenship: USA\n            country_of_birth: USA\n            country_of_tax_residence: USA\n            funding_source:\n              - employment_income\n            visa_type: null\n            visa_expiration_date: null\n            date_of_departure_from_usa: null\n            permanent_resident: null\n          disclosures:\n            is_control_person: false\n            is_affiliated_exchange_or_finra: false\n            is_politically_exposed: false\n            immediate_family_exposed: false\n            is_discretionary: false\n          agreements:\n            - agreement: margin_agreement\n              signed_at: '2022-01-21T21:25:26.579487214Z'\n              ip_address: 127.0.0.1\n              revision: null\n            - agreement: customer_agreement\n              signed_at: '2022-01-21T21:25:26.579487214Z'\n              ip_address: 127.0.0.1\n              revision: null\n            - agreement: account_agreement\n              signed_at: '2022-01-21T21:25:26.579487214Z'\n              ip_address: 127.0.0.1\n              revision: null\n          documents:\n            - document_type: identity_verification\n              document_sub_type: passport\n              id: d5af1585-6c60-494d-9ea5-c5df62704229\n              content: 'https://s3.amazonaws.com/stg.alpaca.markets/documents/accounts/3dcb795c-3ccc-402a-abb9-07e26a1b1326/2490f5d9-8988-4405-a3e0-d76e65de13c2.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=AKIAJLDF4SCWSL6HUQKA%2F20220210%2Fus-east-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20220210T162205Z\u0026X-Amz-Expires=900\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Signature=bc6cc0f541d569623f3973fb83734d7960a69886e8b175a9d472f666b87419f1'\n              created_at: '2022-01-21T21:25:28.184231Z'\n          trusted_contact:\n            given_name: Jane\n            family_name: Doe\n            email_address: strange_elbakyan_97324509@example.com\n          account_type: trading\n          trading_configurations: null\n      properties:\n        id:\n          type: string\n          format: uuid\n        account_number:\n          type: string\n          nullable: true\n        status:\n          $ref: '#/components/schemas/AccountStatus'\n        crypto_status:\n          $ref: '#/components/schemas/AccountStatus'\n        kyc_result:\n          $ref: '#/components/schemas/KYCResult'\n        currency:\n          type: string\n          description: Always \"USD\"\n          example: USD\n        last_equity:\n          type: string\n          format: decimal\n        created_at:\n          type: string\n          format: date-time\n        contact:\n          $ref: '#/components/schemas/Contact'\n        identity:\n          $ref: '#/components/schemas/Identity'\n        disclosures:\n          $ref: '#/components/schemas/Disclosures'\n        agreements:\n          type: array\n          items:\n            $ref: '#/components/schemas/Agreement'\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/ApplicationDocument'\n        trusted_contact:\n          $ref: '#/components/schemas/TrustedContact'\n        account_name:\n          type: string\n        account_type:\n          $ref: '#/components/schemas/AccountType'\n        custodial_account_type:\n          type: string\n          enum:\n            - UTMA\n            - UGMA\n          description: '\"UGMA\" or \"UTMA\" only used when account_type is \"custodial\"'\n        minor_identity:\n          $ref: '#/components/schemas/CustodialAccountMinorIdentity'\n        trading_configurations:\n          $ref: '#/components/schemas/AccountConfigurations'\n      required:\n        - id\n        - account_number\n        - status\n        - currency\n        - last_equity\n        - created_at\n        - account_type\n    AccountUpdateRequest:\n      type: object\n      x-examples:\n        example-1:\n          contact:\n            email_address: john.doe@example.com\n            phone_number: '+15556667788'\n            street_address:\n              - 20 N San Mateo Dr\n            city: San Mateo\n            state: CA\n            postal_code: '94401'\n          identity:\n            given_name: John\n            family_name: Doe\n            date_of_birth: '1990-01-01'\n            tax_id: 666-55-4321\n            tax_id_type: USA_SSN\n            country_of_citizenship: AUS\n            country_of_birth: AUS\n            country_of_tax_residence: USA\n            funding_source:\n              - employment_income\n          disclosures:\n            is_control_person: false\n            is_affiliated_exchange_or_finra: false\n            is_politically_exposed: false\n            immediate_family_exposed: false\n          trustedContact:\n            given_name: Jane\n            family_name: Doe\n            email_address: jane.doe@example.com\n      properties:\n        contact:\n          $ref: '#/components/schemas/Contact'\n        identity:\n          $ref: '#/components/schemas/Identity'\n        disclosures:\n          $ref: '#/components/schemas/Disclosures'\n        trustedContact:\n          $ref: '#/components/schemas/TrustedContact'\n    AccountDocument:\n      type: object\n      description: |\n        If an account has documents on the application submission,\n        it has the ApplicationDocument model in exchange with\n        DocumentUploadRequest.\n      properties:\n        id:\n          type: string\n          format: uuid\n        document_type:\n          $ref: '#/components/schemas/DocumentType'\n        document_sub_type:\n          type: string\n        mime_type:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n      required:\n        - id\n        - document_type\n        - created_at\n      example:\n        id: 0d18ae51-3c94-4511-b209-101e1666416b\n        document_type: identity_verification\n        document_sub_type: passport\n        mime_type: image/jpeg\n        created_at: '2019-09-30T23:55:31.185998Z'\n    CustodialAccountMinorIdentity:\n      description: Represents Identity information for a minor that an account of type \"custodial\" is for\n      type: object\n      x-examples: {}\n      properties:\n        given_name:\n          type: string\n        family_name:\n          type: string\n        date_of_birth:\n          type: string\n          format: date\n        tax_id:\n          type: string\n        tax_id_type:\n          $ref: '#/components/schemas/TaxIdType'\n        country_of_citizenship:\n          type: string\n        country_of_birth:\n          type: string\n        country_of_tax_residence:\n          type: string\n        state:\n          type: string\n        email:\n          type: string\n          format: email\n      required:\n        - given_name\n        - family_name\n        - date_of_birth\n        - country_of_tax_residence\n        - state\n        - email\n    AccountConfigurations:\n      title: AccountConfigurations\n      type: object\n      description: Represents additional configuration settings for an account\n      properties:\n        dtbp_check:\n          type: string\n          description: 'both, entry, or exit. Controls Day Trading Margin Call (DTMC) checks.'\n          example: both\n          enum:\n            - both\n            - entry\n            - exit\n        trade_confirm_email:\n          type: string\n          description: 'all or none. If none, emails for order fills are not sent.'\n          enum:\n            - all\n            - none\n        suspend_trade:\n          type: boolean\n          description: 'If true, new orders are blocked.'\n        no_shorting:\n          type: boolean\n          description: 'If true, account becomes long-only mode.'\n        fractional_trading:\n          type: boolean\n          description: 'If true, account is able to participate in fractional trading'\n        max_margin_multiplier:\n          type: string\n          description: Can be \"1\" or \"2\"\n        pdt_check:\n          type: string\n          example: entry\n      required:\n        - dtbp_check\n        - trade_confirm_email\n        - suspend_trade\n        - no_shorting\n        - fractional_trading\n        - max_margin_multiplier\n        - pdt_check\n    AccountCreationRequest:\n      type: object\n      title: AccountCreationRequest\n      description: Represents the fields required to create a new account\n      properties:\n        contact:\n          $ref: '#/components/schemas/Contact'\n        identity:\n          $ref: '#/components/schemas/Identity'\n        disclosures:\n          $ref: '#/components/schemas/Disclosures'\n        agreements:\n          type: array\n          description: 'The client has to present the Alpaca Account and Margin Agreements to the end user, and have them read full sentences.'\n          items:\n            $ref: '#/components/schemas/Agreement'\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/DocumentUploadRequest'\n        trusted_contact:\n          $ref: '#/components/schemas/TrustedContact'\n      required:\n        - contact\n        - identity\n        - disclosures\n        - agreements\n    TaxIdType:\n      type: string\n      title: TaxIdType\n      enum:\n        - NOT_SPECIFIED\n        - USA_SSN\n        - ARG_AG_CUIT\n        - AUS_TFN\n        - AUS_ABN\n        - BOL_NIT\n        - BRA_CPF\n        - CHL_RUT\n        - COL_NIT\n        - CRI_NITE\n        - DEU_TAX_ID\n        - DOM_RNC\n        - ECU_RUC\n        - FRA_SPI\n        - GBR_UTR\n        - GBR_NINO\n        - GTM_NIT\n        - HND_RTN\n        - HUN_TIN\n        - IDN_KTP\n        - IND_PAN\n        - ISR_TAX_ID\n        - ITA_TAX_ID\n        - JPN_TAX_ID\n        - MEX_RFC\n        - NIC_RUC\n        - NLD_TIN\n        - PAN_RUC\n        - PER_RUC\n        - PRY_RUC\n        - SGP_NRIC\n        - SGP_FIN\n        - SGP_ASGD\n        - SGP_ITR\n        - SLV_NIT\n        - SWE_TAX_ID\n        - URY_RUT\n        - VEN_RIF\n      description: |-\n        An Enum of the various kinds of Tax ID formats Alpaca supports.\n\n        Possible Values are:\n\n\n        - **USA_SSN**\n        USA Social Security Number\n\n        - **ARG_AR_CUIT**\n        Argentina CUIT\n\n        - **AUS_TFN**\n        Australian Tax File Number\n\n        - **AUS_ABN**\n        Australian Business Number\n\n        - **BOL_NIT**\n        Bolivia NIT\n\n        - **BRA_CPF**\n        Brazil CPF\n\n        - **CHL_RUT**\n        Chile RUT\n\n        - **COL_NIT**\n        Colombia NIT\n\n        - **CRI_NITE**\n        Costa Rica NITE\n\n        - **DEU_TAX_ID**\n        Germany Tax ID (Identifikationsnummer)\n\n        - **DOM_RNC**\n        Dominican Republic RNC\n\n        - **ECU_RUC**\n        Ecuador RUC\n\n        - **FRA_SPI**\n        France SPI (Reference Tax Number)\n\n        - **GBR_UTR**\n        UK UTR (Unique Taxpayer Reference)\n\n        - **GBR_NINO**\n        UK NINO (National Insurance Number)\n\n        - **GTM_NIT**\n        Guatemala NIT\n\n        - **HND_RTN**\n        Honduras RTN\n\n        - **HUN_TIN**\n        Hungary TIN Number\n\n        - **IDN_KTP**\n        Indonesia KTP\n\n        - **IND_PAN**\n        India PAN Number\n\n        - **ISR_TAX_ID**\n        Israel Tax ID (Teudat Zehut)\n\n        - **ITA_TAX_ID**\n        Italy Tax ID (Codice Fiscale)\n\n        - **JPN_TAX_ID**\n        Japan Tax ID (Koijin Bango)\n\n        - **MEX_RFC**\n        Mexico RFC\n\n        - **NIC_RUC**\n        Nicaragua RUC\n\n        - **NLD_TIN**\n        Netherlands TIN Number\n\n        - **PAN_RUC**\n        Panama RUC\n\n        - **PER_RUC**\n        Peru RUC\n\n        - **PRY_RUC**\n        Paraguay RUC\n\n        - **SGP_NRIC**\n        Singapore NRIC\n\n        - **SGP_FIN**\n        Singapore FIN\n\n        - **SGP_ASGD**\n        Singapore ASGD\n\n        - **SGP_ITR**\n        Singapore ITR\n\n        - **SLV_NIT**\n        El Salvador NIT\n\n        - **SWE_TAX_ID**\n        Sweden Tax ID (Personnummer)\n\n        - **URY_RUT**\n        Uruguay RUT\n\n        - **VEN_RIF**\n        Venezuela RIF\n\n        - **NOT_SPECIFIED**\n        Other Tax IDs\n      example: USA_SSN\n    ApplicationDocument:\n      type: object\n      description: |\n        If an account has documents on the application submission,\n        it has the ApplicationDocument model in exchange with\n        DocumentUpload.\n      properties:\n        id:\n          type: string\n          format: uuid\n        document_type:\n          $ref: '#/components/schemas/DocumentType'\n        document_sub_type:\n          type: string\n        mime_type:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n      required:\n        - id\n        - document_type\n        - created_at\n      example:\n        id: 0d18ae51-3c94-4511-b209-101e1666416b\n        document_type: identity_verification\n        document_sub_type: passport\n        mime_type: image/jpeg\n        created_at: '2019-09-30T23:55:31.185998Z'\n    DocumentUpload:\n      type: object\n      description: |\n        If an account has documents after the submission, it has\n        the Document model in exchange with DocumentUpload.\n      properties:\n        document_type:\n          $ref: '#/components/schemas/DocumentType'\n        document_sub_type:\n          type: string\n          example: passport\n        content:\n          type: string\n          format: base64\n          example: /9j/Cg==\n        mime_type:\n          type: string\n          example: image/jpeg\n      required:\n        - document_type\n        - content\n        - mime_type\n      example:\n        document_type: identity_verification\n        document_sub_type: passport\n        content: /9j/Cg==\n        mime_type: image/jpeg\n    Activity:\n      title: Activity\n      description: Base for activity types\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: string\n              example: '20220208125959696::88b5f678-fef5-447b-af15-f21e367e6d8c'\n            account_id:\n              type: string\n              format: uuid\n              example: c8f1ef5d-edc0-4f23-9ee4-378f19cb92a4\n            activity_type:\n              $ref: '#/components/schemas/ActivityType'\n        - oneOf:\n            - $ref: '#/components/schemas/TradeActivity'\n            - $ref: '#/components/schemas/NonTradeActivity'\n      required:\n        - id\n        - activity_type\n    ActivityType:\n      title: ActivityType\n      type: string\n      enum:\n        - FILL\n        - ACATC\n        - ACATS\n        - CIL\n        - CSD\n        - CSW\n        - DIV\n        - DIVCGL\n        - DIVCGS\n        - DIVNRA\n        - DIVROC\n        - DIVTXEX\n        - FEE\n        - INT\n        - JNLC\n        - JNLS\n        - MA\n        - PTC\n        - REORG\n        - SPIN\n        - SPLIT\n      description: |-\n        Represents the various kinds of activity.\n\n        TradeActivity's will always have the type `FILL`\n\n        - **FILL**\n          Order Fills (Partial/Full)\n        - **ACATC**\n          ACATS IN/OUT (Cash)\n        - **ACATS**\n          ACATS IN/OUT (Securities)\n        - **CIL**\n          Cash in Lieu of Stock\n        - **CSD**\n          Cash Disbursement (+)\n        - **CSW**\n          Cash Withdrawable\n        - **DIV**\n          Dividend\n        - **DIVCGL**\n          Dividend (Capital Gain Long Term)\n        - **DIVCGS**\n          Dividend (Capital Gain Short Term)\n        - **DIVNRA**\n          Dividend Adjusted (NRA Withheld)\n        - **DIVROC**\n          Dividend Return of Capital\n        - **DIVTXEX**\n          Dividend (Tax Exempt)\n        - **FEE**\n          REG and TAF Fees\n        - **INT**\n          Interest (Credit/Margin)\n        - **JNLC**\n          Journal Entry (Cash)\n        - **JNLS**\n          Journal Entry (Stock)\n        - **MA**\n          Merger/Acquisition\n        - **PTC**\n          Pass Thru Change\n        - **REORG**\n          Reorg CA\n        - **SPIN**\n          Stock Spinoff\n        - **SPLIT**\n          Stock Split\n    TradeActivity:\n      title: TradeActivity\n      type: object\n      properties:\n        transaction_time:\n          type: string\n          format: date-time\n          example: '2021-05-10T14:01:04.650275Z'\n          description: Valid only for trading activity types. Null for non-trading activites.\n        type:\n          type: string\n          enum:\n            - fill\n            - partial_fill\n          example: fill\n          description: Valid only for trading activity types. Null for non-trading activites.\n        price:\n          type: string\n          format: decimal\n          example: '3.1415'\n          description: Valid only for trading activity types. Null for non-trading activites.\n        qty:\n          type: string\n          format: decimal\n          example: '0.38921'\n          description: Valid only for trading activity types. Null for non-trading activites.\n        side:\n          $ref: '#/components/schemas/OrderSide'\n        symbol:\n          type: string\n          example: AAPL\n          description: Valid only for trading activity types. Null for non-trading activites.\n        leaves_qty:\n          type: string\n          format: decimal\n          example: '0.5123'\n          description: Valid only for trading activity types. Null for non-trading activites.\n        order_id:\n          type: string\n          format: uuid\n          example: fe060a1b-5b45-4eba-ba46-c3a3345d8255\n          description: Valid only for trading activity types. Null for non-trading activites.\n        cum_qty:\n          type: string\n          format: decimal\n          example: '0.9723'\n          description: Valid only for trading activity types. Null for non-trading activites.\n        order_status:\n          $ref: '#/components/schemas/OrderStatus'\n    NonTradeActivity:\n      title: NonTradeActivity\n      type: object\n      properties:\n        date:\n          type: string\n          format: date\n          example: '2021-05-21'\n          description: Valid only for non-trading activity types. Null for trading activites.\n        net_amount:\n          type: string\n          format: decimal\n          example: '1234'\n          description: Valid only for non-trading activity types. Null for trading activites.\n        description:\n          type: string\n          example: Example description\n          description: Valid only for non-trading activity types. Null for trading activites.\n        status:\n          type: string\n          enum:\n            - executed\n            - correct\n            - canceled\n          example: executed\n          description: Valid only for non-trading activity types. Null for trading activites.\n        symbol:\n          type: string\n          example: AAPL\n          description: Valid only for non-trading activity types. Null for trading activites.\n        qty:\n          type: string\n          format: decimal\n          example: '0.38921'\n          description: Valid only for non-trading activity types. Null for trading activites.\n        per_share_amount:\n          type: string\n          format: decimal\n          example: '0.38921'\n          description: Valid only for non-trading activity types. Null for trading activites.\n    ActivityItem:\n      title: ActivityItem\n      anyOf:\n        - $ref: '#/components/schemas/TradeActivity'\n        - $ref: '#/components/schemas/NonTradeActivity'\n    DocumentType:\n      type: string\n      enum:\n        - identity_verification\n        - address_verification\n        - date_of_birth_verification\n        - tax_id_verification\n        - account_approval_letter\n        - cip_result\n      description: |\n        - identity_verification:\n          identity verification document\n\n        - address_verification:\n          address verification document\n\n        - date_of_birth_verification:\n          date of birth verification document\n\n        - tax_id_verification:\n          tax ID verification document\n\n        - account_approval_letter:\n          407 approval letter\n\n        - cip_result:\n          initial CIP result\n      example: identity_verification\n    DocumentUploadRequest:\n      type: object\n      description: |\n        If an account has documents after the submission, it has\n        the Document model in exchange with DocumentUploadRequest.\n      properties:\n        document_type:\n          $ref: '#/components/schemas/DocumentType'\n        document_sub_type:\n          type: string\n          example: passport\n        content:\n          type: string\n          format: base64\n          example: /9j/Cg==\n        mime_type:\n          type: string\n          example: image/jpeg\n      required:\n        - document_type\n        - content\n        - mime_type\n      example:\n        document_type: identity_verification\n        document_sub_type: passport\n        content: /9j/Cg==\n        mime_type: image/jpeg\n      title: DocumentUploadRequest\n      x-examples:\n        example-1:\n          document_type: identity_verification\n          document_sub_type: passport\n          content: /9j/Cg==\n          mime_type: image/jpeg\n    KYCResult:\n      type: object\n      description: 'Hold information about the result of KYC. Please see the documentation [here](https://alpaca.markets/docs/api-references/broker-api/events/#kyc-results) for more indepth details'\n      properties:\n        reject:\n          type: object\n        accept:\n          type: object\n        indeterminate:\n          type: object\n        addidional_information:\n          type: string\n    StreetAddress:\n      type: string\n      example: 20 N San Mateo Dr\n    Contact:\n      type: object\n      description: |\n        Contact is the model for the account owner contact information.\n      properties:\n        email_address:\n          type: string\n          format: email\n          example: john.doe@example.com\n        phone_number:\n          type: string\n          description: 'with country code, no hyphen or space'\n          example: '+15556667788'\n        street_address:\n          type: array\n          items:\n            $ref: '#/components/schemas/StreetAddress'\n        city:\n          type: string\n          example: San Mateo\n        state:\n          type: string\n          example: CA\n        postal_code:\n          type: string\n          example: '94401'\n    Identity:\n      type: object\n      description: |\n        Identity is the model to provide account owner’s identity information.\n      example:\n        given_name: John\n        family_name: Doe\n        date_of_birth: '1990-01-01'\n        tax_id: 666-55-4321\n        tax_id_type: USA_SSN\n        country_of_citizenship: AUS\n        country_of_birth: AUS\n        country_of_tax_residence: USA\n        funding_source:\n          - employment_income\n      properties:\n        given_name:\n          type: string\n          example: John\n        family_name:\n          type: string\n          example: Doe\n        date_of_birth:\n          type: string\n          format: date\n          example: '1990-01-01'\n        tax_id:\n          type: string\n          example: 666-55-4321\n        tax_id_type:\n          $ref: '#/components/schemas/TaxIdType'\n        country_of_citizenship:\n          type: string\n          description: |\n            [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n          example: USA\n        country_of_birth:\n          type: string\n          description: |\n            [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n          example: USA\n        country_of_tax_residence:\n          type: string\n          description: |\n            [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n          example: USA\n        funding_source:\n          type: array\n          items:\n            type: string\n            enum:\n              - employment_income\n              - investments\n              - inheritance\n              - business_income\n              - savings\n              - family\n        annual_income_min:\n          type: number\n        annual_income_max:\n          type: number\n        liquid_net_worth_min:\n          type: number\n        liquid_net_worth_max:\n          type: number\n        total_net_worth_min:\n          type: number\n        total_net_worth_max:\n          type: number\n        extra:\n          type: object\n          description: |\n            any extra information used for KYC purposes\n      required:\n        - given_name\n        - family_name\n        - date_of_birth\n        - country_of_tax_residence\n        - funding_source\n    Disclosures:\n      type: object\n      description: |\n        Disclosures fields denote if the account owner falls under\n        each category defined by FINRA rule. The client has to ask\n        questions for the end user and the values should reflect\n        their answers.\n        If one of the answers is true (yes), the account goes into\n        ACTION_REQUIRED status.\n      example:\n        is_control_person: false\n        is_affiliated_exchange_or_finra: false\n        is_politically_exposed: false\n        immediate_family_exposed: false\n      properties:\n        employment_status:\n          type: string\n          enum:\n            - unemployed\n            - employed\n            - student\n            - retired\n        employer_name:\n          type: string\n        employer_address:\n          type: string\n        employment_position:\n          type: string\n        is_control_person:\n          type: boolean\n        is_affiliated_exchange_or_finra:\n          type: boolean\n        is_politically_exposed:\n          type: boolean\n        immediate_family_exposed:\n          type: boolean\n        context:\n          type: array\n          description: 'Array of annotations describing the rational for marking `is_control_person`, `is_affiliated_exchange_or_finra`, and/or `immediate_family_exposed` as true'\n          nullable: true\n          items:\n            $ref: '#/components/schemas/DisclosureContextAnnotation'\n      required:\n        - is_control_person\n        - is_affiliated_exchange_or_finra\n        - is_politically_exposed\n        - immediate_family_exposed\n    Agreement:\n      type: object\n      properties:\n        agreement:\n          $ref: '#/components/schemas/AgreementType'\n        signed_at:\n          type: string\n          example: '2019-09-11T18:09:33Z'\n          format: date-time\n        ip_address:\n          type: string\n          format: ipv4\n          example: 185.13.21.99\n        revision:\n          type: string\n      required:\n        - agreement\n        - signed_at\n        - ip_address\n    AgreementType:\n      type: string\n      title: AgreementType\n      description: |\n        - margin_agreement: Alpaca Margin Agreement\n        - account_agreement: Alpaca Account Agreement\n        - customer_agreement: Alpaca Customer Agreement\n        - crypto_agreement: Alpaca Crypto agreement\n      enum:\n        - margin_agreement\n        - account_agreement\n        - customer_agreement\n        - crypto_agreement\n      example: customer_agreement\n    Agreements:\n      type: array\n      description: 'The client has to present Alpaca Account Agreement and Margin Agreement to the end user, and have them read full sentences.'\n      items:\n        $ref: '#/components/schemas/Agreement'\n    TrustedContact:\n      type: object\n      description: |\n        This model input is optional. However, the client should\n        make reasonable effort to obtain the trusted contact information.\n        See more details in [FINRA Notice 17-11](https://www.finra.org/sites/default/files/Regulatory-Notice-17-11.pdf)\n      properties:\n        given_name:\n          type: string\n          example: Jane\n        family_name:\n          type: string\n          example: Doe\n        email_address:\n          type: string\n          format: email\n          description: |\n            at least one of `email_address`, `phone_number` or\n            `street_address` is required\n          example: jane.doe@example.com\n        phone_number:\n          type: string\n          description: |\n            at least one of `email_address`, `phone_number` or\n            `street_address` is required\n        street_address:\n          type: array\n          items:\n            type: string\n          description: |\n            at least one of `email_address`, `phone_number` or\n            `street_address` is required\n        city:\n          type: string\n          description: |\n            required if `street_address` is set\n        state:\n          type: string\n          description: |\n            required if `street_address` is set\n        postal_code:\n          type: string\n          description: |\n            required if `street_address` is set\n        country:\n          type: string\n          description: |\n            [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).\n            required if `street_address` is set\n      required:\n        - given_name\n        - family_name\n      example:\n        given_name: Jane\n        family_name: Doe\n        email_address: jane.doe@example.com\n    CreateOrderRequest:\n      type: object\n      description: ''\n      properties:\n        symbol:\n          type: string\n          example: AAPL\n          description: Symbol or asset ID to identify the asset to trade\n        qty:\n          type: string\n          format: decimal\n          example: '4.124'\n          description: Number of shares to trade. Can be fractionable for only market and day order types.\n        notional:\n          type: string\n          format: decimal\n          example: '3'\n          description: Dollar amount to trade. Cannot work with qty. Can only work for market order types and time_in_force = day.\n        side:\n          $ref: '#/components/schemas/OrderSide'\n        type:\n          $ref: '#/components/schemas/OrderType'\n        time_in_force:\n          $ref: '#/components/schemas/TimeInForce'\n        limit_price:\n          type: string\n          format: decimal\n          example: '3.14'\n          description: Required if type is limit or stop_limit\n        stop_price:\n          type: string\n          format: decimal\n          example: '3.14'\n          description: Required if type is stop or stop_limit\n        trail_price:\n          type: string\n          format: decimal\n          example: '3.14'\n          description: 'If type is trailing_stop, then one of trail_price or trail_percent is required'\n        trail_percent:\n          type: string\n          format: decimal\n          example: '5.0'\n          description: 'If type is trailing_stop, then one of trail_price or trail_percent is required'\n        extended_hours:\n          type: boolean\n          example: false\n          description: 'Defaults to false. If true, order will be eligible to execute in premarket/afterhours. Only works with type limit and time_in_force = day.'\n        client_order_id:\n          type: string\n          example: eb9e2aaa-f71a-4f51-b5b4-52a6c565dad4\n          description: A unique identifier for the order. Automatically generated if not sent. (\u003c= 48 characters)\n          maxLength: 48\n        order_class:\n          $ref: '#/components/schemas/OrderClass'\n        take_profit:\n          type: object\n          description: Takes in a string/number value for limit_price\n          properties:\n            limit_price:\n              type: string\n              format: decimal\n              example: '3.14'\n        stop_loss:\n          description: Takes in a string/number values for stop_price and limit_price\n          type: object\n          properties:\n            stop_price:\n              type: string\n              format: decimal\n              example: '3.14'\n            limit_price:\n              type: string\n              format: decimal\n              example: '3.14'\n        commission:\n          type: string\n          format: decimal\n          example: '1.0'\n          description: The commission you want to collect from the user.\n      required:\n        - symbol\n        - side\n        - type\n        - time_in_force\n    AssetClass:\n      type: string\n      enum:\n        - us_equity\n        - crypto\n    OrderType:\n      type: string\n      enum:\n        - market\n        - limit\n        - stop\n        - stop_limit\n        - trailing_stop\n      example: stop\n    OrderSide:\n      type: string\n      enum:\n        - buy\n        - sell\n        - buy_minus\n        - sell_plus\n        - sell_short\n        - sell_short_exempt\n        - undisclosed\n        - cross\n        - cross_short\n      example: buy\n      description: Represents what side of the transaction an order was on.\n    OrderClass:\n      type: string\n      enum:\n        - simple\n        - bracket\n        - oco\n        - oto\n      example: bracket\n    TimeInForce:\n      type: string\n      enum:\n        - day\n        - gtc\n        - opg\n        - cls\n        - ioc\n        - fok\n      example: gtc\n    OrderStatus:\n      type: string\n      enum:\n        - new\n        - partially_filled\n        - filled\n        - done_for_day\n        - canceled\n        - expired\n        - replaced\n        - pending_cancel\n        - pending_replace\n        - accepted\n        - pending_new\n        - accepted_for_bidding\n        - stopped\n        - rejected\n        - suspended\n        - calculated\n      example: filled\n    Order:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: 61e69015-8549-4bfd-b9c3-01e75843f47d\n        client_order_id:\n          type: string\n          example: 61e69015-8549-4bfd-b9c3-01e75843f47d\n        created_at:\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n        submitted_at:\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n        filled_at:\n          nullable: true\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n        expired_at:\n          nullable: true\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n        canceled_at:\n          nullable: true\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n        failed_at:\n          nullable: true\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n        replaced_at:\n          nullable: true\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n        replaced_by:\n          nullable: true\n          type: string\n          format: uuid\n          example: 61e69015-8549-4bfd-b9c3-01e75843f47d\n        replaces:\n          nullable: true\n          type: string\n          format: uuid\n          example: 61e69015-8549-4bfd-b9c3-01e75843f47d\n        asset_id:\n          type: string\n          format: uuid\n          example: 61e69015-8549-4bfd-b9c3-01e75843f47d\n        symbol:\n          type: string\n          example: AALP\n        asset_class:\n          $ref: '#/components/schemas/AssetClass'\n        notional:\n          nullable: true\n          type: string\n          format: decimal\n          example: '4.2'\n        qty:\n          nullable: true\n          type: string\n          format: decimal\n          example: '4.2'\n        filled_qty:\n          type: string\n          format: decimal\n          example: '4.2'\n        filled_avg_price:\n          nullable: true\n          type: string\n          format: decimal\n          example: '4.2'\n        order_class:\n          $ref: '#/components/schemas/OrderClass'\n        order_type:\n          $ref: '#/components/schemas/OrderType'\n        type:\n          $ref: '#/components/schemas/OrderType'\n        side:\n          $ref: '#/components/schemas/OrderSide'\n        time_in_force:\n          $ref: '#/components/schemas/TimeInForce'\n        limit_price:\n          nullable: true\n          type: string\n          format: decimal\n          example: '3.14'\n        stop_price:\n          nullable: true\n          type: string\n          format: decimal\n          example: '3.14'\n        status:\n          $ref: '#/components/schemas/OrderStatus'\n        extended_hours:\n          type: boolean\n          example: true\n        legs:\n          nullable: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Order'\n        trail_price:\n          nullable: true\n          type: string\n          format: decimal\n          example: '3.14'\n        trail_percent:\n          nullable: true\n          type: string\n          format: decimal\n          example: '5.0'\n        hwm:\n          nullable: true\n          type: string\n          format: decimal\n          example: '3.14'\n        commission:\n          type: string\n          format: decimal\n          example: '3.14'\n      required:\n        - id\n        - symbol\n    UpdateOrderRequest:\n      type: object\n      title: OrderUpdateRequest\n      description: |-\n        Represents the fields that are editable in an order replace/update call.\n\n        Note: client_order_id is currently not editable on its own, one of the other fields must be changed at the same time to effectively replace the order\n      properties:\n        qty:\n          type: string\n          format: decimal\n          example: '4.2'\n          description: You can only patch full shares for now\n        time_in_force:\n          $ref: '#/components/schemas/TimeInForce'\n        limit_price:\n          type: string\n          format: decimal\n          example: '3.14'\n          description: Required if original order's `type` field was limit or stop_limit\n        stop_price:\n          type: string\n          format: decimal\n          example: '3.14'\n          description: Required if original order's `type` field was stop or stop_limit\n        trail:\n          type: string\n          format: decimal\n          example: '3.14'\n          description: The new value of the trail_price or trail_percent\n        client_order_id:\n          type: string\n          example: 61e69015-8549-4bfd-b9c3-01e75843f47d\n    Bank:\n      type: object\n      x-examples:\n        example-1:\n          id: 8475c676-68e3-4cfc-a683-9ca2f47a6172\n          account_id: 56712986-9ff7-4d8f-8e52-077e099e533e\n          name: Bank XYZ\n          status: QUEUED\n          country: ''\n          state_province: ''\n          postal_code: ''\n          city: ''\n          street_address: ''\n          account_number: 123456789abc\n          bank_code: '123456789'\n          bank_code_type: ABA\n          created_at: '2022-02-11T21:35:19.268681613Z'\n          updated_at: '2022-02-11T21:35:19.268681613Z'\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: 61e69015-8549-4bfd-b9c3-01e75843f47d\n        created_at:\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n          description: 'Format: 2020-01-01T01:01:01Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n          description: 'Format: 2020-01-01T01:01:01Z'\n        account_id:\n          type: string\n          format: uuid\n        status:\n          type: string\n          enum:\n            - QUEUED\n            - SENT_TO_CLEARING\n            - APPROVED\n            - CANCELED\n          description: 'QUEUED, SENT_TO_CLEARING, APPROVED, CANCELED'\n        name:\n          type: string\n          description: Name of recipient bank\n        bank_code:\n          type: string\n          description: 9-Digit ABA RTN (Routing Number) or BIC\n        bank_code_type:\n          type: string\n          enum:\n            - ABA\n            - BIC\n          description: ABA (Domestic) or BIC (International)\n        country:\n          type: string\n          description: Only for international banks\n        state_province:\n          type: string\n          description: Only for international banks\n        postal_code:\n          type: string\n          description: Only for international banks\n        city:\n          type: string\n          description: Only for international banks\n        street_address:\n          type: string\n          description: Only for international banks\n        account_number:\n          type: string\n      required:\n        - id\n        - created_at\n        - updated_at\n        - name\n        - bank_code\n        - bank_code_type\n        - account_number\n    CreateBankRequest:\n      title: CreateBankRequest\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of recipient bank\n        bank_code:\n          type: string\n          description: 9-Digit ABA RTN (Routing Number) or BIC\n        bank_code_type:\n          type: string\n          enum:\n            - ABA\n            - BIC\n          description: ABA (Domestic) or BIC (International)\n        country:\n          type: string\n          description: Only for international banks\n        state_province:\n          type: string\n          description: Only for international banks\n        postal_code:\n          type: string\n          description: Only for international banks\n        city:\n          type: string\n          description: Only for international banks\n        street_address:\n          type: string\n          description: Only for international banks\n        account_number:\n          type: string\n      required:\n        - name\n        - bank_code\n        - bank_code_type\n        - account_number\n      description: Represents the possible fields to send when creating a new associated Bank resource for an account\n    IdentifiedResource:\n      title: IdentifiedResource\n      type: object\n      x-examples:\n        example-1:\n          id: 61e69015-8549-4bfd-b9c3-01e75843f47d\n          created_at: '2021-03-16T18:38:01.942282Z'\n          updated_at: '2021-03-16T18:38:01.942282Z'\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: 61e69015-8549-4bfd-b9c3-01e75843f47d\n        created_at:\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n          description: 'Format: 2020-01-01T01:01:01Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n          description: 'Format: 2020-01-01T01:01:01Z'\n      required:\n        - id\n        - created_at\n        - updated_at\n      description: 'TODO: Remove this model'\n      x-internal: true\n    ACHRelationship:\n      title: ACHRelationship\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: 61e69015-8549-4bfd-b9c3-01e75843f47d\n        created_at:\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n          description: 'Format: 2020-01-01T01:01:01Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2021-03-16T18:38:01.942282Z'\n          description: 'Format: 2020-01-01T01:01:01Z'\n        account_id:\n          type: string\n          format: uuid\n        status:\n          type: string\n          enum:\n            - QUEUED\n            - APPROVED\n            - PENDING\n            - CANCEL_REQUESTED\n        account_owner_name:\n          type: string\n          minLength: 1\n          description: Name of the account owner\n        bank_account_type:\n          type: string\n          minLength: 1\n          enum:\n            - CHECKING\n            - SAVINGS\n          description: Must be CHECKING or SAVINGS\n        bank_account_number:\n          type: string\n          minLength: 1\n        bank_routing_number:\n          type: string\n          minLength: 1\n        nickname:\n          type: string\n          minLength: 1\n      required:\n        - id\n        - created_at\n        - updated_at\n        - account_id\n        - status\n        - account_owner_name\n    CreateACHRelationshipRequest:\n      description: |-\n        Represents the fields used in creation of a new ACHRelationship.\n\n        You can create an ACHRelationship by passing the required fields here or if you have an account with Plaid you can use our integration with Plaid to create a relationship.\n\n        Please see the documentation [here](https://alpaca.markets/docs/api-references/broker-api/funding/ach/#plaid-integration-for-bank-transfers) for more info on using Plaid with Alpaca\n      type: object\n      title: CreateACHRelationshipRequest\n      properties:\n        account_owner_name:\n          type: string\n          minLength: 1\n        bank_account_type:\n          type: string\n          minLength: 1\n          enum:\n            - CHECKING\n            - SAVINGS\n          description: Must be CHECKING or SAVINGS\n        bank_account_number:\n          type: string\n          minLength: 1\n          description: 'In sandbox, this still must be a valid format'\n        bank_routing_number:\n          type: string\n          minLength: 1\n          description: 'In sandbox, this still must be a valid format'\n        nickname:\n          type: string\n          minLength: 1\n        processor_token:\n          type: string\n          description: 'If using Plaid, you can specify a Plaid processor token here '\n      required:\n        - account_owner_name\n        - bank_account_type\n        - bank_account_number\n        - bank_routing_number\n    UntypedACHTransferData:\n      title: UntypedACHTransferData\n      allOf:\n        - $ref: '#/components/schemas/UntypedTransferData'\n        - type: object\n          properties:\n            relationship_id:\n              type: string\n              format: uuid\n          required:\n            - relationship_id\n    TransferResource:\n      title: TransferResource\n      allOf:\n        - $ref: '#/components/schemas/IdentifiedResource'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - ach\n                - wire\n            status:\n              type: string\n              enum:\n                - QUEUED\n                - APPROVAL_PENDING\n                - PENDING\n                - SENT_TO_CLEARING\n                - REJECTED\n                - CANCELED\n                - APPROVED\n                - COMPLETE\n                - RETURNED\n            account_id:\n              type: string\n              format: uuid\n            reason:\n              type: string\n              nullable: true\n            expires_at:\n              type: string\n              format: date-time\n          required:\n            - type\n            - status\n            - account_id\n            - expires_at\n        - oneOf:\n            - $ref: '#/components/schemas/UntypedACHTransferData'\n            - $ref: '#/components/schemas/UntypedWireTransferData'\n          discriminator:\n            propertyName: type\n            mapping:\n              ach: '#/components/schemas/UntypedACHTransferData'\n              wire: '#/components/schemas/UntypedWireTransferData'\n    TransferData:\n      title: TransferData\n      allOf:\n        - type: object\n          properties:\n            transfer_type:\n              type: string\n              enum:\n                - ach\n                - wire\n            timing:\n              type: string\n              enum:\n                - immediate\n          required:\n            - transfer_type\n        - oneOf:\n            - $ref: '#/components/schemas/UntypedACHTransferData'\n            - $ref: '#/components/schemas/UntypedWireTransferData'\n          discriminator:\n            propertyName: transfer_type\n            mapping:\n              ach: '#/components/schemas/UntypedACHTransferData'\n              wire: '#/components/schemas/UntypedWireTransferData'\n    UntypedWireTransferData:\n      allOf:\n        - $ref: '#/components/schemas/UntypedTransferData'\n        - type: object\n          properties:\n            additional_information:\n              type: string\n            bank_id:\n              type: string\n              format: uuid\n          required:\n            - bank_id\n      title: UntypedWireTransferData\n    UntypedTransferData:\n      title: UntypedTransferData\n      type: object\n      properties:\n        amount:\n          type: string\n          format: decimal\n        direction:\n          type: string\n          enum:\n            - INCOMING\n            - OUTGOING\n      required:\n        - amount\n        - direction\n    CreateTransferRequest:\n      title: CreateTransferRequest\n      type: object\n      properties:\n        transfer_type:\n          $ref: '#/components/schemas/TransferType'\n        relationship_id:\n          type: string\n          format: uuid\n          description: |-\n            Required if type = `ach`\n\n            The ach_relationship created for the account_id [here](https://alpaca.markets/docs/api-references/broker-api/funding/ach/#creating-an-ach-relationship)\n        bank_id:\n          type: string\n          format: uuid\n          description: |-\n            Required if type = `wire`\n\n            The bank_relationship created for the account_id [here](https://alpaca.markets/docs/api-references/broker-api/funding/bank/#creating-a-new-bank-relationship)\n        amount:\n          type: string\n          format: decimal\n          description: Must be \u003e 0.00\n        direction:\n          $ref: '#/components/schemas/TransferDirection'\n        timing:\n          $ref: '#/components/schemas/TransferTiming'\n        additional_information:\n          type: string\n          description: Additional details for when type = `wire`\n          nullable: true\n      required:\n        - transfer_type\n        - amount\n        - direction\n        - timing\n      description: '[See main docs here](https://alpaca.markets/docs/api-references/broker-api/funding/transfers/#creating-a-transfer-entity)'\n    Transfer:\n      title: Transfer\n      type: object\n      x-examples:\n        example-1:\n          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n          relationship_id: 81412018-ffa2-43f9-a3eb-d39f1c5e0f87\n          bank_id: f1ae96de-94c1-468e-93a3-6b7213930ca8\n          account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65\n          type: ach\n          status: QUEUED\n          reason: string\n          amount: string\n          direction: INCOMING\n          created_at: '2019-08-24T14:15:22Z'\n          updated_at: '2019-08-24T14:15:22Z'\n          expires_at: '2019-08-24T14:15:22Z'\n          additional_information: string\n      description: |-\n        Transfers allow you to transfer money/balance into your end customers' account (deposits) or out (withdrawal).\n\n        [Main docs here](https://alpaca.markets/docs/api-references/broker-api/funding/transfers/#the-transfer-object)\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: The transfer ID\n        relationship_id:\n          type: string\n          format: uuid\n          description: The ACH relationship ID only present if type = \"ach\"\n        bank_id:\n          type: string\n          format: uuid\n          description: 'The ID of the Bank, only present if type = \"wire\"'\n        account_id:\n          type: string\n          format: uuid\n          description: The account ID\n        type:\n          $ref: '#/components/schemas/TransferType'\n        status:\n          $ref: '#/components/schemas/TransferStatus'\n        reason:\n          type: string\n          description: Cause of the status\n          nullable: true\n        amount:\n          type: string\n          description: Must be \u003e 0.00\n          format: decimal\n        direction:\n          $ref: '#/components/schemas/TransferDirection'\n        created_at:\n          type: string\n          format: date-time\n          description: Timedate when transfer was created\n        updated_at:\n          type: string\n          format: date-time\n          description: Timedate when transfer was updated\n        expires_at:\n          type: string\n          format: date-time\n          description: Timedate when transfer was expired\n        additional_information:\n          type: string\n          description: Additional information. Only applies when type = \"wire\".\n          nullable: true\n        hold_until:\n          type: string\n          format: date-time\n        instant_amount:\n          type: string\n      required:\n        - id\n        - account_id\n        - type\n        - status\n        - amount\n        - direction\n        - created_at\n    TransferType:\n      type: string\n      example: ach\n      enum:\n        - ach\n        - instant_ach\n        - wire\n      description: |\n        **NOTE:** The Sandbox environment currently only supports `ach`\n\n        - **ach**\n        Transfer via ACH (US Only).\n        - **wire**\n        Transfer via wire (international).\n      title: TransferType\n    TransferDirection:\n      type: string\n      example: INCOMING\n      enum:\n        - INCOMING\n        - OUTGOING\n      description: |\n        - **INCOMING**\n        Funds incoming to user’s account (deposit).\n        - **OUTGOING**\n        Funds outgoing from user’s account (withdrawal).\n    TransferTiming:\n      type: string\n      example: immediate\n      enum:\n        - immediate\n      description: |-\n        Only `immediate` is currently supported.\n\n        values:\n\n        - **immediate**\n\n        - **next_day**\n    TransferStatus:\n      type: string\n      example: QUEUED\n      enum:\n        - QUEUED\n        - APPROVAL_PENDING\n        - PENDING\n        - SENT_TO_CLEARING\n        - REJECTED\n        - CANCELED\n        - APPROVED\n        - COMPLETE\n        - RETURNED\n      description: |\n        - **QUEUED**\n        Transfer is in queue to be processed.\n        - **APPROVAL_PENDING**\n        Transfer is pending approval.\n        - **PENDING**\n        Transfer is pending processing.\n        - **SENT_TO_CLEARING**\n        Transfer is being processed by the clearing firm.\n        - **REJECTED**\n        Transfer is rejected.\n        - **CANCELED**\n        Client initiated transfer cancellation.\n        - **APPROVED**\n        Transfer is approved.\n        - **COMPLETE**\n        Transfer is completed.\n        - **RETURNED**\n        The bank issued an ACH return for the transfer.\n    Journal:\n      title: Journal\n      example:\n        id: h7h5g33f-ef01-4458-9a4b-9598727a406f\n        entry_type: JNLS\n        from_account: 8fjkjn-4483-4199-840f-6c5fe0b7ca24\n        to_account: 3gtt65jd-6f2a-433c-8c33-17b66b8941fa\n        status: executed\n        symbol: AAPL\n        qty: '2'\n        price: '128.23'\n      x-examples:\n        example:\n          id: h7h5g33f-ef01-4458-9a4b-9598727a406f\n          entry_type: JNLS\n          from_account: 8fjkjn-4483-4199-840f-6c5fe0b7ca24\n          to_account: 3gtt65jd-6f2a-433c-8c33-17b66b8941fa\n          status: executed\n          symbol: AAPL\n          qty: '2'\n          settle_date: '2020-12-24'\n          price: '128.23'\n        example-pending:\n          id: 6d2cba43-cb57-4534-9603-a6e159167c0a\n          entry_type: JNLC\n          from_account: 3dcb795c-3ccc-402a-abb9-07e26a1b1326\n          to_account: 2a87c088-ffb6-472b-a4a3-cd9305c8605c\n          symbol: null\n          qty: null\n          price: '0'\n          status: pending\n          settle_date: '2022-02-17'\n          system_date: '2022-02-17'\n          net_amount: '645'\n          description: ''\n        example-queued:\n          id: 6d2cba43-cb57-4534-9603-a6e159167c0a\n          entry_type: JNLC\n          from_account: 3dcb795c-3ccc-402a-abb9-07e26a1b1326\n          to_account: 2a87c088-ffb6-472b-a4a3-cd9305c8605c\n          symbol: ''\n          qty: null\n          price: '0'\n          status: queued\n          settle_date: null\n          system_date: null\n          net_amount: '645'\n          description: ''\n      description: 'Represents a cash or security transfer between accounts, as specified by the `entry_type` parameter.'\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: journal ID\n            entry_type:\n              $ref: '#/components/schemas/JournalEntryType'\n            from_account:\n              type: string\n              format: uuid\n              description: account ID the shares go from\n            to_account:\n              type: string\n              format: uuid\n              description: account ID the shares go to\n            settle_date:\n              type: string\n              format: date\n            status:\n              $ref: '#/components/schemas/JournalStatus'\n          required:\n            - id\n            - entry_type\n            - from_account\n            - to_account\n            - settle_date\n        - oneOf:\n            - $ref: '#/components/schemas/JNLS'\n            - $ref: '#/components/schemas/JNLC'\n    JournalStatus:\n      type: string\n      enum:\n        - pending\n        - canceled\n        - executed\n        - queued\n        - rejected\n        - deleted\n      description: |-\n        Represents the status that a Journal instance can be in.\n\n        Current Values:\n          - pending\n          - canceled\n          - executed\n          - queued\n          - rejected\n          - deleted\n    JournalEntryType:\n      type: string\n      title: ''\n      description: |-\n        This enum represents the various kinds of Journal alpaca supports.\n\n        Current values are:\n\n        - **JNLC**\n\n          Journal Cash between accounts\n\n        - **JNLS**\n\n          Journal Securities between accounts\n      enum:\n        - JNLC\n        - JNLS\n    JNLS:\n      example:\n        id: h7h5g33f-ef01-4458-9a4b-9598727a406s\n        entry_type: JNLS\n        from_account: 8fjkjn-4483-4199-840f-6c5fe0b7ca24\n        to_account: 3gtt65jd-6f2a-433c-8c33-17b66b8941fa\n        status: executed\n        symbol: AAPL\n        qty: '2'\n        price: '128.23'\n      x-examples:\n        example-1:\n          id: h7h5g33f-ef01-4458-9a4b-9598727a406f\n          entry_type: JNLS\n          from_account: 8fjkjn-4483-4199-840f-6c5fe0b7ca24\n          to_account: 3gtt65jd-6f2a-433c-8c33-17b66b8941fa\n          status: executed\n          symbol: AAPL\n          qty: '2'\n          price: '128.23'\n      title: JNLS\n      type: object\n      description: 'Journal information specific to securities transfers. This field is required for `Journal`s with an `entry_type` of `jnls` (securities transfers), but will be null for those with `jnlc` (cash transfers).'\n      properties:\n        symbol:\n          type: string\n          description: Only valid for JNLS journals. Null for JNLC.\n        qty:\n          type: string\n          format: decimal\n          description: Only valid for JNLS journals. Null for JNLC.\n        price:\n          type: string\n          format: decimal\n          description: Only valid for JNLS journals. Null for JNLC.\n      required:\n        - symbol\n        - qty\n        - price\n    JNLC:\n      example:\n        id: f45g67h8-d1fc-4136-aa4f-cf4460aecdfc\n        entry_type: JNLC\n        from_account: 8fjkjn-4483-4199-840f-6c5fe0b7ca24\n        to_account: 3gtt65jd-6f2a-433c-8c33-17b66b8941fa\n        status: pending\n        net_amount: '115.5'\n      description: 'Journal information specific to cash transfers. This field is required for `Journal`s with an `entry_type` of `jnlc` (cash transfers), but will be null for those with `jnls` (securities transfers).'\n      type: object\n      title: JNLC\n      properties:\n        description:\n          type: string\n          description: ID the amount goes to. Only valid for JNLC journals. Null for JNLS.\n        net_amount:\n          type: string\n          format: decimal\n          description: Only valid for JNLC journals. Null for JNLS.\n        transmitter_name:\n          type: string\n          description: Only valid for JNLC journals. Null for JNLS. Max 255 characters.\n        transmitter_account_number:\n          type: string\n          description: Only valid for JNLC journals. Null for JNLS.max 255 characters\n        transmitter_address:\n          type: string\n          description: Only valid for JNLC journals. Null for JNLS.max 255 characters\n        transmitter_financial_institution:\n          type: string\n          description: Only valid for JNLC journals. Null for JNLS.max 255 characters\n        transmitter_timestamp:\n          type: string\n          format: date-time\n          description: Only valid for JNLC journals. Null for JNLS.\n      required:\n        - net_amount\n      x-examples: {}\n    JournalData:\n      title: JournalData\n      type: object\n      properties:\n        entry_type:\n          $ref: '#/components/schemas/JournalEntryType'\n        from_account:\n          type: string\n          format: uuid\n        to_account:\n          type: string\n          format: uuid\n        amount:\n          type: string\n          format: decimal\n          description: |\n            Required for JNLC.\n            The dollar amount to move. It has to be\n            a positive value.\n        symbol:\n          type: string\n          description: |\n            Required for JNLS.\n        qty:\n          type: string\n          format: decimal\n          description: |\n            Required for JNLS.\n            The number of shares to move. It has to be\n            a positive value.\n      required:\n        - entry_type\n        - from_account\n        - to_account\n    JournalResource:\n      title: JournalResource\n      oneOf:\n        - $ref: '#/components/schemas/JNLC'\n        - $ref: '#/components/schemas/JNLS'\n      discriminator:\n        propertyName: entry_type\n        mapping:\n          JNLC: '#/components/schemas/JNLC'\n          JNLS: '#/components/schemas/JNLS'\n    CreateJournalRequest:\n      description: |-\n        Journals API allows you to move cash or securities from one account to another.\n\n        This model represents the fields you can specify when creating a Journal\n\n        Fixture Rules\n\n        - No Fixtures\n          - anything below limit is executed immediately\n          - anything above limit is pending until executed at EOD,\n        - With Fixtures\n          - any status = rejected will be rejected EOD\n          - any status = pending will be pending forever\n      type: object\n      x-examples:\n        example-1:\n          from_account: c94bu7rn-4483-4199-840f-6c5fe0b7ca24\n          entry_type: JNLC\n          to_account: fn68sbrk-6f2a-433c-8c33-17b66b8941fa\n          amount: '51'\n          description: test text /fixtures/status=rejected/fixtures/\n      properties:\n        to_account:\n          type: string\n          minLength: 1\n          format: uuid\n          description: The account_id you wish to journal to\n        from_account:\n          type: string\n          minLength: 1\n          format: uuid\n          description: The account_id you wish to journal from\n        entry_type:\n          $ref: '#/components/schemas/JournalEntryType'\n        amount:\n          type: string\n          description: Required if `entry_type` = `JNLC`\n        symbol:\n          type: string\n          description: Required if `entry_type` = `JNLS`\n        qty:\n          type: string\n          description: Required if `entry_type` = `JNLS`\n        description:\n          type: string\n          description: Max 1024 characters. Can include fixtures for amounts that are above the transaction limit\n          maxLength: 1024\n        transmitter_name:\n          type: string\n          maxLength: 255\n          description: 'Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation.'\n        transmitter_account_number:\n          type: string\n          maxLength: 255\n          description: 'Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation.'\n        transmitter_address:\n          type: string\n          maxLength: 255\n          description: 'Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation.'\n        transmitter_financial_institution:\n          type: string\n          maxLength: 255\n          description: 'Max 255 characters. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation.'\n        transmitter_timestamp:\n          type: string\n          description: 'RFC 3339 format. See more details about [Travel Rule](https://alpaca.markets/docs/broker/integration/funding/#travel-rule) in our main documentation.'\n          format: date-time\n      required:\n        - to_account\n        - from_account\n        - entry_type\n    BatchJournalRequest:\n      title: BatchJournalRequest\n      type: object\n      description: |-\n        Journals API allows you to move cash or securities from one account to another.\n\n        This model represents the fields you can specify when creating a request of many Journals out of one account to many others at once.\n      properties:\n        entry_type:\n          type: string\n          enum:\n            - JNLC\n          description: Only supports `JNLC` for now\n        from_account:\n          type: string\n          format: uuid\n          description: The account id that is the originator of the funds being moved. Most likely is your Sweep Firm Account\n        description:\n          type: string\n          description: 'Journal description, gets returned in the response'\n        entries:\n          type: array\n          minItems: 1\n          description: An array of objects describing to what accounts you want to move funds into and how much to move into for each account\n          items:\n            type: object\n            properties:\n              to_account:\n                type: string\n                format: uuid\n                description: The ID of the account that you want to journal funds into\n              amount:\n                type: string\n                description: Journal amount in USD\n            required:\n              - to_account\n              - amount\n      required:\n        - entry_type\n        - from_account\n        - entries\n    BatchJournalResponse:\n      title: BatchJournalResponse\n      description: A Journal object with an extra attribute error_message in the case when a specific account fails to receive a journal.\n      allOf:\n        - $ref: '#/components/schemas/Journal'\n        - type: object\n          properties:\n            error_message:\n              type: string\n              description: Description of why this journal transaction failed\n          required:\n            - error_message\n      x-examples:\n        example-1:\n          error_message: ''\n          id: 56f106e5-25a4-4eee-96fa-25bb05dc86bc\n          entry_type: JNLC\n          from_account: 8f8c8cee-2591-4f83-be12-82c659b5e748\n          to_account: 399f85f1-cbbd-4eaa-a934-70027fb5c1de\n          symbol: ''\n          qty: null\n          price: null\n          status: pending\n          settle_date: null\n          system_date: null\n          net_amount: '1000'\n          description: ''\n    Asset:\n      title: Asset\n      type: object\n      description: 'Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false'\n      properties:\n        id:\n          type: string\n          example: 904837e3-3b76-47ec-b432-046db621571b\n          format: uuid\n          description: Asset ID\n        class:\n          $ref: '#/components/schemas/AssetClass'\n        exchange:\n          $ref: '#/components/schemas/Exchange'\n        symbol:\n          type: string\n          example: AAPL\n          description: The symbol of the asset\n        name:\n          type: string\n          example: Apple Inc. Common Stock\n          description: The official name of the asset\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n          description: active or inactive\n          example: active\n        tradable:\n          type: boolean\n          example: true\n          description: Asset is tradable on Alpaca or not\n        marginable:\n          type: boolean\n          example: true\n          description: Asset is marginable or not\n        shortable:\n          type: boolean\n          example: true\n          description: Asset is shortable or not\n        easy_to_borrow:\n          type: boolean\n          example: true\n          description: Asset is easy-to-borrow or not (filtering for easy_to_borrow = True is the best way to check whether the name is currently available to short at Alpaca).\n        fractionable:\n          type: boolean\n          example: true\n          description: Asset is fractionable or not\n        last_close_pct_change:\n          type: string\n          format: decimal\n          description: 'Percent change for the trading day as of last market closure. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.'\n        last_price:\n          type: string\n          format: decimal\n          description: 'Most recent available price for this asset on the market. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.'\n        last_close:\n          type: string\n          description: 'Last price of the asset upon market closure on the most recent trading day. NOTE: This field is currently in this spec however it may not be present in the production environment at time of publishing. It will be coming in a future update at which point this spec should be updated.'\n          format: decimal\n      required:\n        - id\n        - class\n        - symbol\n    Exchange:\n      type: string\n      title: Exchange\n      example: NASDAQ\n      description: |-\n        Represents the exchange where an asset is traded.\n\n        For Stocks:\n        - AMEX\n        - ARCA\n        - BATS\n        - NYSE\n        - NASDAQ\n        - NYSEARCA\n        - OTC\n\n        For Crypto:\n        - ERSX\n        - FTXU\n      enum:\n        - AMEX\n        - ARCA\n        - BATS\n        - NYSE\n        - NASDAQ\n        - NYSEARCA\n        - OTC\n        - ERSX\n        - FTXU\n    Position:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          asset_id: 93f58d0b-6c53-432d-b8ce-2bad264dbd94\n          symbol: AAPL\n          exchange: NASDAQ\n          asset_class: us_equity\n          asset_marginable: false\n          qty: '4'\n          avg_entry_price: '172.08'\n          side: long\n          market_value: '688.32'\n          cost_basis: '688.32'\n          unrealized_pl: '0'\n          unrealized_plpc: '0'\n          unrealized_intraday_pl: '0'\n          unrealized_intraday_plpc: '0'\n          current_price: '172.08'\n          lastday_price: '168.88'\n          change_today: '0.0189483657034581'\n      properties:\n        asset_id:\n          type: string\n          example: 904837e3-3b76-47ec-b432-046db621571b\n          format: uuid\n          description: Asset ID\n        symbol:\n          type: string\n          example: AAPL\n          description: Asset symbol\n        exchange:\n          type: string\n          example: NASDAQ\n          description: Exchange name of the asset\n        asset_class:\n          $ref: '#/components/schemas/AssetClass'\n        asset_marginable:\n          type: boolean\n          description: Indicates if this asset is marginable\n        avg_entry_price:\n          type: string\n          example: '100.0'\n          description: Average entry price of the position\n        qty:\n          type: string\n          example: '5'\n          description: The number of shares\n        side:\n          type: string\n          example: long\n          enum:\n            - long\n            - short\n        market_value:\n          type: string\n          format: decimal\n          example: '600.0'\n          description: Total dollar amount of the position\n        cost_basis:\n          type: string\n          format: decimal\n          example: '500.0'\n          description: Total cost basis in dollar\n        unrealized_pl:\n          type: string\n          format: decimal\n          example: '100.0'\n          description: Unrealized profit/loss in dollars\n        unrealized_plpc:\n          type: string\n          format: decimal\n          example: '0.20'\n          description: Unrealized profit/loss percent (by a factor of 1)\n        unrealized_intraday_pl:\n          type: string\n          format: decimal\n          example: '10.0'\n          description: Unrealized profit/loss in dollars for the day\n        unrealized_intraday_plpc:\n          type: string\n          format: decimal\n          example: '0.0084'\n          description: Unrealized interday profit/loss percent (by a factor of 1)\n        current_price:\n          type: string\n          format: decimal\n          example: '120.0'\n          description: Current asset price per share\n        lastday_price:\n          type: string\n          format: decimal\n          example: '119.0'\n          description: Last day’s asset price per share based on the closing value of the last trading day\n        change_today:\n          type: string\n          format: decimal\n          example: '0.0084'\n          description: Percent change from last day price (by a factor of 1)\n      required:\n        - asset_id\n        - symbol\n        - exchange\n        - asset_class\n        - avg_entry_price\n        - qty\n        - side\n        - market_value\n        - cost_basis\n        - unrealized_pl\n        - unrealized_plpc\n        - unrealized_intraday_pl\n        - unrealized_intraday_plpc\n        - current_price\n        - lastday_price\n        - change_today\n    OrderClosedResponse:\n      title: OrderClosedResponse\n      type: object\n      description: |\n        Represents the result of asking the api to cancel an Order.\n      x-examples: {}\n      properties:\n        id:\n          type: string\n          description: UUID of the order that was canceled\n          format: uuid\n        status:\n          type: integer\n          description: Http status code for the attempt to close this Order\n        body:\n          $ref: '#/components/schemas/Order'\n      required:\n        - id\n        - status\n    PositionClosedResponse:\n      title: PositionClosedResponse\n      type: object\n      description: |-\n        Represents the result of asking the api to close a position.\n\n        `body` is the Order used to close out the position.\n      x-examples:\n        example-1:\n          symbol: AAPL\n          status: 200\n          body:\n            id: f7f25e89-939a-4587-aaf6-414a6b3c341d\n            client_order_id: 52f8574c-96d5-49b6-94c1-2570a268434e\n            created_at: '2022-02-04T16:53:29.53427917Z'\n            updated_at: '2022-02-04T16:53:29.53427917Z'\n            submitted_at: '2022-02-04T16:53:29.533738219Z'\n            filled_at: null\n            expired_at: null\n            canceled_at: null\n            failed_at: null\n            replaced_at: null\n            replaced_by: null\n            replaces: null\n            asset_id: b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\n            symbol: AAPL\n            asset_class: us_equity\n            notional: null\n            qty: '2'\n            filled_qty: '0'\n            filled_avg_price: null\n            order_class: ''\n            order_type: market\n            type: market\n            side: sell\n            time_in_force: day\n            limit_price: null\n            stop_price: null\n            status: accepted\n            extended_hours: false\n            legs: null\n            trail_percent: null\n            trail_price: null\n            hwm: null\n            commision: '1.0'\n      properties:\n        symbol:\n          type: string\n          description: Symbol name of the asset\n        status:\n          type: integer\n          description: Http status code for the attempt to close this position\n        body:\n          $ref: '#/components/schemas/Order'\n      required:\n        - symbol\n        - status\n    PortfolioHistory:\n      description: Timeseries data for equity and profit loss information of the account.\n      type: object\n      x-examples:\n        example-1:\n          timestamp:\n            - 1580826600000\n            - 1580827500000\n            - 1580828400000\n          equity:\n            - 27423.73\n            - 27408.19\n            - 27515.97\n          profit_loss:\n            - 11.8\n            - -3.74\n            - 104.04\n          profit_loss_pct:\n            - 0.000430469507254688\n            - -0.0001364369455197062\n            - 0.0037954277571845543\n          base_value: 27411.93\n          timeframe: 15Min\n      title: ''\n      properties:\n        timestamp:\n          type: array\n          description: 'time of each data element, left-labeled (the beginning of time window)'\n          items:\n            type: integer\n        equity:\n          type: array\n          description: equity value of the account in dollar amount as of the end of each time window\n          items:\n            type: number\n            nullable: true\n        profit_loss:\n          type: array\n          description: profit/loss in dollar from the base value\n          items:\n            type: number\n            nullable: true\n        profit_loss_pct:\n          type: array\n          description: profit/loss in percentage from the base value\n          items:\n            type: number\n            nullable: true\n        base_value:\n          type: number\n          description: basis in dollar of the profit loss calculation\n          nullable: true\n        timeframe:\n          type: string\n          description: time window size of each data element\n          nullable: true\n      required:\n        - timestamp\n        - equity\n        - profit_loss\n        - profit_loss_pct\n        - base_value\n        - timeframe\n    Calendar:\n      title: Calendar\n      type: object\n      description: 'The calendar API serves the full list of market days from 1970 to 2029. It can also be queried by specifying a start and/or end time to narrow down the results. In addition to the dates, the response also contains the specific open and close times for the market days, taking into account early closures.'\n      properties:\n        date:\n          type: string\n          example: '2021-04-06'\n          format: date\n          description: Date string in YYYY-MM-DD format\n        open:\n          type: string\n          example: '09:30'\n          description: 'The time the market opens at on this date in HH:MM format'\n        close:\n          type: string\n          example: '16:00'\n          description: 'The time the market closes at on this date in HH:MM format'\n        session_open:\n          type: string\n          example: '0700'\n          deprecated: true\n          description: this field has been deprecated please ignore\n        session_close:\n          type: string\n          example: '1900'\n          deprecated: true\n          description: this field has been deprecated please ignore\n      required:\n        - date\n        - open\n        - close\n    Error:\n      title: Error\n      type: object\n      properties:\n        code:\n          type: number\n        message:\n          type: string\n      required:\n        - code\n        - message\n    Clock:\n      description: Represents the current market time and open/close events.\n      type: object\n      x-examples:\n        example:\n          timestamp: '2018-04-01T12:00:00.000Z'\n          is_open: true\n          next_open: '2018-04-01T12:00:00.000Z'\n          next_close: '2018-04-01T12:00:00.000Z'\n        example-1:\n          timestamp: '2022-02-16T13:06:05.210563128-05:00'\n          is_open: true\n          next_open: '2022-02-17T09:30:00-05:00'\n          next_close: '2022-02-16T16:00:00-05:00'\n      title: Clock\n      properties:\n        timestamp:\n          type: string\n          minLength: 1\n          format: date-time\n          description: Current timestamp\n          example: '2022-02-16T13:06:05.210563128-05:00'\n        is_open:\n          type: boolean\n          description: Whether the market is open or not\n        next_open:\n          type: string\n          minLength: 1\n          format: date-time\n          description: Next market open timestamp\n        next_close:\n          type: string\n          minLength: 1\n          format: date-time\n          description: Next market close timestamp\n      required:\n        - timestamp\n        - is_open\n        - next_open\n        - next_close\n    Document:\n      type: array\n      description: ''\n      minItems: 1\n      uniqueItems: true\n      x-examples:\n        example:\n          - document_id: b792e8ae-2cb4-4209-85b9-32be4c2fcdd6\n            document_type: account_statement\n            document_date: '2019-08-24'\n      items:\n        type: object\n        properties:\n          document_id:\n            type: string\n            minLength: 1\n            format: uuid\n          document_type:\n            $ref: '#/components/schemas/DocumentType'\n          document_date:\n            type: string\n            minLength: 1\n            format: date-time\n        required:\n          - document_id\n          - document_type\n          - document_date\n    AccountStatusEvent:\n      description: |-\n        Represents a change in an Account's status, sent over the events streaming api.\n\n        For partners who utilize Alpaca’s KYC service for opening brokerage accounts an additional `kyc_results` object is represented in the account status update events.\n      type: object\n      x-examples:\n        example-1:\n          account_id: 4db36989-6565-4011-9126-39fe6b3d9bf6\n          account_number: ''\n          at: '2021-06-14T09:59:15.232782Z'\n          event_id: 122039\n          kyc_results: null\n          status_from: ''\n          status_to: APPROVED\n      title: AccountStatusEvent\n      properties:\n        account_id:\n          type: string\n          minLength: 1\n        account_number:\n          type: string\n          minLength: 1\n        status_from:\n          $ref: '#/components/schemas/AccountStatus'\n        status_to:\n          $ref: '#/components/schemas/AccountStatus'\n        reason:\n          type: string\n          minLength: 1\n          description: Optional\n        at:\n          type: string\n          minLength: 1\n          description: Timestamp of event\n        kyc_result:\n          $ref: '#/components/schemas/KYCResult'\n        event_id:\n          type: integer\n          description: monotonically increasing 64bit integer\n      required:\n        - account_id\n        - account_number\n        - status_from\n        - status_to\n        - reason\n        - at\n        - event_id\n    JournalStatusEvent:\n      description: |\n        Represents a change in a Journal's status, sent over the events streaming api.\n      type: object\n      x-examples:\n        example-1:\n          at: '2021-05-07T10:28:23.163857Z'\n          entry_type: JNLC\n          event_id: 1406\n          journal_id: 2f144d2a-91e6-46ff-8e37-959a701cc58d\n          status_from: ''\n          status_to: queued\n      title: JournalStatusEvent\n      properties:\n        at:\n          type: string\n          minLength: 1\n          description: Timestamp of event\n          format: date-time\n        entry_type:\n          $ref: '#/components/schemas/JournalEntryType'\n        event_id:\n          type: integer\n          description: Monotonically increasing 64bit integer\n        journal_id:\n          type: string\n          description: The UUID of the related Journal\n          format: uuid\n        status_from:\n          $ref: '#/components/schemas/JournalStatus'\n        status_to:\n          $ref: '#/components/schemas/JournalStatus'\n      required:\n        - at\n        - entry_type\n        - event_id\n        - journal_id\n        - status_from\n        - status_to\n    TransferStatusEvent:\n      description: 'Represents a change in a Transfer''s status, sent over the events streaming api.'\n      type: object\n      x-examples:\n        example-1:\n          account_id: 8e00606a-c9ac-409a-ba45-f55e8f77984a\n          at: '2021-06-10T19:52:24.066998Z'\n          event_id: 15961\n          status_from: QUEUED\n          status_to: SENT_TO_CLEARING\n          transfer_id: c4ed4206-697b-4859-ab71-b9de6649859d\n        example-2:\n          account_id: 8e00606a-c9ac-409a-ba45-f55e8f77984a\n          at: '2021-06-10T20:02:24.280178Z'\n          event_id: 15962\n          status_from: SENT_TO_CLEARING\n          status_to: COMPLETE\n          transfer_id: c4ed4206-697b-4859-ab71-b9de6649859d\n      title: TransferStatusEvent\n      properties:\n        account_id:\n          type: string\n          minLength: 1\n          description: Account UUID\n          format: uuid\n        at:\n          type: string\n          minLength: 1\n          description: Timedate of when the transfer status changed\n          format: date-time\n        event_id:\n          type: integer\n          description: Monotonically increasing 64bit integer\n        status_from:\n          $ref: '#/components/schemas/TransferStatus'\n        status_to:\n          $ref: '#/components/schemas/TransferStatus'\n        transfer_id:\n          type: string\n          minLength: 1\n          description: Transfer UUID\n          format: uuid\n      required:\n        - account_id\n        - at\n        - event_id\n        - status_from\n        - status_to\n        - transfer_id\n    TradeUpdateEventType:\n      type: string\n      description: |\n        **Common events**\n\n        These are the events that are the expected results of actions you may have taken by sending API requests.\n\n        The meaning of the `timestamp` field changes for each type; the meanings have been specified here for which types the\n        timestamp field will be present.\n\n        - `new`: Sent when an order has been routed to exchanges for execution.\n        - `fill`: Sent when your order has been completely filled.\n          - `timestamp`: The time at which the order was filled.\n        - `partial_fill`: Sent when a number of shares less than the total remaining quantity on your order has been filled.\n          - `timestamp`: The time at which the shares were filled.\n        - `canceled`: Sent when your requested cancellation of an order is processed.\n          - `timestamp`: The time at which the order was canceled.\n        - `expired`: Sent when an order has reached the end of its lifespan, as determined by the order’s time in force value.\n          - `timestamp`: The time at which the order expired.\n        - `done_for_day`: Sent when the order is done executing for the day, and will not receive further updates until the next trading day.\n        - `replaced`: Sent when your requested replacement of an order is processed.\n          - `timestamp`: The time at which the order was replaced.\n\n        **Rarer events**\n\n        These are events that may rarely be sent due to unexpected circumstances on the exchanges. It is unlikely you will need to design your code around them, but you may still wish to account for the possibility that they will occur.\n\n        - `rejected`: Sent when your order has been rejected.\n          - `timestamp`: The time at which the rejection occurred.\n        - `pending_new`: Sent when the order has been received by Alpaca and routed to the exchanges, but has not yet been accepted for execution.\n        - `stopped`: Sent when your order has been stopped, and a trade is guaranteed for the order, usually at a stated price or better, but has not yet occurred.\n        - `pending_cancel`: Sent when the order is awaiting cancellation. Most cancellations will occur without the order entering this state.\n        - `pending_replace`: Sent when the order is awaiting replacement.\n        - `calculated`: Sent when the order has been completed for the day - it is either `filled` or `done_for_day` - but remaining settlement calculations are still pending.\n        - `suspended`: Sent when the order has been suspended and is not eligible for trading.\n        - `order_replace_rejected`: Sent when the order replace has been rejected.\n        - `order_cancel_rejected`: Sent when the order cancel has been rejected.\n      enum:\n        - new\n        - fill\n        - partial_fill\n        - canceled\n        - expired\n        - done_for_day\n        - replaced\n        - rejected\n        - pending_new\n        - stopped\n        - pending_cancel\n        - pending_replace\n        - calculated\n        - suspended\n        - order_replace_rejected\n        - order_cancel_rejected\n    TradeUpdateEvent:\n      description: 'Represents an update to an order/trade, sent over the events streaming api.'\n      type: object\n      title: TradeUpdateEvent\n      x-examples:\n        example-1:\n          account_id: 529248ad-c4cc-4a50-bea4-6bfd2953f83a\n          at: '2022-04-19T14:12:30.656741Z'\n          event: new\n          event_id: 37782\n          execution_id: 7e544af3-3104-4e1a-8cbc-dab2624949ff\n          order:\n            asset_class: us_equity\n            asset_id: a4778bc8-fad1-47b7-87fe-d5cde10d43f4\n            cancel_requested_at: null\n            canceled_at: null\n            client_order_id: 6d873193-dac6-4f72-8e13-c57853a9339d\n            commission: '1'\n            created_at: '2022-04-19T10:12:30.57117938-04:00'\n            expired_at: null\n            extended_hours: false\n            failed_at: null\n            filled_at: null\n            filled_avg_price: null\n            filled_qty: '0'\n            hwm: null\n            id: edada91a-8b55-4916-a153-8c7a9817e708\n            legs: null\n            limit_price: '700'\n            notional: null\n            order_class: ''\n            order_type: limit\n            qty: '4'\n            replaced_at: null\n            replaced_by: null\n            replaces: null\n            side: buy\n            status: new\n            stop_price: null\n            submitted_at: '2022-04-19T10:12:30.403135025-04:00'\n            symbol: TSLA\n            time_in_force: day\n            trail_percent: null\n            trail_price: null\n            type: limit\n            updated_at: '2022-04-19T10:12:30.609783218-04:00'\n          timestamp: '2022-04-19T14:12:30.602193534Z'\n      properties:\n        account_id:\n          type: string\n          minLength: 1\n          description: Account UUID\n          format: uuid\n        at:\n          type: string\n          minLength: 1\n          description: Timestamp of event\n          format: date-time\n        event:\n          $ref: '#/components/schemas/TradeUpdateEventType'\n        event_id:\n          type: integer\n          format: int64\n          description: Monotonically increasing 64bit integer\n        execution_id:\n          type: string\n          description: 'Corresponding execution of an order. If an order gets filled over two executions (a partial_fill for example), you will receive two events with different IDs.'\n          format: uuid\n        order:\n          $ref: '#/components/schemas/Order'\n        timestamp:\n          type: string\n          description: |\n            Has various different meanings depending on the value of `event`, please see the [Trading Events](https://alpaca.markets/docs/api-references/broker-api/events/#trade-events)\n            Enum in the documentation or the TradeUpdateEventType model for more details on when it means different things.\n          format: date-time\n      required:\n        - account_id\n        - at\n        - event\n        - event_id\n        - execution_id\n        - order\n        - timestamp\n    Watchlist:\n      title: Watchlist\n      type: object\n      description: Represents a set of securities observed by a user.\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: |\n            Unique identifier of the watchlist itself.\n        account_id:\n          type: string\n          format: uuid\n          description: |\n            Unique identifier of the account that owns this watchlist.\n        created_at:\n          type: string\n          format: date-time\n          description: When watchlist was created\n        updated_at:\n          type: string\n          format: date-time\n          description: When watchlist was last updated\n        name:\n          type: string\n          pattern: '^[a-zA-Z0-9]+$'\n          description: User friendly Name of watchlist\n        assets:\n          type: array\n          description: 'The contents of the watchlist, in the order as registered'\n          items:\n            $ref: '#/components/schemas/Asset'\n      required:\n        - id\n        - name\n    Announcement:\n      description: |-\n        The announcements endpoint contains public information on previous and upcoming dividends, mergers, spinoffs, and stock splits.\n\n        Announcement data is made available through the API as soon as it is ingested by Alpaca, which is typically the following trading day after the declaration date. This provides insight into future account stock position and cash balance changes that will take effect on an announcement’s payable date. Additionally, viewing previous announcement details can improve bookkeeping and reconciling previous account cash and position changes.\n      type: object\n      x-examples:\n        example-1:\n          id: bebc5ece-34be-47e9-b944-687e69a102be\n          corporate_action_id: 78467X109_AA22\n          ca_type: dividend\n          ca_sub_type: cash\n          initiating_symbol: DIA\n          initiating_original_cusip: '252787106'\n          target_symbol: DIA\n          target_original_cusip: '252787106'\n          declaration_date: '2021-12-19'\n          ex_date: '2022-01-21'\n          record_date: '2022-01-24'\n          payable_date: '2022-02-14'\n          cash: '0'\n          old_rate: '1'\n          new_rate: '1'\n      title: Announcement\n      properties:\n        id:\n          type: string\n          minLength: 1\n          description: ID that is specific to a single announcement.\n        corporate_action_id:\n          type: string\n          minLength: 1\n          description: 'ID that remains consistent across all announcements for the same corporate action. Unlike ‘id’, this can be used to connect multiple announcements to see how the terms have changed throughout the lifecycle of the corporate action event.'\n        ca_type:\n          $ref: '#/components/schemas/AnnouncementCAType'\n        ca_sub_type:\n          $ref: '#/components/schemas/AnnouncementCASubType'\n        initiating_symbol:\n          type: string\n          minLength: 1\n          description: Symbol of the company initiating the announcement.\n        initiating_original_cusip:\n          type: string\n          minLength: 1\n          description: CUSIP of the company initiating the announcement.\n        target_symbol:\n          type: string\n          minLength: 1\n          description: Symbol of the child company involved in the announcement.\n          nullable: true\n        target_original_cusip:\n          type: string\n          minLength: 1\n          description: CUSIP of the child company involved in the announcement.\n          nullable: true\n        declaration_date:\n          type: string\n          minLength: 1\n          description: Date the corporate action or subsequent terms update was announced.\n        ex_date:\n          type: string\n          minLength: 1\n          description: The first date that purchasing a security will not result in a corporate action entitlement.\n          nullable: true\n        record_date:\n          type: string\n          minLength: 1\n          description: The date an account must hold a settled position in the security in order to receive the corporate action entitlement.\n          nullable: true\n        payable_date:\n          type: string\n          minLength: 1\n          description: 'The date the announcement will take effect. On this date, account stock and cash balances are expected to be processed accordingly.'\n        cash:\n          type: string\n          minLength: 1\n          description: The amount of cash to be paid per share held by an account on the record date.\n          nullable: true\n        old_rate:\n          type: string\n          minLength: 1\n          description: The denominator to determine any quantity change ratios in positions.\n          nullable: true\n        new_rate:\n          type: string\n          minLength: 1\n          description: The numerator to determine any quantity change ratios in positions.\n          nullable: true\n      required:\n        - id\n        - corporate_action_id\n        - ca_type\n        - ca_sub_type\n        - initiating_symbol\n        - initiating_original_cusip\n        - target_symbol\n        - target_original_cusip\n        - declaration_date\n        - ex_date\n        - record_date\n        - payable_date\n        - cash\n        - old_rate\n        - new_rate\n    AnnouncementCAType:\n      type: string\n      description: |-\n        Announcements have both a type and a subtype to categorize them. This model represents the higher level abstract \"types\" of Announcement. Please see the AnnouncementCASubType model for finer grain descriptions of the subtypes\n\n        Possible values are:\n        - dividend\n          can have `cash` and `stock` subtypes\n        - merger\n          has `merger_update` and `merger_completion` sub types\n        - split\n          has `stock_split`, `until_split`, `reverse_split`, and `recapitalization` sub types\n        - spinoff\n          currently has only the `spinoff` subtype and thus is just this higher level category for now. A disbursement of a newly tradable security when the intiating_symbol creates the target_symbol.\n      title: ''\n      enum:\n        - dividend\n        - merger\n        - split\n        - spinoff\n      example: dividend\n    AnnouncementCASubType:\n      type: string\n      description: |-\n        Announcements have both a type and a subtype to categorize them. This model represents the lowever level abstract \"sub types\" of Announcement. Please see the AnnouncementCAType model for higher level descriptions of the possible types\n\n        Possible values are:\n\n        - from the `dividend` type:\n          - **cash**\n\n            A cash payment based on the number of shares the account holds on the record date.\n          - **stock**\n\n            A stock payment based on the number of shares the account holds on the record date.\n\n        - from the `merger` type:\n          - **merger_update**\n\n            An update to the terms of an upcoming merger. This can happen any number of times before the merger is completed and can be tracked by using the id parameter.\n\n          - **merger_completion**\n\n            A final update in the terms of the merger in which the intiating_symbol will acquire the target_symbol. Any previous terms updates for this announcement will have the same id value.\n\n        - from the `split` type:\n          - **stock_split**\n\n            An increase in the number of shares outstanding with a decrease in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the split\n          - **until_split**\n\n            An increase in the number of shares outstanding with a decrease in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the split.\n          - **reverse_split**\n\n            A decrease in the number of shares outstanding with an increase in the dollar value of each share. The new_rate and old_rate parameters will be returned in order to derive the ratio of the spli\n          - **recapitalization**\n\n            A stock recapitalization, typically used by a company to adjust debt and equity ratios.\n\n        - from the `spinoff` type:\n          - **spinoff**\n\n            A disbursement of a newly tradable security when the intiating_symbol creates the target_symbol.\n      title: ''\n      enum:\n        - cash\n        - stock\n        - merger_update\n        - merger_completion\n        - stock_split\n        - until_split\n        - reverse_split\n        - recapitalization\n        - spinoff\n    OathClientResponse:\n      title: OathClientResponse\n      type: object\n      example:\n        client_id: 7a3c52a910e1dc2abbb14da2b6b8e711\n        name: TradingApp\n        description: Sample description\n        url: 'http://test.com'\n        terms_of_use: ''\n        privacy_policy: ''\n        status: ACTIVE\n        redirect_uri:\n          - 'http://localhost'\n        live_trading_approved: true\n      x-examples:\n        example-1:\n          client_id: 7a3c52a910e1dc2abbb14da2b6b8e711\n          name: TradingApp\n          description: Sample description\n          url: 'http://test.com'\n          terms_of_use: ''\n          privacy_policy: ''\n          status: ACTIVE\n          redirect_uri:\n            - 'http://localhost'\n          live_trading_approved: true\n      properties:\n        client_id:\n          type: string\n          description: OAuth client id\n        name:\n          type: string\n          description: Broker name (your name)\n        description:\n          type: string\n        url:\n          type: string\n        terms_of_use:\n          type: string\n          description: URL of Terms of Use\n        privacy_policy:\n          type: string\n          description: URL of Privacy Policy\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - DISABLED\n          description: ACTIVE or DISABLED\n          example: ACTIVE\n        redirect_uri:\n          type: array\n          items:\n            type: string\n        live_trading_approved:\n          type: boolean\n          example: true\n    OAuthTokenRequest:\n      title: OAuthTokenRequest\n      type: object\n      example:\n        client_id: 7a3c52a910e1dc2abbb14da2b6b8e711\n        client_secret: bbb14da2b6b8e7117a3c52a910e1dc2a\n        redirect_uri: 'http://localhost'\n        scope: general\n        account_id: 0d18ae51-3c94-4511-b209-101e1666416b\n      properties:\n        client_id:\n          type: string\n          description: OAuth client ID\n        client_secret:\n          type: string\n          description: OAuth client secret\n        redirect_uri:\n          type: string\n          description: redirect URI for the OAuth flow\n        scope:\n          type: string\n          description: scopes requested by the OAuth flow\n        account_id:\n          type: string\n          format: uuid\n          description: end-user account ID\n      required:\n        - client_id\n        - client_secret\n        - redirect_uri\n        - scope\n        - account_id\n      description: This model is used for both the Issue and Authorize OAuth token routes\n    IssueOAuthTokenResponse:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          access_token: 87586f14-c3f4-4912-b107-f75bc17ff87a\n          token_type: Bearer\n          scope: general\n      properties:\n        access_token:\n          type: string\n          description: OAuth token\n        token_type:\n          type: string\n          description: Always `Bearer`\n          enum:\n            - Bearer\n          example: Bearer\n        scope:\n          type: string\n          description: Token’s scope\n      required:\n        - access_token\n        - token_type\n        - scope\n    AuthorizeOAuthTokenResponse:\n      description: ''\n      type: object\n      x-examples:\n        example-1:\n          code: 912b5502-c983-40f7-a01d-6a66f13a754d\n          client_id: 7a3c52a910e1dc2abbb14da2b6b8e711\n          redirect_uri: 'http://localhost'\n          scope: ''\n      properties:\n        code:\n          type: string\n          minLength: 1\n          description: OAuth code to exchange with token\n        client_id:\n          type: string\n          minLength: 1\n          description: OAuth `client_id`\n        redirect_uri:\n          type: string\n          minLength: 1\n          description: Redirect URI of OAuth flow\n        scope:\n          type: string\n          description: Granted scopes\n      required:\n        - code\n        - client_id\n        - redirect_uri\n        - scope\n    CreateWatchlistRequest:\n      title: CreateWatchlistRequest\n      type: object\n      description: This model represents the fields you can specify when Creating or Updating/Replacing a Watchlist\n      properties:\n        name:\n          type: string\n          description: The watchlist name\n        symbols:\n          type: array\n          description: The new list of symbol names to watch\n          items:\n            type: string\n            example: '[\"AAPL\", \"TSLA\"]'\n      required:\n        - name\n        - symbols\n    DisclosureContextAnnotation:\n      title: DisclosureContextAnnotation\n      type: object\n      properties:\n        context_type:\n          type: string\n          enum:\n            - CONTROLLED_FIRM\n            - IMMEDIATE_FAMILY_EXPOSED\n            - AFFILIATE_FIRM\n          description: 'Specifies the type of disclosure annotation. Valid types are FINRA affiliations, for users affiliated with or employed by a FINRA member firm, a Stock Exchange Member, FINRA, Registered Investment Advisor, or a Municipal Securities Broker/Dealer; Company control relationships, for senior executives, and 10% or greater shareholders, of a publicly traded company; and immediate family members of politically exposed individuals.'\n        company_name:\n          type: string\n          description: Required for FINRA affiliations and controlled firms.\n        company_street_address:\n          type: string\n          description: Required for FINRA affiliations and controlled firms.\n        company_city:\n          type: string\n          description: Required for FINRA affiliations and controlled firms.\n        company_state:\n          type: string\n          description: Required if and only if `company_country` is `USA`.\n        company_country:\n          type: string\n          description: Required for FINRA affiliations and controlled firms.\n        company_compliance_email:\n          type: string\n          description: Required for FINRA affiliations and controlled firms.\n        given_name:\n          type: string\n          description: Required for immediate family members of politically exposed persons.\n        family_name:\n          type: string\n          description: Required for immediate family members of politically exposed persons.\n      required:\n        - context_type\n  responses:\n    Forbidden:\n      description: Request is forbidden\n      content:\n        application/json:\n          schema:\n            type: string\n    BadRequest:\n      description: Malformed input.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotAuthorized:\n      description: Client is not authorized for this operation.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: Resource does not exist.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  requestBodies: {}\npaths:\n  /v1/accounts:\n    get:\n      tags:\n        - Accounts\n      summary: Get all accounts\n      parameters:\n        - name: query\n          in: query\n          schema:\n            type: string\n          description: 'Pass space-delimited tokens. The response will contain accounts that match with each of the tokens (logical AND). A match means the token is present in either the account’s associated account number, phone number, name, or e-mail address (logical OR).'\n        - schema:\n            type: string\n            format: date-time\n          in: query\n          name: created_after\n        - schema:\n            type: string\n            format: date-time\n          in: query\n          name: created_before\n        - schema:\n            type: string\n          in: query\n          name: status\n          description: See the AccountStatus model for values\n        - $ref: '#/components/parameters/Sort'\n        - schema:\n            type: string\n          in: query\n          name: entities\n          description: Comma-delimited entity names to include in the response\n      responses:\n        '200':\n          description: |\n            The response is a list of Account model up to 1000 items\n            per query order by created_at. To scroll the result,\n            please use the created_after parameter.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Account'\n      operationId: getAllAccounts\n      description: Retrieves all accounts found by the query'\n    post:\n      tags:\n        - Accounts\n      summary: Create an account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountCreationRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n        '400':\n          description: The post body is not well formed.\n          content:\n            application/json:\n              schema:\n                type: string\n        '409':\n          description: There is already an existing account registered with the same email address.\n        '422':\n          description: One of the input values is not a valid value.\n          content:\n            application/json:\n              schema:\n                type: string\n      operationId: createAccount\n      description: 'Submit an account application with KYC information. This will create a trading account for the end user. The account status may or may not be ACTIVE immediately and you will receive account status updates on the event API. '\n  '/v1/accounts/{account_id}':\n    get:\n      summary: Get an account by Id.\n      tags:\n        - Accounts\n      description: |\n        You can query a specific account that you submitted to Alpaca by passing into the query the account_id associated with the account you’re retrieving.\n      responses:\n        '200':\n          description: 'Will return an AccountExtended if an account with account_id exists, otherwise will throw an error.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountExtended'\n      operationId: getAccount\n    patch:\n      tags:\n        - Accounts\n      summary: Update an account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountUpdateRequest'\n      responses:\n        '200':\n          description: 'If all parameters are valid and updates have been made, it returns with status code 200. The response is the account model.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountExtended'\n        '400':\n          description: The post body is not well formed.\n          content:\n            application/json:\n              schema:\n                type: string\n        '422':\n          description: ​ The request body contains an attribute that is not permitted to be updated or you are attempting to set an invalid value.\n          content:\n            application/json:\n              schema:\n                type: string\n      operationId: patchAccount\n      description: |-\n        This operation updates account information.\n\n        If all parameters are valid and updates have been made, it returns with status code 200. The response is the account model.\n    delete:\n      summary: Request to close an account\n      tags:\n        - Accounts\n      responses:\n        '204':\n          description: No content.\n      operationId: deleteAccount\n      description: This operation closes an active account.\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n  '/v1/accounts/{account_id}/documents':\n    get:\n      summary: Return a list of account documents.\n      tags:\n        - Documents\n      description: 'This endpoint allows you to query all the documents that belong to a certain account. You can filter by date, or type of document.'\n      parameters:\n        - name: start_date\n          in: query\n          description: optional date value to filter the list (inclusive).\n          schema:\n            type: string\n            format: date\n        - name: end_date\n          in: query\n          description: optional date value to filter the list (inclusive).\n          schema:\n            type: string\n            format: date\n        - $ref: '#/components/parameters/DocumentType'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Document'\n              examples: {}\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                type: string\n      operationId: getDocsForAccount\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n  '/v1/accounts/{account_id}/documents/upload':\n    post:\n      tags:\n        - Accounts\n      summary: Upload a document to an already existing account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentUploadRequest'\n      responses:\n        '204':\n          description: Success (No Content)\n        '400':\n          description: Bad Request. The body in the request is not valid.\n          content:\n            application/json:\n              schema:\n                type: string\n        '404':\n          description: Not Found. No account was found for this account_id\n          content:\n            application/json:\n              schema:\n                type: string\n      operationId: uploadDocToAccount\n      description: |-\n        Upload a document to be attached to an account.\n\n        Documents are binary objects whose contents are encoded in base64. Each encoded content size is limited to 10MB if you use Alpaca for KYCaaS. If you perform your own KYC there are no document size limitations.\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n  '/v1/accounts/{account_id}/documents/{document_id}/download':\n    get:\n      security:\n        - BasicAuth: []\n      summary: Download a document file that belongs to an account.\n      tags:\n        - Documents\n      description: |\n        This endpoint allows you to download a document identified by the document_id passed in the header. The returned document is in PDF format.\n\n        The operation returns a pre-signed downloadable link as a redirect with HTTP status code 301 if one is found.\n      responses:\n        '301':\n          description: |\n            Redirect to the pre-signed download link for the document PDF file.\n        '404':\n          description: The document is not found.\n      operationId: downloadDocFromAccount\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n      - $ref: '#/components/parameters/DocumentID'\n  '/v1/documents/{document_id}':\n    get:\n      security:\n        - BasicAuth: []\n      summary: Download a document file directly\n      tags:\n        - Documents\n      description: |\n        The operation returns a pre-signed downloadable link as a redirect with HTTP status code 301 if one is found.\n      responses:\n        '301':\n          description: |\n            Redirect to the pre-signed download link for the document PDF file.\n        '404':\n          description: The document was not found.\n      operationId: downloadDocumentById\n    parameters:\n      - $ref: '#/components/parameters/DocumentID'\n  '/v1/accounts/{account_id}/recipient_banks':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n    get:\n      tags:\n        - Funding\n        - Accounts\n      summary: Retrieve bank relationships for an account\n      parameters:\n        - name: status\n          in: query\n          schema:\n            type: string\n            enum:\n              - ACTIVE\n              - INACTIVE\n            example: ACTIVE\n        - name: bank_name\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success. Returns the bank relationship model.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Bank'\n        '400':\n          description: Bad request. The body in the request is not valid.\n      operationId: getRecipientBanks\n      description: Retrieves Bank Relationships for an account\n    post:\n      tags:\n        - Funding\n        - Accounts\n      summary: Create a Bank Relationship for an account\n      parameters:\n        - $ref: '#/components/parameters/AccountID'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBankRequest'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Bank'\n        '400':\n          description: Bad Request\n        '409':\n          description: Conflict\n      operationId: createRecipientBank\n      description: 'If successful, retrieves Bank Relationships for an account'\n  '/v1/accounts/{account_id}/recipient_banks/{bank_id}':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n      - name: bank_id\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    delete:\n      tags:\n        - Accounts\n        - Funding\n      summary: Delete a Bank Relationship for an account\n      responses:\n        '204':\n          description: Success (No Content)\n        '400':\n          description: Bad Request\n        '404':\n          description: Bank Not Found\n      operationId: deleteRecipientBank\n      description: 'If successful, deletes Bank Relationship for an account'\n  '/v1/accounts/{account_id}/transfers':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n    get:\n      summary: Return a list of transfers for an account.\n      tags:\n        - Funding\n        - Accounts\n      description: |\n        You can query a list of transfers for an account.\n\n\n        You can filter requested transfers by values such as direction and status.\n      parameters:\n        - name: direction\n          in: query\n          schema:\n            enum:\n              - INCOMING\n              - OUTGOING\n            type: string\n          description: INCOMING or OUTGOING\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transfer'\n              examples:\n                example-1:\n                  value:\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                      relationship_id: 81412018-ffa2-43f9-a3eb-d39f1c5e0f87\n                      bank_id: f1ae96de-94c1-468e-93a3-6b7213930ca8\n                      account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65\n                      type: ach\n                      status: QUEUED\n                      reason: string\n                      amount: string\n                      direction: INCOMING\n                      created_at: '2019-08-24T14:15:22Z'\n                      updated_at: '2019-08-24T14:15:22Z'\n                      expires_at: '2019-08-24T14:15:22Z'\n                      additional_information: string\n                example-2:\n                  value:\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                      relationship_id: 81412018-ffa2-43f9-a3eb-d39f1c5e0f87\n                      bank_id: f1ae96de-94c1-468e-93a3-6b7213930ca8\n                      account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65\n                      type: ach\n                      status: QUEUED\n                      reason: string\n                      amount: string\n                      direction: INCOMING\n                      created_at: '2019-08-24T14:15:22Z'\n                      updated_at: '2019-08-24T14:15:22Z'\n                      expires_at: '2019-08-24T14:15:22Z'\n                      additional_information: string\n      operationId: getTransfersForAccount\n    post:\n      summary: Request a new transfer\n      tags:\n        - Funding\n        - Accounts\n      description: |-\n        Create a new transfer to an account to fund it.\n\n        In the sandbox environment, you can instantly deposit to or withdraw from an account with a virtual money amount. In the production environment, this endpoint is used only for requesting an outgoing (withdrawal) wire transfer at this moment. For the wire transfer (in production), you need to create a bank resource first using the Bank API. For more on how to fund an account in sandbox please check out this tutorial [here](https://alpaca.markets/learn/fund-broker-api/).\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTransferRequest'\n      responses:\n        '200':\n          description: Successfully requested a transfer.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transfer'\n      operationId: createTransferForAccount\n  '/v1/accounts/{account_id}/transfers/{transfer_id}':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n      - schema:\n          type: string\n          format: uuid\n        name: transfer_id\n        in: path\n        required: true\n        description: Tranfer identifier\n    delete:\n      summary: Request to close a transfer\n      operationId: deleteTransfer\n      responses:\n        '204':\n          description: Success (No Content)\n        '404':\n          $ref: '#/components/responses/NotFound'\n      description: Request to close a transfer\n      tags:\n        - Accounts\n        - Funding\n  /v1/accounts/activities:\n    get:\n      tags:\n        - Accounts\n      summary: Retrieve account activities\n      parameters:\n        - name: account_id\n          in: query\n          schema:\n            type: string\n            format: uuid\n          description: id of a single account to filter by\n        - name: date\n          in: query\n          schema:\n            type: string\n          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported.'\n        - name: until\n          in: query\n          schema:\n            type: string\n          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported.'\n        - name: after\n          in: query\n          schema:\n            type: string\n          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported. Cannot be used with date.'\n        - $ref: '#/components/parameters/Direction'\n        - name: page_size\n          in: query\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n          description: The maximum number of entries to return in the response\n        - in: query\n          name: page_token\n          description: 'The Activity ID of the end of your current page of results. '\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Activity'\n      operationId: getAccountActivities\n      description: |-\n        Returns an array of Activities\n\n        Notes:\n        * Pagination is handled using the `page_token` and `page_size` parameters.\n        * `page_token` represents the ID of the end of your current page of results.\n          for example if in your first response the id of the last Activiy item returned in the array was `20220203000000000::045b3b8d-c566-4bef-b741-2bf598dd6ae7`, you'd pass that value as `page_token` to get the next page of results\n\n        * If specified with a `direction` of `desc`, for example, the results will end before the activity with the specified ID.\n        * If specified with a `direction` of `asc`, results will begin with the activity immediately after the one specified.\n        * `page_size` is the maximum number of entries to return in the response.\n        * If `date` is not specified, the default and maximum value is 100.\n        * If `date` is specified, the default behavior is to return all results, and there is no maximum page size.\n  '/v1/accounts/activities/{activity_type}':\n    parameters:\n      - $ref: '#/components/parameters/ActivityType'\n    get:\n      tags:\n        - Accounts\n      parameters:\n        - name: account_id\n          in: query\n          schema:\n            type: string\n            format: uuid\n          description: id of a single account to filter by\n        - name: date\n          in: query\n          schema:\n            type: string\n            format: date-time\n          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported.'\n        - name: until\n          in: query\n          schema:\n            type: string\n            format: date-time\n          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported.'\n        - name: after\n          in: query\n          schema:\n            type: string\n            format: date-time\n          description: 'Both formats YYYY-MM-DD and YYYY-MM-DDTHH:MM:SSZ supported.'\n        - $ref: '#/components/parameters/Direction'\n        - name: page_size\n          in: query\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n          description: The maximum number of entries to return in the response\n        - name: page_token\n          in: query\n          schema:\n            type: string\n          description: The ID of the end of your current page of results\n      summary: Retrieve specific account activities\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Activity'\n      operationId: getAccountActivitiesByType\n      description: |-\n        Retrieves an Array of Activies by type\n\n        Notes:\n        * Pagination is handled using the `page_token` and `page_size` parameters.\n        * `page_token` represents the ID of the end of your current page of results.\n          for example if in your first response the id of the last Activiy item returned in the array was `20220203000000000::045b3b8d-c566-4bef-b741-2bf598dd6ae7`, you'd pass that value as `page_token` to get the next page of results\n\n        * If specified with a `direction` of `desc`, for example, the results will end before the activity with the specified ID.\n        * If specified with a `direction` of `asc`, results will begin with the activity immediately after the one specified.\n        * `page_size` is the maximum number of entries to return in the response.\n        * If `date` is not specified, the default and maximum value is 100.\n        * If `date` is specified, the default behavior is to return all results, and there is no maximum page size.\n  '/v1/accounts/{account_id}/ach_relationships':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n    get:\n      summary: Retrieve ACH Relationships for an account\n      tags:\n        - Accounts\n        - Funding\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ACHRelationship'\n      operationId: getAccountACHRelationships\n      description: Returns a list of ACH Relationships for an account\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: statuses\n          description: Comma-separated status values\n    post:\n      summary: Create an ACH Relationship\n      operationId: createACHRelationshipForAccount\n      responses:\n        '200':\n          description: returns the newly created ACH Relationship entity.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACHRelationship'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/NotAuthorized'\n        '409':\n          description: The account already has an active relationship.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      description: |-\n        Create a new ACHRelationship for an account\n\n        If successful, will return 200 code with a newly created ACH Relationship entity.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateACHRelationshipRequest'\n        description: 'Create ACH Relationship '\n      tags:\n        - Accounts\n        - Funding\n  '/v1/accounts/{account_id}/ach_relationships/{ach_relationship_id}':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n      - schema:\n          type: string\n          format: uuid\n        name: ach_relationship_id\n        in: path\n        description: ACH relationship identifier\n        required: true\n    delete:\n      summary: Delete an existing ACH relationship\n      operationId: deleteACHRelationshipFromAccount\n      responses:\n        '204':\n          description: Success (No Content)\n        '400':\n          description: the passed in account_id or relationship_id were invalid\n        '404':\n          $ref: '#/components/responses/NotFound'\n      description: Delete an existing ACH relationship for an account\n      tags:\n        - Accounts\n        - Funding\n  '/v1/trading/accounts/{account_id}/account':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n    get:\n      operationId: getTradingAccount\n      summary: Retrieve trading details for an account.\n      tags:\n        - Accounts\n      description: |-\n        As a broker you can view more trading details about your users.\n\n        The response is a Trading Account model.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TradeAccount'\n  '/v1/trading/accounts/{account_id}/positions':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n    get:\n      summary: List open positions for an account\n      tags:\n        - Trading\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Position'\n      operationId: getPositionsForAccount\n      description: List open positions for an account\n    delete:\n      summary: Close All Positions for an Account\n      operationId: closeAllPositionsForAccount\n      responses:\n        '207':\n          description: HTTP 207 Multi-Status with body; an array of objects that include the order id and http status code for each status request.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PositionClosedResponse'\n              examples:\n                example-1:\n                  value:\n                    - symbol: TSLA\n                      status: 200\n                      body:\n                        id: d1143025-89fc-4952-8936-db2409d899f3\n                        client_order_id: 17dbfab4-cb86-4e0a-8fa6-f0606b0a9a4e\n                        created_at: '2022-05-13T16:25:29.336330998Z'\n                        updated_at: '2022-05-13T16:25:29.336330998Z'\n                        submitted_at: '2022-05-13T16:25:29.335776073Z'\n                        filled_at: null\n                        expired_at: null\n                        canceled_at: null\n                        failed_at: null\n                        replaced_at: null\n                        replaced_by: null\n                        replaces: null\n                        asset_id: a4778bc8-fad1-47b7-87fe-d5cde10d43f4\n                        symbol: TSLA\n                        asset_class: us_equity\n                        notional: null\n                        qty: '4'\n                        filled_qty: '0'\n                        filled_avg_price: null\n                        order_class: ''\n                        order_type: market\n                        type: market\n                        side: sell\n                        time_in_force: day\n                        limit_price: null\n                        stop_price: null\n                        status: accepted\n                        extended_hours: false\n                        legs: null\n                        trail_percent: null\n                        trail_price: null\n                        hwm: null\n                        source: null\n        '500':\n          description: Failed to liquidate some positions\n      description: 'Closes (liquidates) all of the account’s open long and short positions. A response will be provided for each order that is attempted to be cancelled. If an order is no longer cancelable, the server will respond with status 500 and reject the request.'\n      parameters:\n        - schema:\n            type: boolean\n          in: query\n          name: cancel_orders\n          description: 'If true is specified, cancel all open orders before liquidating all positions.'\n      tags:\n        - Trading\n  '/v1/trading/accounts/{account_id}/positions/{symbol_or_asset_id}':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n      - schema:\n          type: string\n        name: symbol_or_asset_id\n        in: path\n        required: true\n        description: 'The symbol or asset_id '\n    get:\n      summary: Get an Open Position for account by Symbol or AssetId\n      responses:\n        '200':\n          description: The requested Position object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Position'\n        '404':\n          description: 'Account doesn''t have a position for this symbol or asset_id '\n      operationId: getPositionsForAccountBySymbol\n      description: Retrieves the account’s open position for the given symbol or asset_id.\n      tags:\n        - Trading\n    delete:\n      summary: Close a Position for an Account\n      operationId: closePositionForAccountBySymbol\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Order'\n      description: Closes (liquidates) the account’s open position for the given symbol. Works for both long and short positions.\n      tags:\n        - Trading\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: qty\n          description: Optional the number of shares to liquidate. Can accept up to 9 decimal points. Cannot work with percentage\n        - schema:\n            type: string\n          in: query\n          description: percentage of position to liquidate. Must be between 0 and 100. Would only sell fractional if position is originally fractional. Can accept up to 9 decimal points. Cannot work with qty\n          name: percentage\n  '/v1/trading/accounts/{account_id}/orders/{order_id}':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n      - $ref: '#/components/parameters/OrderID'\n    get:\n      summary: Retrieves a single order for the given order_id.\n      tags:\n        - Trading\n      description: Retrieves a single order for the given order_id.\n      responses:\n        '200':\n          description: The requested Order object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Order'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: getOrderForAccount\n    patch:\n      summary: Replaces a single order with updated parameters\n      tags:\n        - Trading\n      description: |-\n        Replaces a single order with updated parameters. Each parameter overrides the corresponding attribute of the existing order. The other attributes remain the same as the existing order.\n\n        A success return code from a replaced order does NOT guarantee the existing open order has been replaced. If the existing open order is filled before the replacing (new) order reaches the execution venue, the replacing (new) order is rejected, and these events are sent in the trade_updates stream channel found [here in the market data api](https://alpaca.markets/docs/api-references/market-data-api/#order-updates).\n\n        While an order is being replaced, the account's buying power is reduced by the larger of the two orders that have been placed (the old order being replaced, and the newly placed order to replace it). If you are replacing a buy entry order with a higher limit price than the original order, the buying power is calculated based on the newly placed order. If you are replacing it with a lower limit price, the buying power is calculated based on the old order.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateOrderRequest'\n      responses:\n        '200':\n          description: A new Order object with a new order_id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Order'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          description: Buying power or shares are not sufficient\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: replaceOrderForAccount\n    delete:\n      summary: Attempts to cancel an open order.\n      tags:\n        - Trading\n      description: |-\n        Attempts to cancel an open order. If the order is no longer cancelable (for example if the status is \"filled\"), the server will respond with status 422, and reject the request.\n\n        Upon acceptance of the cancel request, it returns status 204.\n      responses:\n        '204':\n          description: Success (No Content)\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: deleteOrderForAccount\n  '/v1/trading/accounts/{account_id}/orders':\n    parameters:\n      - $ref: '#/components/parameters/AccountID'\n    get:\n      parameters:\n        - name: status\n          in: query\n          description: 'Order status to be queried. open, closed or all. Defaults to open.'\n          schema:\n            type: string\n            enum:\n              - open\n              - closed\n              - all\n        - name: limit\n          in: query\n          description: The maximum number of orders in response. Defaults to 50 and max is 500.\n          schema:\n            type: integer\n            example: 500\n        - $ref: '#/components/parameters/After'\n        - $ref: '#/components/parameters/Until'\n        - $ref: '#/components/parameters/Direction'\n        - schema:\n            type: boolean\n          in: query\n          name: nested\n          description: 'If true, the result will roll up multi-leg orders under the legs field of primary order.'\n        - $ref: '#/components/parameters/Symbols'\n      summary: 'Retrieves a list of orders for the account, filtered by the supplied query parameters.'\n      tags:\n        - Trading\n      description: |-\n        Retrieves a list of orders for the account, filtered by the supplied query parameters.\n\n        Endpoint defaults to open orders if no parameters are provided.\n      responses:\n        '200':\n          description: 'Retrieves a list of orders for the account, filtered by the supplied query parameters.'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Order'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: getAllOrdersForAccount\n    post:\n      summary: Create an order for an account.\n      tags:\n        - Trading\n      description: Create an order for an account.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrderRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Order'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: createOrderForAccount\n    delete:\n      summary: Attempts to cancel all open orders. A response will be provided for each order that is attempted to be cancelled.\n      tags:\n        - Trading\n      description: Attempts to cancel all open orders. A response will be provided for each order that is attempted to be cancelled.\n      responses:\n        '207':\n          description: 'HTTP 207 Multi-Status with body, which is an array of objects that include the order id, http status code and an order object for each cancellation request.'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrderClosedResponse'\n              examples:\n                example-1:\n                  value:\n                    - id: 872994c5-0620-40ad-8ae0-f224b9948df5\n                      status: 200\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: deleteAllOrdersForAccount\n  /v1/assets:\n    get:\n      tags:\n        - Assets\n      summary: Retrieve all assets\n      description: Returns all assets\n      responses:\n        '200':\n          description: An array of asset objects.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Asset'\n      operationId: getAssets\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - active\n              - inactive\n              - all\n            example: all\n            default: all\n          in: query\n          name: status\n          description: 'Asset status to filter by, will default to `all`'\n        - schema:\n            type: string\n            enum:\n              - us_equity\n              - crypto\n            example: us_equity\n            default: us_equity\n          in: query\n          name: asset_class\n          description: 'Asset class to filter by, `us_equity` or `crypto`. Defaults to `us_equity`'\n  '/v1/assets/{symbol_or_asset_id}':\n    parameters:\n      - name: symbol_or_asset_id\n        required: true\n        in: path\n        schema:\n          type: string\n        description: you can use either the asset's Id or the symbol to search\n    get:\n      tags:\n        - Assets\n      summary: Retrieve an asset by UUID\n      description: 'Returns the requested asset, if found'\n      responses:\n        '200':\n          description: Returns asset\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Asset'\n        '404':\n          description: Asset not found\n      operationId: getAssetBySymbolOrId\n  /v1/calendar:\n    get:\n      tags:\n        - Calendar\n      summary: Query market calendar\n      parameters:\n        - name: start\n          description: The first date to retrieve data for. (Inclusive) in YYYY-MM-DD format\n          in: query\n          schema:\n            type: string\n            format: date\n            example: '2022-01-01'\n        - name: end\n          description: The last date to retrieve data for. (Inclusive) in YYYY-MM-DD format\n          in: query\n          schema:\n            type: string\n            format: date\n            example: '2022-01-01'\n      responses:\n        '200':\n          description: Returns the calendar object\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Calendar'\n      operationId: queryMarketCalendar\n      description: 'The calendar API serves the full list of market days from 1970 to 2029. It can also be queried by specifying a start and/or end time to narrow down the results. In addition to the dates, the response also contains the specific open and close times for the market days, taking into account early closures.'\n  /v1/clock:\n    get:\n      tags:\n        - Clock\n      summary: Query market clock\n      responses:\n        '200':\n          description: The current market's timestamp\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Clock'\n              examples: {}\n      operationId: queryMarketClock\n      description: 'The Clock API serves the current market timestamp, whether or not the market is currently open, as well as the times of the next market open and close.'\n  /v1/events/accounts/status:\n    get:\n      summary: Subscribe to account status events (SSE).\n      tags:\n        - Accounts\n        - Events\n      description: |\n        Events API provide event push as well as historical queries via SSE (server sent events).\n\n        Historical events are streamed immediately if queried, and updates are pushed as events occur.\n\n        Query Params Rules:\n        - `since` required if `until` specified\n        - `since_id` required if `until_id` specified\n        - `since` and `since_id` can’t be used at the same time\n        Behavior:\n        - if `since` or `since_id` not specified this will not return any historic data\n        - if `until` or `until_id` reached stream will end (status 200)\n\n        ---\n\n        Note for people using the clients generated from this OAS spec. Currently OAS-3 doesn't have full support for representing SSE style responses from an API, so if you are using a generated client and don't specify a `since` and `until` there is a good chance the generated clients will hang waiting for the response to end.\n\n        If you require the streaming capabilities we recommend not using the generated clients for this specific usecase until the OAS-3 standards come to a consensus on how to represent this correcting in OAS-3.\n      parameters:\n        - name: since\n          in: query\n          schema:\n            type: string\n            format: date\n          description: 'Format: YYYY-MM-DD'\n        - name: until\n          in: query\n          schema:\n            type: string\n            format: date\n          description: 'Format: YYYY-MM-DD'\n        - name: since_id\n          in: query\n          schema:\n            type: integer\n        - name: until_id\n          in: query\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Connected. Events will now start streaming as long as you keep the connection open.\n          content:\n            text/event-stream:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AccountStatusEvent'\n              examples: {}\n      operationId: suscribeToAccountStatusSSE\n  /v1/events/journals/status:\n    get:\n      summary: Subscribe to journal events (SSE).\n      tags:\n        - Journals\n        - Events\n      description: |-\n        The Events API provides event push as well as historical queries via SSE (server sent events).\n\n        You can listen to journal status updates as they get processed by our backoffice.\n\n        Historical events are streamed immediately if queried, and updates are pushed as events occur.\n\n        Query Params Rules:\n        - `since` required if `until` specified\n        - `since_id` required if `until_id` specified\n        - `since` and `since_id` can’t be used at the same time\n        Behavior:\n        - if `since` or `since_id` not specified this will not return any historic data\n        - if `until` or `until_id` reached stream will end (status 200)\n\n        ---\n\n        Note for people using the clients generated from this OAS spec. Currently OAS-3 doesn't have full support for representing SSE style responses from an API, so if you are using a generated client and don't specify a `since` and `until` there is a good chance the generated clients will hang waiting for the response to end.\n\n        If you require the streaming capabilities we recommend not using the generated clients for this specific usecase until the OAS-3 standards come to a consensus on how to represent this correcting in OAS-3.\n      parameters:\n        - name: since\n          in: query\n          schema:\n            type: string\n            format: date-time\n          description: 'Format: YYYY-MM-DD'\n        - name: until\n          in: query\n          schema:\n            type: string\n            format: date-time\n          description: 'Format: YYYY-MM-DD'\n        - name: since_id\n          in: query\n          schema:\n            type: integer\n        - name: until_id\n          in: query\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Connected. Events will now start streaming as long as you keep the connection open.\n          content:\n            text/event-stream:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JournalStatusEvent'\n      operationId: subscribeToJournalStatusSSE\n  /v1/events/transfers/status:\n    get:\n      summary: Subscribe to Transfer Events (SSE)\n      tags:\n        - Events\n        - Funding\n      responses:\n        '200':\n          description: Connected. Events will now start streaming as long as you keep the connection open.\n          content:\n            text/event-stream:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TransferStatusEvent'\n      parameters:\n        - name: since\n          in: query\n          schema:\n            type: string\n            format: date-time\n          description: 'Format: YYYY-MM-DD'\n        - name: until\n          in: query\n          schema:\n            type: string\n            format: date-time\n          description: 'Format: YYYY-MM-DD'\n        - name: since_id\n          in: query\n          schema:\n            type: integer\n        - name: until_id\n          in: query\n          schema:\n            type: integer\n      operationId: subscribeToTransferStatusSSE\n      description: |-\n        The Events API provides event push as well as historical queries via SSE (server sent events).\n\n        You can listen to transfer status updates as they get processed by our backoffice, for both end-user and firm accounts.\n\n        Historical events are streamed immediately if queried, and updates are pushed as events occur.\n\n        Query Params Rules:\n        - `since` required if `until` specified\n        - `since_id` required if `until_id` specified\n        - `since` and `since_id` can’t be used at the same time\n        Behavior:\n        - if `since` or `since_id` not specified this will not return any historic data\n        - if `until` or `until_id` reached stream will end (status 200)\n\n        ---\n\n        Note for people using the clients generated from this OAS spec. Currently OAS-3 doesn't have full support for representing SSE style responses from an API, so if you are using a generated client and don't specify a `since` and `until` there is a good chance the generated clients will hang waiting for the response to end.\n\n        If you require the streaming capabilities we recommend not using the generated clients for this specific usecase until the OAS-3 standards come to a consensus on how to represent this correcting in OAS-3.\n    parameters: []\n  /v1/events/trades:\n    get:\n      summary: Subscribe to Trade Events (SSE)\n      tags:\n        - Events\n        - Trading\n      responses:\n        '200':\n          description: Connected. Events will now start streaming as long as you keep the connection open.\n          content:\n            text/event-stream:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TradeUpdateEvent'\n      parameters:\n        - name: since\n          in: query\n          schema:\n            type: string\n            format: date-time\n          description: 'Format: YYYY-MM-DD'\n        - name: until\n          in: query\n          schema:\n            type: string\n            format: date-time\n          description: 'Format: YYYY-MM-DD'\n        - name: since_id\n          in: query\n          schema:\n            type: integer\n        - name: until_id\n          in: query\n          schema:\n            type: integer\n      operationId: subscribeToTradeSSE\n      description: |-\n        The Events API provides event push as well as historical queries via SSE (server sent events).\n\n        You can listen to events related to trade updates. Most market trades sent during market hours are filled instantly; you can listen to limit order updates through this endpoint.\n\n        Historical events are streamed immediately if queried, and updates are pushed as events occur.\n\n        Query Params Rules:\n        - `since` required if `until` specified\n        - `since_id` required if `until_id` specified\n        - `since` and `since_id` can’t be used at the same time\n        Behavior:\n        - if `since` or `since_id` not specified this will not return any historic data\n        - if `until` or `until_id` reached stream will end (status 200)\n\n        ---\n\n        Note for people using the clients generated from this OAS spec. Currently OAS-3 doesn't have full support for representing SSE style responses from an API, so if you are using a generated client and don't specify a `since` and `until` there is a good chance the generated clients will hang waiting for the response to end.\n\n        If you require the streaming capabilities we recommend not using the generated clients for this specific usecase until the OAS-3 standards come to a consensus on how to represent this correcting in OAS-3.\n    parameters: []\n  /v1/journals:\n    get:\n      summary: Return a list of requested journals.\n      tags:\n        - Journals\n      parameters:\n        - name: after\n          in: query\n          schema:\n            type: string\n            format: date\n          description: 'By journal creation date. Format: 2020-01-01'\n        - name: before\n          in: query\n          schema:\n            type: string\n            format: date\n          description: 'By journal creation date. Format: 2020-01-01'\n        - name: status\n          in: query\n          schema:\n            type: string\n            enum:\n              - pending\n              - canceled\n              - executed\n              - queued\n              - rejected\n              - deleted\n          description: See the JournalStatus model for more info\n        - name: entry_type\n          in: query\n          schema:\n            type: string\n            enum:\n              - JNLC\n              - JNLS\n          description: JNLC or JNLS\n        - name: to_account\n          in: query\n          schema:\n            type: string\n            format: uuid\n          description: The account id that received the journal\n        - name: from_account\n          in: query\n          schema:\n            type: string\n            format: uuid\n          description: The account id that initiated the journal\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                discriminator:\n                  propertyName: entry_type\n                  mapping:\n                    JNLC: '#/components/schemas/JNLC'\n                    JNLS: '#/components/schemas/JNLS'\n                type: array\n                items:\n                  $ref: '#/components/schemas/Journal'\n      operationId: getAllJournals\n      description: Returns an array of journal objects.\n    post:\n      summary: Create a Journal.\n      tags:\n        - Journals\n      description: |\n        A journal can be JNLC (move cash) or JNLS (move shares), dictated by `entry_type`. Generally, journal requests are subject to approval and starts from the `pending` status. The status changes are propagated through the Event API. Under certain conditions agreed for the partner, such journal transactions that meet the criteria are executed right away.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateJournalRequest'\n            example:\n              entry_type: JNLC\n              from_account: 7c891489-574f-4f9a-82f0-4082a07f4736\n              to_account: 2d47a229-0c25-40a2-8cc7-b2c8821ff93a\n              amount: '115.5'\n      responses:\n        '200':\n          description: The New Journal object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Journal'\n        '400':\n          description: One of the parameters is invalid.\n          content:\n            application/json:\n              schema:\n                type: string\n        '403':\n          description: The amount requested to move is not available.\n          content:\n            application/json:\n              schema:\n                type: string\n        '404':\n          description: One of the account is not found.\n          content:\n            application/json:\n              schema:\n                type: string\n      operationId: createJournal\n  '/v1/journals/{journal_id}':\n    parameters:\n      - name: journal_id\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    delete:\n      summary: Cancel a pending journal.\n      tags:\n        - Journals\n      description: 'You can only delete a journal if the journal is still in a pending state, if a journal is executed you will not be able to delete. The alternative is to create a mirror journal entry to reverse the flow of funds.'\n      responses:\n        '204':\n          description: |\n            The cancel request succeeded. (No-content)\n        '404':\n          description: |\n            The journal is not found.\n        '422':\n          description: |\n            The journal is not in the pending status.\n      operationId: deleteJournalById\n  /v1/journals/batch:\n    post:\n      summary: Create a Batch Journal Transaction (One-to-Many)\n      operationId: createBatchJournal\n      responses:\n        '200':\n          description: an array of journal objects with an extra attribute error_message in the case when a specific account fails to receive a journal.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BatchJournalResponse'\n              examples: {}\n      description: |-\n        You can create a batch of journal requests by using this endpoint. This is enabled on JNLC type Journals for now only.\n\n        Every single request must be valid for the entire batch operation to succeed.\n\n        In the case of a successful request, the response will contain an array of journal objects with an extra attribute error_message in the case when a specific account fails to receive a journal.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchJournalRequest'\n        description: ''\n      tags:\n        - Journals\n  '/v1/oauth/clients/{client_id}':\n    parameters:\n      - name: client_id\n        required: true\n        in: path\n        schema:\n          type: string\n          format: uuid\n    get:\n      summary: Get an OAuth client\n      tags:\n        - OAuth\n      description: |\n        The endpoint returns the details of OAuth client to display in the authorization page.\n      parameters:\n        - name: response_type\n          in: query\n          schema:\n            type: string\n            enum:\n              - code\n              - token\n            example: token\n          description: code or token\n        - name: redirect_uri\n          in: query\n          schema:\n            type: string\n            example: 'https://example.com/authorize'\n          description: Redirect URI of the OAuth flow\n        - name: scope\n          in: query\n          schema:\n            type: string\n            example: general\n          description: Requested scopes by the OAuth flow\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OathClientResponse'\n              examples:\n                example-1:\n                  value:\n                    client_id: 7a3c52a910e1dc2abbb14da2b6b8e711\n                    name: TradingApp\n                    description: Sample description\n                    url: 'http://test.com'\n                    terms_of_use: ''\n                    privacy_policy: ''\n                    status: ACTIVE\n                    redirect_uri:\n                      - 'http://localhost'\n                    live_trading_approved: false\n        '401':\n          description: |\n            Client does not exist or you do not have access to the client.\n          content:\n            application/json:\n              schema:\n                type: string\n      operationId: getOAuthClient\n  /v1/oauth/token:\n    post:\n      summary: Issue an OAuth token.\n      tags:\n        - OAuth\n      description: |\n        The operation issues an OAuth code which can be used in the OAuth code flow.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuthTokenRequest'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IssueOAuthTokenResponse'\n              examples:\n                example-1:\n                  value:\n                    access_token: 87586f14-c3f4-4912-b107-f75bc17ff87a\n                    token_type: Bearer\n                    scope: general\n        '401':\n          description: |\n            Client does not exists, you do not have access to the client, or “client_secret” is incorrect.\n          content:\n            application/json:\n              schema:\n                type: string\n        '422':\n          description: |\n            Redirect URI or scope is invalid.\n          content:\n            application/json:\n              schema:\n                type: string\n      operationId: issueOAuthToken\n  /v1/oauth/authorize:\n    post:\n      summary: Authorize an OAuth Token\n      tags:\n        - OAuth\n      description: |\n        The operation issues an OAuth code which can be used in the OAuth code flow.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OAuthTokenRequest'\n      responses:\n        '200':\n          description: Successfully issued a code.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizeOAuthTokenResponse'\n        '401':\n          description: |\n            Client does not exists, you do not have access to the client, or “client_secret” is incorrect.\n          content:\n            application/json:\n              schema:\n                type: string\n        '422':\n          description: |\n            Redirect URI or scope is invalid.\n          content:\n            application/json:\n              schema:\n                type: string\n      operationId: authorizeOAuthToken\n  '/v1/trading/accounts/{account_id}/watchlists':\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: account_id\n        in: path\n        required: true\n        description: Unique identifier of an account.\n    get:\n      summary: Retrieve all watchlists\n      tags:\n        - Watchlist\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Watchlist'\n      operationId: getAllWatchlistsForAccount\n      description: Fetch a list of all watchlists currently in an account.\n    post:\n      summary: Create a new watchlist\n      tags:\n        - Watchlist\n      operationId: createWatchlistForAccount\n      description: Returns the watchlist object\n      responses:\n        '200':\n          description: Newly created watchlist\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Watchlist'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateWatchlistRequest'\n  '/v1/accounts/{account_id}/watchlists/{watchlist_id}':\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: account_id\n        in: path\n        required: true\n        description: Unique identifier of an account\n      - schema:\n          type: string\n          format: uuid\n        name: watchlist_id\n        in: path\n        required: true\n        description: Unique identifier of a watchlist\n    get:\n      summary: Manage watchlists\n      tags:\n        - Watchlist\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Watchlist'\n      operationId: getWatchlistForAccountById\n      description: Fetch a single watchlist by identifier.\n    put:\n      summary: Update an existing watchlist\n      tags:\n        - Watchlist\n      operationId: replaceWatchlistForAccountById\n      responses:\n        '200':\n          description: Updated watchlist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Watchlist'\n      description: Replace entirely the set of securities contained in the watchlist while optionally renaming it. Destructive operation.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateWatchlistRequest'\n    delete:\n      summary: Remove a watchlist\n      tags:\n        - Watchlist\n      operationId: deleteWatchlistFromAccountById\n      responses:\n        '200':\n          description: Watchlist deleted.\n      description: Irrevocably delete a watchlist.\n  /v1/corporate_actions/announcements:\n    get:\n      summary: Retrieving Announcements\n      tags:\n        - Corporate Actions\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Announcement'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n      operationId: getCorporateAnnouncements\n      description: This enables searching for an array of corporate action announcements based on criteria.\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: ca_types\n          description: A comma-delimited list of CorporateActionType values\n          required: true\n        - schema:\n            type: string\n            format: date\n          in: query\n          required: true\n          name: since\n          description: The start (inclusive) of the date range when searching corporate action announcements. This should follow the YYYY-MM-DD format. The date range is limited to 90 days.\n        - schema:\n            type: string\n            format: date\n          in: query\n          required: true\n          description: The end (inclusive) of the date range when searching corporate action announcements. This should follow the YYYY-MM-DD format. The date range is limited to 90 days.\n          name: until\n        - schema:\n            type: string\n          in: query\n          name: symbol\n          description: The symbol of the company initiating the announcement.\n        - schema:\n            type: string\n          in: query\n          name: cusip\n          description: The CUSIP of the company initiating the announcement.\n        - schema:\n            type: string\n            enum:\n              - declaration_date\n              - ex_date\n              - record_date\n              - payable_date\n          in: query\n          name: date_type\n          description: |-\n            An emum of possible ways to use the `since` and `until` parameters to search by.\n\n            the types are:\n\n            - **declaration_date**: The date of the preliminary announcement details or the date that any subsequent term updates took place.\n            - **ex_date**: The date on which any security purchasing activity will not result in a corporate action entitlement. Any selling activity that takes place on or after this date will result in a corporate action entitlement.\n            - **record_date**: The date the company checks its records to determine who is shareholder in order to allocate entitlements.\n            - **payable_date**: The date that the stock and cash positions will update according to the account positions as of the record date.\nsecurity:\n  - BasicAuth: []\n",
			"canonicalURL": "/github.com/alpacahq/alpaca-docs@7cec702640ecf11a47e80f9c4b28bfaff6f59a4e/-/blob/oas/broker/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/alpacahq/alpaca-docs/blob/7cec702640ecf11a47e80f9c4b28bfaff6f59a4e/oas/broker/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/v1/journals/batch\": post: responses: 200: contents: application/json: generate schema: item: allOf: schema type mismatch:  and object",
	"NotImplemented": [
		"unsupported content types"
	]
}