{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainjet/platform"
		},
		"file": {
			"name": "aws-data-mediastore-2017-09-01.json",
			"size": 0,
			"path": "schemas/openapi3/aws-data-mediastore-2017-09-01.json",
			"byteSize": 29099,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"2017-09-01\",\n    \"x-release\": \"v4\",\n    \"title\": \"AWS Elemental MediaStore Data Plane\",\n    \"description\": \"An AWS Elemental MediaStore asset is an object, similar to an object in the Amazon S3 service. Objects are the fundamental entities that are stored in AWS Elemental MediaStore.\",\n    \"x-logo\": {\n      \"url\": \"https://raw.githubusercontent.com/chainjet/assets/master/integrations/aws/Arch_AWS-Elemental-MediaStore_64.svg\"\n    },\n    \"termsOfService\": \"https://aws.amazon.com/service-terms/\",\n    \"contact\": {\n      \"name\": \"Mike Ralphson\",\n      \"email\": \"mike.ralphson@gmail.com\",\n      \"url\": \"https://github.com/mermade/aws2openapi\",\n      \"x-twitter\": \"PermittedSoc\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0 License\",\n      \"url\": \"http://www.apache.org/licenses/\"\n    },\n    \"x-providerName\": \"amazonaws.com\",\n    \"x-serviceName\": \"mediastore-data\",\n    \"x-origin\": [\n      {\n        \"contentType\": \"application/json\",\n        \"url\": \"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediastore-data-2017-09-01.normal.json\",\n        \"converter\": {\n          \"url\": \"https://github.com/mermade/aws2openapi\",\n          \"version\": \"1.0.0\"\n        },\n        \"x-apisguru-driver\": \"external\"\n      }\n    ],\n    \"x-apiClientRegistration\": {\n      \"url\": \"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\"\n    },\n    \"x-apisguru-categories\": [\"cloud\"],\n    \"x-preferred\": true\n  },\n  \"externalDocs\": {\n    \"description\": \"Amazon Web Services documentation\",\n    \"url\": \"https://docs.aws.amazon.com/mediastore/\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://data.mediastore.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The MediaStore Data multi-region endpoint\"\n    },\n    {\n      \"url\": \"https://data.mediastore.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The MediaStore Data multi-region endpoint\"\n    },\n    {\n      \"url\": \"http://data.mediastore.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The MediaStore Data endpoint for China (Beijing) and China (Ningxia)\"\n    },\n    {\n      \"url\": \"https://data.mediastore.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The MediaStore Data endpoint for China (Beijing) and China (Ningxia)\"\n    }\n  ],\n  \"paths\": {\n    \"/{Path}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteObject\",\n        \"description\": \"Deletes an object at the specified path.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DeleteObjectResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ContainerNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContainerNotFoundException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ObjectNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ObjectNotFoundException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerError\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InternalServerError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Path\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The path (including the file name) where the object is stored in the container. Format: \u0026lt;folder name\u0026gt;/\u0026lt;folder name\u0026gt;/\u0026lt;file name\u0026gt;\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"(?:[A-Za-z0-9_\\\\.\\\\-\\\\~]+/){0,10}[A-Za-z0-9_\\\\.\\\\-\\\\~]+\",\n              \"minLength\": 1,\n              \"maxLength\": 900\n            }\n          }\n        ],\n        \"summary\": \"Delete Object\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"head\": {\n        \"operationId\": \"DescribeObject\",\n        \"description\": \"Gets the headers for an object at the specified path.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DescribeObjectResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ContainerNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContainerNotFoundException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ObjectNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ObjectNotFoundException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerError\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InternalServerError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Path\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The path (including the file name) where the object is stored in the container. Format: \u0026lt;folder name\u0026gt;/\u0026lt;folder name\u0026gt;/\u0026lt;file name\u0026gt;\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"(?:[A-Za-z0-9_\\\\.\\\\-\\\\~]+/){0,10}[A-Za-z0-9_\\\\.\\\\-\\\\~]+\",\n              \"minLength\": 1,\n              \"maxLength\": 900\n            }\n          }\n        ],\n        \"summary\": \"Describe Object\"\n      },\n      \"get\": {\n        \"operationId\": \"GetObject\",\n        \"description\": \"Downloads the object at the specified path. If the object’s upload availability is set to \u003ccode\u003estreaming\u003c/code\u003e, AWS Elemental MediaStore downloads the object even if it’s still uploading the object.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GetObjectResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ContainerNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContainerNotFoundException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"ObjectNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ObjectNotFoundException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RequestedRangeNotSatisfiableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RequestedRangeNotSatisfiableException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalServerError\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InternalServerError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Path\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"\u003cp\u003eThe path (including the file name) where the object is stored in the container. Format: \u0026lt;folder name\u0026gt;/\u0026lt;folder name\u0026gt;/\u0026lt;file name\u0026gt;\u003c/p\u003e \u003cp\u003eFor example, to upload the file \u003ccode\u003emlaw.avi\u003c/code\u003e to the folder path \u003ccode\u003epremium\\\\canada\u003c/code\u003e in the container \u003ccode\u003emovies\u003c/code\u003e, enter the path \u003ccode\u003epremium/canada/mlaw.avi\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eDo not include the container name in this path.\u003c/p\u003e \u003cp\u003eIf the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing \u003ccode\u003epremium/usa\u003c/code\u003e subfolder. If you specify \u003ccode\u003epremium/canada\u003c/code\u003e, the service creates a \u003ccode\u003ecanada\u003c/code\u003e subfolder in the \u003ccode\u003epremium\u003c/code\u003e folder. You then have two subfolders, \u003ccode\u003eusa\u003c/code\u003e and \u003ccode\u003ecanada\u003c/code\u003e, in the \u003ccode\u003epremium\u003c/code\u003e folder. \u003c/p\u003e \u003cp\u003eThere is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.\u003c/p\u003e \u003cp\u003eFor more information about folders and how they exist in a container, see the \u003ca href=\\\"http://docs.aws.amazon.com/mediastore/latest/ug/\\\"\u003eAWS Elemental MediaStore User Guide\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThe file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. \u003c/p\u003e\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"(?:[A-Za-z0-9_\\\\.\\\\-\\\\~]+/){0,10}[A-Za-z0-9_\\\\.\\\\-\\\\~]+\",\n              \"minLength\": 1,\n              \"maxLength\": 900\n            }\n          },\n          {\n            \"name\": \"Range\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"description\": \"The range bytes of an object to retrieve. For more information about the \u003ccode\u003eRange\u003c/code\u003e header, see \u003ca href=\\\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\\\"\u003ehttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\u003c/a\u003e. AWS Elemental MediaStore ignores this header for partially uploaded objects that have streaming upload availability.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^bytes=(?:\\\\d+\\\\-\\\\d*|\\\\d*\\\\-\\\\d+)$\"\n            }\n          }\n        ],\n        \"summary\": \"Get Object\"\n      },\n      \"put\": {\n        \"operationId\": \"PutObject\",\n        \"description\": \"Uploads an object to the specified path. Object sizes are limited to 25 MB for standard upload availability and 10 MB for streaming upload availability.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/PutObjectResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ContainerNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContainerNotFoundException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalServerError\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InternalServerError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Path\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"\u003cp\u003eThe path (including the file name) where the object is stored in the container. Format: \u0026lt;folder name\u0026gt;/\u0026lt;folder name\u0026gt;/\u0026lt;file name\u0026gt;\u003c/p\u003e \u003cp\u003eFor example, to upload the file \u003ccode\u003emlaw.avi\u003c/code\u003e to the folder path \u003ccode\u003epremium\\\\canada\u003c/code\u003e in the container \u003ccode\u003emovies\u003c/code\u003e, enter the path \u003ccode\u003epremium/canada/mlaw.avi\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eDo not include the container name in this path.\u003c/p\u003e \u003cp\u003eIf the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing \u003ccode\u003epremium/usa\u003c/code\u003e subfolder. If you specify \u003ccode\u003epremium/canada\u003c/code\u003e, the service creates a \u003ccode\u003ecanada\u003c/code\u003e subfolder in the \u003ccode\u003epremium\u003c/code\u003e folder. You then have two subfolders, \u003ccode\u003eusa\u003c/code\u003e and \u003ccode\u003ecanada\u003c/code\u003e, in the \u003ccode\u003epremium\u003c/code\u003e folder. \u003c/p\u003e \u003cp\u003eThere is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.\u003c/p\u003e \u003cp\u003eFor more information about folders and how they exist in a container, see the \u003ca href=\\\"http://docs.aws.amazon.com/mediastore/latest/ug/\\\"\u003eAWS Elemental MediaStore User Guide\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThe file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension. \u003c/p\u003e\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"(?:[A-Za-z0-9_\\\\.\\\\-\\\\~]+/){0,10}[A-Za-z0-9_\\\\.\\\\-\\\\~]+\",\n              \"minLength\": 1,\n              \"maxLength\": 900\n            }\n          },\n          {\n            \"name\": \"Content-Type\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"description\": \"The content type of the object.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[\\\\w\\\\-\\\\/\\\\.\\\\+]{1,255}$\"\n            }\n          },\n          {\n            \"name\": \"Cache-Control\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"description\": \"\u003cp\u003eAn optional \u003ccode\u003eCacheControl\u003c/code\u003e header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at \u003ca href=\\\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\\\"\u003ehttps://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eHeaders with a custom user-defined value are also accepted.\u003c/p\u003e\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"x-amz-storage-class\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"description\": \"Indicates the storage class of a \u003ccode\u003ePut\u003c/code\u003e request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"TEMPORAL\"],\n              \"minLength\": 1,\n              \"maxLength\": 16\n            }\n          },\n          {\n            \"name\": \"x-amz-upload-availability\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"description\": \"\u003cp\u003eIndicates the availability of an object while it is still uploading. If the value is set to \u003ccode\u003estreaming\u003c/code\u003e, the object is available for downloading after some initial buffering but before the object is uploaded completely. If the value is set to \u003ccode\u003estandard\u003c/code\u003e, the object is available for downloading only when it is uploaded completely. The default value for this header is \u003ccode\u003estandard\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eTo use this header, you must also set the HTTP \u003ccode\u003eTransfer-Encoding\u003c/code\u003e header to \u003ccode\u003echunked\u003c/code\u003e.\u003c/p\u003e\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"STANDARD\", \"STREAMING\"],\n              \"minLength\": 1,\n              \"maxLength\": 16\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"Body\"],\n                \"properties\": {\n                  \"Body\": {\n                    \"description\": \"The bytes to be stored. \",\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Put Object\"\n      }\n    },\n    \"/\": {\n      \"get\": {\n        \"operationId\": \"ListItems\",\n        \"description\": \"Provides a list of metadata entries about folders and objects in the specified folder.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ListItemsResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ContainerNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContainerNotFoundException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalServerError\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InternalServerError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Path\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The path in the container from which to retrieve items. Format: \u0026lt;folder name\u0026gt;/\u0026lt;folder name\u0026gt;/\u0026lt;file name\u0026gt;\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"/?(?:[A-Za-z0-9_\\\\.\\\\-\\\\~]+/){0,10}(?:[A-Za-z0-9_\\\\.\\\\-\\\\~]+)?/?\",\n              \"minLength\": 0,\n              \"maxLength\": 900\n            }\n          },\n          {\n            \"name\": \"MaxResults\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"\u003cp\u003eThe maximum number of results to return per API request. For example, you submit a \u003ccode\u003eListItems\u003c/code\u003e request with \u003ccode\u003eMaxResults\u003c/code\u003e set at 500. Although 2,000 items match your request, the service returns no more than the first 500 items. (The service also returns a \u003ccode\u003eNextToken\u003c/code\u003e value that you can use to fetch the next batch of results.) The service might return fewer results than the \u003ccode\u003eMaxResults\u003c/code\u003e value.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eMaxResults\u003c/code\u003e is not included in the request, the service defaults to pagination with a maximum of 1,000 results per page.\u003c/p\u003e\",\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 1000 }\n          },\n          {\n            \"name\": \"NextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"\u003cp\u003eThe token that identifies which batch of results that you want to see. For example, you submit a \u003ccode\u003eListItems\u003c/code\u003e request with \u003ccode\u003eMaxResults\u003c/code\u003e set at 500. The service returns the first batch of results (up to 500) and a \u003ccode\u003eNextToken\u003c/code\u003e value. To see the next batch of results, you can submit the \u003ccode\u003eListItems\u003c/code\u003e request a second time and specify the \u003ccode\u003eNextToken\u003c/code\u003e value.\u003c/p\u003e \u003cp\u003eTokens expire after 15 minutes.\u003c/p\u003e\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"List Items\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"X-Amz-Content-Sha256\": {\n        \"name\": \"X-Amz-Content-Sha256\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Date\": {\n        \"name\": \"X-Amz-Date\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Algorithm\": {\n        \"name\": \"X-Amz-Algorithm\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Credential\": {\n        \"name\": \"X-Amz-Credential\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Security-Token\": {\n        \"name\": \"X-Amz-Security-Token\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Signature\": {\n        \"name\": \"X-Amz-Signature\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-SignedHeaders\": {\n        \"name\": \"X-Amz-SignedHeaders\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"hmac\": {\n        \"type\": \"apiKey\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\",\n        \"description\": \"Amazon Signature authorization v4\",\n        \"x-amazon-apigateway-authtype\": \"awsSigv4\"\n      }\n    },\n    \"schemas\": {\n      \"DeleteObjectResponse\": { \"type\": \"object\", \"properties\": {} },\n      \"ContainerNotFoundException\": {},\n      \"ObjectNotFoundException\": {},\n      \"InternalServerError\": {},\n      \"DescribeObjectResponse\": { \"type\": \"object\", \"properties\": {} },\n      \"GetObjectResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Body\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PayloadBlob\" },\n              { \"description\": \"The bytes of the object. \" }\n            ]\n          },\n          \"StatusCode\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/statusCode\" },\n              {\n                \"description\": \"The HTML status code of the request. Status codes ranging from 200 to 299 indicate success. All other status codes indicate the type of error that occurred.\"\n              }\n            ]\n          }\n        }\n      },\n      \"RequestedRangeNotSatisfiableException\": {},\n      \"ListItemsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Items\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ItemList\" },\n              {\n                \"description\": \"The metadata entries for the folders and objects at the requested path.\"\n              }\n            ]\n          },\n          \"NextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PaginationToken\" },\n              {\n                \"description\": \"The token that can be used in a request to view the next set of results. For example, you submit a \u003ccode\u003eListItems\u003c/code\u003e request that matches 2,000 items with \u003ccode\u003eMaxResults\u003c/code\u003e set at 500. The service returns the first batch of results (up to 500) and a \u003ccode\u003eNextToken\u003c/code\u003e value that can be used to fetch the next batch of results.\"\n              }\n            ]\n          }\n        }\n      },\n      \"PutObjectResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ContentSHA256\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SHA256Hash\" },\n              {\n                \"description\": \"The SHA256 digest of the object that is persisted.\"\n              }\n            ]\n          },\n          \"ETag\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ETag\" },\n              {\n                \"description\": \"Unique identifier of the object in the container.\"\n              }\n            ]\n          },\n          \"StorageClass\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StorageClass\" },\n              {\n                \"description\": \"The storage class where the object was persisted. The class should be “Temporal”.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ContentType\": {\n        \"type\": \"string\",\n        \"pattern\": \"^[\\\\w\\\\-\\\\/\\\\.\\\\+]{1,255}$\"\n      },\n      \"ETag\": {\n        \"type\": \"string\",\n        \"pattern\": \"[0-9A-Fa-f]+\",\n        \"minLength\": 1,\n        \"maxLength\": 64\n      },\n      \"NonNegativeLong\": { \"type\": \"integer\", \"minimum\": 0 },\n      \"TimeStamp\": { \"type\": \"string\", \"format\": \"date-time\" },\n      \"PayloadBlob\": { \"type\": \"string\" },\n      \"statusCode\": { \"type\": \"integer\" },\n      \"ItemName\": { \"type\": \"string\", \"pattern\": \"[A-Za-z0-9_\\\\.\\\\-\\\\~]+\" },\n      \"ItemType\": { \"type\": \"string\", \"enum\": [\"OBJECT\", \"FOLDER\"] },\n      \"Item\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ItemName\" },\n              { \"description\": \"The name of the item.\" }\n            ]\n          },\n          \"Type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ItemType\" },\n              { \"description\": \"The item type (folder or object).\" }\n            ]\n          },\n          \"ETag\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ETag\" },\n              {\n                \"description\": \"The ETag that represents a unique instance of the item.\"\n              }\n            ]\n          },\n          \"LastModified\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TimeStamp\" },\n              {\n                \"description\": \"The date and time that the item was last modified.\"\n              }\n            ]\n          },\n          \"ContentType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ContentType\" },\n              { \"description\": \"The content type of the item.\" }\n            ]\n          },\n          \"ContentLength\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NonNegativeLong\" },\n              { \"description\": \"The length of the item in bytes.\" }\n            ]\n          }\n        },\n        \"description\": \"A metadata entry for a folder or object.\"\n      },\n      \"ItemList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Item\" }\n      },\n      \"PaginationToken\": { \"type\": \"string\" },\n      \"StorageClass\": {\n        \"type\": \"string\",\n        \"enum\": [\"TEMPORAL\"],\n        \"minLength\": 1,\n        \"maxLength\": 16\n      },\n      \"SHA256Hash\": {\n        \"type\": \"string\",\n        \"pattern\": \"[0-9A-Fa-f]{64}\",\n        \"minLength\": 64,\n        \"maxLength\": 64\n      }\n    }\n  },\n  \"security\": [{ \"hmac\": [] }],\n  \"x-metadata\": {\n    \"apiVersion\": \"2017-09-01\",\n    \"endpointPrefix\": \"data.mediastore\",\n    \"protocol\": \"rest-json\",\n    \"serviceAbbreviation\": \"MediaStore Data\",\n    \"serviceFullName\": \"AWS Elemental MediaStore Data Plane\",\n    \"serviceId\": \"MediaStore Data\",\n    \"signatureVersion\": \"v4\",\n    \"signingName\": \"mediastore\",\n    \"uid\": \"mediastore-data-2017-09-01\",\n    \"targetPrefix\": \"MediaStoreObject_20170901\"\n  }\n}\n",
			"canonicalURL": "/github.com/chainjet/platform@e2f11798433d537a6d63c18ac444f6b6e5360bb2/-/blob/schemas/openapi3/aws-data-mediastore-2017-09-01.json",
			"externalURLs": [
				{
					"url": "https://github.com/chainjet/platform/blob/e2f11798433d537a6d63c18ac444f6b6e5360bb2/schemas/openapi3/aws-data-mediastore-2017-09-01.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/\": get: responses: code 200: contents: media: \"application/json\": generate schema: field Items: allOf: schema type mismatch: array and "
}