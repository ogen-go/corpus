{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wsvincent/djangoforapis_30"
		},
		"file": {
			"name": "openapi-schema.yml",
			"size": 0,
			"path": "ch9-schemas-and-documentation/openapi-schema.yml",
			"byteSize": 25375,
			"content": "openapi: 3.0.2\ninfo:\n  title: ''\n  version: ''\npaths:\n  /api/v1/users/:\n    get:\n      operationId: listUsers\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  properties:\n                    id:\n                      type: integer\n                      readOnly: true\n                    username:\n                      type: string\n                      description: Required. 150 characters or fewer. Letters, digits\n                        and @/./+/-/_ only.\n                      pattern: ^[\\w.@+-]+\\Z\n                      maxLength: 150\n                  required:\n                  - username\n          description: ''\n    post:\n      operationId: createUser\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id001\n              properties:\n                username:\n                  type: string\n                  description: Required. 150 characters or fewer. Letters, digits\n                    and @/./+/-/_ only.\n                  pattern: ^[\\w.@+-]+\\Z\n                  maxLength: 150\n              required:\n              - username\n          application/x-www-form-urlencoded:\n            schema: *id001\n          multipart/form-data:\n            schema: *id001\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    type: integer\n                    readOnly: true\n                  username:\n                    type: string\n                    description: Required. 150 characters or fewer. Letters, digits\n                      and @/./+/-/_ only.\n                    pattern: ^[\\w.@+-]+\\Z\n                    maxLength: 150\n                required:\n                - username\n          description: ''\n  /api/v1/users/{id}/:\n    get:\n      operationId: retrieveUser\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    type: integer\n                    readOnly: true\n                  username:\n                    type: string\n                    description: Required. 150 characters or fewer. Letters, digits\n                      and @/./+/-/_ only.\n                    pattern: ^[\\w.@+-]+\\Z\n                    maxLength: 150\n                required:\n                - username\n          description: ''\n    put:\n      operationId: updateUser\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id002\n              properties:\n                username:\n                  type: string\n                  description: Required. 150 characters or fewer. Letters, digits\n                    and @/./+/-/_ only.\n                  pattern: ^[\\w.@+-]+\\Z\n                  maxLength: 150\n              required:\n              - username\n          application/x-www-form-urlencoded:\n            schema: *id002\n          multipart/form-data:\n            schema: *id002\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    type: integer\n                    readOnly: true\n                  username:\n                    type: string\n                    description: Required. 150 characters or fewer. Letters, digits\n                      and @/./+/-/_ only.\n                    pattern: ^[\\w.@+-]+\\Z\n                    maxLength: 150\n                required:\n                - username\n          description: ''\n    patch:\n      operationId: partial_updateUser\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id003\n              properties:\n                username:\n                  type: string\n                  description: Required. 150 characters or fewer. Letters, digits\n                    and @/./+/-/_ only.\n                  pattern: ^[\\w.@+-]+\\Z\n                  maxLength: 150\n          application/x-www-form-urlencoded:\n            schema: *id003\n          multipart/form-data:\n            schema: *id003\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    type: integer\n                    readOnly: true\n                  username:\n                    type: string\n                    description: Required. 150 characters or fewer. Letters, digits\n                      and @/./+/-/_ only.\n                    pattern: ^[\\w.@+-]+\\Z\n                    maxLength: 150\n                required:\n                - username\n          description: ''\n    delete:\n      operationId: destroyUser\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: string\n      responses:\n        '204':\n          description: ''\n  /api/v1/:\n    get:\n      operationId: listPosts\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  properties:\n                    id:\n                      type: integer\n                      readOnly: true\n                    author:\n                      type: integer\n                    title:\n                      type: string\n                      maxLength: 50\n                    body:\n                      type: string\n                    created_at:\n                      type: string\n                      format: date-time\n                      readOnly: true\n                  required:\n                  - author\n                  - title\n                  - body\n          description: ''\n    post:\n      operationId: createPost\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id004\n              properties:\n                author:\n                  type: integer\n                title:\n                  type: string\n                  maxLength: 50\n                body:\n                  type: string\n              required:\n              - author\n              - title\n              - body\n          application/x-www-form-urlencoded:\n            schema: *id004\n          multipart/form-data:\n            schema: *id004\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    type: integer\n                    readOnly: true\n                  author:\n                    type: integer\n                  title:\n                    type: string\n                    maxLength: 50\n                  body:\n                    type: string\n                  created_at:\n                    type: string\n                    format: date-time\n                    readOnly: true\n                required:\n                - author\n                - title\n                - body\n          description: ''\n  /api/v1/{id}/:\n    get:\n      operationId: retrievePost\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this post.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    type: integer\n                    readOnly: true\n                  author:\n                    type: integer\n                  title:\n                    type: string\n                    maxLength: 50\n                  body:\n                    type: string\n                  created_at:\n                    type: string\n                    format: date-time\n                    readOnly: true\n                required:\n                - author\n                - title\n                - body\n          description: ''\n    put:\n      operationId: updatePost\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this post.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id005\n              properties:\n                author:\n                  type: integer\n                title:\n                  type: string\n                  maxLength: 50\n                body:\n                  type: string\n              required:\n              - author\n              - title\n              - body\n          application/x-www-form-urlencoded:\n            schema: *id005\n          multipart/form-data:\n            schema: *id005\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    type: integer\n                    readOnly: true\n                  author:\n                    type: integer\n                  title:\n                    type: string\n                    maxLength: 50\n                  body:\n                    type: string\n                  created_at:\n                    type: string\n                    format: date-time\n                    readOnly: true\n                required:\n                - author\n                - title\n                - body\n          description: ''\n    patch:\n      operationId: partial_updatePost\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this post.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id006\n              properties:\n                author:\n                  type: integer\n                title:\n                  type: string\n                  maxLength: 50\n                body:\n                  type: string\n          application/x-www-form-urlencoded:\n            schema: *id006\n          multipart/form-data:\n            schema: *id006\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    type: integer\n                    readOnly: true\n                  author:\n                    type: integer\n                  title:\n                    type: string\n                    maxLength: 50\n                  body:\n                    type: string\n                  created_at:\n                    type: string\n                    format: date-time\n                    readOnly: true\n                required:\n                - author\n                - title\n                - body\n          description: ''\n    delete:\n      operationId: destroyPost\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this post.\n        schema:\n          type: string\n      responses:\n        '204':\n          description: ''\n  /api/v1/rest-auth/logout/:\n    get:\n      operationId: listLogouts\n      description: 'Calls Django logout method and delete the Token object\n\n        assigned to the current User object.\n\n\n        Accepts/Returns nothing.'\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n    post:\n      operationId: CreateLogout\n      description: 'Calls Django logout method and delete the Token object\n\n        assigned to the current User object.\n\n\n        Accepts/Returns nothing.'\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n  /api/v1/rest-auth/user/:\n    get:\n      operationId: RetrieveUserDetails\n      description: 'Reads and updates UserModel fields\n\n        Accepts GET, PUT, PATCH methods.\n\n\n        Default accepted fields: username, first_name, last_name\n\n        Default display fields: pk, username, email, first_name, last_name\n\n        Read-only fields: pk, email\n\n\n        Returns UserModel fields.'\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  pk:\n                    type: integer\n                    readOnly: true\n                  username:\n                    type: string\n                    description: Required. 150 characters or fewer. Letters, digits\n                      and @/./+/-/_ only.\n                    pattern: ^[\\w.@+-]+\\Z\n                    maxLength: 150\n                  email:\n                    type: string\n                    format: email\n                    readOnly: true\n                  first_name:\n                    type: string\n                    maxLength: 30\n                  last_name:\n                    type: string\n                    maxLength: 150\n                required:\n                - username\n          description: ''\n    put:\n      operationId: UpdateUserDetails\n      description: 'Reads and updates UserModel fields\n\n        Accepts GET, PUT, PATCH methods.\n\n\n        Default accepted fields: username, first_name, last_name\n\n        Default display fields: pk, username, email, first_name, last_name\n\n        Read-only fields: pk, email\n\n\n        Returns UserModel fields.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id007\n              properties:\n                username:\n                  type: string\n                  description: Required. 150 characters or fewer. Letters, digits\n                    and @/./+/-/_ only.\n                  pattern: ^[\\w.@+-]+\\Z\n                  maxLength: 150\n                first_name:\n                  type: string\n                  maxLength: 30\n                last_name:\n                  type: string\n                  maxLength: 150\n              required:\n              - username\n          application/x-www-form-urlencoded:\n            schema: *id007\n          multipart/form-data:\n            schema: *id007\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  pk:\n                    type: integer\n                    readOnly: true\n                  username:\n                    type: string\n                    description: Required. 150 characters or fewer. Letters, digits\n                      and @/./+/-/_ only.\n                    pattern: ^[\\w.@+-]+\\Z\n                    maxLength: 150\n                  email:\n                    type: string\n                    format: email\n                    readOnly: true\n                  first_name:\n                    type: string\n                    maxLength: 30\n                  last_name:\n                    type: string\n                    maxLength: 150\n                required:\n                - username\n          description: ''\n    patch:\n      operationId: PartialUpdateUserDetails\n      description: 'Reads and updates UserModel fields\n\n        Accepts GET, PUT, PATCH methods.\n\n\n        Default accepted fields: username, first_name, last_name\n\n        Default display fields: pk, username, email, first_name, last_name\n\n        Read-only fields: pk, email\n\n\n        Returns UserModel fields.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id008\n              properties:\n                username:\n                  type: string\n                  description: Required. 150 characters or fewer. Letters, digits\n                    and @/./+/-/_ only.\n                  pattern: ^[\\w.@+-]+\\Z\n                  maxLength: 150\n                first_name:\n                  type: string\n                  maxLength: 30\n                last_name:\n                  type: string\n                  maxLength: 150\n          application/x-www-form-urlencoded:\n            schema: *id008\n          multipart/form-data:\n            schema: *id008\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  pk:\n                    type: integer\n                    readOnly: true\n                  username:\n                    type: string\n                    description: Required. 150 characters or fewer. Letters, digits\n                      and @/./+/-/_ only.\n                    pattern: ^[\\w.@+-]+\\Z\n                    maxLength: 150\n                  email:\n                    type: string\n                    format: email\n                    readOnly: true\n                  first_name:\n                    type: string\n                    maxLength: 30\n                  last_name:\n                    type: string\n                    maxLength: 150\n                required:\n                - username\n          description: ''\n  /api/v1/rest-auth/password/reset/:\n    post:\n      operationId: CreatePasswordReset\n      description: 'Calls Django Auth PasswordResetForm save method.\n\n\n        Accepts the following POST parameters: email\n\n        Returns the success/fail message.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id009\n              properties:\n                email:\n                  type: string\n                  format: email\n              required:\n              - email\n          application/x-www-form-urlencoded:\n            schema: *id009\n          multipart/form-data:\n            schema: *id009\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  email:\n                    type: string\n                    format: email\n                required:\n                - email\n          description: ''\n  /api/v1/rest-auth/password/reset/confirm/:\n    post:\n      operationId: CreatePasswordResetConfirm\n      description: \"Password reset e-mail link is confirmed, therefore\\nthis resets\\\n        \\ the user's password.\\n\\nAccepts the following POST parameters: token, uid,\\n\\\n        \\    new_password1, new_password2\\nReturns the success/fail message.\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id010\n              properties:\n                new_password1:\n                  type: string\n                  maxLength: 128\n                new_password2:\n                  type: string\n                  maxLength: 128\n                uid:\n                  type: string\n                token:\n                  type: string\n              required:\n              - new_password1\n              - new_password2\n              - uid\n              - token\n          application/x-www-form-urlencoded:\n            schema: *id010\n          multipart/form-data:\n            schema: *id010\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  new_password1:\n                    type: string\n                    maxLength: 128\n                  new_password2:\n                    type: string\n                    maxLength: 128\n                  uid:\n                    type: string\n                  token:\n                    type: string\n                required:\n                - new_password1\n                - new_password2\n                - uid\n                - token\n          description: ''\n  /api/v1/rest-auth/login/:\n    post:\n      operationId: CreateLogin\n      description: 'Check the credentials and return the REST Token\n\n        if the credentials are valid and authenticated.\n\n        Calls Django Auth login method to register User ID\n\n        in Django session framework\n\n\n        Accept the following POST parameters: username, password\n\n        Return the REST Framework Token Object''s key.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id011\n              properties:\n                username:\n                  type: string\n                email:\n                  type: string\n                  format: email\n                password:\n                  type: string\n              required:\n              - password\n          application/x-www-form-urlencoded:\n            schema: *id011\n          multipart/form-data:\n            schema: *id011\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  username:\n                    type: string\n                  email:\n                    type: string\n                    format: email\n                  password:\n                    type: string\n                required:\n                - password\n          description: ''\n  /api/v1/rest-auth/password/change/:\n    post:\n      operationId: CreatePasswordChange\n      description: 'Calls Django Auth SetPasswordForm save method.\n\n\n        Accepts the following POST parameters: new_password1, new_password2\n\n        Returns the success/fail message.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id012\n              properties:\n                new_password1:\n                  type: string\n                  maxLength: 128\n                new_password2:\n                  type: string\n                  maxLength: 128\n              required:\n              - new_password1\n              - new_password2\n          application/x-www-form-urlencoded:\n            schema: *id012\n          multipart/form-data:\n            schema: *id012\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  new_password1:\n                    type: string\n                    maxLength: 128\n                  new_password2:\n                    type: string\n                    maxLength: 128\n                required:\n                - new_password1\n                - new_password2\n          description: ''\n  /api/v1/rest-auth/registration/:\n    post:\n      operationId: CreateRegister\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id013\n              properties:\n                username:\n                  type: string\n                  maxLength: 150\n                  minLength: 1\n                email:\n                  type: string\n                  format: email\n                password1:\n                  type: string\n                  writeOnly: true\n                password2:\n                  type: string\n                  writeOnly: true\n              required:\n              - username\n              - password1\n              - password2\n          application/x-www-form-urlencoded:\n            schema: *id013\n          multipart/form-data:\n            schema: *id013\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  username:\n                    type: string\n                    maxLength: 150\n                    minLength: 1\n                  email:\n                    type: string\n                    format: email\n                required:\n                - username\n          description: ''\n  /api/v1/rest-auth/registration/verify-email/:\n    post:\n      operationId: CreateVerifyEmail\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: \u0026id014\n              properties:\n                key:\n                  type: string\n              required:\n              - key\n          application/x-www-form-urlencoded:\n            schema: *id014\n          multipart/form-data:\n            schema: *id014\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  key:\n                    type: string\n                required:\n                - key\n          description: ''\n"
		}
	},
	"Error": "buildIR: make ir: path \"/api/v1/rest-auth/user/\": get: responses: 200: contents: application/json: generate schema: field username: string validator: pattern: error parsing regexp: invalid escape sequence: `\\Z`"
}