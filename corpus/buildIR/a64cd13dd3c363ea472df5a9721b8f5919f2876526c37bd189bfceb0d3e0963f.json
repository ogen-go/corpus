{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "swaggerhub.com-1.0.47-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/swaggerhub.com-1.0.47-swagger.yaml",
			"byteSize": 31363,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: info@swaggerhub.com\n    name: SwaggerHub\n    url: https://swaggerhub.com\n  description: \u003e\n    # Introduction\n\n    This is the registry API for SwaggerHub. It allows you to access, manage, and update your APIs and Domains in SwaggerHub bypassing the Web application.\n\n\n    # Authentication\n\n    Use your personal API Key: you can find it by visiting the [API Key page](https://app.swaggerhub.com/settings/apiKey).\n  title: SwaggerHub Registry\n  version: 1.0.47\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://twitter.com/SwaggerHub/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://api.swaggerhub.com/apis/swagger-hub/registry-api/1.0.47\n      version: \"2.0\"\n  x-providerName: swaggerhub.com\ntags:\n  - description: Operations for APIs\n    name: APIs\n  - description: Operations for Domains\n    name: Domains\npaths:\n  /apis:\n    get:\n      description: \"\"\n      operationId: searchApis\n      parameters:\n        - $ref: \"#/components/parameters/query\"\n        - $ref: \"#/components/parameters/state\"\n        - description: Matches against tags associated with an API\n          in: query\n          name: tag\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/sort\"\n        - $ref: \"#/components/parameters/order\"\n      responses:\n        \"303\":\n          description: 303 response\n          headers:\n            Location:\n              schema:\n                type: string\n      security:\n        - TokenSecured: []\n      summary: Retrieves a list of currently defined APIs in APIs.json format.\n      tags:\n        - APIs\n  \"/apis/{owner}\":\n    get:\n      description: \"\"\n      operationId: getOwnerApis\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/sort\"\n        - $ref: \"#/components/parameters/order\"\n      responses:\n        \"200\":\n          description: A list of APIs in APIs.json format\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApisJson\"\n      security:\n        - TokenSecured: []\n      summary: Retrieves an APIs.json listing of all APIs defined for this owner\n      tags:\n        - APIs\n  \"/apis/{owner}/{api}\":\n    delete:\n      description: \"\"\n      operationId: deleteApi\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n      responses:\n        \"200\":\n          description: The API was successfully deleted\n        \"403\":\n          description: Access denied\n        \"404\":\n          description: The specified API not found\n        \"409\":\n          description: The API has published versions and cannot be deleted\n      security:\n        - TokenSecured: []\n      summary: Deletes the specified API\n      tags:\n        - APIs\n    get:\n      operationId: getApiVersions\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n      responses:\n        \"200\":\n          description: A list of API versions in APIs.json format\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApisJson\"\n      security:\n        - TokenSecured: []\n      summary: Retrieves an APIs.json listing for all API versions for this owner and\n        API\n      tags:\n        - APIs\n    post:\n      description: Saves the provided Swagger definition; the owner must match the token\n        owner. The version will be extracted from the Swagger definition itself.\n      operationId: saveDefinition\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n        - description: Defines whether the API has to be private\n          in: query\n          name: isPrivate\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: API version\n          in: query\n          name: version\n          required: false\n          schema:\n            type: string\n        - description: |\n            The OpenApi Specification (OAS)\n              version.\n            * 2.0 - For OAS2 (aka 'Swagger 2.0')\n            * 3.0.X - For OAS3\n          in: query\n          name: oas\n          required: false\n          schema:\n            type: string\n            enum:\n              - \"2.0\"\n              - 3.0.0\n              - 3.0.1\n            default: \"2.0\"\n        - description: Force update\n          in: query\n          name: force\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n          application/yaml:\n            schema:\n              type: string\n        description: The Swagger definition of this API\n        required: true\n      responses:\n        \"200\":\n          description: The API was successfully saved\n        \"201\":\n          description: New API was successfully saved\n        \"205\":\n          description: The API was successfully saved and should be reloaded\n        \"400\":\n          description: The Swagger definition was invalid\n        \"403\":\n          description: Maximum number of APIs reached\n        \"409\":\n          description: Cannot overwrite a published API version\n        \"415\":\n          description: Invalid content type\n      security:\n        - TokenSecured: []\n      summary: Saves the provided Swagger definition\n      tags:\n        - APIs\n  \"/apis/{owner}/{api}/.collaboration\":\n    delete:\n      operationId: deleteCollaboration\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n      responses:\n        default:\n          description: Successfully deleted a collaboration\n      security:\n        - TokenSecured: []\n      summary: Deletes API's collaboration\n      tags:\n        - APIs\n    get:\n      operationId: getCollaboration\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n        - in: query\n          name: expandTeams\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: The existing collaboration on an API\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaboration\"\n      security:\n        - TokenSecured: []\n      summary: Gets API's collaboration\n      tags:\n        - APIs\n    put:\n      operationId: updateCollaboration\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Collaboration\"\n      responses:\n        default:\n          description: Successfully updated API collaboration\n      security:\n        - TokenSecured: []\n      summary: Updates API's collaboration\n      tags:\n        - APIs\n  \"/apis/{owner}/{api}/{version}\":\n    delete:\n      description: \"\"\n      operationId: deleteApiVersion\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n        - $ref: \"#/components/parameters/version\"\n      responses:\n        \"200\":\n          description: The API version was successfully deleted\n        \"403\":\n          description: Access denied\n        \"404\":\n          description: The specified API was not found\n        \"409\":\n          description: The API version is published and cannot be deleted or it is the only\n            version of this API\n      security:\n        - TokenSecured: []\n      summary: Deletes a particular version of the specified API\n      tags:\n        - APIs\n    get:\n      description: \"\"\n      operationId: getDefinition\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n        - $ref: \"#/components/parameters/version\"\n      responses:\n        \"200\":\n          description: The Swagger API in requested format\n          content:\n            application/json:\n              schema:\n                properties: {}\n                type: object\n            application/yaml:\n              schema:\n                properties: {}\n                type: object\n        \"404\":\n          description: The specified API not found\n      security:\n        - TokenSecured: []\n      summary: Retrieves the Swagger definition for the specified API and version\n      tags:\n        - APIs\n  \"/apis/{owner}/{api}/{version}/.comment\":\n    get:\n      description: \u003e\n        Returns all the comments and replies added by collaborators in the\n        specified API version.\n      operationId: getApiComments\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n        - $ref: \"#/components/parameters/version\"\n      responses:\n        \"200\":\n          description: A list of comments for the specified API version\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ClosableComment\"\n                type: array\n        \"204\":\n          description: No comments were found for the specified API version\n        \"401\":\n          description: The access token is missing or invalid\n        \"403\":\n          description: Access denied (insufficient user permissions)\n        \"404\":\n          description: The specified API or version was not found\n      security:\n        - TokenSecured: []\n      summary: Returns comments for the specified API version\n      tags:\n        - APIs\n  \"/apis/{owner}/{api}/{version}/swagger.json\":\n    get:\n      description: \"\"\n      operationId: getJsonDefinition\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n        - $ref: \"#/components/parameters/version\"\n      responses:\n        \"200\":\n          description: The Swagger API in JSON format\n          content:\n            application/json:\n              schema:\n                properties: {}\n                type: object\n        \"404\":\n          description: The specified API was not found\n      security:\n        - TokenSecured: []\n      summary: Retrieves the Swagger definition for the specified API and version in\n        JSON format\n      tags:\n        - APIs\n  \"/apis/{owner}/{api}/{version}/swagger.yaml\":\n    get:\n      description: \"\"\n      operationId: getYamlDefinition\n      parameters:\n        - $ref: \"#/components/parameters/apiOwner\"\n        - $ref: \"#/components/parameters/api\"\n        - $ref: \"#/components/parameters/version\"\n      responses:\n        \"200\":\n          description: The Swagger API in YAML format\n          content:\n            application/yaml:\n              schema:\n                properties: {}\n                type: object\n        \"404\":\n          description: The specified API was not found\n      security:\n        - TokenSecured: []\n      summary: Retrieves the Swagger definition for the specified API and version in\n        YAML format\n      tags:\n        - APIs\n  /domains:\n    get:\n      operationId: searchDomains\n      parameters:\n        - $ref: \"#/components/parameters/query\"\n        - $ref: \"#/components/parameters/state\"\n        - description: Matches against tags associated with a domain\n          in: query\n          name: tag\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/sort\"\n        - $ref: \"#/components/parameters/order\"\n      responses:\n        \"303\":\n          description: 303 response\n          headers:\n            Location:\n              schema:\n                type: string\n      security:\n        - TokenSecured: []\n      summary: Retrieves a list of currently defined domains in APIs.json format\n      tags:\n        - Domains\n  \"/domains/{owner}\":\n    get:\n      operationId: getOwnerDomains\n      parameters:\n        - $ref: \"#/components/parameters/domainOwner\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/sort\"\n        - $ref: \"#/components/parameters/order\"\n      responses:\n        \"200\":\n          description: A list of domains in APIs.json format\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApisJson\"\n      security:\n        - TokenSecured: []\n      summary: Retrieves an APIs.json listing of all domains defined for this owner\n      tags:\n        - Domains\n  \"/domains/{owner}/{domain}\":\n    delete:\n      operationId: deleteDomain\n      parameters:\n        - $ref: \"#/components/parameters/domainOwner\"\n        - $ref: \"#/components/parameters/domain\"\n        - description: Force update\n          in: query\n          name: force\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: The domain was successfully deleted\n        \"403\":\n          description: Access denied\n        \"404\":\n          description: The specified domain not found\n        \"409\":\n          description: The domain has published versions and can not be deleted\n        \"424\":\n          description: Cannot delete because there are some dependencies for domain\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Page\"\n      security:\n        - TokenSecured: []\n      summary: Deletes the specified domain\n      tags:\n        - Domains\n    get:\n      operationId: getDomainVersions\n      parameters:\n        - $ref: \"#/components/parameters/domainOwner\"\n        - $ref: \"#/components/parameters/domain\"\n      responses:\n        \"200\":\n          description: A list of domain versions in APIs.json format\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApisJson\"\n      security:\n        - TokenSecured: []\n      summary: Retrieves an APIs.json listing for all domain versions for this owner\n        and domain\n      tags:\n        - Domains\n    post:\n      operationId: saveDomainDefinition\n      parameters:\n        - $ref: \"#/components/parameters/domainOwner\"\n        - $ref: \"#/components/parameters/domain\"\n        - description: Specifies whether the domain has to be private\n          in: query\n          name: isPrivate\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Domain version\n          in: query\n          name: version\n          required: true\n          schema:\n            type: string\n        - description: Force update\n          in: query\n          name: force\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n          application/yaml:\n            schema:\n              type: string\n        description: The Swagger definition of this domain\n      responses:\n        \"200\":\n          description: The domain was successfully saved\n        \"201\":\n          description: New domain was successfully saved\n        \"205\":\n          description: The domain was successfully saved and should be reloaded\n        \"403\":\n          description: Maximum number of domains reached\n        \"409\":\n          description: Cannot overwrite a published domain version\n        \"415\":\n          description: Invalid content type\n      security:\n        - TokenSecured: []\n      summary: Saves the provided Swagger definition of a domain\n      tags:\n        - Domains\n  \"/domains/{owner}/{domain}/{version}\":\n    delete:\n      operationId: deleteDomainVersion\n      parameters:\n        - $ref: \"#/components/parameters/domainOwner\"\n        - $ref: \"#/components/parameters/domain\"\n        - $ref: \"#/components/parameters/version\"\n        - description: Force update\n          in: query\n          name: force\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: The domain version was successfully deleted\n        \"403\":\n          description: Access denied\n        \"404\":\n          description: The specified domain was not found\n        \"409\":\n          description: The domain version is published and can not be deleted or it is the\n            only version of this API\n        \"424\":\n          description: Cannot delete because there are some dependencies for domain\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Page\"\n      security:\n        - TokenSecured: []\n      summary: Deletes a particular version of the specified domain\n      tags:\n        - Domains\n    get:\n      operationId: getDomainDefinition\n      parameters:\n        - $ref: \"#/components/parameters/domainOwner\"\n        - $ref: \"#/components/parameters/domain\"\n        - $ref: \"#/components/parameters/version\"\n      responses:\n        \"200\":\n          description: The Swagger domain in requested format\n          content:\n            application/json:\n              schema:\n                properties: {}\n                type: object\n            application/yaml:\n              schema:\n                properties: {}\n                type: object\n        \"404\":\n          description: The specified domain was not found\n      security:\n        - TokenSecured: []\n      summary: Retrieves the Swagger definition for the specified domain and version\n      tags:\n        - Domains\n  \"/domains/{owner}/{domain}/{version}/.comment\":\n    get:\n      description: \u003e\n        Returns all the comments and replies added by collaborators in the\n        specified domain version.\n      operationId: getDomainComments\n      parameters:\n        - $ref: \"#/components/parameters/domainOwner\"\n        - $ref: \"#/components/parameters/domain\"\n        - $ref: \"#/components/parameters/version\"\n      responses:\n        \"200\":\n          description: Comments for the specified domain\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ClosableComment\"\n                type: array\n        \"204\":\n          description: No comments were found for the specified domain version\n        \"401\":\n          description: The access token is missing or invalid\n        \"403\":\n          description: Access denied (insufficient user permissions)\n        \"404\":\n          description: The specified domain or version was not found\n      security:\n        - TokenSecured: []\n      summary: Returns comments for the specified domain version\n      tags:\n        - Domains\n  \"/domains/{owner}/{domain}/{version}/domain.json\":\n    get:\n      operationId: getDomainJsonDefinition\n      parameters:\n        - $ref: \"#/components/parameters/domainOwner\"\n        - $ref: \"#/components/parameters/domain\"\n        - $ref: \"#/components/parameters/version\"\n      responses:\n        \"200\":\n          description: Definition in JSON format\n          content:\n            application/json:\n              schema:\n                properties: {}\n                type: object\n        \"404\":\n          description: The specified domain was not found\n      security:\n        - TokenSecured: []\n      summary: Retrieves the definition for the specified domain and version in JSON\n        format\n      tags:\n        - Domains\n  \"/domains/{owner}/{domain}/{version}/domain.yaml\":\n    get:\n      operationId: getDomainYamlDefinition\n      parameters:\n        - $ref: \"#/components/parameters/domainOwner\"\n        - $ref: \"#/components/parameters/domain\"\n        - $ref: \"#/components/parameters/version\"\n      responses:\n        \"200\":\n          description: Definition in YAML format\n          content:\n            application/yaml:\n              schema:\n                properties: {}\n                type: object\n        \"404\":\n          description: The specified domain was not found\n      security:\n        - TokenSecured: []\n      summary: Retrieves the definition for the specified domain and version in YAML\n        format\n      tags:\n        - Domains\n  /specs:\n    get:\n      description: \"\"\n      operationId: searchApisAndDomains\n      parameters:\n        - description: |\n            Type of Swagger specs to search:\n            * API - APIs only\n            * DOMAIN - Domains only\n            * ANY - Both APIs and Domains\n          in: query\n          name: specType\n          required: false\n          schema:\n            type: string\n            enum:\n              - API\n              - DOMAIN\n              - ANY\n            default: ANY\n        - description: \u003e\n            The visibility of a spec in SwaggerHub:\n\n            * PUBLIC - can be viewed by anyone\n\n            * PRIVATE - can only be viewed by you or your Org and those that you are collaborating with or have shared it with\n\n            * ANY - either PUBLIC or PRIVATE\n          in: query\n          name: visibility\n          required: false\n          schema:\n            type: string\n            enum:\n              - PUBLIC\n              - PRIVATE\n              - ANY\n            default: ANY\n        - $ref: \"#/components/parameters/state\"\n        - description: API or Domain owner identifier. Can be username or organization name\n          in: query\n          name: owner\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/query\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/sort\"\n        - $ref: \"#/components/parameters/order\"\n      responses:\n        \"200\":\n          description: A list of APIs and Domains in APIs.json format\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApisJson\"\n      security:\n        - TokenSecured: []\n      summary: Retrieves a list of currently defined APIs and Domains in APIs.json\n        format\n      tags:\n        - APIs\n        - Domains\nservers:\n  - url: https://api.swaggerhub.com\ncomponents:\n  parameters:\n    api:\n      description: API name (case-sensitive)\n      in: path\n      name: api\n      required: true\n      schema:\n        type: string\n    apiOwner:\n      description: API owner (user or organization, case-sensitive)\n      in: path\n      name: owner\n      required: true\n      schema:\n        type: string\n    domain:\n      description: Domain name (case-sensitive)\n      in: path\n      name: domain\n      required: true\n      schema:\n        type: string\n    domainOwner:\n      description: Domain owner (user or organization, case-sensitive)\n      in: path\n      name: owner\n      required: true\n      schema:\n        type: string\n    limit:\n      description: Number of results per page\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n        format: int32\n        default: 10\n    order:\n      description: Sort order\n      in: query\n      name: order\n      required: false\n      schema:\n        type: string\n        enum:\n          - ASC\n          - DESC\n        default: ASC\n    page:\n      description: Page to return\n      in: query\n      name: page\n      required: false\n      schema:\n        type: integer\n        format: int32\n        default: 0\n    query:\n      description: Free text query to match\n      in: query\n      name: query\n      required: false\n      schema:\n        type: string\n    sort:\n      description: |\n        Sort criteria or result set:\n        * NAME\n        * UPATED\n        * CREATED\n        * OWNER\n      in: query\n      name: sort\n      required: false\n      schema:\n        type: string\n        enum:\n          - NAME\n          - UPDATED\n          - CREATED\n          - OWNER\n        default: NAME\n    state:\n      description: \u003e\n        Matches against published state of the spec:\n\n        * UNPUBLISHED - spec is a draft, a work in progress\n\n        * PUBLISHED - spec is a stable version ready for consuming from client applications\n\n        * ANY - either PUBLISHED or UNPUBLISHED\n      in: query\n      name: state\n      required: false\n      schema:\n        type: string\n        enum:\n          - ALL\n          - PUBLISHED\n          - UNPUBLISHED\n        default: ALL\n    version:\n      description: Version identifier (case-sensitive)\n      in: path\n      name: version\n      required: true\n      schema:\n        type: string\n  securitySchemes:\n    TokenSecured:\n      description: Specify your SwaggerHub API key found in\n        https://app.swaggerhub.com/settings/apiKey.\n      in: header\n      name: Authorization\n      type: apiKey\n  schemas:\n    ApisJson:\n      properties:\n        apis:\n          items:\n            $ref: \"#/components/schemas/ApisJsonApi\"\n          type: array\n        created:\n          format: date-time\n          type: string\n        description:\n          example: Default registry listing\n          type: string\n        modified:\n          format: date-time\n          type: string\n        name:\n          example: Default listing\n          type: string\n        offset:\n          format: int32\n          type: integer\n        specificationVersion:\n          type: string\n        totalCount:\n          format: int64\n          type: integer\n        url:\n          type: string\n      type: object\n    ApisJsonApi:\n      properties:\n        description:\n          example: This is a sample Petstore server.\n          type: string\n        name:\n          example: petstore\n          type: string\n        properties:\n          example:\n            - type: Swagger\n              url: https://api.swaggerhub.com/apis/username/petstore/1.1\n            - type: X-Version\n              value: \"1.1\"\n            - type: X-Created\n              value: 2017-01-16T13:39:06Z\n            - type: X-Modified\n              value: 2017-01-25T11:48:13Z\n            - type: X-Published\n              value: \"true\"\n            - type: X-Versions\n              value: 1.0,*1.1,1.1-oas3\n            - type: X-Private\n              value: \"false\"\n            - type: X-Notifications\n              value: \"true\"\n          items:\n            $ref: \"#/components/schemas/ApisJsonProperty\"\n          type: array\n        tags:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n      type: object\n    ApisJsonProperty:\n      description: an API property\n      properties:\n        type:\n          type: string\n      type: object\n    ClosableComment:\n      allOf:\n        - $ref: \"#/components/schemas/Comment\"\n        - properties:\n            position:\n              description: \u003e\n                The line number (zero-based) the comment is associated with. For\n                example, if the comment is on line 7 in the editor,\n                `position`=6.\n              format: int32\n              type: integer\n            replies:\n              description: A list of replies to this comment\n              items:\n                $ref: \"#/components/schemas/Comment\"\n              type: array\n            status:\n              description: Comment status\n              enum:\n                - OPEN\n                - RESOLVED\n              type: string\n          type: object\n    Collaboration:\n      properties:\n        hint:\n          $ref: \"#/components/schemas/CollaborationHint\"\n        members:\n          items:\n            $ref: \"#/components/schemas/CollaborationMembership\"\n          type: array\n        owner:\n          readOnly: true\n          type: string\n        owners:\n          items:\n            type: string\n          type: array\n        pendingMembers:\n          items:\n            $ref: \"#/components/schemas/CollaborationMembership\"\n          type: array\n        teams:\n          items:\n            $ref: \"#/components/schemas/CollaborationTeamMembership\"\n          type: array\n      required:\n        - hint\n      type: object\n    CollaborationHint:\n      properties:\n        type:\n          description: type identifier of the managed entity\n          format: uuid\n          type: string\n      required:\n        - type\n      type: object\n    CollaborationMember:\n      properties:\n        name:\n          type: string\n        startTime:\n          format: date-time\n          readOnly: true\n          type: string\n        title:\n          readOnly: true\n          type: string\n        uuid:\n          readOnly: true\n          type: string\n      required:\n        - name\n      type: object\n    CollaborationMembership:\n      allOf:\n        - $ref: \"#/components/schemas/CollaborationMember\"\n        - properties:\n            blocked:\n              readOnly: true\n              type: boolean\n            donotdisturb:\n              readOnly: true\n              type: boolean\n            roles:\n              items:\n                enum:\n                  - EDIT\n                  - COMMENT\n                  - VIEW\n                type: string\n              type: array\n          required:\n            - roles\n          type: object\n    CollaborationTeamMembership:\n      allOf:\n        - $ref: \"#/components/schemas/CollaborationMembership\"\n        - properties:\n            members:\n              items:\n                $ref: \"#/components/schemas/CollaborationMember\"\n              type: array\n          type: object\n    Comment:\n      properties:\n        body:\n          description: Markdown contents of the comment\n          type: string\n        created:\n          description: The UTC date and time when the comment was added\n          format: date-time\n          type: string\n        id:\n          description: The unique ID of the comment\n          example: 141b0adb-f26a-438b-be78-906445c91a36\n          type: string\n        modified:\n          description: The UTC date and time the when the comment was last edited\n          format: date-time\n          type: string\n        user:\n          $ref: \"#/components/schemas/User\"\n      required:\n        - body\n        - created\n        - id\n        - user\n      type: object\n    Page:\n      properties:\n        items:\n          items:\n            properties: {}\n            type: object\n          type: array\n        offset:\n          format: int32\n          type: integer\n        total:\n          format: int64\n          type: integer\n      type: object\n    User:\n      description: The user who added a comment\n      properties:\n        active:\n          description: \u003e\n            `true` means an existing user, `false` means the user is inactive\n            (for example, deleted)\n          type: boolean\n        id:\n          description: User name\n          example: alex\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/swaggerhub.com-1.0.47-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/swaggerhub.com-1.0.47-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/apis/{owner}/{api}/.collaboration\": get: responses: code 200: contents: application/json: generate schema: field teams: item: allOf: schema type mismatch:  and object"
}