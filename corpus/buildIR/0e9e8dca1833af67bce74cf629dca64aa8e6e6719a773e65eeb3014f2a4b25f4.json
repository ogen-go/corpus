{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/delta/codecharacter-web-2022"
		},
		"file": {
			"name": "CodeCharacter-API.yml",
			"size": 0,
			"path": "docs/spec/CodeCharacter-API.yml",
			"byteSize": 70443,
			"content": "openapi: 3.0.0\ninfo:\n  title: CodeCharacter API\n  version: 2022.0.1\n  contact:\n    name: CodeCharacter Authors\n    url: 'https://delta.nitt.edu'\n    email: delta@nitt.edu\n  license:\n    name: MIT\n  description: Specification of the CodeCharacter API\nservers:\n  - url: 'http://localhost:8080'\n    description: Local Development Server\npaths:\n  /auth/login/password:\n    post:\n      summary: Password Login\n      operationId: passwordLogin\n      tags:\n        - auth\n      description: Login with email and password and get bearer token for authentication\n      parameters: []\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordLoginRequest'\n            examples: {}\n        description: ''\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordLoginResponse'\n              examples:\n                Example:\n                  value:\n                    token: example-token\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n    parameters: []\n  /auth/reset-password:\n    parameters: []\n    post:\n      summary: Reset password\n      operationId: resetPassword\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n        '401':\n          description: Unauthorized\n      tags:\n        - auth\n      security: []\n      description: Reset password using the token from password reset email\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetPasswordRequest'\n  /auth/status:\n    get:\n      summary: Get authentication status\n      tags:\n        - auth\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthStatusResponse'\n              examples:\n                Example:\n                  value:\n                    status: AUTHENTICATED\n      operationId: getAuthStatus\n      description: \u003e-\n        Get authentication status: fully authenticated, activation pending and\n        incomplete profile\n  /auth/forgot-password:\n    post:\n      summary: Forgot password\n      operationId: forgotPassword\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n        '401':\n          description: Unauthorized\n      tags:\n        - auth\n      security: []\n      description: Request password reset email to be sent when user forgot their password\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ForgotPasswordRequest'\n            examples:\n              Example:\n                value:\n                  email: user@example.com\n  /leaderboard:\n    get:\n      summary: Get leaderboard\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LeaderboardEntry'\n              examples:\n                Example:\n                  value:\n                    - user:\n                        username: testUser\n                        name: \u003e-\n                          Test User1\n                          asdfdsfasdfasdfadsfasdfadsdfasdfasdfasfasdfsfsdfsfadsfasfa\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      stats:\n                        rating: 500\n                        wins: 6\n                        losses: 0\n                        ties: 0\n                    - user:\n                        username: testUser2\n                        name: \u003e-\n                          Test User2\n                          asdfdsfasdfasdfadsfasdfadsdfasdfasdfasfasdfsfsdfsfadsfasfa\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 1\n                      stats:\n                        rating: 50\n                        wins: 3\n                        losses: 3\n                        ties: 2\n                    - user:\n                        username: testUser3\n                        name: \u003e-\n                          Test User3\n                          asdfdsfasdfasdfadsfasdfadsdfasdfasdfasfasdfsfsdfsfadsfasfa\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      stats:\n                        rating: 80\n                        wins: 1\n                        losses: 0\n                        ties: 0\n                    - user:\n                        username: testUser4\n                        name: Test User4\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      stats:\n                        rating: 230\n                        wins: 0\n                        losses: 0\n                        ties: 0\n                    - user:\n                        username: testUser5\n                        name: Test User5 Test Test\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      stats:\n                        rating: 850\n                        wins: 0\n                        losses: 0\n                        ties: 0\n                    - user:\n                        username: testUser6\n                        name: \u003e-\n                          Test User6\n                          asdfdsfasdfasdfadsfasdfadsdfasdfasdfasfasdfsfsdfsfadsfasfa\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      stats:\n                        rating: 600\n                        wins: 0\n                        losses: 0\n                        ties: 0\n                    - user:\n                        username: testUser7\n                        name: \u003e-\n                          Test User7\n                          asdfdsfasdfasdfadsfasdfadsdfasdfasdfasfasdfsfsdfsfadsfasfa\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      stats:\n                        rating: 57\n                        wins: 20\n                        losses: 70\n                        ties: 0\n                    - user:\n                        username: testUser8\n                        name: Test User8\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      stats:\n                        rating: 850\n                        wins: 0\n                        losses: 0\n                        ties: 0\n                    - user:\n                        username: testUser9\n                        name: Test User9\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      stats:\n                        rating: 78\n                        wins: 0\n                        losses: 0\n                        ties: 0\n                    - user:\n                        username: testUser10\n                        name: Test User10\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      stats:\n                        rating: 10\n                        wins: 0\n                        losses: 0\n                        ties: 0\n        '401':\n          description: Unauthorized\n      operationId: getLeaderboard\n      tags:\n        - leaderboard\n      parameters:\n        - schema:\n            type: integer\n          in: query\n          name: page\n          description: Index of the page\n        - schema:\n            type: integer\n          in: query\n          name: size\n          description: Size of the page\n      description: Get leaderboard\n    parameters: []\n  /top-matches:\n    get:\n      summary: Get top matches\n      tags:\n        - match\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Match'\n              examples:\n                Example:\n                  value:\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                      games:\n                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                          coinsUsed: 100\n                          destruction: 45\n                          status: IDLE\n                      matchMode: SELF\n                      matchVerdict: PLAYER1\n                      createdAt: '2019-08-24T14:15:22Z'\n                      user1:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      user2:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f09\n                      games:\n                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                          coinsUsed: 100\n                          destruction: 45\n                          status: IDLE\n                      matchMode: SELF\n                      matchVerdict: PLAYER1\n                      createdAt: '2019-08-24T14:15:22Z'\n                      user1:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      user2:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f07\n                      games:\n                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                          coinsUsed: 100\n                          destruction: 45\n                          status: IDLE\n                      matchMode: SELF\n                      matchVerdict: PLAYER1\n                      createdAt: '2019-08-24T14:15:22Z'\n                      user1:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      user2:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f06\n                      games:\n                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                          coinsUsed: 100\n                          destruction: 45\n                          status: IDLE\n                      matchMode: SELF\n                      matchVerdict: PLAYER1\n                      createdAt: '2019-08-24T14:15:22Z'\n                      user1:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      user2:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f05\n                      games:\n                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                          coinsUsed: 100\n                          destruction: 45\n                          status: IDLE\n                      matchMode: SELF\n                      matchVerdict: PLAYER1\n                      createdAt: '2019-08-24T14:15:22Z'\n                      user1:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      user2:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f04\n                      games:\n                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                          coinsUsed: 100\n                          destruction: 45\n                          status: IDLE\n                      matchMode: SELF\n                      matchVerdict: PLAYER1\n                      createdAt: '2019-08-24T14:15:22Z'\n                      user1:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      user2:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f03\n                      games:\n                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                          coinsUsed: 100\n                          destruction: 45\n                          status: IDLE\n                      matchMode: SELF\n                      matchVerdict: PLAYER1\n                      createdAt: '2019-08-24T14:15:22Z'\n                      user1:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      user2:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f02\n                      games:\n                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                          coinsUsed: 100\n                          destruction: 45\n                          status: IDLE\n                      matchMode: SELF\n                      matchVerdict: PLAYER1\n                      createdAt: '2019-08-24T14:15:22Z'\n                      user1:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      user2:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n        '401':\n          description: Unauthorized\n      operationId: getTopMatches\n      description: Get top matches\n    parameters: []\n  '/games/{gameId}/logs':\n    parameters:\n      - $ref: '#/components/parameters/gameId'\n    get:\n      summary: Get game logs by game ID\n      tags:\n        - game\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GameLog'\n              examples:\n                Example:\n                  value: aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1kUXc0dzlXZ1hjUQ==\n      operationId: getGameLogsByGameId\n      description: Get game logs by game ID\n  /user:\n    parameters: []\n    get:\n      summary: Get current user profile\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CurrentUserProfile'\n              examples:\n                Example:\n                  value:\n                    id: 123e4567-e89b-12d3-a456-426614174001\n                    username: testUser\n                    name: Test User\n                    email: user@example.com\n                    country: IN\n                    college: NITT\n                    avatarId: 1\n                    isProfileComplete: true\n        '401':\n          description: Unauthorized\n      operationId: getCurrentUser\n      description: Get current user profile\n      tags:\n        - current-user\n    patch:\n      summary: Update current user\n      operationId: updateCurrentUser\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n      description: Update current user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCurrentUserProfile'\n            examples:\n              Example:\n                value:\n                  name: Test User Mofified\n                  country: IN\n                  college: NIT Trichy\n      tags:\n        - current-user\n  /user/complete-profile:\n    post:\n      summary: Complete user profile\n      operationId: completeUserProfile\n      responses:\n        '200':\n          description: OK\n        '401':\n          description: Unauthorized\n      description: Complete the user profile for users who registered using OAuth\n      tags:\n        - current-user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompleteProfileRequest'\n            examples:\n              Example:\n                value:\n                  username: TestUser\n                  name: Test User\n                  country: IN\n                  college: Test\n                  avatarId: 1\n  /user/password:\n    parameters: []\n    post:\n      summary: Update password\n      operationId: updatePassword\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n      tags:\n        - current-user\n      description: Update password\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePasswordRequest'\n            examples:\n              Example:\n                value:\n                  oldPassword: Pa$$w0rd\n                  password: Pa$$w0rd1\n                  passwordConfirmation: Pa$$w0rd1\n  /user/code/latest:\n    get:\n      summary: Get latest code\n      tags:\n        - code\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Code'\n              examples:\n                Example:\n                  value:\n                    code: '#include\u003ciostream.h\u003e'\n                    language: C\n                    lastSavedAt: '2019-08-24T14:15:22Z'\n        '401':\n          description: Unauthorized\n      operationId: getLatestCode\n      description: Get latest code\n    post:\n      summary: Update latest code\n      operationId: updateLatestCode\n      description: Update latest code\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateLatestCodeRequest'\n            examples:\n              Example:\n                value:\n                  code: '#include\u003ciostream.h\u003e'\n                  language: C\n                  lock: false\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n        '401':\n          description: Unauthorized\n      tags:\n        - code\n    parameters: []\n  /user/code/revisions:\n    get:\n      summary: Get code revisions\n      tags:\n        - code\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CodeRevision'\n              examples:\n                Example:\n                  value:\n                    - id: 123e4567-e89b-12d3-a456-426614174000\n                      code: '#include\u003ciostream.h\u003e'\n                      message: revision1\n                      language: C\n                      parentRevision: 123e4567-e89b-12d3-a456-426614174111\n                      createdAt: '2019-08-24T14:15:22Z'\n                    - id: 123e4567-e89b-12d3-a456-426614174001\n                      code: print('Hello World!')\n                      message: revision2\n                      language: PYTHON\n                      parentRevision: 123e4567-e89b-12d3-a456-426614174112\n                      createdAt: '2020-08-24T14:15:22Z'\n                    - id: 123e4567-e89b-12d3-a456-426614174002\n                      code: import sys\n                      message: revision3\n                      language: PYTHON\n                      parentRevision: 123e4567-e89b-12d3-a456-426614174113\n                      createdAt: '2021-08-24T14:15:22Z'\n                    - id: 123e4567-e89b-12d3-a456-426614174003\n                      code: '#include\u003cconio.h\u003e'\n                      message: revision4\n                      language: C\n                      parentRevision: 123e4567-e89b-12d3-a456-426614174114\n                      createdAt: '2021-12-24T14:15:22Z'\n        '401':\n          description: Unauthorized\n      operationId: getCodeRevisions\n      description: Get list of all code revision IDs\n    post:\n      summary: Create code revision\n      operationId: createCodeRevision\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n        '401':\n          description: Unauthorized\n      description: Create code revision\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCodeRevisionRequest'\n            examples:\n              Example:\n                value:\n                  code: '#include\u003ciostream\u003e'\n                  message: revision1\n                  language: C\n      tags:\n        - code\n    parameters: []\n  /user/map/latest:\n    get:\n      summary: Get latest map\n      tags:\n        - map\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GameMap'\n              examples:\n                Example:\n                  value:\n                    map: 0000\\n0010\\n0100\\n1000\\n\n                    lastSavedAt: '2019-08-24T14:15:22Z'\n        '401':\n          description: Unauthorized\n      operationId: getLatestMap\n      description: Get latest map\n    post:\n      summary: Update latest map\n      operationId: updateLatestMap\n      description: Update latest map\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateLatestMapRequest'\n            examples:\n              Example:\n                value:\n                  map: 0000\\n0010\\n0100\\n1000\\n\n                  lock: false\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n        '401':\n          description: Unauthorized\n      tags:\n        - map\n    parameters: []\n  /user/map/revisions:\n    get:\n      summary: Get map revisions\n      tags:\n        - map\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GameMapRevision'\n              examples:\n                Example:\n                  value:\n                    - id: 123e4567-e89b-12d3-a456-426614174001\n                      map: \u003e-\n                        [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,1,1,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,1,1,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,2,2,2,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,2,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]\n                      message: revision2\n                      parentRevision: 123e4567-e89b-12d3-a456-426614174112\n                      createdAt: '2019-08-24T14:15:22Z'\n                    - id: 123e4567-e89b-12d3-a456-426614174003\n                      map: \u003e-\n                        [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]\n                      message: revision4\n                      parentRevision: 123e4567-e89b-12d3-a456-426614174114\n                      createdAt: '2019-08-24T14:15:22Z'\n        '401':\n          description: Unauthorized\n      operationId: getMapRevisions\n      description: Get list of all map revision IDs\n    post:\n      summary: Create map revision\n      operationId: createMapRevision\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n        '401':\n          description: Unauthorized\n      description: Create map revision\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMapRevisionRequest'\n            examples:\n              Example:\n                value:\n                  map: 0000\\n0010\\n0100\\n1000\\n\n                  message: revision1\n      tags:\n        - map\n    parameters: []\n  /user/matches:\n    get:\n      summary: Get user matches\n      tags:\n        - match\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Match'\n              examples:\n                Example:\n                  value:\n                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                      games:\n                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08\n                          coinsUsed: 100\n                          destruction: 45\n                          status: IDLE\n                      matchMode: SELF\n                      matchVerdict: PLAYER1\n                      createdAt: '2019-08-24T14:15:22Z'\n                      user1:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n                      user2:\n                        username: testUser\n                        name: Test User\n                        country: IN\n                        college: NIT Trichy\n                        avatarId: 0\n        '401':\n          description: Unauthorized\n      operationId: getUserMatches\n      description: Get matches played by authenticated user\n    parameters: []\n    post:\n      summary: Create match\n      operationId: createMatch\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some field missing\n        '401':\n          description: Unauthorized\n      description: Initiate a match by current user\n      tags:\n        - match\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMatchRequest'\n            examples:\n              Example:\n                value:\n                  mode: SELF\n                  opponentId: 0a4b34b0-6057-4b82-ae27-a59c36eab667\n                  mapRevisionId: f52ddf9e-e933-471a-9250-41078cc39f80\n                  codeRevisionId: d9eb9923-651b-4ec4-b6f1-b7625b2a9392\n  /user/notifications:\n    get:\n      summary: Get all notifications\n      tags:\n        - notification\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Notification'\n              examples:\n                Example:\n                  value:\n                    - id: 123e4567-e89b-12d3-a456-426614174000\n                      title: Sample Notification\n                      content: Sample Notification\n                      createdAt: '2019-08-24T14:15:22Z'\n                      read: true\n                    - id: 123e4567-e89b-12d3-a456-426614174005\n                      title: Sample Notification 2\n                      content: Sample Notification\n                      createdAt: '2019-08-25T14:15:22Z'\n                      read: false\n      operationId: getAllNotifications\n      description: Get all notifications\n    parameters: []\n  '/user/notifications/{notificationId}/read':\n    parameters:\n      - $ref: '#/components/parameters/notificationId'\n    put:\n      summary: Save notification read status\n      operationId: saveNotificationReadStatus\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n        '401':\n          description: Unauthorized\n      tags:\n        - notification\n      description: Save notification read status\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: boolean\n            examples:\n              Example:\n                value: true\n  /users:\n    post:\n      summary: Register user\n      operationId: register\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n      tags:\n        - user\n      description: Register user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterUserRequest'\n            examples:\n              Example:\n                value:\n                  username: testUser\n                  name: Test User\n                  email: user@example.com\n                  password: Pa$$w0rd\n                  passwordConfirmation: Pa$$w0rd\n                  country: IN\n                  college: NITT\n                  avatarId: 0\n        description: ''\n      security: []\n  '/users/{userId}/activate':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    post:\n      summary: Activate user\n      operationId: activateUser\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericError'\n              examples:\n                Example:\n                  value:\n                    message: Some specific error message\n        '401':\n          description: Unauthorized\n        '404':\n          description: Not Found\n      tags:\n        - user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ActivateUserRequest'\n            examples:\n              Example:\n                value:\n                  token: example-token\n        description: ''\n      description: Activate user by using the token sent via email\n      security: []\n  '/users/{userId}/ratingHistory':\n    parameters:\n      - $ref: '#/components/parameters/userId'\n    get:\n      summary: Get user rating history\n      tags:\n        - user\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RatingHistory'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n      operationId: getRatingHistory\n      description: Get user rating history\ncomponents:\n  schemas:\n    PasswordLoginRequest:\n      title: PasswordLoginRequest\n      type: object\n      description: Password Login request\n      properties:\n        email:\n          type: string\n          format: email\n          pattern: '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}'\n          example: test@test.com\n        password:\n          type: string\n          format: password\n          minLength: 8\n          maxLength: 32\n          pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^\u0026*-]).{8,32}$'\n      required:\n        - email\n        - password\n    PasswordLoginResponse:\n      title: LoginResponse\n      type: object\n      description: Login response with user token\n      properties:\n        token:\n          type: string\n          description: Bearer token\n          example: test-token\n      required:\n        - token\n    ResetPasswordRequest:\n      title: ResetPasswordRequest\n      type: object\n      description: Reset password request\n      properties:\n        token:\n          type: string\n          example: test-token\n        password:\n          type: string\n          format: password\n          pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^\u0026*-]).{8,32}$'\n          minLength: 8\n          maxLength: 32\n        passwordConfirmation:\n          type: string\n          pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^\u0026*-]).{8,32}$'\n          format: password\n          minLength: 8\n          maxLength: 32\n      required:\n        - token\n        - password\n        - passwordConfirmation\n    ForgotPasswordRequest:\n      title: ForgotPasswordRequest\n      type: object\n      description: Forgot password request\n      properties:\n        email:\n          type: string\n          format: email\n          pattern: '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}'\n          example: test@test.com\n      required:\n        - email\n    RatingHistory:\n      description: Rating history model\n      type: object\n      title: RatingHistory\n      properties:\n        rating:\n          type: number\n          example: 1000\n        ratingDeviation:\n          type: number\n          example: 5\n        validFrom:\n          type: string\n          format: date-time\n          example: '2021-01-01T00:00:00Z'\n      required:\n        - rating\n        - ratingDeviation\n        - validFrom\n    PublicUser:\n      title: PublicUser\n      type: object\n      description: Public user model\n      properties:\n        username:\n          type: string\n          example: test\n        name:\n          type: string\n          example: Test User\n        country:\n          type: string\n          example: IN\n        college:\n          type: string\n          example: Test\n        avatarId:\n          type: integer\n          example: 1\n      required:\n        - username\n        - name\n        - country\n        - college\n        - avatarId\n    UserStats:\n      title: UserStats\n      type: object\n      description: User stats model\n      properties:\n        rating:\n          type: number\n          example: 1000\n        wins:\n          type: integer\n          default: 0\n          example: 1\n        losses:\n          type: integer\n          example: 1\n        ties:\n          type: integer\n          example: 1\n      required:\n        - rating\n        - wins\n        - losses\n        - ties\n    Code:\n      title: Code\n      type: object\n      description: Code model\n      properties:\n        code:\n          type: string\n          example: '#include \u003ciostream\u003e'\n        lastSavedAt:\n          type: string\n          format: date-time\n          example: '2021-01-01T00:00:00Z'\n        language:\n          $ref: '#/components/schemas/Language'\n      required:\n        - code\n        - lastSavedAt\n        - language\n      x-examples:\n        example-1:\n          code: '#include \u003ciostream\u003e'\n          lastSavedAt: '2021-01-01T00:00:00Z'\n          language: C\n    UpdateLatestCodeRequest:\n      title: UpdateLatestCodeRequest\n      type: object\n      description: Update latest code request\n      properties:\n        code:\n          type: string\n          example: '#include \u003ciostream\u003e'\n        lock:\n          type: boolean\n          default: false\n        language:\n          $ref: '#/components/schemas/Language'\n      required:\n        - code\n        - language\n    CodeRevision:\n      title: CodeRevision\n      type: object\n      description: Code revision model\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n        code:\n          type: string\n          example: '#include \u003ciostream\u003e'\n        message:\n          type: string\n          example: message\n        parentRevision:\n          type: string\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174111\n        language:\n          $ref: '#/components/schemas/Language'\n        createdAt:\n          type: string\n          format: date-time\n      required:\n        - id\n        - code\n        - message\n        - language\n        - createdAt\n    CreateCodeRevisionRequest:\n      title: CreateCodeRevisionRequest\n      type: object\n      description: Create code revision request\n      properties:\n        code:\n          type: string\n          example: '#include \u003ciostream\u003e'\n        message:\n          type: string\n          example: message\n        language:\n          $ref: '#/components/schemas/Language'\n      required:\n        - code\n        - message\n        - language\n    GameMap:\n      title: GameMap\n      type: object\n      description: GameMap model\n      properties:\n        map:\n          type: string\n          example: 0000\\n0010\\n0100\\n1000\\n\n        lastSavedAt:\n          type: string\n          format: date-time\n          example: '2021-01-01T00:00:00Z'\n      required:\n        - map\n        - lastSavedAt\n    UpdateLatestMapRequest:\n      title: UpdateLatestMapRequest\n      type: object\n      description: Update latest map request\n      properties:\n        map:\n          type: string\n          example: 0000\\n0010\\n0100\\n1000\\n\n        lock:\n          type: boolean\n          default: false\n      required:\n        - map\n    GameMapRevision:\n      title: GameMapRevision\n      type: object\n      description: GameMap revision model\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n        map:\n          type: string\n          example: 0000\\n0010\\n0100\\n1000\\n\n        parentRevision:\n          type: string\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174111\n        createdAt:\n          type: string\n          format: date-time\n        message:\n          type: string\n          example: message\n      required:\n        - id\n        - map\n        - createdAt\n        - message\n    CreateMapRevisionRequest:\n      title: CreateMapRevisionRequest\n      type: object\n      description: Create map revision request\n      properties:\n        map:\n          type: string\n          example: 0000\\n0010\\n0100\\n1000\\n\n        message:\n          type: string\n          example: message\n      required:\n        - map\n        - message\n    ActivateUserRequest:\n      title: ActivateUserRequest\n      type: object\n      description: Activate user request\n      properties:\n        token:\n          type: string\n          example: example-token\n      required:\n        - token\n    UpdatePasswordRequest:\n      title: UpdatePasswordRequest\n      type: object\n      properties:\n        oldPassword:\n          type: string\n          format: password\n          pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^\u0026*-]).{8,32}$'\n          minLength: 8\n          maxLength: 32\n        password:\n          type: string\n          format: password\n          pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^\u0026*-]).{8,32}$'\n          minLength: 8\n          maxLength: 32\n        passwordConfirmation:\n          type: string\n          format: password\n          pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^\u0026*-]).{8,32}$'\n          minLength: 8\n          maxLength: 32\n      required:\n        - oldPassword\n        - password\n        - passwordConfirmation\n      description: Update password request\n    Notification:\n      title: Notification\n      type: object\n      description: Notification model\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n        title:\n          type: string\n          example: Test notification\n        content:\n          type: string\n          example: Test\n        createdAt:\n          type: string\n          format: date-time\n          example: '2021-01-01T00:00:00Z'\n        read:\n          type: boolean\n          default: false\n      required:\n        - id\n        - title\n        - content\n        - createdAt\n        - read\n    CurrentUserProfile:\n      title: CurrentUserProfile\n      type: object\n      description: Current user profile model\n      properties:\n        id:\n          type: string\n          example: 123e4567-e89b-12d3-a456-426614174003\n          format: uuid\n        username:\n          type: string\n          example: test\n        name:\n          type: string\n          example: Test\n        email:\n          type: string\n          format: email\n          pattern: '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}'\n          example: test@test.com\n        country:\n          type: string\n          example: IN\n        college:\n          type: string\n          example: Test\n        avatarId:\n          type: integer\n          example: 1\n        isProfileComplete:\n          type: boolean\n          default: false\n      required:\n        - id\n        - username\n        - name\n        - email\n        - country\n        - college\n        - avatarId\n        - isProfileComplete\n    UpdateCurrentUserProfile:\n      title: UpdateCurrentUserProfile\n      type: object\n      description: Update current user profile request\n      properties:\n        name:\n          type: string\n          example: Test\n          nullable: true\n        country:\n          type: string\n          example: IN\n          nullable: true\n        college:\n          type: string\n          example: Test\n          nullable: true\n        avatarId:\n          type: integer\n          example: 1\n          nullable: true\n    CompleteProfileRequest:\n      title: CompleteProfileRequest\n      type: object\n      description: Model for complete profile request\n      properties:\n        username:\n          type: string\n          example: TestUser\n        name:\n          type: string\n          example: Test User\n        country:\n          type: string\n          example: IN\n        college:\n          type: string\n          example: Test\n        avatarId:\n          type: integer\n          example: 1\n      required:\n        - username\n        - name\n        - country\n        - college\n        - avatarId\n    RegisterUserRequest:\n      title: RegisterUserRequest\n      type: object\n      description: Register user request\n      properties:\n        username:\n          type: string\n          example: test\n        name:\n          type: string\n          example: Test\n        email:\n          type: string\n          format: email\n          pattern: '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}'\n          example: test@test.com\n        password:\n          type: string\n          format: password\n          pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^\u0026*-]).{8,32}$'\n          minLength: 8\n          maxLength: 32\n        passwordConfirmation:\n          type: string\n          format: password\n          pattern: '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^\u0026*-]).{8,32}$'\n          minLength: 8\n          maxLength: 32\n        country:\n          type: string\n          example: IN\n        college:\n          type: string\n          example: Test\n        avatarId:\n          type: integer\n          example: 1\n      required:\n        - username\n        - name\n        - email\n        - password\n        - passwordConfirmation\n        - country\n        - college\n        - avatarId\n    Match:\n      description: Match model\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n        games:\n          type: array\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/Game'\n        matchMode:\n          $ref: '#/components/schemas/MatchMode'\n        matchVerdict:\n          $ref: '#/components/schemas/Verdict'\n        createdAt:\n          type: string\n          format: date-time\n          example: '2021-01-01T00:00:00Z'\n        user1:\n          $ref: '#/components/schemas/PublicUser'\n        user2:\n          $ref: '#/components/schemas/PublicUser'\n      required:\n        - id\n        - games\n        - matchMode\n        - matchVerdict\n        - createdAt\n        - user1\n        - user2\n    CreateMatchRequest:\n      title: CreateMatchRequest\n      type: object\n      description: \u003e-\n        Create match request\n\n\n        If mode is SELF: either/both of mapRevisionId and codeRevisionId have to\n        be provided, or else latest code will be used to initiate the match\n\n        If mode is MANUAL: only opponentUsername should be provided\n      properties:\n        mode:\n          $ref: '#/components/schemas/MatchMode'\n        opponentUsername:\n          type: string\n          description: Username of the opponent\n          nullable: true\n        mapRevisionId:\n          type: string\n          format: uuid\n          description: Revision ID of the map\n          nullable: true\n        codeRevisionId:\n          type: string\n          format: uuid\n          description: Revision of the code\n          nullable: true\n      required:\n        - mode\n    Game:\n      title: Game\n      type: object\n      description: Game model\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: 123e4567-e89b-12d3-a456-426614174000\n        destruction:\n          type: number\n          example: 100\n        coinsUsed:\n          type: integer\n        status:\n          $ref: '#/components/schemas/GameStatus'\n      required:\n        - id\n        - destruction\n        - coinsUsed\n        - status\n    GameLog:\n      type: string\n      description: Game log model\n      example: aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1kUXc0dzlXZ1hjUQ==\n    LeaderboardEntry:\n      title: LeaderboardEntry\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/PublicUser'\n        stats:\n          $ref: '#/components/schemas/UserStats'\n      required:\n        - user\n        - stats\n      description: Leaderboard entry model\n    GenericError:\n      title: GenericError\n      type: object\n      properties:\n        message:\n          type: string\n      description: Model for Generic Error\n      x-examples:\n        Example:\n          message: Error XYZ\n    Language:\n      type: string\n      title: Language\n      enum:\n        - C\n        - CPP\n        - JAVA\n        - PYTHON\n      description: Language of source files\n    MatchMode:\n      title: MatchMode\n      type: string\n      enum:\n        - SELF\n        - MANUAL\n        - AUTO\n      description: Match Mode\n    Verdict:\n      type: string\n      title: Verdict\n      enum:\n        - PLAYER1\n        - PLAYER2\n        - TIE\n      description: Match/Game verdict\n    GameStatus:\n      title: GameStatus\n      type: string\n      enum:\n        - IDLE\n        - EXECUTING\n        - EXECUTED\n        - EXECUTE_ERROR\n    AuthStatusResponse:\n      title: AuthStatusResponse\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n            - AUTHENTICATED\n            - PROFILE_INCOMPLETE\n            - ACTIVATION_PENDING\n  securitySchemes:\n    oauth2-google:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://accounts.google.com/o/oauth2/v2/auth'\n          tokenUrl: 'https://oauth2.googleapis.com/token'\n          scopes:\n            'https://www.googleapis.com/auth/userinfo.email': User email\n            'https://www.googleapis.com/auth/userinfo.profile': User profile\n          refreshUrl: 'https://oauth2.googleapis.com/token'\n      description: ''\n    oauth2-github:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://github.com/login/oauth/authorize'\n          tokenUrl: 'https://github.com/login/oauth/access_token'\n          scopes:\n            'read:user': User profile\n            'user:email': User email\n          refreshUrl: 'https://github.com/login/oauth/access_token'\n    http-bearer:\n      type: http\n      scheme: bearer\n  parameters:\n    notificationId:\n      name: notificationId\n      in: path\n      required: true\n      schema:\n        type: string\n        format: uuid\n        example: 123e4567-e89b-12d3-a456-426614174000\n        minimum: 0\n      description: ID of the notification\n    userId:\n      name: userId\n      in: path\n      required: true\n      schema:\n        type: string\n        format: uuid\n        example: 123e4567-e89b-12d3-a456-426614174002\n      description: ID of the user\n    gameId:\n      name: gameId\n      in: path\n      required: true\n      schema:\n        type: string\n        format: uuid\n        example: 123e4567-e89b-12d3-a456-426614174000\n      description: UUID of the game\n  responses: {}\n  examples: {}\nsecurity:\n  - http-bearer: []\ntags:\n  - name: auth\n  - name: code\n  - name: current-user\n  - name: game\n  - name: leaderboard\n  - name: map\n  - name: match\n  - name: notification\n  - name: user\n",
			"canonicalURL": "/github.com/delta/codecharacter-web-2022@c7e19d09c6c887be5c810e486a4661d423e6625d/-/blob/docs/spec/CodeCharacter-API.yml",
			"externalURLs": [
				{
					"url": "https://github.com/delta/codecharacter-web-2022/blob/c7e19d09c6c887be5c810e486a4661d423e6625d/docs/spec/CodeCharacter-API.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/user/password\": post: requestBody: contents: application/json: generate schema: field oldPassword: string validator: pattern: error parsing regexp: invalid or unsupported Perl syntax: `(?=`"
}