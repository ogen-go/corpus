{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/ivs/2020-07-14/openapi.yaml",
			"byteSize": 118372,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2020-07-14'\n  x-release: v4\n  title: Amazon Interactive Video Service\n  description: '\u003cp\u003e \u003cb\u003eIntroduction\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe Amazon Interactive Video Service (IVS) API is REST compatible, using a standard HTTP API and an AWS EventBridge event stream for responses. JSON is used for both requests and responses, including errors.\u003c/p\u003e \u003cp\u003eThe API is an AWS regional service, currently in these regions: us-west-2, us-east-1, and eu-west-1.\u003c/p\u003e \u003cp\u003e \u003ci\u003e \u003cb\u003eAll API request parameters and URLs are case sensitive. \u003c/b\u003e \u003c/i\u003e \u003c/p\u003e \u003cp\u003eFor a summary of notable documentation changes in each release, see \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/doc-history.html\"\u003e Document History\u003c/a\u003e.\u003c/p\u003e \u003cp\u003e \u003cb\u003eService Endpoints\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe following are the Amazon IVS service endpoints (all HTTPS): \u003c/p\u003e \u003cp\u003eRegion name: US West (Oregon)\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eRegion: \u003ccode\u003eus-west-2\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eEndpoint: \u003ccode\u003eivs.us-west-2.amazonaws.com\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eRegion name: US East (Virginia)\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eRegion: \u003ccode\u003eus-east-1\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eEndpoint: \u003ccode\u003eivs.us-east-1.amazonaws.com\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eRegion name: EU West (Dublin)\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eRegion: \u003ccode\u003eeu-west-1\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eEndpoint: \u003ccode\u003eivs.eu-west-1.amazonaws.com\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eAllowed Header Values\u003c/b\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e \u003cb\u003eAccept:\u003c/b\u003e \u003c/code\u003e application/json\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e \u003cb\u003eAccept-Encoding:\u003c/b\u003e \u003c/code\u003e gzip, deflate\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e \u003cb\u003eContent-Type:\u003c/b\u003e \u003c/code\u003eapplication/json\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eResources\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe following resources contain information about your IVS live stream (see \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/getting-started.html\"\u003e Getting Started with Amazon IVS\u003c/a\u003e):\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eChannel — Stores configuration data related to your live stream. You first create a channel and then use the channel’s stream key to start your live stream. See the Channel endpoints for more information. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eStream key — An identifier assigned by Amazon IVS when you create a channel, which is then used to authorize streaming. See the StreamKey endpoints for more information. \u003ci\u003e \u003cb\u003eTreat the stream key like a secret, since it allows anyone to stream to the channel.\u003c/b\u003e \u003c/i\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ePlayback key pair — Video playback may be restricted using playback-authorization tokens, which use public-key encryption. A playback key pair is the public-private pair of keys used to sign and validate the playback-authorization token. See the PlaybackKeyPair endpoints for more information.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eRecording configuration — Stores configuration related to recording a live stream and where to store the recorded content. Multiple channels can reference the same recording configuration. See the Recording Configuration endpoints for more information.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eTagging\u003c/b\u003e \u003c/p\u003e \u003cp\u003eA \u003ci\u003etag\u003c/i\u003e is a metadata label that you assign to an AWS resource. A tag comprises a \u003ci\u003ekey\u003c/i\u003e and a \u003ci\u003evalue\u003c/i\u003e, both set by you. For example, you might set a tag as \u003ccode\u003etopic:nature\u003c/code\u003e to label a particular video category. See \u003ca href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\u003eTagging AWS Resources\u003c/a\u003e for more information, including restrictions that apply to tags.\u003c/p\u003e \u003cp\u003eTags can help you identify and organize your AWS resources. For example, you can use the same tag for different resources to indicate that they are related. You can also use tags to manage access (see \u003ca href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\"\u003e Access Tags\u003c/a\u003e). \u003c/p\u003e \u003cp\u003eThe Amazon IVS API has these tag-related endpoints: \u003ca\u003eTagResource\u003c/a\u003e, \u003ca\u003eUntagResource\u003c/a\u003e, and \u003ca\u003eListTagsForResource\u003c/a\u003e. The following resources support tagging: Channels, Stream Keys, Playback Key Pairs, and Recording Configurations.\u003c/p\u003e \u003cp\u003e \u003cb\u003eAuthentication versus Authorization\u003c/b\u003e \u003c/p\u003e \u003cp\u003eNote the differences between these concepts:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ci\u003eAuthentication\u003c/i\u003e is about verifying identity. You need to be authenticated to sign Amazon IVS API requests.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ci\u003eAuthorization\u003c/i\u003e is about granting permissions. You need to be authorized to view \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\u003eAmazon IVS private channels\u003c/a\u003e. (Private channels are channels that are enabled for \"playback authorization.\")\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eAuthentication\u003c/b\u003e \u003c/p\u003e \u003cp\u003eAll Amazon IVS API requests must be authenticated with a signature. The AWS Command-Line Interface (CLI) and Amazon IVS Player SDKs take care of signing the underlying API calls for you. However, if your application calls the Amazon IVS API directly, it’s your responsibility to sign the requests.\u003c/p\u003e \u003cp\u003eYou generate a signature using valid AWS credentials that have permission to perform the requested action. For example, you must sign PutMetadata requests with a signature generated from an IAM user account that has the \u003ccode\u003eivs:PutMetadata\u003c/code\u003e permission.\u003c/p\u003e \u003cp\u003eFor more information:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAuthentication and generating signatures — See \u003ca href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html\"\u003eAuthenticating Requests (AWS Signature Version 4)\u003c/a\u003e in the \u003ci\u003eAWS General Reference\u003c/i\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eManaging Amazon IVS permissions — See \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/security-iam.html\"\u003eIdentity and Access Management\u003c/a\u003e on the Security page of the \u003ci\u003eAmazon IVS User Guide\u003c/i\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eChannel Endpoints\u003c/b\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eCreateChannel\u003c/a\u003e — Creates a new channel and an associated stream key to start streaming.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetChannel\u003c/a\u003e — Gets the channel configuration for the specified channel ARN (Amazon Resource Name).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eBatchGetChannel\u003c/a\u003e — Performs \u003ca\u003eGetChannel\u003c/a\u003e on multiple ARNs simultaneously.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eListChannels\u003c/a\u003e — Gets summary information about all channels in your account, in the AWS region where the API request is processed. This list can be filtered to match a specified name or recording-configuration ARN. Filters are mutually exclusive and cannot be used together. If you try to use both filters, you will get an error (409 Conflict Exception).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eUpdateChannel\u003c/a\u003e — Updates a channel''s configuration. This does not affect an ongoing stream of this channel. You must stop and restart the stream for the changes to take effect.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eDeleteChannel\u003c/a\u003e — Deletes the specified channel.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eStreamKey Endpoints\u003c/b\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eCreateStreamKey\u003c/a\u003e — Creates a stream key, used to initiate a stream, for the specified channel ARN.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetStreamKey\u003c/a\u003e — Gets stream key information for the specified ARN.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eBatchGetStreamKey\u003c/a\u003e — Performs \u003ca\u003eGetStreamKey\u003c/a\u003e on multiple ARNs simultaneously.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eListStreamKeys\u003c/a\u003e — Gets summary information about stream keys for the specified channel.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eDeleteStreamKey\u003c/a\u003e — Deletes the stream key for the specified ARN, so it can no longer be used to stream.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eStream Endpoints\u003c/b\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetStream\u003c/a\u003e — Gets information about the active (live) stream on a specified channel.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eListStreams\u003c/a\u003e — Gets summary information about live streams in your account, in the AWS region where the API request is processed.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eStopStream\u003c/a\u003e — Disconnects the incoming RTMPS stream for the specified channel. Can be used in conjunction with \u003ca\u003eDeleteStreamKey\u003c/a\u003e to prevent further streaming to a channel.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003ePutMetadata\u003c/a\u003e — Inserts metadata into the active stream of the specified channel. A maximum of 5 requests per second per channel is allowed, each with a maximum 1 KB payload. (If 5 TPS is not sufficient for your needs, we recommend batching your data into a single PutMetadata call.)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003ePlaybackKeyPair Endpoints\u003c/b\u003e \u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\u003eSetting Up Private Channels\u003c/a\u003e in the \u003ci\u003eAmazon IVS User Guide\u003c/i\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eImportPlaybackKeyPair\u003c/a\u003e — Imports the public portion of a new key pair and returns its \u003ccode\u003earn\u003c/code\u003e and \u003ccode\u003efingerprint\u003c/code\u003e. The \u003ccode\u003eprivateKey\u003c/code\u003e can then be used to generate viewer authorization tokens, to grant viewers access to private channels (channels enabled for playback authorization).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetPlaybackKeyPair\u003c/a\u003e — Gets a specified playback authorization key pair and returns the \u003ccode\u003earn\u003c/code\u003e and \u003ccode\u003efingerprint\u003c/code\u003e. The \u003ccode\u003eprivateKey\u003c/code\u003e held by the caller can be used to generate viewer authorization tokens, to grant viewers access to private channels.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eListPlaybackKeyPairs\u003c/a\u003e — Gets summary information about playback key pairs.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eDeletePlaybackKeyPair\u003c/a\u003e — Deletes a specified authorization key pair. This invalidates future viewer tokens generated using the key pair’s \u003ccode\u003eprivateKey\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eRecordingConfiguration Endpoints\u003c/b\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eCreateRecordingConfiguration\u003c/a\u003e — Creates a new recording configuration, used to enable recording to Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetRecordingConfiguration\u003c/a\u003e — Gets the recording-configuration metadata for the specified ARN.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eListRecordingConfigurations\u003c/a\u003e — Gets summary information about all recording configurations in your account, in the AWS region where the API request is processed.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eDeleteRecordingConfiguration\u003c/a\u003e — Deletes the recording configuration for the specified ARN.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eAWS Tags Endpoints\u003c/b\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eTagResource\u003c/a\u003e — Adds or updates tags for the AWS resource with the specified ARN.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eUntagResource\u003c/a\u003e — Removes tags from the resource with the specified ARN.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eListTagsForResource\u003c/a\u003e — Gets information about AWS tags for the specified ARN.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: ivs\n  x-aws-signingName: ivs\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ivs-2020-07-14.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/ivs/'\nservers:\n  - url: 'http://ivs.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon IVS multi-region endpoint\n  - url: 'https://ivs.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon IVS multi-region endpoint\n  - url: 'http://ivs.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon IVS endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://ivs.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon IVS endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /BatchGetChannel:\n    post:\n      operationId: BatchGetChannel\n      description: Performs \u003ca\u003eGetChannel\u003c/a\u003e on multiple ARNs simultaneously.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetChannelResponse'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arns\n              properties:\n                arns:\n                  description: 'Array of ARNs, one per channel.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ChannelArn'\n                  minItems: 1\n                  maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /BatchGetStreamKey:\n    post:\n      operationId: BatchGetStreamKey\n      description: Performs \u003ca\u003eGetStreamKey\u003c/a\u003e on multiple ARNs simultaneously.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetStreamKeyResponse'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arns\n              properties:\n                arns:\n                  description: 'Array of ARNs, one per channel.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/StreamKeyArn'\n                  minItems: 1\n                  maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /CreateChannel:\n    post:\n      operationId: CreateChannel\n      description: Creates a new channel and an associated stream key to start streaming.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateChannelResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '484':\n          description: PendingVerification\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PendingVerification'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Channel name.\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]*$'\n                  minLength: 0\n                  maxLength: 128\n                latencyMode:\n                  description: 'Channel latency mode. Use \u003ccode\u003eNORMAL\u003c/code\u003e to broadcast and deliver live video up to Full HD. Use \u003ccode\u003eLOW\u003c/code\u003e for near-real-time interaction with viewers. (Note: In the Amazon IVS console, \u003ccode\u003eLOW\u003c/code\u003e and \u003ccode\u003eNORMAL\u003c/code\u003e correspond to Ultra-low and Standard, respectively.) Default: \u003ccode\u003eLOW\u003c/code\u003e.'\n                  type: string\n                  enum:\n                    - NORMAL\n                    - LOW\n                type:\n                  description: '\u003cp\u003eChannel type, which determines the allowable resolution and bitrate. \u003ci\u003eIf you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.\u003c/i\u003e Default: \u003ccode\u003eSTANDARD\u003c/code\u003e. Valid values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSTANDARD\u003c/code\u003e: Multiple qualities are generated from the original input, to automatically give viewers the best experience for their devices and network conditions. Vertical resolution can be up to 1080 and bitrate can be up to 8.5 Mbps.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBASIC\u003c/code\u003e: Amazon IVS delivers the original input to viewers. The viewer’s video-quality choice is limited to the original input. Vertical resolution can be up to 480 and bitrate can be up to 1.5 Mbps.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n                  type: string\n                  enum:\n                    - BASIC\n                    - STANDARD\n                authorized:\n                  description: 'Whether the channel is private (enabled for playback authorization). Default: \u003ccode\u003efalse\u003c/code\u003e.'\n                  type: boolean\n                recordingConfigurationArn:\n                  description: 'Recording-configuration ARN. Default: \"\" (empty string, recording is disabled).'\n                  type: string\n                  pattern: '^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$'\n                  minLength: 0\n                  maxLength: 128\n                tags:\n                  description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /CreateRecordingConfiguration:\n    post:\n      operationId: CreateRecordingConfiguration\n      description: '\u003cp\u003eCreates a new recording configuration, used to enable recording to Amazon S3.\u003c/p\u003e \u003cp\u003e \u003cb\u003eKnown issue:\u003c/b\u003e In the us-east-1 region, if you use the AWS CLI to create a recording configuration, it returns success even if the S3 bucket is in a different region. In this case, the \u003ccode\u003estate\u003c/code\u003e of the recording configuration is \u003ccode\u003eCREATE_FAILED\u003c/code\u003e (instead of \u003ccode\u003eACTIVE\u003c/code\u003e). (In other regions, the CLI correctly returns failure if the bucket is in a different region.)\u003c/p\u003e \u003cp\u003e \u003cb\u003eWorkaround:\u003c/b\u003e Ensure that your S3 bucket is in the same region as the recording configuration. If you create a recording configuration in a different region as your S3 bucket, delete that recording configuration and create a new one with an S3 bucket from the correct region.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateRecordingConfigurationResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: PendingVerification\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PendingVerification'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - destinationConfiguration\n              properties:\n                name:\n                  description: An arbitrary string (a nickname) that helps the customer identify that resource. The value does not need to be unique.\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]*$'\n                  minLength: 0\n                  maxLength: 128\n                destinationConfiguration:\n                  description: 'A complex type that describes a location where recorded videos will be stored. Each member represents a type of destination configuration. For recording, you define one and only one type of destination configuration.'\n                  type: object\n                  properties:\n                    s3:\n                      allOf:\n                        - $ref: '#/components/schemas/S3DestinationConfiguration'\n                        - description: An S3 destination configuration where recorded videos will be stored.\n                tags:\n                  description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /CreateStreamKey:\n    post:\n      operationId: CreateStreamKey\n      description: '\u003cp\u003eCreates a stream key, used to initiate a stream, for the specified channel ARN.\u003c/p\u003e \u003cp\u003eNote that \u003ca\u003eCreateChannel\u003c/a\u003e creates a stream key. If you subsequently use CreateStreamKey on the same channel, it will fail because a stream key already exists and there is a limit of 1 stream key per channel. To reset the stream key on a channel, use \u003ca\u003eDeleteStreamKey\u003c/a\u003e and then CreateStreamKey.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateStreamKeyResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '484':\n          description: PendingVerification\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PendingVerification'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - channelArn\n              properties:\n                channelArn:\n                  description: ARN of the channel for which to create the stream key.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n                tags:\n                  description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeleteChannel:\n    post:\n      operationId: DeleteChannel\n      description: '\u003cp\u003eDeletes the specified channel and its associated stream keys.\u003c/p\u003e \u003cp\u003eIf you try to delete a live channel, you will get an error (409 ConflictException). To delete a channel that is live, call \u003ca\u003eStopStream\u003c/a\u003e, wait for the Amazon EventBridge \"Stream End\" event (to verify that the stream''s state was changed from Live to Offline), then call DeleteChannel. (See \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/eventbridge.html\"\u003e Using EventBridge with Amazon IVS\u003c/a\u003e.) \u003c/p\u003e'\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: PendingVerification\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PendingVerification'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arn\n              properties:\n                arn:\n                  description: ARN of the channel to be deleted.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeletePlaybackKeyPair:\n    post:\n      operationId: DeletePlaybackKeyPair\n      description: 'Deletes a specified authorization key pair. This invalidates future viewer tokens generated using the key pair’s \u003ccode\u003eprivateKey\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\u003eSetting Up Private Channels\u003c/a\u003e in the \u003ci\u003eAmazon IVS User Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeletePlaybackKeyPairResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: PendingVerification\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PendingVerification'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arn\n              properties:\n                arn:\n                  description: ARN of the key pair to be deleted.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeleteRecordingConfiguration:\n    post:\n      operationId: DeleteRecordingConfiguration\n      description: '\u003cp\u003eDeletes the recording configuration for the specified ARN.\u003c/p\u003e \u003cp\u003eIf you try to delete a recording configuration that is associated with a channel, you will get an error (409 ConflictException). To avoid this, for all channels that reference the recording configuration, first use \u003ca\u003eUpdateChannel\u003c/a\u003e to set the \u003ccode\u003erecordingConfigurationArn\u003c/code\u003e field to an empty string, then use DeleteRecordingConfiguration.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arn\n              properties:\n                arn:\n                  description: ARN of the recording configuration to be deleted.\n                  type: string\n                  pattern: '^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$'\n                  minLength: 0\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /DeleteStreamKey:\n    post:\n      operationId: DeleteStreamKey\n      description: 'Deletes the stream key for the specified ARN, so it can no longer be used to stream.'\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: PendingVerification\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PendingVerification'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arn\n              properties:\n                arn:\n                  description: ARN of the stream key to be deleted.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetChannel:\n    post:\n      operationId: GetChannel\n      description: Gets the channel configuration for the specified channel ARN. See also \u003ca\u003eBatchGetChannel\u003c/a\u003e.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetChannelResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arn\n              properties:\n                arn:\n                  description: ARN of the channel for which the configuration is to be retrieved.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetPlaybackKeyPair:\n    post:\n      operationId: GetPlaybackKeyPair\n      description: 'Gets a specified playback authorization key pair and returns the \u003ccode\u003earn\u003c/code\u003e and \u003ccode\u003efingerprint\u003c/code\u003e. The \u003ccode\u003eprivateKey\u003c/code\u003e held by the caller can be used to generate viewer authorization tokens, to grant viewers access to private channels. For more information, see \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\u003eSetting Up Private Channels\u003c/a\u003e in the \u003ci\u003eAmazon IVS User Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPlaybackKeyPairResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arn\n              properties:\n                arn:\n                  description: ARN of the key pair to be returned.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetRecordingConfiguration:\n    post:\n      operationId: GetRecordingConfiguration\n      description: Gets the recording configuration for the specified ARN.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRecordingConfigurationResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arn\n              properties:\n                arn:\n                  description: ARN of the recording configuration to be retrieved.\n                  type: string\n                  pattern: '^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$'\n                  minLength: 0\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetStream:\n    post:\n      operationId: GetStream\n      description: Gets information about the active (live) stream on a specified channel.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStreamResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: ChannelNotBroadcasting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChannelNotBroadcasting'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - channelArn\n              properties:\n                channelArn:\n                  description: Channel ARN for stream to be accessed.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /GetStreamKey:\n    post:\n      operationId: GetStreamKey\n      description: Gets stream-key information for a specified ARN.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStreamKeyResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arn\n              properties:\n                arn:\n                  description: ARN for the stream key to be retrieved.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ImportPlaybackKeyPair:\n    post:\n      operationId: ImportPlaybackKeyPair\n      description: 'Imports the public portion of a new key pair and returns its \u003ccode\u003earn\u003c/code\u003e and \u003ccode\u003efingerprint\u003c/code\u003e. The \u003ccode\u003eprivateKey\u003c/code\u003e can then be used to generate viewer authorization tokens, to grant viewers access to private channels. For more information, see \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\u003eSetting Up Private Channels\u003c/a\u003e in the \u003ci\u003eAmazon IVS User Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportPlaybackKeyPairResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '484':\n          description: PendingVerification\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PendingVerification'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - publicKeyMaterial\n              properties:\n                publicKeyMaterial:\n                  description: The public portion of a customer-generated key pair.\n                  type: string\n                name:\n                  description: An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique.\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]*$'\n                  minLength: 0\n                  maxLength: 128\n                tags:\n                  description: Any tags provided with the request are added to the playback key pair tags.\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListChannels:\n    post:\n      operationId: ListChannels\n      description: 'Gets summary information about all channels in your account, in the AWS region where the API request is processed. This list can be filtered to match a specified name or recording-configuration ARN. Filters are mutually exclusive and cannot be used together. If you try to use both filters, you will get an error (409 ConflictException).'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListChannelsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filterByName:\n                  description: Filters the channel list to match the specified name.\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]*$'\n                  minLength: 0\n                  maxLength: 128\n                filterByRecordingConfigurationArn:\n                  description: Filters the channel list to match the specified recording-configuration ARN.\n                  type: string\n                  pattern: '^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$'\n                  minLength: 0\n                  maxLength: 128\n                nextToken:\n                  description: The first channel to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field.\n                  type: string\n                  minLength: 0\n                  maxLength: 500\n                maxResults:\n                  description: 'Maximum number of channels to return. Default: 50.'\n                  type: integer\n                  minimum: 1\n                  maximum: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListPlaybackKeyPairs:\n    post:\n      operationId: ListPlaybackKeyPairs\n      description: 'Gets summary information about playback key pairs. For more information, see \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\u003eSetting Up Private Channels\u003c/a\u003e in the \u003ci\u003eAmazon IVS User Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPlaybackKeyPairsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                nextToken:\n                  description: Maximum number of key pairs to return.\n                  type: string\n                  minLength: 0\n                  maxLength: 500\n                maxResults:\n                  description: 'The first key pair to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field. Default: 50.'\n                  type: integer\n                  minimum: 1\n                  maximum: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListRecordingConfigurations:\n    post:\n      operationId: ListRecordingConfigurations\n      description: 'Gets summary information about all recording configurations in your account, in the AWS region where the API request is processed.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRecordingConfigurationsResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                nextToken:\n                  description: The first recording configuration to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field.\n                  type: string\n                  minLength: 0\n                  maxLength: 500\n                maxResults:\n                  description: 'Maximum number of recording configurations to return. Default: 50. '\n                  type: integer\n                  minimum: 1\n                  maximum: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListStreamKeys:\n    post:\n      operationId: ListStreamKeys\n      description: Gets summary information about stream keys for the specified channel.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListStreamKeysResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - channelArn\n              properties:\n                channelArn:\n                  description: Channel ARN used to filter the list.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n                nextToken:\n                  description: The first stream key to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field.\n                  type: string\n                  minLength: 0\n                  maxLength: 500\n                maxResults:\n                  description: 'Maximum number of streamKeys to return. Default: 50.'\n                  type: integer\n                  minimum: 1\n                  maximum: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /ListStreams:\n    post:\n      operationId: ListStreams\n      description: 'Gets summary information about live streams in your account, in the AWS region where the API request is processed.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListStreamsResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                nextToken:\n                  description: The first stream to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field.\n                  type: string\n                  minLength: 0\n                  maxLength: 500\n                maxResults:\n                  description: 'Maximum number of streams to return. Default: 50.'\n                  type: integer\n                  minimum: 1\n                  maximum: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Gets information about AWS tags for the specified ARN.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The ARN of the resource to be retrieved.\n          schema:\n            type: string\n            pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:[a-z-]/[a-zA-Z0-9-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                nextToken:\n                  description: The first tag to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field.\n                  type: string\n                maxResults:\n                  description: 'Maximum number of tags to return. Default: 50.'\n                  type: integer\n                  minimum: 1\n                  maximum: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: Adds or updates tags for the AWS resource with the specified ARN.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: ARN of the resource for which tags are to be added or updated.\n          schema:\n            type: string\n            pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:[a-z-]/[a-zA-Z0-9-]+$'\n            minLength: 1\n            maxLength: 128\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: Array of tags to be added or updated.\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  /PutMetadata:\n    post:\n      operationId: PutMetadata\n      description: 'Inserts metadata into the active stream of the specified channel. A maximum of 5 requests per second per channel is allowed, each with a maximum 1 KB payload. (If 5 TPS is not sufficient for your needs, we recommend batching your data into a single PutMetadata call.) Also see \u003ca href=\"https://docs.aws.amazon.com/ivs/latest/userguide/metadata.html\"\u003eEmbedding Metadata within a Video Stream\u003c/a\u003e in the \u003ci\u003eAmazon IVS User Guide\u003c/i\u003e.'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ChannelNotBroadcasting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChannelNotBroadcasting'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - channelArn\n                - metadata\n              properties:\n                channelArn:\n                  description: ARN of the channel into which metadata is inserted. This channel must have an active stream.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n                metadata:\n                  description: 'Metadata to insert into the stream. Maximum: 1 KB per request.'\n                  type: string\n                  minLength: 1\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /StopStream:\n    post:\n      operationId: StopStream\n      description: '\u003cp\u003eDisconnects the incoming RTMPS stream for the specified channel. Can be used in conjunction with \u003ca\u003eDeleteStreamKey\u003c/a\u003e to prevent further streaming to a channel.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eMany streaming client-software libraries automatically reconnect a dropped RTMPS session, so to stop the stream permanently, you may want to first revoke the \u003ccode\u003estreamKey\u003c/code\u003e attached to the channel.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StopStreamResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ChannelNotBroadcasting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChannelNotBroadcasting'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: StreamUnavailable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamUnavailable'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - channelArn\n              properties:\n                channelArn:\n                  description: ARN of the channel for which the stream is to be stopped.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Removes tags from the resource with the specified ARN.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: ARN of the resource for which tags are to be removed.\n          schema:\n            type: string\n            pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:[a-z-]/[a-zA-Z0-9-]+$'\n            minLength: 1\n            maxLength: 128\n        - name: tagKeys\n          in: query\n          required: true\n          description: Array of tags to be removed.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 0\n            maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /UpdateChannel:\n    post:\n      operationId: UpdateChannel\n      description: Updates a channel's configuration. This does not affect an ongoing stream of this channel. You must stop and restart the stream for the changes to take effect.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateChannelResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: PendingVerification\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PendingVerification'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - arn\n              properties:\n                arn:\n                  description: ARN of the channel to be updated.\n                  type: string\n                  pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$'\n                  minLength: 1\n                  maxLength: 128\n                name:\n                  description: Channel name.\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]*$'\n                  minLength: 0\n                  maxLength: 128\n                latencyMode:\n                  description: 'Channel latency mode. Use \u003ccode\u003eNORMAL\u003c/code\u003e to broadcast and deliver live video up to Full HD. Use \u003ccode\u003eLOW\u003c/code\u003e for near-real-time interaction with viewers. (Note: In the Amazon IVS console, \u003ccode\u003eLOW\u003c/code\u003e and \u003ccode\u003eNORMAL\u003c/code\u003e correspond to Ultra-low and Standard, respectively.)'\n                  type: string\n                  enum:\n                    - NORMAL\n                    - LOW\n                type:\n                  description: '\u003cp\u003eChannel type, which determines the allowable resolution and bitrate. \u003ci\u003eIf you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately\u003c/i\u003e. Valid values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSTANDARD\u003c/code\u003e: Multiple qualities are generated from the original input, to automatically give viewers the best experience for their devices and network conditions. Vertical resolution can be up to 1080 and bitrate can be up to 8.5 Mbps.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBASIC\u003c/code\u003e: Amazon IVS delivers the original input to viewers. The viewer’s video-quality choice is limited to the original input. Vertical resolution can be up to 480 and bitrate can be up to 1.5 Mbps.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n                  type: string\n                  enum:\n                    - BASIC\n                    - STANDARD\n                authorized:\n                  description: Whether the channel is private (enabled for playback authorization).\n                  type: boolean\n                recordingConfigurationArn:\n                  description: 'Recording-configuration ARN. If this is set to an empty string, recording is disabled. A value other than an empty string indicates that recording is enabled'\n                  type: string\n                  pattern: '^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$'\n                  minLength: 0\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchGetChannelResponse:\n      type: object\n      properties:\n        channels:\n          $ref: '#/components/schemas/Channels'\n        errors:\n          allOf:\n            - $ref: '#/components/schemas/BatchErrors'\n            - description: Each error object is related to a specific ARN in the request.\n    ChannelArn:\n      type: string\n      pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$'\n      minLength: 1\n      maxLength: 128\n    BatchGetStreamKeyResponse:\n      type: object\n      properties:\n        streamKeys:\n          $ref: '#/components/schemas/StreamKeys'\n        errors:\n          $ref: '#/components/schemas/BatchErrors'\n    StreamKeyArn:\n      type: string\n      pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$'\n      minLength: 1\n      maxLength: 128\n    CreateChannelResponse:\n      type: object\n      properties:\n        channel:\n          $ref: '#/components/schemas/Channel'\n        streamKey:\n          $ref: '#/components/schemas/StreamKey'\n    TagValue:\n      type: string\n      maxLength: 256\n    ValidationException: {}\n    AccessDeniedException: {}\n    ResourceNotFoundException: {}\n    ServiceQuotaExceededException: {}\n    PendingVerification: {}\n    CreateRecordingConfigurationResponse:\n      type: object\n      properties:\n        recordingConfiguration:\n          $ref: '#/components/schemas/RecordingConfiguration'\n    S3DestinationConfiguration:\n      type: object\n      required:\n        - bucketName\n      properties:\n        bucketName:\n          allOf:\n            - $ref: '#/components/schemas/S3DestinationBucketName'\n            - description: Location (S3 bucket name) where recorded videos will be stored.\n      description: A complex type that describes an S3 location where recorded videos will be stored.\n    ConflictException: {}\n    InternalServerException: {}\n    CreateStreamKeyResponse:\n      type: object\n      properties:\n        streamKey:\n          allOf:\n            - $ref: '#/components/schemas/StreamKey'\n            - description: Stream key used to authenticate an RTMPS stream for ingestion.\n    DeletePlaybackKeyPairResponse:\n      type: object\n      properties: {}\n    GetChannelResponse:\n      type: object\n      properties:\n        channel:\n          $ref: '#/components/schemas/Channel'\n    GetPlaybackKeyPairResponse:\n      type: object\n      properties:\n        keyPair:\n          $ref: '#/components/schemas/PlaybackKeyPair'\n    GetRecordingConfigurationResponse:\n      type: object\n      properties:\n        recordingConfiguration:\n          $ref: '#/components/schemas/RecordingConfiguration'\n    GetStreamResponse:\n      type: object\n      properties:\n        stream:\n          $ref: '#/components/schemas/Stream'\n    ChannelNotBroadcasting: {}\n    GetStreamKeyResponse:\n      type: object\n      properties:\n        streamKey:\n          $ref: '#/components/schemas/StreamKey'\n    ImportPlaybackKeyPairResponse:\n      type: object\n      properties:\n        keyPair:\n          $ref: '#/components/schemas/PlaybackKeyPair'\n    ListChannelsResponse:\n      type: object\n      required:\n        - channels\n      properties:\n        channels:\n          allOf:\n            - $ref: '#/components/schemas/ChannelList'\n            - description: List of the matching channels.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'If there are more channels than \u003ccode\u003emaxResults\u003c/code\u003e, use \u003ccode\u003enextToken\u003c/code\u003e in the request to get the next set.'\n    ListPlaybackKeyPairsResponse:\n      type: object\n      required:\n        - keyPairs\n      properties:\n        keyPairs:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackKeyPairList'\n            - description: List of key pairs.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'If there are more key pairs than \u003ccode\u003emaxResults\u003c/code\u003e, use \u003ccode\u003enextToken\u003c/code\u003e in the request to get the next set.'\n    ListRecordingConfigurationsResponse:\n      type: object\n      required:\n        - recordingConfigurations\n      properties:\n        recordingConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/RecordingConfigurationList'\n            - description: List of the matching recording configurations.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'If there are more recording configurations than \u003ccode\u003emaxResults\u003c/code\u003e, use \u003ccode\u003enextToken\u003c/code\u003e in the request to get the next set.'\n    ListStreamKeysResponse:\n      type: object\n      required:\n        - streamKeys\n      properties:\n        streamKeys:\n          allOf:\n            - $ref: '#/components/schemas/StreamKeyList'\n            - description: List of stream keys.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'If there are more stream keys than \u003ccode\u003emaxResults\u003c/code\u003e, use \u003ccode\u003enextToken\u003c/code\u003e in the request to get the next set.'\n    ListStreamsResponse:\n      type: object\n      required:\n        - streams\n      properties:\n        streams:\n          allOf:\n            - $ref: '#/components/schemas/StreamList'\n            - description: List of streams.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: 'If there are more streams than \u003ccode\u003emaxResults\u003c/code\u003e, use \u003ccode\u003enextToken\u003c/code\u003e in the request to get the next set.'\n    ListTagsForResourceResponse:\n      type: object\n      required:\n        - tags\n      properties:\n        tags:\n          $ref: '#/components/schemas/Tags'\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'If there are more tags than \u003ccode\u003emaxResults\u003c/code\u003e, use \u003ccode\u003enextToken\u003c/code\u003e in the request to get the next set.'\n    ThrottlingException: {}\n    StopStreamResponse:\n      type: object\n      properties: {}\n    StreamUnavailable: {}\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    UpdateChannelResponse:\n      type: object\n      properties:\n        channel:\n          $ref: '#/components/schemas/Channel'\n    ResourceArn:\n      type: string\n      pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:[a-z-]/[a-zA-Z0-9-]+$'\n      minLength: 1\n      maxLength: 128\n    errorCode:\n      type: string\n    errorMessage:\n      type: string\n    BatchError:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArn'\n            - description: Channel ARN.\n        code:\n          allOf:\n            - $ref: '#/components/schemas/errorCode'\n            - description: Error code.\n        message:\n          allOf:\n            - $ref: '#/components/schemas/errorMessage'\n            - description: 'Error message, determined by the application.'\n      description: 'Error related to a specific channel, specified by its ARN.'\n    BatchErrors:\n      type: array\n      items:\n        $ref: '#/components/schemas/BatchError'\n    ChannelArnList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ChannelArn'\n      minItems: 1\n      maxItems: 50\n    BatchGetChannelRequest:\n      type: object\n      required:\n        - arns\n      title: BatchGetChannelRequest\n      properties:\n        arns:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArnList'\n            - description: 'Array of ARNs, one per channel.'\n    Channels:\n      type: array\n      items:\n        $ref: '#/components/schemas/Channel'\n    StreamKeyArnList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StreamKeyArn'\n      minItems: 1\n      maxItems: 50\n    BatchGetStreamKeyRequest:\n      type: object\n      required:\n        - arns\n      title: BatchGetStreamKeyRequest\n      properties:\n        arns:\n          allOf:\n            - $ref: '#/components/schemas/StreamKeyArnList'\n            - description: 'Array of ARNs, one per channel.'\n    StreamKeys:\n      type: array\n      items:\n        $ref: '#/components/schemas/StreamKey'\n    Boolean:\n      type: boolean\n    ChannelName:\n      type: string\n      pattern: '^[a-zA-Z0-9-_]*$'\n      minLength: 0\n      maxLength: 128\n    ChannelLatencyMode:\n      type: string\n      enum:\n        - NORMAL\n        - LOW\n    ChannelType:\n      type: string\n      enum:\n        - BASIC\n        - STANDARD\n    ChannelRecordingConfigurationArn:\n      type: string\n      pattern: '^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$'\n      minLength: 0\n      maxLength: 128\n    IngestEndpoint:\n      type: string\n    PlaybackURL:\n      type: string\n    IsAuthorized:\n      type: boolean\n    Tags:\n      type: object\n      minProperties: 0\n      maxProperties: 50\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    Channel:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: Channel ARN.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ChannelName'\n            - description: Channel name.\n        latencyMode:\n          allOf:\n            - $ref: '#/components/schemas/ChannelLatencyMode'\n            - description: 'Channel latency mode. Use \u003ccode\u003eNORMAL\u003c/code\u003e to broadcast and deliver live video up to Full HD. Use \u003ccode\u003eLOW\u003c/code\u003e for near-real-time interaction with viewers. Default: \u003ccode\u003eLOW\u003c/code\u003e. (Note: In the Amazon IVS console, \u003ccode\u003eLOW\u003c/code\u003e and \u003ccode\u003eNORMAL\u003c/code\u003e correspond to Ultra-low and Standard, respectively.)'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ChannelType'\n            - description: '\u003cp\u003eChannel type, which determines the allowable resolution and bitrate. \u003ci\u003eIf you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.\u003c/i\u003e Default: \u003ccode\u003eSTANDARD\u003c/code\u003e. Valid values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSTANDARD\u003c/code\u003e: Multiple qualities are generated from the original input, to automatically give viewers the best experience for their devices and network conditions. Vertical resolution can be up to 1080 and bitrate can be up to 8.5 Mbps.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBASIC\u003c/code\u003e: Amazon IVS delivers the original input to viewers. The viewer’s video-quality choice is limited to the original input. Vertical resolution can be up to 480 and bitrate can be up to 1.5 Mbps.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        recordingConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelRecordingConfigurationArn'\n            - description: 'Recording-configuration ARN. A value other than an empty string indicates that recording is enabled. Default: \"\" (empty string, recording is disabled).'\n        ingestEndpoint:\n          allOf:\n            - $ref: '#/components/schemas/IngestEndpoint'\n            - description: 'Channel ingest endpoint, part of the definition of an ingest server, used when you set up streaming software.'\n        playbackUrl:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackURL'\n            - description: Channel playback URL.\n        authorized:\n          allOf:\n            - $ref: '#/components/schemas/IsAuthorized'\n            - description: 'Whether the channel is private (enabled for playback authorization). Default: \u003ccode\u003efalse\u003c/code\u003e.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n      description: Object specifying a channel.\n    ChannelSummary:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: Channel ARN.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ChannelName'\n            - description: Channel name.\n        latencyMode:\n          allOf:\n            - $ref: '#/components/schemas/ChannelLatencyMode'\n            - description: 'Channel latency mode. Use \u003ccode\u003eNORMAL\u003c/code\u003e to broadcast and deliver live video up to Full HD. Use \u003ccode\u003eLOW\u003c/code\u003e for near-real-time interaction with viewers. Default: \u003ccode\u003eLOW\u003c/code\u003e. (Note: In the Amazon IVS console, \u003ccode\u003eLOW\u003c/code\u003e and \u003ccode\u003eNORMAL\u003c/code\u003e correspond to Ultra-low and Standard, respectively.)'\n        authorized:\n          allOf:\n            - $ref: '#/components/schemas/IsAuthorized'\n            - description: 'Whether the channel is private (enabled for playback authorization). Default: \u003ccode\u003efalse\u003c/code\u003e.'\n        recordingConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelRecordingConfigurationArn'\n            - description: 'Recording-configuration ARN. A value other than an empty string indicates that recording is enabled. Default: \"\" (empty string, recording is disabled).'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n      description: Summary information about a channel.\n    ChannelList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ChannelSummary'\n    CreateChannelRequest:\n      type: object\n      title: CreateChannelRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ChannelName'\n            - description: Channel name.\n        latencyMode:\n          allOf:\n            - $ref: '#/components/schemas/ChannelLatencyMode'\n            - description: 'Channel latency mode. Use \u003ccode\u003eNORMAL\u003c/code\u003e to broadcast and deliver live video up to Full HD. Use \u003ccode\u003eLOW\u003c/code\u003e for near-real-time interaction with viewers. (Note: In the Amazon IVS console, \u003ccode\u003eLOW\u003c/code\u003e and \u003ccode\u003eNORMAL\u003c/code\u003e correspond to Ultra-low and Standard, respectively.) Default: \u003ccode\u003eLOW\u003c/code\u003e.'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ChannelType'\n            - description: '\u003cp\u003eChannel type, which determines the allowable resolution and bitrate. \u003ci\u003eIf you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.\u003c/i\u003e Default: \u003ccode\u003eSTANDARD\u003c/code\u003e. Valid values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSTANDARD\u003c/code\u003e: Multiple qualities are generated from the original input, to automatically give viewers the best experience for their devices and network conditions. Vertical resolution can be up to 1080 and bitrate can be up to 8.5 Mbps.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBASIC\u003c/code\u003e: Amazon IVS delivers the original input to viewers. The viewer’s video-quality choice is limited to the original input. Vertical resolution can be up to 480 and bitrate can be up to 1.5 Mbps.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        authorized:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Whether the channel is private (enabled for playback authorization). Default: \u003ccode\u003efalse\u003c/code\u003e.'\n        recordingConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelRecordingConfigurationArn'\n            - description: 'Recording-configuration ARN. Default: \"\" (empty string, recording is disabled).'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n    StreamKey:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/StreamKeyArn'\n            - description: Stream-key ARN.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/StreamKeyValue'\n            - description: Stream-key value.\n        channelArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: Channel ARN for the stream.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n      description: Object specifying a stream key.\n    RecordingConfigurationName:\n      type: string\n      pattern: '^[a-zA-Z0-9-_]*$'\n      minLength: 0\n      maxLength: 128\n    DestinationConfiguration:\n      type: object\n      properties:\n        s3:\n          allOf:\n            - $ref: '#/components/schemas/S3DestinationConfiguration'\n            - description: An S3 destination configuration where recorded videos will be stored.\n      description: 'A complex type that describes a location where recorded videos will be stored. Each member represents a type of destination configuration. For recording, you define one and only one type of destination configuration.'\n    CreateRecordingConfigurationRequest:\n      type: object\n      required:\n        - destinationConfiguration\n      title: CreateRecordingConfigurationRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/RecordingConfigurationName'\n            - description: An arbitrary string (a nickname) that helps the customer identify that resource. The value does not need to be unique.\n        destinationConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/DestinationConfiguration'\n            - description: A complex type that contains a destination configuration for where recorded video will be stored.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n    RecordingConfiguration:\n      type: object\n      required:\n        - arn\n        - destinationConfiguration\n        - state\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/RecordingConfigurationArn'\n            - description: Recording-configuration ARN.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/RecordingConfigurationName'\n            - description: An arbitrary string (a nickname) assigned to a recording configuration that helps the customer identify that resource. The value does not need to be unique.\n        destinationConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/DestinationConfiguration'\n            - description: A complex type that contains information about where recorded video will be stored.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/RecordingConfigurationState'\n            - description: 'Indicates the current state of the recording configuration. When the state is \u003ccode\u003eACTIVE\u003c/code\u003e, the configuration is ready for recording a channel stream.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n      description: An object representing a configuration to record a channel stream.\n    CreateStreamKeyRequest:\n      type: object\n      required:\n        - channelArn\n      title: CreateStreamKeyRequest\n      properties:\n        channelArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: ARN of the channel for which to create the stream key.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n    DeleteChannelRequest:\n      type: object\n      required:\n        - arn\n      title: DeleteChannelRequest\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: ARN of the channel to be deleted.\n    PlaybackKeyPairArn:\n      type: string\n      pattern: '^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$'\n      minLength: 1\n      maxLength: 128\n    DeletePlaybackKeyPairRequest:\n      type: object\n      required:\n        - arn\n      title: DeletePlaybackKeyPairRequest\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackKeyPairArn'\n            - description: ARN of the key pair to be deleted.\n    RecordingConfigurationArn:\n      type: string\n      pattern: '^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$'\n      minLength: 0\n      maxLength: 128\n    DeleteRecordingConfigurationRequest:\n      type: object\n      required:\n        - arn\n      title: DeleteRecordingConfigurationRequest\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/RecordingConfigurationArn'\n            - description: ARN of the recording configuration to be deleted.\n    DeleteStreamKeyRequest:\n      type: object\n      required:\n        - arn\n      title: DeleteStreamKeyRequest\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/StreamKeyArn'\n            - description: ARN of the stream key to be deleted.\n    GetChannelRequest:\n      type: object\n      required:\n        - arn\n      title: GetChannelRequest\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: ARN of the channel for which the configuration is to be retrieved.\n    GetPlaybackKeyPairRequest:\n      type: object\n      required:\n        - arn\n      title: GetPlaybackKeyPairRequest\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackKeyPairArn'\n            - description: ARN of the key pair to be returned.\n    PlaybackKeyPair:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackKeyPairArn'\n            - description: Key-pair ARN.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackKeyPairName'\n            - description: An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique.\n        fingerprint:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackKeyPairFingerprint'\n            - description: Key-pair identifier.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n      description: A key pair used to sign and validate a playback authorization token.\n    GetRecordingConfigurationRequest:\n      type: object\n      required:\n        - arn\n      title: GetRecordingConfigurationRequest\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/RecordingConfigurationArn'\n            - description: ARN of the recording configuration to be retrieved.\n    GetStreamKeyRequest:\n      type: object\n      required:\n        - arn\n      title: GetStreamKeyRequest\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/StreamKeyArn'\n            - description: ARN for the stream key to be retrieved.\n    GetStreamRequest:\n      type: object\n      required:\n        - channelArn\n      title: GetStreamRequest\n      properties:\n        channelArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: Channel ARN for stream to be accessed.\n    Stream:\n      type: object\n      properties:\n        channelArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: Channel ARN for the stream.\n        playbackUrl:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackURL'\n            - description: 'URL of the master playlist, required by the video player to play the HLS stream.'\n        startTime:\n          allOf:\n            - $ref: '#/components/schemas/StreamStartTime'\n            - description: ISO-8601 formatted timestamp of the stream’s start.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/StreamState'\n            - description: The stream’s state.\n        health:\n          allOf:\n            - $ref: '#/components/schemas/StreamHealth'\n            - description: The stream’s health.\n        viewerCount:\n          allOf:\n            - $ref: '#/components/schemas/StreamViewerCount'\n            - description: 'Number of current viewers of the stream. A value of -1 indicates that the request timed out; in this case, retry.'\n      description: Specifies a live video stream that has been ingested and distributed.\n    PlaybackPublicKeyMaterial:\n      type: string\n    PlaybackKeyPairName:\n      type: string\n      pattern: '^[a-zA-Z0-9-_]*$'\n      minLength: 0\n      maxLength: 128\n    ImportPlaybackKeyPairRequest:\n      type: object\n      required:\n        - publicKeyMaterial\n      title: ImportPlaybackKeyPairRequest\n      properties:\n        publicKeyMaterial:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackPublicKeyMaterial'\n            - description: The public portion of a customer-generated key pair.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackKeyPairName'\n            - description: An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: Any tags provided with the request are added to the playback key pair tags.\n    PaginationToken:\n      type: string\n      minLength: 0\n      maxLength: 500\n    MaxChannelResults:\n      type: integer\n      minimum: 1\n      maximum: 50\n    ListChannelsRequest:\n      type: object\n      title: ListChannelsRequest\n      properties:\n        filterByName:\n          allOf:\n            - $ref: '#/components/schemas/ChannelName'\n            - description: Filters the channel list to match the specified name.\n        filterByRecordingConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelRecordingConfigurationArn'\n            - description: Filters the channel list to match the specified recording-configuration ARN.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: The first channel to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxChannelResults'\n            - description: 'Maximum number of channels to return. Default: 50.'\n    MaxPlaybackKeyPairResults:\n      type: integer\n      minimum: 1\n      maximum: 50\n    ListPlaybackKeyPairsRequest:\n      type: object\n      title: ListPlaybackKeyPairsRequest\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: Maximum number of key pairs to return.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxPlaybackKeyPairResults'\n            - description: 'The first key pair to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field. Default: 50.'\n    PlaybackKeyPairList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PlaybackKeyPairSummary'\n    MaxRecordingConfigurationResults:\n      type: integer\n      minimum: 1\n      maximum: 50\n    ListRecordingConfigurationsRequest:\n      type: object\n      title: ListRecordingConfigurationsRequest\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: The first recording configuration to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxRecordingConfigurationResults'\n            - description: 'Maximum number of recording configurations to return. Default: 50. '\n    RecordingConfigurationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RecordingConfigurationSummary'\n    MaxStreamKeyResults:\n      type: integer\n      minimum: 1\n      maximum: 50\n    ListStreamKeysRequest:\n      type: object\n      required:\n        - channelArn\n      title: ListStreamKeysRequest\n      properties:\n        channelArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: Channel ARN used to filter the list.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: The first stream key to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxStreamKeyResults'\n            - description: 'Maximum number of streamKeys to return. Default: 50.'\n    StreamKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StreamKeySummary'\n    MaxStreamResults:\n      type: integer\n      minimum: 1\n      maximum: 50\n    ListStreamsRequest:\n      type: object\n      title: ListStreamsRequest\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: The first stream to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxStreamResults'\n            - description: 'Maximum number of streams to return. Default: 50.'\n    StreamList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StreamSummary'\n    String:\n      type: string\n    MaxTagResults:\n      type: integer\n      minimum: 1\n      maximum: 50\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties:\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The first tag to retrieve. This is used for pagination; see the \u003ccode\u003enextToken\u003c/code\u003e response field.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxTagResults'\n            - description: 'Maximum number of tags to return. Default: 50.'\n    PlaybackKeyPairFingerprint:\n      type: string\n    PlaybackKeyPairSummary:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackKeyPairArn'\n            - description: Key-pair ARN.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/PlaybackKeyPairName'\n            - description: An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n      description: Summary information about a playback key pair.\n    StreamMetadata:\n      type: string\n      minLength: 1\n    PutMetadataRequest:\n      type: object\n      required:\n        - channelArn\n        - metadata\n      title: PutMetadataRequest\n      properties:\n        channelArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: ARN of the channel into which metadata is inserted. This channel must have an active stream.\n        metadata:\n          allOf:\n            - $ref: '#/components/schemas/StreamMetadata'\n            - description: 'Metadata to insert into the stream. Maximum: 1 KB per request.'\n    RecordingConfigurationState:\n      type: string\n      enum:\n        - CREATING\n        - CREATE_FAILED\n        - ACTIVE\n    RecordingConfigurationSummary:\n      type: object\n      required:\n        - arn\n        - destinationConfiguration\n        - state\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/RecordingConfigurationArn'\n            - description: Recording-configuration ARN.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/RecordingConfigurationName'\n            - description: An arbitrary string (a nickname) assigned to a recording configuration that helps the customer identify that resource. The value does not need to be unique.\n        destinationConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/DestinationConfiguration'\n            - description: A complex type that contains information about where recorded video will be stored.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/RecordingConfigurationState'\n            - description: 'Indicates the current state of the recording configuration. When the state is \u003ccode\u003eACTIVE\u003c/code\u003e, the configuration is ready for recording a channel stream.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n      description: Summary information about a RecordingConfiguration.\n    S3DestinationBucketName:\n      type: string\n      pattern: '^[a-z0-9-.]+$'\n      minLength: 3\n      maxLength: 63\n    StopStreamRequest:\n      type: object\n      required:\n        - channelArn\n      title: StopStreamRequest\n      properties:\n        channelArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: ARN of the channel for which the stream is to be stopped.\n    StreamStartTime:\n      type: string\n      format: date-time\n    StreamState:\n      type: string\n      enum:\n        - LIVE\n        - OFFLINE\n    StreamHealth:\n      type: string\n      enum:\n        - HEALTHY\n        - STARVING\n        - UNKNOWN\n    StreamViewerCount:\n      type: integer\n    StreamKeyValue:\n      type: string\n    StreamKeySummary:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/StreamKeyArn'\n            - description: Stream-key ARN.\n        channelArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: Channel ARN for the stream.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'Array of 1-50 maps, each of the form \u003ccode\u003estring:string (key:value)\u003c/code\u003e.'\n      description: Summary information about a stream key.\n    StreamSummary:\n      type: object\n      properties:\n        channelArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: Channel ARN for the stream.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/StreamState'\n            - description: The stream’s state.\n        health:\n          allOf:\n            - $ref: '#/components/schemas/StreamHealth'\n            - description: The stream’s health.\n        viewerCount:\n          allOf:\n            - $ref: '#/components/schemas/StreamViewerCount'\n            - description: 'Number of current viewers of the stream. A value of -1 indicates that the request timed out; in this case, retry.'\n        startTime:\n          allOf:\n            - $ref: '#/components/schemas/StreamStartTime'\n            - description: ISO-8601 formatted timestamp of the stream’s start.\n      description: Summary information about a stream.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 0\n      maxItems: 50\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: Array of tags to be added or updated.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateChannelRequest:\n      type: object\n      required:\n        - arn\n      title: UpdateChannelRequest\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelArn'\n            - description: ARN of the channel to be updated.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ChannelName'\n            - description: Channel name.\n        latencyMode:\n          allOf:\n            - $ref: '#/components/schemas/ChannelLatencyMode'\n            - description: 'Channel latency mode. Use \u003ccode\u003eNORMAL\u003c/code\u003e to broadcast and deliver live video up to Full HD. Use \u003ccode\u003eLOW\u003c/code\u003e for near-real-time interaction with viewers. (Note: In the Amazon IVS console, \u003ccode\u003eLOW\u003c/code\u003e and \u003ccode\u003eNORMAL\u003c/code\u003e correspond to Ultra-low and Standard, respectively.)'\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ChannelType'\n            - description: '\u003cp\u003eChannel type, which determines the allowable resolution and bitrate. \u003ci\u003eIf you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately\u003c/i\u003e. Valid values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSTANDARD\u003c/code\u003e: Multiple qualities are generated from the original input, to automatically give viewers the best experience for their devices and network conditions. Vertical resolution can be up to 1080 and bitrate can be up to 8.5 Mbps.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBASIC\u003c/code\u003e: Amazon IVS delivers the original input to viewers. The viewer’s video-quality choice is limited to the original input. Vertical resolution can be up to 480 and bitrate can be up to 1.5 Mbps.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        authorized:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Whether the channel is private (enabled for playback authorization).\n        recordingConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/ChannelRecordingConfigurationArn'\n            - description: 'Recording-configuration ARN. If this is set to an empty string, recording is disabled. A value other than an empty string indicates that recording is enabled'\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "buildIR: make ir: path \"/DeletePlaybackKeyPair\": post: responses: walk: 481: \"application/json\": callback: save type: schema name conflict: \"DeletePlaybackKeyPairApplicationJSON\"",
	"NotImplemented": [
		"allOf"
	]
}