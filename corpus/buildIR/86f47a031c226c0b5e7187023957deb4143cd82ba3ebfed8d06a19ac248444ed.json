{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "apache.org-qakka-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/apache.org-qakka-v1-swagger.yaml",
			"byteSize": 9763,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: TheASF\n  description: API for Qakka Queue System\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Qakka\n  version: v1\n  x-apisguru-categories:\n    - messaging\n  x-logo:\n    url: https://twitter.com/TheASF/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/apache/usergrid-qakka/master/docs/swagger.json\n      version: \"2.0\"\n  x-providerName: apache.org\n  x-serviceName: qakka\ntags:\n  - description: Queue management, send, get and ack.\n    name: queues\n  - description: Status end-point.\n    name: status\npaths:\n  /queues:\n    get:\n      description: \"\"\n      operationId: getListOfQueues\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n      summary: Get list of all Queues.\n      tags:\n        - queues\n    post:\n      description: \"\"\n      operationId: createQueue\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n        \"400\":\n          description: No Queue object posted, or name field is missing\n      summary: Create new queue.\n      tags:\n        - queues\n  \"/queues/{queueName}\":\n    delete:\n      description: \"\"\n      operationId: deleteQueue\n      parameters:\n        - in: path\n          name: queueName\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: confirm\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n        \"400\":\n          description: Queue name or confirm flag missing.\n      summary: Delete Queue.\n      tags:\n        - queues\n  \"/queues/{queueName}/config\":\n    get:\n      description: \"\"\n      operationId: getQueueConfig\n      parameters:\n        - description: Name of Queue\n          in: path\n          name: queueName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n        \"400\":\n          description: Queue name or confirm flag missing.\n      summary: Get Queue config.\n      tags:\n        - queues\n    put:\n      description: \"\"\n      operationId: updateQueueConfig\n      parameters:\n        - in: path\n          name: queueName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n        \"400\":\n          description: No Queue object posted, or name field is missing\n      summary: Update Queue configuration.\n      tags:\n        - queues\n  \"/queues/{queueName}/data/{queueMessageId}\":\n    get:\n      description: \"\"\n      operationId: getMessageData\n      parameters:\n        - description: Name of Queue\n          in: path\n          name: queueName\n          required: true\n          schema:\n            type: string\n        - description: ID of Queue Message for which data is to be returned\n          in: path\n          name: queueMessageId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n        \"400\":\n          description: Message ID invalid\n        \"404\":\n          description: Queue Message or data not found\n      summary: Get data associated with a Queue Message.\n      tags:\n        - queues\n  \"/queues/{queueName}/messages\":\n    get:\n      description: \"\"\n      operationId: getNextMessages\n      parameters:\n        - description: Name of Queue\n          in: path\n          name: queueName\n          required: true\n          schema:\n            type: string\n        - description: Number of messages to get\n          in: query\n          name: count\n          required: false\n          schema:\n            type: string\n            default: \"1\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n        \"400\":\n          description: Invalid count parameter\n      summary: Get next Queue Messages from a Queue\n      tags:\n        - queues\n    post:\n      description: \"\"\n      operationId: sendMessageBinary\n      parameters:\n        - description: Name of Queue\n          in: path\n          name: queueName\n          required: true\n          schema:\n            type: string\n        - description: Regions to which message is to be sent\n          in: query\n          name: regions\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: delay\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: expiration\n          required: false\n          schema:\n            type: string\n        - description: Content type of the data to be sent with Queue Message\n          in: query\n          name: contentType\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              items:\n                format: byte\n                type: string\n              type: array\n        description: Data to be send with Queue Message\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n      summary: Send Queue Message with a binary data (blob) payload.\n      tags:\n        - queues\n  \"/queues/{queueName}/messages/{queueMessageId}\":\n    delete:\n      description: \"\"\n      operationId: ackMessage\n      parameters:\n        - description: Name of Queue\n          in: path\n          name: queueName\n          required: true\n          schema:\n            type: string\n        - description: ID of Queue Message to be acknowledged\n          in: path\n          name: queueMessageId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n        \"400\":\n          description: Queue Message ID invalid, or message not in-flight\n      summary: Acknowledge that Queue Message has been processed.\n      tags:\n        - queues\n  /status:\n    get:\n      description: \"\"\n      operationId: status\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n      summary: Status of webapp.\n      tags:\n        - status\nservers:\n  - url: https://apache.local\ncomponents:\n  schemas:\n    ApiResponse:\n      description: Response returned by most Queue API calls.\n      properties:\n        count:\n          description: Count of Queues or QueueMessages returned by the call.\n          format: int32\n          type: integer\n        message:\n          description: Informative message intended for client.\n          type: string\n        queueMessages:\n          description: Queues Messages returned by the call, or empty if not applicable.\n          items:\n            $ref: \"#/components/schemas/QueueMessage\"\n          type: array\n        queues:\n          description: Queues returned but the call, or empty if not applicable.\n          items:\n            $ref: \"#/components/schemas/Queue\"\n          type: array\n      type: object\n    Queue:\n      description: Specifies the configuration for a Queue.\n      properties:\n        name:\n          description: Name of queue, must be unique.\n          type: string\n      required:\n        - name\n      type: object\n    QueueMessage:\n      description: A Queue Message\n      properties:\n        contentType:\n          description: Content-type of data associated with QueueMessage.\n          type: string\n        createDate:\n          description: Date that message was received by system.\n          format: int64\n          type: integer\n        data:\n          description: Embedded JSON to be sent with Queue Message.\n          type: string\n        href:\n          description: URL of data associated with Queue Message (if not embedded JSON)\n          type: string\n        messageId:\n          description: UUID of Message Data associated with this Queue Message\n          format: uuid\n          type: string\n        queueMessageId:\n          description: UUID of Queue Message in local region.\n          format: uuid\n          type: string\n        queueName:\n          description: Name of Queue for message.\n          type: string\n        receivingRegion:\n          description: Regions to which message will be sent\n          type: string\n        sendingRegion:\n          description: Region from which was sent\n          type: string\n      required:\n        - queueName\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/apache.org-qakka-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/apache.org-qakka-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/queues/{queueName}/messages\": post: requestBody: contents: application/octet-stream: octet stream with \"array\" schema not supported",
	"NotImplemented": [
		"unsupported content types"
	]
}