{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "npr.org-sponsorship-2-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/npr.org-sponsorship-2-swagger.yaml",
			"byteSize": 22822,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: NPROneEnterprise@npr.org\n    name: NPR One Enterprise Team\n    url: https://dev.npr.org\n    x-twitter: NPR\n  description: Sponsorship for non-NPR One client applications\n  termsOfService: https://dev.npr.org/guide/prerequisites/terms-of-use\n  title: NPR Sponsorship Service\n  version: \"2\"\n  x-apisguru-categories:\n    - entertainment\n  x-logo:\n    url: https://twitter.com/NPR/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://sponsorship.api.npr.org/v2/swagger.json\n      version: \"2.0\"\n  x-providerName: npr.org\n  x-serviceName: sponsorship\nexternalDocs:\n  description: Learn more at the NPR One Developer Center\n  url: https://dev.npr.org/guide/app-experience/sponsorship/\npaths:\n  /v2/ads:\n    get:\n      description: \u003e-\n        **Not** for use by NPR One clients (for whom sponsorship is already\n        integrated into the Listening Service), this endpoint is designed to be\n        used by our other client applications to request sponsorship on behalf\n        of a user. Sponsorship units are returned in the form of DAAST XML. It\n        is worth noting that this endpoint attempts to always return XML, even\n        in the case of exceptions.\n\n\n        The default behavior of this endpoint is asynchronous; on an initial request, a call to our external sponsorship provider is placed on a queue, which is typically processed within 3 minutes. Once the sponsorship call is received and processed, the returned sponsorship units are placed in a cache on our server for the current user. Subsequent calls to this endpoint will return DAAST sponsorship units from this cache until tracking information is submitted, which removes the ad from the cache and will automatically request additional ads asynchronously if there are fewer than a certain number remaining in the cache.\n\n\n        For development purposes, it's worth noting that there is currently no way to clear a user's cache without submitting some form of tracking.\n      operationId: getAds\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/X-Advertising-ID\"\n        - description: Whether to force a synchronous call to our external sponsorship\n            provider; the default behavior is asynchronous.\n          in: query\n          name: forceResult\n          required: false\n          schema:\n            type: boolean\n        - description: How many sponsorship units to request in one call; if left\n            unspecified, the default behavior is to return only 1.\n          in: query\n          name: adCount\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 5\n      responses:\n        \"200\":\n          description: Request completed successfully; a DAAST XML document is returned.\n            Note that this response will only be returned if either `force=true`\n            was passed in the querystring, or a call to get sponsorship was\n            previously made, and ads now exist in the cache for this user;\n            otherwise, the 202 response is returned.\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DAASTXml\"\n        \"202\":\n          description: Request accepted. Check back later for actual ads.\n        \"400\":\n          description: A bad request; generally, one or more parameters passed in were\n            incorrect or missing\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorXmlDocument\"\n        \"500\":\n          description: A server error\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorXmlDocument\"\n      summary: Request DAAST sponsorship units\n      tags:\n        - sponsorship\n    post:\n      description: \u003e-\n        **Not** for use by NPR One clients (for whom sponsorship is already\n        integrated into the Listening Service), this endpoint is designed to be\n        used by our other client applications to submit tracking information for\n        sponsorship units obtained from the `GET /sponsorship/v2/ads` endpoint.\n\n\n        The tracking information should be submitted in the body of the request in the form of a JSON object following the Collection.Doc+JSON specification.\n      operationId: receiveAdTracking\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/X-Advertising-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserAdDocument\"\n        description: A JSON object representing sponsorship tracking data to submit to our\n          external provider.\n        required: true\n      responses:\n        \"204\":\n          description: Request completed successfully, but there is nothing that we need to\n            return to the caller.\n        \"400\":\n          description: A bad request; generally, one or more parameters passed in were\n            incorrect or missing\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"500\":\n          description: A server error\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Record tracking data for DAAST sponsorship units\n      tags:\n        - sponsorship\nservers:\n  - url: https://sponsorship.api.npr.org\ncomponents:\n  parameters:\n    Authorization:\n      description: Your access token from the Authorization Service. Should start with\n        `Bearer`, followed by a space, followed by the token.\n      in: header\n      name: Authorization\n      required: true\n      schema:\n        type: string\n    X-Advertising-ID:\n      description: A device-specific advertising identifier, if possible. Apple's IDFA is\n        an example.\n      in: header\n      name: X-Advertising-ID\n      required: false\n      schema:\n        type: string\n  responses:\n    400WithDocument:\n      description: A bad request; generally, one or more parameters passed in were\n        incorrect or missing\n      headers:\n        X-RateLimit-Limit:\n          description: The number of allowed requests in the current period\n          schema:\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of remaining requests in the current period\n          schema:\n            type: integer\n        X-RateLimit-Reset:\n          description: The number of seconds left in the current period\n          schema:\n            type: integer\n      content:\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/ErrorDocument\"\n    401WithDocument:\n      description: The client is not authorized to complete this request. Check to ensure a\n        valid access token was passed in the headers.\n      content:\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/ErrorDocument\"\n    404WithDocument:\n      description: The resource with the requested ID could not be found, and the server\n        was unable to complete the request.\n      headers:\n        X-RateLimit-Limit:\n          description: The number of allowed requests in the current period\n          schema:\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of remaining requests in the current period\n          schema:\n            type: integer\n        X-RateLimit-Reset:\n          description: The number of seconds left in the current period\n          schema:\n            type: integer\n      content:\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/ErrorDocument\"\n    429WithDocument:\n      description: The client has exceeded the number of daily calls as per their rate\n        limit. For now, this only applies to prototype applications and\n        untrusted clients. Trusted clients will never be rate-limited, nor will\n        any production apps.\n      headers:\n        X-RateLimit-Limit:\n          description: The number of allowed requests in the current period\n          schema:\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of remaining requests in the current period\n          schema:\n            type: integer\n        X-RateLimit-Reset:\n          description: The number of seconds left in the current period\n          schema:\n            type: integer\n      content:\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/ErrorDocument\"\n    500WithDocument:\n      description: A server error\n      headers:\n        X-RateLimit-Limit:\n          description: The number of allowed requests in the current period\n          schema:\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of remaining requests in the current period\n          schema:\n            type: integer\n        X-RateLimit-Reset:\n          description: The number of seconds left in the current period\n          schema:\n            type: integer\n      content:\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/ErrorDocument\"\n    503WithDocument:\n      description: The system is undergoing maintenance and we are unable to fulfill this\n        request. Look for a `Retry-After` header to see the predicted time the\n        system will be back up.\n      headers:\n        Retry-After:\n          description: The predicted time the system will be back up\n          schema:\n            type: string\n            format: date-time\n      content:\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/ErrorDocument\"\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://authorization.api.npr.org/v2/authorize\n          tokenUrl: https://authorization.api.npr.org/v2/token\n          scopes:\n            identity.readonly: See your personal information, such as your first name, last name,\n              and favorite station.\n            identity.write: Update your personal information, such as your favorite station(s)\n              or program(s) you follow, on your behalf.\n            listening.readonly: See your NPR One listening history and get audio recommendations.\n            listening.write: Record that you have heard, marked as interesting, and/or skipped\n              NPR One stories in order to personalize future audio\n              recommendations.\n            localactivation: Connect you with your local NPR member station for communication\n              purposes.\n  schemas:\n    AbstractCDocLink:\n      allOf:\n        - $ref: \"#/components/schemas/AbstractLink\"\n        - properties:\n            content-type:\n              description: The MIME type of the response of this link\n              type: string\n          required:\n            - content-type\n    AbstractLink:\n      properties:\n        href:\n          description: The link to be followed\n          format: uri\n          type: string\n      required:\n        - href\n    AdTrackingData:\n      description: All the information needed for the Sponsorship Service to send back\n        tracking information to our external sponsorship provider\n      properties:\n        adId:\n          description: The DAAST Ad node `id` attribute value, (e.g. AdswizzAd12345)\n          type: string\n        event:\n          default: start\n          description: The user-interaction event to submit tracking for\n          enum:\n            - start\n            - firstQuartile\n            - midpoint\n            - thirdQuartile\n            - complete\n          type: string\n      required:\n        - adId\n        - event\n    AdTrackingDocument:\n      allOf:\n        - $ref: \"#/components/schemas/CollectionDocument\"\n        - properties:\n            attributes:\n              $ref: \"#/components/schemas/AdTrackingData\"\n            items:\n              description: Not used\n              items:\n                type: object\n              type: array\n      description: All the information needed for the Sponsorship Service to send back\n        tracking information to our external sponsorship provider\n    AdXml:\n      properties:\n        InLine:\n          $ref: \"#/components/schemas/InLineXml\"\n        id:\n          type: string\n          xml:\n            attribute: true\n      type: object\n      xml:\n        name: Ad\n        namespace: http://www.w3.org/2001/XMLSchema-instance\n    Affiliation:\n      description: A program (aggregation) that a given user has shown an affiliation with\n      properties:\n        daysSinceLastListen:\n          description: The number of days since a user last listened to a story from this\n            aggregation. Absent if user never listened to the aggregation.\n          format: int32\n          type: integer\n        following:\n          default: false\n          description: Whether or not the user is following the aggregation. When changing\n            affiliation status, the client is expected to toggle this value and\n            then send the entire object back.\n          type: boolean\n        href:\n          description: A link to more details about the program from the NPR Story API\n          type: string\n        id:\n          description: A unique identifier for the aggregation (program)\n          type: string\n        notif_following:\n          description: The topic in Firebase Cloud Messaging to which the device should\n            subscribe if it supports notifications and the user wants\n            notifications about the podcasts they follow.\n          items:\n            type: string\n          type: array\n        notif_rated:\n          description: The topic in Firebase Cloud Messaging to which the device should\n            subscribe if it supports notifications and the user wants\n            notifications about the podcasts they have highly rated.\n          items:\n            type: string\n          type: array\n        rating:\n          description: The user's average rating for this affiliation on a scale of 0-1.\n            Absent if user never listened to the aggregation.\n          format: float\n          type: number\n        title:\n          description: The title for the aggregation (program)\n          type: string\n      required:\n        - id\n        - href\n        - following\n    CollectionDocument:\n      description: Base Collection.Doc+JSON output\n      properties:\n        attributes:\n          type: object\n        errors:\n          description: A list of encountered errors, ignored on POST, PUT\n          items:\n            type: object\n          type: array\n        href:\n          description: A URL representation of the resource; should generally be ignored by\n            clients unless noted otherwise\n          type: string\n        items:\n          items:\n            type: object\n          type: array\n        links:\n          type: object\n        version:\n          default: \"1.0\"\n          description: The version of the Collection.Doc+JSON spec being used\n          type: string\n      required:\n        - version\n        - href\n        - attributes\n        - items\n        - links\n        - errors\n    CompanionXml:\n      properties:\n        CompanionClickThrough:\n          type: string\n        StaticResource:\n          $ref: \"#/components/schemas/StaticResourceXml\"\n        TrackingEvents:\n          items:\n            $ref: \"#/components/schemas/TrackingXml\"\n          type: array\n          xml:\n            wrapped: true\n        height:\n          format: int32\n          type: integer\n          xml:\n            attribute: true\n        id:\n          format: int32\n          type: integer\n          xml:\n            attribute: true\n        width:\n          format: int32\n          type: integer\n          xml:\n            attribute: true\n      type: object\n      xml:\n        name: Companion\n    CreativeXml:\n      properties:\n        CompanionAds:\n          items:\n            $ref: \"#/components/schemas/CompanionXml\"\n          type: array\n          xml:\n            wrapped: true\n        Linear:\n          $ref: \"#/components/schemas/LinearXml\"\n        id:\n          format: int32\n          type: integer\n          xml:\n            attribute: true\n        sequence:\n          default: 1\n          format: int32\n          type: integer\n          xml:\n            attribute: true\n      required:\n        - sequence\n      type: object\n      xml:\n        name: Creative\n    DAASTXml:\n      description: Please visit \u003ca href='http://www.iab.net/DAAST'\n        target='_blank'\u003ehttp://www.iab.net/DAAST\u003c/a\u003e for more information on the\n        DAAST XML specification.\n      properties:\n        Ad:\n          $ref: \"#/components/schemas/AdXml\"\n        version:\n          default: \"1.0\"\n          type: string\n          xml:\n            attribute: true\n      required:\n        - version\n      type: object\n      xml:\n        name: DAAST\n    Error:\n      description: A serialized version of any error encountered when processing this\n        request\n      properties:\n        code:\n          description: The error code\n          format: int32\n          type: integer\n        debug:\n          description: Additional debug information if debug mode is turned on\n          type: string\n        text:\n          description: The error description\n          type: string\n      required:\n        - code\n    ErrorDocument:\n      allOf:\n        - $ref: \"#/components/schemas/CollectionDocument\"\n        - properties:\n            attributes:\n              description: Ignore; will be empty for errors\n              type: object\n            errors:\n              description: A list of encountered errors, ignored on POST, PUT\n              items:\n                $ref: \"#/components/schemas/Error\"\n              type: array\n            items:\n              description: Ignore; will be empty for errors\n              items:\n                type: object\n              type: array\n            links:\n              description: Ignore; will be empty for errors\n              type: object\n      description: A Collection.doc+JSON representation of an error result from an API call\n    ErrorXmlDocument:\n      description: One or more errors represented in a DAAST XML document\n      properties:\n        error:\n          items:\n            description: An individual error, presented in XML format\n            type: string\n            xml:\n              name: error\n          type: array\n          xml:\n            wrapped: false\n        version:\n          default: \"1.0\"\n          type: string\n          xml:\n            attribute: true\n      required:\n        - version\n        - error\n      type: object\n      xml:\n        name: DAAST\n    ImpressionXml:\n      properties:\n        id:\n          format: int32\n          type: integer\n          xml:\n            attribute: true\n      required:\n        - id\n      type: string\n      xml:\n        name: Impression\n    InLineXml:\n      properties:\n        AdSystem:\n          type: string\n        AdTitle:\n          type: string\n        Category:\n          type: string\n        Creatives:\n          items:\n            $ref: \"#/components/schemas/CreativeXml\"\n          type: array\n          xml:\n            wrapped: true\n        Description:\n          type: string\n        Extensions:\n          items:\n            type: string\n            xml:\n              name: Extension\n          type: array\n          xml:\n            wrapped: true\n        Impression:\n          items:\n            $ref: \"#/components/schemas/ImpressionXml\"\n          type: array\n          xml:\n            wrapped: false\n      type: object\n    LinearXml:\n      properties:\n        Duration:\n          type: string\n        MediaFiles:\n          items:\n            $ref: \"#/components/schemas/MediaFileXml\"\n          type: array\n          xml:\n            wrapped: true\n        TrackingEvents:\n          items:\n            $ref: \"#/components/schemas/TrackingXml\"\n          type: array\n          xml:\n            wrapped: true\n      type: object\n      xml:\n        name: Linear\n    MediaFileXml:\n      properties:\n        bitrate:\n          default: 320000\n          format: int32\n          type: integer\n          xml:\n            attribute: true\n        delivery:\n          default: progressive\n          type: string\n          xml:\n            attribute: true\n        type:\n          type: string\n          xml:\n            attribute: true\n      type: string\n      xml:\n        name: MediaFile\n    StaticResourceXml:\n      properties:\n        creativeType:\n          default: image/jpeg\n          type: string\n          xml:\n            attribute: true\n      type: string\n      xml:\n        name: StaticResource\n    TrackingXml:\n      properties:\n        event:\n          default: start\n          enum:\n            - start\n            - firstQuartile\n            - midpoint\n            - thirdQuartile\n            - complete\n            - creativeView\n          type: string\n          xml:\n            attribute: true\n      type: string\n      xml:\n        name: Tracking\n    UserAdData:\n      description: All information relevant to a user who has requested sponsorship or\n        submitted tracking information\n      properties:\n        ipAddress:\n          description: The TCP/IP address of the client making the request. The server will\n            attempt to grab this from the headers, so it probably does not need\n            to be passed in the body unless you get back an error message\n            stating that we were unable to determine an IP address from the\n            request.\n          type: string\n        userAgent:\n          description: An identifying string for the browser making the request. The server\n            will attempt to grab this from the headers, so it probably does not\n            need to be passed in the body unless you get back an error message\n            stating that we were unable to determine a User-Agent from the\n            request.\n          type: string\n    UserAdDocument:\n      allOf:\n        - $ref: \"#/components/schemas/CollectionDocument\"\n        - properties:\n            attributes:\n              $ref: \"#/components/schemas/UserAdData\"\n            items:\n              description: All the information needed for the Sponsorship Service to send\n                back tracking information to our external sponsorship provider\n              items:\n                $ref: \"#/components/schemas/AdTrackingDocument\"\n              type: array\n      description: All information relevant to a user who has requested sponsorship or\n        submitted tracking information\n"
		}
	},
	"Error": "buildIR: make ir: path \"/v2/ads\": post: requestBody: contents: application/json: generate schema: allOf: merge properties: try to merge conflicting property schemas: merge item schema: schema type mismatch:  and object",
	"NotImplemented": [
		"unsupported content types"
	]
}