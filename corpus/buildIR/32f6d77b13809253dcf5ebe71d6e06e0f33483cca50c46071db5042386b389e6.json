{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mosip/documentation"
		},
		"file": {
			"name": "kernel-authentication-manager-service-openapi.json",
			"size": 0,
			"path": "api/kernel-authentication-manager-service-openapi.json",
			"byteSize": 62035,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Auth Manager Service\",\n    \"description\": \"Rest Endpoints for operations related to auth\",\n    \"license\": {\n      \"name\": \"Mosip\",\n      \"url\": \"https://docs.mosip.io/platform/license\"\n    },\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://dev2.mosip.net/v1/authmanager\",\n      \"description\": \"Auth Manager Service\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"authmanager\",\n      \"description\": \"Operation related to Authentication and Authorization\"\n    }\n  ],\n  \"paths\": {\n    \"/validate/{appid}/{userid}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"This API will validate username\",\n        \"description\": \"This API will validate username based on userid\",\n        \"operationId\": \"validateUserName\",\n        \"parameters\": [\n          {\n            \"name\": \"userid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperValidationResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/usersaltdetails/{appid}\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to get list of users for a module with salt\",\n        \"description\": \"API to get list of users for a module with salt\",\n        \"operationId\": \"getUserDetailsWithSalt\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperUserDetailsRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperMosipUserSaltListDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/username/{appid}/{mobilenumber}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"This API will get username\",\n        \"description\": \"This API will get username based on mobileno\",\n        \"operationId\": \"getUsernameBasedOnMobileNumber\",\n        \"parameters\": [\n          {\n            \"name\": \"mobilenumber\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperUserNameDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/userdetails/{appid}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"This API will fetch all users based on appId and roles\",\n        \"description\": \"This API will fetch all users based on appId and roles for role bases search only pagination will work,Without role can be searched by all,email,firstName,lastName and userName\",\n        \"operationId\": \"getUsersDetails\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"roleName\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageStart\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"pageFetch\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"email\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"firstName\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"lastName\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userName\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperMosipUserListDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to get list of users for a module\",\n        \"description\": \"API to get list of users for a module\",\n        \"operationId\": \"getListOfUsersDetails\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperUserDetailsRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperMosipUserListDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/userdetail/{appid}/{mobilenumber}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"This API will get userdetails\",\n        \"description\": \"This API will get userdetails based on mobileno\",\n        \"operationId\": \"getUserDetailBasedOnMobileNumber\",\n        \"parameters\": [\n          {\n            \"name\": \"mobilenumber\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperMosipUserDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/userdetail/regid/{appid}\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"Gets the user detail based on user id\",\n        \"description\": \"Gets the user detail based on user id\",\n        \"operationId\": \"getUserDetailBasedOnUserId\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperUserDetailsRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperUserDetailsResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/user/addpassword\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"This API will add password to the user\",\n        \"description\": \"This API will add password to the user\",\n        \"operationId\": \"addPassword\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperUserPasswordRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperUserPasswordResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/unblock/{appid}/{userid}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to get username\",\n        \"description\": \"API to get username from userid\",\n        \"operationId\": \"getUserName\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthZResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/roles/{appid}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to get all roles\",\n        \"description\": \"API to get all roles\",\n        \"operationId\": \"getAllRoles\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperRolesListDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/role/{appId}/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"This API will get user role\",\n        \"description\": \"This API will get user role useing appid and userid\",\n        \"operationId\": \"getUserRole\",\n        \"parameters\": [\n          {\n            \"name\": \"appId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperUserRoleDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/rid/{appid}/{userid}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to get rid\",\n        \"description\": \"API to get rid from userid\",\n        \"operationId\": \"getRId\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperRIdDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/resetpassword/{appid}\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"This API will reset the password of the particular user\",\n        \"description\": \"This API will reset the password of the particular user\",\n        \"operationId\": \"resetPassword\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPasswordDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthZResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/logout/user\": {\n      \"delete\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"Logout a user\",\n        \"description\": \"ends users session\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"cookie\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/login/{redirectURI}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"Login a user\",\n        \"description\": \"internal api for auth code flow\",\n        \"operationId\": \"login\",\n        \"parameters\": [\n          {\n            \"name\": \"state\",\n            \"in\": \"cookie\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"redirectURI\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/login-redirect/{redirectURI}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"Login a user\",\n        \"description\": \"internal api for auth code flow\",\n        \"operationId\": \"loginRedirect\",\n        \"parameters\": [\n          {\n            \"name\": \"redirectURI\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"state\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"session_state\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"code\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/individualId/{appid}/{userid}\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"This API will fetch IndividualId based on appId and userId\",\n        \"description\": \"This API will fetch IndividualId based on appId and userId\",\n        \"operationId\": \"getIndividualId\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperIndividualIdDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/changepassword/{appid}\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"This API will change the password of the particular user\",\n        \"description\": \"This API will change the password of the particular user\",\n        \"operationId\": \"changePassword\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPasswordDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthZResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/authorize/validateToken\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to validate token\",\n        \"description\": \"API to validate token\",\n        \"operationId\": \"validateToken\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperMosipUserDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/authorize/refreshToken/{appid}\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to retry token when access token expires\",\n        \"description\": \"API to retry token when access token expires\",\n        \"operationId\": \"refreshToken\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthNResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/authorize/invalidateToken\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to invalidate token when both refresh and auth token expires\",\n        \"description\": \"API to invalidate token when both refresh and auth token expires\",\n        \"operationId\": \"invalidateToken\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthNResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/authorize/internal/refreshToken/{appid}\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"Internal API used by syncdata delegate API to refreah token\",\n        \"description\": \"Internal API used by syncdata delegate API to refresh token\",\n        \"operationId\": \"refreshAuthToken\",\n        \"parameters\": [\n          {\n            \"name\": \"appid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RefreshTokenRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthNResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/authorize/admin/validateToken\": {\n      \"get\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to validate token\",\n        \"description\": \"API to validate token\",\n        \"operationId\": \"validateAdminToken\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperMosipUserDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/authenticate/useridPwd\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"Authenticate using username and password\",\n        \"description\": \"Authenticate using username and password\",\n        \"operationId\": \"authenticateUseridPwd\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperLoginUser\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthNResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/authenticate/useridOTP\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to validate OTP with user Id\",\n        \"description\": \"API to validate OTP with user Id\",\n        \"operationId\": \"userIdOTP\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperUserOtp\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthNResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/authenticate/sendotp\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"Authenticate using OTP\",\n        \"description\": \"Authenticate using OTP\",\n        \"operationId\": \"sendOTP\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperOtpUser\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthNResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/authenticate/internal/userotp\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"Internal API used by syncdata delegate API to authenticate using otp\",\n        \"description\": \"Internal API used by syncdata delegate API to authenticate using otp\",\n        \"operationId\": \"getAllAuthTokensForOTP\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperUserOtp\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthNResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/authenticate/internal/useridPwd\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"Internal API used by syncdata delegate API to authenticate\",\n        \"description\": \"Internal API used by syncdata delegate API to authenticate\",\n        \"operationId\": \"getAllAuthTokens\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperLoginUserWithClientId\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthNResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/authenticate/clientidsecretkey\": {\n      \"post\": {\n        \"tags\": [\n          \"authmanager\"\n        ],\n        \"summary\": \"API to authenticate using clientId and secretKey\",\n        \"description\": \"API to authenticate using clientId and secretKey\",\n        \"operationId\": \"clientIdSecretKey\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperClientSecret\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperAuthNResponse\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ResponseWrapperValidationResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/ValidationResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ServiceError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"errorCode\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ValidationResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperUserDetailsRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/UserDetailsRequestDto\"\n          }\n        }\n      },\n      \"UserDetailsRequestDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userDetails\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"MosipUserSalt\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"salt\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"MosipUserSaltListDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"mosipUserSaltList\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MosipUserSalt\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperMosipUserSaltListDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/MosipUserSaltListDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperUserNameDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/UserNameDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"UserNameDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"MosipUserDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"mobile\": {\n            \"type\": \"string\"\n          },\n          \"mail\": {\n            \"type\": \"string\"\n          },\n          \"langCode\": {\n            \"type\": \"string\"\n          },\n          \"userPassword\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"type\": \"string\"\n          },\n          \"rid\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"MosipUserListDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"mosipUserDtoList\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MosipUserDto\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperMosipUserListDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/MosipUserListDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperMosipUserDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/MosipUserDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperUserDetailsResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/UserDetailsResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"UserDetailsDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"mobile\": {\n            \"type\": \"string\"\n          },\n          \"mail\": {\n            \"type\": \"string\"\n          },\n          \"dateOfBirth\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          },\n          \"gender\": {\n            \"type\": \"string\"\n          },\n          \"langCode\": {\n            \"type\": \"string\"\n          },\n          \"userPassword\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"byte\"\n            }\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\"\n          },\n          \"activationStatus\": {\n            \"type\": \"boolean\"\n          },\n          \"blackListedStatus\": {\n            \"type\": \"boolean\"\n          },\n          \"createdTimeStamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"updatedTimeStamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"deletedTimeStamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"zone\": {\n            \"type\": \"string\"\n          },\n          \"registrationId\": {\n            \"type\": \"string\"\n          },\n          \"address\": {\n            \"type\": \"string\"\n          },\n          \"active\": {\n            \"type\": \"boolean\"\n          },\n          \"rid\": {\n            \"type\": \"string\"\n          },\n          \"deleted\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"UserDetailsResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userDetails\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/UserDetailsDto\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperUserPasswordRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/UserPasswordRequestDto\"\n          }\n        }\n      },\n      \"UserPasswordRequestDto\": {\n        \"required\": [\n          \"appId\",\n          \"password\",\n          \"rid\",\n          \"userName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"appId\": {\n            \"type\": \"string\"\n          },\n          \"userName\": {\n            \"type\": \"string\"\n          },\n          \"rid\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperUserPasswordResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/UserPasswordResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"UserPasswordResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"AuthZResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperAuthZResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/AuthZResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperRolesListDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/RolesListDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"Role\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"roleId\": {\n            \"type\": \"string\"\n          },\n          \"roleName\": {\n            \"type\": \"string\"\n          },\n          \"roleDescription\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RolesListDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Role\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperUserRoleDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/UserRoleDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"UserRoleDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RIdDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"rid\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperRIdDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/RIdDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"PasswordDto\": {\n        \"required\": [\n          \"newPassword\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"oldPassword\": {\n            \"pattern\": \"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,})\",\n            \"type\": \"string\"\n          },\n          \"newPassword\": {\n            \"pattern\": \"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,})\",\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"hashAlgo\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperPasswordDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/PasswordDto\"\n          }\n        }\n      },\n      \"AuthResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperAuthResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/AuthResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"IndividualIdDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"individualId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperIndividualIdDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/IndividualIdDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"RefreshTokenRequest\": {\n        \"required\": [\n          \"clientID\",\n          \"clientSecret\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"clientID\": {\n            \"type\": \"string\"\n          },\n          \"clientSecret\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"AuthNResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperAuthNResponse\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/AuthNResponse\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"AuthNResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"refreshToken\": {\n            \"type\": \"string\"\n          },\n          \"expiryTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"refreshExpiryTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"ResponseWrapperAuthNResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/AuthNResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"LoginUser\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userName\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"appId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperLoginUser\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/LoginUser\"\n          }\n        }\n      },\n      \"RequestWrapperUserOtp\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/UserOtp\"\n          }\n        }\n      },\n      \"UserOtp\": {\n        \"required\": [\n          \"appId\",\n          \"otp\",\n          \"userId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"otp\": {\n            \"type\": \"string\"\n          },\n          \"appId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"OtpUser\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"otpChannel\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"appId\": {\n            \"type\": \"string\"\n          },\n          \"useridtype\": {\n            \"type\": \"string\"\n          },\n          \"templateVariables\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            }\n          },\n          \"context\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperOtpUser\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/OtpUser\"\n          }\n        }\n      },\n      \"LoginUserWithClientId\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userName\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"appId\": {\n            \"type\": \"string\"\n          },\n          \"clientId\": {\n            \"type\": \"string\"\n          },\n          \"clientSecret\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperLoginUserWithClientId\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/LoginUserWithClientId\"\n          }\n        }\n      },\n      \"ClientSecret\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"clientId\": {\n            \"type\": \"string\"\n          },\n          \"secretKey\": {\n            \"type\": \"string\"\n          },\n          \"appId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperClientSecret\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/ClientSecret\"\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "buildIR: make ir: path \"/changepassword/{appid}\": post: requestBody: contents: application/json: schema: field request: field oldPassword: string validator: pattern: error parsing regexp: invalid or unsupported Perl syntax: `(?=`",
	"NotImplemented": [
		"unsupported content types"
	]
}