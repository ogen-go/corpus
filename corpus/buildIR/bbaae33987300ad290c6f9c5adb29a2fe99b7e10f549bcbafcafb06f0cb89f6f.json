{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cortezaproject/corteza"
		},
		"file": {
			"name": "compose.yaml",
			"size": 0,
			"path": "server/docs/compose.yaml",
			"byteSize": 65910,
			"content": "openapi: 3.0.0\ninfo:\n  title: Corteza compose API\n  description: Corteza compose REST API definition\n  version: '2022.9'\n  contact:\n    email: info@cortezaproject.org\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\npaths:\n  /compose/namespace/:\n    get:\n      tags:\n        - Namespaces\n      summary: List namespaces\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: query\n          description: Search query\n          required: false\n          schema: \u0026ref_0\n            type: string\n        - in: query\n          name: slug\n          description: Search by namespace slug\n          required: false\n          schema: *ref_0\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: \u0026ref_10\n            type: string\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: \u0026ref_17\n            type: boolean\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_0\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_0\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_0\n    post:\n      tags:\n        - Namespaces\n      summary: Create namespace\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_1\n                name:\n                  type: string\n                  description: Name\n                labels:\n                  type: string\n                  description: Labels\n                slug:\n                  type: string\n                  description: Slug (url path part)\n                enabled:\n                  type: boolean\n                  description: Enabled\n                meta:\n                  type: string\n                  format: json\n                  description: Meta data\n              required:\n                - name\n                - meta\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_1\n  /compose/namespace/{namespaceID}:\n    get:\n      tags:\n        - Namespaces\n      summary: Read namespace\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: ID\n          required: true\n          schema: \u0026ref_2\n            type: string\n    post:\n      tags:\n        - Namespaces\n      summary: Update namespace\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_3\n                name:\n                  type: string\n                  description: Name\n                slug:\n                  type: string\n                  description: Slug (url path part)\n                enabled:\n                  type: boolean\n                  description: Enabled\n                meta:\n                  type: string\n                  format: json\n                  description: Meta data\n                labels:\n                  type: string\n                  description: Labels\n                updatedAt:\n                  type: string\n                  format: date-time\n                  description: Last update (or creation) date\n              required:\n                - name\n                - meta\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_3\n    delete:\n      tags:\n        - Namespaces\n      summary: Delete namespace\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/upload:\n    post:\n      tags:\n        - Namespaces\n      summary: Upload namespace assets\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_4\n                upload:\n                  type: string\n                  format: binary\n                  description: File to upload\n              required:\n                - upload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_4\n  /compose/namespace/{namespaceID}/clone:\n    post:\n      tags:\n        - Namespaces\n      summary: Clone compose namespace\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_5\n                name:\n                  type: string\n                  description: Duplicate name\n                slug:\n                  type: string\n                  description: Duplicate slug\n              required:\n                - name\n                - slug\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_5\n  /compose/namespace/{namespaceID}/export/{filename}.zip:\n    get:\n      tags:\n        - Namespaces\n      summary: Export compose namespace\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: filename\n          description: Output file name\n          required: true\n          schema: *ref_0\n        - in: path\n          name: ext\n          description: Output file ext\n          required: true\n          schema: *ref_0\n  /compose/namespace/import:\n    post:\n      tags:\n        - Namespaces\n      summary: Initiate namespace import session\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_6\n                upload:\n                  type: string\n                  format: binary\n                  description: File import\n              required:\n                - upload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_6\n  /compose/namespace/import/{sessionID}:\n    post:\n      tags:\n        - Namespaces\n      summary: Run namespace import\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: sessionID\n          description: Import session\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_7\n                name:\n                  type: string\n                  description: Imported namespace name\n                slug:\n                  type: string\n                  description: Imported namespace slug\n              required:\n                - name\n                - slug\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_7\n  /compose/namespace/{namespaceID}/trigger:\n    post:\n      tags:\n        - Namespaces\n      summary: Fire compose:namespace trigger\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_8\n                script:\n                  type: string\n                  description: Script to execute\n                args:\n                  type: string\n                  description: Arguments to pass to the script\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_8\n  /compose/namespace/{namespaceID}/translation:\n    get:\n      tags:\n        - Namespaces\n      summary: List translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: ID\n          required: true\n          schema: *ref_2\n    patch:\n      tags:\n        - Namespaces\n      summary: Update translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_9\n                translations:\n                  type: string\n                  description: Resource translation to upsert\n              required:\n                - translations\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_9\n  /compose/namespace/{namespaceID}/page/:\n    get:\n      tags:\n        - Pages\n      summary: List available pages\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: selfID\n          description: Parent page ID\n          required: false\n          schema: *ref_2\n        - in: query\n          name: moduleID\n          description: Module ID\n          required: false\n          schema: *ref_2\n        - in: query\n          name: query\n          description: Search query\n          required: false\n          schema: *ref_0\n        - in: query\n          name: handle\n          description: Search by handle\n          required: false\n          schema: *ref_0\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_0\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_10\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_0\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_0\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n    post:\n      tags:\n        - Pages\n      summary: Create page\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_11\n                selfID:\n                  type: string\n                  description: Parent Page ID\n                moduleID:\n                  type: string\n                  description: Module ID\n                title:\n                  type: string\n                  description: Title\n                handle:\n                  type: string\n                  description: Handle\n                description:\n                  type: string\n                  description: Description\n                weight:\n                  type: integer\n                  description: Page tree weight\n                labels:\n                  type: string\n                  description: Labels\n                visible:\n                  type: boolean\n                  description: Visible in navigation\n                blocks:\n                  type: string\n                  format: json\n                  description: Blocks JSON\n                config:\n                  type: string\n                  format: json\n                  description: Config JSON\n              required:\n                - title\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_11\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/page/{pageID}:\n    get:\n      tags:\n        - Pages\n      summary: Get page details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: pageID\n          description: Page ID\n          required: true\n          schema: *ref_2\n    post:\n      tags:\n        - Pages\n      summary: Update page\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: pageID\n          description: Page ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_12\n                selfID:\n                  type: string\n                  description: Parent Page ID\n                moduleID:\n                  type: string\n                  description: Module ID (optional)\n                title:\n                  type: string\n                  description: Title\n                handle:\n                  type: string\n                  description: Handle\n                description:\n                  type: string\n                  description: Description\n                weight:\n                  type: integer\n                  description: Page tree weight\n                labels:\n                  type: string\n                  description: Labels\n                visible:\n                  type: boolean\n                  description: Visible in navigation\n                blocks:\n                  type: string\n                  format: json\n                  description: Blocks JSON\n                config:\n                  type: string\n                  format: json\n                  description: Config JSON\n              required:\n                - title\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_12\n    delete:\n      tags:\n        - Pages\n      summary: Delete page\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: pageID\n          description: Page ID\n          required: true\n          schema: *ref_2\n        - in: query\n          name: strategy\n          description: Page delete strategy (abort, force, rebase, cascade)\n          required: false\n          schema: *ref_0\n  /compose/namespace/{namespaceID}/page/tree:\n    get:\n      tags:\n        - Pages\n      summary: Get page all (non-record) pages, hierarchically\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/page/{selfID}/reorder:\n    post:\n      tags:\n        - Pages\n      summary: Reorder pages\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: selfID\n          description: Parent page ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_13\n                pageIDs:\n                  type: array\n                  items: *ref_0\n                  description: Page ID order\n              required:\n                - pageIDs\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_13\n  /compose/namespace/{namespaceID}/page/{pageID}/attachment:\n    post:\n      tags:\n        - Pages\n      summary: Uploads attachment to page\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: pageID\n          description: Page ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_14\n                upload:\n                  type: string\n                  format: binary\n                  description: File to upload\n              required:\n                - upload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_14\n  /compose/namespace/{namespaceID}/page/{pageID}/trigger:\n    post:\n      tags:\n        - Pages\n      summary: Fire compose:page trigger\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: pageID\n          description: Page ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_15\n                script:\n                  type: string\n                  description: Script to execute\n                args:\n                  type: string\n                  description: Arguments to pass to the script\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_15\n  /compose/namespace/{namespaceID}/page/{pageID}/translation:\n    get:\n      tags:\n        - Pages\n      summary: List page translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: pageID\n          description: ID\n          required: true\n          schema: *ref_2\n    patch:\n      tags:\n        - Pages\n      summary: Update page translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: pageID\n          description: ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_16\n                translations:\n                  type: string\n                  description: Resource translation to upsert\n              required:\n                - translations\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_16\n  /compose/namespace/{namespaceID}/module/:\n    get:\n      tags:\n        - Modules\n      summary: List modules\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: query\n          description: Search query\n          required: false\n          schema: *ref_0\n        - in: query\n          name: name\n          description: Search by name\n          required: false\n          schema: *ref_0\n        - in: query\n          name: handle\n          description: Search by handle\n          required: false\n          schema: *ref_0\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_10\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: *ref_17\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_0\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_0\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_0\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n    post:\n      tags:\n        - Modules\n      summary: Create module\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_18\n                name:\n                  type: string\n                  description: Name\n                handle:\n                  type: string\n                  description: Handle\n                config:\n                  type: string\n                  description: Configuration\n                meta:\n                  type: string\n                  format: json\n                  description: Meta data\n                fields:\n                  type: array\n                  items: \u0026ref_19\n                    type: object\n                    properties:\n                      fieldID:\n                        type: string\n                        format: uuid\n                      name:\n                        type: string\n                      kind:\n                        type: string\n                      label:\n                        type: string\n                      defaultValue:\n                        type: array\n                        items:\n                          type: string\n                      maxLength:\n                        type: integer\n                      isRequired:\n                        type: boolean\n                      isPrivate:\n                        type: boolean\n                      isMulti:\n                        type: boolean\n                      isSystem:\n                        type: boolean\n                      options:\n                        type: object\n                  description: Fields\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - name\n                - meta\n                - fields\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_18\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/module/{moduleID}:\n    get:\n      tags:\n        - Modules\n      summary: Read module\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n    post:\n      tags:\n        - Modules\n      summary: Update module\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_20\n                name:\n                  type: string\n                  description: Name\n                handle:\n                  type: string\n                  description: Handle\n                config:\n                  type: string\n                  description: Configuration\n                meta:\n                  type: string\n                  format: json\n                  description: Meta data\n                fields:\n                  type: array\n                  items: *ref_19\n                  description: Fields\n                labels:\n                  type: string\n                  description: Labels\n                updatedAt:\n                  type: string\n                  format: date-time\n                  description: Last update (or creation) date\n              required:\n                - name\n                - meta\n                - fields\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_20\n    delete:\n      tags:\n        - Modules\n      summary: Delete module\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/module/{moduleID}/trigger:\n    post:\n      tags:\n        - Modules\n      summary: Fire compose:module trigger\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_21\n                script:\n                  type: string\n                  description: Script to execute\n                args:\n                  type: string\n                  description: Arguments to pass to the script\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_21\n  /compose/namespace/{namespaceID}/module/{moduleID}/translation:\n    get:\n      tags:\n        - Modules\n      summary: List moudle translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: ID\n          required: true\n          schema: *ref_2\n    patch:\n      tags:\n        - Modules\n      summary: Update module translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_22\n                translations:\n                  type: string\n                  description: Resource translation to upsert\n              required:\n                - translations\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_22\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/report:\n    get:\n      tags:\n        - Records\n      summary: Generates report from module records\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: metrics\n          description: 'Metrics (eg: ''SUM(money), MAX(calls)'')'\n          required: false\n          schema: *ref_0\n        - in: query\n          name: dimensions\n          description: 'Dimensions (eg: ''DATE(foo), status'')'\n          required: true\n          schema: *ref_0\n        - in: query\n          name: filter\n          description: 'Filter (eg: ''DATE(foo) \u003e 2010'')'\n          required: false\n          schema: *ref_0\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/:\n    get:\n      tags:\n        - Records\n      summary: List/read records from module section\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: query\n          description: Record filtering query\n          required: false\n          schema: *ref_0\n        - in: query\n          name: meta\n          description: Record meta data\n          required: false\n          schema: *ref_0\n        - in: query\n          name: deleted\n          description: Exclude (0, default), include (1) or return only (2) deleted records\n          required: false\n          schema: *ref_10\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_10\n        - in: query\n          name: incTotal\n          description: Include total records counter\n          required: false\n          schema: *ref_17\n        - in: query\n          name: incPageNavigation\n          description: Include page navigation\n          required: false\n          schema: *ref_17\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_0\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_0\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n    post:\n      tags:\n        - Records\n      summary: Create record in module section\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_23\n                values:\n                  type: array\n                  items: \u0026ref_28\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      value:\n                        type: string\n                  description: Record values\n                ownedBy:\n                  type: string\n                  description: Record Owner\n                records:\n                  type: array\n                  items: \u0026ref_29\n                    type: object\n                    properties:\n                      recordID:\n                        type: string\n                        format: uuid\n                      moduleID:\n                        type: string\n                        format: uuid\n                      namespaceID:\n                        type: string\n                        format: uuid\n                      values:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            name:\n                              type: string\n                            value:\n                              type: string\n                      createdAt:\n                        type: string\n                        format: date-time\n                      updatedAt:\n                        type: string\n                        format: date-time\n                      deletedAt:\n                        type: string\n                        format: date-time\n                      ownedBy:\n                        type: string\n                        format: uuid\n                      createdBy:\n                        type: string\n                        format: uuid\n                      updatedBy:\n                        type: string\n                        format: uuid\n                      deletedBy:\n                        type: string\n                        format: uuid\n                  description: Records\n                meta:\n                  type: string\n                  description: Record meta-data\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_23\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n    delete:\n      tags:\n        - Records\n      summary: Delete record row from module section\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_24\n                recordIDs:\n                  type: array\n                  items: *ref_0\n                  description: IDs of records to delete\n                truncate:\n                  type: boolean\n                  description: \u003e-\n                    Remove ALL records of a specified module (pending\n                    implementation)\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_24\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/import:\n    post:\n      tags:\n        - Records\n      summary: Initiate record import session\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_25\n                upload:\n                  type: string\n                  format: binary\n                  description: File import\n              required:\n                - upload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_25\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/import/{sessionID}:\n    patch:\n      tags:\n        - Records\n      summary: Run record import\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: sessionID\n          description: Import session\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_26\n                fields:\n                  type: string\n                  format: json\n                  description: Fields defined by import file\n                onError:\n                  type: string\n                  description: What happens if record fails to import\n              required:\n                - fields\n                - onError\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_26\n    get:\n      tags:\n        - Records\n      summary: Get import progress\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: sessionID\n          description: Import session\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/export{filename}.{ext}:\n    get:\n      tags:\n        - Records\n      summary: 'Exports records that match '\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: filename\n          description: Filename to use\n          required: true\n          schema: *ref_0\n        - in: path\n          name: ext\n          description: Export format\n          required: true\n          schema: *ref_0\n        - in: query\n          name: filter\n          description: Filtering condition\n          required: false\n          schema: *ref_0\n        - in: query\n          name: fields\n          description: Fields to export\n          required: true\n          schema:\n            type: array\n            items: *ref_0\n        - in: query\n          name: timezone\n          description: Convert times to this timezone\n          required: false\n          schema: *ref_0\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/exec/{procedure}:\n    post:\n      tags:\n        - Records\n      summary: Executes server-side procedure over one or more module records\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: procedure\n          description: Name of procedure to execute\n          required: true\n          schema: *ref_0\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_27\n                args:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      value:\n                        type: string\n                  description: Procedure arguments\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_27\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/{recordID}:\n    get:\n      tags:\n        - Records\n      summary: Read records by ID from module section\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: recordID\n          description: Record ID\n          required: true\n          schema: *ref_2\n    post:\n      tags:\n        - Records\n      summary: Update records in module section\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: recordID\n          description: Record ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_30\n                values:\n                  type: array\n                  items: *ref_28\n                  description: Record values\n                ownedBy:\n                  type: string\n                  description: Record Owner\n                meta:\n                  type: string\n                  description: Record meta-data\n                records:\n                  type: array\n                  items: *ref_29\n                  description: Records\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_30\n    delete:\n      tags:\n        - Records\n      summary: Delete record row from module section\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: recordID\n          description: Record ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/attachment:\n    post:\n      tags:\n        - Records\n      summary: Uploads attachment and validates it against record field requirements\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_31\n                recordID:\n                  type: string\n                  description: Record ID\n                fieldName:\n                  type: string\n                  description: Field name\n                upload:\n                  type: string\n                  format: binary\n                  description: File to upload\n              required:\n                - fieldName\n                - upload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_31\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/{recordID}/trigger:\n    post:\n      tags:\n        - Records\n      summary: Fire compose:record trigger\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: recordID\n          description: ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_32\n                script:\n                  type: string\n                  description: Script to execute\n                values:\n                  type: array\n                  items: *ref_28\n                  description: Record values\n              required:\n                - script\n                - values\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_32\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/trigger:\n    post:\n      tags:\n        - Records\n      summary: Fire compose:record trigger\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_33\n                script:\n                  type: string\n                  description: Script to execute\n                args:\n                  type: string\n                  description: Arguments to pass to the script\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_33\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/module/{moduleID}/record/{recordID}/revisions:\n    get:\n      tags:\n        - Records\n      summary: List record revisions\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: moduleID\n          description: Module ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: recordID\n          description: ID\n          required: true\n          schema: *ref_2\n  /compose/data-privacy/record:\n    get:\n      tags:\n        - Data Privacy\n      summary: List records for data privacy\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: sensitivityLevelID\n          description: Sensitivity Level ID\n          required: false\n          schema: *ref_2\n        - in: query\n          name: connectionID\n          description: Filter by connection ID\n          required: false\n          schema:\n            type: array\n            items: *ref_0\n  /compose/data-privacy/module:\n    get:\n      tags:\n        - Data Privacy\n      summary: List modules\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: connectionID\n          description: Filter by connection ID\n          required: false\n          schema:\n            type: array\n            items: *ref_0\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_10\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_0\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_0\n  /compose/namespace/{namespaceID}/chart/:\n    get:\n      tags:\n        - Charts\n      summary: List/read charts\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: query\n          description: Search query to match against charts\n          required: false\n          schema: *ref_0\n        - in: query\n          name: handle\n          description: Search charts by handle\n          required: false\n          schema: *ref_0\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_0\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_10\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: *ref_17\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_0\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_0\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n    post:\n      tags:\n        - Charts\n      summary: 'List/read charts '\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_34\n                config:\n                  type: string\n                  format: json\n                  description: Chart JSON\n                name:\n                  type: string\n                  description: Chart name\n                handle:\n                  type: string\n                  description: Chart handle\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - config\n                - name\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_34\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/chart/{chartID}:\n    get:\n      tags:\n        - Charts\n      summary: Read charts by ID\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: chartID\n          description: Chart ID\n          required: true\n          schema: *ref_2\n    post:\n      tags:\n        - Charts\n      summary: Add/update charts\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: chartID\n          description: Chart ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_35\n                config:\n                  type: string\n                  format: json\n                  description: Chart JSON\n                name:\n                  type: string\n                  description: Chart name\n                handle:\n                  type: string\n                  description: Chart handle\n                labels:\n                  type: string\n                  description: Labels\n                updatedAt:\n                  type: string\n                  format: date-time\n                  description: Last update (or creation) date\n              required:\n                - config\n                - name\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_35\n    delete:\n      tags:\n        - Charts\n      summary: Delete chart\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: chartID\n          description: Chart ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/chart/{chartID}/translation:\n    get:\n      tags:\n        - Charts\n      summary: List chart translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: chartID\n          description: ID\n          required: true\n          schema: *ref_2\n    patch:\n      tags:\n        - Charts\n      summary: Update chart translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: chartID\n          description: ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_36\n                translations:\n                  type: string\n                  description: Resource translation to upsert\n              required:\n                - translations\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_36\n  /compose/notification/email:\n    post:\n      tags:\n        - Notifications\n      summary: Send email from the Compose\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_37\n                to:\n                  type: array\n                  items: *ref_0\n                  description: Email addresses\n                cc:\n                  type: array\n                  items: *ref_0\n                  description: Email addresses\n                replyTo:\n                  type: string\n                  description: Email address in reply-to field\n                subject:\n                  type: string\n                  description: Email subject\n                content:\n                  type: string\n                  format: json\n                  description: Message content\n                remoteAttachments:\n                  type: array\n                  items: *ref_0\n                  description: Remote files to attach to the email\n              required:\n                - to\n                - content\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_37\n  /compose/namespace/{namespaceID}/attachment/{kind}/:\n    get:\n      tags:\n        - Attachments\n      summary: List, filter all page attachments\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_0\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageID\n          description: Filter attachments by page ID\n          required: false\n          schema: *ref_2\n        - in: query\n          name: moduleID\n          description: Filter attachments by module ID\n          required: false\n          schema: *ref_2\n        - in: query\n          name: recordID\n          description: Filter attachments by record ID\n          required: false\n          schema: *ref_2\n        - in: query\n          name: fieldName\n          description: Filter attachments by field name\n          required: false\n          schema: *ref_0\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_10\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_0\n        - in: path\n          name: kind\n          description: Attachment kind\n          required: true\n          schema: *ref_0\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/attachment/{kind}/{attachmentID}:\n    get:\n      tags:\n        - Attachments\n      summary: Attachment details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Attachment kind\n          required: true\n          schema: *ref_0\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_2\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_0\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_2\n    delete:\n      tags:\n        - Attachments\n      summary: Delete attachment\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Attachment kind\n          required: true\n          schema: *ref_0\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_2\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_0\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_2\n  /compose/namespace/{namespaceID}/attachment/{kind}/{attachmentID}/original/{name}:\n    get:\n      tags:\n        - Attachments\n      summary: Serves attached file\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Attachment kind\n          required: true\n          schema: *ref_0\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: name\n          description: File name\n          required: true\n          schema: *ref_0\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_0\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_2\n        - in: query\n          name: download\n          description: Force file download\n          required: false\n          schema: *ref_17\n  /compose/namespace/{namespaceID}/attachment/{kind}/{attachmentID}/preview.{ext}:\n    get:\n      tags:\n        - Attachments\n      summary: Serves preview of an attached file\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Attachment kind\n          required: true\n          schema: *ref_0\n        - in: path\n          name: namespaceID\n          description: Namespace ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_2\n        - in: path\n          name: ext\n          description: Preview extension/format\n          required: true\n          schema: *ref_0\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_0\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_2\n  /compose/permissions/:\n    get:\n      tags:\n        - Permissions\n      summary: Retrieve defined permissions\n      responses:\n        '200':\n          description: OK\n  /compose/permissions/effective:\n    get:\n      tags:\n        - Permissions\n      summary: Effective rules for current user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: resource\n          description: Show only rules for a specific resource\n          required: false\n          schema: *ref_0\n  /compose/permissions/trace:\n    get:\n      tags:\n        - Permissions\n      summary: Evaluate rules for given user/role combo\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: resource\n          description: Show only rules for a specific resource\n          required: false\n          schema:\n            type: array\n            items: *ref_0\n        - in: query\n          name: userID\n          required: false\n          schema: *ref_2\n        - in: query\n          name: roleID\n          required: false\n          schema:\n            type: array\n            items: *ref_2\n  /compose/permissions/{roleID}/rules:\n    get:\n      tags:\n        - Permissions\n      summary: Retrieve role permissions\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_2\n        - in: query\n          name: resource\n          description: Show only rules for a specific resource\n          required: false\n          schema:\n            type: array\n            items: *ref_0\n    delete:\n      tags:\n        - Permissions\n      summary: Remove all defined role permissions\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_2\n    patch:\n      tags:\n        - Permissions\n      summary: Update permission settings\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_38\n                rules:\n                  type: string\n                  description: List of permission rules to set\n              required:\n                - rules\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_38\n  /compose/automation/:\n    get:\n      tags:\n        - Compose automation scripts\n      summary: List all available automation scripts for compose resources\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: resourceTypePrefixes\n          description: Filter by resource prefix\n          required: false\n          schema:\n            type: array\n            items: *ref_0\n        - in: query\n          name: resourceTypes\n          description: Filter by resource type\n          required: false\n          schema:\n            type: array\n            items: *ref_0\n        - in: query\n          name: eventTypes\n          description: Filter by event type\n          required: false\n          schema:\n            type: array\n            items: *ref_0\n        - in: query\n          name: excludeInvalid\n          description: Exclude scripts that cannot be used (errors)\n          required: false\n          schema: *ref_17\n        - in: query\n          name: excludeClientScripts\n          description: Do not include client scripts\n          required: false\n          schema: *ref_17\n        - in: query\n          name: excludeServerScripts\n          description: Do not include server scripts\n          required: false\n          schema: *ref_17\n  /compose/automation/{bundle}-{type}.{ext}:\n    get:\n      tags:\n        - Compose automation scripts\n      summary: Serves client scripts bundle\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: bundle\n          description: Name of the bundle\n          required: true\n          schema: *ref_0\n        - in: path\n          name: type\n          description: Bundle type\n          required: true\n          schema: *ref_0\n        - in: path\n          name: ext\n          description: Bundle extension\n          required: true\n          schema: *ref_0\n  /compose/automation/trigger:\n    post:\n      tags:\n        - Compose automation scripts\n      summary: Triggers execution of a specific script on a system service level\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_39\n                script:\n                  type: string\n                  description: Script to execute\n                args:\n                  type: string\n                  description: Arguments to pass to the script\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_39\n",
			"canonicalURL": "/github.com/cortezaproject/corteza@ea4a6f5f8070f2a12b21271cc327a6ca9d77f093/-/blob/server/docs/compose.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cortezaproject/corteza/blob/ea4a6f5f8070f2a12b21271cc327a6ca9d77f093/server/docs/compose.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/compose/namespace/{namespaceID}/module/\": post: requestBody: contents: media: \"application/x-www-form-urlencoded\": form parameter \"fields\": nested objects not allowed"
}