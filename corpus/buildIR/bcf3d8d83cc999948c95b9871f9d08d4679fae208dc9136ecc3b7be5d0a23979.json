{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hyperledger/aries-agent-test-harness"
		},
		"file": {
			"name": "openapi-spec.yml",
			"size": 0,
			"path": "docs/assets/openapi-spec.yml",
			"byteSize": 114929,
			"content": "openapi: 3.0.0\nservers:\n  - description: Agent Backchannel\n    url: http://localhost:{port}\n    variables:\n      port:\n        description: \u003e\n          The port to use for the backchannel\n            * Acme:    9020\n            * Bob:      9030\n            * Faber:    9040\n            * Mallory:  9050\n        enum:\n          - \"9020\"\n          - \"9030\"\n          - \"9040\"\n          - \"9050\"\n        default: \"9020\"\ninfo:\n  description: |\n    This page documents the backchannel API the test harness uses to communicate with agents under tests.\n\n    For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page.\n  version: \"1.0.0\"\n  title: Aries Agent Test Harness Backchannel API\n  contact:\n    name: Province of British Columbia\n    url: https://github.com/hyperledger/aries-agent-test-harness\n  license:\n    name: Apache 2.0\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n  x-logo:\n    url: https://raw.githubusercontent.com/hyperledger/aries-agent-test-harness/master/docs/assets/aries-logo.png\n    altText: Hyperledger Aries logo\n\ntags:\n  - name: Status\n    description: Agent commands to get agent status\n  - name: Agent\n    description: Agent commands to manage an agent\n  - name: Connection\n    description: Agent commands related to `connection` topic\n  - name: DID\n    description: Agent commands related to `did` topic\n  - name: Schema\n    description: Agent commands related to `schema` topic\n  - name: Credential Definition\n    description: Agent commands related to `credential-definition` topic\n  - name: Issue Credential\n    description: Agent commands related to `issue-credential` topic\n  - name: Issue Credential V2\n    description: Agent commands related to `issue-credential-v2` topic\n  - name: Credential\n    description: Agent commands related to `credential` topic\n  - name: Present Proof\n    description: Agent commands related to `proof` topic\n  - name: Present Proof V2\n    description: Agent commands related to `proof-v2` topic\n  - name: Present Proof V3\n    description: Agent commands related to `proof-v3` topic\n  - name: Revocation\n    description: Agent commands related to `revocation` topic\n  - name: DID Exchange\n    description: Agent commands related to `did-exchange` topic\n  - name: Out of Band\n    description: Agent commands related to `out-of-band` topic\n  - name: Coordinate Mediation\n    description: Agent commands related to `mediation` topic\n    externalDocs:\n      url: https://github.com/hyperledger/aries-rfcs/blob/main/features/0211-route-coordination/README.md\n  - name: Out of Band V2\n    description: Agent commands related to `oob-v2` topic\npaths:\n  /agent/command/status:\n    get:\n      summary: Get agent/backchannel status\n      operationId: StatusGet\n      tags:\n        - Status\n      responses:\n        200:\n          description: Agent is active\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    type: string\n                    enum: [active]\n        418:\n          description: Agent is not active\n          content:\n            application/json:\n              schema:\n                required:\n                  - status\n                properties:\n                  status:\n                    type: string\n                    enum: [inactive]\n  /agent/command/version:\n    get:\n      summary: Get agent/backchannel version\n      operationId: VersionGet\n      tags:\n        - Status\n      responses:\n        200:\n          description: Agent version\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: 0.6.0\n\n  /agent/command/agent/start:\n    post:\n      summary: (re)start the agent\n      operationId: AgentStart\n      tags:\n        - Agent\n      requestBody:\n        required: true\n        description: \u003e\n          Start the agent with specified parameters. If values are emitted, agent default values should be used.\n\n          For the `inbound_transports` and `outbound_transports` properties the following applies:\n            - If the property is left out the agent should use default configuration. For most agent this means only using HTTP inbound/outbound transport\n            - If the property is an empty array no inbound or outbound transport should be used. This is useful for testing cases where the agent doesn't have an inbound endpoint. An error should be thrown in if the transport requirements can't be met.\n            - If the property contains transports, the specified transports should be used.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  required:\n                    - parameters\n                  properties:\n                    parameters:\n                      type: object\n                      properties:\n                        mime-type:\n                          type: string\n                          example: \"didcomm/v2\"\n                        inbound_transports:\n                          type: array\n                          items:\n                            type: string\n                            enum: [ws, http]\n                          example: [ws, http]\n                        outbound_transports:\n                          type: array\n                          items:\n                            type: string\n                            enum: [ws, http]\n                          example: [ws, http]\n      responses:\n        200:\n          description: OK\n        500:\n          description: Failed\n  /agent/command/connection:\n    get:\n      tags:\n        - Connection\n      summary: Get all connections\n      operationId: ConnectionGetAll\n      responses:\n        200:\n          description: Connections\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ConnectionResponse\"\n  /agent/command/connection/{connectionId}:\n    get:\n      tags:\n        - Connection\n      summary: Get connection by id\n      operationId: ConnectionGetById\n      parameters:\n        - in: path\n          name: connectionId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Connection\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionResponse\"\n        404:\n          description: Connection not found\n  /agent/command/connection/create-invitation:\n    post:\n      tags:\n        - Connection\n      summary: Create a new connection invitation\n      operationId: ConnectionCreateInvitation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  properties:\n                    mediator_connection_id:\n                      $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Invitation created\n          content:\n            application/json:\n              schema:\n                required:\n                  - connection_id\n                  - invitation\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n                  invitation:\n                    $ref: \"#/components/schemas/ConnectionInvitation\"\n  /agent/command/connection/receive-invitation:\n    post:\n      tags:\n        - Connection\n      summary: Receive an invitation\n      operationId: ConnectionReceiveInvitation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  allOf:\n                    - $ref: \"#/components/schemas/ConnectionInvitation\"\n                    - properties:\n                        mediator_connection_id:\n                          $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Invitation received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n                  state:\n                    $ref: \"#/components/schemas/ConnectionState\"\n  /agent/command/connection/accept-invitation:\n    post:\n      tags:\n        - Connection\n      summary: Accept an invitation\n      operationId: ConnectionAcceptInvitation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Invitation accepted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n                  state:\n                    # With allOf we can overwrite properties of the $ref\n                    allOf:\n                      - $ref: \"#/components/schemas/ConnectionState\"\n                      - example: request\n  /agent/command/connection/accept-request:\n    post:\n      tags:\n        - Connection\n      summary: Accept a connection request\n      operationId: ConnectionAcceptRequest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Request accepted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n                  state:\n                    # With allOf we can overwrite properties of the $ref\n                    allOf:\n                      - $ref: \"#/components/schemas/ConnectionState\"\n                      - example: response\n  /agent/command/connection/send-ping:\n    post:\n      tags:\n        - Connection\n      summary: Send trust ping\n      operationId: ConnectionSendPing\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - data\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ConnectionId\"\n                data:\n                  type: object\n                  required:\n                    - comment\n                  properties:\n                    comment:\n                      $ref: \"#/components/schemas/Comment\"\n\n      responses:\n        200:\n          description: Trust ping sent\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n                  state:\n                    # With allOf we can overwrite properties of the $ref\n                    allOf:\n                      - $ref: \"#/components/schemas/ConnectionState\"\n                      - example: response\n\n  /agent/command/did:\n    get:\n      tags:\n        - DID\n      summary: Get public DID\n      operationId: DIDGetPublic\n      responses:\n        200:\n          description: Public DID information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  did:\n                    $ref: \"#/components/schemas/Did\"\n                  verkey:\n                    $ref: \"#/components/schemas/Verkey\"\n\n  /agent/command/schema/{schemaId}:\n    get:\n      tags:\n        - Schema\n      summary: Get schema by id\n      operationId: SchemaGetById\n      parameters:\n        - in: path\n          name: schemaId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/SchemaId\"\n      responses:\n        200:\n          description: Schema\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Schema\"\n        404:\n          description: Schema not found\n  /agent/command/schema:\n    post:\n      tags:\n        - Schema\n      summary: Create a new schema\n      operationId: SchemaCreate\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  required:\n                    - schema_name\n                    - schema_version\n                    - attributes\n                  properties:\n                    schema_name:\n                      $ref: \"#/components/schemas/SchemaName\"\n                    schema_version:\n                      $ref: \"#/components/schemas/SchemaVersion\"\n                    attributes:\n                      $ref: \"#/components/schemas/SchemaAttributes\"\n\n      responses:\n        200:\n          description: Schema created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  schema_id:\n                    $ref: \"#/components/schemas/SchemaId\"\n                  schema:\n                    $ref: \"#/components/schemas/Schema\"\n\n  /agent/command/credential-definition/{credentialDefinitionId}:\n    get:\n      tags:\n        - Credential Definition\n      summary: Get credential definition by id\n      operationId: CredentialDefinitionGetById\n      parameters:\n        - in: path\n          name: credentialDefinitionId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CredentialDefinitionId\"\n      responses:\n        200:\n          description: Credential Definition\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CredentialDefinition\"\n        404:\n          description: Credential Definition not found\n  /agent/command/credential-definition:\n    post:\n      tags:\n        - Credential Definition\n      summary: Create a new credential definition\n      operationId: CredentialDefinitionCreate\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  required:\n                    - support_revocation\n                    - schema_id\n                    - tag\n                  properties:\n                    support_revocation:\n                      type: boolean\n                      example: false\n                    schema_id:\n                      $ref: \"#/components/schemas/SchemaId\"\n                    tag:\n                      type: string\n                      example: default\n      responses:\n        200:\n          description: Credential definition created\n          content:\n            application/json:\n              schema:\n                properties:\n                  credential_definition_id:\n                    $ref: \"#/components/schemas/CredentialDefinitionId\"\n\n  /agent/command/issue-credential/{credentialExchangeThreadId}:\n    get:\n      tags:\n        - Issue Credential\n      summary: Get credential exchange record by thread id\n      operationId: IssueCredentialGetByThreadId\n      parameters:\n        - in: path\n          name: credentialExchangeThreadId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Credential Exchange\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n        404:\n          description: Credential exchange record not found\n  /agent/command/issue-credential/send-proposal:\n    post:\n      tags:\n        - Issue Credential\n      summary: Send credential proposal\n      description: \u003e\n        Send a `propose-credential` message to connection with `connection_id` in body.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#propose-credential\n      operationId: IssueCredentialSendProposal\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  required:\n                    - connection_id\n                  properties:\n                    comment:\n                      $ref: \"#/components/schemas/Comment\"\n                    credential_proposal:\n                      $ref: \"#/components/schemas/CredentialPreview\"\n                    schema_issuer_did:\n                      $ref: \"#/components/schemas/Did\"\n                    schema_id:\n                      $ref: \"#/components/schemas/SchemaId\"\n                    schema_name:\n                      $ref: \"#/components/schemas/SchemaName\"\n                    schema_version:\n                      $ref: \"#/components/schemas/SchemaVersion\"\n                    cred_def_id:\n                      $ref: \"#/components/schemas/CredentialDefinitionId\"\n                    issuer_did:\n                      $ref: \"#/components/schemas/Did\"\n                    connection_id:\n                      $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Credential proposal sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: proposal-sent\n  /agent/command/issue-credential/create-offer:\n    post:\n      tags:\n        - Issue Credential\n      summary: Create credential offer.\n      description: \u003e\n        Create an `offer-credential` message. The message can be used in a connection(less) out-of-band invitation.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#offer-credential\n      operationId: IssueCredentialCreateOffer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              anyOf:\n                - title: Create Offer to start credential issuance flow\n                  required:\n                    - data\n                  properties:\n                    data:\n                      type: object\n                      required:\n                        - credential_preview\n                        - cred_def_id\n                      properties:\n                        comment:\n                          $ref: \"#/components/schemas/Comment\"\n                        credential_preview:\n                          $ref: \"#/components/schemas/CredentialPreview\"\n                        cred_def_id:\n                          $ref: \"#/components/schemas/CredentialDefinitionId\"\n      responses:\n        200:\n          description: Credential offer created\n          content:\n            application/json:\n              schema:\n                properties:\n                  message:\n                    type: object\n                    example:\n                      {\n                        \"@type\": \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential\",\n                        \"@id\": \"be02fa0b-3177-4202-ba40-76f29e992541\",\n                        \"~thread\": {},\n                        \"offers~attach\":\n                          [\n                            {\n                              \"@id\": \"libindy-cred-offer-0\",\n                              \"mime-type\": \"application/json\",\n                              \"data\":\n                                {\n                                  \"base64\": \"eyJzY2hlbWFfaWQiOiAiV1ZxcHBVdjlYM1d5V0dyYm5zNVVpYToyOkV4YW1wbGU6MS4wIiwgImNyZWRfZGVmX2lkIjogIkVoeDNSWlNWMzhwbjNNWXZ4dEhoYlE6MzpDTDoyMTM3ODE6ZGVmYXVsdCIsICJrZXlfY29ycmVjdG5lc3NfcHJvb2YiOiB7ImMiOiAiMzQzMzE3Njc5MzU5MTI2MTAyNDU5Mzg4OTM5MzU4OTY1MzIzNzMxNTA1NDcyMjAyOTAzMjYzNjQzMjMwNzkwODUxMDY5MjI5MDMyMjEiLCAieHpfY2FwIjogIjY1ODkyMjE5MDg3Njc2NTIzMTI2NjY2MTExMTc5Njg2OTE4MDQ2NjI2MjAzNzcyNTU0NDYwOTYzMTI4NzYxMjU4OTI3MTYwNjI0MTY3NzE4ODgyMjYxMzEwNDA5NTc3OTAwMDU4OTc5NTk5NzcyODU5NTk2NzY0NTMwNjE3MzAxNzYzMDc1MDk1NTg1MjQ1MjQwMzI1MTIzNTE5ODUyNjU1Mjg4MDQ2MDQ0ODIwMzIwMjc5MjY4OTA4NTczMTc1ODAwODM2ODU3MTUzMjA0NjYyMDM5NTQwNTc5NjY4Nzk5MzY1OTczOTQ0MjYxOTg4NjY3OTM0MDQyODkzOTYyMDQyOTgyOTUwMjE3MTUxNTU0MDEzNTg3MjcwMzg4MTE3NDE1MDM5NzY4Mjk2NTYwNDU0NTk1MDc5NDEyNTg5MzY5NzAzNDIzNDE3NDE3OTEwMDI5MDM2MjE0MzA5OTMxODU2NjMwMzcxNTQzNzg2NTc5Njg3NTE4NTU0MDU2ODYwMjUxMTkxMjgyMjI1MDQ1NzU4MjQwNjIwMDMxMTAyMDI1NDc0MzE0MzY3NjUzOTI5ODg0Njk2MDQwMzQ0NTEyMDA4NzE1MzIxODYyMDc2NjIyMTYxNDM3Mzk1MDI4ODI4MzMxMzUwMDkxNDA5MTAyMDQ0ODg2ODcxMzE1NzkwNzYwOTMyMjE1OTg3MTg2MzMyNjg2MzcwNTU3MDgwOTk1MjU2NTgwMjA3NDE4MzgzNDcxMjI3ODE3MjkwNjE2MjUzOTA4ODA0NzIzODA2MDIxMjQ0Nzc0MTg1MzEwNzQzMjk4NDQ5MjAyNTIyMTczMDk5MDk5NDAxMDkzNTU1NzEyNDEzNDYwNDA2MzAzMjY2MDc0NDg3NTU0ODA5NzQ5NTg0MzMyMTQyNDM2NTUzMTE3MDI5NTA2MiIsICJ4cl9jYXAiOiBbWyJleGFtcGxlIiwgIjQ3OTQzOTIzNTUxMzk1Mjk0MDExOTEwNjExMDYxODM3OTEzNzU4MjAwODk2MzU0OTk3NDYxMjUzNjQxNDc3NjQzOTczNTcwNjY2OTgzMTkyNzg1Nzg5MzYzODEyMjk3NDY2MjA1ODE4NDQ0MTAzNzM3MjcwMzA0NjY3NjU3MTYxMjA2MzczODk2NDQ1OTUwMDcwMzcxNjQ3MjQ5MDIxNjk3NDA4MDkxNTc0MTQzODI1ODY2NzYyMzI5MDU4MDM2MzQ3Mjc1NjY1OTE1NjEwMTIxNDYxMDc2NTg3MDE4NTcwMTg5MTUzNzg4NTQ0NTM5NjY5NjY0NjAzODA5MTYzODYzNzMzODEwODI5NTQ0Njc1ODk1MDc2MTgyODA1NDc4MTMxMTMzMDg5NDEzMDU2MDgyNTUwMjE3Njk2ODMyNTg5Nzk2NzI1NzM0MTQ0OTg2MTI3OTc4NzEyMTQ5NDM4ODE1NzA2MDM0NzY4NTg2NzQ3MzM2MjMwMzk4NDAxMTU5NTA4NzgzMTQ5MDMyMDY5NTUzODQxMDE1NzE5NDk4MjE2OTEyNDAzMDcyMTMxNzgyMjg2MDE2MzIzMDY1ODMxMDUxMDU0MTIyNzMwODU0Njk1NzMyMzAyNzc0ODgwMTcyNTI0OTk3NTk0MjE1MjE1NzI2MTU1MjY5Mzk3MTUxMDg5NzE2MTc1MjQxMzg0NTEwMTI3MjI5NDI5OTcyNzU2NzMzMzIyODg5MjgxODUxNjMxNzcxNTAwOTA5ODkzNTgxNDA2MzQ4MTgxODc2NDk3NjQ2OTE5MTIzNDI1NzIwNTQ5MjE1MDE4NzE4Mzg1NjAxNTcwMzE5NzQ4MjAwMDgyMDk2MzQzMTIzMTE2NjU3NTU4ODMxODU1NjQ2NjU1NTQ2ODI5Mjk5NjQzMjM0OTYxODAwMTg4MiJdLCBbIm1hc3Rlcl9zZWNyZXQiLCAiMzg0NzYyNzI1ODkxMDM5MDIzNjUyNjUzMDU0MzAxNDUzOTk1MDk2NTAwMTQxNzQxNDQ5OTIyODY5OTEwNTc5NDU3OTE1MTAxNTU4NzgwODQ3MzU1NTMxMjgyOTI1MTQ5NTA1NzA3NDM4OTQyMDAyODk1NjQ4ODA5MTgyODAxOTc2ODgyMDMxMTcxNTMwNTYwODc5NDQ2ODczMjg3NzA2MTY5OTEzODA0MTY1Nzg4Njc2OTY4MDI3MTI4NTE4MDcyMjU2NTAxMjUxMzQ4Nzc4NzM3MzE4NzAyMTAxODE1NTU0NzE0ODQ4NjQ1NTA5MTczMjQ1NDYzOTE0NTM3MjYzODA5NzAwNDc2NjM2NzE2OTQ1NjgxNTMzMTA2MTM3MjY5MDc1MzY5MjEwOTExNTc5NDY5MTc3NjI5MjA0NDA0MjQ4MTA2MzExNzI5MjE1MTQ4ODM4MTc1NDcwMDg1ODE5OTk2MTk5MjQ0MDA5MTQ5ODg3NzMzMjQ0NjU1NzMxODYyNjYwODAwNzU1MTUxNTkwNDI0MDY0NjIwMTE5OTk5NjM3NjUyNTkxMTgwMDA3MDA2ODcyMTkzMTUzODM2OTg3MDQ5MjQyNzYyNDMwMjE3NTc2NDI2ODM1MzIyODQxNzIyMTE3ODY1Njg2MzMzOTE1NjYzMDgwODI5NTQ3MTY1NTYwMTY2ODMyODgzODgxNjc1MDY2MjUxOTM3NDA5Njk4NTE0NzkyMDYyNDgwMzQxMTUxMTkwMTk5MjcwOTkyMDgzOTgyNTIzMzI0MzU5OTUyNjUyMzQ5MDY5ODE5NTEyOTQwMzUwMzM2NDMwOTE4OTMwODQ2MjA4MTMxNzEzNDI0NTczNzY4NDQ0ODE2Njc4MTM4OTM2MTUyNzY1MzQwOTA4ODM5MTA2MjkyOTcyNTM2MjIzMjEyIl1dfSwgIm5vbmNlIjogIjE5MDU3NTc5MDc0ODIyODA1NTkzODA4MSJ9\",\n                                },\n                            },\n                          ],\n                        \"credential_preview\":\n                          {\n                            \"@type\": \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\",\n                            \"attributes\":\n                              [\n                                {\n                                  \"name\": \"example\",\n                                  \"mime-type\": \"image/jpeg\",\n                                  \"value\": \"martini\",\n                                },\n                              ],\n                          },\n                      }\n                  record:\n                    allOf:\n                      - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                      - properties:\n                          state:\n                            example: offer-sent\n  /agent/command/issue-credential/send-offer:\n    post:\n      tags:\n        - Issue Credential\n      summary: Send credential offer\n      description: \u003e\n        Send an `offer-credential` message.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#offer-credential\n      operationId: IssueCredentialSendOffer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              anyOf:\n                - title: Send Offer to start credential issuance flow\n                  required:\n                    - data\n                  properties:\n                    data:\n                      type: object\n                      required:\n                        - connection_id\n                        - credential_preview\n                      properties:\n                        comment:\n                          $ref: \"#/components/schemas/Comment\"\n                        credential_preview:\n                          $ref: \"#/components/schemas/CredentialPreview\"\n                        cred_def_id:\n                          $ref: \"#/components/schemas/CredentialDefinitionId\"\n                        connection_id:\n                          $ref: \"#/components/schemas/ConnectionId\"\n                - title: Send Offer in response to Proposal\n                  required:\n                    - id\n                  properties:\n                    id:\n                      $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Credential offer sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: offer-sent\n  /agent/command/issue-credential/send-request:\n    post:\n      tags:\n        - Issue Credential\n      summary: Send credential request\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#request-credential\n      operationId: IssueCredentialSendRequest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - title: Send Request to start credential issuance flow\n                  required:\n                    - id\n                  properties:\n                    id:\n                      $ref: \"#/components/schemas/ConnectionId\"\n                - title: Send Request in response to Offer\n                  required:\n                    - id\n                  properties:\n                    id:\n                      $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Credential request sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: request-sent\n  /agent/command/issue-credential/issue:\n    post:\n      tags:\n        - Issue Credential\n      summary: Issue Credential\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#issue-credential\n      operationId: IssueCredentialIssue\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n                data:\n                  type: object\n                  properties:\n                    comment:\n                      $ref: \"#/components/schemas/Comment\"\n      responses:\n        200:\n          description: Credential issued\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: credential-issued\n  /agent/command/issue-credential/store:\n    post:\n      tags:\n        - Issue Credential\n      summary: Store Credential\n      operationId: IssueCredentialStore\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Credential stored\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - required:\n                      - credential_id\n                    properties:\n                      state:\n                        example: done\n\n  /agent/command/issue-credential-v2/{credentialExchangeThreadId}:\n    get:\n      tags:\n        - Issue Credential V2\n      summary: Get credential exchange v2 record by thread id\n      operationId: IssueCredentialV2GetByThreadId\n      parameters:\n        - in: path\n          name: credentialExchangeThreadId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Credential Exchange v2\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n        404:\n          description: Credential exchange record not found\n  /agent/command/issue-credential-v2/prepare-json-ld:\n    post:\n      tags:\n        - Issue Credential V2\n      summary: Prepare for issuing a JSON-LD credential (RFC0593)\n      operationId: IssueCredentialV2PrepareJsonLD\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - did_method\n                - proof_type\n              properties:\n                did_method:\n                  $ref: \"#/components/schemas/DidMethod\"\n                proof_type:\n                  $ref: \"#/components/schemas/ProofType\"\n      responses:\n        200:\n          description: Ready to issue a JSON-LD credential\n          content:\n            application/json:\n              schema:\n                required:\n                  - did\n                properties:\n                  did:\n                    $ref: \"#/components/schemas/FullDid\"\n  /agent/command/issue-credential-v2/send-proposal:\n    post:\n      tags:\n        - Issue Credential V2\n      summary: Send credential proposal\n      description: \u003e\n        Send a `propose-credential` message to connection with `connection_id` in body.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0453-issue-credential-v2#propose-credential\n      operationId: IssueCredentialV2SendProposal\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  required:\n                    - connection_id\n                    - filter\n                  properties:\n                    connection_id:\n                      $ref: \"#/components/schemas/ConnectionId\"\n                    credential_preview:\n                      allOf:\n                        - $ref: \"#/components/schemas/CredentialPreview\"\n                        - properties:\n                            \"@type\":\n                              example: \"issue-credential/2.0/credential-preview\"\n                    filter:\n                      $ref: \"#/components/schemas/IssueCredentialV2CredentialProposalFilter\"\n\n      responses:\n        200:\n          description: Credential proposal sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: proposal-sent\n  /agent/command/issue-credential-v2/send-offer:\n    post:\n      tags:\n        - Issue Credential V2\n      summary: Send credential offer\n      description: \u003e\n        Send an `offer-credential` message.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0453-issue-credential-v2#offer-credential\n      operationId: IssueCredentialV2SendOffer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              anyOf:\n                - title: Send Offer to start credential issuance flow\n                  required:\n                    - data\n                  properties:\n                    data:\n                      type: object\n                      required:\n                        - connection_id\n                        - filter\n                      properties:\n                        connection_id:\n                          $ref: \"#/components/schemas/ConnectionId\"\n                        credential_preview:\n                          allOf:\n                            - $ref: \"#/components/schemas/CredentialPreview\"\n                            - properties:\n                                \"@type\":\n                                  example: \"issue-credential/2.0/credential-preview\"\n                        filter:\n                          $ref: \"#/components/schemas/IssueCredentialV2CredentialProposalFilter\"\n                - title: Send Offer in response to Proposal\n                  required:\n                    - id\n                  properties:\n                    id:\n                      $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Credential offer sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: offer-sent\n  /agent/command/issue-credential-v2/create-offer:\n    post:\n      tags:\n        - Issue Credential V2\n      summary: Create credential offer\n      description: \u003e\n        Create an `offer-credential` message. The message can be used in a connection(less) out-of-band invitation.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0453-issue-credential-v2#offer-credential\n      operationId: IssueCredentialV2CreateOffer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: Create Offer to start credential issuance flow\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  required:\n                    - filter\n                  properties:\n                    credential_preview:\n                      allOf:\n                        - $ref: \"#/components/schemas/CredentialPreview\"\n                        - properties:\n                            \"@type\":\n                              example: \"issue-credential/2.0/credential-preview\"\n                    filter:\n                      $ref: \"#/components/schemas/IssueCredentialV2CredentialProposalFilter\"\n\n      responses:\n        200:\n          description: Credential offer created\n          content:\n            application/json:\n              schema:\n                properties:\n                  message:\n                    type: object\n                    example:\n                      {\n                        \"@type\": \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/2.0/offer-credential\",\n                        \"@id\": \"bfe69ea4-72d7-4be1-97d0-8a499b6eb526\",\n                        \"formats\":\n                          [\n                            {\n                              \"attach_id\": \"indy\",\n                              \"format\": \"hlindy/cred-abstract@v2.0\",\n                            },\n                          ],\n                        \"offers~attach\":\n                          [\n                            {\n                              \"@id\": \"indy\",\n                              \"mime-type\": \"application/json\",\n                              \"data\":\n                                {\n                                  \"base64\": \"eyJzY2hlbWFfaWQiOiAiV1ZxcHBVdjlYM1d5V0dyYm5zNVVpYToyOkV4YW1wbGU6MS4wIiwgImNyZWRfZGVmX2lkIjogIkVoeDNSWlNWMzhwbjNNWXZ4dEhoYlE6MzpDTDoyMTM3ODE6ZGVmYXVsdCIsICJrZXlfY29ycmVjdG5lc3NfcHJvb2YiOiB7ImMiOiAiMzQzMzE3Njc5MzU5MTI2MTAyNDU5Mzg4OTM5MzU4OTY1MzIzNzMxNTA1NDcyMjAyOTAzMjYzNjQzMjMwNzkwODUxMDY5MjI5MDMyMjEiLCAieHpfY2FwIjogIjY1ODkyMjE5MDg3Njc2NTIzMTI2NjY2MTExMTc5Njg2OTE4MDQ2NjI2MjAzNzcyNTU0NDYwOTYzMTI4NzYxMjU4OTI3MTYwNjI0MTY3NzE4ODgyMjYxMzEwNDA5NTc3OTAwMDU4OTc5NTk5NzcyODU5NTk2NzY0NTMwNjE3MzAxNzYzMDc1MDk1NTg1MjQ1MjQwMzI1MTIzNTE5ODUyNjU1Mjg4MDQ2MDQ0ODIwMzIwMjc5MjY4OTA4NTczMTc1ODAwODM2ODU3MTUzMjA0NjYyMDM5NTQwNTc5NjY4Nzk5MzY1OTczOTQ0MjYxOTg4NjY3OTM0MDQyODkzOTYyMDQyOTgyOTUwMjE3MTUxNTU0MDEzNTg3MjcwMzg4MTE3NDE1MDM5NzY4Mjk2NTYwNDU0NTk1MDc5NDEyNTg5MzY5NzAzNDIzNDE3NDE3OTEwMDI5MDM2MjE0MzA5OTMxODU2NjMwMzcxNTQzNzg2NTc5Njg3NTE4NTU0MDU2ODYwMjUxMTkxMjgyMjI1MDQ1NzU4MjQwNjIwMDMxMTAyMDI1NDc0MzE0MzY3NjUzOTI5ODg0Njk2MDQwMzQ0NTEyMDA4NzE1MzIxODYyMDc2NjIyMTYxNDM3Mzk1MDI4ODI4MzMxMzUwMDkxNDA5MTAyMDQ0ODg2ODcxMzE1NzkwNzYwOTMyMjE1OTg3MTg2MzMyNjg2MzcwNTU3MDgwOTk1MjU2NTgwMjA3NDE4MzgzNDcxMjI3ODE3MjkwNjE2MjUzOTA4ODA0NzIzODA2MDIxMjQ0Nzc0MTg1MzEwNzQzMjk4NDQ5MjAyNTIyMTczMDk5MDk5NDAxMDkzNTU1NzEyNDEzNDYwNDA2MzAzMjY2MDc0NDg3NTU0ODA5NzQ5NTg0MzMyMTQyNDM2NTUzMTE3MDI5NTA2MiIsICJ4cl9jYXAiOiBbWyJleGFtcGxlIiwgIjQ3OTQzOTIzNTUxMzk1Mjk0MDExOTEwNjExMDYxODM3OTEzNzU4MjAwODk2MzU0OTk3NDYxMjUzNjQxNDc3NjQzOTczNTcwNjY2OTgzMTkyNzg1Nzg5MzYzODEyMjk3NDY2MjA1ODE4NDQ0MTAzNzM3MjcwMzA0NjY3NjU3MTYxMjA2MzczODk2NDQ1OTUwMDcwMzcxNjQ3MjQ5MDIxNjk3NDA4MDkxNTc0MTQzODI1ODY2NzYyMzI5MDU4MDM2MzQ3Mjc1NjY1OTE1NjEwMTIxNDYxMDc2NTg3MDE4NTcwMTg5MTUzNzg4NTQ0NTM5NjY5NjY0NjAzODA5MTYzODYzNzMzODEwODI5NTQ0Njc1ODk1MDc2MTgyODA1NDc4MTMxMTMzMDg5NDEzMDU2MDgyNTUwMjE3Njk2ODMyNTg5Nzk2NzI1NzM0MTQ0OTg2MTI3OTc4NzEyMTQ5NDM4ODE1NzA2MDM0NzY4NTg2NzQ3MzM2MjMwMzk4NDAxMTU5NTA4NzgzMTQ5MDMyMDY5NTUzODQxMDE1NzE5NDk4MjE2OTEyNDAzMDcyMTMxNzgyMjg2MDE2MzIzMDY1ODMxMDUxMDU0MTIyNzMwODU0Njk1NzMyMzAyNzc0ODgwMTcyNTI0OTk3NTk0MjE1MjE1NzI2MTU1MjY5Mzk3MTUxMDg5NzE2MTc1MjQxMzg0NTEwMTI3MjI5NDI5OTcyNzU2NzMzMzIyODg5MjgxODUxNjMxNzcxNTAwOTA5ODkzNTgxNDA2MzQ4MTgxODc2NDk3NjQ2OTE5MTIzNDI1NzIwNTQ5MjE1MDE4NzE4Mzg1NjAxNTcwMzE5NzQ4MjAwMDgyMDk2MzQzMTIzMTE2NjU3NTU4ODMxODU1NjQ2NjU1NTQ2ODI5Mjk5NjQzMjM0OTYxODAwMTg4MiJdLCBbIm1hc3Rlcl9zZWNyZXQiLCAiMzg0NzYyNzI1ODkxMDM5MDIzNjUyNjUzMDU0MzAxNDUzOTk1MDk2NTAwMTQxNzQxNDQ5OTIyODY5OTEwNTc5NDU3OTE1MTAxNTU4NzgwODQ3MzU1NTMxMjgyOTI1MTQ5NTA1NzA3NDM4OTQyMDAyODk1NjQ4ODA5MTgyODAxOTc2ODgyMDMxMTcxNTMwNTYwODc5NDQ2ODczMjg3NzA2MTY5OTEzODA0MTY1Nzg4Njc2OTY4MDI3MTI4NTE4MDcyMjU2NTAxMjUxMzQ4Nzc4NzM3MzE4NzAyMTAxODE1NTU0NzE0ODQ4NjQ1NTA5MTczMjQ1NDYzOTE0NTM3MjYzODA5NzAwNDc2NjM2NzE2OTQ1NjgxNTMzMTA2MTM3MjY5MDc1MzY5MjEwOTExNTc5NDY5MTc3NjI5MjA0NDA0MjQ4MTA2MzExNzI5MjE1MTQ4ODM4MTc1NDcwMDg1ODE5OTk2MTk5MjQ0MDA5MTQ5ODg3NzMzMjQ0NjU1NzMxODYyNjYwODAwNzU1MTUxNTkwNDI0MDY0NjIwMTE5OTk5NjM3NjUyNTkxMTgwMDA3MDA2ODcyMTkzMTUzODM2OTg3MDQ5MjQyNzYyNDMwMjE3NTc2NDI2ODM1MzIyODQxNzIyMTE3ODY1Njg2MzMzOTE1NjYzMDgwODI5NTQ3MTY1NTYwMTY2ODMyODgzODgxNjc1MDY2MjUxOTM3NDA5Njk4NTE0NzkyMDYyNDgwMzQxMTUxMTkwMTk5MjcwOTkyMDgzOTgyNTIzMzI0MzU5OTUyNjUyMzQ5MDY5ODE5NTEyOTQwMzUwMzM2NDMwOTE4OTMwODQ2MjA4MTMxNzEzNDI0NTczNzY4NDQ0ODE2Njc4MTM4OTM2MTUyNzY1MzQwOTA4ODM5MTA2MjkyOTcyNTM2MjIzMjEyIl1dfSwgIm5vbmNlIjogIjE5MDU3NTc5MDc0ODIyODA1NTkzODA4MSJ9\",\n                                },\n                            },\n                          ],\n                        \"credential_preview\":\n                          {\n                            \"@type\": \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/2.0/credential-preview\",\n                            \"attributes\":\n                              [\n                                {\n                                  \"name\": \"example\",\n                                  \"mime-type\": \"image/jpeg\",\n                                  \"value\": \"martini\",\n                                },\n                              ],\n                          },\n                      }\n                  record:\n                    allOf:\n                      - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                      - properties:\n                          state:\n                            example: offer-sent\n  /agent/command/issue-credential-v2/send-request:\n    post:\n      tags:\n        - Issue Credential V2\n      summary: Send credential request\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0453-issue-credential-v2#request-credential\n      operationId: IssueCredentialV2SendRequest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - title: Send Request in response to Offer\n                  description: It is currently not possible yet to start from a credential request, even though supported for some credential types (e.g. JSON-LD)\n                  required:\n                    - id\n                  properties:\n                    id:\n                      $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Credential request sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: request-sent\n  /agent/command/issue-credential-v2/issue:\n    post:\n      tags:\n        - Issue Credential V2\n      summary: Issue Credential\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0453-issue-credential-v2#issue-credential\n      operationId: IssueCredentialV2Issue\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n                data:\n                  type: object\n                  properties:\n                    comment:\n                      $ref: \"#/components/schemas/Comment\"\n      responses:\n        200:\n          description: Credential issued\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: credential-issued\n  /agent/command/issue-credential-v2/store:\n    post:\n      tags:\n        - Issue Credential V2\n      summary: Store Credential\n      operationId: IssueCredentialV2Store\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Credential stored\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - required:\n                      - indy\n                      - json-ld\n                    properties:\n                      state:\n                        example: done\n                      indy:\n                        required:\n                          - credential_id\n                        properties:\n                          credential_id:\n                            $ref: \"#/components/schemas/CredentialId\"\n                      json-ld:\n                        required:\n                          - credential_id\n                        properties:\n                          credential_id:\n                            $ref: \"#/components/schemas/CredentialId\"\n\n  /agent/command/issue-credential-v3/send-proposal:\n    post:\n      tags:\n        - Issue Credential V3\n      summary: Send credential proposal\n      description: \u003e\n        Send a `propose-credential` message to connection with `connection_id` and `pthid` in body.\n      externalDocs:\n        url: https://github.com/decentralized-identity/waci-presentation-exchange/blob/main/issue_credential/README.md#propose-credential\n      operationId: IssueCredentialV3SendProposal\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  required:\n                    - connection_id\n                    - pthid\n                  properties:\n                    connection_id:\n                      $ref: \"#/components/schemas/ConnectionId\"\n                    pthid:\n                      $ref: \"#/components/schemas/pthid\"\n\n      responses:\n        200:\n          description: Credential proposal sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: proposal-sent\n  /agent/command/issue-credential-v3/retrieve-credential-proposal:\n    get:\n      tags:\n        - Issue Credential V3\n      summary: Retrieves the Propose Credential object received by the agent.\n      description: \u003e\n        Retrieves the Propose Credential object received by the agent.\n      externalDocs:\n        url: https://identity.foundation/waci-presentation-exchange/#issuance-2\n      operationId: IssueCredentialV3RetrieveCredentialProposal\n\n      responses:\n        200:\n          description: Propose Credential object\n  /agent/command/issue-credential-v3/send-offer:\n    post:\n      tags:\n        - Issue Credential V3\n      summary: Send credential offer\n      description: \u003e\n        Send an `offer-credential` message.\n      externalDocs:\n        url: https://github.com/decentralized-identity/waci-presentation-exchange/blob/main/issue_credential/README.md#offer-credential\n      operationId: IssueCredentialV3SendOffer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: Credential offer sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: offer-sent\n  /agent/command/issue-credential-v3/send-request:\n    post:\n      tags:\n        - Issue Credential V3\n      summary: Send credential request\n      externalDocs:\n        url: https://github.com/decentralized-identity/waci-presentation-exchange/blob/main/issue_credential/README.md#request-credential\n      operationId: IssueCredentialV3SendRequest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n\n      responses:\n        200:\n          description: Credential request sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: request-sent\n  /agent/command/issue-credential-v3/retrieve-credential-application:\n    get:\n      tags:\n        - Issue Credential V3\n      summary: Retrieves the Credential Application object received by the agent.\n      description: \u003e\n        Retrieves the Credential Application object received by the agent.\n      externalDocs:\n        url: https://identity.foundation/waci-presentation-exchange/#issuance-2\n      operationId: IssueCredentialV3RetrieveCredentialApplication\n\n      responses:\n        200:\n          description: Credential Application object\n  /agent/command/issue-credential-v3/issue:\n    post:\n      tags:\n        - Issue Credential V3\n      summary: Issue credential\n      externalDocs:\n        url: https://github.com/decentralized-identity/waci-presentation-exchange/blob/main/issue_credential/README.md#issue-credential\n      operationId: IssueCredentialV3Issue\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n                data:\n                  type: object\n      responses:\n        200:\n          description: Credential issued\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - properties:\n                      state:\n                        example: credential-issued\n  /agent/command/issue-credential-v3/store:\n    post:\n      tags:\n        - Issue Credential V3\n      summary: Store/accept credential\n      operationId: IssueCredentialV3Store\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Credential stored\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/IssueCredentialOperationResponse\"\n                  - required:\n                      - credential_id\n                    properties:\n                      state:\n                        example: done\n\n  /agent/command/revocation/revoke:\n    post:\n      tags:\n        - Revocation\n      summary: Revoke Credential\n      operationId: RevocationRevokeCredential\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  properties:\n                    cred_rev_id:\n                      $ref: \"#/components/schemas/IndyCredentialRevocationId\"\n                    rev_registry_id:\n                      $ref: \"#/components/schemas/IndyRevocationRegistryId\"\n                    publish_immediately:\n                      type: boolean\n                    notify_connection_id:\n                      description: Id of the connection to notify of the revocation. If not present, will not notify\n                      $ref: \"#/components/schemas/ConnectionId\"\n                  required:\n                    - cred_rev_id\n                    - rev_registry_id\n                    - publish_immediately\n\n      responses:\n        200:\n          description: Credential revoked\n          content:\n            application/json:\n              schema:\n                type: object\n                example: {}\n  /agent/response/revocation-notification/{threadId}:\n    get:\n      tags:\n        - Revocation\n      summary: Get revocation notification message based on the revocation notification message `thread_id` property.\n      operationId: RevocationGetNotificationByThreadId\n      parameters:\n        - in: path\n          name: threadId\n          description: The value of the `threadId` property in the revocation notification message\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Revocation Notification\n          content:\n            application/json:\n              schema:\n                properties:\n                  thread_id:\n                    type: string\n  /agent/command/credential/{credentialId}:\n    get:\n      tags:\n        - Credential\n      summary: Get credential by id\n      operationId: CredentialGetById\n      parameters:\n        - in: path\n          name: credentialId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CredentialId\"\n      responses:\n        200:\n          description: Credential\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - title: Indy Credential\n                    description: Expected response for an Indy credential\n                    required:\n                      - referent\n                      - schema_id\n                      - cred_def_id\n                    properties:\n                      referent:\n                        $ref: \"#/components/schemas/CredentialId\"\n                      schema_id:\n                        $ref: \"#/components/schemas/SchemaId\"\n                      cred_def_id:\n                        $ref: \"#/components/schemas/CredentialDefinitionId\"\n                  - title: W3C Credential\n                    description: Expected response for a W3C credential\n                    required:\n                      - credential_id\n                      - credential\n                    properties:\n                      credential_id:\n                        $ref: \"#/components/schemas/CredentialId\"\n                      credential:\n                        $ref: \"#/components/schemas/W3CCredential\"\n        404:\n          description: Credential not found\n    delete:\n      tags:\n        - Credential\n      summary: Delete credential by id\n      operationId: CredentialDeleteById\n      parameters:\n        - in: path\n          name: credentialId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CredentialId\"\n      responses:\n        200:\n          description: Credential Deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                example: {}\n\n        404:\n          description: Credential not found\n  /agent/command/credential/revoked/{credentialId}:\n    get:\n      tags:\n        - Credential\n      summary: Get Credential Revocation Status\n      operationId: CredentialGetRevocationStatusById\n      parameters:\n        - in: path\n          name: credentialId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CredentialId\"\n      responses:\n        200:\n          description: Credential Revocation Status\n          content:\n            application/json:\n              schema:\n                required:\n                  - revoked\n                properties:\n                  revoked:\n                    type: boolean\n        404:\n          description: Credential not found\n\n  /agent/command/proof/{presentationExchangeThreadId}:\n    get:\n      tags:\n        - Present Proof\n      summary: Get presentation exchange record by thread id\n      operationId: PresentProofGetByThreadId\n      parameters:\n        - in: path\n          name: presentationExchangeThreadId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Presentation Exchange\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PresentProofOperationResponse\"\n        404:\n          description: Presentation exchange record not found\n  /agent/command/proof/send-proposal:\n    post:\n      tags:\n        - Present Proof\n      summary: Send presentation proposal\n      description: \u003e\n        Send a `propose-presentation` message to connection with `connection_id` in body.\n        When the backchannel sends a `send-proposal` operation to a backchannel it sends an `presentation-preview` inner message.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#propose-presentation\n      operationId: PresentProofSendProposal\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  required:\n                    - connection_id\n                    - presentation_proposal\n                  properties:\n                    connection_id:\n                      $ref: \"#/components/schemas/ConnectionId\"\n                    presentation_proposal:\n                      $ref: \"#/components/schemas/PresentationPreview\"\n      responses:\n        200:\n          description: Presentation proposal sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: proposal-sent\n  /agent/command/proof/send-request:\n    post:\n      tags:\n        - Present Proof\n      summary: Send presentation request\n      description: \u003e\n        Send a `request-presentation` message to connection with `connection_id` in body.\n        When the backchannel sends a `send-request` operation to a backchannel it sends the (almost) complete `request-presentation` message. However the data inside the proposal is not base64 encoded yet.\n        See the [`proof_request_json`](https://github.com/hyperledger/indy-sdk/blob/57dcdae74164d1c7aa06f2cccecaae121cefac25/libindy/src/api/anoncreds.rs#L1415-L1432) docs for expected contents of the data for Indy credentials.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#request-presentation\n      operationId: PresentProofSendRequest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  required:\n                    - connection_id\n                    - presentation_request\n                  properties:\n                    connection_id:\n                      $ref: \"#/components/schemas/ConnectionId\"\n                    presentation_request:\n                      $ref: \"#/components/schemas/PresentationRequestMessage\"\n      responses:\n        200:\n          description: Presentation request sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: request-sent\n  /agent/command/proof/send-presentation:\n    post:\n      tags:\n        - Present Proof\n      summary: Send presentation\n      description: \u003e\n        Send a `presentation` message in response to presentation request with specified thread id.\n        See the [`requested_credentials_json`](https://github.com/hyperledger/indy-sdk/blob/57dcdae74164d1c7aa06f2cccecaae121cefac25/libindy/src/api/anoncreds.rs#L1433-L1445) docs for expected contents of the data for Indy credentials.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#presentation\n      operationId: PresentProofSendPresentation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - data\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n                data:\n                  allOf:\n                    - $ref: \"#/components/schemas/RequestedCredentials\"\n                    - type: object\n                      properties:\n                        comment:\n                          $ref: \"#/components/schemas/Comment\"\n      responses:\n        200:\n          description: Presentation sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: presentation-sent\n  /agent/command/proof/verify-presentation:\n    post:\n      tags:\n        - Present Proof\n      summary: Verify presentation\n      description: \u003e\n        Verify the received presentation with specified thread id.\n      operationId: PresentProofVerifyPresentation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Presentation verified\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: done\n\n  /agent/command/proof-v2/send-request:\n    post:\n      tags:\n        - Present Proof V2\n      summary: Send presentation request\n      description: \u003e\n        Send a `request-presentation` message to connection with `connection_id` in body.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0454-present-proof-v2/README.md#request-presentation\n      operationId: PresentProofV2SendRequest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              anyOf:\n                - title: Send Indy Proof Request\n                  type: object\n                  required:\n                    - data\n                  properties:\n                    data:\n                      type: object\n                      required:\n                        - connection_id\n                        - presentation_request\n                      properties:\n                        connection_id:\n                          $ref: \"#/components/schemas/ConnectionId\"\n                        presentation_request:\n                          allOf:\n                            - $ref: \"#/components/schemas/PresentProofV2SendRequestIndy\"\n                            - properties:\n                                connection_id:\n                                  $ref: \"#/components/schemas/ConnectionId\"\n                              required:\n                                - connection_id\n                - title: Send DIF Proof Request\n                  type: object\n                  required:\n                    - data\n                  properties:\n                    data:\n                      type: object\n                      required:\n                        - connection_id\n                        - presentation_request\n                      properties:\n                        connection_id:\n                          $ref: \"#/components/schemas/ConnectionId\"\n                        presentation_request:\n                          allOf:\n                            - $ref: \"#/components/schemas/PresentProofV2SendRequestDIF\"\n                            - properties:\n                                connection_id:\n                                  $ref: \"#/components/schemas/ConnectionId\"\n                              required:\n                                - connection_id\n      responses:\n        200:\n          description: Presentation request sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: request-sent\n  /agent/command/proof-v2/send-presentation:\n    post:\n      tags:\n        - Present Proof V2\n      summary: Send presentation\n      description: \u003e\n        Send a `presentation` message in response to presentation request with specified thread id.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0454-present-proof-v2/README.md#presentation\n      operationId: PresentProofV2SendPresentation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - data\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n                data:\n                  type: object\n                  title: TODO\n      responses:\n        200:\n          description: Presentation sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: presentation-sent\n  /agent/command/proof-v2/verify-presentation:\n    post:\n      tags:\n        - Present Proof V2\n      summary: Verify presentation\n      description: \u003e\n        Verify the received presentation with specified thread id.\n      operationId: PresentProofV2VerifyPresentation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Presentation verified\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: done\n                      verified:\n                        type: boolean\n                        example: true\n                    required:\n                      - state\n                      - verified\n\n  /agent/command/proof-v3/send-proposal:\n    post:\n      tags:\n        - Present Proof V3\n      summary: Send presentation proposal\n      description: \u003e\n        Send a `propose-presentation` message to connection with `connection_id` in body.\n      operationId: PresentProofV3SendProposal\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              anyOf:\n                - title: Send Proposal\n                  type: object\n                  required:\n                    - data\n                  properties:\n                    data:\n                      type: object\n                      required:\n                        - presentation_proposal\n                      properties:\n                        presentation_proposal:\n                          required:\n                            - connection_id\n                          properties:\n                            connection_id:\n                              $ref: \"#/components/schemas/ConnectionId\"\n                            comment:\n                              $ref: \"#/components/schemas/Comment\"\n      responses:\n        200:\n          description: Presentation proposal sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: proposal-sent\n  /agent/command/proof-v3/send-request:\n    post:\n      tags:\n        - Present Proof V3\n      summary: Send present-proof v3 presentation request\n      description: \u003e\n        Send a `request-presentation` message, either as the start of a thread, or as an acceptance of a presentation proposal.\n         - To accept a presentation proposal: include thread `id` in body.\n         - To start a thread: include `connection_id` in body.\n      operationId: PresentProofV3SendRequest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n                connection_id:\n                  $ref: \"#/components/schemas/ConnectionId\"\n                data:\n                  type: object\n                  properties:\n                    presentation_request:\n                      anyOf:\n                        - $ref: \"#/components/schemas/PresentProofV2SendRequestIndy\"\n                        - $ref: \"#/components/schemas/PresentProofV2SendRequestDIF\"\n      responses:\n        200:\n          description: Presentation request sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: request-sent\n  /agent/command/proof-v3/send-presentation:\n    post:\n      tags:\n        - Present Proof V3\n      summary: Send presentation\n      description: \u003e\n        Send a `presentation` message in response to presentation request with specified thread id.\n      operationId: PresentProofV3SendPresentation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - data\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n                data:\n                  type: object\n                  title: TODO\n      responses:\n        200:\n          description: Presentation sent\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: presentation-sent\n  /agent/command/proof-v3/verify-presentation:\n    post:\n      tags:\n        - Present Proof V3\n      summary: Verify presentation\n      description: \u003e\n        Verify the received presentation with specified thread id.\n      operationId: PresentProofV3VerifyPresentation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ThreadId\"\n      responses:\n        200:\n          description: Presentation verified\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PresentProofOperationResponse\"\n                  - properties:\n                      state:\n                        example: done\n                      verified:\n                        type: boolean\n                        example: true\n                    required:\n                      - state\n                      - verified\n\n  /agent/command/mediation/{connectionId}:\n    get:\n      tags:\n        - Coordinate Mediation\n      summary: Get mediation record by connection id\n      operationId: CoordinateMediationGetByConnectionId\n      parameters:\n        - in: path\n          name: connectionId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Mediation record\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CoordinateMediationOperationResponse\"\n        404:\n          description: Mediation record not found\n  /agent/command/mediation/send-request:\n    post:\n      tags:\n        - Coordinate Mediation\n      summary: Send mediation request message\n      description: \u003e\n        Send a `mediate-request` message to connection with `connection_id` in body.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/blob/main/features/0211-route-coordination/README.md#mediation-request\n      operationId: CoordinateMediationSendRequest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Mediate request message sent\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CoordinateMediationOperationResponse\"\n  /agent/command/mediation/send-grant:\n    post:\n      tags:\n        - Coordinate Mediation\n      summary: Send mediation grant message\n      description: \u003e\n        Send a `mediate-grant` message to mediator with `mediation_id` in body.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/blob/main/features/0211-route-coordination/README.md#mediation-grant\n      operationId: CoordinateMediationSendGrant\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Mediate grant message sent\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CoordinateMediationOperationResponse\"\n  /agent/command/mediation/send-deny:\n    post:\n      tags:\n        - Coordinate Mediation\n      summary: Send mediation deny message\n      description: \u003e\n        Send a `mediate-deny` message to mediator with `mediation_id` in body.\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/blob/main/features/0211-route-coordination/README.md#mediation-deny\n      operationId: CoordinateMediationSendDeny\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Mediate grant message sent\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CoordinateMediationOperationResponse\"\n\n  /agent/command/out-of-band/send-invitation-message:\n    post:\n      tags:\n        - Out of Band\n      summary: Create a new out of band invitation\n      description: |\n        Create an out of band invitation. If both `handshake_protocols` and `attachments` are not provided, backchannel should default to `handshake_protocols` value `[\"https://didcomm.org/didexchange/1.0\"]`. This is legacy behaviour.\n      operationId: OutOfBandCreateInvitation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  properties:\n                    mediator_connection_id:\n                      $ref: \"#/components/schemas/ConnectionId\"\n                    use_public_did:\n                      type: boolean\n                    attachments:\n                      type: array\n                      items:\n                        type: object\n                        example:\n                          {\n                            \"@type\": \"https://didcomm.org/the-protocol/1.0/the-version\",\n                          }\n                    handshake_protocols:\n                      type: array\n                      items:\n                        type: string\n                      example: [\"https://didcomm.org/didexchange/1.0\"]\n      responses:\n        200:\n          description: Invitation created\n          content:\n            application/json:\n              schema:\n                required:\n                  - state\n                  - invitation\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n                  state:\n                    allOf:\n                      - $ref: \"#/components/schemas/DidExchangeState\"\n                      - example: invitation-sent\n                  invitation:\n                    $ref: \"#/components/schemas/OutOfBandInvitation\"\n  /agent/command/out-of-band/receive-invitation:\n    post:\n      tags:\n        - Out of Band\n      summary: Receive an out of band invitation\n      operationId: OutOfBandReceiveInvitation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  allOf:\n                    - $ref: \"#/components/schemas/OutOfBandInvitation\"\n                    - type: object\n                      properties:\n                        use_existing_connection:\n                          type: boolean\n                        mediator_connection_id:\n                          $ref: \"#/components/schemas/ConnectionId\"\n                      required:\n                        - use_existing_connection\n                  example:\n                    {\n                      \"@id\": \"f3375429-b116-4224-b55f-563d7ef461f1\",\n                      \"@type\": \"https://didcomm.org/out-of-band/1.0/invitation\",\n                      \"label\": \"Invitation created by http://host.docker.internal:9042\",\n                      \"services\":\n                        [\n                          {\n                            \"id\": \"86548a10-2b2a-47ce-b9cc-5e835e9add50\",\n                            \"type\": \"did-communication\",\n                            \"recipientKeys\":\n                              [\n                                \"did:key:z6MkurAvs5HUdN8ARq8indff9ZvVAHNMqWBEevrc82ydPLNh\",\n                              ],\n                            \"serviceEndpoint\": \"http://host.docker.internal:9041\",\n                          },\n                        ],\n                      \"accept\": [\"didcomm/aip2;env=rfc19\"],\n                      \"handshake_protocols\":\n                        [\"https://didcomm.org/didexchange/1.0\"],\n                      \"use_existing_connection\": false,\n                      \"mediator_connection_id\": \"77d58e00-f79a-477c-9e50-c05254ab4b54\",\n                    }\n      responses:\n        200:\n          description: Invitation received\n          content:\n            application/json:\n              schema:\n                required:\n                  - state\n                  - connection_id\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n                  state:\n                    allOf:\n                      - $ref: \"#/components/schemas/DidExchangeState\"\n                      - example: invitation-received\n\n  /agent/command/did-exchange/{connectionId}:\n    get:\n      tags:\n        - DID Exchange\n      summary: Get did exchange connection by id\n      operationId: DidExchangeGetById\n      parameters:\n        - in: path\n          name: connectionId\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: DID Exchange Connection\n          content:\n            application/json:\n              schema:\n                required:\n                  - connection_id\n                  - state\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n                  state:\n                    $ref: \"#/components/schemas/DidExchangeState\"\n        404:\n          description: Connection not found\n  /agent/response/did-exchange/{invitationId}:\n    get:\n      tags:\n        - DID Exchange\n      summary: Get did exchange connection by invitation id. Can be used to determine the connection id based of an invitation id.\n      operationId: DidExchangeGetByInvitationId\n      parameters:\n        - in: path\n          name: invitationId\n          description: The invitation `@id`\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: DID Exchange Connection\n          content:\n            application/json:\n              schema:\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n  /agent/command/did-exchange/create-request-resolvable-did:\n    post:\n      tags:\n        - DID Exchange\n      summary: Send a did exchange request to the didcomm service registered in the public did\n      operationId: DidExchangeCreateRequestResolvableDid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  required:\n                    - their_public_did\n                    - their_did\n                  properties:\n                    their_public_did:\n                      $ref: \"#/components/schemas/FullDid\"\n                    their_did:\n                      $ref: \"#/components/schemas/FullDid\"\n      responses:\n        200:\n          description: Request Sent\n          content:\n            application/json:\n              schema:\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n  /agent/command/did-exchange/receive-request-resolvable-did:\n    post:\n      tags:\n        - DID Exchange\n      operationId: DidExchangeReceiveRequestResolvableDid\n      summary: \"The documentation of this endpoint need to be looked at.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n      responses:\n        200:\n          description: Request Received\n          content:\n            application/json:\n              schema:\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n  /agent/command/did-exchange/send-request:\n    post:\n      tags:\n        - DID Exchange\n      summary: Send a did exchange request to the connection with specified id.\n      operationId: DidExchangeSendRequest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ConnectionId\"\n\n      responses:\n        200:\n          description: Request sent\n          content:\n            application/json:\n              schema:\n                properties: {}\n  /agent/command/did-exchange/send-response:\n    post:\n      tags:\n        - DID Exchange\n      summary: Send a did exchange response to the connection with specified id.\n      operationId: DidExchangeSendResponse\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Response Sent\n          content:\n            application/json:\n              schema:\n                properties: {}\n        400:\n          description: Error sending response. This should send a problem report\n          content:\n            application/json:\n              schema:\n                properties: {}\n\n  /agent/command/oob-v2/create-invitation:\n    post:\n      tags:\n        - Out of Band V2\n      summary: Create a new DIDComm V2 out of band invitation\n      operationId: DIDCommV2CreateInvitation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  type: object\n                  properties:\n                    goal-code:\n                      $ref: \"#/components/schemas/GoalCode\"\n      responses:\n        200:\n          description: Invitation created\n          content:\n            application/json:\n              schema:\n                required:\n                  - invitation\n                properties:\n                  invitation:\n                    $ref: \"#/components/schemas/DIDCommV2Invitation\"\n  /agent/command/oob-v2/accept-invitation:\n    post:\n      tags:\n        - Out of Band V2\n      summary: Accept a DIDComm V2 out of band invitation\n      operationId: DIDCommV2AcceptInvitation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  properties:\n                    invitation:\n                      $ref: \"#/components/schemas/DIDCommV2Invitation\"\n      responses:\n        200:\n          description: Invitation accepted\n          content:\n            application/json:\n              schema:\n                required:\n                  - connection_id\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\n  /agent/command/oob-v2/invitation-connection/{invitationId}:\n    get:\n      tags:\n        - Out of Band V2\n      summary: Get connection ID of new connection created by a response to this invitation.\n      operationId: DIDCommV2GetByInvitationId\n      parameters:\n        - in: path\n          name: invitationId\n          description: The invitation `@id`\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ConnectionId\"\n      responses:\n        200:\n          description: Connection ID\n          content:\n            application/json:\n              schema:\n                required:\n                  - connection_id\n                properties:\n                  connection_id:\n                    $ref: \"#/components/schemas/ConnectionId\"\ncomponents:\n  schemas:\n    ConnectionInvitation:\n      title: Connection Invitation\n      type: object\n      example:\n        {\n          \"@type\": \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\",\n          \"@id\": \"11640bd1-cdc2-45e4-9fcc-43ccc27fc9d4\",\n          \"serviceEndpoint\": \"http://192.168.65.3:9021\",\n          \"recipientKeys\": [\"GqQh9pLeMrE7E2ZxA47GbW4XQuLYsyd1bdfZvxLi7aZ6\"],\n          \"label\": \"aca-py\",\n        }\n    ConnectionId:\n      title: Connection Id\n      example: \"8fb9ea21-d094-4506-86b6-c7c1627d753a\"\n      type: string\n    ThreadId:\n      title: Thread Id\n      example: \"e7280776-5315-4569-8cac-42cae108adfe\"\n      type: string\n    pthid:\n      title: pthid\n      example: \"5a7f69cf-ee3c-4a75-9975-1aa3c28db122\"\n      type: string\n    MediatorId:\n      title: Mediator Id\n      example: \"42cab98c-816c-4dec-8d8b-8da55dadaab9\"\n      type: string\n    SchemaId:\n      title: Schema Id\n      example: \"Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0\"\n      type: string\n    CredentialDefinitionId:\n      title: Credential Definition Id\n      example: \"TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default\"\n      type: string\n    IndyRevocationRegistryId:\n      title: Indy Revocation Registry Id\n      example: \"WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0\"\n      type: string\n    IndyCredentialRevocationId:\n      title: Indy Credential Revocation Id\n      example: \"12345\"\n      type: string\n    ConnectionState:\n      title: Connection State\n      description: All possible connection state values\n      type: string\n      example: invitation\n      enum:\n        - invitation\n        - request\n        - response\n        - active\n    DidExchangeState:\n      title: Did Exchange State\n      description: All possible did exchange state values\n      type: string\n      example: invitation-sent\n      enum:\n        - start\n        - invitation-sent\n        - request-sent\n        - request-received\n        - response-sent\n        - response-received\n        - abandoned\n        - completed\n    OutOfBandInvitation:\n      title: Out of Band Invitation\n      type: object\n      example:\n        {\n          \"@id\": \"f3375429-b116-4224-b55f-563d7ef461f1\",\n          \"@type\": \"https://didcomm.org/out-of-band/1.0/invitation\",\n          \"label\": \"Invitation created by http://host.docker.internal:9042\",\n          \"services\":\n            [\n              {\n                \"id\": \"86548a10-2b2a-47ce-b9cc-5e835e9add50\",\n                \"type\": \"did-communication\",\n                \"recipientKeys\":\n                  [\"did:key:z6MkurAvs5HUdN8ARq8indff9ZvVAHNMqWBEevrc82ydPLNh\"],\n                \"serviceEndpoint\": \"http://host.docker.internal:9041\",\n              },\n            ],\n          \"accept\": [\"didcomm/aip2;env=rfc19\"],\n          \"handshake_protocols\": [\"https://didcomm.org/didexchange/1.0\"],\n        }\n    DIDCommV2Invitation:\n      title: DIDComm V2 Out of Band Invitation\n      type: object\n      example:\n        {\n          \"id\": \"f3375429-b116-4224-b55f-563d7ef461f1\",\n          \"type\": \"https://didcomm.org/out-of-band/2.0/invitation\",\n          \"from\": \"did:orb:example.org:EiCRKRZKozDBAlxpZ0UI2UylXW6AmwSdQfguo0VGeyVKKg\",\n          \"body\": { \"goal-code\": \"streamlined-vc\", \"accept\": [\"didcomm/v2\"] },\n        }\n    GoalCode:\n      title: DIDComm V2 Out of Band Invitation Goal Code\n      type: string\n      example: streamlined-vc\n    Connection:\n      title: Connection\n      example: {}\n      type: object\n    ConnectionResponse:\n      title: Connection Response\n      type: object\n      required:\n        - connection_id\n        - state\n      properties:\n        connection_id:\n          $ref: \"#/components/schemas/ConnectionId\"\n        state:\n          $ref: \"#/components/schemas/ConnectionState\"\n        connection:\n          $ref: \"#/components/schemas/Connection\"\n    DidMethod:\n      title: Did method\n      example: key\n      type: string\n    ProofType:\n      title: Proof type\n      example: Ed25519Signature2018\n      type: string\n    FullDid:\n      title: Fully qualified did\n      example: did:key:z6MkfZfsiVsAy6CgQht7vQVk1dWBnztivjbhxRiKTtTi62PB\n      type: string\n    Did:\n      title: DID\n      example: Y9oNbFNTgxrRuvxQk3xEzr\n      type: string\n    Verkey:\n      title: Verkey\n      example: HymVhRozF7o9Sh9iyKXu5WKHP95YERhrpZxGx5d6WhYw\n      type: string\n    Comment:\n      title: Comment\n      example: Hello World\n      type: string\n    SchemaName:\n      title: Schema Name\n      type: string\n      example: test_schema\n    SchemaVersion:\n      title: Schema Version\n      type: string\n      example: \"1.0.0\"\n    SchemaAttributes:\n      title: Schema Attributes\n      type: array\n      items:\n        type: string\n      example:\n        - attr_1\n        - attr_2\n        - attr_3\n    Schema:\n      title: Schema\n      description: Schema definition\n      type: object\n      example:\n        {\n          \"ver\": \"1.0\",\n          \"id\": \"Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0\",\n          \"name\": \"test_schema\",\n          \"version\": \"1.0.0\",\n          \"attrNames\": [\"attr_1\", \"attr_2\", \"attr_3\"],\n          \"seqNo\": 11,\n        }\n    W3CCredential:\n      title: W3C Verifiable Credential\n      type: object\n      externalDocs:\n        url: https://www.w3.org/TR/vc-data-model/\n      example:\n        {\n          \"@context\":\n            [\n              \"https://www.w3.org/2018/credentials/v1\",\n              \"https://www.w3.org/2018/credentials/examples/v1\",\n            ],\n          \"id\": \"http://example.edu/credentials/1872\",\n          \"type\": [\"VerifiableCredential\", \"AlumniCredential\"],\n          \"issuer\": \"https://example.edu/issuers/565049\",\n          \"issuanceDate\": \"2010-01-01T19:73:24Z\",\n          \"credentialSubject\":\n            {\n              \"id\": \"did:example:ebfeb1f712ebc6f1c276e12ec21\",\n              \"alumniOf\":\n                {\n                  \"id\": \"did:example:c276e12ec21ebfeb1f712ebc6f1\",\n                  \"name\":\n                    [\n                      { \"value\": \"Example University\", \"lang\": \"en\" },\n                      { \"value\": \"Exemple d'Université\", \"lang\": \"fr\" },\n                    ],\n                },\n            },\n          \"proof\":\n            {\n              \"type\": \"RsaSignature2018\",\n              \"created\": \"2017-06-18T21:19:10Z\",\n              \"proofPurpose\": \"assertionMethod\",\n              \"verificationMethod\": \"https://example.edu/issuers/keys/1\",\n              \"jws\":\n                \"eyJhbGciOiJSUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TCYt5X\n                sITJX1CxPCT8yAV-TVkIEq_PbChOMqsLfRoPsnsgw5WEuts01mq-pQy7UJiN5mgRxD-WUc\n                X16dUEMGlv50aqzpqh4Qktb3rk-BuQy72IFLOqV0G_zS245-kronKb78cPN25DGlcTwLtj\n                PAYuNzVBAh4vGHSrQyHUdBBPM\",\n            },\n        }\n    CredentialPreview:\n      title: Credential Preview\n      type: object\n      required:\n        - \"@type\"\n        - attributes\n      properties:\n        \"@type\":\n          type: string\n          enum:\n            - \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\"\n          example: \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\"\n        attributes:\n          type: array\n          items:\n            type: object\n            required:\n              - name\n              - value\n            properties:\n              name:\n                type: string\n              mime-type:\n                type: string\n              value:\n                type: string\n      example:\n        {\n          \"@type\": \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview\",\n          \"attributes\":\n            [\n              { \"name\": \"attr_1\", \"value\": \"value_1\" },\n              { \"name\": \"attr_2\", \"value\": \"value_2\" },\n              { \"name\": \"attr_3\", \"value\": \"10\" },\n            ],\n        }\n    AttachmentFormat:\n      title: Attachment Format\n      type: string\n      example: indy\n      enum:\n        - indy\n        - json-ld\n    IssueCredentialState:\n      title: Issue Credential State\n      description: All possible issue credential state values\n      type: string\n      example: proposal-sent\n      enum:\n        - proposal-sent\n        - proposal-received\n        - offer-sent\n        - offer-received\n        - request-sent\n        - request-received\n        - credential-issued\n        - credential-received\n        - done\n\n    CredentialDefinition:\n      title: Credential Definition\n      type: object\n      example:\n        {\n          \"ver\": \"1.0\",\n          \"id\": \"TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default\",\n          \"schemaId\": \"12\",\n          \"type\": \"CL\",\n          \"tag\": \"default\",\n          \"value\":\n            {\n              \"primary\":\n                {\n                  \"n\": \"127473542495438147573510476102476902133854813754098957204867619522405674317018859941864352419933227338200593131633863547249552725335523634158360861379038920996404174540285309296147612235783265529767167904996672533424299318502061201785710802874714294174143582682739350240229266415073900875507216317608608419590749758007624873612987354273561597672087026667313974344205743513108098303412867935178289607206971675919540105355234142077505442787841104628317493214564810784261197466701597725036470989697050855442369151927195340336984787674149053901429543050018150008478471976322268372173725164950897146486534208375313658743913\",\n                  \"s\": \"65818689269823967224337061200277779392234203780958681071979765611348839168322943966737475112261896111357320138778757065891281921197440097002615498509033425652242864586741386765592821062979097745378937128174004971762786640103105629442159475365159836976073886029307851026908970994829903300109597230301114225997246242679312570675015835522760053319269527084928663538396971295690506335377466402252848447042892658905613203874434705837943677780063921041179819697545228811016183063967989936330561640506841490120102577693339579651117393959310406568508979515298779995407222937217220638869118337307458754771745779882842551583957\",\n                  \"r\":\n                    {\n                      \"attr_2\": \"51288787261098209501918361017434738039396559240181084024072376043981733617197124422285362785531867106205259059511012989265257750815057229625776239902268148159240026351692626846471237370316944382717070664579921786642246297025320221128643932326231901994502071437080527938105845057316611594317815585962995630440264494906187392024263524589040353791190656247954182173035217728619640076109690946048473714974821555775006753553400010494644755834190135206012433445625838647683519920548605994424810625611229251495082321603992265565001261836732982193329161683683007877406661513473331737004850593281692214631901319662119982702922\",\n                      \"attr_3\": \"49181762688290033657446628790584551868718995111464422170653915452393747911840814545440872765372893672471205136395434982292712460522218700053539095558984733806664620823639102136028452144009159713045675694364042524060684443787233750663981609531778189390047496947791414470032823060753313065437518080235878845351585405484399614405394732610591997574454401630571733355205236989435994214291321960467589480432939966179940916409629940016780143983651757105859829934723575147299207641665320314894905208079668584551936316156492573527926041185621509809863665431708246846967753137673120991441299733316834328405117780995288938831960\",\n                      \"master_secret\": \"55538424482357179006904475057212929303648337854551436067860163418580875286658754309614134356521736148588690128194367442517503542151131893353616029898291001113787008415246944257559064252055726634969959428779277791311649310859911986025543178916305739383261726815449892298017969062336790138195201464646418205024584174631846494837622469674261184752618226770681209326126925275817705162548925201642177095627695920338858257041172323289863931904819081634906164566038325643344387794492965878883835475209080317985881686751050847796692787879655322665209901159744163351765059041544796505393057421762647235069315054477528853561473\",\n                      \"attr_1\": \"30886155743965686596111154816080405248462718126264612304549353774874576024335575570672949599223811931464968785591555429018481986959035338465010646916129018856811265590112946954474656478128827689132913637543377270592217574931365985240940393300396509940083648506176813465677576969450791064392913905672340945666537607742715770967118252787128981065813564952993994324545119742090220379288320480251447895567821617698929571634776885837657497224943766401548060195388838088667649983419151624233451714099262934942791309973082062184242430968684229937149556567677716686322793149698990735633517128615499672788711239033452193882997\",\n                    },\n                  \"rctxt\": \"118794108011306418186599966013685417259067451572329168338986396401718511272829290486080995212827126457817056257265484527810068143652813250691318847597106924333754555635689923547896416240741937417433198117397677657367813549201117642415892893893381488036182474297804412028150810635810333104761444058436184382989414463435135399687357899136817489918140316906972132553030427022094507232967240719401668656063683319995507797481327116566453773630750501126563798296642025598222840921566196961717932895723665756200235727569096614264333988899662958311074895571782854329655460918882500227649533684869211196542823703742125337784110\",\n                  \"z\": \"105630626525262054412237755083369001506042501169646719098603962721650276426684319172879455142677137798560163792358891628363088368803209632822777508716551660571988904519705987074094883201485589766095616179828793397893771789008873400971460093284769835475804783847161628863255694379113641839797171437881461956336479878362639116657891310026976287218412427465483710278481629012528677992951433715775723708478290067190705706789707748967166740980626023098110954588495187304096367803794208972671801623501450811525547654409352588261071510140289955775228914918919001173412112332959725654909432886608249741918119912786853133051762\",\n                },\n            },\n        }\n    IssueCredentialOperationResponse:\n      title: Issue Credential Operation Response\n      type: object\n      required:\n        - state\n        - thread_id\n      properties:\n        state:\n          $ref: \"#/components/schemas/IssueCredentialState\"\n        thread_id:\n          $ref: \"#/components/schemas/ThreadId\"\n        credential_id:\n          $ref: \"#/components/schemas/CredentialId\"\n    CredentialId:\n      title: Credential Id\n      example: \"828761d2-65e9-44a5-852e-1f60b943ab65\"\n      type: string\n    PresentProofOperationResponse:\n      title: Present Proof Operation Response\n      type: object\n      required:\n        - state\n        - thread_id\n      properties:\n        state:\n          $ref: \"#/components/schemas/PresentProofState\"\n        thread_id:\n          $ref: \"#/components/schemas/ThreadId\"\n    PresentProofState:\n      title: Present Proof State\n      description: All possible present proof state values\n      type: string\n      example: proposal-sent\n      enum:\n        - proposal-sent\n        - proposal-received\n        - request-sent\n        - request-received\n        - presentation-sent\n        - presentation-received\n        - reject-sent\n        - done\n    PresentationPreview:\n      title: Presentation Preview\n      type: object\n      required:\n        - \"@type\"\n        - attributes\n        - predicates\n      properties:\n        \"@type\":\n          type: string\n          enum:\n            - \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview\"\n          example: \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview\"\n        attributes:\n          type: array\n          items:\n            type: object\n            required:\n              - name\n            properties:\n              name:\n                type: string\n              cred_def_id:\n                $ref: \"#/components/schemas/CredentialDefinitionId\"\n              mime-type:\n                type: string\n              value:\n                type: string\n              referent:\n                type: string\n        predicates:\n          type: array\n          items:\n            type: object\n            required:\n              - name\n              - cred_def_id\n              - predicate\n              - threshold\n            properties:\n              name:\n                type: string\n              cred_def_id:\n                $ref: \"#/components/schemas/CredentialDefinitionId\"\n              predicate:\n                type: string\n                enum:\n                  - \"\u003c\"\n                  - \"\u003c=\"\n                  - \"\u003e=\"\n                  - \"\u003e\"\n              threshold:\n                type: string\n      example:\n        {\n          \"attributes\":\n            [\n              {\n                \"name\": \"attr_1\",\n                \"cred_def_id\": \"TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default\",\n                \"value\": \"value_1\",\n                \"referent\": \"0\",\n              },\n            ],\n          \"predicates\":\n            [\n              {\n                \"name\": \"attr_2\",\n                \"cred_def_id\": \"TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default\",\n                \"predicate\": \"\u003e=\",\n                \"treshold\": \"100\",\n              },\n            ],\n        }\n    PresentationRequestMessage:\n      title: Presentation Request Message\n      externalDocs:\n        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#request-presentation\n      type: object\n      example:\n        {\n          \"comment\": \"This is a comment for the request for presentation.\",\n          \"proof_request\":\n            {\n              \"data\":\n                {\n                  \"requested_attributes\":\n                    {\n                      \"attr_1\":\n                        {\n                          \"name\": \"attr_1\",\n                          \"restrictions\":\n                            [\n                              {\n                                \"schema_name\": \"test_schema\",\n                                \"schema_version\": \"1.0.0\",\n                              },\n                            ],\n                        },\n                    },\n                  \"requested_predicates\":\n                    {\n                      \"attr_3\":\n                        {\n                          \"name\": \"attr_3\",\n                          \"p_type\": \"\u003e\",\n                          \"p_value\": 8,\n                          \"restrictions\":\n                            [\n                              {\n                                \"schema_name\": \"test_schema\",\n                                \"schema_version\": \"1.0.0\",\n                              },\n                            ],\n                        },\n                    },\n                },\n            },\n        }\n    RequestedCredentials:\n      title: Requested Credentials\n      externalDocs:\n        url: https://github.com/hyperledger/indy-sdk/blob/57dcdae74164d1c7aa06f2cccecaae121cefac25/libindy/src/api/anoncreds.rs#L1433-L1445\n      type: object\n      example:\n        {\n          \"requested_attributes\":\n            {\n              \"attr_1\":\n                {\n                  \"revealed\": true,\n                  \"cred_id\": \"828761d2-65e9-44a5-852e-1f60b943ab65\",\n                },\n            },\n          \"requested_predicates\":\n            { \"attr_3\": { \"cred_id\": \"828761d2-65e9-44a5-852e-1f60b943ab65\" } },\n        }\n    PresentProofV2SendRequestIndy:\n      required:\n        - format\n        - data\n      properties:\n        format:\n          enum: [indy]\n          type: string\n        comment:\n          $ref: \"#/components/schemas/Comment\"\n        data:\n          type: object\n          title: Indy Proof Request\n          example:\n            {\n              \"name\": \"Biological Indicator A Proof\",\n              \"requested_attributes\":\n                {\n                  \"bioindicators_attrs\":\n                    {\n                      \"names\": [\"name\"],\n                      \"restrictions\":\n                        [\n                          {\n                            \"schema_name\": \"Schema_Biological_Indicators\",\n                            \"schema_version\": \"0.2.0\",\n                          },\n                        ],\n                    },\n                },\n              \"requested_predicates\":\n                {\n                  \"concentration\":\n                    {\n                      \"name\": \"concentration\",\n                      \"p_type\": \"\u003e\",\n                      \"p_value\": 1,\n                      \"restrictions\":\n                        [\n                          {\n                            \"schema_name\": \"Schema_Biological_Indicators\",\n                            \"schema_version\": \"0.2.0\",\n                          },\n                        ],\n                    },\n                },\n              \"version\": \"0.2.0\",\n            }\n    PresentProofV2SendRequestDIF:\n      required:\n        - format\n        - data\n      properties:\n        format:\n          enum: [json-ld]\n          type: string\n        comment:\n          $ref: \"#/components/schemas/Comment\"\n        data:\n          type: object\n          title: DIF Presentation Definition\n          example:\n            {\n              \"options\":\n                {\n                  \"challenge\": \"9a7e9aa6-9e8f-4b6b-9911-bfec18cfa208\",\n                  \"domain\": \"dajj33j3aj3j\",\n                },\n              \"presentation_definition\":\n                {\n                  \"id\": \"5ab84299-c066-4b34-bcc6-d356aa44c826\",\n                  \"format\":\n                    { \"ldp_vp\": { \"proof_type\": [\"Ed25519Signature2018\"] } },\n                  \"input_descriptors\":\n                    [\n                      {\n                        \"id\": \"citizenship_input_1\",\n                        \"name\": \"EU Driver's License\",\n                        \"schema\":\n                          [\n                            {\n                              \"uri\": \"https://www.w3.org/2018/credentials#VerifiableCredential\",\n                            },\n                            {\n                              \"uri\": \"https://w3id.org/citizenship#PermanentResident\",\n                            },\n                          ],\n                        \"constraints\":\n                          {\n                            \"fields\":\n                              [\n                                {\n                                  \"path\": [\"$.credentialSubject.familyName\"],\n                                  \"purpose\": \"Just making sure your family name is Smith\",\n                                  \"filter\":\n                                    { \"type\": \"string\", \"const\": \"SMITH\" },\n                                },\n                                {\n                                  \"path\": [\"$.credentialSubject.givenName\"],\n                                  \"purpose\": \"We also want to know your first name\",\n                                },\n                              ],\n                          },\n                      },\n                    ],\n                },\n            }\n    IssueCredentialV2AttachFormatLdProofDetail:\n      type: object\n      example:\n        {\n          \"credential\":\n            {\n              \"@context\":\n                [\n                  \"https://www.w3.org/2018/credentials/v1\",\n                  \"https://w3id.org/security/bbs/v1\",\n                  {\n                    \"dl\": \"http://example.com/drivers-license#\",\n                    \"AATHDriversLicense\": \"dl:AATHDriversLicense\",\n                    \"address\": \"dl:address\",\n                    \"DL_number\": \"dl:DL_number\",\n                    \"expiry\": \"dl:expiry\",\n                    \"age\": \"dl:age\",\n                  },\n                ],\n              \"type\": [\"VerifiableCredential\", \"AATHDriversLicense\"],\n              \"issuer\": \"did:key:z6MkfZfsiVsAy6CgQht7vQVk1dWBnztivjbhxRiKTtTi62PB\",\n              \"issuanceDate\": \"2010-01-01T19:73:24Z\",\n              \"credentialSubject\":\n                {\n                  \"address\": \"947 this street, Kingston Ontario Canada, K9O 3R5\",\n                  \"DL_number\": \"09385029529385\",\n                  \"expiry\": \"10/12/2022\",\n                  \"age\": \"30\",\n                },\n            },\n          \"options\": { \"proofType\": \"Ed25519Signature2018\" },\n        }\n    IssueCredentialV2AttachFormatIndyCredFilter:\n      type: object\n      properties:\n        schema_issuer_did:\n          $ref: \"#/components/schemas/Did\"\n        schema_id:\n          $ref: \"#/components/schemas/SchemaId\"\n        schema_name:\n          $ref: \"#/components/schemas/SchemaName\"\n        schema_version:\n          $ref: \"#/components/schemas/SchemaVersion\"\n        cred_def_id:\n          $ref: \"#/components/schemas/CredentialDefinitionId\"\n        issuer_did:\n          $ref: \"#/components/schemas/Did\"\n    IssueCredentialV2CredentialProposalFilter:\n      title: Issue Credential V2 Credential Proposal Filter\n      properties:\n        indy:\n          $ref: \"#/components/schemas/IssueCredentialV2AttachFormatIndyCredFilter\"\n        json-ld:\n          $ref: \"#/components/schemas/IssueCredentialV2AttachFormatLdProofDetail\"\n\n    CoordinateMediationState:\n      title: Coordinate Mediation State\n      description: All possible coordinate mediation state values\n      type: string\n      example: request-sent\n      enum:\n        - request-sent\n        - request-received\n        - grant-sent\n        - grant-received\n        - deny-sent\n        - deny-received\n    CoordinateMediationOperationResponse:\n      title: Coordinate Mediation Operation Response\n      type: object\n      required:\n        - connection_id\n        - state\n      properties:\n        connection_id:\n          $ref: \"#/components/schemas/ConnectionId\"\n        state:\n          $ref: \"#/components/schemas/CoordinateMediationState\"\n",
			"canonicalURL": "/github.com/hyperledger/aries-agent-test-harness@2d0544077a78c2a44fba671d7f1964998628cbe9/-/blob/docs/assets/openapi-spec.yml",
			"externalURLs": [
				{
					"url": "https://github.com/hyperledger/aries-agent-test-harness/blob/2d0544077a78c2a44fba671d7f1964998628cbe9/docs/assets/openapi-spec.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/agent/command/connection/accept-invitation\": post: responses: code 200: contents: media: \"application/json\": generate schema: field state: allOf: schema type mismatch: string and "
}