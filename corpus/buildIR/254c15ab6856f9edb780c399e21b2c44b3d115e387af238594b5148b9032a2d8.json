{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/iot-jobs-data/2017-09-29/openapi.yaml",
			"byteSize": 30849,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2017-09-29'\n  x-release: v4\n  title: AWS IoT Jobs Data Plane\n  description: '\u003cp\u003eAWS IoT Jobs is a service that allows you to define a set of jobs â€” remote operations that are sent to and executed on one or more devices connected to AWS IoT. For example, you can define a job that instructs a set of devices to download and install application or firmware updates, reboot, rotate certificates, or perform remote troubleshooting operations.\u003c/p\u003e \u003cp\u003e To create a job, you make a job document which is a description of the remote operations to be performed, and you specify a list of targets that should perform the operations. The targets can be individual things, thing groups or both.\u003c/p\u003e \u003cp\u003e AWS IoT Jobs sends a message to inform the targets that a job is available. The target starts the execution of the job by downloading the job document, performing the operations it specifies, and reporting its progress to AWS IoT. The Jobs service provides commands to track the progress of a job on a specific target and for all the targets of the job\u003c/p\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: iot-jobs-data\n  x-aws-signingName: iot-jobs-data\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-jobs-data-2017-09-29.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/iot/'\nservers:\n  - url: 'http://data.jobs.iot.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS IoT Jobs Data Plane multi-region endpoint\n  - url: 'https://data.jobs.iot.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS IoT Jobs Data Plane multi-region endpoint\n  - url: 'http://data.jobs.iot.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT Jobs Data Plane endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://data.jobs.iot.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT Jobs Data Plane endpoint for China (Beijing) and China (Ningxia)\npaths:\n  '/things/{thingName}/jobs/{jobId}':\n    get:\n      operationId: DescribeJobExecution\n      description: Gets details of a job execution.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeJobExecutionResponse'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: CertificateValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateValidationException'\n        '485':\n          description: TerminalStateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TerminalStateException'\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          description: The unique identifier assigned to this job when it was created.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9_-]+|^\\$next'\n        - name: thingName\n          in: path\n          required: true\n          description: The thing name associated with the device the job execution is running on.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9:_-]+'\n            minLength: 1\n            maxLength: 128\n        - name: includeJobDocument\n          in: query\n          required: false\n          description: 'Optional. When set to true, the response contains the job document. The default is false.'\n          schema:\n            type: boolean\n        - name: executionNumber\n          in: query\n          required: false\n          description: 'Optional. A number that identifies a particular job execution on a particular device. If not specified, the latest job execution is returned.'\n          schema:\n            type: integer\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: UpdateJobExecution\n      description: Updates the status of a job execution.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateJobExecutionResponse'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: CertificateValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateValidationException'\n        '485':\n          description: InvalidStateTransitionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidStateTransitionException'\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          description: The unique identifier assigned to this job when it was created.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9_-]+'\n            minLength: 1\n            maxLength: 64\n        - name: thingName\n          in: path\n          required: true\n          description: The name of the thing associated with the device.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9:_-]+'\n            minLength: 1\n            maxLength: 128\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - status\n              properties:\n                status:\n                  description: 'The new status for the job execution (IN_PROGRESS, FAILED, SUCCESS, or REJECTED). This must be specified on every update.'\n                  type: string\n                  enum:\n                    - QUEUED\n                    - IN_PROGRESS\n                    - SUCCEEDED\n                    - FAILED\n                    - TIMED_OUT\n                    - REJECTED\n                    - REMOVED\n                    - CANCELED\n                statusDetails:\n                  description: ' Optional. A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.'\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/DetailsValue'\n                stepTimeoutInMinutes:\n                  description: 'Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by again calling \u003ccode\u003eUpdateJobExecution\u003c/code\u003e, setting the status to \u003ccode\u003eIN_PROGRESS\u003c/code\u003e and specifying a new timeout value in this field) the job execution status will be automatically set to \u003ccode\u003eTIMED_OUT\u003c/code\u003e. Note that setting or resetting this timeout has no effect on that job execution timeout which may have been specified when the job was created (\u003ccode\u003eCreateJob\u003c/code\u003e using field \u003ccode\u003etimeoutConfig\u003c/code\u003e).'\n                  type: integer\n                expectedVersion:\n                  description: 'Optional. The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)'\n                  type: integer\n                includeJobExecutionState:\n                  description: 'Optional. When included and set to true, the response contains the JobExecutionState data. The default is false.'\n                  type: boolean\n                includeJobDocument:\n                  description: 'Optional. When set to true, the response contains the job document. The default is false.'\n                  type: boolean\n                executionNumber:\n                  description: Optional. A number that identifies a particular job execution on a particular device.\n                  type: integer\n  '/things/{thingName}/jobs':\n    get:\n      operationId: GetPendingJobExecutions\n      description: Gets the list of all jobs for a thing that are not in a terminal status.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPendingJobExecutionsResponse'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: CertificateValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateValidationException'\n      parameters:\n        - name: thingName\n          in: path\n          required: true\n          description: The name of the thing that is executing the job.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9:_-]+'\n            minLength: 1\n            maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/things/{thingName}/jobs/$next':\n    put:\n      operationId: StartNextPendingJobExecution\n      description: Gets and starts the next pending (status IN_PROGRESS or QUEUED) job execution for a thing.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartNextPendingJobExecutionResponse'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: CertificateValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateValidationException'\n      parameters:\n        - name: thingName\n          in: path\n          required: true\n          description: The name of the thing associated with the device.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9:_-]+'\n            minLength: 1\n            maxLength: 128\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                statusDetails:\n                  description: 'A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.'\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/DetailsValue'\n                stepTimeoutInMinutes:\n                  description: 'Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by calling \u003ccode\u003eUpdateJobExecution\u003c/code\u003e, setting the status to \u003ccode\u003eIN_PROGRESS\u003c/code\u003e and specifying a new timeout value in field \u003ccode\u003estepTimeoutInMinutes\u003c/code\u003e) the job execution status will be automatically set to \u003ccode\u003eTIMED_OUT\u003c/code\u003e. Note that setting this timeout has no effect on that job execution timeout which may have been specified when the job was created (\u003ccode\u003eCreateJob\u003c/code\u003e using field \u003ccode\u003etimeoutConfig\u003c/code\u003e).'\n                  type: integer\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    DescribeJobExecutionResponse:\n      type: object\n      properties:\n        execution:\n          allOf:\n            - $ref: '#/components/schemas/JobExecution'\n            - description: Contains data about a job execution.\n    InvalidRequestException: {}\n    ResourceNotFoundException: {}\n    ThrottlingException: {}\n    ServiceUnavailableException: {}\n    CertificateValidationException: {}\n    TerminalStateException: {}\n    GetPendingJobExecutionsResponse:\n      type: object\n      properties:\n        inProgressJobs:\n          allOf:\n            - $ref: '#/components/schemas/JobExecutionSummaryList'\n            - description: A list of JobExecutionSummary objects with status IN_PROGRESS.\n        queuedJobs:\n          allOf:\n            - $ref: '#/components/schemas/JobExecutionSummaryList'\n            - description: A list of JobExecutionSummary objects with status QUEUED.\n    StartNextPendingJobExecutionResponse:\n      type: object\n      properties:\n        execution:\n          allOf:\n            - $ref: '#/components/schemas/JobExecution'\n            - description: A JobExecution object.\n    DetailsValue:\n      type: string\n      pattern: '[^\\p\\{C\\}]*\\+'\n      minLength: 1\n      maxLength: 1024\n    UpdateJobExecutionResponse:\n      type: object\n      properties:\n        executionState:\n          allOf:\n            - $ref: '#/components/schemas/JobExecutionState'\n            - description: A JobExecutionState object.\n        jobDocument:\n          allOf:\n            - $ref: '#/components/schemas/JobDocument'\n            - description: The contents of the Job Documents.\n    InvalidStateTransitionException: {}\n    ApproximateSecondsBeforeTimedOut:\n      type: integer\n    DescribeJobExecutionJobId:\n      type: string\n      pattern: '[a-zA-Z0-9_-]+|^\\$next'\n    ThingName:\n      type: string\n      pattern: '[a-zA-Z0-9:_-]+'\n      minLength: 1\n      maxLength: 128\n    IncludeJobDocument:\n      type: boolean\n    ExecutionNumber:\n      type: integer\n    DescribeJobExecutionRequest:\n      type: object\n      title: DescribeJobExecutionRequest\n      properties: {}\n    JobExecution:\n      type: object\n      properties:\n        jobId:\n          allOf:\n            - $ref: '#/components/schemas/JobId'\n            - description: The unique identifier you assigned to this job when it was created.\n        thingName:\n          allOf:\n            - $ref: '#/components/schemas/ThingName'\n            - description: The name of the thing that is executing the job.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/JobExecutionStatus'\n            - description: 'The status of the job execution. Can be one of: \"QUEUED\", \"IN_PROGRESS\", \"FAILED\", \"SUCCESS\", \"CANCELED\", \"REJECTED\", or \"REMOVED\".'\n        statusDetails:\n          allOf:\n            - $ref: '#/components/schemas/DetailsMap'\n            - description: A collection of name/value pairs that describe the status of the job execution.\n        queuedAt:\n          allOf:\n            - $ref: '#/components/schemas/QueuedAt'\n            - description: 'The time, in milliseconds since the epoch, when the job execution was enqueued.'\n        startedAt:\n          allOf:\n            - $ref: '#/components/schemas/StartedAt'\n            - description: 'The time, in milliseconds since the epoch, when the job execution was started.'\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdatedAt'\n            - description: 'The time, in milliseconds since the epoch, when the job execution was last updated. '\n        approximateSecondsBeforeTimedOut:\n          allOf:\n            - $ref: '#/components/schemas/ApproximateSecondsBeforeTimedOut'\n            - description: The estimated number of seconds that remain before the job execution status will be changed to \u003ccode\u003eTIMED_OUT\u003c/code\u003e.\n        versionNumber:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: The version of the job execution. Job execution versions are incremented each time they are updated by a device.\n        executionNumber:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionNumber'\n            - description: A number that identifies a particular job execution on a particular device. It can be used later in commands that return or update job execution information.\n        jobDocument:\n          allOf:\n            - $ref: '#/components/schemas/JobDocument'\n            - description: The content of the job document.\n      description: Contains data about a job execution.\n    DetailsKey:\n      type: string\n      pattern: '[a-zA-Z0-9:_-]+'\n      minLength: 1\n      maxLength: 128\n    DetailsMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/DetailsValue'\n    ExpectedVersion:\n      type: integer\n    GetPendingJobExecutionsRequest:\n      type: object\n      title: GetPendingJobExecutionsRequest\n      properties: {}\n    JobExecutionSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/JobExecutionSummary'\n    IncludeExecutionState:\n      type: boolean\n    JobDocument:\n      type: string\n      maxLength: 32768\n    JobId:\n      type: string\n      pattern: '[a-zA-Z0-9_-]+'\n      minLength: 1\n      maxLength: 64\n    JobExecutionStatus:\n      type: string\n      enum:\n        - QUEUED\n        - IN_PROGRESS\n        - SUCCEEDED\n        - FAILED\n        - TIMED_OUT\n        - REJECTED\n        - REMOVED\n        - CANCELED\n    QueuedAt:\n      type: integer\n    StartedAt:\n      type: integer\n    LastUpdatedAt:\n      type: integer\n    VersionNumber:\n      type: integer\n    JobExecutionState:\n      type: object\n      properties:\n        status:\n          allOf:\n            - $ref: '#/components/schemas/JobExecutionStatus'\n            - description: 'The status of the job execution. Can be one of: \"QUEUED\", \"IN_PROGRESS\", \"FAILED\", \"SUCCESS\", \"CANCELED\", \"REJECTED\", or \"REMOVED\".'\n        statusDetails:\n          allOf:\n            - $ref: '#/components/schemas/DetailsMap'\n            - description: A collection of name/value pairs that describe the status of the job execution.\n        versionNumber:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: The version of the job execution. Job execution versions are incremented each time they are updated by a device.\n      description: Contains data about the state of a job execution.\n    JobExecutionSummary:\n      type: object\n      properties:\n        jobId:\n          allOf:\n            - $ref: '#/components/schemas/JobId'\n            - description: The unique identifier you assigned to this job when it was created.\n        queuedAt:\n          allOf:\n            - $ref: '#/components/schemas/QueuedAt'\n            - description: 'The time, in milliseconds since the epoch, when the job execution was enqueued.'\n        startedAt:\n          allOf:\n            - $ref: '#/components/schemas/StartedAt'\n            - description: 'The time, in milliseconds since the epoch, when the job execution started.'\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdatedAt'\n            - description: 'The time, in milliseconds since the epoch, when the job execution was last updated.'\n        versionNumber:\n          allOf:\n            - $ref: '#/components/schemas/VersionNumber'\n            - description: The version of the job execution. Job execution versions are incremented each time AWS IoT Jobs receives an update from a device.\n        executionNumber:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionNumber'\n            - description: A number that identifies a particular job execution on a particular device.\n      description: Contains a subset of information about a job execution.\n    StepTimeoutInMinutes:\n      type: integer\n    StartNextPendingJobExecutionRequest:\n      type: object\n      title: StartNextPendingJobExecutionRequest\n      properties:\n        statusDetails:\n          allOf:\n            - $ref: '#/components/schemas/DetailsMap'\n            - description: 'A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.'\n        stepTimeoutInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/StepTimeoutInMinutes'\n            - description: 'Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by calling \u003ccode\u003eUpdateJobExecution\u003c/code\u003e, setting the status to \u003ccode\u003eIN_PROGRESS\u003c/code\u003e and specifying a new timeout value in field \u003ccode\u003estepTimeoutInMinutes\u003c/code\u003e) the job execution status will be automatically set to \u003ccode\u003eTIMED_OUT\u003c/code\u003e. Note that setting this timeout has no effect on that job execution timeout which may have been specified when the job was created (\u003ccode\u003eCreateJob\u003c/code\u003e using field \u003ccode\u003etimeoutConfig\u003c/code\u003e).'\n    UpdateJobExecutionRequest:\n      type: object\n      required:\n        - status\n      title: UpdateJobExecutionRequest\n      properties:\n        status:\n          allOf:\n            - $ref: '#/components/schemas/JobExecutionStatus'\n            - description: 'The new status for the job execution (IN_PROGRESS, FAILED, SUCCESS, or REJECTED). This must be specified on every update.'\n        statusDetails:\n          allOf:\n            - $ref: '#/components/schemas/DetailsMap'\n            - description: ' Optional. A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.'\n        stepTimeoutInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/StepTimeoutInMinutes'\n            - description: 'Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by again calling \u003ccode\u003eUpdateJobExecution\u003c/code\u003e, setting the status to \u003ccode\u003eIN_PROGRESS\u003c/code\u003e and specifying a new timeout value in this field) the job execution status will be automatically set to \u003ccode\u003eTIMED_OUT\u003c/code\u003e. Note that setting or resetting this timeout has no effect on that job execution timeout which may have been specified when the job was created (\u003ccode\u003eCreateJob\u003c/code\u003e using field \u003ccode\u003etimeoutConfig\u003c/code\u003e).'\n        expectedVersion:\n          allOf:\n            - $ref: '#/components/schemas/ExpectedVersion'\n            - description: 'Optional. The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)'\n        includeJobExecutionState:\n          allOf:\n            - $ref: '#/components/schemas/IncludeExecutionState'\n            - description: 'Optional. When included and set to true, the response contains the JobExecutionState data. The default is false.'\n        includeJobDocument:\n          allOf:\n            - $ref: '#/components/schemas/IncludeJobDocument'\n            - description: 'Optional. When set to true, the response contains the job document. The default is false.'\n        executionNumber:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionNumber'\n            - description: Optional. A number that identifies a particular job execution on a particular device.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/amazonaws.com/iot-jobs-data/2017-09-29/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/amazonaws.com/iot-jobs-data/2017-09-29/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/things/{thingName}/jobs\": get: responses: 200: contents: application/json: generate schema: field inProgressJobs: allOf: schema type mismatch: array and "
}