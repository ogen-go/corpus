{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dropbox/incubator-superset-internal"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "docs/static/resources/openapi.json",
			"byteSize": 394633,
			"content": "{\n  \"components\": {\n    \"responses\": {\n      \"400\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"message\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"Bad request\"\n      },\n      \"401\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"message\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"Unauthorized\"\n      },\n      \"403\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"message\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"Forbidden\"\n      },\n      \"404\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"message\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"Not found\"\n      },\n      \"422\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"message\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"Could not process entity\"\n      },\n      \"500\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"message\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"Fatal error\"\n      }\n    },\n    \"schemas\": {\n      \"AnnotationLayer\": {\n        \"properties\": {\n          \"annotationType\": {\n            \"description\": \"Type of annotation layer\",\n            \"enum\": [\"FORMULA\", \"INTERVAL\", \"EVENT\", \"TIME_SERIES\"],\n            \"type\": \"string\"\n          },\n          \"color\": {\n            \"description\": \"Layer color\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"descriptionColumns\": {\n            \"description\": \"Columns to use as the description. If none are provided, all will be shown.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"hideLine\": {\n            \"description\": \"Should line be hidden. Only applies to line annotations\",\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"intervalEndColumn\": {\n            \"description\": \"Column containing end of interval. Only applies to interval layers\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"Name of layer\",\n            \"type\": \"string\"\n          },\n          \"opacity\": {\n            \"description\": \"Opacity of layer\",\n            \"enum\": [\"\", \"opacityLow\", \"opacityMedium\", \"opacityHigh\"],\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"overrides\": {\n            \"additionalProperties\": {\n              \"nullable\": true\n            },\n            \"description\": \"which properties should be overridable\",\n            \"nullable\": true,\n            \"type\": \"object\"\n          },\n          \"show\": {\n            \"description\": \"Should the layer be shown\",\n            \"type\": \"boolean\"\n          },\n          \"showMarkers\": {\n            \"description\": \"Should markers be shown. Only applies to line annotations.\",\n            \"type\": \"boolean\"\n          },\n          \"sourceType\": {\n            \"description\": \"Type of source for annotation data\",\n            \"enum\": [\"\", \"line\", \"NATIVE\", \"table\"],\n            \"type\": \"string\"\n          },\n          \"style\": {\n            \"description\": \"Line style. Only applies to time-series annotations\",\n            \"enum\": [\"dashed\", \"dotted\", \"solid\", \"longDashed\"],\n            \"type\": \"string\"\n          },\n          \"timeColumn\": {\n            \"description\": \"Column with event date or interval start date\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"titleColumn\": {\n            \"description\": \"Column with title\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"description\": \"For formula annotations, this contains the formula. For other types, this is the primary key of the source object.\"\n          },\n          \"width\": {\n            \"description\": \"Width of annotation line\",\n            \"format\": \"float\",\n            \"minimum\": 0,\n            \"type\": \"number\"\n          }\n        },\n        \"required\": [\"name\", \"show\", \"showMarkers\", \"value\"],\n        \"type\": \"object\"\n      },\n      \"AnnotationLayerRestApi.get\": {\n        \"properties\": {\n          \"descr\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AnnotationLayerRestApi.get_list\": {\n        \"properties\": {\n          \"changed_by\": {\n            \"$ref\": \"#/components/schemas/Meta4\"\n          },\n          \"changed_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"changed_on_delta_humanized\": {\n            \"readOnly\": true\n          },\n          \"created_by\": {\n            \"$ref\": \"#/components/schemas/Meta3\"\n          },\n          \"created_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"descr\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AnnotationLayerRestApi.post\": {\n        \"properties\": {\n          \"descr\": {\n            \"description\": \"Give a description for this annotation layer\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"The annotation layer name\",\n            \"maxLength\": 250,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AnnotationLayerRestApi.put\": {\n        \"properties\": {\n          \"descr\": {\n            \"description\": \"Give a description for this annotation layer\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"The annotation layer name\",\n            \"maxLength\": 250,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AnnotationRestApi.get\": {\n        \"properties\": {\n          \"end_dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"json_metadata\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"layer\": {\n            \"$ref\": \"#/components/schemas/Meta2\"\n          },\n          \"long_descr\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"short_descr\": {\n            \"maxLength\": 500,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"start_dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"layer\"],\n        \"type\": \"object\"\n      },\n      \"AnnotationRestApi.get_list\": {\n        \"properties\": {\n          \"changed_by\": {\n            \"$ref\": \"#/components/schemas/Meta1\"\n          },\n          \"changed_on_delta_humanized\": {\n            \"readOnly\": true\n          },\n          \"created_by\": {\n            \"$ref\": \"#/components/schemas/Meta\"\n          },\n          \"end_dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"long_descr\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"short_descr\": {\n            \"maxLength\": 500,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"start_dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AnnotationRestApi.post\": {\n        \"properties\": {\n          \"end_dttm\": {\n            \"description\": \"The annotation end date time\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"json_metadata\": {\n            \"description\": \"JSON metadata\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"long_descr\": {\n            \"description\": \"A long description\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"short_descr\": {\n            \"description\": \"A short description\",\n            \"maxLength\": 500,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"start_dttm\": {\n            \"description\": \"The annotation start date time\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AnnotationRestApi.put\": {\n        \"properties\": {\n          \"end_dttm\": {\n            \"description\": \"The annotation end date time\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"json_metadata\": {\n            \"description\": \"JSON metadata\",\n            \"type\": \"string\"\n          },\n          \"long_descr\": {\n            \"description\": \"A long description\",\n            \"type\": \"string\"\n          },\n          \"short_descr\": {\n            \"description\": \"A short description\",\n            \"maxLength\": 500,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"start_dttm\": {\n            \"description\": \"The annotation start date time\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CacheInvalidationRequestSchema\": {\n        \"properties\": {\n          \"datasource_uids\": {\n            \"description\": \"The uid of the dataset/datasource this new chart will use. A complete datasource identification needs `datasouce_uid` \",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"datasources\": {\n            \"description\": \"A list of the data source and database names\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Datasource\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CacheRestApi.get\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CacheRestApi.get_list\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CacheRestApi.post\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CacheRestApi.put\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartCacheScreenshotResponseSchema\": {\n        \"properties\": {\n          \"cache_key\": {\n            \"description\": \"The cache key\",\n            \"type\": \"string\"\n          },\n          \"chart_url\": {\n            \"description\": \"The url to render the chart\",\n            \"type\": \"string\"\n          },\n          \"image_url\": {\n            \"description\": \"The url to fetch the screenshot\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartDataAdhocMetricSchema\": {\n        \"properties\": {\n          \"aggregate\": {\n            \"description\": \"Aggregation operator. Only required for simple expression types.\",\n            \"enum\": [\"AVG\", \"COUNT\", \"COUNT_DISTINCT\", \"MAX\", \"MIN\", \"SUM\"],\n            \"type\": \"string\"\n          },\n          \"column\": {\n            \"$ref\": \"#/components/schemas/ChartDataColumn\"\n          },\n          \"expressionType\": {\n            \"description\": \"Simple or SQL metric\",\n            \"enum\": [\"SIMPLE\", \"SQL\"],\n            \"example\": \"SQL\",\n            \"type\": \"string\"\n          },\n          \"hasCustomLabel\": {\n            \"description\": \"When false, the label will be automatically generated based on the aggregate expression. When true, a custom label has to be specified.\",\n            \"example\": true,\n            \"type\": \"boolean\"\n          },\n          \"label\": {\n            \"description\": \"Label for the metric. Is automatically generated unless hasCustomLabel is true, in which case label must be defined.\",\n            \"example\": \"Weighted observations\",\n            \"type\": \"string\"\n          },\n          \"optionName\": {\n            \"description\": \"Unique identifier. Can be any string value, as long as all metrics have a unique identifier. If undefined, a random name will be generated.\",\n            \"example\": \"metric_aec60732-fac0-4b17-b736-93f1a5c93e30\",\n            \"type\": \"string\"\n          },\n          \"sqlExpression\": {\n            \"description\": \"The metric as defined by a SQL aggregate expression. Only required for SQL expression type.\",\n            \"example\": \"SUM(weight * observations) / SUM(weight)\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"expressionType\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataAggregateOptionsSchema\": {\n        \"properties\": {\n          \"aggregates\": {\n            \"description\": \"The keys are the name of the aggregate column to be created, and the values specify the details of how to apply the aggregation. If an operator requires additional options, these can be passed here to be unpacked in the operator call. The following numpy operators are supported: average, argmin, argmax, cumsum, cumprod, max, mean, median, nansum, nanmin, nanmax, nanmean, nanmedian, min, percentile, prod, product, std, sum, var. Any options required by the operator can be passed to the `options` object.\\n\\nIn the example, a new column `first_quantile` is created based on values in the column `my_col` using the `percentile` operator with the `q=0.25` parameter.\",\n            \"example\": {\n              \"first_quantile\": {\n                \"column\": \"my_col\",\n                \"operator\": \"percentile\",\n                \"options\": {\n                  \"q\": 0.25\n                }\n              }\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartDataAsyncResponseSchema\": {\n        \"properties\": {\n          \"channel_id\": {\n            \"description\": \"Unique session async channel ID\",\n            \"type\": \"string\"\n          },\n          \"job_id\": {\n            \"description\": \"Unique async job ID\",\n            \"type\": \"string\"\n          },\n          \"result_url\": {\n            \"description\": \"Unique result URL for fetching async query data\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"description\": \"Status value for async job\",\n            \"type\": \"string\"\n          },\n          \"user_id\": {\n            \"description\": \"Requesting user ID\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartDataBoxplotOptionsSchema\": {\n        \"properties\": {\n          \"groupby\": {\n            \"items\": {\n              \"description\": \"Columns by which to group the query.\",\n              \"type\": \"string\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"metrics\": {\n            \"description\": \"Aggregate expressions. Metrics can be passed as both references to datasource metrics (strings), or ad-hoc metricswhich are defined only within the query object. See `ChartDataAdhocMetricSchema` for the structure of ad-hoc metrics.\",\n            \"items\": {},\n            \"type\": \"array\"\n          },\n          \"percentiles\": {\n            \"description\": \"Upper and lower percentiles for percentile whisker type.\",\n            \"example\": [1, 99]\n          },\n          \"whisker_type\": {\n            \"description\": \"Whisker type. Any numpy function will work.\",\n            \"enum\": [\"tukey\", \"min/max\", \"percentile\"],\n            \"example\": \"tukey\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"whisker_type\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataColumn\": {\n        \"properties\": {\n          \"column_name\": {\n            \"description\": \"The name of the target column\",\n            \"example\": \"mycol\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"description\": \"Type of target column\",\n            \"example\": \"BIGINT\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartDataContributionOptionsSchema\": {\n        \"properties\": {\n          \"orientation\": {\n            \"description\": \"Should cell values be calculated across the row or column.\",\n            \"enum\": [\"row\", \"column\"],\n            \"example\": \"row\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"orientation\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataDatasource\": {\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Datasource id\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"description\": \"Datasource type\",\n            \"enum\": [\"druid\", \"table\"],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"id\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataExtras\": {\n        \"properties\": {\n          \"druid_time_origin\": {\n            \"description\": \"Starting point for time grain counting on legacy Druid datasources. Used to change e.g. Monday/Sunday first-day-of-week.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"having\": {\n            \"description\": \"HAVING clause to be added to aggregate queries using AND operator.\",\n            \"type\": \"string\"\n          },\n          \"having_druid\": {\n            \"description\": \"HAVING filters to be added to legacy Druid datasource queries.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChartDataFilter\"\n            },\n            \"type\": \"array\"\n          },\n          \"relative_end\": {\n            \"description\": \"End time for relative time deltas. Default: `config[\\\"DEFAULT_RELATIVE_START_TIME\\\"]`\",\n            \"enum\": [\"today\", \"now\"],\n            \"type\": \"string\"\n          },\n          \"relative_start\": {\n            \"description\": \"Start time for relative time deltas. Default: `config[\\\"DEFAULT_RELATIVE_START_TIME\\\"]`\",\n            \"enum\": [\"today\", \"now\"],\n            \"type\": \"string\"\n          },\n          \"time_grain_sqla\": {\n            \"description\": \"To what level of granularity should the temporal column be aggregated. Supports [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Durations) durations.\",\n            \"enum\": [\n              \"PT1S\",\n              \"PT5S\",\n              \"PT30S\",\n              \"PT1M\",\n              \"PT5M\",\n              \"PT10M\",\n              \"PT15M\",\n              \"PT30M\",\n              \"PT1H\",\n              \"PT6H\",\n              \"P1D\",\n              \"P1W\",\n              \"P1M\",\n              \"P3M\",\n              \"P1Y\",\n              \"1969-12-28T00:00:00Z/P1W\",\n              \"1969-12-29T00:00:00Z/P1W\",\n              \"P1W/1970-01-03T00:00:00Z\",\n              \"P1W/1970-01-04T00:00:00Z\"\n            ],\n            \"example\": \"P1D\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"time_range_endpoints\": {\n            \"items\": {},\n            \"type\": \"array\"\n          },\n          \"where\": {\n            \"description\": \"WHERE clause to be added to queries using AND operator.\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartDataFilter\": {\n        \"properties\": {\n          \"col\": {\n            \"description\": \"The column to filter.\",\n            \"example\": \"country\",\n            \"type\": \"string\"\n          },\n          \"op\": {\n            \"description\": \"The comparison operator.\",\n            \"enum\": [\n              \"==\",\n              \"!=\",\n              \"\u003e\",\n              \"\u003c\",\n              \"\u003e=\",\n              \"\u003c=\",\n              \"LIKE\",\n              \"ILIKE\",\n              \"IS NULL\",\n              \"IS NOT NULL\",\n              \"IN\",\n              \"NOT IN\",\n              \"REGEX\",\n              \"IS TRUE\",\n              \"IS FALSE\"\n            ],\n            \"example\": \"IN\",\n            \"type\": \"string\"\n          },\n          \"val\": {\n            \"description\": \"The value or values to compare against. Can be a string, integer, decimal or list, depending on the operator.\",\n            \"example\": [\"China\", \"France\", \"Japan\"]\n          }\n        },\n        \"required\": [\"col\", \"op\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataGeodeticParseOptionsSchema\": {\n        \"properties\": {\n          \"altitude\": {\n            \"description\": \"Name of target column for decoded altitude. If omitted, altitude information in geodetic string is ignored.\",\n            \"type\": \"string\"\n          },\n          \"geodetic\": {\n            \"description\": \"Name of source column containing geodetic point strings\",\n            \"type\": \"string\"\n          },\n          \"latitude\": {\n            \"description\": \"Name of target column for decoded latitude\",\n            \"type\": \"string\"\n          },\n          \"longitude\": {\n            \"description\": \"Name of target column for decoded longitude\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"geodetic\", \"latitude\", \"longitude\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataGeohashDecodeOptionsSchema\": {\n        \"properties\": {\n          \"geohash\": {\n            \"description\": \"Name of source column containing geohash string\",\n            \"type\": \"string\"\n          },\n          \"latitude\": {\n            \"description\": \"Name of target column for decoded latitude\",\n            \"type\": \"string\"\n          },\n          \"longitude\": {\n            \"description\": \"Name of target column for decoded longitude\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"geohash\", \"latitude\", \"longitude\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataGeohashEncodeOptionsSchema\": {\n        \"properties\": {\n          \"geohash\": {\n            \"description\": \"Name of target column for encoded geohash string\",\n            \"type\": \"string\"\n          },\n          \"latitude\": {\n            \"description\": \"Name of source latitude column\",\n            \"type\": \"string\"\n          },\n          \"longitude\": {\n            \"description\": \"Name of source longitude column\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"geohash\", \"latitude\", \"longitude\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataPivotOptionsSchema\": {\n        \"properties\": {\n          \"aggregates\": {\n            \"description\": \"The keys are the name of the aggregate column to be created, and the values specify the details of how to apply the aggregation. If an operator requires additional options, these can be passed here to be unpacked in the operator call. The following numpy operators are supported: average, argmin, argmax, cumsum, cumprod, max, mean, median, nansum, nanmin, nanmax, nanmean, nanmedian, min, percentile, prod, product, std, sum, var. Any options required by the operator can be passed to the `options` object.\\n\\nIn the example, a new column `first_quantile` is created based on values in the column `my_col` using the `percentile` operator with the `q=0.25` parameter.\",\n            \"example\": {\n              \"first_quantile\": {\n                \"column\": \"my_col\",\n                \"operator\": \"percentile\",\n                \"options\": {\n                  \"q\": 0.25\n                }\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"column_fill_value\": {\n            \"description\": \"Value to replace missing pivot columns names with.\",\n            \"type\": \"string\"\n          },\n          \"columns\": {\n            \"items\": {\n              \"description\": \"Columns to group by on the table columns\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"drop_missing_columns\": {\n            \"description\": \"Do not include columns whose entries are all missing (default: `true`).\",\n            \"type\": \"boolean\"\n          },\n          \"marginal_distribution_name\": {\n            \"description\": \"Name of marginal distribution row/column. (default: `All`)\",\n            \"type\": \"string\"\n          },\n          \"marginal_distributions\": {\n            \"description\": \"Add totals for row/column. (default: `false`)\",\n            \"type\": \"boolean\"\n          },\n          \"metric_fill_value\": {\n            \"description\": \"Value to replace missing values with in aggregate calculations.\",\n            \"type\": \"number\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartDataPostProcessingOperation\": {\n        \"properties\": {\n          \"operation\": {\n            \"description\": \"Post processing operation type\",\n            \"enum\": [\n              \"aggregate\",\n              \"boxplot\",\n              \"contribution\",\n              \"cum\",\n              \"geodetic_parse\",\n              \"geohash_decode\",\n              \"geohash_encode\",\n              \"pivot\",\n              \"prophet\",\n              \"rolling\",\n              \"select\",\n              \"sort\",\n              \"diff\",\n              \"compare\"\n            ],\n            \"example\": \"aggregate\",\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"description\": \"Options specifying how to perform the operation. Please refer to the respective post processing operation option schemas. For example, `ChartDataPostProcessingOperationOptions` specifies the required options for the pivot operation.\",\n            \"example\": {\n              \"aggregates\": {\n                \"age_mean\": {\n                  \"column\": \"age\",\n                  \"operator\": \"mean\"\n                },\n                \"age_q1\": {\n                  \"column\": \"age\",\n                  \"operator\": \"percentile\",\n                  \"options\": {\n                    \"q\": 0.25\n                  }\n                }\n              },\n              \"groupby\": [\"country\", \"gender\"]\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\"operation\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataProphetOptionsSchema\": {\n        \"properties\": {\n          \"confidence_interval\": {\n            \"description\": \"Width of predicted confidence interval\",\n            \"example\": 0.8,\n            \"format\": \"float\",\n            \"maximum\": 1,\n            \"minimum\": 0,\n            \"type\": \"number\"\n          },\n          \"monthly_seasonality\": {\n            \"description\": \"Should monthly seasonality be applied. An integer value will specify Fourier order of seasonality, `None` will automatically detect seasonality.\",\n            \"example\": false\n          },\n          \"periods\": {\n            \"example\": 7,\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"time_grain\": {\n            \"description\": \"Time grain used to specify time period increments in prediction. Supports [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Durations) durations.\",\n            \"enum\": [\n              \"PT1S\",\n              \"PT5S\",\n              \"PT30S\",\n              \"PT1M\",\n              \"PT5M\",\n              \"PT10M\",\n              \"PT15M\",\n              \"PT30M\",\n              \"PT1H\",\n              \"PT6H\",\n              \"P1D\",\n              \"P1W\",\n              \"P1M\",\n              \"P3M\",\n              \"P1Y\",\n              \"1969-12-28T00:00:00Z/P1W\",\n              \"1969-12-29T00:00:00Z/P1W\",\n              \"P1W/1970-01-03T00:00:00Z\",\n              \"P1W/1970-01-04T00:00:00Z\"\n            ],\n            \"example\": \"P1D\",\n            \"type\": \"string\"\n          },\n          \"weekly_seasonality\": {\n            \"description\": \"Should weekly seasonality be applied. An integer value will specify Fourier order of seasonality, `None` will automatically detect seasonality.\",\n            \"example\": false\n          },\n          \"yearly_seasonality\": {\n            \"description\": \"Should yearly seasonality be applied. An integer value will specify Fourier order of seasonality, `None` will automatically detect seasonality.\",\n            \"example\": false\n          }\n        },\n        \"required\": [\"confidence_interval\", \"periods\", \"time_grain\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataQueryContextSchema\": {\n        \"properties\": {\n          \"datasource\": {\n            \"$ref\": \"#/components/schemas/ChartDataDatasource\"\n          },\n          \"force\": {\n            \"description\": \"Should the queries be forced to load from the source. Default: `false`\",\n            \"type\": \"boolean\"\n          },\n          \"queries\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChartDataQueryObject\"\n            },\n            \"type\": \"array\"\n          },\n          \"result_format\": {},\n          \"result_type\": {}\n        },\n        \"type\": \"object\"\n      },\n      \"ChartDataQueryObject\": {\n        \"properties\": {\n          \"annotation_layers\": {\n            \"description\": \"Annotation layers to apply to chart\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AnnotationLayer\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"applied_time_extras\": {\n            \"description\": \"A mapping of temporal extras that have been applied to the query\",\n            \"example\": {\n              \"__time_range\": \"1 year ago : now\"\n            },\n            \"nullable\": true,\n            \"type\": \"object\"\n          },\n          \"apply_fetch_values_predicate\": {\n            \"description\": \"Add fetch values predicate (where clause) to query if defined in datasource\",\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"columns\": {\n            \"description\": \"Columns which to select in the query.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"datasource\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/ChartDataDatasource\"\n              }\n            ],\n            \"nullable\": true\n          },\n          \"druid_time_origin\": {\n            \"description\": \"Starting point for time grain counting on legacy Druid datasources. Used to change e.g. Monday/Sunday first-day-of-week. This field is deprecated and should be passed to `extras` as `druid_time_origin`.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"extras\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/ChartDataExtras\"\n              }\n            ],\n            \"description\": \"Extra parameters to add to the query.\",\n            \"nullable\": true\n          },\n          \"filters\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChartDataFilter\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"granularity\": {\n            \"description\": \"Name of temporal column used for time filtering. For legacy Druid datasources this defines the time grain.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"granularity_sqla\": {\n            \"description\": \"Name of temporal column used for time filtering for SQL datasources. This field is deprecated, use `granularity` instead.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"groupby\": {\n            \"items\": {\n              \"description\": \"Columns by which to group the query.\",\n              \"type\": \"string\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"having\": {\n            \"description\": \"HAVING clause to be added to aggregate queries using AND operator. This field is deprecated and should be passed to `extras`.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"having_filters\": {\n            \"description\": \"HAVING filters to be added to legacy Druid datasource queries. This field is deprecated and should be passed to `extras` as `having_druid`.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChartDataFilter\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"is_rowcount\": {\n            \"description\": \"Should the rowcount of the actual query be returned\",\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"is_timeseries\": {\n            \"description\": \"Is the `query_object` a timeseries.\",\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"metrics\": {\n            \"description\": \"Aggregate expressions. Metrics can be passed as both references to datasource metrics (strings), or ad-hoc metricswhich are defined only within the query object. See `ChartDataAdhocMetricSchema` for the structure of ad-hoc metrics.\",\n            \"items\": {},\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"order_desc\": {\n            \"description\": \"Reverse order. Default: `false`\",\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"orderby\": {\n            \"description\": \"Expects a list of lists where the first element is the column name which to sort by, and the second element is a boolean.\",\n            \"example\": [\n              [\"my_col_1\", false],\n              [\"my_col_2\", true]\n            ],\n            \"items\": {},\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"post_processing\": {\n            \"description\": \"Post processing operations to be applied to the result set. Operations are applied to the result set in sequential order.\",\n            \"items\": {\n              \"allOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ChartDataPostProcessingOperation\"\n                }\n              ],\n              \"nullable\": true\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"result_type\": {\n            \"nullable\": true\n          },\n          \"row_limit\": {\n            \"description\": \"Maximum row count (0=disabled). Default: `config[\\\"ROW_LIMIT\\\"]`\",\n            \"format\": \"int32\",\n            \"minimum\": 0,\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"row_offset\": {\n            \"description\": \"Number of rows to skip. Default: `0`\",\n            \"format\": \"int32\",\n            \"minimum\": 0,\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"time_offsets\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"time_range\": {\n            \"description\": \"A time rage, either expressed as a colon separated string `since : until` or human readable freeform. Valid formats for `since` and `until` are: \\n- ISO 8601\\n- X days/years/hours/day/year/weeks\\n- X days/years/hours/day/year/weeks ago\\n- X days/years/hours/day/year/weeks from now\\n\\nAdditionally, the following freeform can be used:\\n\\n- Last day\\n- Last week\\n- Last month\\n- Last quarter\\n- Last year\\n- No filter\\n- Last X seconds/minutes/hours/days/weeks/months/years\\n- Next X seconds/minutes/hours/days/weeks/months/years\\n\",\n            \"example\": \"Last week\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"time_shift\": {\n            \"description\": \"A human-readable date/time string. Please refer to [parsdatetime](https://github.com/bear/parsedatetime) documentation for details on valid values.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"timeseries_limit\": {\n            \"description\": \"Maximum row count for timeseries queries. Default: `0`\",\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"timeseries_limit_metric\": {\n            \"description\": \"Metric used to limit timeseries queries by.\",\n            \"nullable\": true\n          },\n          \"url_params\": {\n            \"additionalProperties\": {\n              \"description\": \"The value of the query parameter\",\n              \"type\": \"string\"\n            },\n            \"description\": \"Optional query parameters passed to a dashboard or Explore view\",\n            \"nullable\": true,\n            \"type\": \"object\"\n          },\n          \"where\": {\n            \"description\": \"WHERE clause to be added to queries using AND operator.This field is deprecated and should be passed to `extras`.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartDataResponseResult\": {\n        \"properties\": {\n          \"annotation_data\": {\n            \"description\": \"All requested annotation data\",\n            \"items\": {\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"object\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"applied_filters\": {\n            \"description\": \"A list with applied filters\",\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"cache_key\": {\n            \"description\": \"Unique cache key for query object\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"cache_timeout\": {\n            \"description\": \"Cache timeout in following order: custom timeout, datasource timeout, default config timeout.\",\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"cached_dttm\": {\n            \"description\": \"Cache timestamp\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"description\": \"A list with results\",\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"error\": {\n            \"description\": \"Error\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"is_cached\": {\n            \"description\": \"Is the result cached\",\n            \"type\": \"boolean\"\n          },\n          \"query\": {\n            \"description\": \"The executed query statement\",\n            \"type\": \"string\"\n          },\n          \"rejected_filters\": {\n            \"description\": \"A list with rejected filters\",\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"rowcount\": {\n            \"description\": \"Amount of rows in result set\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"stacktrace\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"description\": \"Status of the query\",\n            \"enum\": [\n              \"stopped\",\n              \"failed\",\n              \"pending\",\n              \"running\",\n              \"scheduled\",\n              \"success\",\n              \"timed_out\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"cache_key\",\n          \"cache_timeout\",\n          \"cached_dttm\",\n          \"is_cached\",\n          \"query\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ChartDataResponseSchema\": {\n        \"properties\": {\n          \"result\": {\n            \"description\": \"A list of results for each corresponding query in the request.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChartDataResponseResult\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartDataRollingOptionsSchema\": {\n        \"properties\": {\n          \"center\": {\n            \"description\": \"Should the label be at the center of the window. Default: `false`\",\n            \"example\": false,\n            \"type\": \"boolean\"\n          },\n          \"min_periods\": {\n            \"description\": \"The minimum amount of periods required for a row to be included in the result set.\",\n            \"example\": 7,\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"rolling_type\": {\n            \"description\": \"Type of rolling window. Any numpy function will work.\",\n            \"enum\": [\n              \"average\",\n              \"argmin\",\n              \"argmax\",\n              \"cumsum\",\n              \"cumprod\",\n              \"max\",\n              \"mean\",\n              \"median\",\n              \"nansum\",\n              \"nanmin\",\n              \"nanmax\",\n              \"nanmean\",\n              \"nanmedian\",\n              \"nanpercentile\",\n              \"min\",\n              \"percentile\",\n              \"prod\",\n              \"product\",\n              \"std\",\n              \"sum\",\n              \"var\"\n            ],\n            \"example\": \"percentile\",\n            \"type\": \"string\"\n          },\n          \"rolling_type_options\": {\n            \"example\": {},\n            \"type\": \"object\"\n          },\n          \"win_type\": {\n            \"description\": \"Type of window function. See [SciPy window functions](https://docs.scipy.org/doc/scipy/reference/signal.windows.html#module-scipy.signal.windows) for more details. Some window functions require passing additional parameters to `rolling_type_options`. For instance, to use `gaussian`, the parameter `std` needs to be provided.\",\n            \"enum\": [\n              \"boxcar\",\n              \"triang\",\n              \"blackman\",\n              \"hamming\",\n              \"bartlett\",\n              \"parzen\",\n              \"bohman\",\n              \"blackmanharris\",\n              \"nuttall\",\n              \"barthann\",\n              \"kaiser\",\n              \"gaussian\",\n              \"general_gaussian\",\n              \"slepian\",\n              \"exponential\"\n            ],\n            \"type\": \"string\"\n          },\n          \"window\": {\n            \"description\": \"Size of the rolling window in days.\",\n            \"example\": 7,\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"rolling_type\", \"window\"],\n        \"type\": \"object\"\n      },\n      \"ChartDataSelectOptionsSchema\": {\n        \"properties\": {\n          \"columns\": {\n            \"description\": \"Columns which to select from the input data, in the desired order. If columns are renamed, the original column name should be referenced here.\",\n            \"example\": [\"country\", \"gender\", \"age\"],\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"exclude\": {\n            \"description\": \"Columns to exclude from selection.\",\n            \"example\": [\"my_temp_column\"],\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"rename\": {\n            \"description\": \"columns which to rename, mapping source column to target column. For instance, `{'y': 'y2'}` will rename the column `y` to `y2`.\",\n            \"example\": [\n              {\n                \"age\": \"average_age\"\n              }\n            ],\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartDataSortOptionsSchema\": {\n        \"properties\": {\n          \"aggregates\": {\n            \"description\": \"The keys are the name of the aggregate column to be created, and the values specify the details of how to apply the aggregation. If an operator requires additional options, these can be passed here to be unpacked in the operator call. The following numpy operators are supported: average, argmin, argmax, cumsum, cumprod, max, mean, median, nansum, nanmin, nanmax, nanmean, nanmedian, min, percentile, prod, product, std, sum, var. Any options required by the operator can be passed to the `options` object.\\n\\nIn the example, a new column `first_quantile` is created based on values in the column `my_col` using the `percentile` operator with the `q=0.25` parameter.\",\n            \"example\": {\n              \"first_quantile\": {\n                \"column\": \"my_col\",\n                \"operator\": \"percentile\",\n                \"options\": {\n                  \"q\": 0.25\n                }\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"columns\": {\n            \"description\": \"columns by by which to sort. The key specifies the column name, value specifies if sorting in ascending order.\",\n            \"example\": {\n              \"country\": true,\n              \"gender\": false\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\"columns\"],\n        \"type\": \"object\"\n      },\n      \"ChartEntityResponseSchema\": {\n        \"properties\": {\n          \"cache_timeout\": {\n            \"description\": \"Duration (in seconds) of the caching timeout for this chart. Note this defaults to the datasource/table timeout if undefined.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"changed_on\": {\n            \"description\": \"The ISO date that the chart was last changed.\",\n            \"type\": \"string\"\n          },\n          \"datasource\": {\n            \"description\": \"The datasource name.\",\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"A description of the chart propose.\",\n            \"type\": \"string\"\n          },\n          \"description_markeddown\": {\n            \"description\": \"Sanitized HTML version of the chart description.\",\n            \"type\": \"string\"\n          },\n          \"form_data\": {\n            \"description\": \"Form data from the Explore controls used to form the chart's data query.\",\n            \"type\": \"object\"\n          },\n          \"modified\": {\n            \"type\": \"string\"\n          },\n          \"slice_id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"slice_name\": {\n            \"description\": \"The name of the chart.\",\n            \"type\": \"string\"\n          },\n          \"slice_url\": {\n            \"description\": \"The URL of the chart.\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartFavStarResponseResult\": {\n        \"properties\": {\n          \"id\": {\n            \"description\": \"The Chart id\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"value\": {\n            \"description\": \"The FaveStar value\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartGetDatasourceObjectDataResponse\": {\n        \"properties\": {\n          \"datasource_id\": {\n            \"description\": \"The datasource identifier\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"datasource_type\": {\n            \"description\": \"The datasource type\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartGetDatasourceObjectResponse\": {\n        \"properties\": {\n          \"label\": {\n            \"description\": \"The name of the datasource\",\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"$ref\": \"#/components/schemas/ChartGetDatasourceObjectDataResponse\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartGetDatasourceResponseSchema\": {\n        \"properties\": {\n          \"count\": {\n            \"description\": \"The total number of datasources\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"result\": {\n            \"$ref\": \"#/components/schemas/ChartGetDatasourceObjectResponse\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartRestApi.get\": {\n        \"properties\": {\n          \"cache_timeout\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"dashboards\": {\n            \"$ref\": \"#/components/schemas/Meta9\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"$ref\": \"#/components/schemas/Meta10\"\n          },\n          \"params\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"query_context\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"slice_name\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"viz_type\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartRestApi.get_list\": {\n        \"properties\": {\n          \"cache_timeout\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"changed_by\": {\n            \"$ref\": \"#/components/schemas/Meta8\"\n          },\n          \"changed_by_name\": {\n            \"readOnly\": true\n          },\n          \"changed_by_url\": {\n            \"readOnly\": true\n          },\n          \"changed_on_delta_humanized\": {\n            \"readOnly\": true\n          },\n          \"changed_on_utc\": {\n            \"readOnly\": true\n          },\n          \"created_by\": {\n            \"$ref\": \"#/components/schemas/Meta5\"\n          },\n          \"datasource_id\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"datasource_name_text\": {\n            \"readOnly\": true\n          },\n          \"datasource_type\": {\n            \"maxLength\": 200,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"datasource_url\": {\n            \"readOnly\": true\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"description_markeddown\": {\n            \"readOnly\": true\n          },\n          \"edit_url\": {\n            \"readOnly\": true\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"owners\": {\n            \"$ref\": \"#/components/schemas/Meta7\"\n          },\n          \"params\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"slice_name\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"table\": {\n            \"$ref\": \"#/components/schemas/Meta6\"\n          },\n          \"thumbnail_url\": {\n            \"readOnly\": true\n          },\n          \"url\": {\n            \"readOnly\": true\n          },\n          \"viz_type\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChartRestApi.post\": {\n        \"properties\": {\n          \"cache_timeout\": {\n            \"description\": \"Duration (in seconds) of the caching timeout for this chart. Note this defaults to the datasource/table timeout if undefined.\",\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"dashboards\": {\n            \"items\": {\n              \"description\": \"A list of dashboards to include this new chart to.\",\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"datasource_id\": {\n            \"description\": \"The id of the dataset/datasource this new chart will use. A complete datasource identification needs `datasouce_id` and `datasource_type`.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"datasource_name\": {\n            \"description\": \"The datasource name.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"datasource_type\": {\n            \"description\": \"The type of dataset/datasource identified on `datasource_id`.\",\n            \"enum\": [\"druid\", \"table\", \"view\"],\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"A description of the chart propose.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"items\": {\n              \"description\": \"Owner are users ids allowed to delete or change this chart. If left empty you will be one of the owners of the chart.\",\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"params\": {\n            \"description\": \"Parameters are generated dynamically when clicking the save or overwrite button in the explore view. This JSON object for power users who may want to alter specific parameters.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"query_context\": {\n            \"description\": \"The query context represents the queries that need to run in order to generate the data the visualization, and in what format the data should be returned.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"slice_name\": {\n            \"description\": \"The name of the chart.\",\n            \"maxLength\": 250,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"viz_type\": {\n            \"description\": \"The type of chart visualization used.\",\n            \"example\": [\"bar\", \"line_multi\", \"area\", \"table\"],\n            \"maxLength\": 250,\n            \"minLength\": 0,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"datasource_id\", \"datasource_type\", \"slice_name\"],\n        \"type\": \"object\"\n      },\n      \"ChartRestApi.put\": {\n        \"properties\": {\n          \"cache_timeout\": {\n            \"description\": \"Duration (in seconds) of the caching timeout for this chart. Note this defaults to the datasource/table timeout if undefined.\",\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"dashboards\": {\n            \"items\": {\n              \"description\": \"A list of dashboards to include this new chart to.\",\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"datasource_id\": {\n            \"description\": \"The id of the dataset/datasource this new chart will use. A complete datasource identification needs `datasouce_id` and `datasource_type`.\",\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"datasource_type\": {\n            \"description\": \"The type of dataset/datasource identified on `datasource_id`.\",\n            \"enum\": [\"druid\", \"table\", \"view\"],\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"A description of the chart propose.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"items\": {\n              \"description\": \"Owner are users ids allowed to delete or change this chart. If left empty you will be one of the owners of the chart.\",\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"params\": {\n            \"description\": \"Parameters are generated dynamically when clicking the save or overwrite button in the explore view. This JSON object for power users who may want to alter specific parameters.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"query_context\": {\n            \"description\": \"The query context represents the queries that need to run in order to generate the data the visualization, and in what format the data should be returned.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"slice_name\": {\n            \"description\": \"The name of the chart.\",\n            \"maxLength\": 250,\n            \"minLength\": 0,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"viz_type\": {\n            \"description\": \"The type of chart visualization used.\",\n            \"example\": [\"bar\", \"line_multi\", \"area\", \"table\"],\n            \"maxLength\": 250,\n            \"minLength\": 0,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CssTemplateRestApi.get\": {\n        \"properties\": {\n          \"created_by\": {\n            \"$ref\": \"#/components/schemas/Meta13\"\n          },\n          \"css\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"template_name\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CssTemplateRestApi.get_list\": {\n        \"properties\": {\n          \"changed_by\": {\n            \"$ref\": \"#/components/schemas/Meta12\"\n          },\n          \"changed_on_delta_humanized\": {\n            \"readOnly\": true\n          },\n          \"created_by\": {\n            \"$ref\": \"#/components/schemas/Meta11\"\n          },\n          \"created_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"css\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"template_name\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CssTemplateRestApi.post\": {\n        \"properties\": {\n          \"css\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"template_name\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CssTemplateRestApi.put\": {\n        \"properties\": {\n          \"css\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"template_name\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardDatasetSchema\": {\n        \"properties\": {\n          \"cache_timeout\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"column_formats\": {\n            \"type\": \"object\"\n          },\n          \"column_types\": {\n            \"items\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"columns\": {\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"database\": {\n            \"$ref\": \"#/components/schemas/Database\"\n          },\n          \"datasource_name\": {\n            \"type\": \"string\"\n          },\n          \"default_endpoint\": {\n            \"type\": \"string\"\n          },\n          \"edit_url\": {\n            \"type\": \"string\"\n          },\n          \"fetch_values_predicate\": {\n            \"type\": \"string\"\n          },\n          \"filter_select\": {\n            \"type\": \"boolean\"\n          },\n          \"filter_select_enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"granularity_sqla\": {\n            \"items\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"array\"\n          },\n          \"health_check_message\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"is_sqllab_view\": {\n            \"type\": \"boolean\"\n          },\n          \"main_dttm_col\": {\n            \"type\": \"string\"\n          },\n          \"metrics\": {\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"offset\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"order_by_choices\": {\n            \"items\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"array\"\n          },\n          \"owners\": {\n            \"items\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"params\": {\n            \"type\": \"string\"\n          },\n          \"perm\": {\n            \"type\": \"string\"\n          },\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"select_star\": {\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"type\": \"string\"\n          },\n          \"table_name\": {\n            \"type\": \"string\"\n          },\n          \"template_params\": {\n            \"type\": \"string\"\n          },\n          \"time_grain_sqla\": {\n            \"items\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"verbose_map\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardGetResponseSchema\": {\n        \"properties\": {\n          \"changed_by\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"changed_by_name\": {\n            \"type\": \"string\"\n          },\n          \"changed_by_url\": {\n            \"type\": \"string\"\n          },\n          \"changed_on\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"changed_on_delta_humanized\": {\n            \"type\": \"string\"\n          },\n          \"charts\": {\n            \"items\": {\n              \"description\": \"The names of the dashboard's charts. Names are used for legacy reasons.\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"css\": {\n            \"description\": \"Override CSS for the dashboard.\",\n            \"type\": \"string\"\n          },\n          \"dashboard_title\": {\n            \"description\": \"A title for the dashboard.\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"json_metadata\": {\n            \"description\": \"This JSON object is generated dynamically when clicking the save or overwrite button in the dashboard view. It is exposed here for reference and for power users who may want to alter  specific parameters.\",\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            },\n            \"type\": \"array\"\n          },\n          \"position_json\": {\n            \"description\": \"This json object describes the positioning of the widgets in the dashboard. It is dynamically generated when adjusting the widgets size and positions by using drag \u0026 drop in the dashboard view\",\n            \"type\": \"string\"\n          },\n          \"published\": {\n            \"type\": \"boolean\"\n          },\n          \"roles\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Roles\"\n            },\n            \"type\": \"array\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"table_names\": {\n            \"type\": \"string\"\n          },\n          \"thumbnail_url\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardRestApi.get\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardRestApi.get_list\": {\n        \"properties\": {\n          \"changed_by\": {\n            \"$ref\": \"#/components/schemas/Meta15\"\n          },\n          \"changed_by_name\": {\n            \"readOnly\": true\n          },\n          \"changed_by_url\": {\n            \"readOnly\": true\n          },\n          \"changed_on_delta_humanized\": {\n            \"readOnly\": true\n          },\n          \"changed_on_utc\": {\n            \"readOnly\": true\n          },\n          \"created_by\": {\n            \"$ref\": \"#/components/schemas/Meta14\"\n          },\n          \"css\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"dashboard_title\": {\n            \"maxLength\": 500,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"json_metadata\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"$ref\": \"#/components/schemas/Meta17\"\n          },\n          \"position_json\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"published\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"roles\": {\n            \"$ref\": \"#/components/schemas/Meta16\"\n          },\n          \"slug\": {\n            \"maxLength\": 255,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"readOnly\": true\n          },\n          \"thumbnail_url\": {\n            \"readOnly\": true\n          },\n          \"url\": {\n            \"readOnly\": true\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardRestApi.post\": {\n        \"properties\": {\n          \"css\": {\n            \"type\": \"string\"\n          },\n          \"dashboard_title\": {\n            \"description\": \"A title for the dashboard.\",\n            \"maxLength\": 500,\n            \"minLength\": 0,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"json_metadata\": {\n            \"description\": \"This JSON object is generated dynamically when clicking the save or overwrite button in the dashboard view. It is exposed here for reference and for power users who may want to alter  specific parameters.\",\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"items\": {\n              \"description\": \"Owner are users ids allowed to delete or change this dashboard. If left empty you will be one of the owners of the dashboard.\",\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"position_json\": {\n            \"description\": \"This json object describes the positioning of the widgets in the dashboard. It is dynamically generated when adjusting the widgets size and positions by using drag \u0026 drop in the dashboard view\",\n            \"type\": \"string\"\n          },\n          \"published\": {\n            \"description\": \"Determines whether or not this dashboard is visible in the list of all dashboards.\",\n            \"type\": \"boolean\"\n          },\n          \"roles\": {\n            \"items\": {\n              \"description\": \"Roles is a list which defines access to the dashboard. These roles are always applied in addition to restrictions on dataset level access. If no roles defined then the dashboard is available to all roles.\",\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"slug\": {\n            \"description\": \"Unique identifying part for the web address of the dashboard.\",\n            \"maxLength\": 255,\n            \"minLength\": 1,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardRestApi.put\": {\n        \"properties\": {\n          \"css\": {\n            \"description\": \"Override CSS for the dashboard.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"dashboard_title\": {\n            \"description\": \"A title for the dashboard.\",\n            \"maxLength\": 500,\n            \"minLength\": 0,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"json_metadata\": {\n            \"description\": \"This JSON object is generated dynamically when clicking the save or overwrite button in the dashboard view. It is exposed here for reference and for power users who may want to alter  specific parameters.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"items\": {\n              \"description\": \"Owner are users ids allowed to delete or change this dashboard. If left empty you will be one of the owners of the dashboard.\",\n              \"format\": \"int32\",\n              \"nullable\": true,\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"position_json\": {\n            \"description\": \"This json object describes the positioning of the widgets in the dashboard. It is dynamically generated when adjusting the widgets size and positions by using drag \u0026 drop in the dashboard view\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"published\": {\n            \"description\": \"Determines whether or not this dashboard is visible in the list of all dashboards.\",\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"roles\": {\n            \"items\": {\n              \"description\": \"Roles is a list which defines access to the dashboard. These roles are always applied in addition to restrictions on dataset level access. If no roles defined then the dashboard is available to all roles.\",\n              \"format\": \"int32\",\n              \"nullable\": true,\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"slug\": {\n            \"description\": \"Unique identifying part for the web address of the dashboard.\",\n            \"maxLength\": 255,\n            \"minLength\": 0,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Database\": {\n        \"properties\": {\n          \"allow_multi_schema_metadata_fetch\": {\n            \"type\": \"boolean\"\n          },\n          \"allows_cost_estimate\": {\n            \"type\": \"boolean\"\n          },\n          \"allows_subquery\": {\n            \"type\": \"boolean\"\n          },\n          \"allows_virtual_table_explore\": {\n            \"type\": \"boolean\"\n          },\n          \"backend\": {\n            \"type\": \"string\"\n          },\n          \"explore_database_id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatabaseFunctionNamesResponse\": {\n        \"properties\": {\n          \"function_names\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatabaseRelatedChart\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"slice_name\": {\n            \"type\": \"string\"\n          },\n          \"viz_type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatabaseRelatedCharts\": {\n        \"properties\": {\n          \"count\": {\n            \"description\": \"Chart count\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"result\": {\n            \"description\": \"A list of dashboards\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DatabaseRelatedChart\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatabaseRelatedDashboard\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"json_metadata\": {\n            \"type\": \"object\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatabaseRelatedDashboards\": {\n        \"properties\": {\n          \"count\": {\n            \"description\": \"Dashboard count\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"result\": {\n            \"description\": \"A list of dashboards\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DatabaseRelatedDashboard\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatabaseRelatedObjectsResponse\": {\n        \"properties\": {\n          \"charts\": {\n            \"$ref\": \"#/components/schemas/DatabaseRelatedCharts\"\n          },\n          \"dashboards\": {\n            \"$ref\": \"#/components/schemas/DatabaseRelatedDashboards\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatabaseRestApi.get\": {\n        \"properties\": {\n          \"allow_csv_upload\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allow_ctas\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allow_cvas\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allow_dml\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allow_multi_schema_metadata_fetch\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allow_run_async\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"backend\": {\n            \"readOnly\": true\n          },\n          \"cache_timeout\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"configuration_method\": {\n            \"maxLength\": 255,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"database_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          },\n          \"encrypted_extra\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"expose_in_sqllab\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"extra\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"force_ctas_schema\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"impersonate_user\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"parameters\": {\n            \"readOnly\": true\n          },\n          \"server_cert\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sqlalchemy_uri\": {\n            \"maxLength\": 1024,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"database_name\", \"sqlalchemy_uri\"],\n        \"type\": \"object\"\n      },\n      \"DatabaseRestApi.get_list\": {\n        \"properties\": {\n          \"allow_csv_upload\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allow_ctas\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allow_cvas\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allow_dml\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allow_multi_schema_metadata_fetch\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allow_run_async\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"allows_cost_estimate\": {\n            \"readOnly\": true\n          },\n          \"allows_subquery\": {\n            \"readOnly\": true\n          },\n          \"allows_virtual_table_explore\": {\n            \"readOnly\": true\n          },\n          \"backend\": {\n            \"readOnly\": true\n          },\n          \"changed_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"changed_on_delta_humanized\": {\n            \"readOnly\": true\n          },\n          \"created_by\": {\n            \"$ref\": \"#/components/schemas/Meta18\"\n          },\n          \"database_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          },\n          \"explore_database_id\": {\n            \"readOnly\": true\n          },\n          \"expose_in_sqllab\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"extra\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"force_ctas_schema\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"database_name\"],\n        \"type\": \"object\"\n      },\n      \"DatabaseRestApi.post\": {\n        \"properties\": {\n          \"allow_csv_upload\": {\n            \"description\": \"Allow to upload CSV file data into this databaseIf selected, please set the schemas allowed for csv upload in Extra.\",\n            \"type\": \"boolean\"\n          },\n          \"allow_ctas\": {\n            \"description\": \"Allow CREATE TABLE AS option in SQL Lab\",\n            \"type\": \"boolean\"\n          },\n          \"allow_cvas\": {\n            \"description\": \"Allow CREATE VIEW AS option in SQL Lab\",\n            \"type\": \"boolean\"\n          },\n          \"allow_dml\": {\n            \"description\": \"Allow users to run non-SELECT statements (UPDATE, DELETE, CREATE, ...) in SQL Lab\",\n            \"type\": \"boolean\"\n          },\n          \"allow_multi_schema_metadata_fetch\": {\n            \"description\": \"Allow SQL Lab to fetch a list of all tables and all views across all database schemas. For large data warehouse with thousands of tables, this can be expensive and put strain on the system.\",\n            \"type\": \"boolean\"\n          },\n          \"allow_run_async\": {\n            \"description\": \"Operate the database in asynchronous mode, meaning  that the queries are executed on remote workers as opposed to on the web server itself. This assumes that you have a Celery worker setup as well as a results backend. Refer to the installation docs for more information.\",\n            \"type\": \"boolean\"\n          },\n          \"cache_timeout\": {\n            \"description\": \"Duration (in seconds) of the caching timeout for charts of this database. A timeout of 0 indicates that the cache never expires. Note this defaults to the global timeout if undefined.\",\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"configuration_method\": {\n            \"default\": \"sqlalchemy_form\",\n            \"description\": \"Configuration_method is used on the frontend to inform the backend whether to explode parameters or to provide only a sqlalchemy_uri.\"\n          },\n          \"database_name\": {\n            \"description\": \"A database name to identify this connection.\",\n            \"maxLength\": 250,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"encrypted_extra\": {\n            \"description\": \"\u003cp\u003eJSON string containing additional connection configuration.\u003cbr\u003eThis is used to provide connection information for systems like Hive, Presto, and BigQuery, which do not conform to the username:password syntax normally used by SQLAlchemy.\u003c/p\u003e\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"engine\": {\n            \"description\": \"SQLAlchemy engine to use\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"expose_in_sqllab\": {\n            \"description\": \"Expose this database to SQLLab\",\n            \"type\": \"boolean\"\n          },\n          \"extra\": {\n            \"description\": \"\u003cp\u003eJSON string containing extra configuration elements.\u003cbr\u003e1. The \u003ccode\u003eengine_params\u003c/code\u003e object gets unpacked into the \u003ca href=\\\"https://docs.sqlalchemy.org/en/latest/core/engines.html#sqlalchemy.create_engine\\\"\u003esqlalchemy.create_engine\u003c/a\u003e call, while the \u003ccode\u003emetadata_params\u003c/code\u003e gets unpacked into the \u003ca href=\\\"https://docs.sqlalchemy.org/en/rel_1_0/core/metadata.html#sqlalchemy.schema.MetaData\\\"\u003esqlalchemy.MetaData\u003c/a\u003e call.\u003cbr\u003e2. The \u003ccode\u003emetadata_cache_timeout\u003c/code\u003e is a cache timeout setting in seconds for metadata fetch of this database. Specify it as \u003cstrong\u003e\\\"metadata_cache_timeout\\\": {\\\"schema_cache_timeout\\\": 600, \\\"table_cache_timeout\\\": 600}\u003c/strong\u003e. If unset, cache will not be enabled for the functionality. A timeout of 0 indicates that the cache never expires.\u003cbr\u003e3. The \u003ccode\u003eschemas_allowed_for_csv_upload\u003c/code\u003e is a comma separated list of schemas that CSVs are allowed to upload to. Specify it as \u003cstrong\u003e\\\"schemas_allowed_for_csv_upload\\\": [\\\"public\\\", \\\"csv_upload\\\"]\u003c/strong\u003e. If database flavor does not support schema or any schema is allowed to be accessed, just leave the list empty\u003cbr\u003e4. the \u003ccode\u003eversion\u003c/code\u003e field is a string specifying the this db's version. This should be used with Presto DBs so that the syntax is correct\u003cbr\u003e5. The \u003ccode\u003eallows_virtual_table_explore\u003c/code\u003e field is a boolean specifying whether or not the Explore button in SQL Lab results is shown.\u003c/p\u003e\",\n            \"type\": \"string\"\n          },\n          \"force_ctas_schema\": {\n            \"description\": \"When allowing CREATE TABLE AS option in SQL Lab, this option forces the table to be created in this schema\",\n            \"maxLength\": 250,\n            \"minLength\": 0,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"impersonate_user\": {\n            \"description\": \"If Presto, all the queries in SQL Lab are going to be executed as the currently logged on user who must have permission to run them.\u003cbr/\u003eIf Hive and hive.server2.enable.doAs is enabled, will run the queries as service account, but impersonate the currently logged on user via hive.server2.proxy.user property.\",\n            \"type\": \"boolean\"\n          },\n          \"parameters\": {\n            \"additionalProperties\": {},\n            \"description\": \"DB-specific parameters for configuration\",\n            \"type\": \"object\"\n          },\n          \"server_cert\": {\n            \"description\": \"\u003cp\u003eOptional CA_BUNDLE contents to validate HTTPS requests. Only available on certain database engines.\u003c/p\u003e\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sqlalchemy_uri\": {\n            \"description\": \"\u003cp\u003eRefer to the \u003ca href=\\\"https://docs.sqlalchemy.org/en/rel_1_2/core/engines.html#database-urls\\\"\u003eSqlAlchemy docs\u003c/a\u003e for more information on how to structure your URI.\u003c/p\u003e\",\n            \"maxLength\": 1024,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"database_name\"],\n        \"type\": \"object\"\n      },\n      \"DatabaseRestApi.put\": {\n        \"properties\": {\n          \"allow_csv_upload\": {\n            \"description\": \"Allow to upload CSV file data into this databaseIf selected, please set the schemas allowed for csv upload in Extra.\",\n            \"type\": \"boolean\"\n          },\n          \"allow_ctas\": {\n            \"description\": \"Allow CREATE TABLE AS option in SQL Lab\",\n            \"type\": \"boolean\"\n          },\n          \"allow_cvas\": {\n            \"description\": \"Allow CREATE VIEW AS option in SQL Lab\",\n            \"type\": \"boolean\"\n          },\n          \"allow_dml\": {\n            \"description\": \"Allow users to run non-SELECT statements (UPDATE, DELETE, CREATE, ...) in SQL Lab\",\n            \"type\": \"boolean\"\n          },\n          \"allow_multi_schema_metadata_fetch\": {\n            \"description\": \"Allow SQL Lab to fetch a list of all tables and all views across all database schemas. For large data warehouse with thousands of tables, this can be expensive and put strain on the system.\",\n            \"type\": \"boolean\"\n          },\n          \"allow_run_async\": {\n            \"description\": \"Operate the database in asynchronous mode, meaning  that the queries are executed on remote workers as opposed to on the web server itself. This assumes that you have a Celery worker setup as well as a results backend. Refer to the installation docs for more information.\",\n            \"type\": \"boolean\"\n          },\n          \"cache_timeout\": {\n            \"description\": \"Duration (in seconds) of the caching timeout for charts of this database. A timeout of 0 indicates that the cache never expires. Note this defaults to the global timeout if undefined.\",\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"configuration_method\": {\n            \"default\": \"sqlalchemy_form\",\n            \"description\": \"Configuration_method is used on the frontend to inform the backend whether to explode parameters or to provide only a sqlalchemy_uri.\"\n          },\n          \"database_name\": {\n            \"description\": \"A database name to identify this connection.\",\n            \"maxLength\": 250,\n            \"minLength\": 1,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"encrypted_extra\": {\n            \"description\": \"\u003cp\u003eJSON string containing additional connection configuration.\u003cbr\u003eThis is used to provide connection information for systems like Hive, Presto, and BigQuery, which do not conform to the username:password syntax normally used by SQLAlchemy.\u003c/p\u003e\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"engine\": {\n            \"description\": \"SQLAlchemy engine to use\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"expose_in_sqllab\": {\n            \"description\": \"Expose this database to SQLLab\",\n            \"type\": \"boolean\"\n          },\n          \"extra\": {\n            \"description\": \"\u003cp\u003eJSON string containing extra configuration elements.\u003cbr\u003e1. The \u003ccode\u003eengine_params\u003c/code\u003e object gets unpacked into the \u003ca href=\\\"https://docs.sqlalchemy.org/en/latest/core/engines.html#sqlalchemy.create_engine\\\"\u003esqlalchemy.create_engine\u003c/a\u003e call, while the \u003ccode\u003emetadata_params\u003c/code\u003e gets unpacked into the \u003ca href=\\\"https://docs.sqlalchemy.org/en/rel_1_0/core/metadata.html#sqlalchemy.schema.MetaData\\\"\u003esqlalchemy.MetaData\u003c/a\u003e call.\u003cbr\u003e2. The \u003ccode\u003emetadata_cache_timeout\u003c/code\u003e is a cache timeout setting in seconds for metadata fetch of this database. Specify it as \u003cstrong\u003e\\\"metadata_cache_timeout\\\": {\\\"schema_cache_timeout\\\": 600, \\\"table_cache_timeout\\\": 600}\u003c/strong\u003e. If unset, cache will not be enabled for the functionality. A timeout of 0 indicates that the cache never expires.\u003cbr\u003e3. The \u003ccode\u003eschemas_allowed_for_csv_upload\u003c/code\u003e is a comma separated list of schemas that CSVs are allowed to upload to. Specify it as \u003cstrong\u003e\\\"schemas_allowed_for_csv_upload\\\": [\\\"public\\\", \\\"csv_upload\\\"]\u003c/strong\u003e. If database flavor does not support schema or any schema is allowed to be accessed, just leave the list empty\u003cbr\u003e4. the \u003ccode\u003eversion\u003c/code\u003e field is a string specifying the this db's version. This should be used with Presto DBs so that the syntax is correct\u003cbr\u003e5. The \u003ccode\u003eallows_virtual_table_explore\u003c/code\u003e field is a boolean specifying whether or not the Explore button in SQL Lab results is shown.\u003c/p\u003e\",\n            \"type\": \"string\"\n          },\n          \"force_ctas_schema\": {\n            \"description\": \"When allowing CREATE TABLE AS option in SQL Lab, this option forces the table to be created in this schema\",\n            \"maxLength\": 250,\n            \"minLength\": 0,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"impersonate_user\": {\n            \"description\": \"If Presto, all the queries in SQL Lab are going to be executed as the currently logged on user who must have permission to run them.\u003cbr/\u003eIf Hive and hive.server2.enable.doAs is enabled, will run the queries as service account, but impersonate the currently logged on user via hive.server2.proxy.user property.\",\n            \"type\": \"boolean\"\n          },\n          \"parameters\": {\n            \"additionalProperties\": {},\n            \"description\": \"DB-specific parameters for configuration\",\n            \"type\": \"object\"\n          },\n          \"server_cert\": {\n            \"description\": \"\u003cp\u003eOptional CA_BUNDLE contents to validate HTTPS requests. Only available on certain database engines.\u003c/p\u003e\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sqlalchemy_uri\": {\n            \"description\": \"\u003cp\u003eRefer to the \u003ca href=\\\"https://docs.sqlalchemy.org/en/rel_1_2/core/engines.html#database-urls\\\"\u003eSqlAlchemy docs\u003c/a\u003e for more information on how to structure your URI.\u003c/p\u003e\",\n            \"maxLength\": 1024,\n            \"minLength\": 0,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatabaseTestConnectionSchema\": {\n        \"properties\": {\n          \"configuration_method\": {\n            \"default\": \"sqlalchemy_form\",\n            \"description\": \"Configuration_method is used on the frontend to inform the backend whether to explode parameters or to provide only a sqlalchemy_uri.\"\n          },\n          \"database_name\": {\n            \"description\": \"A database name to identify this connection.\",\n            \"maxLength\": 250,\n            \"minLength\": 1,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"encrypted_extra\": {\n            \"description\": \"\u003cp\u003eJSON string containing additional connection configuration.\u003cbr\u003eThis is used to provide connection information for systems like Hive, Presto, and BigQuery, which do not conform to the username:password syntax normally used by SQLAlchemy.\u003c/p\u003e\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"engine\": {\n            \"description\": \"SQLAlchemy engine to use\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"extra\": {\n            \"description\": \"\u003cp\u003eJSON string containing extra configuration elements.\u003cbr\u003e1. The \u003ccode\u003eengine_params\u003c/code\u003e object gets unpacked into the \u003ca href=\\\"https://docs.sqlalchemy.org/en/latest/core/engines.html#sqlalchemy.create_engine\\\"\u003esqlalchemy.create_engine\u003c/a\u003e call, while the \u003ccode\u003emetadata_params\u003c/code\u003e gets unpacked into the \u003ca href=\\\"https://docs.sqlalchemy.org/en/rel_1_0/core/metadata.html#sqlalchemy.schema.MetaData\\\"\u003esqlalchemy.MetaData\u003c/a\u003e call.\u003cbr\u003e2. The \u003ccode\u003emetadata_cache_timeout\u003c/code\u003e is a cache timeout setting in seconds for metadata fetch of this database. Specify it as \u003cstrong\u003e\\\"metadata_cache_timeout\\\": {\\\"schema_cache_timeout\\\": 600, \\\"table_cache_timeout\\\": 600}\u003c/strong\u003e. If unset, cache will not be enabled for the functionality. A timeout of 0 indicates that the cache never expires.\u003cbr\u003e3. The \u003ccode\u003eschemas_allowed_for_csv_upload\u003c/code\u003e is a comma separated list of schemas that CSVs are allowed to upload to. Specify it as \u003cstrong\u003e\\\"schemas_allowed_for_csv_upload\\\": [\\\"public\\\", \\\"csv_upload\\\"]\u003c/strong\u003e. If database flavor does not support schema or any schema is allowed to be accessed, just leave the list empty\u003cbr\u003e4. the \u003ccode\u003eversion\u003c/code\u003e field is a string specifying the this db's version. This should be used with Presto DBs so that the syntax is correct\u003cbr\u003e5. The \u003ccode\u003eallows_virtual_table_explore\u003c/code\u003e field is a boolean specifying whether or not the Explore button in SQL Lab results is shown.\u003c/p\u003e\",\n            \"type\": \"string\"\n          },\n          \"impersonate_user\": {\n            \"description\": \"If Presto, all the queries in SQL Lab are going to be executed as the currently logged on user who must have permission to run them.\u003cbr/\u003eIf Hive and hive.server2.enable.doAs is enabled, will run the queries as service account, but impersonate the currently logged on user via hive.server2.proxy.user property.\",\n            \"type\": \"boolean\"\n          },\n          \"parameters\": {\n            \"additionalProperties\": {},\n            \"description\": \"DB-specific parameters for configuration\",\n            \"type\": \"object\"\n          },\n          \"server_cert\": {\n            \"description\": \"\u003cp\u003eOptional CA_BUNDLE contents to validate HTTPS requests. Only available on certain database engines.\u003c/p\u003e\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sqlalchemy_uri\": {\n            \"description\": \"\u003cp\u003eRefer to the \u003ca href=\\\"https://docs.sqlalchemy.org/en/rel_1_2/core/engines.html#database-urls\\\"\u003eSqlAlchemy docs\u003c/a\u003e for more information on how to structure your URI.\u003c/p\u003e\",\n            \"maxLength\": 1024,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatabaseValidateParametersSchema\": {\n        \"properties\": {\n          \"configuration_method\": {\n            \"description\": \"Configuration_method is used on the frontend to inform the backend whether to explode parameters or to provide only a sqlalchemy_uri.\"\n          },\n          \"database_name\": {\n            \"description\": \"A database name to identify this connection.\",\n            \"maxLength\": 250,\n            \"minLength\": 1,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"encrypted_extra\": {\n            \"description\": \"\u003cp\u003eJSON string containing additional connection configuration.\u003cbr\u003eThis is used to provide connection information for systems like Hive, Presto, and BigQuery, which do not conform to the username:password syntax normally used by SQLAlchemy.\u003c/p\u003e\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"engine\": {\n            \"description\": \"SQLAlchemy engine to use\",\n            \"type\": \"string\"\n          },\n          \"extra\": {\n            \"description\": \"\u003cp\u003eJSON string containing extra configuration elements.\u003cbr\u003e1. The \u003ccode\u003eengine_params\u003c/code\u003e object gets unpacked into the \u003ca href=\\\"https://docs.sqlalchemy.org/en/latest/core/engines.html#sqlalchemy.create_engine\\\"\u003esqlalchemy.create_engine\u003c/a\u003e call, while the \u003ccode\u003emetadata_params\u003c/code\u003e gets unpacked into the \u003ca href=\\\"https://docs.sqlalchemy.org/en/rel_1_0/core/metadata.html#sqlalchemy.schema.MetaData\\\"\u003esqlalchemy.MetaData\u003c/a\u003e call.\u003cbr\u003e2. The \u003ccode\u003emetadata_cache_timeout\u003c/code\u003e is a cache timeout setting in seconds for metadata fetch of this database. Specify it as \u003cstrong\u003e\\\"metadata_cache_timeout\\\": {\\\"schema_cache_timeout\\\": 600, \\\"table_cache_timeout\\\": 600}\u003c/strong\u003e. If unset, cache will not be enabled for the functionality. A timeout of 0 indicates that the cache never expires.\u003cbr\u003e3. The \u003ccode\u003eschemas_allowed_for_csv_upload\u003c/code\u003e is a comma separated list of schemas that CSVs are allowed to upload to. Specify it as \u003cstrong\u003e\\\"schemas_allowed_for_csv_upload\\\": [\\\"public\\\", \\\"csv_upload\\\"]\u003c/strong\u003e. If database flavor does not support schema or any schema is allowed to be accessed, just leave the list empty\u003cbr\u003e4. the \u003ccode\u003eversion\u003c/code\u003e field is a string specifying the this db's version. This should be used with Presto DBs so that the syntax is correct\u003cbr\u003e5. The \u003ccode\u003eallows_virtual_table_explore\u003c/code\u003e field is a boolean specifying whether or not the Explore button in SQL Lab results is shown.\u003c/p\u003e\",\n            \"type\": \"string\"\n          },\n          \"impersonate_user\": {\n            \"description\": \"If Presto, all the queries in SQL Lab are going to be executed as the currently logged on user who must have permission to run them.\u003cbr/\u003eIf Hive and hive.server2.enable.doAs is enabled, will run the queries as service account, but impersonate the currently logged on user via hive.server2.proxy.user property.\",\n            \"type\": \"boolean\"\n          },\n          \"parameters\": {\n            \"additionalProperties\": {\n              \"nullable\": true\n            },\n            \"description\": \"DB-specific parameters for configuration\",\n            \"type\": \"object\"\n          },\n          \"server_cert\": {\n            \"description\": \"\u003cp\u003eOptional CA_BUNDLE contents to validate HTTPS requests. Only available on certain database engines.\u003c/p\u003e\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"configuration_method\", \"engine\"],\n        \"type\": \"object\"\n      },\n      \"DatasetColumnsPut\": {\n        \"properties\": {\n          \"column_name\": {\n            \"maxLength\": 255,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"expression\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"filterable\": {\n            \"type\": \"boolean\"\n          },\n          \"groupby\": {\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"is_active\": {\n            \"type\": \"boolean\"\n          },\n          \"is_dttm\": {\n            \"type\": \"boolean\"\n          },\n          \"python_date_format\": {\n            \"maxLength\": 255,\n            \"minLength\": 1,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"maxLength\": 32,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"uuid\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"verbose_name\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"column_name\"],\n        \"type\": \"object\"\n      },\n      \"DatasetColumnsRestApi.get\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetColumnsRestApi.get_list\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetColumnsRestApi.post\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetColumnsRestApi.put\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetMetricRestApi.get\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetMetricRestApi.get_list\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetMetricRestApi.post\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetMetricRestApi.put\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetMetricsPut\": {\n        \"properties\": {\n          \"d3format\": {\n            \"maxLength\": 128,\n            \"minLength\": 1,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"expression\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"metric_name\": {\n            \"maxLength\": 255,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"metric_type\": {\n            \"maxLength\": 32,\n            \"minLength\": 1,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"warning_text\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"expression\", \"metric_name\"],\n        \"type\": \"object\"\n      },\n      \"DatasetRelatedChart\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"slice_name\": {\n            \"type\": \"string\"\n          },\n          \"viz_type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetRelatedCharts\": {\n        \"properties\": {\n          \"count\": {\n            \"description\": \"Chart count\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"result\": {\n            \"description\": \"A list of dashboards\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DatasetRelatedChart\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetRelatedDashboard\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"json_metadata\": {\n            \"type\": \"object\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetRelatedDashboards\": {\n        \"properties\": {\n          \"count\": {\n            \"description\": \"Dashboard count\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"result\": {\n            \"description\": \"A list of dashboards\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DatasetRelatedDashboard\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetRelatedObjectsResponse\": {\n        \"properties\": {\n          \"charts\": {\n            \"$ref\": \"#/components/schemas/DatasetRelatedCharts\"\n          },\n          \"dashboards\": {\n            \"$ref\": \"#/components/schemas/DatasetRelatedDashboards\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DatasetRestApi.get\": {\n        \"properties\": {\n          \"cache_timeout\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"columns\": {\n            \"$ref\": \"#/components/schemas/Meta22\"\n          },\n          \"database\": {\n            \"$ref\": \"#/components/schemas/Meta23\"\n          },\n          \"datasource_type\": {\n            \"readOnly\": true\n          },\n          \"default_endpoint\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"extra\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"fetch_values_predicate\": {\n            \"maxLength\": 1000,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"filter_select_enabled\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"is_sqllab_view\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"main_dttm_col\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"metrics\": {\n            \"$ref\": \"#/components/schemas/Meta25\"\n          },\n          \"offset\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"owners\": {\n            \"$ref\": \"#/components/schemas/Meta24\"\n          },\n          \"schema\": {\n            \"maxLength\": 255,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"table_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          },\n          \"template_params\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"readOnly\": true\n          }\n        },\n        \"required\": [\"columns\", \"database\", \"metrics\", \"table_name\"],\n        \"type\": \"object\"\n      },\n      \"DatasetRestApi.get_list\": {\n        \"properties\": {\n          \"changed_by\": {\n            \"$ref\": \"#/components/schemas/Meta19\"\n          },\n          \"changed_by_name\": {\n            \"readOnly\": true\n          },\n          \"changed_by_url\": {\n            \"readOnly\": true\n          },\n          \"changed_on_delta_humanized\": {\n            \"readOnly\": true\n          },\n          \"changed_on_utc\": {\n            \"readOnly\": true\n          },\n          \"database\": {\n            \"$ref\": \"#/components/schemas/Meta21\"\n          },\n          \"default_endpoint\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"explore_url\": {\n            \"readOnly\": true\n          },\n          \"extra\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"kind\": {\n            \"readOnly\": true\n          },\n          \"owners\": {\n            \"$ref\": \"#/components/schemas/Meta20\"\n          },\n          \"schema\": {\n            \"maxLength\": 255,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"table_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"database\", \"table_name\"],\n        \"type\": \"object\"\n      },\n      \"DatasetRestApi.post\": {\n        \"properties\": {\n          \"database\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"owners\": {\n            \"items\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"schema\": {\n            \"maxLength\": 250,\n            \"minLength\": 0,\n            \"type\": \"string\"\n          },\n          \"table_name\": {\n            \"maxLength\": 250,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"database\", \"table_name\"],\n        \"type\": \"object\"\n      },\n      \"DatasetRestApi.put\": {\n        \"properties\": {\n          \"cache_timeout\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"columns\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DatasetColumnsPut\"\n            },\n            \"type\": \"array\"\n          },\n          \"database_id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"default_endpoint\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"extra\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"fetch_values_predicate\": {\n            \"maxLength\": 1000,\n            \"minLength\": 0,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"filter_select_enabled\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"is_sqllab_view\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"main_dttm_col\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"metrics\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DatasetMetricsPut\"\n            },\n            \"type\": \"array\"\n          },\n          \"offset\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"owners\": {\n            \"items\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"schema\": {\n            \"maxLength\": 255,\n            \"minLength\": 0,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"table_name\": {\n            \"maxLength\": 250,\n            \"minLength\": 1,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"template_params\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Datasource\": {\n        \"properties\": {\n          \"database_name\": {\n            \"description\": \"Datasource name\",\n            \"type\": \"string\"\n          },\n          \"datasource_name\": {\n            \"description\": \"The datasource name.\",\n            \"type\": \"string\"\n          },\n          \"datasource_type\": {\n            \"description\": \"The type of dataset/datasource identified on `datasource_id`.\",\n            \"enum\": [\"druid\", \"table\", \"view\"],\n            \"type\": \"string\"\n          },\n          \"schema\": {\n            \"description\": \"Datasource schema\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"datasource_type\"],\n        \"type\": \"object\"\n      },\n      \"DistincResponseSchema\": {\n        \"properties\": {\n          \"count\": {\n            \"description\": \"The total number of distinct values\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"result\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DistinctResultResponse\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DistinctResultResponse\": {\n        \"properties\": {\n          \"text\": {\n            \"description\": \"The distinct item\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GetFavStarIdsSchema\": {\n        \"properties\": {\n          \"result\": {\n            \"description\": \"A list of results for each corresponding chart in the request\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ChartFavStarResponseResult\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"LogRestApi.get\": {\n        \"properties\": {\n          \"action\": {\n            \"maxLength\": 512,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"dashboard_id\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"duration_ms\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"json\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"referrer\": {\n            \"maxLength\": 1024,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"slice_id\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/Meta43\"\n          },\n          \"user_id\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"LogRestApi.get_list\": {\n        \"properties\": {\n          \"action\": {\n            \"maxLength\": 512,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"dashboard_id\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"duration_ms\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"json\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"referrer\": {\n            \"maxLength\": 1024,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"slice_id\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/Meta42\"\n          },\n          \"user_id\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"LogRestApi.post\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"LogRestApi.put\": {\n        \"properties\": {\n          \"action\": {\n            \"maxLength\": 512,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"json\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"nullable\": true\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Meta\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"first_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta1\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"first_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta10\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\", \"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta11\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta12\": {\n        \"properties\": {\n          \"active\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"changed_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"created_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"fail_login_count\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_login\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"login_count\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"password\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"email\", \"first_name\", \"last_name\", \"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta13\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta14\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta15\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\", \"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta16\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"name\"],\n        \"type\": \"object\"\n      },\n      \"Meta17\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\", \"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta18\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta19\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta2\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Meta20\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\", \"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta21\": {\n        \"properties\": {\n          \"database_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"database_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta22\": {\n        \"properties\": {\n          \"changed_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"column_name\": {\n            \"maxLength\": 255,\n            \"type\": \"string\"\n          },\n          \"created_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"expression\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"filterable\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"groupby\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"is_active\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"is_dttm\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"python_date_format\": {\n            \"maxLength\": 255,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"maxLength\": 32,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"type_generic\": {\n            \"readOnly\": true\n          },\n          \"uuid\": {\n            \"format\": \"uuid\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"verbose_name\": {\n            \"maxLength\": 1024,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"column_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta23\": {\n        \"properties\": {\n          \"database_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"database_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta24\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\", \"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta25\": {\n        \"properties\": {\n          \"changed_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"created_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"d3format\": {\n            \"maxLength\": 128,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"expression\": {\n            \"type\": \"string\"\n          },\n          \"extra\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"metric_name\": {\n            \"maxLength\": 255,\n            \"type\": \"string\"\n          },\n          \"metric_type\": {\n            \"maxLength\": 32,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"uuid\": {\n            \"format\": \"uuid\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"verbose_name\": {\n            \"maxLength\": 1024,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"warning_text\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"expression\", \"metric_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta26\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\", \"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta27\": {\n        \"properties\": {\n          \"database_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"database_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta28\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Meta29\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta3\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta30\": {\n        \"properties\": {\n          \"database_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"database_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta31\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta32\": {\n        \"properties\": {\n          \"database_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"database_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta33\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta34\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta35\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"maxLength\": 50,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"type\"],\n        \"type\": \"object\"\n      },\n      \"Meta36\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta37\": {\n        \"properties\": {\n          \"database_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"database_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta38\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"recipient_config_json\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"maxLength\": 50,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"type\"],\n        \"type\": \"object\"\n      },\n      \"Meta39\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta4\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta40\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"slice_name\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"viz_type\": {\n            \"maxLength\": 250,\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Meta41\": {\n        \"properties\": {\n          \"dashboard_title\": {\n            \"maxLength\": 500,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Meta42\": {\n        \"properties\": {\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta43\": {\n        \"properties\": {\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta5\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta6\": {\n        \"properties\": {\n          \"default_endpoint\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"table_name\": {\n            \"maxLength\": 250,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"table_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta7\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\", \"username\"],\n        \"type\": \"object\"\n      },\n      \"Meta8\": {\n        \"properties\": {\n          \"first_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"first_name\", \"last_name\"],\n        \"type\": \"object\"\n      },\n      \"Meta9\": {\n        \"properties\": {\n          \"dashboard_title\": {\n            \"maxLength\": 500,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryRestApi.get\": {\n        \"properties\": {\n          \"changed_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"client_id\": {\n            \"maxLength\": 11,\n            \"type\": \"string\"\n          },\n          \"database\": {\n            \"$ref\": \"#/components/schemas/Meta28\"\n          },\n          \"end_result_backend_time\": {\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"end_time\": {\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"error_message\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"executed_sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"limit\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"progress\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"results_key\": {\n            \"maxLength\": 64,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"rows\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"schema\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"select_as_cta\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"select_as_cta_used\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"select_sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql_editor_id\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"start_running_time\": {\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"start_time\": {\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"status\": {\n            \"maxLength\": 16,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"tab_name\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"tmp_schema_name\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"tmp_table_name\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"tracking_url\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"client_id\", \"database\"],\n        \"type\": \"object\"\n      },\n      \"QueryRestApi.get_list\": {\n        \"properties\": {\n          \"changed_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"database\": {\n            \"$ref\": \"#/components/schemas/Meta27\"\n          },\n          \"end_time\": {\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"executed_sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"rows\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"schema\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql_tables\": {\n            \"readOnly\": true\n          },\n          \"start_time\": {\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"status\": {\n            \"maxLength\": 16,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"tab_name\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"tmp_table_name\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"tracking_url\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/Meta26\"\n          }\n        },\n        \"required\": [\"database\"],\n        \"type\": \"object\"\n      },\n      \"QueryRestApi.post\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryRestApi.put\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RelatedResponseSchema\": {\n        \"properties\": {\n          \"count\": {\n            \"description\": \"The total number of related values\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"result\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RelatedResultResponse\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RelatedResultResponse\": {\n        \"properties\": {\n          \"text\": {\n            \"description\": \"The related item string representation\",\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"description\": \"The related item identifier\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ReportExecutionLogRestApi.get\": {\n        \"properties\": {\n          \"end_dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"error_message\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"scheduled_dttm\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"start_dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"maxLength\": 50,\n            \"type\": \"string\"\n          },\n          \"uuid\": {\n            \"format\": \"uuid\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"format\": \"float\",\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"value_row_json\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"scheduled_dttm\", \"state\"],\n        \"type\": \"object\"\n      },\n      \"ReportExecutionLogRestApi.get_list\": {\n        \"properties\": {\n          \"end_dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"error_message\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"scheduled_dttm\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"start_dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"maxLength\": 50,\n            \"type\": \"string\"\n          },\n          \"uuid\": {\n            \"format\": \"uuid\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"format\": \"float\",\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"value_row_json\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"scheduled_dttm\", \"state\"],\n        \"type\": \"object\"\n      },\n      \"ReportExecutionLogRestApi.post\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ReportExecutionLogRestApi.put\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ReportRecipient\": {\n        \"properties\": {\n          \"recipient_config_json\": {\n            \"$ref\": \"#/components/schemas/ReportRecipientConfigJSON\"\n          },\n          \"type\": {\n            \"description\": \"The recipient type, check spec for valid options\",\n            \"enum\": [\"Email\", \"Slack\"],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"type\"],\n        \"type\": \"object\"\n      },\n      \"ReportRecipientConfigJSON\": {\n        \"properties\": {\n          \"target\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ReportScheduleRestApi.get\": {\n        \"properties\": {\n          \"active\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"chart\": {\n            \"$ref\": \"#/components/schemas/Meta40\"\n          },\n          \"context_markdown\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"creation_method\": {\n            \"maxLength\": 255,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"crontab\": {\n            \"maxLength\": 1000,\n            \"type\": \"string\"\n          },\n          \"dashboard\": {\n            \"$ref\": \"#/components/schemas/Meta41\"\n          },\n          \"database\": {\n            \"$ref\": \"#/components/schemas/Meta37\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"grace_period\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_eval_dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"last_state\": {\n            \"maxLength\": 50,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"last_value\": {\n            \"format\": \"float\",\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"last_value_row_json\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"log_retention\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"maxLength\": 150,\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"$ref\": \"#/components/schemas/Meta39\"\n          },\n          \"recipients\": {\n            \"$ref\": \"#/components/schemas/Meta38\"\n          },\n          \"report_format\": {\n            \"maxLength\": 50,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"timezone\": {\n            \"maxLength\": 100,\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"maxLength\": 50,\n            \"type\": \"string\"\n          },\n          \"validator_config_json\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"validator_type\": {\n            \"maxLength\": 100,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"working_timeout\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"crontab\", \"name\", \"recipients\", \"type\"],\n        \"type\": \"object\"\n      },\n      \"ReportScheduleRestApi.get_list\": {\n        \"properties\": {\n          \"active\": {\n            \"nullable\": true,\n            \"type\": \"boolean\"\n          },\n          \"changed_by\": {\n            \"$ref\": \"#/components/schemas/Meta34\"\n          },\n          \"changed_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"changed_on_delta_humanized\": {\n            \"readOnly\": true\n          },\n          \"created_by\": {\n            \"$ref\": \"#/components/schemas/Meta33\"\n          },\n          \"created_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"creation_method\": {\n            \"maxLength\": 255,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"crontab\": {\n            \"maxLength\": 1000,\n            \"type\": \"string\"\n          },\n          \"crontab_humanized\": {\n            \"readOnly\": true\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_eval_dttm\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"last_state\": {\n            \"maxLength\": 50,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"maxLength\": 150,\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"$ref\": \"#/components/schemas/Meta36\"\n          },\n          \"recipients\": {\n            \"$ref\": \"#/components/schemas/Meta35\"\n          },\n          \"timezone\": {\n            \"maxLength\": 100,\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"maxLength\": 50,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"crontab\", \"name\", \"recipients\", \"type\"],\n        \"type\": \"object\"\n      },\n      \"ReportScheduleRestApi.post\": {\n        \"properties\": {\n          \"active\": {\n            \"type\": \"boolean\"\n          },\n          \"chart\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"context_markdown\": {\n            \"description\": \"Markdown description\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"creation_method\": {\n            \"description\": \"Creation method is used to inform the frontend whether the report/alert was created in the dashboard, chart, or alerts and reports UI.\"\n          },\n          \"crontab\": {\n            \"description\": \"A CRON expression.[Crontab Guru](https://crontab.guru/) is a helpful resource that can help you craft a CRON expression.\",\n            \"example\": \"*/5 * * * *\",\n            \"maxLength\": 1000,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"dashboard\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"database\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"description\": \"Use a nice description to give context to this Alert/Report\",\n            \"example\": \"Daily sales dashboard to marketing\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"grace_period\": {\n            \"description\": \"Once an alert is triggered, how long, in seconds, before Superset nags you again. (in seconds)\",\n            \"example\": 14400,\n            \"format\": \"int32\",\n            \"minimum\": 1,\n            \"type\": \"integer\"\n          },\n          \"log_retention\": {\n            \"description\": \"How long to keep the logs around for this report (in days)\",\n            \"example\": 90,\n            \"format\": \"int32\",\n            \"minimum\": 1,\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"description\": \"The report schedule name.\",\n            \"example\": \"Daily dashboard email\",\n            \"maxLength\": 150,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"items\": {\n              \"description\": \"Owner are users ids allowed to delete or change this report. If left empty you will be one of the owners of the report.\",\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"recipients\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ReportRecipient\"\n            },\n            \"type\": \"array\"\n          },\n          \"report_format\": {\n            \"enum\": [\"PNG\", \"CSV\", \"TEXT\"],\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"description\": \"A SQL statement that defines whether the alert should get triggered or not. The query is expected to return either NULL or a number value.\",\n            \"example\": \"SELECT value FROM time_series_table\",\n            \"type\": \"string\"\n          },\n          \"timezone\": {\n            \"description\": \"A timezone string that represents the location of the timezone.\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"description\": \"The report schedule type\",\n            \"enum\": [\"Alert\", \"Report\"],\n            \"type\": \"string\"\n          },\n          \"validator_config_json\": {\n            \"$ref\": \"#/components/schemas/ValidatorConfigJSON\"\n          },\n          \"validator_type\": {\n            \"description\": \"Determines when to trigger alert based off value from alert query. Alerts will be triggered with these validator types:\\n- Not Null - When the return value is Not NULL, Empty, or 0\\n- Operator - When `sql_return_value comparison_operator threshold` is True e.g. `50 \u003c= 75`\u003cbr\u003eSupports the comparison operators \u003c, \u003c=, \u003e, \u003e=, ==, and !=\",\n            \"enum\": [\"not null\", \"operator\"],\n            \"type\": \"string\"\n          },\n          \"working_timeout\": {\n            \"description\": \"If an alert is staled at a working state, how long until it's state is reseted to error\",\n            \"example\": 3600,\n            \"format\": \"int32\",\n            \"minimum\": 1,\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\"crontab\", \"name\", \"type\"],\n        \"type\": \"object\"\n      },\n      \"ReportScheduleRestApi.put\": {\n        \"properties\": {\n          \"active\": {\n            \"type\": \"boolean\"\n          },\n          \"chart\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"context_markdown\": {\n            \"description\": \"Markdown description\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"creation_method\": {\n            \"description\": \"Creation method is used to inform the frontend whether the report/alert was created in the dashboard, chart, or alerts and reports UI.\",\n            \"nullable\": true\n          },\n          \"crontab\": {\n            \"description\": \"A CRON expression.[Crontab Guru](https://crontab.guru/) is a helpful resource that can help you craft a CRON expression.\",\n            \"maxLength\": 1000,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"dashboard\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"database\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"description\": \"Use a nice description to give context to this Alert/Report\",\n            \"example\": \"Daily sales dashboard to marketing\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"grace_period\": {\n            \"description\": \"Once an alert is triggered, how long, in seconds, before Superset nags you again. (in seconds)\",\n            \"example\": 14400,\n            \"format\": \"int32\",\n            \"minimum\": 1,\n            \"type\": \"integer\"\n          },\n          \"log_retention\": {\n            \"description\": \"How long to keep the logs around for this report (in days)\",\n            \"example\": 90,\n            \"format\": \"int32\",\n            \"minimum\": 1,\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"description\": \"The report schedule name.\",\n            \"maxLength\": 150,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"items\": {\n              \"description\": \"Owner are users ids allowed to delete or change this report. If left empty you will be one of the owners of the report.\",\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"recipients\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ReportRecipient\"\n            },\n            \"type\": \"array\"\n          },\n          \"report_format\": {\n            \"enum\": [\"PNG\", \"CSV\", \"TEXT\"],\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"description\": \"A SQL statement that defines whether the alert should get triggered or not. The query is expected to return either NULL or a number value.\",\n            \"example\": \"SELECT value FROM time_series_table\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"timezone\": {\n            \"description\": \"A timezone string that represents the location of the timezone.\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"description\": \"The report schedule type\",\n            \"enum\": [\"Alert\", \"Report\"],\n            \"type\": \"string\"\n          },\n          \"validator_config_json\": {\n            \"$ref\": \"#/components/schemas/ValidatorConfigJSON\"\n          },\n          \"validator_type\": {\n            \"description\": \"Determines when to trigger alert based off value from alert query. Alerts will be triggered with these validator types:\\n- Not Null - When the return value is Not NULL, Empty, or 0\\n- Operator - When `sql_return_value comparison_operator threshold` is True e.g. `50 \u003c= 75`\u003cbr\u003eSupports the comparison operators \u003c, \u003c=, \u003e, \u003e=, ==, and !=\",\n            \"enum\": [\"not null\", \"operator\"],\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"working_timeout\": {\n            \"description\": \"If an alert is staled at a working state, how long until it's state is reseted to error\",\n            \"example\": 3600,\n            \"format\": \"int32\",\n            \"minimum\": 1,\n            \"nullable\": true,\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Roles\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SavedQueryRestApi.get\": {\n        \"properties\": {\n          \"created_by\": {\n            \"$ref\": \"#/components/schemas/Meta31\"\n          },\n          \"database\": {\n            \"$ref\": \"#/components/schemas/Meta32\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"label\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"schema\": {\n            \"maxLength\": 128,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql_tables\": {\n            \"readOnly\": true\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SavedQueryRestApi.get_list\": {\n        \"properties\": {\n          \"changed_on_delta_humanized\": {\n            \"readOnly\": true\n          },\n          \"created_by\": {\n            \"$ref\": \"#/components/schemas/Meta29\"\n          },\n          \"created_on\": {\n            \"format\": \"date-time\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"database\": {\n            \"$ref\": \"#/components/schemas/Meta30\"\n          },\n          \"db_id\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"extra\": {\n            \"readOnly\": true\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"label\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"last_run_delta_humanized\": {\n            \"readOnly\": true\n          },\n          \"rows\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"schema\": {\n            \"maxLength\": 128,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql_tables\": {\n            \"readOnly\": true\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SavedQueryRestApi.post\": {\n        \"properties\": {\n          \"db_id\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"schema\": {\n            \"maxLength\": 128,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SavedQueryRestApi.put\": {\n        \"properties\": {\n          \"db_id\": {\n            \"format\": \"int32\",\n            \"nullable\": true,\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"maxLength\": 256,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"schema\": {\n            \"maxLength\": 128,\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SchemasResponseSchema\": {\n        \"properties\": {\n          \"result\": {\n            \"items\": {\n              \"description\": \"A database schema name\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SelectStarResponseSchema\": {\n        \"properties\": {\n          \"result\": {\n            \"description\": \"SQL select star\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TableMetadataColumnsResponse\": {\n        \"properties\": {\n          \"duplicates_constraint\": {\n            \"type\": \"string\"\n          },\n          \"keys\": {\n            \"description\": \"\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"longType\": {\n            \"description\": \"The actual backend long type for the column\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"The column name\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"description\": \"The column type\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TableMetadataForeignKeysIndexesResponse\": {\n        \"properties\": {\n          \"column_names\": {\n            \"items\": {\n              \"description\": \"A list of column names that compose the foreign key or index\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"The name of the foreign key or index\",\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"$ref\": \"#/components/schemas/TableMetadataOptionsResponse\"\n          },\n          \"referred_columns\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"referred_schema\": {\n            \"type\": \"string\"\n          },\n          \"referred_table\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TableMetadataOptionsResponse\": {\n        \"properties\": {\n          \"deferrable\": {\n            \"type\": \"boolean\"\n          },\n          \"initially\": {\n            \"type\": \"boolean\"\n          },\n          \"match\": {\n            \"type\": \"boolean\"\n          },\n          \"ondelete\": {\n            \"type\": \"boolean\"\n          },\n          \"onupdate\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TableMetadataPrimaryKeyResponse\": {\n        \"properties\": {\n          \"column_names\": {\n            \"items\": {\n              \"description\": \"A list of column names that compose the primary key\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"The primary key index name\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TableMetadataResponseSchema\": {\n        \"properties\": {\n          \"columns\": {\n            \"description\": \"A list of columns and their metadata\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TableMetadataColumnsResponse\"\n            },\n            \"type\": \"array\"\n          },\n          \"foreignKeys\": {\n            \"description\": \"A list of foreign keys and their metadata\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TableMetadataForeignKeysIndexesResponse\"\n            },\n            \"type\": \"array\"\n          },\n          \"indexes\": {\n            \"description\": \"A list of indexes and their metadata\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TableMetadataForeignKeysIndexesResponse\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"The name of the table\",\n            \"type\": \"string\"\n          },\n          \"primaryKey\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/TableMetadataPrimaryKeyResponse\"\n              }\n            ],\n            \"description\": \"Primary keys metadata\"\n          },\n          \"selectStar\": {\n            \"description\": \"SQL select star\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"User\": {\n        \"properties\": {\n          \"first_name\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"last_name\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ValidatorConfigJSON\": {\n        \"properties\": {\n          \"op\": {\n            \"description\": \"The operation to compare with a threshold to apply to the SQL output\\n\",\n            \"enum\": [\"\u003c\", \"\u003c=\", \"\u003e\", \"\u003e=\", \"==\", \"!=\"],\n            \"type\": \"string\"\n          },\n          \"threshold\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"database_schemas_query_schema\": {\n        \"properties\": {\n          \"force\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"get_delete_ids_schema\": {\n        \"items\": {\n          \"type\": \"integer\"\n        },\n        \"type\": \"array\"\n      },\n      \"get_export_ids_schema\": {\n        \"items\": {\n          \"type\": \"integer\"\n        },\n        \"type\": \"array\"\n      },\n      \"get_fav_star_ids_schema\": {\n        \"items\": {\n          \"type\": \"integer\"\n        },\n        \"type\": \"array\"\n      },\n      \"get_info_schema\": {\n        \"properties\": {\n          \"add_columns\": {\n            \"additionalProperties\": {\n              \"properties\": {\n                \"page\": {\n                  \"type\": \"integer\"\n                },\n                \"page_size\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          },\n          \"edit_columns\": {\n            \"additionalProperties\": {\n              \"properties\": {\n                \"page\": {\n                  \"type\": \"integer\"\n                },\n                \"page_size\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          },\n          \"keys\": {\n            \"items\": {\n              \"enum\": [\n                \"add_columns\",\n                \"edit_columns\",\n                \"filters\",\n                \"permissions\",\n                \"add_title\",\n                \"edit_title\",\n                \"none\"\n              ],\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"get_item_schema\": {\n        \"properties\": {\n          \"columns\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"keys\": {\n            \"items\": {\n              \"enum\": [\n                \"show_columns\",\n                \"description_columns\",\n                \"label_columns\",\n                \"show_title\",\n                \"none\"\n              ],\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"get_list_schema\": {\n        \"properties\": {\n          \"columns\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"filters\": {\n            \"items\": {\n              \"properties\": {\n                \"col\": {\n                  \"type\": \"string\"\n                },\n                \"opr\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"anyOf\": [\n                    {\n                      \"type\": \"number\"\n                    },\n                    {\n                      \"type\": \"string\"\n                    },\n                    {\n                      \"type\": \"boolean\"\n                    },\n                    {\n                      \"type\": \"array\"\n                    }\n                  ]\n                }\n              },\n              \"required\": [\"col\", \"opr\", \"value\"],\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"keys\": {\n            \"items\": {\n              \"enum\": [\n                \"list_columns\",\n                \"order_columns\",\n                \"label_columns\",\n                \"description_columns\",\n                \"list_title\",\n                \"none\"\n              ],\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"order_column\": {\n            \"type\": \"string\"\n          },\n          \"order_direction\": {\n            \"enum\": [\"asc\", \"desc\"],\n            \"type\": \"string\"\n          },\n          \"page\": {\n            \"type\": \"integer\"\n          },\n          \"page_size\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"get_related_schema\": {\n        \"properties\": {\n          \"filter\": {\n            \"type\": \"string\"\n          },\n          \"include_ids\": {\n            \"items\": {\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"page\": {\n            \"type\": \"integer\"\n          },\n          \"page_size\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"screenshot_query_schema\": {\n        \"properties\": {\n          \"force\": {\n            \"type\": \"boolean\"\n          },\n          \"thumb_size\": {\n            \"items\": {\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"window_size\": {\n            \"items\": {\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"thumbnail_query_schema\": {\n        \"properties\": {\n          \"force\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    },\n    \"securitySchemes\": {\n      \"jwt\": {\n        \"bearerFormat\": \"JWT\",\n        \"scheme\": \"bearer\",\n        \"type\": \"http\"\n      },\n      \"jwt_refresh\": {\n        \"bearerFormat\": \"JWT\",\n        \"scheme\": \"bearer\",\n        \"type\": \"http\"\n      }\n    }\n  },\n  \"info\": {\n    \"description\": \"Superset\",\n    \"title\": \"Superset\",\n    \"version\": \"v1\"\n  },\n  \"openapi\": \"3.0.2\",\n  \"paths\": {\n    \"/annotation_layer/\": {\n      \"delete\": {\n        \"description\": \"Deletes multiple annotation layers in a bulk operation.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_delete_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"CSS templates bulk delete\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      },\n      \"get\": {\n        \"description\": \"Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of item ids, useful when you don't know the column id\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"list_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"list_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"List Items\",\n                      \"type\": \"string\"\n                    },\n                    \"order_columns\": {\n                      \"description\": \"A list of allowed columns to sort\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/AnnotationLayerRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      },\n      \"post\": {\n        \"description\": \"Create an Annotation layer\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AnnotationLayerRestApi.post\"\n              }\n            }\n          },\n          \"description\": \"Annotation Layer schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/AnnotationLayerRestApi.post\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Annotation added\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      }\n    },\n    \"/annotation_layer/_info\": {\n      \"get\": {\n        \"description\": \"Get metadata information about this API resource\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_info_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"add_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"edit_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"filters\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"items\": {\n                            \"properties\": {\n                              \"name\": {\n                                \"description\": \"The filter name. Will be translated by babel\",\n                                \"type\": \"string\"\n                              },\n                              \"operator\": {\n                                \"description\": \"The filter operation key to use on list filters\",\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": \"array\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"permissions\": {\n                      \"description\": \"The user permissions for this API resource\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      }\n    },\n    \"/annotation_layer/related/{column_name}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Related column data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      }\n    },\n    \"/annotation_layer/{pk}\": {\n      \"delete\": {\n        \"description\": \"Delete Annotation layer\",\n        \"parameters\": [\n          {\n            \"description\": \"The annotation layer pk for this annotation\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item deleted\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      },\n      \"get\": {\n        \"description\": \"Get an Annotation layer\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"id\": {\n                      \"description\": \"The item id\",\n                      \"type\": \"string\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/AnnotationLayerRestApi.get\"\n                    },\n                    \"show_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"show_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"Show Item Details\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      },\n      \"put\": {\n        \"description\": \"Update an Annotation layer\",\n        \"parameters\": [\n          {\n            \"description\": \"The annotation layer pk for this annotation\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AnnotationLayerRestApi.put\"\n              }\n            }\n          },\n          \"description\": \"Annotation schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/AnnotationLayerRestApi.put\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Annotation changed\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      }\n    },\n    \"/annotation_layer/{pk}/annotation/\": {\n      \"delete\": {\n        \"description\": \"Deletes multiple annotation in a bulk operation.\",\n        \"parameters\": [\n          {\n            \"description\": \"The annotation layer pk for this annotation\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_delete_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Annotations bulk delete\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      },\n      \"get\": {\n        \"description\": \"Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.\",\n        \"parameters\": [\n          {\n            \"description\": \"The annotation layer id for this annotation\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of annotation ids\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/AnnotationRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Annotations\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      },\n      \"post\": {\n        \"description\": \"Create an Annotation layer\",\n        \"parameters\": [\n          {\n            \"description\": \"The annotation layer pk for this annotation\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AnnotationRestApi.post\"\n              }\n            }\n          },\n          \"description\": \"Annotation schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/AnnotationRestApi.post\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Annotation added\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      }\n    },\n    \"/annotation_layer/{pk}/annotation/{annotation_id}\": {\n      \"delete\": {\n        \"description\": \"Delete Annotation layer\",\n        \"parameters\": [\n          {\n            \"description\": \"The annotation layer pk for this annotation\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The annotation pk for this annotation\",\n            \"in\": \"path\",\n            \"name\": \"annotation_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item deleted\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      },\n      \"get\": {\n        \"description\": \"Get an Annotation layer\",\n        \"parameters\": [\n          {\n            \"description\": \"The annotation layer pk for this annotation\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The annotation pk\",\n            \"in\": \"path\",\n            \"name\": \"annotation_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"description\": \"The item id\",\n                      \"type\": \"string\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/AnnotationRestApi.get\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      },\n      \"put\": {\n        \"description\": \"Update an Annotation layer\",\n        \"parameters\": [\n          {\n            \"description\": \"The annotation layer pk for this annotation\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The annotation pk for this annotation\",\n            \"in\": \"path\",\n            \"name\": \"annotation_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AnnotationRestApi.put\"\n              }\n            }\n          },\n          \"description\": \"Annotation schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/AnnotationRestApi.put\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Annotation changed\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Annotation Layers\"]\n      }\n    },\n    \"/async_event/\": {\n      \"get\": {\n        \"description\": \"Reads off of the Redis events stream, using the user's JWT token and optional query params for last event received.\",\n        \"parameters\": [\n          {\n            \"description\": \"Last ID received by the client\",\n            \"in\": \"query\",\n            \"name\": \"last_id\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"result\": {\n                      \"items\": {\n                        \"properties\": {\n                          \"channel_id\": {\n                            \"type\": \"string\"\n                          },\n                          \"errors\": {\n                            \"items\": {\n                              \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                          },\n                          \"id\": {\n                            \"type\": \"string\"\n                          },\n                          \"job_id\": {\n                            \"type\": \"string\"\n                          },\n                          \"result_url\": {\n                            \"type\": \"string\"\n                          },\n                          \"status\": {\n                            \"type\": \"string\"\n                          },\n                          \"user_id\": {\n                            \"type\": \"integer\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Async event results\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"AsyncEventsRestApi\"]\n      }\n    },\n    \"/cachekey/invalidate\": {\n      \"post\": {\n        \"description\": \"Takes a list of datasources, finds the associated cache records and invalidates them and removes the database records\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CacheInvalidationRequestSchema\"\n              }\n            }\n          },\n          \"description\": \"A list of datasources uuid or the tuples of database and datasource names\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"cache was successfully invalidated\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"CacheRestApi\"]\n      }\n    },\n    \"/chart/\": {\n      \"delete\": {\n        \"description\": \"Deletes multiple Charts in a bulk operation.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_delete_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Charts bulk delete\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      },\n      \"get\": {\n        \"description\": \"Get a list of charts, use Rison or JSON query parameters for filtering, sorting, pagination and  for selecting specific columns and metadata.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of item ids, useful when you don't know the column id\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"list_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"list_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"List Items\",\n                      \"type\": \"string\"\n                    },\n                    \"order_columns\": {\n                      \"description\": \"A list of allowed columns to sort\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ChartRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      },\n      \"post\": {\n        \"description\": \"Create a new Chart.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ChartRestApi.post\"\n              }\n            }\n          },\n          \"description\": \"Chart schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/ChartRestApi.post\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Chart added\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/_info\": {\n      \"get\": {\n        \"description\": \"Several metadata information about chart API endpoints.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_info_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"add_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"edit_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"filters\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"items\": {\n                            \"properties\": {\n                              \"name\": {\n                                \"description\": \"The filter name. Will be translated by babel\",\n                                \"type\": \"string\"\n                              },\n                              \"operator\": {\n                                \"description\": \"The filter operation key to use on list filters\",\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": \"array\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"permissions\": {\n                      \"description\": \"The user permissions for this API resource\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/data\": {\n      \"post\": {\n        \"description\": \"Takes a query context constructed in the client and returns payload data response for the given query.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ChartDataQueryContextSchema\"\n              }\n            }\n          },\n          \"description\": \"A query context consists of a datasource from which to fetch data and one or many query objects.\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChartDataResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Query result\"\n          },\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChartDataAsyncResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Async job details\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/data/{cache_key}\": {\n      \"get\": {\n        \"description\": \"Takes a query context cache key and returns payload data response for the given query.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"cache_key\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChartDataResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Query result\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/export/\": {\n      \"get\": {\n        \"description\": \"Exports multiple charts and downloads them as YAML files\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_export_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/zip\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"A zip file with chart(s), dataset(s) and database(s) as YAML\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/favorite_status/\": {\n      \"get\": {\n        \"description\": \"Check favorited dashboards for current user\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_fav_star_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetFavStarIdsSchema\"\n                }\n              }\n            },\n            \"description\": \"None\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/import/\": {\n      \"post\": {\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"formData\": {\n                    \"description\": \"upload file (ZIP)\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\"\n                  },\n                  \"overwrite\": {\n                    \"description\": \"overwrite existing databases?\",\n                    \"type\": \"boolean\"\n                  },\n                  \"passwords\": {\n                    \"description\": \"JSON map of passwords for each file\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Chart import result\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/related/{column_name}\": {\n      \"get\": {\n        \"description\": \"Get a list of all possible owners for a chart. Use `owners` has the `column_name` parameter\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Related column data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/{pk}\": {\n      \"delete\": {\n        \"description\": \"Deletes a Chart.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Chart delete\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      },\n      \"get\": {\n        \"description\": \"Get a chart detail information.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"id\": {\n                      \"description\": \"The item id\",\n                      \"type\": \"string\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/ChartRestApi.get\"\n                    },\n                    \"show_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"show_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"Show Item Details\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      },\n      \"put\": {\n        \"description\": \"Changes a Chart.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ChartRestApi.put\"\n              }\n            }\n          },\n          \"description\": \"Chart schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/ChartRestApi.put\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Chart changed\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/{pk}/cache_screenshot/\": {\n      \"get\": {\n        \"description\": \"Compute and cache a screenshot.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/screenshot_query_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChartCacheScreenshotResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Chart async result\"\n          },\n          \"302\": {\n            \"description\": \"Redirects to the current digest\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/{pk}/data/\": {\n      \"get\": {\n        \"description\": \"Takes a chart ID and uses the query context stored when the chart was saved to return payload data response.\",\n        \"parameters\": [\n          {\n            \"description\": \"The chart ID\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The format in which the data should be returned\",\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The type in which the data should be returned\",\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChartDataResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Query result\"\n          },\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ChartDataAsyncResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Async job details\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/{pk}/screenshot/{digest}/\": {\n      \"get\": {\n        \"description\": \"Get a computed screenshot from cache.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"digest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"image/*\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"Chart thumbnail image\"\n          },\n          \"302\": {\n            \"description\": \"Redirects to the current digest\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/chart/{pk}/thumbnail/{digest}/\": {\n      \"get\": {\n        \"description\": \"Compute or get already computed chart thumbnail from cache.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"digest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"image/*\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"Chart thumbnail image\"\n          },\n          \"302\": {\n            \"description\": \"Redirects to the current digest\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Charts\"]\n      }\n    },\n    \"/css_template/\": {\n      \"delete\": {\n        \"description\": \"Deletes multiple css templates in a bulk operation.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_delete_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"CSS templates bulk delete\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"CSS Templates\"]\n      },\n      \"get\": {\n        \"description\": \"Get a list of CSS templates, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of item ids, useful when you don't know the column id\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"list_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"list_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"List Items\",\n                      \"type\": \"string\"\n                    },\n                    \"order_columns\": {\n                      \"description\": \"A list of allowed columns to sort\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CssTemplateRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"CSS Templates\"]\n      },\n      \"post\": {\n        \"description\": \"Create a CSS template\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CssTemplateRestApi.post\"\n              }\n            }\n          },\n          \"description\": \"Model schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/CssTemplateRestApi.post\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item inserted\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"CSS Templates\"]\n      }\n    },\n    \"/css_template/_info\": {\n      \"get\": {\n        \"description\": \"Get metadata information about this API resource\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_info_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"add_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"edit_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"filters\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"items\": {\n                            \"properties\": {\n                              \"name\": {\n                                \"description\": \"The filter name. Will be translated by babel\",\n                                \"type\": \"string\"\n                              },\n                              \"operator\": {\n                                \"description\": \"The filter operation key to use on list filters\",\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": \"array\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"permissions\": {\n                      \"description\": \"The user permissions for this API resource\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"CSS Templates\"]\n      }\n    },\n    \"/css_template/related/{column_name}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Related column data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"CSS Templates\"]\n      }\n    },\n    \"/css_template/{pk}\": {\n      \"delete\": {\n        \"description\": \"Delete CSS template\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item deleted\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"CSS Templates\"]\n      },\n      \"get\": {\n        \"description\": \"Get a CSS template\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"id\": {\n                      \"description\": \"The item id\",\n                      \"type\": \"string\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/CssTemplateRestApi.get\"\n                    },\n                    \"show_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"show_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"Show Item Details\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"CSS Templates\"]\n      },\n      \"put\": {\n        \"description\": \"Update a CSS template\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CssTemplateRestApi.put\"\n              }\n            }\n          },\n          \"description\": \"Model schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/CssTemplateRestApi.put\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item changed\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"CSS Templates\"]\n      }\n    },\n    \"/dashboard/\": {\n      \"delete\": {\n        \"description\": \"Deletes multiple Dashboards in a bulk operation.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_delete_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dashboard bulk delete\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      },\n      \"get\": {\n        \"description\": \"Get a list of dashboards, use Rison or JSON query parameters for filtering, sorting, pagination and  for selecting specific columns and metadata.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of item ids, useful when you don't know the column id\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"list_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"list_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"List Items\",\n                      \"type\": \"string\"\n                    },\n                    \"order_columns\": {\n                      \"description\": \"A list of allowed columns to sort\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/DashboardRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      },\n      \"post\": {\n        \"description\": \"Create a new Dashboard.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DashboardRestApi.post\"\n              }\n            }\n          },\n          \"description\": \"Dashboard schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/DashboardRestApi.post\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dashboard added\"\n          },\n          \"302\": {\n            \"description\": \"Redirects to the current digest\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/dashboard/_info\": {\n      \"get\": {\n        \"description\": \"Several metadata information about dashboard API endpoints.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_info_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"add_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"edit_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"filters\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"items\": {\n                            \"properties\": {\n                              \"name\": {\n                                \"description\": \"The filter name. Will be translated by babel\",\n                                \"type\": \"string\"\n                              },\n                              \"operator\": {\n                                \"description\": \"The filter operation key to use on list filters\",\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": \"array\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"permissions\": {\n                      \"description\": \"The user permissions for this API resource\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/dashboard/export/\": {\n      \"get\": {\n        \"description\": \"Exports multiple Dashboards and downloads them as YAML files.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_export_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"Dashboard export\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/dashboard/favorite_status/\": {\n      \"get\": {\n        \"description\": \"Check favorited dashboards for current user\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_fav_star_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetFavStarIdsSchema\"\n                }\n              }\n            },\n            \"description\": \"None\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/dashboard/import/\": {\n      \"post\": {\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"formData\": {\n                    \"description\": \"upload file (ZIP or JSON)\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\"\n                  },\n                  \"overwrite\": {\n                    \"description\": \"overwrite existing databases?\",\n                    \"type\": \"boolean\"\n                  },\n                  \"passwords\": {\n                    \"description\": \"JSON map of passwords for each file\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dashboard import result\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/dashboard/related/{column_name}\": {\n      \"get\": {\n        \"description\": \"Get a list of all possible owners for a dashboard.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Related column data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/dashboard/{id_or_slug}\": {\n      \"get\": {\n        \"description\": \"Get a dashboard detail information.\",\n        \"parameters\": [\n          {\n            \"description\": \"Either the id of the dashboard, or its slug\",\n            \"in\": \"path\",\n            \"name\": \"id_or_slug\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/DashboardGetResponseSchema\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dashboard\"\n          },\n          \"302\": {\n            \"description\": \"Redirects to the current digest\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/dashboard/{id_or_slug}/charts\": {\n      \"get\": {\n        \"description\": \"Get the chart definitions for a given dashboard\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id_or_slug\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"result\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ChartEntityResponseSchema\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dashboard chart definitions\"\n          },\n          \"302\": {\n            \"description\": \"Redirects to the current digest\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/dashboard/{id_or_slug}/datasets\": {\n      \"get\": {\n        \"description\": \"Returns a list of a dashboard's datasets. Each dataset includes only the information necessary to render the dashboard's charts.\",\n        \"parameters\": [\n          {\n            \"description\": \"Either the id of the dashboard, or its slug\",\n            \"in\": \"path\",\n            \"name\": \"id_or_slug\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"result\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/DashboardDatasetSchema\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dashboard dataset definitions\"\n          },\n          \"302\": {\n            \"description\": \"Redirects to the current digest\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/dashboard/{pk}\": {\n      \"delete\": {\n        \"description\": \"Deletes a Dashboard.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dashboard deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      },\n      \"put\": {\n        \"description\": \"Changes a Dashboard.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DashboardRestApi.put\"\n              }\n            }\n          },\n          \"description\": \"Dashboard schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/DashboardRestApi.put\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dashboard changed\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/dashboard/{pk}/thumbnail/{digest}/\": {\n      \"get\": {\n        \"description\": \"Compute async or get already computed dashboard thumbnail from cache.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"A hex digest that makes this dashboard unique\",\n            \"in\": \"path\",\n            \"name\": \"digest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/thumbnail_query_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"image/*\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"Dashboard thumbnail image\"\n          },\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Thumbnail does not exist on cache, fired async to compute\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Dashboards\"]\n      }\n    },\n    \"/database/\": {\n      \"get\": {\n        \"description\": \"Get a list of models\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of item ids, useful when you don't know the column id\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"list_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"list_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"List Items\",\n                      \"type\": \"string\"\n                    },\n                    \"order_columns\": {\n                      \"description\": \"A list of allowed columns to sort\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/DatabaseRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      },\n      \"post\": {\n        \"description\": \"Create a new Database.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DatabaseRestApi.post\"\n              }\n            }\n          },\n          \"description\": \"Database schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/DatabaseRestApi.post\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Database added\"\n          },\n          \"302\": {\n            \"description\": \"Redirects to the current digest\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/_info\": {\n      \"get\": {\n        \"description\": \"Get metadata information about this API resource\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_info_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"add_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"edit_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"filters\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"items\": {\n                            \"properties\": {\n                              \"name\": {\n                                \"description\": \"The filter name. Will be translated by babel\",\n                                \"type\": \"string\"\n                              },\n                              \"operator\": {\n                                \"description\": \"The filter operation key to use on list filters\",\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": \"array\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"permissions\": {\n                      \"description\": \"The user permissions for this API resource\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/available/\": {\n      \"get\": {\n        \"description\": \"Get names of databases currently available\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"databases\": {\n                    \"items\": {\n                      \"properties\": {\n                        \"available_drivers\": {\n                          \"description\": \"Installed drivers for the engine\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                        },\n                        \"default_driver\": {\n                          \"description\": \"Default driver for the engine\",\n                          \"type\": \"string\"\n                        },\n                        \"engine\": {\n                          \"description\": \"Name of the SQLAlchemy engine\",\n                          \"type\": \"string\"\n                        },\n                        \"name\": {\n                          \"description\": \"Name of the database\",\n                          \"type\": \"string\"\n                        },\n                        \"parameters\": {\n                          \"description\": \"JSON schema defining the needed parameters\",\n                          \"type\": \"object\"\n                        },\n                        \"preferred\": {\n                          \"description\": \"Is the database preferred?\",\n                          \"type\": \"boolean\"\n                        },\n                        \"sqlalchemy_uri_placeholder\": {\n                          \"description\": \"Example placeholder for the SQLAlchemy URI\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                  }\n                }\n              }\n            },\n            \"description\": \"Database names\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/export/\": {\n      \"get\": {\n        \"description\": \"Download database(s) and associated dataset(s) as a zip file\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_export_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/zip\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"A zip file with database(s) and dataset(s) as YAML\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/import/\": {\n      \"post\": {\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"formData\": {\n                    \"description\": \"upload file (ZIP)\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\"\n                  },\n                  \"overwrite\": {\n                    \"description\": \"overwrite existing databases?\",\n                    \"type\": \"boolean\"\n                  },\n                  \"passwords\": {\n                    \"description\": \"JSON map of passwords for each file\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Database import result\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/test_connection\": {\n      \"post\": {\n        \"description\": \"Tests a database connection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DatabaseTestConnectionSchema\"\n              }\n            }\n          },\n          \"description\": \"Database schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Database Test Connection\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/validate_parameters\": {\n      \"post\": {\n        \"description\": \"Validates parameters used to connect to a database\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DatabaseValidateParametersSchema\"\n              }\n            }\n          },\n          \"description\": \"DB-specific parameters\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Database Test Connection\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/{pk}\": {\n      \"delete\": {\n        \"description\": \"Deletes a Database.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Database deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      },\n      \"get\": {\n        \"description\": \"Get an item model\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"id\": {\n                      \"description\": \"The item id\",\n                      \"type\": \"string\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/DatabaseRestApi.get\"\n                    },\n                    \"show_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"show_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"Show Item Details\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      },\n      \"put\": {\n        \"description\": \"Changes a Database.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DatabaseRestApi.put\"\n              }\n            }\n          },\n          \"description\": \"Database schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/DatabaseRestApi.put\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Database changed\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/{pk}/function_names/\": {\n      \"get\": {\n        \"description\": \"Get function names supported by a database\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DatabaseFunctionNamesResponse\"\n                }\n              }\n            },\n            \"description\": \"Query result\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/{pk}/related_objects/\": {\n      \"get\": {\n        \"description\": \"Get charts and dashboards count associated to a database\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DatabaseRelatedObjectsResponse\"\n                }\n              }\n            },\n            \"description\": \"Query result\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/{pk}/schemas/\": {\n      \"get\": {\n        \"description\": \"Get all schemas from a database\",\n        \"parameters\": [\n          {\n            \"description\": \"The database id\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/database_schemas_query_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SchemasResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"A List of all schemas from the database\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/{pk}/select_star/{table_name}/\": {\n      \"get\": {\n        \"description\": \"Get database select star for table\",\n        \"parameters\": [\n          {\n            \"description\": \"The database id\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Table name\",\n            \"in\": \"path\",\n            \"name\": \"table_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Table schema\",\n            \"in\": \"path\",\n            \"name\": \"schema_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SelectStarResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"SQL statement for a select star for table\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/{pk}/select_star/{table_name}/{schema_name}/\": {\n      \"get\": {\n        \"description\": \"Get database select star for table\",\n        \"parameters\": [\n          {\n            \"description\": \"The database id\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Table name\",\n            \"in\": \"path\",\n            \"name\": \"table_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Table schema\",\n            \"in\": \"path\",\n            \"name\": \"schema_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SelectStarResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"SQL statement for a select star for table\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/database/{pk}/table/{table_name}/{schema_name}/\": {\n      \"get\": {\n        \"description\": \"Get database table metadata\",\n        \"parameters\": [\n          {\n            \"description\": \"The database id\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Table name\",\n            \"in\": \"path\",\n            \"name\": \"table_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Table schema\",\n            \"in\": \"path\",\n            \"name\": \"schema_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TableMetadataResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Table metadata information\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Database\"]\n      }\n    },\n    \"/dataset/\": {\n      \"delete\": {\n        \"description\": \"Deletes multiple Datasets in a bulk operation.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_delete_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dataset bulk delete\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      },\n      \"get\": {\n        \"description\": \"Get a list of models\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of item ids, useful when you don't know the column id\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"list_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"list_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"List Items\",\n                      \"type\": \"string\"\n                    },\n                    \"order_columns\": {\n                      \"description\": \"A list of allowed columns to sort\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/DatasetRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      },\n      \"post\": {\n        \"description\": \"Create a new Dataset\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DatasetRestApi.post\"\n              }\n            }\n          },\n          \"description\": \"Dataset schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/DatasetRestApi.post\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dataset added\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/dataset/_info\": {\n      \"get\": {\n        \"description\": \"Get metadata information about this API resource\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_info_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"add_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"edit_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"filters\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"items\": {\n                            \"properties\": {\n                              \"name\": {\n                                \"description\": \"The filter name. Will be translated by babel\",\n                                \"type\": \"string\"\n                              },\n                              \"operator\": {\n                                \"description\": \"The filter operation key to use on list filters\",\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": \"array\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"permissions\": {\n                      \"description\": \"The user permissions for this API resource\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/dataset/distinct/{column_name}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DistincResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Distinct field data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/dataset/export/\": {\n      \"get\": {\n        \"description\": \"Exports multiple datasets and downloads them as YAML files\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_export_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"Dataset export\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/dataset/import/\": {\n      \"post\": {\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"formData\": {\n                    \"description\": \"upload file (ZIP or YAML)\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\"\n                  },\n                  \"overwrite\": {\n                    \"description\": \"overwrite existing datasets?\",\n                    \"type\": \"boolean\"\n                  },\n                  \"passwords\": {\n                    \"description\": \"JSON map of passwords for each file\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dataset import result\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/dataset/related/{column_name}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Related column data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/dataset/{pk}\": {\n      \"delete\": {\n        \"description\": \"Deletes a Dataset\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dataset delete\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      },\n      \"get\": {\n        \"description\": \"Get an item model\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"id\": {\n                      \"description\": \"The item id\",\n                      \"type\": \"string\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/DatasetRestApi.get\"\n                    },\n                    \"show_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"show_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"Show Item Details\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      },\n      \"put\": {\n        \"description\": \"Changes a Dataset\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"override_columns\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DatasetRestApi.put\"\n              }\n            }\n          },\n          \"description\": \"Dataset schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/DatasetRestApi.put\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dataset changed\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/dataset/{pk}/column/{column_id}\": {\n      \"delete\": {\n        \"description\": \"Delete a Dataset column\",\n        \"parameters\": [\n          {\n            \"description\": \"The dataset pk for this column\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The column id for this dataset\",\n            \"in\": \"path\",\n            \"name\": \"column_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Column deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/dataset/{pk}/metric/{metric_id}\": {\n      \"delete\": {\n        \"description\": \"Delete a Dataset metric\",\n        \"parameters\": [\n          {\n            \"description\": \"The dataset pk for this column\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The metric id for this dataset\",\n            \"in\": \"path\",\n            \"name\": \"metric_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Metric deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/dataset/{pk}/refresh\": {\n      \"put\": {\n        \"description\": \"Refreshes and updates columns of a dataset\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Dataset delete\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/dataset/{pk}/related_objects\": {\n      \"get\": {\n        \"description\": \"Get charts and dashboards count associated to a dataset\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DatasetRelatedObjectsResponse\"\n                }\n              }\n            },\n            \"description\": \"Query result\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Datasets\"]\n      }\n    },\n    \"/log/\": {\n      \"get\": {\n        \"description\": \"Get a list of models\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of item ids, useful when you don't know the column id\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"list_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"list_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"List Items\",\n                      \"type\": \"string\"\n                    },\n                    \"order_columns\": {\n                      \"description\": \"A list of allowed columns to sort\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/LogRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"LogRestApi\"]\n      },\n      \"post\": {\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LogRestApi.post\"\n              }\n            }\n          },\n          \"description\": \"Model schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/LogRestApi.post\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item inserted\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"LogRestApi\"]\n      }\n    },\n    \"/log/{pk}\": {\n      \"get\": {\n        \"description\": \"Get an item model\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"id\": {\n                      \"description\": \"The item id\",\n                      \"type\": \"string\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/LogRestApi.get\"\n                    },\n                    \"show_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"show_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"Show Item Details\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"LogRestApi\"]\n      }\n    },\n    \"/menu/\": {\n      \"get\": {\n        \"description\": \"Get the menu data structure. Returns a forest like structure with the menu the user has access to\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Menu items in a forest like data structure\",\n                      \"items\": {\n                        \"properties\": {\n                          \"childs\": {\n                            \"items\": {\n                              \"type\": \"object\"\n                            },\n                            \"type\": \"array\"\n                          },\n                          \"icon\": {\n                            \"description\": \"Icon name to show for this menu item\",\n                            \"type\": \"string\"\n                          },\n                          \"label\": {\n                            \"description\": \"Pretty name for the menu item\",\n                            \"type\": \"string\"\n                          },\n                          \"name\": {\n                            \"description\": \"The internal menu item name, maps to permission_name\",\n                            \"type\": \"string\"\n                          },\n                          \"url\": {\n                            \"description\": \"The URL for the menu item\",\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Get menu data\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Menu\"]\n      }\n    },\n    \"/openapi/{version}/_openapi\": {\n      \"get\": {\n        \"description\": \"Get the OpenAPI spec for a specific API version\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"version\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"The OpenAPI spec\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"OpenApi\"]\n      }\n    },\n    \"/query/\": {\n      \"get\": {\n        \"description\": \"Get a list of queries, use Rison or JSON query parameters for filtering, sorting, pagination and  for selecting specific columns and metadata.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of item ids, useful when you don't know the column id\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"list_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"list_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"List Items\",\n                      \"type\": \"string\"\n                    },\n                    \"order_columns\": {\n                      \"description\": \"A list of allowed columns to sort\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/QueryRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/query/distinct/{column_name}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DistincResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Distinct field data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/query/related/{column_name}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Related column data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/query/{pk}\": {\n      \"get\": {\n        \"description\": \"Get query detail information.\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"id\": {\n                      \"description\": \"The item id\",\n                      \"type\": \"string\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/QueryRestApi.get\"\n                    },\n                    \"show_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"show_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"Show Item Details\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/report/\": {\n      \"delete\": {\n        \"description\": \"Deletes multiple report schedules in a bulk operation.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_delete_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Report Schedule bulk delete\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Report Schedules\"]\n      },\n      \"get\": {\n        \"description\": \"Get a list of report schedules, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of item ids, useful when you don't know the column id\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"list_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"list_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"List Items\",\n                      \"type\": \"string\"\n                    },\n                    \"order_columns\": {\n                      \"description\": \"A list of allowed columns to sort\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ReportScheduleRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Report Schedules\"]\n      },\n      \"post\": {\n        \"description\": \"Create a report schedule\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ReportScheduleRestApi.post\"\n              }\n            }\n          },\n          \"description\": \"Report Schedule schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/ReportScheduleRestApi.post\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Report schedule added\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Report Schedules\"]\n      }\n    },\n    \"/report/_info\": {\n      \"get\": {\n        \"description\": \"Get metadata information about this API resource\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_info_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"add_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"edit_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"filters\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"items\": {\n                            \"properties\": {\n                              \"name\": {\n                                \"description\": \"The filter name. Will be translated by babel\",\n                                \"type\": \"string\"\n                              },\n                              \"operator\": {\n                                \"description\": \"The filter operation key to use on list filters\",\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": \"array\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"permissions\": {\n                      \"description\": \"The user permissions for this API resource\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Report Schedules\"]\n      }\n    },\n    \"/report/related/{column_name}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Related column data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Report Schedules\"]\n      }\n    },\n    \"/report/{pk}\": {\n      \"delete\": {\n        \"description\": \"Delete a report schedule\",\n        \"parameters\": [\n          {\n            \"description\": \"The report schedule pk\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item deleted\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Report Schedules\"]\n      },\n      \"get\": {\n        \"description\": \"Get a report schedule\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"id\": {\n                      \"description\": \"The item id\",\n                      \"type\": \"string\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/ReportScheduleRestApi.get\"\n                    },\n                    \"show_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"show_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"Show Item Details\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Report Schedules\"]\n      },\n      \"put\": {\n        \"description\": \"Update a report schedule\",\n        \"parameters\": [\n          {\n            \"description\": \"The Report Schedule pk\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ReportScheduleRestApi.put\"\n              }\n            }\n          },\n          \"description\": \"Report Schedule schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/ReportScheduleRestApi.put\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Report Schedule changed\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/403\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Report Schedules\"]\n      }\n    },\n    \"/report/{pk}/log/\": {\n      \"get\": {\n        \"description\": \"Get a list of report schedule logs, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.\",\n        \"parameters\": [\n          {\n            \"description\": \"The report schedule id for these logs\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of log ids\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ReportExecutionLogRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from logs\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Report Schedules\"]\n      }\n    },\n    \"/report/{pk}/log/{log_id}\": {\n      \"get\": {\n        \"description\": \"Get a report schedule log\",\n        \"parameters\": [\n          {\n            \"description\": \"The report schedule pk for log\",\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The log pk\",\n            \"in\": \"path\",\n            \"name\": \"log_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"description\": \"The log id\",\n                      \"type\": \"string\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/ReportExecutionLogRestApi.get\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item log\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Report Schedules\"]\n      }\n    },\n    \"/saved_query/\": {\n      \"delete\": {\n        \"description\": \"Deletes multiple saved queries in a bulk operation.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_delete_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Saved queries bulk delete\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      },\n      \"get\": {\n        \"description\": \"Get a list of saved queries, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_list_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"count\": {\n                      \"description\": \"The total record count on the backend\",\n                      \"type\": \"number\"\n                    },\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"ids\": {\n                      \"description\": \"A list of item ids, useful when you don't know the column id\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"list_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"list_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"List Items\",\n                      \"type\": \"string\"\n                    },\n                    \"order_columns\": {\n                      \"description\": \"A list of allowed columns to sort\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"result\": {\n                      \"description\": \"The result from the get list query\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/SavedQueryRestApi.get_list\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Items from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      },\n      \"post\": {\n        \"description\": \"Create a saved query\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SavedQueryRestApi.post\"\n              }\n            }\n          },\n          \"description\": \"Model schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/SavedQueryRestApi.post\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item inserted\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/saved_query/_info\": {\n      \"get\": {\n        \"description\": \"Get metadata information about this API resource\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_info_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"add_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"edit_columns\": {\n                      \"type\": \"object\"\n                    },\n                    \"filters\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"items\": {\n                            \"properties\": {\n                              \"name\": {\n                                \"description\": \"The filter name. Will be translated by babel\",\n                                \"type\": \"string\"\n                              },\n                              \"operator\": {\n                                \"description\": \"The filter operation key to use on list filters\",\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": \"array\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"permissions\": {\n                      \"description\": \"The user permissions for this API resource\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/saved_query/distinct/{column_name}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DistincResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Distinct field data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/saved_query/export/\": {\n      \"get\": {\n        \"description\": \"Exports multiple saved queries and downloads them as YAML files\",\n        \"parameters\": [\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_export_ids_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/zip\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"A zip file with saved query(ies) and database(s) as YAML\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/saved_query/import/\": {\n      \"post\": {\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"formData\": {\n                    \"description\": \"upload file (ZIP)\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\"\n                  },\n                  \"overwrite\": {\n                    \"description\": \"overwrite existing saved queries?\",\n                    \"type\": \"boolean\"\n                  },\n                  \"passwords\": {\n                    \"description\": \"JSON map of passwords for each file\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Saved Query import result\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/saved_query/related/{column_name}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"column_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_related_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RelatedResponseSchema\"\n                }\n              }\n            },\n            \"description\": \"Related column data\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/saved_query/{pk}\": {\n      \"delete\": {\n        \"description\": \"Delete saved query\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item deleted\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      },\n      \"get\": {\n        \"description\": \"Get a saved query\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/get_item_schema\"\n                }\n              }\n            },\n            \"in\": \"query\",\n            \"name\": \"q\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"description_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The description for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice description for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"id\": {\n                      \"description\": \"The item id\",\n                      \"type\": \"string\"\n                    },\n                    \"label_columns\": {\n                      \"properties\": {\n                        \"column_name\": {\n                          \"description\": \"The label for the column name. Will be translated by babel\",\n                          \"example\": \"A Nice label for the column\",\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/SavedQueryRestApi.get\"\n                    },\n                    \"show_columns\": {\n                      \"description\": \"A list of columns\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"show_title\": {\n                      \"description\": \"A title to render. Will be translated by babel\",\n                      \"example\": \"Show Item Details\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item from Model\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      },\n      \"put\": {\n        \"description\": \"Update a saved query\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"pk\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SavedQueryRestApi.put\"\n              }\n            }\n          },\n          \"description\": \"Model schema\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"result\": {\n                      \"$ref\": \"#/components/schemas/SavedQueryRestApi.put\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Item changed\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/422\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Queries\"]\n      }\n    },\n    \"/security/csrf_token/\": {\n      \"get\": {\n        \"description\": \"Fetch the CSRF token\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"result\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Result contains the CSRF token\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt\": []\n          }\n        ],\n        \"tags\": [\"Security\"]\n      }\n    },\n    \"/security/login\": {\n      \"post\": {\n        \"description\": \"Authenticate and get a JWT access and refresh token\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"password\": {\n                    \"description\": \"The password for authentication\",\n                    \"example\": \"complex-password\",\n                    \"type\": \"string\"\n                  },\n                  \"provider\": {\n                    \"description\": \"Choose an authentication provider\",\n                    \"enum\": [\"db\", \"ldap\"],\n                    \"example\": \"db\",\n                    \"type\": \"string\"\n                  },\n                  \"refresh\": {\n                    \"description\": \"If true a refresh token is provided also\",\n                    \"example\": true,\n                    \"type\": \"boolean\"\n                  },\n                  \"username\": {\n                    \"description\": \"The username for authentication\",\n                    \"example\": \"admin\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"access_token\": {\n                      \"type\": \"string\"\n                    },\n                    \"refresh_token\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Authentication Successful\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/400\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"tags\": [\"Security\"]\n      }\n    },\n    \"/security/refresh\": {\n      \"post\": {\n        \"description\": \"Use the refresh token to get a new JWT access token\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"access_token\": {\n                      \"description\": \"A new refreshed access token\",\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Refresh Successful\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/401\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/500\"\n          }\n        },\n        \"security\": [\n          {\n            \"jwt_refresh\": []\n          }\n        ],\n        \"tags\": [\"Security\"]\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v1\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/dropbox/incubator-superset-internal@8b3e27d68bcbb4ae1ab35f28b0346b551bd84214/-/blob/docs/static/resources/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/dropbox/incubator-superset-internal/blob/8b3e27d68bcbb4ae1ab35f28b0346b551bd84214/docs/static/resources/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/dashboard/favorite_status/\": get: responses: 200: contents: application/json: generate schema: save schema types: save referenced type: reference \"#/components/schemas/GetFavStarIdsSchema\" type name conflict: \"GetFavStarIdsSchema\""
}