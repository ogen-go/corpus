{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AlessandroRomanelli/ExpressO"
		},
		"file": {
			"name": "specA.yaml",
			"size": 0,
			"path": "spec/tests/examples/comparator/specA.yaml",
			"byteSize": 14402,
			"content": "openapi: 3.0.1\ninfo:\n  title: OpenAPI definition\n  version: v0\nservers:\n  - url: http://localhost:8080/api\n    description: Generated server url\npaths:\n  /repository:\n    get:\n      tags:\n        - git-repository-controller\n      operationId: getRepositoriesPage\n      parameters:\n        - name: pageable\n          in: query\n          required: true\n          schema:\n            $ref: '#/components/schemas/Pageable'\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PageGitRepositoryDTO'\n    post:\n      tags:\n        - git-repository-controller\n      operationId: submitRepositoryRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RepositoryUrlDTO'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/GitRepositorySmallDTO'\n  /repository/{id}/renaming:\n    get:\n      tags:\n        - git-repository-controller\n      operationId: getRenamingFiles\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n                format: binary\n    post:\n      tags:\n        - git-repository-controller\n      operationId: submitRepositoryRenamingRequest\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/GitRepositorySmallDTO'\n    patch:\n      tags:\n        - git-repository-controller\n      operationId: checkPredictionsFile\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                predictionsFile:\n                  type: string\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: OK\n  /repository/{id}:\n    get:\n      tags:\n        - git-repository-controller\n      operationId: getSingleGitRepositoryById\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/GitRepositoryDTO'\n    patch:\n      tags:\n        - git-repository-controller\n      operationId: updateRepository\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/GitRepositorySmallDTO'\n  /repository/{id}/status:\n    get:\n      tags:\n        - git-repository-controller\n      operationId: getGitRepositoryStatus\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n                enum:\n                  - IN_QUEUE\n                  - DOWNLOADING\n                  - MINING\n                  - ANALYZING\n                  - DONE\n                  - FAILED\n                  - PREDICTED\n  /repository/{id}/range:\n    get:\n      tags:\n        - git-repository-controller\n      operationId: getDataInTimeRange\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: start\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: end\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/GitRepositoryDataDTO'\n  /repository/{id}/labels:\n    get:\n      tags:\n        - git-repository-controller\n      operationId: getRepositoryLabels\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                uniqueItems: true\n                type: array\n                items:\n                  $ref: '#/components/schemas/Label'\n  /repository/{id}/issues:\n    get:\n      tags:\n        - git-repository-controller\n      operationId: getRepositoryIssues\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                uniqueItems: true\n                type: array\n                items:\n                  $ref: '#/components/schemas/IssueDTO'\n  /issue/{id}:\n    get:\n      tags:\n        - issue-controller\n      operationId: getSingleIssueById\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/IssueDTO'\n  /commit/{id}:\n    get:\n      tags:\n        - commit-controller\n      operationId: getSingleCommitById\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CommitDTO'\ncomponents:\n  schemas:\n    RepositoryUrlDTO:\n      type: object\n      properties:\n        url:\n          type: string\n    GitRepositorySmallDTO:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        title:\n          type: string\n        url:\n          type: string\n        lastUpdated:\n          type: string\n          format: date-time\n        status:\n          type: string\n          enum:\n            - IN_QUEUE\n            - DOWNLOADING\n            - MINING\n            - ANALYZING\n            - DONE\n            - FAILED\n            - PREDICTED\n    Pageable:\n      type: object\n      properties:\n        offset:\n          type: integer\n          format: int64\n        sort:\n          $ref: '#/components/schemas/Sort'\n        pageSize:\n          type: integer\n          format: int32\n        pageNumber:\n          type: integer\n          format: int32\n        paged:\n          type: boolean\n        unpaged:\n          type: boolean\n    Sort:\n      type: object\n      properties:\n        sorted:\n          type: boolean\n        unsorted:\n          type: boolean\n        empty:\n          type: boolean\n    GitRepositoryDTO:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        description:\n          type: string\n        forksCount:\n          type: integer\n          format: int32\n        commitsCount:\n          type: integer\n          format: int32\n        issuesCount:\n          type: integer\n          format: int32\n        labelsCount:\n          type: integer\n          format: int32\n        title:\n          type: string\n        url:\n          type: string\n        lastUpdated:\n          type: string\n          format: date-time\n        status:\n          type: string\n          enum:\n            - IN_QUEUE\n            - DOWNLOADING\n            - MINING\n            - ANALYZING\n            - DONE\n            - FAILED\n            - PREDICTED\n    PageGitRepositoryDTO:\n      type: object\n      properties:\n        totalPages:\n          type: integer\n          format: int32\n        totalElements:\n          type: integer\n          format: int64\n        size:\n          type: integer\n          format: int32\n        content:\n          type: array\n          items:\n            $ref: '#/components/schemas/GitRepositoryDTO'\n        number:\n          type: integer\n          format: int32\n        sort:\n          $ref: '#/components/schemas/Sort'\n        first:\n          type: boolean\n        numberOfElements:\n          type: integer\n          format: int32\n        last:\n          type: boolean\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        empty:\n          type: boolean\n    CommitSmallDTO:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        createdAt:\n          type: string\n          format: date-time\n    GitRepositoryDataDTO:\n      type: object\n      properties:\n        commits:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommitSmallDTO'\n        issues:\n          type: array\n          items:\n            $ref: '#/components/schemas/IssueSmallDTO'\n    IssueSmallDTO:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        createdAt:\n          type: string\n          format: date-time\n        closedAt:\n          type: string\n          format: date-time\n    Label:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        color:\n          type: string\n        description:\n          type: string\n        name:\n          type: string\n    IssueDTO:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        body:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        closedAt:\n          type: string\n          format: date-time\n        labels:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Label'\n        number:\n          type: integer\n          format: int32\n        status:\n          type: string\n          enum:\n            - OPEN\n            - CLOSED\n        title:\n          type: string\n        closedByCommits:\n          uniqueItems: true\n          type: array\n          items:\n            type: integer\n            format: int64\n    Author:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        relatedCommits:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Commit'\n        name:\n          type: string\n    Commit:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        hash:\n          type: string\n        author:\n          $ref: '#/components/schemas/Author'\n        createdAt:\n          type: string\n          format: date-time\n        message:\n          type: string\n        body:\n          type: string\n        addedFiles:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        modifiedFiles:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        deletedFiles:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        closingIssues:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Issue'\n        averageCboDifference:\n          type: number\n          format: double\n        averageLocDifference:\n          type: number\n          format: double\n        averageWmcDifference:\n          type: number\n          format: double\n        averageLcomDifference:\n          type: number\n          format: double\n    CommitDTO:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        hash:\n          type: string\n        author:\n          $ref: '#/components/schemas/Author'\n        createdAt:\n          type: string\n          format: date-time\n        message:\n          type: string\n        body:\n          type: string\n        addedFiles:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        modifiedFiles:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        deletedFiles:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        closingIssues:\n          uniqueItems: true\n          type: array\n          items:\n            type: integer\n            format: int64\n        averageCboDifference:\n          type: number\n          format: double\n        averageLocDifference:\n          type: number\n          format: double\n        averageWmcDifference:\n          type: number\n          format: double\n        averageLcomDifference:\n          type: number\n          format: double\n    Issue:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        body:\n          type: string\n        closedAt:\n          type: string\n          format: date-time\n        createdAt:\n          type: string\n          format: date-time\n        labels:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Label'\n        number:\n          type: integer\n          format: int32\n        status:\n          type: string\n          enum:\n            - OPEN\n            - CLOSED\n        title:\n          type: string\n        closedByCommits:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Commit'\n",
			"canonicalURL": "/github.com/AlessandroRomanelli/ExpressO@07c1725e27546e2c79159f2094a4906490bc4d22/-/blob/spec/tests/examples/comparator/specA.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/AlessandroRomanelli/ExpressO/blob/07c1725e27546e2c79159f2094a4906490bc4d22/spec/tests/examples/comparator/specA.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/repository\": get: parameters: \"pageable\": field \"Sort\": nested objects not allowed",
	"NotImplemented": [
		"unsupported content types"
	]
}