{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/alifcapital/swift"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/swift/swiftref/api/swagger.yaml",
			"byteSize": 133266,
			"content": "openapi: 3.0.0\ninfo:\n  title: SWIFTRef API\n  description: SWIFTRef API\n  termsOfService: https://www.swift.com/file/8611/download?token=71xFjDkK\n  contact:\n    name: Standards \u0026 Developer Hub\n    url: https://developer.swift.com\n    email: developer-support@swift.com\n  license:\n    name: API Restricted License\n    url: https://www.swift.com/file/56776/download?token=8w8DC4eF\n  version: 1.6.0\nservers:\n- url: https://api.swift.com/swiftrefdata\n  description: Live environment\n- url: https://sandbox.swift.com/swiftrefdata\n  description: Sandbox environment\nsecurity:\n- oAuth2Password:\n  - urn:swiftref:external\npaths:\n  /v2/ibans/{iban}/validity:\n    get:\n      tags:\n      - ibans\n      summary: Check validity of an IBAN.\n      description: \"You can check whether an IBAN is valid, that is its country code,\\\n        \\ structure, length, and checksum are valid. It also checks that the bank\\\n        \\ ID exists and that it is allowed for use in the IBANs. If the bank ID is\\\n        \\ not allowed, then it is listed in the Exclusion List. This list contains\\\n        \\ bank IDs that must not be used in IBANs. This validity call allows for very\\\n        \\ fast, low overhead checking of the validity of an IBAN.\"\n      operationId: getIbanValidity_v2\n      parameters:\n      - name: iban\n        in: path\n        description: IBAN to validate\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DE04500700100532013000\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: The IBAN is valid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.IVAL\n                  user_message: The IBAN is valid\n                  more_info: ISO 13616\n                iban: DE04500700100532013000\n                validity: IVAL\n        \"400\":\n          description: Wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.MIRI\n                  user_message: Wrong URL format\n                  developer_message: \"Invalid IBAN resource identifier (not matching\\\n                    \\ expression [a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}) or missing\\\n                    \\ IBAN resource identifier\"\n                  more_info: ISO 13616\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: ISO IBAN country code prefix is not valid or IBAN length is\n            invalid or IBAN checksum is invalid or Bank ID is not known to SWIFT or\n            The bank ID is invalid according to the EXCLUSION LIST or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.IICC\n                  user_message: ISO IBAN country code prefix is not valid\n                  developer_message: The country code prefix is not listed in the\n                    IBANSTRUCTURE file and the ISO IBAN Registry\n                  more_info: ISO 3166\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/ibans/{iban}/bic:\n    get:\n      tags:\n      - ibans\n      summary: Get the BIC for an IBAN.\n      description: \"For a given IBAN, you can retrieve the BIC of the institution\\\n        \\ that services the IBAN. This API is compliant with the requirement for BIC\\\n        \\ from IBAN derivation defined in the Regulation (EU) No 260/2012.\"\n      operationId: getBicFromIban_v2\n      parameters:\n      - name: iban\n        in: path\n        description: IBAN for which the corresponding BIC is requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DE04500700100532013000\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding BIC found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_1'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.BIWF\n                  user_message: Corresponding BIC found\n                  developer_message: \"The IBAN is valid, exists and has one BIC associated\"\n                  more_info: ISO 13616\n                bic: DEUTDEFFXXX\n        \"400\":\n          description: Wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.MIRI\n                  user_message: Wrong URL format\n                  developer_message: \"Invalid IBAN resource identifier (not matching\\\n                    \\ expression [a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}) or missing\\\n                    \\ IBAN resource identifier\"\n                  more_info: ISO 13616\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding BIC found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.BINF\n                  user_message: No corresponding BIC found\n                  developer_message: The supplied IBAN does not exist or has no BIC\n                    associated\n                  more_info: ISO 13616\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/ibans/{iban}:\n    get:\n      tags:\n      - ibans\n      summary: Get details for an IBAN.\n      description: \"For a given IBAN, you can obtain the components of the IBAN.\"\n      operationId: getIbanDetails_v2\n      parameters:\n      - name: iban\n        in: path\n        description: IBAN for which details are requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DE04500700100532013000\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding IBAN found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_2'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.IBWF\n                  user_message: Corresponding IBAN found\n                  more_info: ISO 13616\n                iban: DE04500700100532013000\n                country_code: DE\n                checksum: 4\n                bank_id: 50070010\n                account_number: 532013000\n                length: 22\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding IBAN found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.IBNF\n                  user_message: No corresponding IBAN found\n                  developer_message: The supplied IBAN does not exist\n                  more_info: ISO 3166\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/iban_national_ids/{iban_national_id}/bic:\n    get:\n      tags:\n      - iban_national_ids\n      summary: Get the BIC for an IBAN national ID.\n      description: \"For a given IBAN national ID, you can retrieve the BIC of the\\\n        \\ institution that services the IBAN.\"\n      operationId: getBicFromIbanNationalId_v2\n      parameters:\n      - name: iban_national_id\n        in: path\n        description: IBAN national ID for which the corresponding BIC is requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: 5007001\n      - name: country_code\n        in: query\n        description: The 2-character ISO 3166-1 country code of the country that issued\n          the IBAN National ID\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: DE\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding BIC found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_3'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.BICF\n                  user_message: BIC found\n                bic: DEUTDEFFXXX\n        \"400\":\n          description: \"Invalid parameters, missing required parameters or wrong URL\\\n            \\ format\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithShortStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.ICCF\n                  developer_message: Invalid country code format\n                  more_info: ISO 13616\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding BIC found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithShortStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.IINI\n                  user_message: No corresponding BIC found\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/bbans/{bban}/iban:\n    get:\n      tags:\n      - bbans\n      summary: Get the IBAN from a BBAN.\n      description: \"For a given Basic Bank Account Number (BBAN), you can retrieve\\\n        \\ the corresponding IBAN; you must also provide a country code\"\n      operationId: getIbanFromBban_v2\n      parameters:\n      - name: bban\n        in: path\n        description: BBAN for which the corresponding IBAN is requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: 500700100532013000\n      - name: country_code\n        in: query\n        description: The 2-character ISO 3166-1 country code of the country that issued\n          the National ID\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: DE\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding IBAN found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_4'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.IBWF\n                  user_message: Corresponding IBAN found\n                  more_info: ISO 13616\n                iban: DE04500700100532013000\n        \"400\":\n          description: Invalid country code parameter or invalid parameters or wrong\n            URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.MIRI\n                  user_message: Invalid country code parameter\n                  developer_message: Supplied country code parameter does not exist\n                  more_info: ISO 3166\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding IBAN found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.IBNF\n                  user_message: No corresponding IBAN found\n                  more_info: ISO 13616\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/bics/{bic}:\n    get:\n      tags:\n      - bics\n      summary: Get details of a BIC.\n      description: \"For a given BIC, you can retrieve the details of that BIC, that\\\n        \\ is the bank name or business name, and the address.\"\n      operationId: getBicDetails_v2\n      parameters:\n      - name: bic\n        in: path\n        description: BIC (8-characters or 11-characters) for which details are requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DEUTDEFFXXX\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding BIC found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_5'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.BIWF\n                  user_message: Corresponding BIC found\n                  developer_message: BIC is valid and it exists within the BIC Directory\n                  more_info: ISO 9362:2009\n                bic: DEUTDEFFXXX\n                institution_name: DEUTSCHE BANK AG\n                branch_information: Deutsche Bank Frankfurt F\n                address:\n                  address_lines:\n                  - TAUNUSANLAGE 12\n                  town_name: FRANKFURT AM MAIN\n                  country_subdivision: HESSE\n                  post_code: 60262\n                  country_name: GERMANY\n                  country_code: DE\n                office_type: HO\n                swift_services:\n                - code: TGT\n                  name: TARGET2 DIRECT PARTICIPANTS\n                - code: EBA\n                  name: EBA CLEARING - EURO1\n                - code: ERP\n                  name: EBA CLEARING - STEP1\n                - code: PCH\n                  name: SWISS INTERBANK CLEARING (SIC)\n                - code: SCO\n                  name: SCORE FIN\n                - code: FIN\n                  name: Many-to-many FIN payment service\n                swift_connectivity:\n                  fin: true\n                  interact: true\n                  fileact: true\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding BIC found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.BINF\n                  user_message: No corresponding BIC found\n                  developer_message: The supplied BIC does not exist within the BIC\n                    Directory\n                  more_info: ISO 9362:2009\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/bics/{bic}/validity:\n    get:\n      tags:\n      - bics\n      summary: Check validity of a BIC.\n      description: \"You can check whether a BIC is correct and valid, that is whether\\\n        \\ it is published in the BIC Directory; optionally, you can check whether\\\n        \\ a BIC was valid at a particular date in the past\"\n      operationId: getBicValidity_v2\n      parameters:\n      - name: bic\n        in: path\n        description: BIC (8-characters or 11-characters) to validate\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DEUTDEFFXXX\n      - name: effective_date\n        in: query\n        description: A date in YYYY-MM-DD format\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: 2019-01-01\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Valid BIC\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_6'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.VBIC\n                  user_message: Valid BIC\n                  developer_message: \"BIC resource identifier matches expression [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}\\\n                    \\ and it exists within the BIC Directory (and is valid on the\\\n                    \\ supplied date, if date supplied with the correct parameter name)\"\n                  more_info: ISO 9362\n                bic: DEUTDEFFXXX\n                validity: VBIC\n                effective_date: 2019-01-01Z\n        \"400\":\n          description: Invalid BIC format or BIC not supplied or invalid date parameter\n            or wrong URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.MBRI\n                  user_message: Invalid BIC format or BIC not supplied\n                  developer_message: \"Invalid BIC resource identifier (not matching\\\n                    \\ expression [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1})\\\n                    \\ or missing BIC resource identifier\"\n                  more_info: ISO 9362\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: Invalid BIC or BIC not found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.IBIC\n                  user_message: Invalid BIC\n                  developer_message: \"BIC resource identifier matches expression [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1},\\\n                    \\ but it does not exist within the BIC Directory (or is invalid\\\n                    \\ on the supplied date, if supplied)\"\n                  more_info: ISO 9362\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/bics/{bic}/lei:\n    get:\n      tags:\n      - bics\n      summary: Get the LEI for a BIC.\n      description: \"For a given BIC, you can retrieve the LEI of that BIC.\"\n      operationId: getLeiFromBic_v2\n      parameters:\n      - name: bic\n        in: path\n        description: BIC (8-characters or 11-characters) for which the corresponding\n          LEI is requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DEUTDEFFXXX\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding LEI found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_7'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.LEIF\n                  user_message: Corresponding LEI found\n                  developer_message: The BIC exists and has one LEI associated\n                lei: 7LTWFZYICNSX8D621K86\n        \"400\":\n          description: Wrong URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.MBRI\n                  user_message: Wrong URL format\n                  developer_message: Missing BIC resource identifier\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding LEI found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.LEIN\n                  user_message: No corresponding LEI found\n                  developer_message: The BIC does not exist or has no LEI associated\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/leis/{lei}/bic:\n    get:\n      tags:\n      - leis\n      summary: Get the BIC for an LEI.\n      description: \"For a given LEI, you can retrieve the BIC of that LEI.\"\n      operationId: getBicFromLei_v2\n      parameters:\n      - name: lei\n        in: path\n        description: LEI (20-characters) for which the corresponding BIC is requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: 7LTWFZYICNSX8D621K86\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding BIC found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_8'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.BIWF\n                  user_message: Corresponding BIC found\n                  developer_message: \"The LEI is valid, exists and has one BIC associated\"\n                  more_info: ISO 17442\n                bic: DEUTDEFFXXX\n        \"400\":\n          description: Wrong URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.MLRI\n                  user_message: Wrong URL format\n                  developer_message: Missing LEI resource identifier\n                  more_info: ISO 17442\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding BIC found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.BINF\n                  user_message: No corresponding BIC found\n                  developer_message: The LEI does not exist or has no BIC associated\n                  more_info: ISO 17442\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/bics/{bic}/national_ids:\n    get:\n      tags:\n      - bics\n      summary: Get National IDs for a BIC.\n      description: \"For a given BIC, you can retrieve the National IDs of that BIC.\"\n      operationId: getNationalIdsFromBic_v2\n      parameters:\n      - name: bic\n        in: path\n        description: BIC (8-characters or 11-characters) for which the corresponding\n          National IDs are requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DEUTDEFFXXX\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding National ID(s) found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_9'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.NIDF\n                  user_message: Corresponding National ID(s) found\n                  developer_message: The supplied BIC exists and has at least one\n                    National ID associated\n                national_ids:\n                - id: 50070010\n                  scheme: BLZ\n        \"400\":\n          description: Wrong URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.MBRI\n                  user_message: Wrong URL format\n                  developer_message: Missing BIC resource identifier\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding National ID found or BIC not found or wrong\n            URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.NNIF\n                  user_message: No corresponding National ID found\n                  developer_message: The supplied BIC does not exist or has no National\n                    ID associated\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/bics/{bic}/reachability:\n    get:\n      tags:\n      - bics\n      summary: Validate SEPA reachability of a BIC.\n      description: \"For a given BIC and SEPA payment scheme, you can validate that\\\n        \\ it can be reached for SEPA payments and return the SEPA channel CSM (Clearing\\\n        \\ and Settlement System) through which the bank owning the BIC can be reached;\\\n        \\ the response also returns the adherence BIC that signed the adherence agreement\\\n        \\ with the EPC and the intermediary institution's BIC (if applicable and available)\"\n      operationId: getSepaReachabilityFromBic_v2\n      parameters:\n      - name: bic\n        in: path\n        description: BIC (8-characters or 11-characters) for which SEPA reachability\n          is requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DEUTDEFFXXX\n      - name: sepa_scheme\n        in: query\n        description: SEPA service code\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: SDD\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Payment channel(s) found with the supplied BIC and scheme\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_10'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.PCFB\n                  user_message: Payment channel(s) found with the supplied BIC and\n                    scheme\n                  developer_message: The supplied BIC exists and has at least one\n                    payment channel associated with the supplied SEPA scheme\n                  more_info: http://www.europeanpaymentscouncil.eu/index.cfm/sepa-direct-debit/what-is-a-payment-scheme/\n                payment_channels:\n                - id: EBAS\n                  member_type: DRCT\n        \"400\":\n          description: Invalid SEPA scheme parameter or wrong URL format or invalid\n            request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.ISSC\n                  user_message: Invalid SEPA scheme parameter\n                  developer_message: \"SEPA scheme parameter not supplied, supplied\\\n                    \\ with a wrong parameter name or the SEPA scheme does not exist\\\n                    \\ (only SDD, SCT, SDB and SCTINST allowed)\"\n                  more_info: http://www.europeanpaymentscouncil.eu/index.cfm/sepa-direct-debit/what-is-a-payment-scheme/\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No payment channel found with the supplied BIC and scheme or\n            wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.ICHA\n                  user_message: No payment channel found with the supplied BIC and\n                    scheme\n                  developer_message: The supplied BIC does not exist or has no payment\n                    channel associated with the supplied SEPA scheme\n                  more_info: http://www.europeanpaymentscouncil.eu/index.cfm/sepa-direct-debit/what-is-a-payment-scheme/\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/bics/{bic}/ssis:\n    get:\n      tags:\n      - bics\n      summary: Get SSIs for a BIC.\n      description: \"For a given BIC, you can retrieve the Standing Settlement Instructions\\\n        \\ (SSIs) for that BIC, for a given currency, and (optionally) an SSI category\\\n        \\ (wholesale or retail).\"\n      operationId: getSsisFromBic_v2\n      parameters:\n      - name: bic\n        in: path\n        description: BIC (8-characters or 11-characters) for which the corresponding\n          SSIs are requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DEUTDEFFXXX\n      - name: currency_code\n        in: query\n        description: A 3-character currency code for which SSI data needs to be retrieved\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: AED\n      - name: ssi_category\n        in: query\n        description: \"Code that indicates the SSI category for which SSI data needs\\\n          \\ to be retrieved, that is COPA or WHLS\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: COPA\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: SSI(s) found with the supplied parameters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_11'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.SSIF\n                  user_message: SSI(s) found with the supplied parameters\n                  developer_message: The supplied BIC exists and has at least one\n                    SSI with the specified currency and category\n                  more_info: http://swiftref.swift.com/sites/sdcref/files/ssi_plus_v2_txt_files_tech_spec.pdf\n                ssis:\n                - owner_bic: DEUTDEFFXXX\n                  institution_name: DEUTSCHE BANK AG\n                  branch_information: Deutsche Bank Frankfurt F\n                  address:\n                    address_lines:\n                    - TAUNUSANLAGE 12\n                    town_name: FRANKFURT AM MAIN\n                    country_subdivision: HESSE\n                    post_code: 60262\n                    country_name: GERMANY\n                    country_code: DE\n                  currency_code: AED\n                  direct: true\n                  correspondent:\n                    bic: NBADAEAAVOS\n                    account: AE340350000000250007510\n                    preferred: false\n        \"400\":\n          description: Invalid currency parameter or invalid SSI category parameter\n            or wrong URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.ICCY\n                  user_message: Invalid currency parameter\n                  developer_message: \"Currency parameter not supplied, supplied with\\\n                    \\ a wrong parameter name or it does not exist (not ISO 4217-compliant)\"\n                  more_info: ISO 4217\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No SSI matching the supplied parameters or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.NOSS\n                  user_message: No SSI matching the supplied parameters\n                  developer_message: The supplied BIC does not exist or has no SSI\n                    with the specified currency and category\n                  more_info: http://swiftref.swift.com/sites/sdcref/files/ssi_plus_v2_txt_files_tech_spec.pdf\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/national_ids/{national_id}:\n    get:\n      tags:\n      - nationalIds\n      summary: Get details of a National ID.\n      description: \"For a given National ID, you can retrieve the details of that\\\n        \\ National ID, that is the bank name or business name, and the address. You\\\n        \\ must provide either a country code, or an indication to which scheme the\\\n        \\ National ID belongs.\"\n      operationId: getNationalIdDetails_v2\n      parameters:\n      - name: national_id\n        in: path\n        description: \"National ID (a synonym for clearing code, routing code, sort\\\n          \\ code, bank and branch ID) for which details are requested\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: 50070010\n      - name: country_code\n        in: query\n        description: \"The 2-character ISO 3166-1 country code of the country that\\\n          \\ issued the National ID (mandatory, when scheme parameter is not provided)\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: DE\n      - name: scheme\n        in: query\n        description: \"The scheme (a synonym for the National ID type) under which\\\n          \\ the National ID is defined (mandatory, when country_code parameter is\\\n          \\ not provided)\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: BLZ\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      - name: only_local_language\n        in: query\n        description: Whether fields must be returned in local language\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: boolean\n        example: true\n      responses:\n        \"200\":\n          description: Corresponding National ID(s) found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_12'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.NIDF\n                  user_message: Corresponding National ID found\n                  more_info: Bank Directory Plus V3 Technical Specifications\n                national_ids:\n                - id: 50070010\n                  scheme: BLZ\n                  institution_name: DEUTSCHE BANK AG\n                  branch_information: Deutsche Bank Frankfurt F\n                  address:\n                    address_lines:\n                    - TAUNUSANLAGE 12\n                    town_name: FRANKFURT AM MAIN\n                    country_subdivision: HESSE\n                    post_code: 60262\n                    country_name: GERMANY\n                    country_code: DE\n                  office_type: HO\n        \"400\":\n          description: Invalid scheme parameter or invalid country code parameter\n            or invalid parameters or wrong URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.ICTP\n                  user_message: Invalid scheme parameter\n                  developer_message: Supplied scheme does not exist (/AN and /FN suffixes\n                    are not allowed)\n                  more_info: Bank Directory Plus V3 Technical Specifications\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding National ID found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.NNIF\n                  user_message: National ID not found\n                  more_info: Bank Directory Plus V3 Technical Specifications\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/national_ids/{national_id}/validity:\n    get:\n      tags:\n      - nationalIds\n      summary: Check the Validity of a National ID.\n      description: \"With this API call, you can check whether a National ID format\\\n        \\ is correct and the value exists in SWIFT's list of National IDs; you need\\\n        \\ to provide the National ID, and either a country code, or an indication\\\n        \\ to which scheme this National ID belongs; in addition to v1, v2 of the API\\\n        \\ provides a country-specific validation of the National ID's format\"\n      operationId: getNationalIdValidity_v2\n      parameters:\n      - name: national_id\n        in: path\n        description: \"National ID (a synonym for clearing code, routing code, sort\\\n          \\ code, bank and branch ID) to validate\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: 50070010\n      - name: country_code\n        in: query\n        description: \"The 2-character ISO 3166-1 country code of the country that\\\n          \\ issued the National ID (mandatory, when scheme parameter is not provided)\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: DE\n      - name: scheme\n        in: query\n        description: \"The scheme (a synonym for the National ID type) under which\\\n          \\ the National ID is defined (mandatory, when country_code parameter is\\\n          \\ not provided)\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: BLZ\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: The National ID is valid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_13'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.VNID\n                  user_message: The National ID is valid\n                  developer_message: The National ID's existence is confirmed against\n                    SWIFT's list of National IDs. This implies the format is correct\n                    so it is not checked explicitly\n                  more_info: Bank Directory Plus V3 Technical Specifications\n                national_id: 50070010\n                scheme: BLZ\n                validity: VNID\n        \"400\":\n          description: Invalid scheme parameter or invalid country code parameter\n            or invalid parameters or wrong URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.ICCP\n                  user_message: Invalid country code parameter\n                  developer_message: Supplied country code does not exist\n                  more_info: ISO 3166\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: \"The National ID is formally invalid or is valid but it does\\\n            \\ not exist, or wrong URL format\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.INID\n                  user_message: The National ID format is valid but it does not exist\n                  developer_message: \"The supplied National ID format matches the\\\n                    \\ generic expression [0-9A-Z]{2,15} but it does not exist\"\n                  more_info: Bank Directory Plus V3 Technical Specifications\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/national_ids/{national_id}/bics:\n    get:\n      tags:\n      - nationalIds\n      summary: Get BICs of a National ID.\n      description: \"For a given National ID, you can retrieve the BIC or the BICs\\\n        \\ of that National ID; you need to provide the National ID, and either a country\\\n        \\ code, or an indication to which scheme this National ID belongs\"\n      operationId: getBicsFromNationalId_v2\n      parameters:\n      - name: national_id\n        in: path\n        description: \"National ID (a synonym for clearing code, routing code, sort\\\n          \\ code, bank and branch ID) for which the corresponding BICs are requested\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: 50070010\n      - name: country_code\n        in: query\n        description: \"The 2-character ISO 3166-1 country code of the country that\\\n          \\ issued the National ID (mandatory, when scheme parameter is not provided)\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: DE\n      - name: scheme\n        in: query\n        description: \"The scheme (a synonym for the National ID type) under which\\\n          \\ the National ID is defined (mandatory, when country_code parameter is\\\n          \\ not provided)\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: BLZ\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding BIC(s) found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_14'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.BIWF\n                  user_message: Corresponding BIC(s) found\n                  developer_message: The supplied National ID exists with the supplied\n                    scheme and has at least one BIC associated\n                  more_info: Bank Directory Plus V3 Technical Specifications\n                bics:\n                - DEUTDEFFXXX\n        \"400\":\n          description: Invalid scheme parameter or invalid country code parameter\n            or invalid parameters or wrong URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.ICTP\n                  user_message: Invalid scheme parameter\n                  developer_message: Supplied scheme does not exist\n                  more_info: Bank Directory Plus V3 Technical Specifications\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding BIC found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.BINF\n                  user_message: No corresponding BIC found\n                  developer_message: \"The supplied National ID does not exist, does\\\n                    \\ not exist with the supplied scheme or country code or has no\\\n                    \\ BIC associated\"\n                  more_info: Bank Directory Plus V3 Technical Specifications\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/country_codes/{country_code}/validity:\n    get:\n      tags:\n      - country_codes\n      summary: Check validity of a country code.\n      description: You can check whether a country code is correct and valid\n      operationId: getCountryCodeValidity_v2\n      parameters:\n      - name: country_code\n        in: path\n        description: \"Country code (2-letters, 3-letters or 3-digits) to validate\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DE\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Valid country code\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_15'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.VCOC\n                  user_message: The country code is valid\n                  developer_message: \"The country code matches one of the three supported\\\n                    \\ formats (2a, 3a or 3n) and it exists\"\n                  more_info: ISO 3166\n                country_code: IT\n                validity: VCOC\n        \"400\":\n          description: Invalid country code format or country code not supplied or\n            wrong URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.MCRI\n                  user_message: \"The country code is not in one of the three supported\\\n                    \\ formats: 2a, 3a or 3n\"\n                  more_info: ISO 3166\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: Invalid country code or country code not found or wrong URL\n            format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.ICOC\n                  user_message: The country code does not exist\n                  developer_message: \"The country code matches one of the three supported\\\n                    \\ formats (2a, 3a or 3n), but it does not exist\"\n                  more_info: ISO 3166\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/country_codes/{country_code}:\n    get:\n      tags:\n      - country_codes\n      summary: Get details of a country code.\n      description: \"For a given country code, you can retrieve the details of that\\\n        \\ country code, that is the name, other codes and official currencies.\"\n      operationId: getCountryCodeDetails_v2\n      parameters:\n      - name: country_code\n        in: path\n        description: \"Country code (2-letters, 3-letters or 3-digits) for which details\\\n          \\ are requested\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: DE\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding country code found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_16'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.COWF\n                  user_message: Valid country code\n                  developer_message: \"The country code matches one of the three supported\\\n                    \\ formats (2a, 3a or 3n) and it exists\"\n                  more_info: ISO 3166\n                name: ITALY\n                iso_2a_code: IT\n                iso_3a_code: ITA\n                iso_3n_code: 380\n                currencies:\n                - iso_3a_code: EUR\n                  iso_3n_code: 978\n                  name: EURO\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding country code found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.CONF\n                  user_message: Invalid country code\n                  more_info: ISO 3166\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/currency_codes/{currency_code}/validity:\n    get:\n      tags:\n      - currency_codes\n      summary: Check validity of a currency code.\n      description: You can check whether a currency code is correct and valid\n      operationId: getCurrencyCodeValidity_v2\n      parameters:\n      - name: currency_code\n        in: path\n        description: Currency code (3-letters or 3-digits) to validate\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: EUR\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Valid currency code\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_17'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.VCUC\n                  user_message: The currency code is valid\n                  developer_message: The currency code matches one of the two supported\n                    formats (3a or 3n) and it exists\n                  more_info: ISO 4217\n                currency_code: EUR\n                validity: VCUC\n        \"400\":\n          description: Invalid currency code format or currency code not supplied\n            or wrong URL format or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.MCRI\n                  user_message: \"The currency code is not in one of the two supported\\\n                    \\ formats: 3a or 3n\"\n                  more_info: ISO 4217\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: Invalid currency code or currency code not found or wrong URL\n            format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.ICUC\n                  user_message: The currency code does not exist\n                  developer_message: \"The currency code matches one of the two supported\\\n                    \\ formats (3a or 3n), but it does not exist\"\n                  more_info: ISO 4217\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/currency_codes/{currency_code}:\n    get:\n      tags:\n      - currency_codes\n      summary: Get details of a currency code.\n      description: \"For a given currency code, you can retrieve the details of that\\\n        \\ currency code, that is the name, other codes, the fractional digits and\\\n        \\ the list of countries where the currency is used\"\n      operationId: getCurrencyCodeDetails_v2\n      parameters:\n      - name: currency_code\n        in: path\n        description: Currency code (3-letters or 3-digits) for which details are requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: EUR\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding currency code found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_18'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.CUCF\n                  user_message: Valid currency code\n                  developer_message: The currency code matches one of the two supported\n                    formats (3a or 3n) and it exists\n                  more_info: ISO 4217\n                name: US DOLLAR\n                iso_3a_code: USD\n                iso_3n_code: 840\n                fractional_digits: 2\n                countries:\n                - iso_2a_code: AS\n                  iso_3a_code: ASM\n                  iso_3n_code: 16\n                  name: AMERICAN SAMOA\n                - iso_2a_code: BQ\n                  iso_3a_code: BES\n                  iso_3n_code: 535\n                  name: \"BONAIRE, SINT EUSTATIUS AND SABA\"\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding currency code found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.CCNF\n                  user_message: Invalid currency code\n                  more_info: ISO 4217\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/leis/{lei}/validity:\n    get:\n      tags:\n      - leis\n      summary: Check validity of a LEI.\n      description: You can check whether a LEI is correct and valid\n      operationId: getLeiValidity_v2\n      parameters:\n      - name: lei\n        in: path\n        description: LEI to validate\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: BFXS5XCH7N0Y05NIXW11\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Valid LEI\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_19'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.VLEI\n                  user_message: Valid LEI\n                  developer_message: \"LEI resource identifier matches expression [0-9A-Z]{20}\\\n                    \\ and it exists\"\n                  more_info: ISO 17442\n                lei: BFXS5XCH7N0Y05NIXW11\n                validity: VLEI\n        \"400\":\n          description: Invalid LEI format or LEI not supplied or wrong URL format\n            or invalid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.MCRI\n                  user_message: Wrong URL format\n                  developer_message: Missing LEI resource identifier\n                  more_info: ISO 17442\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: Invalid LEI or LEI not found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.ILEI\n                  user_message: Invalid LEI\n                  developer_message: \"LEI resource identifier matches expression [0-9A-Z]{20},\\\n                    \\ but it does not exist\"\n                  more_info: ISO 17442\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/leis/{lei}:\n    get:\n      tags:\n      - leis\n      summary: Get details of a LEI.\n      description: \"For a given LEI, you can retrieve the details of that LEI\"\n      operationId: getLeiDetails_v2\n      parameters:\n      - name: lei\n        in: path\n        description: LEI for which details are requested\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: BFXS5XCH7N0Y05NIXW11\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Corresponding LEI found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_20'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.LEWF\n                  user_message: LEI found\n                  developer_message: The LEI exists\n                  more_info: The LEI might be active or inactive (ISO 17442)\n                lei: BFXS5XCH7N0Y05NIXW11\n                legal_name: ABN AMRO Bank N.V.\n                address:\n                  street_address:\n                  - Gustav Mahlerlaan 10\n                  city: Amsterdam\n                  region: NL-NH\n                  postal_code: 1082 PP\n                  country_name: NETHERLANDS\n                head_quarters_address:\n                  street_address:\n                  - Gustav Mahlerlaan 10\n                  city: Amsterdam\n                  region: NL-NH\n                  postal_code: 1082 PP\n                  country_name: NETHERLANDS\n                legal_jurisdiction: NL\n                legal_form: NAAMLOZE VENNOOTSCHAP\n                entity_legal_form_code: B5PM\n                entity_status: ACTIVE\n                initial_registration_date: 2012-06-06\n                last_update_date: 2018-08-16\n                registration_status: ISSUED\n                associated:\n                  entity_type: FUND_FAMILY\n                  lei: W51AX6427FJZJFPF8H34\n                  entity_name: \"EUROAGENTES GESTION SGIIC, S.A.\"\n                entity_expiration:\n                  date: 2018-04-17\n                  reason: DISSOLVED\n                successor:\n                  lei: CYZ5AAG3SVPY3KMG6Q07\n                  name: Specialplast Wensbo AB\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: No corresponding LEI found or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.LENF\n                  user_message: LEI not found\n                  developer_message: The LEI does not exist\n                  more_info: ISO 17442\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n  /v2/account_numbers/{account_number}/validity:\n    get:\n      tags:\n      - account_numbers\n      summary: \"Check validity of account number formats, including IBANs.\"\n      description: \"Check validity of account number formats, including IBANs, issued\\\n        \\ in almost any country in the world\"\n      operationId: getAccountNumberValidity_v2\n      parameters:\n      - name: account_number\n        in: path\n        description: Account number to validate\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        example: X0542811101000000123456\n      - name: country_code\n        in: query\n        description: ISO 2-letter country code of the country where the account is\n          held\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: DE\n      - name: is_iban\n        in: query\n        description: Whether the account number must be handled as an IBAN\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: true\n      - name: usage\n        in: query\n        description: How the account number is used (only for a few countries)\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          enum:\n          - retail\n          - wholesale\n        example: retail\n      - name: national_id\n        in: query\n        description: \"National ID (bank ID, clearing code, sort code, routing number)\\\n          \\ of the account holding institution\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          pattern: \"^[0-9a-zA-Z]{2,20}$\"\n          type: string\n        example: 542811101\n      - name: bic\n        in: query\n        description: BIC-8 or BIC-11 of the account holding institution\n        required: false\n        style: form\n        explode: true\n        schema:\n          pattern: \"^[0-9a-zA-Z]{8}([0-9a-zA-Z]{3})?$\"\n          type: string\n        example: DEUTDEFFXXX\n      - name: API-Status\n        in: header\n        description: \"Whether status item must always be returned within responses\\\n          \\ (by default, positive responses do not report status)\"\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n          enum:\n          - verbose\n      responses:\n        \"200\":\n          description: Valid account number\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_21'\n              example:\n                status:\n                  http: 200\n                  code: REDA.API.AVAL\n                  user_message: The account number (non-IBAN) is valid\n                  more_info: The country standard format is applied for validation\n                account_number: X0542811101000000123456\n                validity: AVAL\n        \"400\":\n          description: \"Invalid parameters, required parameters not supplied or wrong\\\n            \\ URL format or invalid request\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 400\n                  code: REDA.API.INVP\n                  user_message: Invalid parameters\n                  developer_message: Either BIC or country code parameter must be\n                    supplied\n        \"401\":\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\n        \"404\":\n          description: Invalid account format or invalid checksum or wrong URL format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 404\n                  code: REDA.API.ANCI\n                  user_message: \"At least one account number checksum is invalid:\\\n                    \\ CHECKSUM\"\n                  developer_message: At least one checksum is different from the calculated\n                    checksum\n        default:\n          description: You do not have sufficient privileges to execute this service\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithStatus'\n              example:\n                status:\n                  http: 401\n                  code: REDA.API.ILIC\n                  user_message: You do not have sufficient privileges to execute this\n                    service\n                  developer_message: \"Unallowed access (user account credentials not\\\n                    \\ provided, wrong user account credentials or user account without\\\n                    \\ permission)\"\ncomponents:\n  schemas:\n    WithShortStatus:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/ShortStatus'\n    WithStatus:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n    WithStatusWithReliability:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/StatusWithReliability'\n    ShortStatus:\n      required:\n      - code\n      - http\n      type: object\n      properties:\n        http:\n          type: string\n          description: A repeat of the HTTP status code\n        code:\n          type: string\n          description: \"An error code or status code, unique across all SWIFT APIs\"\n        user_message:\n          type: string\n          description: Provided in case your application needs to display a short\n            error message to a human end-user\n        developer_message:\n          type: string\n          description: A verbose description for a developer of the possible causes\n            of the error and the possible fixes\n        more_info:\n          type: string\n          description: \"A hyperlink to an explanation of the error for developers,\\\n            \\ possibly with further pointers to community input\"\n      example:\n        code: code\n        developer_message: developer_message\n        http: http\n        user_message: user_message\n        more_info: more_info\n    Status:\n      allOf:\n      - $ref: '#/components/schemas/ShortStatus'\n      - required:\n        - user_message\n    StatusWithReliability:\n      allOf:\n      - $ref: '#/components/schemas/Status'\n      - type: object\n        properties:\n          reliability:\n            maximum: 100\n            minimum: 0\n            type: integer\n    Address:\n      required:\n      - country_code\n      - country_name\n      type: object\n      properties:\n        address_lines:\n          type: array\n          description: \"An array of maximum 4 lines (strings) expressing the street\\\n            \\ address of the BIC, e.g. street name, house number, building name and\\\n            \\ floor, area\"\n          items:\n            type: string\n        post_office_box:\n          type: string\n          description: \"Numbered box in a post office, assigned to a person or organisation,\\\n            \\ where letters are kept until called for\"\n        town_name:\n          type: string\n          description: \"Name of a built-up area, with defined boundaries, and a local\\\n            \\ government\"\n        country_subdivision:\n          type: string\n          description: \"Identifies a subdivision of a country (for example, state,\\\n            \\ region, county)\"\n        post_code:\n          type: string\n          description: Identifier consisting of a group of letters and/or numbers\n            that is added to a postal address to assist the sorting of mail\n        country_name:\n          type: string\n          description: The country name in English of the institution/branch as indicated\n            in the ISO 3166 list\n        country_code:\n          type: string\n          description: The ISO 3166-1 alpha-2 code of the country of the institution/branch\n      additionalProperties: false\n      example:\n        country_code: country_code\n        address_lines:\n        - address_lines\n        - address_lines\n        town_name: town_name\n        post_office_box: post_office_box\n        post_code: post_code\n        country_name: country_name\n        country_subdivision: country_subdivision\n    Address2:\n      required:\n      - country_name\n      type: object\n      properties:\n        street_address:\n          type: array\n          items:\n            type: string\n        city:\n          type: string\n        region:\n          type: string\n        postal_code:\n          type: string\n        country_name:\n          type: string\n      additionalProperties: false\n    ContactDetails:\n      type: object\n      properties:\n        phone_number:\n          type: string\n          description: \"Collection of information that identifies a phone number,\\\n            \\ as defined by telecom services\"\n        fax_number:\n          type: string\n          description: \"Collection of information that identifies a FAX number, as\\\n            \\ defined by telecom services\"\n        email_address:\n          type: string\n          description: Address for electronic mail (e-mail)\n        web_address:\n          type: string\n          description: \"Address for the Universal Resource Locator (URL), that is\\\n            \\ used over the www (HTTP) service\"\n      additionalProperties: false\n      example:\n        email_address: email_address\n        phone_number: phone_number\n        web_address: web_address\n        fax_number: fax_number\n    SwiftService:\n      required:\n      - code\n      - name\n      type: object\n      properties:\n        code:\n          type: string\n          description: Code given by the service provider (SWIFT) to uniquely identify\n            a service it offers\n        name:\n          type: string\n          description: Name given by the service provider (SWIFT) to uniquely identify\n            a service it offers\n      additionalProperties: false\n      example:\n        code: code\n        name: name\n    SwiftConnectivity:\n      required:\n      - fileact\n      - fin\n      - interact\n      type: object\n      properties:\n        fin:\n          type: boolean\n          description: \"True if connected to SWIFT FIN, false otherwise\"\n        interact:\n          type: boolean\n          description: \"True if used in at least one service on SWIFTNet InterAct,\\\n            \\ false otherwise\"\n        fileact:\n          type: boolean\n          description: \"True if used in at least one service on SWIFTNet FileAct,\\\n            \\ false otherwise\"\n      additionalProperties: false\n      example:\n        interact: true\n        fin: true\n        fileact: true\n    SepaPaymentChannel:\n      required:\n      - id\n      - member_type\n      type: object\n      properties:\n        id:\n          type: string\n          description: The id of the payment channel (SEPA-compliant CSM)\n        member_type:\n          type: string\n          description: \"A payment channel has a member_type, the member_type has one\\\n            \\ of the codes DRCT, IDRC or UKWN\"\n        direct_participant:\n          type: string\n          description: The BIC of the direct participant through which the indirectly\n            reachable BIC can be reached; it may only be present if the payment channel's\n            member is an indirect participant\n      additionalProperties: false\n      example:\n        member_type: member_type\n        direct_participant: direct_participant\n        id: id\n    NationalIdDetails:\n      required:\n      - id\n      - institution_name\n      - scheme\n      type: object\n      properties:\n        id:\n          type: string\n          description: National ID for which details were requested\n        scheme:\n          type: string\n          description: The scheme under which the National ID is defined\n        institution_name:\n          type: string\n          description: Name by which a party is known and which is usually used to\n            identify that party\n        branch_information:\n          type: string\n          description: A free text description of the branch as provided by the financial\n            institution to which it belongs; this is currently provided for entries\n            with a BIC when the financial institution concerned wants to provide this\n            extra information\n        address:\n          $ref: '#/components/schemas/Address'\n        contact_details:\n          $ref: '#/components/schemas/ContactDetails'\n        office_type:\n          type: string\n          description: Status of the entity in the office hierarchy\n      additionalProperties: false\n    NationalIdDetailsInLocalLanguage:\n      required:\n      - id\n      - institution_name\n      - scheme\n      type: object\n      properties:\n        id:\n          type: string\n          description: National ID for which details were requested\n        scheme:\n          type: string\n          description: The scheme under which the National ID is defined\n        institution_name:\n          type: string\n          description: Name by which a party is known and which is usually used to\n            identify that party\n        branch_information:\n          type: string\n          description: A free text description of the branch as provided by the financial\n            institution to which it belongs; this is currently provided for entries\n            with a BIC when the financial institution concerned wants to provide this\n            extra information\n        address:\n          $ref: '#/components/schemas/Address'\n        contact_details:\n          $ref: '#/components/schemas/ContactDetails'\n        office_type:\n          type: string\n          description: Status of the entity in the office hierarchy\n        language_iso_code_3:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: ISO 639-2 code (three letters) of language\n          example: CHI\n        language_script_code_4:\n          pattern: \"^[A-Z]{4}$\"\n          type: string\n          description: ISO 15924 code (four letters) of language script\n          example: HANS\n      additionalProperties: false\n      example:\n        office_type: office_type\n        branch_information: branch_information\n        address:\n          country_code: country_code\n          address_lines:\n          - address_lines\n          - address_lines\n          town_name: town_name\n          post_office_box: post_office_box\n          post_code: post_code\n          country_name: country_name\n          country_subdivision: country_subdivision\n        scheme: scheme\n        language_script_code_4: HANS\n        contact_details:\n          email_address: email_address\n          phone_number: phone_number\n          web_address: web_address\n          fax_number: fax_number\n        id: id\n        institution_name: institution_name\n        language_iso_code_3: CHI\n    NationalId:\n      required:\n      - id\n      - scheme\n      type: object\n      properties:\n        id:\n          type: string\n          description: \"The National ID (a synonym for clearing code, routing code,\\\n            \\ sort code, bank and branch ID) of the institution or branch\"\n        type:\n          type: string\n          description: \"The type of National ID; if absent, it is the main National\\\n            \\ ID (MA), otherwise it is Foreign National ID (FN) or Alternative National\\\n            \\ ID (AN)\"\n        scheme:\n          type: string\n          description: The scheme under which the National ID is defined\n      additionalProperties: false\n      example:\n        scheme: scheme\n        id: id\n        type: type\n    Ssi:\n      required:\n      - correspondent\n      - currency_code\n      - direct\n      - owner_bic\n      type: object\n      properties:\n        owner_bic:\n          type: string\n          description: The owner of the SSI Nostro Account\n        institution_name:\n          type: string\n          description: Name by which an institution is known and which is usually\n            used to identify that institution\n        branch_information:\n          type: string\n          description: A free text description of the branch as provided by the financial\n            institution to which it belongs; for the time being this will be provided\n            only for entries with a BIC and only when the financial institution concerned\n            wants to provide this extra information; the information is sourced from\n            the BIC Directory\n        address:\n          $ref: '#/components/schemas/Address'\n        currency_code:\n          type: string\n          description: The ISO 4217 currency code of the requested SSIs\n        direct:\n          type: boolean\n          description: \"Indicates whether there is a direct account relationship between\\\n            \\ the owner of the SSI and the correspondent; if false, then this means\\\n            \\ at least the first intermediary must be present\"\n        correspondent:\n          $ref: '#/components/schemas/CorrespondentBic'\n        first_intermediary:\n          $ref: '#/components/schemas/IntermediaryBic'\n        second_intermediary:\n          $ref: '#/components/schemas/IntermediaryBic'\n      additionalProperties: false\n      example:\n        owner_bic: owner_bic\n        branch_information: branch_information\n        address:\n          country_code: country_code\n          address_lines:\n          - address_lines\n          - address_lines\n          town_name: town_name\n          post_office_box: post_office_box\n          post_code: post_code\n          country_name: country_name\n          country_subdivision: country_subdivision\n        direct: true\n        second_intermediary: null\n        correspondent:\n          bic: bic\n          account: account\n          preferred: true\n        first_intermediary:\n          bic: bic\n          account: account\n        institution_name: institution_name\n        currency_code: currency_code\n    CorrespondentBic:\n      required:\n      - bic\n      type: object\n      properties:\n        bic:\n          type: string\n          description: Specifies the BIC\n        account:\n          type: string\n          description: The account for a given BIC\n        preferred:\n          type: boolean\n          description: \"Indicates if it is a preferred correspondent, true (yes) or\\\n            \\ false (no)\"\n      additionalProperties: false\n      example:\n        bic: bic\n        account: account\n        preferred: true\n    IntermediaryBic:\n      required:\n      - bic\n      type: object\n      properties:\n        bic:\n          type: string\n          description: Specifies the BIC\n        account:\n          type: string\n          description: The account for a given BIC\n      example:\n        bic: bic\n        account: account\n    Country:\n      required:\n      - iso_2a_code\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: The ISO country name\n        iso_2a_code:\n          pattern: \"^[A-Z]{2}$\"\n          type: string\n          description: The ISO 2-letters country code\n        iso_3a_code:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The ISO 3-letters country code\n        iso_3n_code:\n          pattern: \"^[0-9]{3}$\"\n          type: string\n          description: The ISO 3-digits country code\n        currencies:\n          type: array\n          description: A list of currencies used by the country\n          items:\n            $ref: '#/components/schemas/Country_currencies'\n      example:\n        name: ITALY\n        iso_2a_code: IT\n        iso_3a_code: ITA\n        iso_3n_code: 380\n        currencies:\n        - iso_3a_code: EUR\n          iso_3n_code: 978\n          name: EURO\n    Currency:\n      required:\n      - iso_3a_code\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: The ISO currency name\n        iso_3a_code:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The ISO 3-letters currency code\n        iso_3n_code:\n          pattern: \"^[0-9]{3}$\"\n          type: string\n          description: The ISO 3-digits currency code\n        fractional_digits:\n          type: integer\n          description: The number of fractional digits to use\n        countries:\n          type: array\n          description: A list of countries where the currency is used\n          items:\n            $ref: '#/components/schemas/Currency_countries'\n      example:\n        name: US DOLLAR\n        iso_3a_code: USD\n        iso_3n_code: 840\n        fractional_digits: 2\n        countries:\n        - iso_2a_code: AS\n          iso_3a_code: ASM\n          iso_3n_code: 16\n          name: AMERICAN SAMOA\n        - iso_2a_code: BQ\n          iso_3a_code: BES\n          iso_3n_code: 535\n          name: \"BONAIRE, SINT EUSTATIUS AND SABA\"\n    Lei:\n      required:\n      - legal_name\n      - lei\n      type: object\n      properties:\n        lei:\n          pattern: \"^[0-9A-Za-z]{20}$\"\n          type: string\n        legal_name:\n          type: string\n        address:\n          $ref: '#/components/schemas/Address2'\n        head_quarters_address:\n          $ref: '#/components/schemas/Address2'\n        legal_jurisdiction:\n          type: string\n        legal_form:\n          type: string\n        entity_legal_form_code:\n          type: string\n        entity_status:\n          type: string\n          enum:\n          - ACTIVE\n          - INACTIVE\n        initial_registration_date:\n          pattern: \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\"\n          type: string\n        last_update_date:\n          pattern: \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\"\n          type: string\n        registration_status:\n          type: string\n        associated:\n          $ref: '#/components/schemas/Lei_associated'\n        entity_expiration:\n          $ref: '#/components/schemas/Lei_entity_expiration'\n        successor:\n          $ref: '#/components/schemas/Lei_successor'\n      example:\n        lei: BFXS5XCH7N0Y05NIXW11\n        legal_name: ABN AMRO Bank N.V.\n        address:\n          street_address:\n          - Gustav Mahlerlaan 10\n          city: Amsterdam\n          region: NL-NH\n          postal_code: 1082 PP\n          country_name: NETHERLANDS\n        head_quarters_address:\n          street_address:\n          - Gustav Mahlerlaan 10\n          city: Amsterdam\n          region: NL-NH\n          postal_code: 1082 PP\n          country_name: NETHERLANDS\n        legal_jurisdiction: NL\n        legal_form: NAAMLOZE VENNOOTSCHAP\n        entity_legal_form_code: B5PM\n        entity_status: ACTIVE\n        initial_registration_date: 2012-06-06\n        last_update_date: 2018-08-16\n        registration_status: ISSUED\n        associated:\n          entity_type: FUND_FAMILY\n          lei: W51AX6427FJZJFPF8H34\n          entity_name: \"EUROAGENTES GESTION SGIIC, S.A.\"\n        entity_expiration:\n          date: 2018-04-17\n          reason: DISSOLVED\n        successor:\n          lei: CYZ5AAG3SVPY3KMG6Q07\n          name: Specialplast Wensbo AB\n    inline_response_200:\n      required:\n      - iban\n      - validity\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        iban:\n          type: string\n          description: The IBAN that was validated\n        validity:\n          type: string\n          description: The code IVAL if the IBAN is valid\n      additionalProperties: false\n      example:\n        iban: iban\n        validity: validity\n        status: \"\"\n    inline_response_200_1:\n      required:\n      - bic\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        bic:\n          type: string\n          description: The BIC associated with the IBAN\n      additionalProperties: false\n      example:\n        bic: bic\n        status: \"\"\n    inline_response_200_2:\n      required:\n      - account_number\n      - bank_id\n      - checksum\n      - country_code\n      - iban\n      - length\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        iban:\n          type: string\n          description: The IBAN that was validated\n        country_code:\n          type: string\n          description: The ISO 3166-1 alpha-2 code of the country of the institution/branch.\n        checksum:\n          type: string\n          description: The checksum extracted from the IBAN\n        bank_id:\n          type: string\n          description: The BANK ID extracted from the IBAN. Its structure (bank ID\n            only or bank ID + branch ID) is as defined by the IBAN BIC LENGTH in the\n            IBANSTRUCTURE file.\n        branch_id:\n          type: string\n          description: Unique and unambiguous identification of a branch of a financial\n            institution.\n        account_number:\n          type: string\n          description: The remainder of the IBAN including the account number.\n        length:\n          type: integer\n          description: The length of the IBAN\n      additionalProperties: false\n      example:\n        country_code: country_code\n        account_number: account_number\n        branch_id: branch_id\n        bank_id: bank_id\n        iban: iban\n        checksum: checksum\n        length: 0\n        status: \"\"\n    inline_response_200_3:\n      required:\n      - bic\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/ShortStatus'\n        bic:\n          type: string\n          description: The BIC associated with the IBAN national ID\n      additionalProperties: false\n      example:\n        bic: bic\n        status:\n          code: code\n          developer_message: developer_message\n          http: http\n          user_message: user_message\n          more_info: more_info\n    inline_response_200_4:\n      required:\n      - iban\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        iban:\n          type: string\n          description: The corresponding IBAN\n      additionalProperties: false\n      example:\n        iban: iban\n        status: \"\"\n    inline_response_200_5:\n      required:\n      - address\n      - bic\n      - institution_name\n      - swift_connectivity\n      - swift_services\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        bic:\n          type: string\n          description: The BIC of the institution on which more information is requested\n        institution_name:\n          type: string\n          description: Name by which a party is known and which is usually used to\n            identify that party\n        branch_information:\n          type: string\n          description: A free text description of the branch as provided by the financial\n            institution to which it belongs; this is currently provided for entries\n            with a BIC when the financial institution concerned wants to provide this\n            extra information\n        address:\n          $ref: '#/components/schemas/Address'\n        contact_details:\n          $ref: '#/components/schemas/ContactDetails'\n        office_type:\n          type: string\n          description: Status of the entity in the office hierarchy\n        swift_services:\n          type: array\n          description: A list of 3-character codes and names of SWIFT FIN service\n            codes (also called value added service codes)\n          items:\n            $ref: '#/components/schemas/SwiftService'\n        swift_connectivity:\n          $ref: '#/components/schemas/SwiftConnectivity'\n      additionalProperties: false\n      example:\n        office_type: office_type\n        swift_connectivity:\n          interact: true\n          fin: true\n          fileact: true\n        branch_information: branch_information\n        address:\n          country_code: country_code\n          address_lines:\n          - address_lines\n          - address_lines\n          town_name: town_name\n          post_office_box: post_office_box\n          post_code: post_code\n          country_name: country_name\n          country_subdivision: country_subdivision\n        contact_details:\n          email_address: email_address\n          phone_number: phone_number\n          web_address: web_address\n          fax_number: fax_number\n        bic: bic\n        institution_name: institution_name\n        swift_services:\n        - code: code\n          name: name\n        - code: code\n          name: name\n        status: \"\"\n    inline_response_200_6:\n      required:\n      - bic\n      - effective_date\n      - validity\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        bic:\n          type: string\n          description: The BIC that was validated\n        validity:\n          type: string\n          description: The code VBIC if the BIC is valid\n        effective_date:\n          type: string\n          description: \"A date in YYYY-MM-DD format to indicate explicitly on which\\\n            \\ date the BIC is confirmed to be valid; the timezone is always UTC, hence\\\n            \\ the \\\"Z\\\" suffix will always be present, in compliance with ISO 8601\\\n            \\ / RFC 3339\"\n      additionalProperties: false\n      example:\n        effective_date: effective_date\n        validity: validity\n        bic: bic\n        status: \"\"\n    inline_response_200_7:\n      required:\n      - lei\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        lei:\n          type: string\n          description: The corresponding LEI for a given BIC\n      additionalProperties: false\n      example:\n        lei: lei\n        status: \"\"\n    inline_response_200_8:\n      required:\n      - bic\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        bic:\n          type: string\n          description: The corresponding BIC for a given LEI\n      additionalProperties: false\n      example:\n        bic: bic\n        status: \"\"\n    inline_response_200_9:\n      required:\n      - national_ids\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        national_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/NationalId'\n      additionalProperties: false\n      example:\n        national_ids:\n        - scheme: scheme\n          id: id\n          type: type\n        - scheme: scheme\n          id: id\n          type: type\n        status: \"\"\n    inline_response_200_10:\n      required:\n      - payment_channels\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        payment_channels:\n          type: array\n          description: SEPA CSM through which the BIC is reachable for the supplied\n            SEPA scheme\n          items:\n            $ref: '#/components/schemas/SepaPaymentChannel'\n        adherence_bic:\n          type: string\n          description: Adherence BIC11 of the reachable BIC\n      additionalProperties: false\n      example:\n        payment_channels:\n        - member_type: member_type\n          direct_participant: direct_participant\n          id: id\n        - member_type: member_type\n          direct_participant: direct_participant\n          id: id\n        status: \"\"\n        adherence_bic: adherence_bic\n    inline_response_200_11:\n      required:\n      - ssis\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        ssis:\n          type: array\n          items:\n            $ref: '#/components/schemas/Ssi'\n      additionalProperties: false\n      example:\n        ssis:\n        - owner_bic: owner_bic\n          branch_information: branch_information\n          address:\n            country_code: country_code\n            address_lines:\n            - address_lines\n            - address_lines\n            town_name: town_name\n            post_office_box: post_office_box\n            post_code: post_code\n            country_name: country_name\n            country_subdivision: country_subdivision\n          direct: true\n          second_intermediary: null\n          correspondent:\n            bic: bic\n            account: account\n            preferred: true\n          first_intermediary:\n            bic: bic\n            account: account\n          institution_name: institution_name\n          currency_code: currency_code\n        - owner_bic: owner_bic\n          branch_information: branch_information\n          address:\n            country_code: country_code\n            address_lines:\n            - address_lines\n            - address_lines\n            town_name: town_name\n            post_office_box: post_office_box\n            post_code: post_code\n            country_name: country_name\n            country_subdivision: country_subdivision\n          direct: true\n          second_intermediary: null\n          correspondent:\n            bic: bic\n            account: account\n            preferred: true\n          first_intermediary:\n            bic: bic\n            account: account\n          institution_name: institution_name\n          currency_code: currency_code\n        status: \"\"\n    inline_response_200_12:\n      required:\n      - national_ids\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        national_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/NationalIdDetailsInLocalLanguage'\n      additionalProperties: false\n      example:\n        national_ids:\n        - office_type: office_type\n          branch_information: branch_information\n          address:\n            country_code: country_code\n            address_lines:\n            - address_lines\n            - address_lines\n            town_name: town_name\n            post_office_box: post_office_box\n            post_code: post_code\n            country_name: country_name\n            country_subdivision: country_subdivision\n          scheme: scheme\n          language_script_code_4: HANS\n          contact_details:\n            email_address: email_address\n            phone_number: phone_number\n            web_address: web_address\n            fax_number: fax_number\n          id: id\n          institution_name: institution_name\n          language_iso_code_3: CHI\n        - office_type: office_type\n          branch_information: branch_information\n          address:\n            country_code: country_code\n            address_lines:\n            - address_lines\n            - address_lines\n            town_name: town_name\n            post_office_box: post_office_box\n            post_code: post_code\n            country_name: country_name\n            country_subdivision: country_subdivision\n          scheme: scheme\n          language_script_code_4: HANS\n          contact_details:\n            email_address: email_address\n            phone_number: phone_number\n            web_address: web_address\n            fax_number: fax_number\n          id: id\n          institution_name: institution_name\n          language_iso_code_3: CHI\n        status: \"\"\n    inline_response_200_13:\n      required:\n      - national_id\n      - scheme\n      - validity\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        national_id:\n          type: string\n          description: The National ID that was validated\n        scheme:\n          type: string\n          description: The scheme under which the National ID is defined\n        validity:\n          type: string\n          description: Contains the code VNID (Valid National ID) if the National\n            ID is valid in the provided scheme or country\n      additionalProperties: false\n      example:\n        national_id: national_id\n        scheme: scheme\n        validity: validity\n        status: \"\"\n    inline_response_200_14:\n      required:\n      - bics\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        bics:\n          type: array\n          description: An array of the corresponding BICs\n          items:\n            type: string\n      additionalProperties: false\n      example:\n        bics:\n        - bics\n        - bics\n        status: \"\"\n    inline_response_200_15:\n      required:\n      - country_code\n      - validity\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        country_code:\n          type: string\n          description: The country code that was validated\n        validity:\n          type: string\n          description: The code VCOC if the country code is valid\n      additionalProperties: false\n      example:\n        country_code: country_code\n        validity: validity\n        status: \"\"\n    inline_response_200_16:\n      additionalProperties: false\n      allOf:\n      - $ref: '#/components/schemas/WithStatus'\n      - $ref: '#/components/schemas/Country'\n    inline_response_200_17:\n      required:\n      - currency_code\n      - validity\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        currency_code:\n          type: string\n          description: The currency code that was validated\n        validity:\n          type: string\n          description: The code VCUC if the currency code is valid\n      additionalProperties: false\n      example:\n        validity: validity\n        currency_code: currency_code\n        status: \"\"\n    inline_response_200_18:\n      additionalProperties: false\n      allOf:\n      - $ref: '#/components/schemas/WithStatus'\n      - $ref: '#/components/schemas/Currency'\n    inline_response_200_19:\n      required:\n      - lei\n      - validity\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        lei:\n          type: string\n          description: The LEI that was validated\n        validity:\n          type: string\n          description: The code VLEI if the LEI is valid\n      additionalProperties: false\n      example:\n        lei: lei\n        validity: validity\n        status: \"\"\n    inline_response_200_20:\n      additionalProperties: false\n      allOf:\n      - $ref: '#/components/schemas/WithStatus'\n      - $ref: '#/components/schemas/Lei'\n    inline_response_200_21:\n      required:\n      - account_number\n      - validity\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n        account_number:\n          type: string\n          description: The account number that was validated\n        validity:\n          type: string\n          description: The code AVAL if the account number is valid\n      additionalProperties: false\n      example:\n        account_number: account_number\n        validity: validity\n        status: \"\"\n    Country_currencies:\n      required:\n      - iso_3a_code\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: The ISO currency name\n        iso_3a_code:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The ISO 3-letters currency code\n        iso_3n_code:\n          pattern: \"^[0-9]{3}$\"\n          type: string\n          description: The ISO 3-digits currency code\n    Currency_countries:\n      required:\n      - iso_2a_code\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: The ISO country name\n        iso_2a_code:\n          pattern: \"^[A-Z]{2}$\"\n          type: string\n          description: The ISO 2-letters country code\n        iso_3a_code:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The ISO 3-letters country code\n        iso_3n_code:\n          pattern: \"^[0-9]{3}$\"\n          type: string\n          description: The ISO 3-digits country code\n    Lei_associated:\n      type: object\n      properties:\n        entity_type:\n          type: string\n        lei:\n          pattern: \"^[0-9A-Za-z]{20}$\"\n          type: string\n        entity_name:\n          type: string\n    Lei_entity_expiration:\n      type: object\n      properties:\n        date:\n          pattern: \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\"\n          type: string\n        reason:\n          type: string\n    Lei_successor:\n      type: object\n      properties:\n        lei:\n          pattern: \"^[0-9A-Za-z]{20}$\"\n          type: string\n        name:\n          type: string\n  responses:\n    Unallowed:\n      description: You do not have sufficient privileges to execute this service\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/WithStatus'\n          example:\n            status:\n              http: 401\n              code: REDA.API.ILIC\n              user_message: You do not have sufficient privileges to execute this\n                service\n              developer_message: \"Unallowed access (user account credentials not provided,\\\n                \\ wrong user account credentials or user account without permission)\"\n  parameters:\n    apiStatusParameter:\n      name: API-Status\n      in: header\n      description: \"Whether status item must always be returned within responses (by\\\n        \\ default, positive responses do not report status)\"\n      required: false\n      style: simple\n      explode: false\n      schema:\n        type: string\n        enum:\n        - verbose\n  securitySchemes:\n    oAuth2Password:\n      type: oauth2\n      description: \"OAuth 2.0 Password Grant Type. Used between an end API consumers\\\n        \\ and SWIFT API Gateway. Please note Username := \u003cswift.com license_id\u003e, Password\\\n        \\ := \u003cswift.com license_key \u003e\"\n      flows:\n        password:\n          tokenUrl: https://api.swift.com/oauth2/v1/token\n          scopes:\n            urn:swiftref:external: SWIFTRef API external customers access\n            urn:swiftref:internal: Grants access to Payment Validation only\n",
			"canonicalURL": "/github.com/alifcapital/swift@331c7b933d5bc4b9605278edc1eba4a7edbeb560/-/blob/swagger/swift/swiftref/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/alifcapital/swift/blob/331c7b933d5bc4b9605278edc1eba4a7edbeb560/swagger/swift/swiftref/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/v2/leis/{lei}/validity\": get: responses: 200: contents: application/json: generate schema: field status: allOf: schema type mismatch: object and "
}