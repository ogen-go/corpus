{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/fis/2020-12-01/openapi.yaml",
			"byteSize": 66826,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2020-12-01'\n  x-release: v4\n  title: AWS Fault Injection Simulator\n  description: 'AWS Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your AWS workloads. For more information, see the \u003ca href=\"https://docs.aws.amazon.com/fis/latest/userguide/\"\u003eAWS Fault Injection Simulator User Guide\u003c/a\u003e.'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: fis\n  x-aws-signingName: fis\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/fis-2020-12-01.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/fis/'\nservers:\n  - url: 'http://fis.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The FIS multi-region endpoint\n  - url: 'https://fis.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The FIS multi-region endpoint\n  - url: 'http://fis.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The FIS endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://fis.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The FIS endpoint for China (Beijing) and China (Ningxia)\npaths:\n  /experimentTemplates:\n    post:\n      operationId: CreateExperimentTemplate\n      description: '\u003cp\u003eCreates an experiment template. \u003c/p\u003e \u003cp\u003eTo create a template, specify the following information: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eTargets\u003c/b\u003e: A target can be a specific resource in your AWS environment, or one or more resources that match criteria that you specify, for example, resources that have specific tags.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eActions\u003c/b\u003e: The actions to carry out on the target. You can specify multiple actions, the duration of each action, and when to start each action during an experiment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eStop conditions\u003c/b\u003e: If a stop condition is triggered while an experiment is running, the experiment is automatically stopped. You can define a stop condition as a CloudWatch alarm.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information, see the \u003ca href=\"https://docs.aws.amazon.com/fis/latest/userguide/\"\u003eAWS Fault Injection Simulator User Guide\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateExperimentTemplateResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - clientToken\n                - description\n                - stopConditions\n                - actions\n                - roleArn\n              properties:\n                clientToken:\n                  description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n                  type: string\n                  pattern: '[\\S]+'\n                  minLength: 1\n                  maxLength: 1024\n                description:\n                  description: A description for the experiment template. Can contain up to 64 letters (A-Z and a-z).\n                  type: string\n                  pattern: '[\\s\\S]+'\n                  maxLength: 512\n                stopConditions:\n                  description: The stop conditions.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/CreateExperimentTemplateStopConditionInput'\n                targets:\n                  description: The targets for the experiment.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/CreateExperimentTemplateTargetInput'\n                actions:\n                  description: The actions for the experiment.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/CreateExperimentTemplateActionInput'\n                roleArn:\n                  description: The Amazon Resource Name (ARN) of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.\n                  type: string\n                  pattern: '[\\S]+'\n                  minLength: 20\n                  maxLength: 2048\n                tags:\n                  description: The tags to apply to the experiment template.\n                  type: object\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListExperimentTemplates\n      description: Lists your experiment templates.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListExperimentTemplatesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned \u003ccode\u003enextToken\u003c/code\u003e value.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: The token for the next page of results.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            minLength: 1\n            maxLength: 1024\n  '/experimentTemplates/{id}':\n    delete:\n      operationId: DeleteExperimentTemplate\n      description: Deletes the specified experiment template.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteExperimentTemplateResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The ID of the experiment template.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetExperimentTemplate\n      description: Gets information about the specified experiment template.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetExperimentTemplateResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The ID of the experiment template.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            maxLength: 64\n    patch:\n      operationId: UpdateExperimentTemplate\n      description: Updates the specified experiment template.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateExperimentTemplateResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The ID of the experiment template.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            maxLength: 64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: A description for the template.\n                  type: string\n                  pattern: '[\\s\\S]+'\n                  maxLength: 512\n                stopConditions:\n                  description: The stop conditions for the experiment.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/UpdateExperimentTemplateStopConditionInput'\n                targets:\n                  description: The targets for the experiment.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/UpdateExperimentTemplateTargetInput'\n                actions:\n                  description: The actions for the experiment.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/UpdateExperimentTemplateActionInputItem'\n                roleArn:\n                  description: The Amazon Resource Name (ARN) of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.\n                  type: string\n                  pattern: '[\\S]+'\n                  minLength: 20\n                  maxLength: 2048\n  '/actions/{id}':\n    get:\n      operationId: GetAction\n      description: Gets information about the specified AWS FIS action.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetActionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The ID of the action.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/experiments/{id}':\n    get:\n      operationId: GetExperiment\n      description: Gets information about the specified experiment.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetExperimentResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The ID of the experiment.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: StopExperiment\n      description: Stops the specified experiment.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StopExperimentResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The ID of the experiment.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            maxLength: 64\n  /actions:\n    get:\n      operationId: ListActions\n      description: Lists the available AWS FIS actions.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListActionsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned \u003ccode\u003enextToken\u003c/code\u003e value.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: The token for the next page of results.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            minLength: 1\n            maxLength: 1024\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /experiments:\n    get:\n      operationId: ListExperiments\n      description: Lists your experiments.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListExperimentsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned \u003ccode\u003enextToken\u003c/code\u003e value.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: The token for the next page of results.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            minLength: 1\n            maxLength: 1024\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: StartExperiment\n      description: Starts running an experiment from the specified experiment template.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartExperimentResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - clientToken\n                - experimentTemplateId\n              properties:\n                clientToken:\n                  description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n                  type: string\n                  pattern: '[\\S]+'\n                  minLength: 1\n                  maxLength: 1024\n                experimentTemplateId:\n                  description: The ID of the experiment template.\n                  type: string\n                  pattern: '[\\S]+'\n                  maxLength: 64\n                tags:\n                  description: The tags to apply to the experiment.\n                  type: object\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Lists the tags for the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            minLength: 20\n            maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: Applies the specified tags to the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            minLength: 20\n            maxLength: 2048\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: The tags for the resource.\n                  type: object\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    delete:\n      operationId: UntagResource\n      description: Removes the specified tags from the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource.\n          schema:\n            type: string\n            pattern: '[\\S]+'\n            minLength: 20\n            maxLength: 2048\n        - name: tagKeys\n          in: query\n          required: false\n          description: The tag keys to remove.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateExperimentTemplateResponse:\n      type: object\n      properties:\n        experimentTemplate:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplate'\n            - description: Information about the experiment template.\n    CreateExperimentTemplateStopConditionInput:\n      type: object\n      required:\n        - source\n      properties:\n        source:\n          allOf:\n            - $ref: '#/components/schemas/StopConditionSource'\n            - description: 'The source for the stop condition. Specify \u003ccode\u003eaws:cloudwatch:alarm\u003c/code\u003e if the stop condition is defined by a CloudWatch alarm. Specify \u003ccode\u003enone\u003c/code\u003e if there is no stop condition.'\n        value:\n          allOf:\n            - $ref: '#/components/schemas/StopConditionValue'\n            - description: The Amazon Resource Name (ARN) of the CloudWatch alarm. This is required if the source is a CloudWatch alarm.\n      description: Specifies a stop condition for an experiment template.\n    CreateExperimentTemplateTargetInput:\n      type: object\n      required:\n        - resourceType\n        - selectionMode\n      properties:\n        resourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: The AWS resource type. The resource type must be supported for the specified action.\n        resourceArns:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnList'\n            - description: The Amazon Resource Names (ARNs) of the resources.\n        resourceTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the target resources.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetFilterInputList'\n            - description: The filters to apply to identify target resources using specific attributes.\n        selectionMode:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetSelectionMode'\n            - description: '\u003cp\u003eScopes the identified resources to a specific count of the resources at random, or a percentage of the resources. All identified resources are included in the target.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eALL - Run the action on all identified targets. This is the default.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eCOUNT(n) - Run the action on the specified number of targets, chosen from the identified targets at random. For example, COUNT(1) selects one of the targets.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ePERCENT(n) - Run the action on the specified percentage of targets, chosen from the identified targets at random. For example, PERCENT(25) selects 25% of the targets.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Specifies a target for an experiment. You must specify at least one Amazon Resource Name (ARN) or at least one resource tag. You cannot specify both ARNs and tags.\n    CreateExperimentTemplateActionInput:\n      type: object\n      required:\n        - actionId\n      properties:\n        actionId:\n          allOf:\n            - $ref: '#/components/schemas/ActionId'\n            - description: The ID of the action.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionDescription'\n            - description: A description for the action.\n        parameters:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionParameterMap'\n            - description: 'The parameters for the action, if applicable.'\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionTargetMap'\n            - description: The targets for the action.\n        startAfter:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionStartAfterList'\n            - description: The name of the action that must be completed before the current action starts. Omit this parameter to run the action at the start of the experiment.\n      description: Specifies an action for an experiment template.\n    TagValue:\n      type: string\n      pattern: '[\\s\\S]*'\n      maxLength: 256\n    ValidationException: {}\n    ConflictException: {}\n    ResourceNotFoundException: {}\n    ServiceQuotaExceededException: {}\n    DeleteExperimentTemplateResponse:\n      type: object\n      properties:\n        experimentTemplate:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplate'\n            - description: Information about the experiment template.\n    GetActionResponse:\n      type: object\n      properties:\n        action:\n          allOf:\n            - $ref: '#/components/schemas/Action'\n            - description: Information about the action.\n    GetExperimentResponse:\n      type: object\n      properties:\n        experiment:\n          allOf:\n            - $ref: '#/components/schemas/Experiment'\n            - description: Information about the experiment.\n    GetExperimentTemplateResponse:\n      type: object\n      properties:\n        experimentTemplate:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplate'\n            - description: Information about the experiment template.\n    ListActionsResponse:\n      type: object\n      properties:\n        actions:\n          allOf:\n            - $ref: '#/components/schemas/ActionSummaryList'\n            - description: The actions.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token to use to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\n    ListExperimentTemplatesResponse:\n      type: object\n      properties:\n        experimentTemplates:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateSummaryList'\n            - description: The experiment templates.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token to use to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\n    ListExperimentsResponse:\n      type: object\n      properties:\n        experiments:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentSummaryList'\n            - description: The experiments.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token to use to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the resource.\n    StartExperimentResponse:\n      type: object\n      properties:\n        experiment:\n          allOf:\n            - $ref: '#/components/schemas/Experiment'\n            - description: Information about the experiment.\n    StopExperimentResponse:\n      type: object\n      properties:\n        experiment:\n          allOf:\n            - $ref: '#/components/schemas/Experiment'\n            - description: Information about the experiment.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: '[\\s\\S]+'\n      maxLength: 128\n    UpdateExperimentTemplateResponse:\n      type: object\n      properties:\n        experimentTemplate:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplate'\n            - description: Information about the experiment template.\n    UpdateExperimentTemplateStopConditionInput:\n      type: object\n      required:\n        - source\n      properties:\n        source:\n          allOf:\n            - $ref: '#/components/schemas/StopConditionSource'\n            - description: 'The source for the stop condition. Specify \u003ccode\u003eaws:cloudwatch:alarm\u003c/code\u003e if the stop condition is defined by a CloudWatch alarm. Specify \u003ccode\u003enone\u003c/code\u003e if there is no stop condition.'\n        value:\n          allOf:\n            - $ref: '#/components/schemas/StopConditionValue'\n            - description: The Amazon Resource Name (ARN) of the CloudWatch alarm.\n      description: Specifies a stop condition for an experiment. You can define a stop condition as a CloudWatch alarm.\n    UpdateExperimentTemplateTargetInput:\n      type: object\n      required:\n        - resourceType\n        - selectionMode\n      properties:\n        resourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: The AWS resource type. The resource type must be supported for the specified action.\n        resourceArns:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnList'\n            - description: The Amazon Resource Names (ARNs) of the targets.\n        resourceTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the target resources.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetFilterInputList'\n            - description: The filters to apply to identify target resources using specific attributes.\n        selectionMode:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetSelectionMode'\n            - description: Scopes the identified resources to a specific count or percentage.\n      description: Specifies a target for an experiment. You must specify at least one Amazon Resource Name (ARN) or at least one resource tag. You cannot specify both.\n    UpdateExperimentTemplateActionInputItem:\n      type: object\n      properties:\n        actionId:\n          allOf:\n            - $ref: '#/components/schemas/ActionId'\n            - description: The ID of the action.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionDescription'\n            - description: A description for the action.\n        parameters:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionParameterMap'\n            - description: 'The parameters for the action, if applicable.'\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionTargetMap'\n            - description: The targets for the action.\n        startAfter:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionStartAfterList'\n            - description: The name of the action that must be completed before the current action starts. Omit this parameter to run the action at the start of the experiment.\n      description: Specifies an action for an experiment template.\n    ActionId:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 128\n    ActionDescription:\n      type: string\n      pattern: '[\\s\\S]+'\n      maxLength: 512\n    ActionParameterMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ActionParameter'\n    ActionTargetMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ActionTarget'\n    TagMap:\n      type: object\n      maxProperties: 50\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    Action:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/ActionId'\n            - description: The ID of the action.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ActionDescription'\n            - description: The description for the action.\n        parameters:\n          allOf:\n            - $ref: '#/components/schemas/ActionParameterMap'\n            - description: 'The action parameters, if applicable.'\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/ActionTargetMap'\n            - description: The supported targets for the action.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the action.\n      description: 'Describes an action. For more information, see \u003ca href=\"https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html\"\u003eAWS FIS actions\u003c/a\u003e in the \u003ci\u003eAWS Fault Injection Simulator User Guide\u003c/i\u003e.'\n    ActionParameterDescription:\n      type: string\n      pattern: '[\\s\\S]+'\n      maxLength: 512\n    ActionParameterRequired:\n      type: boolean\n    ActionParameter:\n      type: object\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ActionParameterDescription'\n            - description: The parameter description.\n        required:\n          allOf:\n            - $ref: '#/components/schemas/ActionParameterRequired'\n            - description: Indicates whether the parameter is required.\n      description: Describes a parameter for an action.\n    ActionParameterName:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ActionSummary:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/ActionId'\n            - description: The ID of the action.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ActionDescription'\n            - description: The description for the action.\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/ActionTargetMap'\n            - description: The targets for the action.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the action.\n      description: Provides a summary of an action.\n    ActionSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ActionSummary'\n    TargetResourceType:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 128\n    ActionTarget:\n      type: object\n      properties:\n        resourceType:\n          allOf:\n            - $ref: '#/components/schemas/TargetResourceType'\n            - description: The resource type of the target.\n      description: Describes a target for an action.\n    ActionTargetName:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ClientToken:\n      type: string\n      pattern: '[\\S]+'\n      minLength: 1\n      maxLength: 1024\n    ExperimentTemplateActionDescription:\n      type: string\n      pattern: '[\\s\\S]+'\n      maxLength: 512\n    ExperimentTemplateActionParameterMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ExperimentTemplateActionParameter'\n    ExperimentTemplateActionTargetMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ExperimentTemplateTargetName'\n    ExperimentTemplateActionStartAfterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentTemplateActionStartAfter'\n    CreateExperimentTemplateActionInputMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/CreateExperimentTemplateActionInput'\n    ExperimentTemplateDescription:\n      type: string\n      pattern: '[\\s\\S]+'\n      maxLength: 512\n    CreateExperimentTemplateStopConditionInputList:\n      type: array\n      items:\n        $ref: '#/components/schemas/CreateExperimentTemplateStopConditionInput'\n    CreateExperimentTemplateTargetInputMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/CreateExperimentTemplateTargetInput'\n    RoleArn:\n      type: string\n      pattern: '[\\S]+'\n      minLength: 20\n      maxLength: 2048\n    CreateExperimentTemplateRequest:\n      type: object\n      required:\n        - clientToken\n        - description\n        - stopConditions\n        - actions\n        - roleArn\n      title: CreateExperimentTemplateRequest\n      properties:\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateDescription'\n            - description: A description for the experiment template. Can contain up to 64 letters (A-Z and a-z).\n        stopConditions:\n          allOf:\n            - $ref: '#/components/schemas/CreateExperimentTemplateStopConditionInputList'\n            - description: The stop conditions.\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/CreateExperimentTemplateTargetInputMap'\n            - description: The targets for the experiment.\n        actions:\n          allOf:\n            - $ref: '#/components/schemas/CreateExperimentTemplateActionInputMap'\n            - description: The actions for the experiment.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The Amazon Resource Name (ARN) of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags to apply to the experiment template.\n    ExperimentTemplate:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateId'\n            - description: The ID of the experiment template.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateDescription'\n            - description: The description for the experiment template.\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetMap'\n            - description: The targets for the experiment.\n        actions:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionMap'\n            - description: The actions for the experiment.\n        stopConditions:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateStopConditionList'\n            - description: The stop conditions for the experiment.\n        creationTime:\n          allOf:\n            - $ref: '#/components/schemas/CreationTime'\n            - description: The time the experiment template was created.\n        lastUpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdateTime'\n            - description: The time the experiment template was last updated.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The Amazon Resource Name (ARN) of an IAM role.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the experiment template.\n      description: Describes an experiment template.\n    StopConditionSource:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    StopConditionValue:\n      type: string\n      pattern: '[\\s\\S]+'\n      minLength: 20\n      maxLength: 2048\n    ResourceType:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ResourceArnList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceArn'\n      maxItems: 5\n    ExperimentTemplateTargetFilterInputList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentTemplateTargetInputFilter'\n    ExperimentTemplateTargetSelectionMode:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    CreationTime:\n      type: string\n      format: date-time\n    ExperimentTemplateId:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    DeleteExperimentTemplateRequest:\n      type: object\n      title: DeleteExperimentTemplateRequest\n      properties: {}\n    ExperimentId:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentState:\n      type: object\n      properties:\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentStatus'\n            - description: The state of the experiment.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentStatusReason'\n            - description: The reason for the state.\n      description: Describes the state of an experiment.\n    ExperimentTargetMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ExperimentTarget'\n    ExperimentActionMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ExperimentAction'\n    ExperimentStopConditionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentStopCondition'\n    ExperimentStartTime:\n      type: string\n      format: date-time\n    ExperimentEndTime:\n      type: string\n      format: date-time\n    Experiment:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentId'\n            - description: The ID of the experiment.\n        experimentTemplateId:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateId'\n            - description: The ID of the experiment template.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The Amazon Resource Name (ARN) of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentState'\n            - description: The state of the experiment.\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTargetMap'\n            - description: The targets for the experiment.\n        actions:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentActionMap'\n            - description: The actions for the experiment.\n        stopConditions:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentStopConditionList'\n            - description: The stop conditions for the experiment.\n        creationTime:\n          allOf:\n            - $ref: '#/components/schemas/CreationTime'\n            - description: The time the experiment was created.\n        startTime:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentStartTime'\n            - description: The time that the experiment was started.\n        endTime:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentEndTime'\n            - description: The time that the experiment ended.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the experiment.\n      description: Describes an experiment.\n    ExperimentActionDescription:\n      type: string\n      pattern: '[\\s\\S]+'\n      maxLength: 512\n    ExperimentActionParameterMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ExperimentActionParameter'\n    ExperimentActionTargetMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ExperimentTargetName'\n    ExperimentActionStartAfterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentActionStartAfter'\n    ExperimentActionState:\n      type: object\n      properties:\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentActionStatus'\n            - description: The state of the action.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentActionStatusReason'\n            - description: The reason for the state.\n      description: Describes the state of an action.\n    ExperimentAction:\n      type: object\n      properties:\n        actionId:\n          allOf:\n            - $ref: '#/components/schemas/ActionId'\n            - description: The ID of the action.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentActionDescription'\n            - description: The description for the action.\n        parameters:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentActionParameterMap'\n            - description: The parameters for the action.\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentActionTargetMap'\n            - description: The targets for the action.\n        startAfter:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentActionStartAfterList'\n            - description: The name of the action that must be completed before this action starts.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentActionState'\n            - description: The state of the action.\n      description: Describes the action for an experiment.\n    ExperimentActionName:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentActionParameter:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 1024\n    ExperimentActionParameterName:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentActionStartAfter:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentActionStatus:\n      type: string\n      enum:\n        - pending\n        - initiating\n        - running\n        - completed\n        - cancelled\n        - stopping\n        - stopped\n        - failed\n    ExperimentActionStatusReason:\n      type: string\n      pattern: '[\\s\\S]+'\n      maxLength: 512\n    ExperimentTargetName:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentActionTargetName:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentStatus:\n      type: string\n      enum:\n        - pending\n        - initiating\n        - running\n        - completed\n        - stopping\n        - stopped\n        - failed\n    ExperimentStatusReason:\n      type: string\n      pattern: '[\\s\\S]+'\n      maxLength: 512\n    ExperimentStopCondition:\n      type: object\n      properties:\n        source:\n          allOf:\n            - $ref: '#/components/schemas/StopConditionSource'\n            - description: The source for the stop condition.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/StopConditionValue'\n            - description: 'The Amazon Resource Name (ARN) of the CloudWatch alarm, if applicable.'\n      description: Describes the stop condition for an experiment.\n    ExperimentSummary:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentId'\n            - description: The ID of the experiment.\n        experimentTemplateId:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateId'\n            - description: The ID of the experiment template.\n        state:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentState'\n            - description: The state of the experiment.\n        creationTime:\n          allOf:\n            - $ref: '#/components/schemas/CreationTime'\n            - description: The time that the experiment was created.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the experiment.\n      description: Provides a summary of an experiment.\n    ExperimentSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentSummary'\n    ExperimentTargetFilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentTargetFilter'\n    ExperimentTargetSelectionMode:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentTarget:\n      type: object\n      properties:\n        resourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: The resource type.\n        resourceArns:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnList'\n            - description: The Amazon Resource Names (ARNs) of the resources.\n        resourceTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the target resources.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTargetFilterList'\n            - description: The filters to apply to identify target resources using specific attributes.\n        selectionMode:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTargetSelectionMode'\n            - description: Scopes the identified resources to a specific count or percentage.\n      description: Describes a target for an experiment.\n    ExperimentTargetFilterPath:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 256\n    ExperimentTargetFilterValues:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentTargetFilterValue'\n    ExperimentTargetFilter:\n      type: object\n      properties:\n        path:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTargetFilterPath'\n            - description: The attribute path for the filter.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTargetFilterValues'\n            - description: The attribute values for the filter.\n      description: Describes a filter used for the target resources in an experiment.\n    ExperimentTargetFilterValue:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 128\n    ExperimentTemplateTargetMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ExperimentTemplateTarget'\n    ExperimentTemplateActionMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ExperimentTemplateAction'\n    ExperimentTemplateStopConditionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentTemplateStopCondition'\n    LastUpdateTime:\n      type: string\n      format: date-time\n    ExperimentTemplateAction:\n      type: object\n      properties:\n        actionId:\n          allOf:\n            - $ref: '#/components/schemas/ActionId'\n            - description: The ID of the action.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionDescription'\n            - description: A description for the action.\n        parameters:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionParameterMap'\n            - description: The parameters for the action.\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionTargetMap'\n            - description: The targets for the action.\n        startAfter:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateActionStartAfterList'\n            - description: The name of the action that must be completed before the current action starts.\n      description: Describes an action for an experiment template.\n    ExperimentTemplateActionName:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentTemplateActionParameter:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 1024\n    ExperimentTemplateActionParameterName:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentTemplateActionStartAfter:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentTemplateTargetName:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentTemplateActionTargetName:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 64\n    ExperimentTemplateStopCondition:\n      type: object\n      properties:\n        source:\n          allOf:\n            - $ref: '#/components/schemas/StopConditionSource'\n            - description: The source for the stop condition.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/StopConditionValue'\n            - description: 'The Amazon Resource Name (ARN) of the CloudWatch alarm, if applicable.'\n      description: Describes a stop condition for an experiment template.\n    ExperimentTemplateSummary:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateId'\n            - description: The ID of the experiment template.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateDescription'\n            - description: The description of the experiment template.\n        creationTime:\n          allOf:\n            - $ref: '#/components/schemas/CreationTime'\n            - description: The time that the experiment template was created.\n        lastUpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdateTime'\n            - description: The time that the experiment template was last updated.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the experiment template.\n      description: Provides a summary of an experiment template.\n    ExperimentTemplateSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentTemplateSummary'\n    ExperimentTemplateTargetFilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentTemplateTargetFilter'\n    ExperimentTemplateTarget:\n      type: object\n      properties:\n        resourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: The resource type.\n        resourceArns:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnList'\n            - description: The Amazon Resource Names (ARNs) of the targets.\n        resourceTags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the target resources.\n        filters:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetFilterList'\n            - description: The filters to apply to identify target resources using specific attributes.\n        selectionMode:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetSelectionMode'\n            - description: Scopes the identified resources to a specific count or percentage.\n      description: Describes a target for an experiment template.\n    ExperimentTemplateTargetFilterPath:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 256\n    ExperimentTemplateTargetFilterValues:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExperimentTemplateTargetFilterValue'\n    ExperimentTemplateTargetFilter:\n      type: object\n      properties:\n        path:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetFilterPath'\n            - description: The attribute path for the filter.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetFilterValues'\n            - description: The attribute values for the filter.\n      description: Describes a filter used for the target resources in an experiment template.\n    ExperimentTemplateTargetInputFilter:\n      type: object\n      required:\n        - path\n        - values\n      properties:\n        path:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetFilterPath'\n            - description: The attribute path for the filter.\n        values:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateTargetFilterValues'\n            - description: The attribute values for the filter.\n      description: Describes a filter used for the target resource input in an experiment template.\n    ExperimentTemplateTargetFilterValue:\n      type: string\n      pattern: '[\\S]+'\n      maxLength: 128\n    GetActionRequest:\n      type: object\n      title: GetActionRequest\n      properties: {}\n    GetExperimentRequest:\n      type: object\n      title: GetExperimentRequest\n      properties: {}\n    GetExperimentTemplateRequest:\n      type: object\n      title: GetExperimentTemplateRequest\n      properties: {}\n    ListActionsMaxResults:\n      type: integer\n      minimum: 1\n      maximum: 100\n    NextToken:\n      type: string\n      pattern: '[\\S]+'\n      minLength: 1\n      maxLength: 1024\n    ListActionsRequest:\n      type: object\n      title: ListActionsRequest\n      properties: {}\n    ListExperimentTemplatesMaxResults:\n      type: integer\n      minimum: 1\n      maximum: 100\n    ListExperimentTemplatesRequest:\n      type: object\n      title: ListExperimentTemplatesRequest\n      properties: {}\n    ListExperimentsMaxResults:\n      type: integer\n      minimum: 1\n      maximum: 100\n    ListExperimentsRequest:\n      type: object\n      title: ListExperimentsRequest\n      properties: {}\n    ResourceArn:\n      type: string\n      pattern: '[\\S]+'\n      minLength: 20\n      maxLength: 2048\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    StartExperimentRequest:\n      type: object\n      required:\n        - clientToken\n        - experimentTemplateId\n      title: StartExperimentRequest\n      properties:\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n        experimentTemplateId:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateId'\n            - description: The ID of the experiment template.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags to apply to the experiment.\n    StopExperimentRequest:\n      type: object\n      title: StopExperimentRequest\n      properties: {}\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags for the resource.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateExperimentTemplateActionInputMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/UpdateExperimentTemplateActionInputItem'\n    UpdateExperimentTemplateStopConditionInputList:\n      type: array\n      items:\n        $ref: '#/components/schemas/UpdateExperimentTemplateStopConditionInput'\n    UpdateExperimentTemplateTargetInputMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/UpdateExperimentTemplateTargetInput'\n    UpdateExperimentTemplateRequest:\n      type: object\n      title: UpdateExperimentTemplateRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/ExperimentTemplateDescription'\n            - description: A description for the template.\n        stopConditions:\n          allOf:\n            - $ref: '#/components/schemas/UpdateExperimentTemplateStopConditionInputList'\n            - description: The stop conditions for the experiment.\n        targets:\n          allOf:\n            - $ref: '#/components/schemas/UpdateExperimentTemplateTargetInputMap'\n            - description: The targets for the experiment.\n        actions:\n          allOf:\n            - $ref: '#/components/schemas/UpdateExperimentTemplateActionInputMap'\n            - description: The actions for the experiment.\n        roleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The Amazon Resource Name (ARN) of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/amazonaws.com/fis/2020-12-01/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/amazonaws.com/fis/2020-12-01/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/experimentTemplates/{id}\": get: responses: 200: contents: application/json: generate schema: field experimentTemplate: allOf: schema type mismatch: object and "
}