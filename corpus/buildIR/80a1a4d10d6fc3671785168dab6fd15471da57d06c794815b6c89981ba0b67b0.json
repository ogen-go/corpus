{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zircote/swagger-php"
		},
		"file": {
			"name": "nesting.yaml",
			"size": 0,
			"path": "Examples/nesting/nesting.yaml",
			"byteSize": 1379,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'Nested schemas'\n  description: 'Example info'\n  contact:\n    name: 'Swagger API Team'\n  version: 1.0.0\nservers:\n  -\n    url: 'https://example.localhost'\n    description: 'API server'\npaths:\n  '/entity/{id}':\n    get:\n      tags:\n        - api\n      description: 'Get the entity'\n      operationId: dd148eadcee53770e24b2350f932e3bd\n      parameters:\n        -\n          name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: 'successful operation'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ActualModel'\ncomponents:\n  schemas:\n    ActualModel:\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/AlmostModel'\n        -\n          properties:\n            actual:\n              type: string\n            soClose:\n              type: string\n    AlmostModel:\n      type: object\n      allOf:\n        -\n          $ref: '#/components/schemas/BaseModel'\n        -\n          properties:\n            almost:\n              type: string\n            intermediate:\n              type: string\n    BaseModel:\n      properties:\n        base:\n          type: string\n      type: object\ntags:\n  -\n    name: api\n    description: 'All API endpoints'\n",
			"canonicalURL": "/github.com/zircote/swagger-php@eccd81b99ef9080755bf485fb2f42921b0449bf6/-/blob/Examples/nesting/nesting.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/zircote/swagger-php/blob/eccd81b99ef9080755bf485fb2f42921b0449bf6/Examples/nesting/nesting.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/entity/{id}\": get: responses: code 200: contents: application/json: generate schema: allOf: schema type mismatch:  and object"
}