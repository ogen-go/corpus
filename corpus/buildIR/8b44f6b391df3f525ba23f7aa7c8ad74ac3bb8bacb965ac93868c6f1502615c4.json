{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/arkhn/fhir-river"
		},
		"file": {
			"name": "river-schema.yml",
			"size": 0,
			"path": "river-schema.yml",
			"byteSize": 91543,
			"content": "openapi: 3.0.3\ninfo:\n  title: River API\n  version: 0.1.0\n  description: Arkhn's River API\npaths:\n  /api/attributes/:\n    get:\n      operationId: api_attributes_list\n      description: ''\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - in: query\n        name: path\n        schema:\n          type: string\n      - in: query\n        name: resource\n        schema:\n          type: string\n      - in: query\n        name: source\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Attribute'\n          description: ''\n    post:\n      operationId: api_attributes_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttributeRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AttributeRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AttributeRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attribute'\n          description: ''\n  /api/attributes/{id}/:\n    get:\n      operationId: api_attributes_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this attribute.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attribute'\n          description: ''\n    put:\n      operationId: api_attributes_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this attribute.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttributeRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AttributeRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AttributeRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attribute'\n          description: ''\n    patch:\n      operationId: api_attributes_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this attribute.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedAttributeRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedAttributeRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedAttributeRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attribute'\n          description: ''\n    delete:\n      operationId: api_attributes_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this attribute.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/batches/:\n    get:\n      operationId: api_batches_list\n      description: ''\n      parameters:\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - in: query\n        name: source\n        schema:\n          type: array\n          items:\n            type: string\n        explode: true\n        style: form\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedBatchList'\n          description: ''\n    post:\n      operationId: api_batches_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BatchRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/BatchRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Batch'\n          description: ''\n  /api/batches/{id}/:\n    get:\n      operationId: api_batches_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this batch.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Batch'\n          description: ''\n    put:\n      operationId: api_batches_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this batch.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BatchRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/BatchRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Batch'\n          description: ''\n    patch:\n      operationId: api_batches_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this batch.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedBatchRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedBatchRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedBatchRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Batch'\n          description: ''\n    delete:\n      operationId: api_batches_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this batch.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/batches/{id}/retry/:\n    post:\n      operationId: api_batches_retry_create\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this batch.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BatchRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/BatchRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Batch'\n          description: ''\n  /api/columns/:\n    get:\n      operationId: api_columns_list\n      description: ''\n      parameters:\n      - in: query\n        name: joined_left\n        schema:\n          type: array\n          items:\n            type: string\n        explode: true\n        style: form\n      - in: query\n        name: joined_right\n        schema:\n          type: array\n          items:\n            type: string\n        explode: true\n        style: form\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - in: query\n        name: sql_input\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Column'\n          description: ''\n    post:\n      operationId: api_columns_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ColumnRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ColumnRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ColumnRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Column'\n          description: ''\n  /api/columns/{id}/:\n    get:\n      operationId: api_columns_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this column.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Column'\n          description: ''\n    put:\n      operationId: api_columns_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this column.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ColumnRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ColumnRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ColumnRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Column'\n          description: ''\n    patch:\n      operationId: api_columns_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this column.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedColumnRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedColumnRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedColumnRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Column'\n          description: ''\n    delete:\n      operationId: api_columns_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this column.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/conditions/:\n    get:\n      operationId: api_conditions_list\n      description: ''\n      parameters:\n      - in: query\n        name: input_group\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Condition'\n          description: ''\n    post:\n      operationId: api_conditions_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConditionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ConditionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ConditionRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Condition'\n          description: ''\n  /api/conditions/{id}/:\n    get:\n      operationId: api_conditions_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this condition.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Condition'\n          description: ''\n    put:\n      operationId: api_conditions_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this condition.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConditionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ConditionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ConditionRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Condition'\n          description: ''\n    patch:\n      operationId: api_conditions_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this condition.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedConditionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedConditionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedConditionRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Condition'\n          description: ''\n    delete:\n      operationId: api_conditions_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this condition.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/core/version/:\n    get:\n      operationId: api_core_version_retrieve\n      description: Return the version of the application\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n  /api/credentials/:\n    get:\n      operationId: api_credentials_list\n      description: ''\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - in: query\n        name: source\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Credential'\n          description: ''\n    post:\n      operationId: api_credentials_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CredentialRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CredentialRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CredentialRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Credential'\n          description: ''\n  /api/credentials/{id}/:\n    get:\n      operationId: api_credentials_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this credential.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Credential'\n          description: ''\n    put:\n      operationId: api_credentials_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this credential.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CredentialRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CredentialRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CredentialRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Credential'\n          description: ''\n    patch:\n      operationId: api_credentials_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this credential.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedCredentialRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedCredentialRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedCredentialRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Credential'\n          description: ''\n    delete:\n      operationId: api_credentials_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this credential.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/explore/:\n    post:\n      operationId: api_explore_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExplorationRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ExplorationRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ExplorationRequestRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExplorationResponse'\n          description: ''\n  /api/filters/:\n    get:\n      operationId: api_filters_list\n      description: ''\n      parameters:\n      - in: query\n        name: resource\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Filter'\n          description: ''\n    post:\n      operationId: api_filters_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FilterRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FilterRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FilterRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Filter'\n          description: ''\n  /api/filters/{id}/:\n    get:\n      operationId: api_filters_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this filter.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Filter'\n          description: ''\n    put:\n      operationId: api_filters_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this filter.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FilterRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FilterRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FilterRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Filter'\n          description: ''\n    patch:\n      operationId: api_filters_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this filter.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedFilterRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedFilterRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedFilterRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Filter'\n          description: ''\n    delete:\n      operationId: api_filters_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this filter.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/input-groups/:\n    get:\n      operationId: api_input_groups_list\n      description: ''\n      parameters:\n      - in: query\n        name: attribute\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - in: query\n        name: resource\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/InputGroup'\n          description: ''\n    post:\n      operationId: api_input_groups_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InputGroupRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/InputGroupRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/InputGroupRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InputGroup'\n          description: ''\n  /api/input-groups/{id}/:\n    get:\n      operationId: api_input_groups_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this input group.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InputGroup'\n          description: ''\n    put:\n      operationId: api_input_groups_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this input group.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InputGroupRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/InputGroupRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/InputGroupRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InputGroup'\n          description: ''\n    patch:\n      operationId: api_input_groups_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this input group.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedInputGroupRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedInputGroupRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedInputGroupRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InputGroup'\n          description: ''\n    delete:\n      operationId: api_input_groups_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this input group.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/joins/:\n    get:\n      operationId: api_joins_list\n      description: ''\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - in: query\n        name: sql_input\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Join'\n          description: ''\n    post:\n      operationId: api_joins_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JoinRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/JoinRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/JoinRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Join'\n          description: ''\n  /api/joins/{id}/:\n    get:\n      operationId: api_joins_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this join.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Join'\n          description: ''\n    put:\n      operationId: api_joins_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this join.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JoinRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/JoinRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/JoinRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Join'\n          description: ''\n    patch:\n      operationId: api_joins_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this join.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedJoinRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedJoinRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedJoinRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Join'\n          description: ''\n    delete:\n      operationId: api_joins_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this join.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/list-owners/:\n    post:\n      operationId: api_list_owners_create\n      description: ''\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n  /api/owner-schema/{owner}/:\n    post:\n      operationId: api_owner_schema_create\n      description: ''\n      parameters:\n      - in: path\n        name: owner\n        schema:\n          type: string\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n  /api/owners/:\n    get:\n      operationId: api_owners_list\n      description: ''\n      parameters:\n      - in: query\n        name: credential\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Owner'\n          description: ''\n    post:\n      operationId: api_owners_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OwnerRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/OwnerRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/OwnerRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Owner'\n          description: ''\n  /api/owners/{id}/:\n    get:\n      operationId: api_owners_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this owner.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Owner'\n          description: ''\n    put:\n      operationId: api_owners_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this owner.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OwnerRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/OwnerRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/OwnerRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Owner'\n          description: ''\n    patch:\n      operationId: api_owners_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this owner.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedOwnerRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedOwnerRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedOwnerRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Owner'\n          description: ''\n    delete:\n      operationId: api_owners_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this owner.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/preview/:\n    post:\n      operationId: api_preview_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PreviewRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PreviewRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PreviewRequestRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreviewResponse'\n          description: ''\n  /api/resources/:\n    get:\n      operationId: api_resources_list\n      description: ''\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - in: query\n        name: source\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Resource'\n          description: ''\n    post:\n      operationId: api_resources_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resource'\n          description: ''\n  /api/resources/{id}/:\n    get:\n      operationId: api_resources_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this resource.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resource'\n          description: ''\n    put:\n      operationId: api_resources_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this resource.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resource'\n          description: ''\n    patch:\n      operationId: api_resources_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this resource.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resource'\n          description: ''\n    delete:\n      operationId: api_resources_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this resource.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/scripts/:\n    get:\n      operationId: api_scripts_list\n      description: ''\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Scripts'\n          description: ''\n  /api/sources/:\n    get:\n      operationId: api_sources_list\n      description: ''\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Source'\n          description: ''\n    post:\n      operationId: api_sources_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SourceRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SourceRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SourceRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Source'\n          description: ''\n  /api/sources/{id}/:\n    get:\n      operationId: api_sources_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this source.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Source'\n          description: ''\n    put:\n      operationId: api_sources_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this source.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SourceRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SourceRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SourceRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Source'\n          description: ''\n    patch:\n      operationId: api_sources_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this source.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedSourceRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedSourceRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedSourceRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Source'\n          description: ''\n    delete:\n      operationId: api_sources_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this source.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/sources/{id}/export/:\n    get:\n      operationId: api_sources_export_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this source.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MappingWithPartialCredential'\n          description: ''\n  /api/sources/import/:\n    post:\n      operationId: api_sources_import_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MappingRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/MappingRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/MappingRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mapping'\n          description: ''\n  /api/sql-inputs/:\n    get:\n      operationId: api_sql_inputs_list\n      description: ''\n      parameters:\n      - in: query\n        name: input_group\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - in: query\n        name: resource\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SQLInput'\n          description: ''\n    post:\n      operationId: api_sql_inputs_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SQLInputRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SQLInputRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SQLInputRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SQLInput'\n          description: ''\n  /api/sql-inputs/{id}/:\n    get:\n      operationId: api_sql_inputs_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this sql input.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SQLInput'\n          description: ''\n    put:\n      operationId: api_sql_inputs_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this sql input.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SQLInputRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SQLInputRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SQLInputRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SQLInput'\n          description: ''\n    patch:\n      operationId: api_sql_inputs_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this sql input.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedSQLInputRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedSQLInputRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedSQLInputRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SQLInput'\n          description: ''\n    delete:\n      operationId: api_sql_inputs_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this sql input.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/static-inputs/:\n    get:\n      operationId: api_static_inputs_list\n      description: ''\n      parameters:\n      - in: query\n        name: attribute\n        schema:\n          type: string\n      - in: query\n        name: input_group\n        schema:\n          type: string\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - in: query\n        name: resource\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StaticInput'\n          description: ''\n    post:\n      operationId: api_static_inputs_create\n      description: ''\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StaticInputRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/StaticInputRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/StaticInputRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaticInput'\n          description: ''\n  /api/static-inputs/{id}/:\n    get:\n      operationId: api_static_inputs_retrieve\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this static input.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaticInput'\n          description: ''\n    put:\n      operationId: api_static_inputs_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this static input.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StaticInputRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/StaticInputRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/StaticInputRequest'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaticInput'\n          description: ''\n    patch:\n      operationId: api_static_inputs_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this static input.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedStaticInputRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedStaticInputRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedStaticInputRequest'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaticInput'\n          description: ''\n    delete:\n      operationId: api_static_inputs_destroy\n      description: ''\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n        description: A unique value identifying this static input.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '204':\n          description: No response body\n  /api/user/:\n    get:\n      operationId: api_user_retrieve\n      description: ''\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\ncomponents:\n  schemas:\n    ActionEnum:\n      enum:\n      - INCLUDE\n      - EXCLUDE\n      type: string\n    Attribute:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        path:\n          type: string\n        slice_name:\n          type: string\n        definition_id:\n          type: string\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        resource:\n          type: string\n      required:\n      - created_at\n      - definition_id\n      - id\n      - path\n      - resource\n      - updated_at\n    AttributeRequest:\n      type: object\n      properties:\n        path:\n          type: string\n        slice_name:\n          type: string\n        definition_id:\n          type: string\n        resource:\n          type: string\n      required:\n      - definition_id\n      - path\n      - resource\n    Batch:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/Error'\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        canceled_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        completed_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n        resources:\n          type: array\n          items:\n            type: string\n      required:\n      - canceled_at\n      - completed_at\n      - created_at\n      - errors\n      - id\n      - resources\n      - updated_at\n    BatchRequest:\n      type: object\n      properties:\n        resources:\n          type: array\n          items:\n            type: string\n      required:\n      - resources\n    Column:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        table:\n          type: string\n        column:\n          type: string\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        owner:\n          type: string\n      required:\n      - column\n      - created_at\n      - id\n      - owner\n      - table\n      - updated_at\n    ColumnRequest:\n      type: object\n      properties:\n        table:\n          type: string\n        column:\n          type: string\n        owner:\n          type: string\n      required:\n      - column\n      - owner\n      - table\n    Condition:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        action:\n          $ref: '#/components/schemas/ActionEnum'\n        value:\n          type: string\n        relation:\n          $ref: '#/components/schemas/ConditionRelationEnum'\n        sql_input:\n          type: string\n        input_group:\n          type: string\n      required:\n      - action\n      - id\n      - input_group\n      - relation\n      - sql_input\n    ConditionRelationEnum:\n      enum:\n      - EQ\n      - GT\n      - GE\n      - LT\n      - LE\n      - NOTNULL\n      - 'NULL'\n      type: string\n    ConditionRequest:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/ActionEnum'\n        value:\n          type: string\n        relation:\n          $ref: '#/components/schemas/ConditionRelationEnum'\n        sql_input:\n          type: string\n        input_group:\n          type: string\n      required:\n      - action\n      - input_group\n      - relation\n      - sql_input\n    Credential:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        available_owners:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        host:\n          type: string\n        port:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        database:\n          type: string\n        login:\n          type: string\n        password:\n          type: string\n        model:\n          $ref: '#/components/schemas/ModelEnum'\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        source:\n          type: string\n      required:\n      - available_owners\n      - created_at\n      - database\n      - host\n      - id\n      - login\n      - model\n      - password\n      - port\n      - source\n      - updated_at\n    CredentialRequest:\n      type: object\n      properties:\n        host:\n          type: string\n        port:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        database:\n          type: string\n        login:\n          type: string\n        password:\n          type: string\n        model:\n          $ref: '#/components/schemas/ModelEnum'\n        source:\n          type: string\n      required:\n      - database\n      - host\n      - login\n      - model\n      - password\n      - port\n      - source\n    Error:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        event:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        batch:\n          type: string\n      required:\n      - batch\n      - created_at\n      - event\n      - id\n      - updated_at\n    ErrorRequest:\n      type: object\n      properties:\n        event:\n          type: string\n        batch:\n          type: string\n      required:\n      - batch\n      - event\n    ExplorationRequestRequest:\n      type: object\n      properties:\n        resource_id:\n          type: string\n        owner:\n          type: string\n        table:\n          type: string\n      required:\n      - owner\n      - resource_id\n      - table\n    ExplorationResponse:\n      type: object\n      properties:\n        fields:\n          type: array\n          items:\n            type: string\n        rows:\n          type: array\n          items:\n            type: array\n            items: {}\n      required:\n      - fields\n      - rows\n    Filter:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        relation:\n          $ref: '#/components/schemas/FilterRelationEnum'\n        value:\n          type: string\n        resource:\n          type: string\n        sql_input:\n          type: string\n      required:\n      - id\n      - relation\n      - resource\n      - sql_input\n    FilterRelationEnum:\n      enum:\n      - '='\n      - \u003c\u003e\n      - IN\n      - '\u003e'\n      - '\u003e='\n      - \u003c\n      - \u003c=\n      type: string\n    FilterRequest:\n      type: object\n      properties:\n        relation:\n          $ref: '#/components/schemas/FilterRelationEnum'\n        value:\n          type: string\n        resource:\n          type: string\n        sql_input:\n          type: string\n      required:\n      - relation\n      - resource\n      - sql_input\n    InputGroup:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        merging_script:\n          type: string\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        attribute:\n          type: string\n      required:\n      - attribute\n      - created_at\n      - id\n      - updated_at\n    InputGroupRequest:\n      type: object\n      properties:\n        merging_script:\n          type: string\n        attribute:\n          type: string\n      required:\n      - attribute\n    Join:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        sql_input:\n          type: string\n        left:\n          type: string\n        right:\n          type: string\n      required:\n      - created_at\n      - id\n      - left\n      - right\n      - sql_input\n      - updated_at\n    JoinRequest:\n      type: object\n      properties:\n        sql_input:\n          type: string\n        left:\n          type: string\n        right:\n          type: string\n      required:\n      - left\n      - right\n      - sql_input\n    Mapping:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingResource'\n          default: []\n        credential:\n          $ref: '#/components/schemas/MappingCredential'\n        name:\n          type: string\n        version:\n          type: string\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created_at\n      - credential\n      - id\n      - name\n      - updated_at\n    MappingAttribute:\n      type: object\n      properties:\n        path:\n          type: string\n        slice_name:\n          type: string\n        definition_id:\n          type: string\n        input_groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingInputGroup'\n          default: []\n      required:\n      - definition_id\n      - path\n    MappingAttributeRequest:\n      type: object\n      properties:\n        path:\n          type: string\n        slice_name:\n          type: string\n        definition_id:\n          type: string\n        input_groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingInputGroupRequest'\n          default: []\n      required:\n      - definition_id\n      - path\n    MappingColumn:\n      type: object\n      properties:\n        id:\n          type: string\n        table:\n          type: string\n        column:\n          type: string\n      required:\n      - column\n      - id\n      - table\n    MappingColumnRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        table:\n          type: string\n        column:\n          type: string\n      required:\n      - column\n      - id\n      - table\n    MappingCondition:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/ActionEnum'\n        sql_input:\n          $ref: '#/components/schemas/MappingSQLInput'\n        value:\n          type: string\n        relation:\n          $ref: '#/components/schemas/ConditionRelationEnum'\n      required:\n      - action\n      - sql_input\n    MappingConditionRequest:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/ActionEnum'\n        sql_input:\n          $ref: '#/components/schemas/MappingSQLInputRequest'\n        value:\n          type: string\n        relation:\n          $ref: '#/components/schemas/ConditionRelationEnum'\n      required:\n      - action\n      - sql_input\n    MappingCredential:\n      type: object\n      properties:\n        host:\n          type: string\n        port:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        database:\n          type: string\n        model:\n          $ref: '#/components/schemas/ModelEnum'\n        owners:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingOwner'\n          default: []\n        login:\n          type: string\n        password:\n          type: string\n      required:\n      - database\n      - host\n      - login\n      - model\n      - password\n      - port\n    MappingCredentialRequest:\n      type: object\n      properties:\n        host:\n          type: string\n        port:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        database:\n          type: string\n        model:\n          $ref: '#/components/schemas/ModelEnum'\n        owners:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingOwnerRequest'\n          default: []\n        login:\n          type: string\n        password:\n          type: string\n      required:\n      - database\n      - host\n      - login\n      - model\n      - password\n      - port\n    MappingFilter:\n      type: object\n      properties:\n        relation:\n          $ref: '#/components/schemas/FilterRelationEnum'\n        value:\n          type: string\n        sql_input:\n          $ref: '#/components/schemas/MappingSQLInput'\n      required:\n      - relation\n      - sql_input\n    MappingFilterRequest:\n      type: object\n      properties:\n        relation:\n          $ref: '#/components/schemas/FilterRelationEnum'\n        value:\n          type: string\n        sql_input:\n          $ref: '#/components/schemas/MappingSQLInputRequest'\n      required:\n      - relation\n      - sql_input\n    MappingInputGroup:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        merging_script:\n          type: string\n        static_inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingStaticInput'\n          default: []\n        sql_inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingSQLInput'\n          default: []\n        conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingCondition'\n          default: []\n      required:\n      - id\n    MappingInputGroupRequest:\n      type: object\n      properties:\n        merging_script:\n          type: string\n        static_inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingStaticInputRequest'\n          default: []\n        sql_inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingSQLInputRequest'\n          default: []\n        conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingConditionRequest'\n          default: []\n    MappingJoin:\n      type: object\n      properties:\n        left:\n          type: string\n        right:\n          type: string\n      required:\n      - left\n      - right\n    MappingJoinRequest:\n      type: object\n      properties:\n        left:\n          type: string\n        right:\n          type: string\n      required:\n      - left\n      - right\n    MappingOwner:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        columns:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingColumn'\n          default: []\n      required:\n      - id\n      - name\n    MappingOwnerRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        columns:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingColumnRequest'\n          default: []\n      required:\n      - id\n      - name\n    MappingPartialCredential:\n      type: object\n      properties:\n        host:\n          type: string\n        port:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        database:\n          type: string\n        model:\n          $ref: '#/components/schemas/ModelEnum'\n        owners:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingOwner'\n          default: []\n      required:\n      - database\n      - host\n      - model\n      - port\n    MappingRequest:\n      type: object\n      properties:\n        resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingResourceRequest'\n          default: []\n        credential:\n          $ref: '#/components/schemas/MappingCredentialRequest'\n        name:\n          type: string\n        version:\n          type: string\n      required:\n      - credential\n      - name\n    MappingResource:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        label:\n          type: string\n        primary_key_table:\n          type: string\n        primary_key_column:\n          type: string\n        definition_id:\n          type: string\n        definition:\n          type: object\n          additionalProperties: {}\n        logical_reference:\n          type: string\n        primary_key_owner:\n          type: string\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingAttribute'\n          default: []\n        filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingFilter'\n          default: []\n      required:\n      - definition\n      - definition_id\n      - id\n      - logical_reference\n      - primary_key_column\n      - primary_key_owner\n      - primary_key_table\n    MappingResourceRequest:\n      type: object\n      properties:\n        label:\n          type: string\n        primary_key_table:\n          type: string\n        primary_key_column:\n          type: string\n        definition_id:\n          type: string\n        definition:\n          type: object\n          additionalProperties: {}\n        logical_reference:\n          type: string\n        primary_key_owner:\n          type: string\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingAttributeRequest'\n          default: []\n        filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingFilterRequest'\n          default: []\n      required:\n      - definition\n      - definition_id\n      - logical_reference\n      - primary_key_column\n      - primary_key_owner\n      - primary_key_table\n    MappingSQLInput:\n      type: object\n      properties:\n        script:\n          type: string\n        concept_map_id:\n          type: string\n        column:\n          type: string\n          nullable: true\n        joins:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingJoin'\n      required:\n      - column\n      - joins\n    MappingSQLInputRequest:\n      type: object\n      properties:\n        script:\n          type: string\n        concept_map_id:\n          type: string\n        column:\n          type: string\n          nullable: true\n        joins:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingJoinRequest'\n      required:\n      - column\n      - joins\n    MappingStaticInput:\n      type: object\n      properties:\n        value:\n          type: string\n          nullable: true\n    MappingStaticInputRequest:\n      type: object\n      properties:\n        value:\n          type: string\n          nullable: true\n    MappingWithPartialCredential:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/MappingResource'\n          default: []\n        credential:\n          $ref: '#/components/schemas/MappingPartialCredential'\n        name:\n          type: string\n        version:\n          type: string\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created_at\n      - credential\n      - id\n      - name\n      - updated_at\n    ModelEnum:\n      enum:\n      - MSSQL\n      - POSTGRES\n      - ORACLE\n      - SQLLITE\n      type: string\n    OperationOutcomeIssue:\n      type: object\n      properties:\n        severity:\n          $ref: '#/components/schemas/SeverityEnum'\n        code:\n          type: string\n        diagnostics:\n          type: string\n        location:\n          type: array\n          items:\n            type: string\n        expression:\n          type: string\n      required:\n      - code\n      - diagnostics\n      - expression\n      - location\n      - severity\n    Owner:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        schema:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        credential:\n          type: string\n      required:\n      - credential\n      - id\n      - name\n      - schema\n    OwnerRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        credential:\n          type: string\n      required:\n      - credential\n      - name\n    PaginatedBatchList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Batch'\n    PatchedAttributeRequest:\n      type: object\n      properties:\n        path:\n          type: string\n        slice_name:\n          type: string\n        definition_id:\n          type: string\n        resource:\n          type: string\n    PatchedBatchRequest:\n      type: object\n      properties:\n        resources:\n          type: array\n          items:\n            type: string\n    PatchedColumnRequest:\n      type: object\n      properties:\n        table:\n          type: string\n        column:\n          type: string\n        owner:\n          type: string\n    PatchedConditionRequest:\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/ActionEnum'\n        value:\n          type: string\n        relation:\n          $ref: '#/components/schemas/ConditionRelationEnum'\n        sql_input:\n          type: string\n        input_group:\n          type: string\n    PatchedCredentialRequest:\n      type: object\n      properties:\n        host:\n          type: string\n        port:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        database:\n          type: string\n        login:\n          type: string\n        password:\n          type: string\n        model:\n          $ref: '#/components/schemas/ModelEnum'\n        source:\n          type: string\n    PatchedFilterRequest:\n      type: object\n      properties:\n        relation:\n          $ref: '#/components/schemas/FilterRelationEnum'\n        value:\n          type: string\n        resource:\n          type: string\n        sql_input:\n          type: string\n    PatchedInputGroupRequest:\n      type: object\n      properties:\n        merging_script:\n          type: string\n        attribute:\n          type: string\n    PatchedJoinRequest:\n      type: object\n      properties:\n        sql_input:\n          type: string\n        left:\n          type: string\n        right:\n          type: string\n    PatchedOwnerRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        credential:\n          type: string\n    PatchedResourceRequest:\n      type: object\n      properties:\n        label:\n          type: string\n        primary_key_table:\n          type: string\n        primary_key_column:\n          type: string\n        definition_id:\n          type: string\n        source:\n          type: string\n        primary_key_owner:\n          type: string\n    PatchedSQLInputRequest:\n      type: object\n      properties:\n        script:\n          type: string\n        concept_map_id:\n          type: string\n        input_group:\n          type: string\n          nullable: true\n        column:\n          type: string\n    PatchedSourceRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        version:\n          type: string\n    PatchedStaticInputRequest:\n      type: object\n      properties:\n        value:\n          type: string\n          nullable: true\n        input_group:\n          type: string\n    PreviewRequestRequest:\n      type: object\n      properties:\n        resource_id:\n          type: string\n        primary_key_values:\n          type: array\n          items:\n            type: string\n      required:\n      - primary_key_values\n      - resource_id\n    PreviewResponse:\n      type: object\n      properties:\n        instances:\n          type: array\n          items:\n            type: object\n            additionalProperties: {}\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/OperationOutcomeIssue'\n      required:\n      - errors\n      - instances\n    Resource:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        label:\n          type: string\n        primary_key_table:\n          type: string\n        primary_key_column:\n          type: string\n        definition_id:\n          type: string\n        definition:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        logical_reference:\n          type: string\n          format: uuid\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        source:\n          type: string\n        primary_key_owner:\n          type: string\n      required:\n      - created_at\n      - definition\n      - definition_id\n      - id\n      - logical_reference\n      - primary_key_column\n      - primary_key_owner\n      - primary_key_table\n      - source\n      - updated_at\n    ResourceRequest:\n      type: object\n      properties:\n        label:\n          type: string\n        primary_key_table:\n          type: string\n        primary_key_column:\n          type: string\n        definition_id:\n          type: string\n        source:\n          type: string\n        primary_key_owner:\n          type: string\n      required:\n      - definition_id\n      - primary_key_column\n      - primary_key_owner\n      - primary_key_table\n      - source\n    SQLInput:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        script:\n          type: string\n        concept_map_id:\n          type: string\n        input_group:\n          type: string\n          nullable: true\n        column:\n          type: string\n      required:\n      - column\n      - created_at\n      - id\n      - updated_at\n    SQLInputRequest:\n      type: object\n      properties:\n        script:\n          type: string\n        concept_map_id:\n          type: string\n        input_group:\n          type: string\n          nullable: true\n        column:\n          type: string\n      required:\n      - column\n    Scripts:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        category:\n          type: string\n      required:\n      - category\n      - description\n      - name\n    SeverityEnum:\n      enum:\n      - fatal\n      - error\n      - warning\n      - information\n      type: string\n    Source:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        version:\n          type: string\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        users:\n          type: array\n          items:\n            type: string\n          readOnly: true\n      required:\n      - created_at\n      - id\n      - name\n      - updated_at\n      - users\n    SourceRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        version:\n          type: string\n      required:\n      - name\n    StaticInput:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        value:\n          type: string\n          nullable: true\n        input_group:\n          type: string\n      required:\n      - created_at\n      - id\n      - input_group\n      - updated_at\n    StaticInputRequest:\n      type: object\n      properties:\n        value:\n          type: string\n          nullable: true\n        input_group:\n          type: string\n      required:\n      - input_group\n    User:\n      type: object\n      properties:\n        id:\n          type: string\n          readOnly: true\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n      required:\n      - email\n      - id\n      - username\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: Session\n"
		}
	},
	"Error": "buildIR: make ir: path \"/api/sources/import/\": post: requestBody: contents: multipart/form-data: form parameter \"credential\": field \"Owners\": nested arrays not allowed",
	"NotImplemented": [
		"cookie security"
	]
}