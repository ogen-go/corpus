{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "letmc.com-diary-v3-diary-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/letmc.com-diary-v3-diary-swagger.yaml",
			"byteSize": 22740,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: agentOSSoftware\n  title: AgentOS Api V3, diary\n  version: v3-diary\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    url: https://twitter.com/agentOSSoftware/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://live-api.letmc.com/swagger/docs/v3-diary\n      version: \"2.0\"\n  x-providerName: letmc.com\n  x-serviceName: diary\npaths:\n  \"/v3/diary/{shortName}/allocations\":\n    get:\n      deprecated: false\n      operationId: DiaryController_GetAllocations\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The date to search from\n          in: query\n          name: preferredDate\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - description: The unique property identifier (Sales or Lettings)\n          in: query\n          name: propertyIdentifier\n          required: true\n          schema:\n            type: string\n        - description: The unique appointment type identifier\n          in: query\n          name: appointmentType\n          required: true\n          schema:\n            type: string\n        - description: Sales or Lettings property?\n          in: query\n          name: lettings\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiaryBookingModel\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiaryBookingModel\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiaryBookingModel\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiaryBookingModel\"\n                type: array\n      summary: Get a list of all available allocations for a date + 7 days for a\n        specified appointment type\n      tags:\n        - DiaryController\n  \"/v3/diary/{shortName}/appointment\":\n    delete:\n      deprecated: false\n      operationId: DiaryController_DeleteAppointment\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique appointment id\n          in: query\n          name: appointmentID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/xml:\n              schema:\n                type: string\n      summary: Update an existing appointment using its unique identifier\n      tags:\n        - DiaryController\n    get:\n      deprecated: false\n      operationId: DiaryController_GetAppointment\n      parameters:\n        - description: Company short name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: Appointment ID\n          in: query\n          name: appointmentID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModel\"\n      summary: Get an appointment by ID\n      tags:\n        - DiaryController\n    post:\n      deprecated: false\n      operationId: DiaryController_PostAppointment\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique property identifier (Sales or Lettings)\n          in: query\n          name: propertyIdentifier\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Sales or Lettings property?\n          in: query\n          name: lettings\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/DiaryAppointmentDetails\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/xml:\n              schema:\n                type: string\n      summary: Post an appointment into a valid diary allocation\n      tags:\n        - DiaryController\n    put:\n      deprecated: false\n      operationId: DiaryController_PutAppointment\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique appointment id\n          in: query\n          name: appointmentID\n          required: true\n          schema:\n            type: string\n        - description: Sales or Lettings property?\n          in: query\n          name: lettings\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/DiaryAppointmentDetails\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/xml:\n              schema:\n                type: string\n      summary: Update an existing appointment using its unique identifier\n      tags:\n        - DiaryController\n  \"/v3/diary/{shortName}/appointmentsbetweendates\":\n    get:\n      deprecated: false\n      operationId: DiaryController_GetAppointmentsBetweenDates\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Branch\n          in: query\n          name: branchID\n          required: true\n          schema:\n            type: string\n        - description: The search from date\n          in: query\n          name: startDate\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - description: The search to date\n          in: query\n          name: endDate\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - description: The appointment IDs to search for\n          in: query\n          name: appointmentTypesToSearch\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n      summary: A collection of diary appointments linked to a company filtered between\n        specific dates and by appointment type\n      tags:\n        - DiaryController\n  \"/v3/diary/{shortName}/appointmenttypes\":\n    get:\n      deprecated: false\n      operationId: DiaryController_GetAppointmentTypes\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModelResults\"\n      summary: A collection of all diary appointment types\n      tags:\n        - DiaryController\n  \"/v3/diary/{shortName}/recurringappointment\":\n    get:\n      deprecated: false\n      operationId: DiaryController_GetRecurringAppointments\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Branch\n          in: query\n          name: branchID\n          required: true\n          schema:\n            type: string\n        - description: The appointment IDs to search for\n          in: query\n          name: appointmentTypesToSearch\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n      summary: Retrieves all recurring appointments:-\n      tags:\n        - DiaryController\nservers:\n  - url: https://live-api.letmc.com\ncomponents:\n  requestBodies:\n    DiaryAppointmentDetails:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DiaryAppointmentDetails\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/DiaryAppointmentDetails\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/DiaryAppointmentDetails\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/DiaryAppointmentDetails\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/DiaryAppointmentDetails\"\n      description: The appointment details model\n      required: true\n  securitySchemes:\n    apiKey:\n      description: ApiKey Authentication\n      in: header\n      name: ApiKey\n      type: apiKey\n    basic:\n      description: Basic HTTP Authentication\n      type: http\n      scheme: basic\n  schemas:\n    DiaryAppointmentDetails:\n      description: Submission Model - Structure to submit the appointment details\n      properties:\n        AllocationDetails:\n          $ref: \"#/components/schemas/DiaryBookingModel\"\n        AppointmentType:\n          description: The Appointment Type ID\n          type: string\n        ExtraComments:\n          description: Additional appointment comments\n          type: string\n        Guests:\n          description: A collection of guests linked to the appointment. If none leave empty\n          items:\n            $ref: \"#/components/schemas/DiaryGuestDetails\"\n          type: array\n        Subject:\n          description: The subject of the appointment\n          type: string\n      type: object\n    DiaryAppointmentModel:\n      description: Represents a single diary appointment for a staff member.\n      properties:\n        AppointmentType:\n          description: The diary appointment type.\n          type: string\n        Cancelled:\n          description: Whether the appointment has been cancelled.\n          type: boolean\n        Comment:\n          description: The appointment comments text.\n          type: string\n        CreatedAt:\n          description: The date/time this appointment was created.\n          format: date-time\n          type: string\n        CreatedBy:\n          description: The staff member that created this appointment.\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        End:\n          description: The end date/time of this appointment.\n          format: date-time\n          type: string\n        LinkedProperties:\n          description: A collection of properties linked to the appointment:-\n          items:\n            $ref: \"#/components/schemas/LinkedPropertiesModel\"\n          type: array\n        NextRecurringDate:\n          description: Date appointment next repeats:-\n          format: date-time\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        Recurrence:\n          description: The reccurrence interval for the appointment:-\n          format: int32\n          type: integer\n        RecurrenceType:\n          description: The type of recurrence:-\n          type: string\n        RemindAt:\n          description: The date/time to remind the staff member of this appointment.\n          format: date-time\n          type: string\n        RemindBefore:\n          description: The number of minutes before the appointment start date/time to\n            remind the staff member. -1 means don't remind.\n          enum:\n            - Min\n            - Min2\n            - Min5\n            - Min10\n            - Min15\n            - Min30\n            - Min45\n            - Hour\n            - Hour2\n            - Hour3\n            - Hour6\n            - Hour12\n            - Day\n            - Day2\n            - Day3\n            - Week\n            - NoReminder\n          type: string\n        Staff:\n          description: The staff member holding this appointment.\n          type: string\n        Start:\n          description: The start date/time of this appointment.\n          format: date-time\n          type: string\n        Subject:\n          description: The appointment subject text.\n          type: string\n      type: object\n    DiaryAppointmentModelResults:\n      description: Holds results from a paged query returning DiaryAppointmentModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/DiaryAppointmentModel\"\n          type: array\n      type: object\n    DiaryAppointmentTypeModel:\n      description: Represents a diary appointment type.\n      properties:\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        Name:\n          description: The appointment type name.\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        SystemType:\n          description: The appointment system type.\n          enum:\n            - Viewing\n            - ViewAndValue\n            - OpeningInspection\n            - InterimInspection\n            - ClosingInspection\n            - SalesAppraisal\n            - Custom\n          type: string\n      type: object\n    DiaryAppointmentTypeModelResults:\n      description: Holds results from a paged query returning DiaryAppointmentTypeModel\n        values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/DiaryAppointmentTypeModel\"\n          type: array\n      type: object\n    DiaryBookingModel:\n      description: Represents a viewing booking slot\n      properties:\n        End:\n          description: The end time of the booking\n          format: date-time\n          type: string\n        StaffID:\n          description: The unique ID of the staff member this booking is with\n          type: string\n        StaffName:\n          description: The name of the staff member this booking is with\n          type: string\n        Start:\n          description: The start time of the booking\n          format: date-time\n          type: string\n      type: object\n    DiaryGuestDetails:\n      description: Submission Model - Structure to submit appointment guest details\n      properties:\n        EmailAddress:\n          description: Email address\n          type: string\n        Forename:\n          description: Forename\n          type: string\n        MobilePhone:\n          description: Mobile phone\n          type: string\n        OID:\n          description: The unique identifier of a user, only submit this is known\n          type: string\n        Surname:\n          description: Surname\n          type: string\n      type: object\n    LatestTenancyModel:\n      description: Holds information on the most recent tenancy linked to the property.\n      properties:\n        ETag:\n          description: ETag\n          type: string\n        EndDate:\n          description: The end date of the Tenancy\n          format: date-time\n          type: string\n        FixedDate:\n          description: The fixed date of the Tenancy\n          format: date-time\n          type: string\n        GlobalReference:\n          description: The unique global reference of the Tenancy\n          type: string\n        IsTenancyEnded:\n          description: Has the Tenancy ended?\n          type: boolean\n        IsTenancyProposed:\n          description: Is the tenancy Proposed?\n          type: boolean\n        IsTenancySigned:\n          description: Is the tenancy signed?\n          type: boolean\n        LinkedTenants:\n          description: A collection of tenants linked to the tenancy:-\n          items:\n            $ref: \"#/components/schemas/LinkedTenantModel\"\n          type: array\n        OID:\n          description: OID\n          type: string\n        StartDate:\n          description: The start date of the Tenancy\n          format: date-time\n          type: string\n      type: object\n    LinkedLandlordModel:\n      description: Holds information on landlords\n      properties:\n        ETag:\n          description: ETag\n          type: string\n        Email:\n          description: Landlord's email address\n          type: string\n        Forename:\n          description: Forename\n          type: string\n        OID:\n          description: OID\n          type: string\n        PhoneNumber:\n          description: Landlord's phone number\n          type: string\n        Surname:\n          description: Surname\n          type: string\n        Title:\n          description: Title\n          type: string\n      type: object\n    LinkedPropertiesModel:\n      description: Holds information on linked properties\n      properties:\n        Address1:\n          description: Address 1\n          type: string\n        Address2:\n          description: Address2\n          type: string\n        Address3:\n          description: Address 3\n          type: string\n        Address4:\n          description: Address 4\n          type: string\n        AddressFlatRoomNumber:\n          description: Address Flat Room Number\n          type: string\n        AddressNumber:\n          description: Address Number\n          type: string\n        ETag:\n          description: ETag\n          type: string\n        LatestTenancy:\n          $ref: \"#/components/schemas/LatestTenancyModel\"\n        MainLandlord:\n          $ref: \"#/components/schemas/LinkedLandlordModel\"\n        OID:\n          description: OID\n          type: string\n        Postcode:\n          description: Postcode\n          type: string\n      type: object\n    LinkedTenantModel:\n      description: Holds information on tenants\n      properties:\n        ETag:\n          description: ETag\n          type: string\n        Email:\n          description: Tenant's email address\n          type: string\n        Forename:\n          description: Forename\n          type: string\n        OID:\n          description: OID\n          type: string\n        PhoneNumber:\n          description: Tenant's phone number\n          type: string\n        Surname:\n          description: Surname\n          type: string\n        Title:\n          description: Title\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/letmc.com-diary-v3-diary-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/letmc.com-diary-v3-diary-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/v3/diary/{shortName}/appointment\": put: requestBody: contents: media: \"application/x-www-form-urlencoded\": form parameter \"Guests\": nested objects not allowed"
}