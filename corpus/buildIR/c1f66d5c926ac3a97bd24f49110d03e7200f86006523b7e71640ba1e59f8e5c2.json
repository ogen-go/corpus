{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/frain-dev/convoy"
		},
		"file": {
			"name": "openapi3.yaml",
			"size": 0,
			"path": "docs/v3/openapi3.yaml",
			"byteSize": 165688,
			"content": "components:\n  schemas:\n    auth.Role:\n      properties:\n        apps:\n          items:\n            type: string\n          type: array\n        groups:\n          items:\n            type: string\n          type: array\n        type:\n          type: string\n      type: object\n    datastore.APIKey:\n      properties:\n        created_at:\n          type: integer\n        deleted_at:\n          type: integer\n        expires_at:\n          type: integer\n        hash:\n          type: string\n        key_type:\n          type: string\n        mask_id:\n          type: string\n        name:\n          type: string\n        role:\n          $ref: '#/components/schemas/auth.Role'\n        salt:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: integer\n      type: object\n    datastore.AlertConfiguration:\n      properties:\n        count:\n          type: integer\n        threshold:\n          type: string\n      type: object\n    datastore.ApiKey:\n      properties:\n        header_name:\n          type: string\n        header_value:\n          type: string\n      type: object\n    datastore.Application:\n      properties:\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        endpoints:\n          items:\n            $ref: '#/components/schemas/datastore.Endpoint'\n          type: array\n        events:\n          type: integer\n        group_id:\n          type: string\n        is_disabled:\n          type: boolean\n        name:\n          type: string\n        slack_webhook_url:\n          type: string\n        support_email:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: string\n      type: object\n    datastore.BasicAuth:\n      properties:\n        password:\n          type: string\n        username:\n          type: string\n      type: object\n    datastore.DeliveryAttempt:\n      properties:\n        api_version:\n          type: string\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        endpoint_id:\n          type: string\n        error:\n          type: string\n        http_status:\n          type: string\n        ip_address:\n          type: string\n        method:\n          type: string\n        msg_id:\n          type: string\n        request_http_header:\n          $ref: '#/components/schemas/datastore.HttpHeader'\n        response_data:\n          type: string\n        response_http_header:\n          $ref: '#/components/schemas/datastore.HttpHeader'\n        status:\n          type: boolean\n        uid:\n          type: string\n        updated_at:\n          type: string\n        url:\n          type: string\n      type: object\n    datastore.Endpoint:\n      properties:\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        description:\n          type: string\n        http_timeout:\n          type: string\n        rate_limit:\n          type: integer\n        rate_limit_duration:\n          type: string\n        secret:\n          type: string\n        target_url:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: string\n      type: object\n    datastore.Event:\n      properties:\n        app_id:\n          type: string\n        app_metadata:\n          $ref: '#/components/schemas/datastore.Application'\n        created_at:\n          type: string\n        data:\n          description: |-\n            Data is an arbitrary JSON value that gets sent as the body of the\n            webhook to the endpoints\n          items:\n            type: integer\n          type: array\n        deleted_at:\n          type: string\n        event_type:\n          type: string\n        forwarded_headers:\n          $ref: '#/components/schemas/datastore.HttpHeader'\n        group_id:\n          type: string\n        matched_endpoints:\n          description: TODO(all) remove this field\n          type: integer\n        provider_id:\n          description: |-\n            ProviderID is a custom ID that can be used to reconcile this Event\n            with your internal systems.\n            This is optional\n            If not provided, we will generate one for you\n          type: string\n        source_id:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: string\n      type: object\n    datastore.EventDelivery:\n      properties:\n        app_id:\n          type: string\n        app_metadata:\n          $ref: '#/components/schemas/datastore.Application'\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        description:\n          type: string\n        endpoint_id:\n          type: string\n        endpoint_metadata:\n          $ref: '#/components/schemas/datastore.Endpoint'\n        event_id:\n          type: string\n        event_metadata:\n          $ref: '#/components/schemas/datastore.Event'\n        forwarded_headers:\n          $ref: '#/components/schemas/datastore.HttpHeader'\n        group_id:\n          type: string\n        metadata:\n          $ref: '#/components/schemas/datastore.Metadata'\n        status:\n          type: string\n        subscription_id:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: string\n      type: object\n    datastore.FilterConfiguration:\n      properties:\n        event_types:\n          items:\n            type: string\n          type: array\n      type: object\n    datastore.Group:\n      properties:\n        config:\n          $ref: '#/components/schemas/datastore.GroupConfig'\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        logo_url:\n          type: string\n        name:\n          type: string\n        organisation_id:\n          type: string\n        rate_limit:\n          description: 'TODO(subomi): refactor this into the Instance API.'\n          type: integer\n        rate_limit_duration:\n          type: string\n        statistics:\n          $ref: '#/components/schemas/datastore.GroupStatistics'\n        type:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: string\n      type: object\n    datastore.GroupConfig:\n      properties:\n        disable_endpoint:\n          type: boolean\n        ratelimit:\n          $ref: '#/components/schemas/datastore.RateLimitConfiguration'\n        replay_attacks:\n          type: boolean\n        signature:\n          $ref: '#/components/schemas/datastore.SignatureConfiguration'\n        strategy:\n          $ref: '#/components/schemas/datastore.StrategyConfiguration'\n      type: object\n    datastore.GroupStatistics:\n      properties:\n        messages_sent:\n          type: integer\n        total_apps:\n          type: integer\n      type: object\n    datastore.HMac:\n      properties:\n        encoding:\n          type: string\n        hash:\n          type: string\n        header:\n          type: string\n        secret:\n          type: string\n      type: object\n    datastore.HttpHeader:\n      additionalProperties:\n        type: string\n      type: object\n    datastore.Metadata:\n      properties:\n        data:\n          description: Data to be sent to endpoint.\n          items:\n            type: integer\n          type: array\n        interval_seconds:\n          type: integer\n        next_send_time:\n          description: |-\n            NextSendTime denotes the next time a Event will be published in\n            case it failed the first time\n          type: integer\n        num_trials:\n          description: |-\n            NumTrials: number of times we have tried to deliver this Event to\n            an application\n          type: integer\n        retry_limit:\n          type: integer\n        strategy:\n          type: string\n      type: object\n    datastore.Organisation:\n      properties:\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        name:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: string\n      type: object\n    datastore.OrganisationInvite:\n      properties:\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        invitee_email:\n          type: string\n        organisation_id:\n          type: string\n        role:\n          $ref: '#/components/schemas/auth.Role'\n        status:\n          type: string\n        token:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: string\n      type: object\n    datastore.OrganisationMember:\n      properties:\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        organisation_id:\n          type: string\n        role:\n          $ref: '#/components/schemas/auth.Role'\n        uid:\n          type: string\n        updated_at:\n          type: string\n        user_id:\n          type: string\n        user_metadata:\n          $ref: '#/components/schemas/datastore.UserMetadata'\n      type: object\n    datastore.PaginationData:\n      properties:\n        next:\n          type: integer\n        page:\n          type: integer\n        perPage:\n          type: integer\n        prev:\n          type: integer\n        total:\n          type: integer\n        totalPage:\n          type: integer\n      type: object\n    datastore.RateLimitConfiguration:\n      properties:\n        count:\n          type: integer\n        duration:\n          type: string\n      type: object\n    datastore.RetryConfiguration:\n      properties:\n        duration:\n          type: string\n        retry_count:\n          type: integer\n        type:\n          type: string\n      type: object\n    datastore.SignatureConfiguration:\n      properties:\n        hash:\n          type: string\n        header:\n          type: string\n      type: object\n    datastore.Source:\n      properties:\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        forward_headers:\n          items:\n            type: string\n          type: array\n        group_id:\n          type: string\n        is_disabled:\n          type: boolean\n        mask_id:\n          type: string\n        name:\n          type: string\n        provider:\n          type: string\n        type:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: string\n        verifier:\n          $ref: '#/components/schemas/datastore.VerifierConfig'\n      type: object\n    datastore.StrategyConfiguration:\n      properties:\n        duration:\n          type: integer\n        retry_count:\n          type: integer\n        type:\n          type: string\n      type: object\n    datastore.Subscription:\n      properties:\n        alert_config:\n          $ref: '#/components/schemas/datastore.AlertConfiguration'\n        app_metadata:\n          $ref: '#/components/schemas/datastore.Application'\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        endpoint_metadata:\n          $ref: '#/components/schemas/datastore.Endpoint'\n        filter_config:\n          $ref: '#/components/schemas/datastore.FilterConfiguration'\n        name:\n          type: string\n        retry_config:\n          $ref: '#/components/schemas/datastore.RetryConfiguration'\n        source_metadata:\n          $ref: '#/components/schemas/datastore.Source'\n        status:\n          type: string\n        type:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: string\n      type: object\n    datastore.User:\n      properties:\n        created_at:\n          type: string\n        deleted_at:\n          type: string\n        email:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        reset_password_expires_at:\n          type: string\n        role:\n          $ref: '#/components/schemas/auth.Role'\n        uid:\n          type: string\n        updated_at:\n          type: string\n      type: object\n    datastore.UserMetadata:\n      properties:\n        email:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n      type: object\n    datastore.VerifierConfig:\n      properties:\n        api_key:\n          $ref: '#/components/schemas/datastore.ApiKey'\n        basic_auth:\n          $ref: '#/components/schemas/datastore.BasicAuth'\n        hmac:\n          $ref: '#/components/schemas/datastore.HMac'\n        type:\n          type: string\n      type: object\n    models.APIKey:\n      properties:\n        expires_at:\n          type: string\n        key_type:\n          type: string\n        name:\n          type: string\n        role:\n          $ref: '#/components/schemas/models.Role'\n      type: object\n    models.APIKeyResponse:\n      properties:\n        created_at:\n          type: string\n        expires_at:\n          type: string\n        key:\n          type: string\n        key_type:\n          type: string\n        name:\n          type: string\n        role:\n          $ref: '#/components/schemas/models.Role'\n        uid:\n          type: string\n      type: object\n    models.Application:\n      properties:\n        is_disabled:\n          type: boolean\n        name:\n          type: string\n        slack_webhook_url:\n          type: string\n        support_email:\n          type: string\n      type: object\n    models.Configuration:\n      properties:\n        is_analytics_enabled:\n          type: boolean\n      type: object\n    models.ConfigurationResponse:\n      properties:\n        api_version:\n          type: string\n        created_at:\n          type: integer\n        deleted_at:\n          type: integer\n        is_analytics_enabled:\n          type: boolean\n        uid:\n          type: string\n        updated_at:\n          type: integer\n      type: object\n    models.Endpoint:\n      properties:\n        description:\n          type: string\n        events:\n          items:\n            type: string\n          type: array\n        http_timeout:\n          type: string\n        rate_limit:\n          type: integer\n        rate_limit_duration:\n          type: string\n        secret:\n          type: string\n        url:\n          type: string\n      type: object\n    models.Event:\n      properties:\n        app_id:\n          type: string\n        data:\n          description: |-\n            Data is an arbitrary JSON value that gets sent as the body of the\n            webhook to the endpoints\n          items:\n            type: integer\n          type: array\n        event_type:\n          type: string\n      type: object\n    models.ForgotPassword:\n      properties:\n        email:\n          type: string\n      type: object\n    models.Group:\n      properties:\n        config:\n          $ref: '#/components/schemas/datastore.GroupConfig'\n        logo_url:\n          type: string\n        name:\n          type: string\n        rate_limit:\n          type: integer\n        rate_limit_duration:\n          type: string\n        type:\n          type: string\n      type: object\n    models.LoginUser:\n      properties:\n        password:\n          type: string\n        username:\n          type: string\n      type: object\n    models.LoginUserResponse:\n      properties:\n        created_at:\n          type: integer\n        deleted_at:\n          type: integer\n        email:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        role:\n          $ref: '#/components/schemas/auth.Role'\n        token:\n          $ref: '#/components/schemas/models.Token'\n        uid:\n          type: string\n        updated_at:\n          type: integer\n      type: object\n    models.Organisation:\n      properties:\n        name:\n          type: string\n      type: object\n    models.OrganisationInvite:\n      properties:\n        invitee_email:\n          type: string\n        role:\n          $ref: '#/components/schemas/auth.Role'\n      type: object\n    models.PortalAPIKeyResponse:\n      properties:\n        app_id:\n          type: string\n        group_id:\n          type: string\n        key:\n          type: string\n        key_type:\n          type: string\n        role:\n          $ref: '#/components/schemas/auth.Role'\n        url:\n          type: string\n      type: object\n    models.ResetPassword:\n      properties:\n        password:\n          type: string\n        password_confirmation:\n          type: string\n      type: object\n    models.Role:\n      properties:\n        app:\n          type: string\n        group:\n          type: string\n        type:\n          type: string\n      type: object\n    models.Source:\n      properties:\n        forward_headers:\n          items:\n            type: string\n          type: array\n        is_disabled:\n          type: boolean\n        name:\n          type: string\n        provider:\n          type: string\n        type:\n          type: string\n        verifier:\n          $ref: '#/components/schemas/datastore.VerifierConfig'\n      type: object\n    models.SourceResponse:\n      properties:\n        created_at:\n          type: integer\n        deleted_at:\n          type: integer\n        group_id:\n          type: string\n        is_disabled:\n          type: boolean\n        mask_id:\n          type: string\n        name:\n          type: string\n        provider:\n          type: string\n        type:\n          type: string\n        uid:\n          type: string\n        updated_at:\n          type: integer\n        url:\n          type: string\n        verifier:\n          $ref: '#/components/schemas/datastore.VerifierConfig'\n      type: object\n    models.Subscription:\n      properties:\n        alert_config:\n          $ref: '#/components/schemas/datastore.AlertConfiguration'\n        app_id:\n          type: string\n        endpoint_id:\n          type: string\n        filter_config:\n          $ref: '#/components/schemas/datastore.FilterConfiguration'\n        name:\n          type: string\n        retry_config:\n          $ref: '#/components/schemas/datastore.RetryConfiguration'\n        source_id:\n          type: string\n        type:\n          type: string\n      type: object\n    models.Token:\n      properties:\n        access_token:\n          type: string\n        refresh_token:\n          type: string\n      type: object\n    models.UpdateOrganisationMember:\n      properties:\n        role:\n          $ref: '#/components/schemas/auth.Role'\n      type: object\n    models.UpdatePassword:\n      properties:\n        current_password:\n          type: string\n        password:\n          type: string\n        password_confirmation:\n          type: string\n      type: object\n    models.UpdateUser:\n      properties:\n        email:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n      type: object\n    models.User:\n      properties:\n        email:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        password:\n          type: string\n        role:\n          $ref: '#/components/schemas/auth.Role'\n      type: object\n    server.Stub:\n      type: object\n    server.pagedResponse:\n      properties:\n        content: {}\n        pagination:\n          $ref: '#/components/schemas/datastore.PaginationData'\n      type: object\n    server.serverResponse:\n      properties:\n        data:\n          items:\n            type: integer\n          type: array\n        message:\n          type: string\n        status:\n          type: boolean\n      type: object\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: Authorization\n      type: apiKey\ninfo:\n  contact:\n    email: Info@frain.dev\n    name: API Support\n    url: https://getconvoy.io/docs\n  description: Convoy is a fast and secure distributed webhooks service. This document\n    contains datastore.s API specification.\n  license:\n    name: Mozilla Public License 2.0\n    url: https://www.mozilla.org/en-US/MPL/2.0/\n  termsOfService: https://getconvoy.io/terms\n  title: Convoy API Specification\n  version: 0.1.12\nopenapi: 3.0.3\npaths:\n  /applications:\n    get:\n      description: This fetches all applications\n      parameters:\n      - description: results per page\n        in: query\n        name: perPage\n        schema:\n          type: string\n      - description: page number\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: sort order\n        in: query\n        name: sort\n        schema:\n          type: string\n      - description: app title\n        in: query\n        name: q\n        schema:\n          type: string\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.pagedResponse'\n                      - properties:\n                          content:\n                            items:\n                              $ref: '#/components/schemas/datastore.Application'\n                            type: array\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get all applications\n      tags:\n      - Application\n    post:\n      description: This endpoint creates an application\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Application'\n        description: Application Details\n        required: true\n        x-originalParamName: application\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Application'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Create an application\n      tags:\n      - Application\n  /applications/{appID}:\n    delete:\n      description: This endpoint deletes an app\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: application id\n        in: path\n        name: appID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Delete app\n      tags:\n      - Application\n    get:\n      description: This endpoint fetches an application by it's id\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: application id\n        in: path\n        name: appID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Application'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get an application\n      tags:\n      - Application\n    put:\n      description: This endpoint updates an application\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: application id\n        in: path\n        name: appID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Application'\n        description: Application Details\n        required: true\n        x-originalParamName: application\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Application'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Update an application\n      tags:\n      - Application\n  /applications/{appID}/endpoints:\n    get:\n      description: This endpoint fetches an application's endpoints\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: application id\n        in: path\n        name: appID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      items:\n                        $ref: '#/components/schemas/datastore.Endpoint'\n                      type: array\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get application endpoints\n      tags:\n      - Application Endpoints\n    post:\n      description: This endpoint creates an application endpoint\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: application id\n        in: path\n        name: appID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Endpoint'\n        description: Endpoint Details\n        required: true\n        x-originalParamName: endpoint\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Endpoint'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Create an application endpoint\n      tags:\n      - Application Endpoints\n  /applications/{appID}/endpoints/{endpointID}:\n    delete:\n      description: This endpoint deletes an application endpoint\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: application id\n        in: path\n        name: appID\n        required: true\n        schema:\n          type: string\n      - description: endpoint id\n        in: path\n        name: endpointID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Delete application endpoint\n      tags:\n      - Application Endpoints\n    get:\n      description: This endpoint fetches an application endpoint\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: application id\n        in: path\n        name: appID\n        required: true\n        schema:\n          type: string\n      - description: endpoint id\n        in: path\n        name: endpointID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Endpoint'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get application endpoint\n      tags:\n      - Application Endpoints\n    put:\n      description: This endpoint updates an application endpoint\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: application id\n        in: path\n        name: appID\n        required: true\n        schema:\n          type: string\n      - description: endpoint id\n        in: path\n        name: endpointID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Endpoint'\n        description: Endpoint Details\n        required: true\n        x-originalParamName: endpoint\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Endpoint'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Update an application endpoint\n      tags:\n      - Application Endpoints\n  /auth/login:\n    post:\n      description: This endpoint logs in a user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.LoginUser'\n        description: User Details\n        required: true\n        x-originalParamName: user\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/models.LoginUserResponse'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      summary: Login a user\n      tags:\n      - User\n  /auth/logout:\n    post:\n      description: This endpoint logs out a user\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Logs out a user\n      tags:\n      - User\n  /auth/token/refresh:\n    post:\n      description: This endpoint refreshes an access token\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Token'\n        description: Token Details\n        required: true\n        x-originalParamName: token\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/models.Token'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      summary: Refresh an access token\n      tags:\n      - User\n  /configuration:\n    get:\n      description: This endpoint fetches configuration\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.pagedResponse'\n                      - properties:\n                          content:\n                            items:\n                              $ref: '#/components/schemas/models.ConfigurationResponse'\n                            type: array\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Fetch configuration\n      tags:\n      - Source\n    post:\n      description: This endpoint creates a configuration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Configuration'\n        description: Configuration Details\n        required: true\n        x-originalParamName: application\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/models.ConfigurationResponse'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Create a configuration\n      tags:\n      - Application\n  /eventdeliveries:\n    get:\n      description: This endpoint fetch event deliveries.\n      parameters:\n      - description: application id\n        in: query\n        name: appId\n        schema:\n          type: string\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: event id\n        in: query\n        name: eventId\n        schema:\n          type: string\n      - description: start date\n        in: query\n        name: startDate\n        schema:\n          type: string\n      - description: end date\n        in: query\n        name: endDate\n        schema:\n          type: string\n      - description: results per page\n        in: query\n        name: perPage\n        schema:\n          type: string\n      - description: page number\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: sort order\n        in: query\n        name: sort\n        schema:\n          type: string\n      - description: status\n        in: query\n        name: status\n        schema:\n          items:\n            type: string\n          type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.pagedResponse'\n                      - properties:\n                          content:\n                            items:\n                              allOf:\n                              - $ref: '#/components/schemas/datastore.EventDelivery'\n                              - properties:\n                                  data:\n                                    $ref: '#/components/schemas/server.Stub'\n                                type: object\n                            type: array\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get event deliveries\n      tags:\n      - EventDelivery\n  /eventdeliveries/{eventDeliveryID}:\n    get:\n      description: This endpoint fetches an event delivery.\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: event delivery id\n        in: path\n        name: eventDeliveryID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/datastore.Event'\n                      - properties:\n                          data:\n                            $ref: '#/components/schemas/server.Stub'\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get event delivery\n      tags:\n      - EventDelivery\n  /eventdeliveries/{eventDeliveryID}/resend:\n    put:\n      description: This endpoint resends an app event\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: event delivery id\n        in: path\n        name: eventDeliveryID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/datastore.Event'\n                      - properties:\n                          data:\n                            $ref: '#/components/schemas/server.Stub'\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Resend an app event\n      tags:\n      - EventDelivery\n  /eventdeliveries/batchretry:\n    post:\n      description: This endpoint resends multiple app events\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n              - $ref: '#/components/schemas/server.Stub'\n              - properties:\n                  ids:\n                    items:\n                      type: string\n                    type: array\n                type: object\n        description: event delivery ids\n        required: true\n        x-originalParamName: ids\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Batch Resend app events\n      tags:\n      - EventDelivery\n  /eventdeliveries/countbatchretryevents:\n    get:\n      description: This endpoint counts app events that will be affected by a batch\n        retry operation\n      parameters:\n      - description: application id\n        in: query\n        name: appId\n        schema:\n          type: string\n      - description: group Id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: start date\n        in: query\n        name: startDate\n        schema:\n          type: string\n      - description: end date\n        in: query\n        name: endDate\n        schema:\n          type: string\n      - description: results per page\n        in: query\n        name: perPage\n        schema:\n          type: string\n      - description: page number\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: sort order\n        in: query\n        name: sort\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.Stub'\n                      - properties:\n                          num:\n                            type: integer\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Count affected eventDeliveries\n      tags:\n      - EventDelivery\n  /eventdeliveries/forceresend:\n    post:\n      description: This endpoint force resends multiple app events\n      parameters:\n      - description: group Id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n              - $ref: '#/components/schemas/server.Stub'\n              - properties:\n                  ids:\n                    items:\n                      type: string\n                    type: array\n                type: object\n        description: event delivery ids\n        required: true\n        x-originalParamName: ids\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Force Resend app events\n      tags:\n      - EventDelivery\n  /events:\n    get:\n      description: This endpoint fetches app events with pagination\n      parameters:\n      - description: application id\n        in: query\n        name: appId\n        schema:\n          type: string\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: start date\n        in: query\n        name: startDate\n        schema:\n          type: string\n      - description: end date\n        in: query\n        name: endDate\n        schema:\n          type: string\n      - description: results per page\n        in: query\n        name: perPage\n        schema:\n          type: string\n      - description: page number\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: sort order\n        in: query\n        name: sort\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.pagedResponse'\n                      - properties:\n                          content:\n                            items:\n                              allOf:\n                              - $ref: '#/components/schemas/datastore.Event'\n                              - properties:\n                                  data:\n                                    $ref: '#/components/schemas/server.Stub'\n                                type: object\n                            type: array\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get app events with pagination\n      tags:\n      - Events\n    post:\n      description: This endpoint creates an app event\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Event'\n        description: Event Details\n        required: true\n        x-originalParamName: event\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/datastore.Event'\n                      - properties:\n                          data:\n                            $ref: '#/components/schemas/server.Stub'\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Create app event\n      tags:\n      - Events\n  /events/{eventID}:\n    get:\n      description: This endpoint fetches an app event\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: event id\n        in: path\n        name: eventID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/datastore.Event'\n                      - properties:\n                          data:\n                            $ref: '#/components/schemas/server.Stub'\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get app event\n      tags:\n      - Events\n  /events/{eventID}/eventdeliveries/{eventDeliveryID}/deliveryattempts:\n    get:\n      description: This endpoint fetches an app message's delivery attempts\n      parameters:\n      - description: event id\n        in: path\n        name: eventID\n        required: true\n        schema:\n          type: string\n      - description: event delivery id\n        in: path\n        name: eventDeliveryID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      items:\n                        $ref: '#/components/schemas/datastore.DeliveryAttempt'\n                      type: array\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get delivery attempts\n      tags:\n      - DeliveryAttempts\n  /events/{eventID}/eventdeliveries/{eventDeliveryID}/deliveryattempts/{deliveryAttemptID}:\n    get:\n      description: This endpoint fetches an app event delivery attempt\n      parameters:\n      - description: event id\n        in: path\n        name: eventID\n        required: true\n        schema:\n          type: string\n      - description: event delivery id\n        in: path\n        name: eventDeliveryID\n        required: true\n        schema:\n          type: string\n      - description: delivery attempt id\n        in: path\n        name: deliveryAttemptID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.DeliveryAttempt'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get delivery attempt\n      tags:\n      - DeliveryAttempts\n  /events/{eventID}/replay:\n    put:\n      description: This endpoint replays an app event\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: event id\n        in: path\n        name: eventID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/datastore.Event'\n                      - properties:\n                          data:\n                            $ref: '#/components/schemas/server.Stub'\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Replay app event\n      tags:\n      - Events\n  /groups:\n    get:\n      description: This endpoint fetches groups\n      parameters:\n      - description: group name\n        in: query\n        name: name\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      items:\n                        $ref: '#/components/schemas/datastore.Group'\n                      type: array\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get groups\n      tags:\n      - Group\n  /groups/{groupID}:\n    delete:\n      description: This endpoint deletes a group using its id\n      parameters:\n      - description: group id\n        in: path\n        name: groupID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Delete a group\n      tags:\n      - Group\n    get:\n      description: This endpoint fetches a group by its id\n      parameters:\n      - description: group id\n        in: path\n        name: groupID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Group'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get a group\n      tags:\n      - Group\n    put:\n      description: This endpoint updates a group\n      parameters:\n      - description: group id\n        in: path\n        name: groupID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Group'\n        description: Group Details\n        required: true\n        x-originalParamName: group\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Group'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Update a group\n      tags:\n      - Group\n  /security/applications/{appID}/keys:\n    post:\n      description: This endpoint creates an api key that will be used by app portal\n      parameters:\n      - description: application ID\n        in: path\n        name: appID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/models.PortalAPIKeyResponse'\n                  type: object\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Create an api key for app portal (API)\n      tags:\n      - APIKey\n  /sources:\n    get:\n      description: This endpoint fetches multiple sources\n      parameters:\n      - description: results per page\n        in: query\n        name: perPage\n        schema:\n          type: string\n      - description: page number\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: sort order\n        in: query\n        name: sort\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.pagedResponse'\n                      - properties:\n                          content:\n                            items:\n                              $ref: '#/components/schemas/models.SourceResponse'\n                            type: array\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Fetch multiple sources\n      tags:\n      - Source\n    post:\n      description: This endpoint creates a source\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Source'\n        description: Source Details\n        required: true\n        x-originalParamName: source\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/models.SourceResponse'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Create a source\n      tags:\n      - Source\n  /sources/{sourceID}:\n    delete:\n      description: This endpoint deletes a source\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: source id\n        in: path\n        name: sourceID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Delete source\n      tags:\n      - Source\n    get:\n      description: This endpoint fetches a source by its id\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: source id\n        in: path\n        name: sourceID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/models.SourceResponse'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get a source\n      tags:\n      - Source\n    put:\n      description: This endpoint updates a source\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: source id\n        in: path\n        name: sourceID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Source'\n        description: Source Details\n        required: true\n        x-originalParamName: source\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/models.SourceResponse'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Update a source\n      tags:\n      - Source\n  /subscriptions:\n    get:\n      description: This endpoint fetches all the subscriptions\n      parameters:\n      - description: results per page\n        in: query\n        name: perPage\n        schema:\n          type: string\n      - description: page number\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: sort order\n        in: query\n        name: sort\n        schema:\n          type: string\n      - description: subscription title\n        in: query\n        name: q\n        schema:\n          type: string\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.pagedResponse'\n                      - properties:\n                          content:\n                            items:\n                              $ref: '#/components/schemas/datastore.Subscription'\n                            type: array\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get all subscriptions\n      tags:\n      - Subscriptions\n    post:\n      description: This endpoint creates a subscriptions\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.pagedResponse'\n                      - properties:\n                          content:\n                            items:\n                              $ref: '#/components/schemas/datastore.Subscription'\n                            type: array\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Creates a subscription\n      tags:\n      - Subscriptions\n  /subscriptions/{subscriptionID}:\n    delete:\n      description: This endpoint deletes a subscription\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: subscription id\n        in: path\n        name: subscriptionID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Delete subscription\n      tags:\n      - Application\n    get:\n      description: This endpoint fetches an Subscription by it's id\n      parameters:\n      - description: group id\n        in: query\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - description: application id\n        in: path\n        name: subscriptionID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Subscription'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Gets a subscription\n      tags:\n      - Subscription\n    put:\n      description: This endpoint updates a subscription\n      parameters:\n      - description: subscription id\n        in: path\n        name: subscriptionID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Subscription'\n        description: Subscription Details\n        required: true\n        x-originalParamName: subscription\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Subscription'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Update a subscription\n      tags:\n      - Subscription\n  /subscriptions/{subscriptionID}/toggle_status:\n    put:\n      description: This endpoint updates a subscription\n      parameters:\n      - description: subscription id\n        in: path\n        name: subscriptionID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Subscription'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Toggles a subscription's status from active \u003c-\u003e inactive\n      tags:\n      - Subscription\n  /ui/organisations:\n    get:\n      description: This endpoint fetches multiple organisations\n      parameters:\n      - description: results per page\n        in: query\n        name: perPage\n        schema:\n          type: string\n      - description: page number\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: sort order\n        in: query\n        name: sort\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.pagedResponse'\n                      - properties:\n                          content:\n                            items:\n                              $ref: '#/components/schemas/datastore.Organisation'\n                            type: array\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get organisations\n      tags:\n      - Organisation\n    post:\n      description: This endpoint creates an organisation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Organisation'\n        description: Organisation Details\n        required: true\n        x-originalParamName: organisation\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Organisation'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Create an organisation\n      tags:\n      - Organisation\n  /ui/organisations/{orgID}:\n    delete:\n      description: This endpoint deletes an organisation\n      parameters:\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Delete organisation\n      tags:\n      - Organisation\n    get:\n      description: This endpoint fetches an organisation by its id\n      parameters:\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Organisation'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get an organisation\n      tags:\n      - Organisation\n    put:\n      description: This endpoint updates an organisation\n      parameters:\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Organisation'\n        description: Organisation Details\n        required: true\n        x-originalParamName: organisation\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Organisation'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Update an organisation\n      tags:\n      - Organisation\n  /ui/organisations/{orgID}/groups:\n    post:\n      description: This endpoint creates a group\n      parameters:\n      - description: Organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.Group'\n        description: Group Details\n        required: true\n        x-originalParamName: group\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Group'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Create a group\n      tags:\n      - Group\n  /ui/organisations/{orgID}/invites:\n    post:\n      description: This endpoint invites a user to join an organisation\n      parameters:\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.OrganisationInvite'\n        description: Organisation Invite Details\n        required: true\n        x-originalParamName: invite\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Invite a user to join an organisation\n      tags:\n      - Organisation\n  /ui/organisations/{orgID}/invites/{inviteID}/cancel:\n    post:\n      description: This endpoint cancels an organization invite\n      parameters:\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      - description: invite id\n        in: path\n        name: inviteID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.OrganisationInvite'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: cancel organization invite\n      tags:\n      - Organisation\n  /ui/organisations/{orgID}/invites/{inviteID}/resend:\n    post:\n      description: This endpoint resends the organization invite to a user\n      parameters:\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      - description: invite id\n        in: path\n        name: inviteID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: resend organization invite\n      tags:\n      - Organisation\n  /ui/organisations/{orgID}/invites/pending:\n    get:\n      description: This endpoint fetches pending organisation invites\n      parameters:\n      - description: results per page\n        in: query\n        name: perPage\n        schema:\n          type: string\n      - description: page number\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: sort order\n        in: query\n        name: sort\n        schema:\n          type: string\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Fetch pending organisation invites\n      tags:\n      - Organisation\n  /ui/organisations/{orgID}/members:\n    get:\n      description: This endpoint fetches an organisation's members\n      parameters:\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      - description: results per page\n        in: query\n        name: perPage\n        schema:\n          type: string\n      - description: page number\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: sort order\n        in: query\n        name: sort\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.pagedResponse'\n                      - properties:\n                          content:\n                            items:\n                              $ref: '#/components/schemas/datastore.OrganisationMember'\n                            type: array\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get organisation members\n      tags:\n      - Organisation\n  /ui/organisations/{orgID}/members/{memberID}:\n    delete:\n      description: This endpoint deletes an organisation's member\n      parameters:\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      - description: organisation member id\n        in: path\n        name: memberID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Delete an organisation's member\n      tags:\n      - Organisation\n    get:\n      description: This endpoint fetches an organisation's member\n      parameters:\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      - description: organisation member id\n        in: path\n        name: memberID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.OrganisationMember'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get organisation member\n      tags:\n      - Organisation\n    put:\n      description: This endpoint updates an organisation's member\n      parameters:\n      - description: organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      - description: organisation member id\n        in: path\n        name: memberID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.UpdateOrganisationMember'\n        description: Organisation member Details\n        required: true\n        x-originalParamName: organisation_member\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.Organisation'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Update an organisation's member\n      tags:\n      - Organisation\n  /ui/organisations/{orgID}/security/keys:\n    get:\n      description: This endpoint fetches multiple api keys\n      parameters:\n      - description: Organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      - description: results per page\n        in: query\n        name: perPage\n        schema:\n          type: string\n      - description: page number\n        in: query\n        name: page\n        schema:\n          type: string\n      - description: sort order\n        in: query\n        name: sort\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      allOf:\n                      - $ref: '#/components/schemas/server.pagedResponse'\n                      - properties:\n                          content:\n                            items:\n                              $ref: '#/components/schemas/datastore.APIKey'\n                            type: array\n                        type: object\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Fetch multiple api keys\n      tags:\n      - APIKey\n    post:\n      description: This endpoint creates an api key that will be used by the native\n        auth realm\n      parameters:\n      - description: Organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.APIKey'\n        description: API Key\n        required: true\n        x-originalParamName: apiKey\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/models.APIKeyResponse'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Create an api key\n      tags:\n      - APIKey\n  /ui/organisations/{orgID}/security/keys/{keyID}:\n    get:\n      description: This endpoint fetches an api key by its id\n      parameters:\n      - description: Organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      - description: API Key id\n        in: path\n        name: keyID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.APIKey'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Get api key by id\n      tags:\n      - APIKey\n    put:\n      description: This endpoint updates an api key\n      parameters:\n      - description: Organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      - description: API Key id\n        in: path\n        name: keyID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.APIKey'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: update api key\n      tags:\n      - APIKey\n  /ui/organisations/{orgID}/security/keys/{keyID}/revoke:\n    put:\n      description: This endpoint revokes an api key\n      parameters:\n      - description: Organisation id\n        in: path\n        name: orgID\n        required: true\n        schema:\n          type: string\n      - description: API Key id\n        in: path\n        name: keyID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Revoke API Key\n      tags:\n      - APIKey\n  /ui/organisations/process_invite:\n    post:\n      description: This endpoint process a user's response to an organisation invite\n      parameters:\n      - description: invite token\n        in: query\n        name: token\n        required: true\n        schema:\n          type: string\n      - description: email\n        in: query\n        name: accepted\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.User'\n        description: User Details\n        x-originalParamName: user\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Accept or decline an organisation invite\n      tags:\n      - Organisation\n  /users/{userID}/password:\n    put:\n      description: This endpoint updates a user's password\n      parameters:\n      - description: user id\n        in: path\n        name: userID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.UpdatePassword'\n        description: Password Details\n        required: true\n        x-originalParamName: group\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.User'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Updates a user's password\n      tags:\n      - User\n  /users/{userID}/profile:\n    get:\n      description: This endpoint fetches a user\n      parameters:\n      - description: user id\n        in: path\n        name: userID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.User'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Gets a user\n      tags:\n      - User\n    put:\n      description: This endpoint updates a user\n      parameters:\n      - description: user id\n        in: path\n        name: userID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.UpdateUser'\n        description: User Details\n        required: true\n        x-originalParamName: group\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.User'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Updates a user\n      tags:\n      - User\n  /users/forgot-password:\n    post:\n      description: This endpoint generates a password reset token\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.ForgotPassword'\n        description: Forgot Password Details\n        required: true\n        x-originalParamName: email\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.User'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      summary: Send password reset token\n      tags:\n      - User\n  /users/reset-password:\n    post:\n      description: This endpoint resets a users password\n      parameters:\n      - description: reset token\n        in: query\n        name: token\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/models.ResetPassword'\n        description: Reset Password Details\n        required: true\n        x-originalParamName: password\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.User'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      summary: Reset user password\n      tags:\n      - User\n  /users/token:\n    get:\n      description: This endpoint finds a user by an invite token\n      parameters:\n      - description: invite token\n        in: query\n        name: token\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/datastore.User'\n                  type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                - $ref: '#/components/schemas/server.serverResponse'\n                - properties:\n                    data:\n                      $ref: '#/components/schemas/server.Stub'\n                  type: object\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Find user by invite token\n      tags:\n      - Organisation\nservers:\n- url: https://cloud.staging.getconvoy.io/api/v1\ntags:\n- description: Application related APIs\n  name: Application\n- description: Endpoint related APIs\n  name: Application Endpoints\n- description: Event related APIs\n  name: Events\n- description: API Key related APIs\n  name: APIKey\n- description: EventDelivery related APIs\n  name: EventDelivery\n- description: Delivery Attempt related APIs\n  name: DeliveryAttempts\n- description: Group related APIs\n  name: Group\n- description: Organisation related APIs\n  name: Organisation\n",
			"canonicalURL": "/github.com/frain-dev/convoy@109517428180fe18f5ec923fa8f79c4edb58fc08/-/blob/docs/v3/openapi3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/frain-dev/convoy/blob/109517428180fe18f5ec923fa8f79c4edb58fc08/docs/v3/openapi3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/eventdeliveries/batchretry\": post: responses: 200: contents: application/json: generate schema: allOf: merge properties: try to merge conflicting property schemas: schema type mismatch: object and array"
}