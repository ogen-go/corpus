{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/otuskotlin/202105-otuskotlin-marketplace"
		},
		"file": {
			"name": "marketplace.api-spec.yaml",
			"size": 0,
			"path": "specs/marketplace.api-spec.yaml",
			"byteSize": 20059,
			"content": "openapi: 3.0.1\ninfo:\n  title: Marketplace\n  description: 'Marketplace - учебный проект курса \"Backend разработка на Kotlin\"'\n  license:\n    name: MIT open source license\n    url: https://github.com/otuskotlin/202105-otuskotlin-marketplace/blob/main/LICENSE\n  version: 0.0.1\nservers:\n  - url: https://localhost/\ntags:\n  - name: ad\n    description: CRUDS для объявлений\n  - name: offers\n    description: Поиск встречных предложений для объявления\npaths:\n  /ad/init:\n    post:\n      tags:\n        - ad\n      summary: Получить статус при инициализации\n      operationId: initAd\n      requestBody:\n        description: Объект запроса для инициализации при старте приложения\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InitAdRequest'\n        required: true\n      responses:\n        200:\n          description: all responses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InitAdResponse'\n  /ad/create:\n    post:\n      tags:\n        - ad\n      summary: Создать новое объявление\n      operationId: createAd\n      requestBody:\n        description: Объект запроса для создания нового объявления\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAdRequest'\n        required: true\n      responses:\n        200:\n          description: all responses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAdResponse'\n  /ad/read:\n    post:\n      tags:\n        - ad\n      summary: Получить информацию об объявлении\n      operationId: readAd\n      requestBody:\n        description: Объект запроса для получения информации об объявлении\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReadAdRequest'\n        required: true\n      responses:\n        200:\n          description: all responses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadAdResponse'\n  /ad/update:\n    post:\n      tags:\n        - ad\n      summary: Обновить объявление\n      operationId: updateAd\n      requestBody:\n        description: Объект запроса для обновления объявления\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAdRequest'\n        required: true\n      responses:\n        200:\n          description: all responses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAdResponse'\n  /ad/delete:\n    post:\n      tags:\n        - ad\n      summary: Удалить объявление\n      operationId: deleteAd\n      requestBody:\n        description: Объект запроса для удаления объявления\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteAdRequest'\n        required: true\n      responses:\n        200:\n          description: all responses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAdResponse'\n  /ad/search:\n    post:\n      tags:\n        - ad\n      summary: Поиск объявлений\n      operationId: searchAd\n      requestBody:\n        description: Объект запроса для поиска объявлений\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchAdRequest'\n        required: true\n      responses:\n        200:\n          description: all responses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchAdResponse'\n  /ad/offers:\n    post:\n      tags:\n        - offers\n      summary: Поиск предложений для объявления\n      operationId: offersAd\n      requestBody:\n        description: Объект запроса для поиска предложений для объявления\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OffersAdRequest'\n        required: true\n      responses:\n        200:\n          description: all responses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OffersAdResponse'\ncomponents:\n  schemas:\n\n    BaseMessage:\n      type: object\n      description: Базовый класс как для запросов, так и для ответов\n      properties:\n        messageType:\n          type: string\n          title: Дискриминатор\n          description: Дискриминатор, содержащий тип класса сообщения и использующийся для десериализации\n      discriminator:\n        propertyName: messageType\n\n    BaseRequest:\n      description: Базовый класс для всех запросов\n      allOf:\n        # - $ref: '#/components/schemas/BaseMessage'\n        - type: object\n          properties:\n            requestId:\n              type: string\n\n    BaseResponse:\n      description: Базовый класс для всех ответов\n      allOf:\n        # - $ref: '#/components/schemas/BaseMessage'\n        - type: object\n          properties:\n            requestId:\n              type: string\n            result:\n              type: string\n              enum:\n                - success\n                - error\n            errors:\n              type: array\n              items:\n                $ref: '#/components/schemas/RequestError'\n\n    RequestError:\n      type: object\n      description: Описание ошибки обработки запроса\n      properties:\n        message:\n          type: string\n        field:\n          type: string\n\n    AdVisibility:\n      type: string\n      description: 'Тип видимости объявления. Возможные значения: видит только владелец, только зарегистрированный в системе пользователь, видимо всем'\n      enum:\n        - ownerOnly\n        - registeredOnly\n        - public\n\n    AdDealSide:\n      type: string\n      description: 'Указание на сторону сделки объявления: предложение или потребность'\n      enum:\n        - demand\n        - proposal\n\n    CreateableAd:\n      type: object\n      description: Структура с данными об объявлении для запроса о созадии\n      properties:\n        title:\n          type: string\n          title: Заголовок объявления\n          description: Краткое название объявления\n        description:\n          type: string\n          title: Описание объявления\n          description: Тело объявления с описанием особенностей выставляемой заявки\n        ownerId:\n          type: string\n          title: Идентификатор владельца объявления\n          description: Идентификатор пользователя, который создал и управляет объявлением\n        visibility:\n          $ref: '#/components/schemas/AdVisibility'\n        dealSide:\n          $ref: '#/components/schemas/AdDealSide'\n        product:\n          $ref: '#/components/schemas/AdProduct'\n\n    AdProduct:\n      type: object\n      description: 'Описание продукта (товара или услуги) объявления'\n      properties:\n        productType:\n          type: string\n          description: Идентификатор типа продукта для дискриминатора\n      discriminator:\n        propertyName: productType\n\n    UpdateableAd:\n      description: Структура для данных об объявлении в запросе на обновление\n      allOf:\n        - $ref: '#/components/schemas/CreateableAd'\n        - type: object\n          properties:\n            id:\n              type: string\n              description: Идентификатор объявления\n\n    ResponseAd:\n      description: Структура, описывающая объявление в ответе\n      allOf:\n        - $ref: '#/components/schemas/UpdateableAd'\n        - type: object\n          properties:\n            permissions:\n              type: array\n              uniqueItems: true\n              items:\n                $ref: '#/components/schemas/AdPermissions'\n\n    AdPermissions:\n      type: string\n      description: Доступы к операциям над объявлением\n      enum:\n        - read\n        - update\n        - delete\n        - contact\n\n    BaseDebugRequest:\n      type: object\n      description: Структура с описанием отладочных параметров запроса\n      properties:\n        mode:\n          type: string\n          default: prod\n          enum:\n            - prod\n            - test\n            - stub\n        stubCase:\n          type: string\n          enum:\n            - success\n            - database_error\n\n    BasePaginatedRequest:\n      type: object\n      description: Структура с описанием запрашиваемой страницы в запросах списков\n      properties:\n        size:\n          type: integer\n          description: Размер запрашиваемой страницы\n          format: int32\n        lastId:\n          type: string\n          description: Идентификатор последнего объекта предыдущей страницы\n\n    BasePaginatedResponse:\n      type: object\n      description: Структура с описанием страницы в ответе\n      properties:\n        size:\n          type: integer\n          description: Размер запрашиваемой страницы\n          format: int32\n        lastId:\n          type: string\n          description: Идентификатор последнего объекта предыдущей страницы\n        position:\n          type: string\n          enum:\n            - first\n            - middle\n            - last\n\n    InitAdRequest:\n      description: Структура для запроса начального состояния при старте вэб-клиента\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseRequest'\n\n    InitAdResponse:\n      description: Структура для ответа с начальным состоянием при старте вэб-клиента\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n\n\n    CreateAdRequest:\n      description: Структура для запроса создания нового объявления\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseRequest'\n        - type: object\n          properties:\n            createAd:\n              $ref: '#/components/schemas/CreateableAd'\n            debug:\n              allOf:\n                - $ref: '#/components/schemas/BaseDebugRequest'\n                - type: object\n                  properties:\n                    stub:\n                      type: string\n                      enum:\n                        - success\n                        - emptyTitle\n                        - databaseError\n\n    CreateAdResponse:\n      description: Структура для ответа на запрос о создании объявления\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            createdAd:\n              $ref: '#/components/schemas/ResponseAd'\n\n\n\n    ReadAdRequest:\n      description: Структура для получения объявления\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseRequest'\n        - type: object\n          properties:\n            readAdId:\n              type: string\n            debug:\n              allOf:\n                - $ref: '#/components/schemas/BaseDebugRequest'\n                - type: object\n                  properties:\n                    stub:\n                      type: string\n                      enum:\n                        - success\n                        - emptyId\n                        - databaseError\n\n    ReadAdResponse:\n      description: Структура для ответа на запрос с информацией об объявлении\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            readAd:\n              $ref: '#/components/schemas/ResponseAd'\n\n    UpdateAdRequest:\n      description: Структура для запроса обновления существующего объявления\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseRequest'\n        - type: object\n          properties:\n            createAd:\n              $ref: '#/components/schemas/UpdateableAd'\n            debug:\n              allOf:\n                - $ref: '#/components/schemas/BaseDebugRequest'\n                - type: object\n                  properties:\n                    stub:\n                      type: string\n                      enum:\n                        - success\n                        - emptyTitle\n                        - databaseError\n\n    UpdateAdResponse:\n      description: Структура для ответа на запрос с информацией об объявлении\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            updatedAd:\n              $ref: '#/components/schemas/ResponseAd'\n\n    DeleteAdRequest:\n      description: Структура для запроса удаления объявления\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseRequest'\n        - type: object\n          properties:\n            deleteAdId:\n              type: string\n            debug:\n              allOf:\n                - $ref: '#/components/schemas/BaseDebugRequest'\n                - type: object\n                  properties:\n                    stub:\n                      type: string\n                      enum:\n                        - success\n                        - emptyId\n                        - databaseError\n\n    DeleteAdResponse:\n      description: Структура для ответа на запрос об удалении объявления\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            deletedAd:\n              $ref: '#/components/schemas/ResponseAd'\n\n    SearchAdRequest:\n      description: Структура для запроса поиска объявлений\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseRequest'\n        - type: object\n          properties:\n            page:\n              $ref: '#/components/schemas/BasePaginatedRequest'\n            filter:\n              $ref: '#/components/schemas/SearchAdFilter'\n            debug:\n              $ref: '#/components/schemas/BaseDebugRequest'\n\n    SearchAdFilter:\n      description: Структура для критериев поиска в БД\n      type: object\n      properties:\n        dealSide:\n          $ref: '#/components/schemas/AdDealSide'\n\n    SearchAdResponse:\n      description: Структура для ответа на запрос поиска объявлений\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            page:\n              $ref: '#/components/schemas/BasePaginatedResponse'\n            foundAds:\n              type: array\n              items:\n                $ref: '#/components/schemas/ResponseAd'\n\n    OffersAdRequest:\n      description: Структура для запроса поиска предложений для объявления\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseRequest'\n        - type: object\n          properties:\n            page:\n              $ref: '#/components/schemas/BasePaginatedRequest'\n            offersAdId:\n              type: string\n            debug:\n              allOf:\n                - $ref: '#/components/schemas/BaseDebugRequest'\n                - type: object\n                  properties:\n                    stub:\n                      type: string\n                      enum:\n                        - success\n                        - emptyId\n                        - databaseError\n\n    OffersAdResponse:\n      description: Структура для ответа на запрос поиска предложений для объявления\n      allOf:\n        - $ref: '#/components/schemas/BaseMessage'\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            page:\n              $ref: '#/components/schemas/BasePaginatedResponse'\n            offeredAds:\n              type: array\n              items:\n                $ref: '#/components/schemas/ResponseAd'\n\n\n    # Типы продуктов\n    AdProductBolt:\n      description: Описание продукта Болт\n      allOf:\n        - $ref: '#/components/schemas/AdProduct'\n        - type: object\n          properties:\n            lengh:\n              description: Длина болта в миллиметрах\n              type: number\n              format: double\n            diameter:\n              description: Диаметр болта в миллиметрах\n              type: number\n              format: double\n            threadPitch:\n              description: Размер резьбы\n              type: number\n              format: double\n    # Типы продуктов\n    MpLogModel:\n      description: Модель логирования\n      allOf:\n        - type: object\n          properties:\n            requestAdId:\n              type: string\n            requestAd:\n              $ref: '#/components/schemas/ResponseAd'\n            responseAd:\n              $ref: '#/components/schemas/ResponseAd'\n            responseAds:\n              type: array\n              items:\n                $ref: '#/components/schemas/ResponseAd'\n\n    CommonLogModel:\n      description: Модель логирования\n      allOf:\n        - type: object\n          properties:\n            messageId:\n              type: string\n            messageTime:\n              type: string\n            logId:\n              type: string\n            source:\n              type: string\n            marketplace:\n              $ref: '#/components/schemas/MpLogModel'\n            errors:\n              type: array\n              items:\n                $ref: '#/components/schemas/RequestError'\n",
			"canonicalURL": "/github.com/otuskotlin/202105-otuskotlin-marketplace@f7b000e861fb35b5e0a641782fb7fe746814da31/-/blob/specs/marketplace.api-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/otuskotlin/202105-otuskotlin-marketplace/blob/f7b000e861fb35b5e0a641782fb7fe746814da31/specs/marketplace.api-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/ad/search\": post: requestBody: contents: application/json: generate schema: allOf: schema type mismatch: object and "
}