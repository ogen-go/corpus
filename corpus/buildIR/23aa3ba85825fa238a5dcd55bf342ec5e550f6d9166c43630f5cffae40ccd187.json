{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dkackman/chia-api"
		},
		"file": {
			"name": "wallet.yaml",
			"size": 0,
			"path": "src/wallet.yaml",
			"byteSize": 115170,
			"content": "openapi: 3.0.3\ninfo:\n  description: \u003e-\n    The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. \n    These are accessible via HTTPS, WebSockets, or via client SDKs. The ports can be configured in `~/.chia/mainnet/config/config.yaml`. \n    The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication \n    [using mutualTLS](https://github.com/dkackman/chia-api/wiki/Mutual-TLS).\n\n    The wallet uses port 9256 by default.\n  version: 1.6.1\n  title: Chia RPC\n  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf\n  contact:\n    name: Chia Network\n    url: https://www.chia.net/\n    email: hello@chia.net\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: https://localhost:9256\n    description: Wallet RPC\nsecurity:\n  - bearerAuth: []\ncomponents:\n  requestBodies:\n    empty:\n      $ref: \"./requestBodies/empty.yaml#/empty\"\n    fingerprint:\n      $ref: \"./requestBodies/fingerprint.yaml#/fingerprint\"\n    wallet_id:\n      $ref: \"./requestBodies/wallet_id.yaml#/wallet_id\"\n    transaction_id:\n      $ref: \"./requestBodies/transaction_id.yaml#/transaction_id\"\n  responses:\n    empty:\n      $ref: \"./responses/empty.yaml#/empty\"\n    coin_records:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              coin_records:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/coin_record\"\n            allOf:\n              - $ref: \"#/components/schemas/apiResponse\"\n    fingerprint_response:\n      description: OK\n      content:\n        application/json:\n          schema:\n            allOf:\n              - type: object\n                properties:\n                  fingerprint:\n                    type: integer\n                    format: uint32\n              - $ref: \"#/components/schemas/apiResponse\"\n    transaction_record_response:\n      description: OK response with a transaction record and a transaction id.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - type: object\n                properties:\n                  transaction:\n                    $ref: \"#/components/schemas/transaction_record\"\n                  transaction_id:\n                    type: string\n                    format: hex\n              - $ref: \"#/components/schemas/apiResponse\"\n  schemas:\n    amount_with_puzzlehash:\n      $ref: \"./schemas/amount_with_puzzlehash.yaml#/amount_with_puzzlehash\"\n    coin_announcement:\n      $ref: \"./schemas/coin_announcement.yaml#/coin_announcement\"\n    coin_search_options:\n      type: object\n      properties:\n        start_height:\n          type: integer\n          format: uint32\n        end_height:\n          type: integer\n          format: uint32\n        include_spent_coins:\n          type: boolean\n    connection_info:\n      $ref: \"./schemas/connection_info.yaml#/connection_info\"\n    puzzle_announcement:\n      $ref: \"./schemas/puzzle_announcement.yaml#/puzzle_announcement\"\n    cat_info:\n      $ref: \"./schemas/cat_info.yaml#/cat_info\"\n    coin:\n      $ref: \"./schemas/coin.yaml#/coin\"\n    coin_record:\n      $ref: \"./schemas/coin_record.yaml#/coin_record\"\n    farmer_rewards:\n      $ref: \"./schemas/farmer_rewards.yaml#/farmer_rewards\"\n    lineage_proof:\n      $ref: \"./schemas/lineage_proof.yaml#/lineage_proof\"\n    mirror:\n      $ref: \"./schemas/mirror.yaml#/mirror\"\n    mnemonic:\n      $ref: \"./schemas/mnemonic.yaml#/mnemonic\"\n    network_info:\n      $ref: \"./schemas/network_info.yaml#/network_info\"\n    nft_info:\n      $ref: \"./schemas/nft_info.yaml#/nft_info\"\n    pool_state:\n      $ref: \"./schemas/pool_state.yaml#/pool_state\"\n    pool_wallet_info:\n      $ref: \"./schemas/pool_wallet_info.yaml#/pool_wallet_info\"\n    private_key:\n      $ref: \"./schemas/private_key.yaml#/private_key\"\n    singleton_record:\n      $ref: \"./schemas/singleton_record.yaml#/singleton_record\"\n    spend_bundle:\n      $ref: \"./schemas/spend_bundle.yaml#/spend_bundle\"\n    token:\n      $ref: \"./schemas/token.yaml#/token\"\n    trade_record:\n      $ref: \"./schemas/trade_record.yaml#/trade_record\"\n    transaction_input:\n      $ref: \"./schemas/transaction_input.yaml#/transaction_input\"\n    transaction_record:\n      $ref: \"./schemas/transaction_record.yaml#/transaction_record\"\n    transaction_type:\n      $ref: \"./schemas/transaction_type.yaml#/transaction_type\"\n    wallet_balance:\n      $ref: \"./schemas/wallet_balance.yaml#/wallet_balance\"\n    wallet_info:\n      $ref: \"./schemas/wallet_info.yaml#/wallet_info\"\n    wallet_type:\n      $ref: \"./schemas/wallet_type.yaml#/wallet_type\"\n    apiResponse:\n      $ref: \"./schemas/apiResponse.yaml#/apiResponse\"\n  securitySchemes:\n    bearerAuth:\n      $ref: \"./securitySchemes/bearerAuth.yaml#/bearerAuth\"\ntags:\n  - name: Shared\n    description: Methods shared by all services.\n  - name: CAT Wallet\n    description: CATs, trades, and offers.\n  - name: DID Wallet\n    description: Distributed Identity wallet.\n  - name: Key Management\n    description: Methods for managing keys.\n  - name: Pool Wallet\n    description: Pool wallet api.\n  - name: Notifications\n    description: Notifcaiton api.\n  - name: Wallet\n    description: Methods for shared wallet operations.\n  - name: Wallet Management\n    description: Methods for creating and managing wallets.\n  - name: Wallet Node\n    description: The wallet RPC API is exposed, by default, on port 9256 and contains methods for managing wallet, trades, offers and transactions.\n  - name: Data Layer Wallet\n    description: Methods for managing a data layer wallet.\npaths:\n  /create_new_dl:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Initialize the new data layer wallets.\n      description: Initialize the DataLayer Wallet (only one can exist).\n      operationId: create_new_dl\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - root\n              properties:\n                root:\n                  type: string\n                  format: bytes32\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: Response when the new data layer wallet is created.\n                    properties:\n                      transactions:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/transaction_record\"\n                      launcher_id:\n                        type: string\n                        format: hex\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /dl_track_new:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Track the new data layer wallet\n      description: Track the new data layer wallet.\n      operationId: dl_track_new\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - launcher_id\n              properties:\n                launcher_id:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /dl_stop_tracking:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Stop tracking the data layer wallets.\n      description: Stop tracking the data layer wallet.\n      operationId: dl_stop_tracking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - launcher_id\n              properties:\n                launcher_id:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /dl_latest_singleton:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Get the singleton records that contain the specified root.\n      description: Get the singleton records that contain the specified root.\n      operationId: dl_latest_singleton\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - launcher_id\n                - root\n              properties:\n                launcher_id:\n                  type: string\n                  format: bytes32\n                root:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      singleton:\n                        $ref: \"#/components/schemas/lineage_proof\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /dl_singletons_by_root:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Get the singleton records that contain the specified root.\n      description: Get the singleton records that contain the specified root.\n      operationId: dl_singletons_by_root\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - launcher_id\n                - root\n              properties:\n                launcher_id:\n                  type: string\n                  format: bytes32\n                root:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      singleton:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/singleton_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /dl_update_root:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Stop the node.\n      description: Stop the node.\n      operationId: dl_update_root\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - launcher_id\n                - new_root\n              properties:\n                launcher_id:\n                  type: string\n                  format: bytes32\n                new_root:\n                  type: string\n                  format: bytes32\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      tx_record:\n                        $ref: \"#/components/schemas/transaction_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /dl_update_multiple:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Stop the node.\n      description: Stop the node.\n      operationId: dl_update_multiple\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - updates\n                - new_root\n              properties:\n                updates:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - root\n                      - launcher\n                    properties:\n                      root:\n                        type: string\n                        format: bytes32\n                      launcher:\n                        type: string\n                        format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      tx_records:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/transaction_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /dl_history:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Get the singleton record for the latest singleton of a launcher ID.\n      description: Get the singleton record for the latest singleton of a launcher ID.\n      operationId: dl_history\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - launcher_id\n              properties:\n                launcher_id:\n                  type: string\n                  format: bytes32\n                min_generation:\n                  type: integer\n                  format: uint32\n                max_generation:\n                  type: integer\n                  format: uint32\n                num_results:\n                  type: integer\n                  format: uint32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      count:\n                        type: integer\n                      history:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/singleton_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /dl_owned_singletons:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Get all owned singleton records.\n      description: Get all owned singleton records.\n      operationId: dl_owned_singletons\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      history:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/singleton_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /dl_get_mirrors:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Get all of the mirrors for a specific singleton.\n      description: Get all of the mirrors for a specific singleton.\n      operationId: dl_get_mirrors\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - launcher_id\n              properties:\n                launcher_id:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      mirrors:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/mirror\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /dl_new_mirror:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Add a new on chain message for a specific singleton.\n      description: Add a new on chain message for a specific singleton\n      operationId: dl_new_mirror\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - launcher_id\n                - amount\n                - urls\n              properties:\n                launcher_id:\n                  type: string\n                  format: bytes32\n                amount:\n                  type: integer\n                  format: unint64\n                urls:\n                  type: array\n                  items:\n                    type: string\n                    format: bytes32\n                fee:\n                  type: integer\n                  format: unint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      transactions:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/transaction_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /dl_delete_mirror:\n    post:\n      tags:\n        - Data Layer Wallet\n      summary: Remove an existing mirror for a specific singleton.\n      description: Remove an existing mirror for a specific singleton.\n      operationId: dl_delete_mirror\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - coin_id\n              properties:\n                coin_id:\n                  type: string\n                  format: bytes32\n                fee:\n                  type: integer\n                  format: unint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      transactions:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/transaction_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /stop_node:\n    post:\n      tags:\n        - Shared\n      summary: Stop the node.\n      description: Stop the node.\n      operationId: stop_node\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /open_connection:\n    post:\n      tags:\n        - Shared\n      summary: Add a connection to another node.\n      description: Add a connection to another node.\n      operationId: open_connection\n      requestBody:\n        required: true\n        description: the address of the connection\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ip\n                - port\n              properties:\n                ip:\n                  type: string\n                  format: ipaddress\n                port:\n                  type: integer\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /close_connection:\n    post:\n      tags:\n        - Shared\n      summary: Removes a connection.\n      description: Removes a connection.\n      operationId: close_connection\n      requestBody:\n        required: true\n        description: the node id of the connection\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - node_id\n              properties:\n                node_id:\n                  type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /get_connections:\n    post:\n      tags:\n        - Shared\n      summary: Retrieve the list of connections.\n      description: Retrieve the list of connections.\n      operationId: get_connections\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      connections:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/connection_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /healthz:\n    post:\n      tags:\n        - Shared\n      summary: Heartbeat.\n      description: Heartbeat.\n      operationId: healthz\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiResponse\"\n  /get_routes:\n    post:\n      tags:\n        - Shared\n      summary: Retrieve the list of routes exposed by the service.\n      description: Retrieve the list of routes/endpoints exposed by the service.\n      operationId: get_routes\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      routes:\n                        type: array\n                        items:\n                          type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /nft_mint_bulk:\n    post:\n      tags:\n        - NFT Wallet\n      description: Mints NFTs in bulk.\n      summary: Mints NFTs in bulk.\n      operationId: nft_mint_bulk\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - metadata_list\n              properties:\n                metadata_list:\n                  description: A list of dicts containing the metadata for each NFT to be minted\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - uris\n                      - meta_uris\n                    properties:\n                      uris:\n                        type: array\n                        items:\n                          type: string\n                          format: uri\n                      meta_uris:\n                        type: array\n                        items:\n                          type: string\n                          format: uri\n                      license_uris:\n                        type: array\n                        items:\n                          type: string\n                          format: uri\n                      hash:\n                        type: string\n                        format: hex\n                      meta_hash:\n                        type: string\n                        format: hex\n                      license_hash:\n                        type: string\n                        format: hex\n                      edition_number:\n                        type: integer\n                        format: uint64\n                        default: 1\n                      edition_total:\n                        type: integer\n                        format: uint64\n                        default: 1\n                wallet_id:\n                  type: integer\n                  format: uint32\n                royalty_address:\n                  type: string\n                  format: hex\n                royalty_percentage:\n                  type: integer\n                  format: uint16\n                  default: 0\n                target_list:\n                  description: a list of targets for transfering minted NFTs (aka airdrop)\n                  type: array\n                  items:\n                    type: string\n                    format: hex\n                mint_number_start:\n                  description: The starting point for mint number used in intermediate launcher puzzle\n                  type: integer\n                  default: 1\n                mint_total:\n                  description: The total number of NFTs being minted\n                  type: integer\n                xch_coin_list:\n                  description:\n                    For use with bulk minting to provide the coin used for funding the minting spend.\n                    This coin can be one that will be created in the future\n                  type: array\n                  items:\n                    type: string\n                    format: hex\n                xch_change_target:\n                  description:\n                    For use with bulk minting, so we can specify the puzzle hash that the change\n                    from the funding transaction goes to.\n                  type: string\n                  format: hex\n                new_innerpuzhash:\n                  type: string\n                  format: hex\n                new_p2_puzhash:\n                  type: string\n                  format: hex\n                did_coin_dict:\n                  type: object\n                  additionalProperties: true\n                did_lineage_parent_hex:\n                  type: string\n                  format: hex\n                mint_from_did:\n                  type: boolean\n                  default: false\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      spend_bundle:\n                        $ref: \"#/components/schemas/spend_bundle\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /nft_mint_nft:\n    post:\n      tags:\n        - NFT Wallet\n      description: Mints an NFT.\n      summary: Mints an NFT.\n      operationId: nft_mint_nft\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - uris\n                - hash\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                royalty_address:\n                  type: string\n                  format: hex\n                target_address:\n                  type: string\n                  format: hex\n                uris:\n                  type: array\n                  items:\n                    type: string\n                    format: uri\n                meta_uris:\n                  type: array\n                  items:\n                    type: string\n                    format: uri\n                license_uris:\n                  type: array\n                  items:\n                    type: string\n                    format: uri\n                hash:\n                  type: string\n                  format: hex\n                edition_number:\n                  type: integer\n                  format: uint64\n                  default: 1\n                edition_total:\n                  type: integer\n                  format: uint64\n                  default: 1\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n                meta_hash:\n                  type: string\n                  format: hex\n                license_hash:\n                  type: string\n                  format: hex\n                did_id:\n                  type: string\n                royalty_percentage:\n                  type: integer\n                  format: uint16\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      spend_bundle:\n                        $ref: \"#/components/schemas/spend_bundle\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /nft_get_nfts:\n    post:\n      tags:\n        - NFT Wallet\n      summary: Gets NFTs from a wallet.\n      description: Gets NFTs from a wallet.\n      operationId: nft_get_nfts\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                start_index:\n                  type: integer\n                  format: uint32\n                  default: 0\n                num:\n                  type: integer\n                  format: uint32\n                  default: 0\n                ignore_size_limit:\n                  type: boolean\n                  default: false\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      nft_list:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/nft_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /nft_set_nft_did:\n    post:\n      tags:\n        - NFT Wallet\n      summary: Sets the DID of an NFT.\n      description: Sets the DID of an NFT.\n      operationId: nft_set_nft_did\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                did_id:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      spend_bundle:\n                        $ref: \"#/components/schemas/spend_bundle\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /nft_get_by_did:\n    post:\n      tags:\n        - NFT Wallet\n      summary: Gets an NFT wallet by its DID.\n      description: Gets an NFT wallet by its DID.\n      operationId: nft_get_by_did\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - did_id\n              properties:\n                did_id:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /nft_get_wallet_did:\n    post:\n      tags:\n        - NFT Wallet\n      summary: Gets the DID for an NFT wallet.\n      description: Gets the DID for an NFT wallet.\n      operationId: nft_get_wallet_did\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      did_id:\n                        type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /nft_get_wallets_with_dids:\n    post:\n      tags:\n        - NFT Wallet\n      summary: Gets all the wallets with a DID.\n      description: Gets all the wallets with a DID.\n      operationId: nft_get_wallets_with_dids\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      nft_wallets:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            wallet_id:\n                              type: integer\n                              format: uint32\n                            did_id:\n                              type: string\n                            did_wallet_id:\n                              type: integer\n                              format: uint32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /nft_set_nft_status:\n    post:\n      tags:\n        - NFT Wallet\n      summary: Sets the status of an NFT.\n      description: Sets the status of an NFT.\n      operationId: nft_set_nft_status\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - coin_id\n                - in_transaction\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                coin_id:\n                  type: string\n                  format: hex\n                in_transaction:\n                  type: boolean\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /nft_transfer_nft:\n    post:\n      tags:\n        - NFT Wallet\n      summary: Transfers an NFT to another address.\n      description: Transfers an NFT to another address.\n      operationId: nft_transfer_nft\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - target_address\n                - nft_coin_id\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                target_address:\n                  type: string\n                  format: hex\n                nft_coin_id:\n                  type: string\n                  format: hex\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      spend_bundle:\n                        $ref: \"#/components/schemas/spend_bundle\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /nft_calculate_royalties:\n    post:\n      tags:\n        - NFT Wallet\n      summary: Transfers an NFT to another address.\n      description: Transfers an NFT to another address.\n      operationId: nft_calculate_royalties\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                royalty_assets:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      royalty_address:\n                        type: string\n                        format: hex\n                      royalty_percentage:\n                        type: integer\n                fungible_assets:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      amount:\n                        type: integer\n                        format: uint64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: array\n                    items:\n                      type: object\n                      properties:\n                        asset:\n                          type: string\n                          format: hex\n                        address:\n                          type: string\n                          format: hex\n                        wallet_id:\n                          type: integer\n                          format: uint64\n                  - $ref: \"#/components/schemas/apiResponse\"\n\n  /nft_get_info:\n    post:\n      tags:\n        - NFT Wallet\n      summary: Gets info about an NFT.\n      description: Gets info about an NFT.\n      operationId: nft_get_info\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - coin_id\n              properties:\n                coin_id:\n                  type: string\n                  format: hex\n                latest:\n                  type: boolean\n                  default: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      nft_info:\n                        $ref: \"#/components/schemas/nft_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /nft_add_uri:\n    post:\n      tags:\n        - NFT Wallet\n      summary: Adds an Uri to an NFT.\n      description: Adds a Uri to an NFT.\n      operationId: nft_add_uri\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - uri\n                - key\n                - nft_coin_id\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                uri:\n                  type: string\n                  format: uri\n                key:\n                  type: string\n                  enum:\n                    - \"u\" # data uri\n                    - \"mu\" # metadata uri\n                    - \"lu\" # license uri\n                  description: \u003e-\n                    The type of uri:\n                      * u Uri for the NFT data\n                      * mu Uri for NFT metadata\n                      * lu Uri for the NFT license\n                nft_coin_id:\n                  type: string\n                  format: hex\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      spend_bundle:\n                        $ref: \"#/components/schemas/spend_bundle\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /did_create_backup_file:\n    post:\n      tags:\n        - DID Wallet\n      summary: Creates a backup file for the given DID wallet.\n      description: Creates a backup file for the given DID wallet.\n      operationId: did_create_backup_file\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      backup_data:\n                        type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /did_transfer_did:\n    post:\n      tags:\n        - DID Wallet\n      summary: Transfer a DID to another owner.\n      description: Transfer the given DID wallet to another owner.\n      operationId: did_transfer_did\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - inner_address\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                inner_address:\n                  type: string\n                  format: hex\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n                with_recovery_info:\n                  type: boolean\n                  default: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      transaction:\n                        $ref: \"#/components/schemas/transaction_record\"\n                      transaction_id:\n                        type: string\n                        format: hex\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /did_get_information_needed_for_recovery:\n    post:\n      tags:\n        - DID Wallet\n      summary: Retrieves the recovery information needed for the given DID wallet.\n      description: Retrieves the recovery information needed for the given DID wallet.\n      operationId: did_get_information_needed_for_recovery\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      my_did:\n                        type: string\n                      coin_name:\n                        type: string\n                      newpuzhash:\n                        type: string\n                      pubkey:\n                        type: string\n                      backup_dids:\n                        type: array\n                        items:\n                          type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /did_create_attest:\n    post:\n      tags:\n        - DID Wallet\n      summary: Creates an attestment for the given DID wallet.\n      description: Creates an attestment for the given DID wallet.\n      operationId: did_create_attest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - coin_name\n                - pubkey\n                - puzhash\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                coin_name:\n                  type: string\n                  format: hex\n                pubkey:\n                  type: string\n                  format: hex\n                puzhash:\n                  type: string\n                  format: hex\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      message_spend_bundle:\n                        type: string\n                        format: hex\n                      info:\n                        type: array\n                        items: # [string, string uint64]\n                          oneOf:\n                            - type: string\n                              format: hex\n                            - type: string\n                              format: hex\n                            - type: integer\n                              format: uint64\n                          minItems: 3\n                          maxItems: 3\n                      attest_data:\n                        type: string\n                        format: hex\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /did_get_pubkey:\n    post:\n      tags:\n        - DID Wallet\n      summary: Retrieves the public key for the given DID wallet.\n      description: Retrieves the public key for the given DID wallet.\n      operationId: did_get_pubkey\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      pubkey:\n                        type: string\n                        format: hex\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /did_get_current_coin_info:\n    post:\n      tags:\n        - DID Wallet\n      summary: Gets information about the DID wallets current coin.\n      description: Gets information about the DID wallets current coin.\n      operationId: did_get_current_coin_info\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      my_did:\n                        type: string\n                        format: hex\n                      did_parent:\n                        type: string\n                        format: hex\n                      did_innerpuz:\n                        type: string\n                        format: hex\n                      did_amount:\n                        type: integer\n                        format: uint64\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /did_recovery_spend:\n    post:\n      tags:\n        - DID Wallet\n      summary: Spend from the given DID wallet.\n      description: Spend from the given DID wallet.\n      operationId: did_recovery_spend\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - attest_data\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                attest_data:\n                  type: array\n                  items:\n                    type: string\n                pubkey:\n                  type: string\n                  format: hex\n                puzhash:\n                  type: string\n                  format: hex\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      spend_bundle:\n                        $ref: \"#/components/schemas/spend_bundle\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /did_get_recovery_list:\n    post:\n      tags:\n        - DID Wallet\n      summary: Retrieves the recovery list for a given DID wallet.\n      description: Retrieves the recovery list for a given DID wallet.\n      operationId: did_get_recovery_list\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      recover_list:\n                        type: array\n                        items:\n                          type: string\n                          format: hex\n                      num_required:\n                        type: integer\n                        format: uint64\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /did_get_did:\n    post:\n      tags:\n        - DID Wallet\n      summary: Retrieves the distributed identity for a given wallet.\n      description: Retrieves the distributed identity for a given wallet.\n      operationId: did_get_did\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      my_did:\n                        type: string\n                      coin_id:\n                        type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /did_update_recovery_ids:\n    post:\n      tags:\n        - DID Wallet\n      summary: Updates the recovery ids for a DID wallet.\n      description: Updates the recovery ids for a DID wallet.\n      operationId: did_update_recovery_ids\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - new_list\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                new_list:\n                  type: array\n                  items:\n                    type: string\n                    format: hex\n                num_verifications_required:\n                  type: integer\n                  format: uint64\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /did_set_wallet_name:\n    post:\n      tags:\n        - DID Wallet\n      summary: Sets the name of a DID wallet.\n      description: Sets the name of a DID wallet.\n      operationId: did_set_wallet_name\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - name\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                name:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/apiResponse\"\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n  /did_get_wallet_name:\n    post:\n      tags:\n        - DID Wallet\n      summary: Gets the name of a DID wallet.\n      description: Gets the name of a DID wallet.\n      operationId: did_get_wallet_name\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/apiResponse\"\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      name:\n                        type: string\n  /did_update_metadata:\n    post:\n      tags:\n        - DID Wallet\n      summary: Updates the metadata for a DID wallet.\n      description: Updates the metadata for a DID wallet.\n      operationId: did_update_metadata\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                metadata:\n                  type: object\n                  additionalProperties:\n                    type: string\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/apiResponse\"\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      spend_bundle:\n                        $ref: \"#/components/schemas/spend_bundle\"\n  /did_get_metadata:\n    post:\n      tags:\n        - DID Wallet\n      summary: Gets the metadata of a DID wallet.\n      description: Gets the metadata of a DID wallet.\n      operationId: did_get_metadata\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/apiResponse\"\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      metadata:\n                        type: object\n                        additionalProperties:\n                          type: string\n  /take_offer:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Takes an offer.\n      description: Takes an offer.\n      operationId: take_offer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - offer\n              properties:\n                offer:\n                  type: string\n                  format: hex\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n                min_coin_amount:\n                  type: integer\n                  format: uint128\n                  default: 0\n                solver:\n                  type: object\n                  additionalProperties:\n                    type: object\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      trade_record:\n                        $ref: \"#/components/schemas/trade_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_offers_count:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Retrieves the number of offers.\n      description: Retrieves the number of offers.\n      operationId: get_offers_count\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      total:\n                        type: integer\n                      my_offers_count:\n                        type: integer\n                      taken_offers_count:\n                        type: integer\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_cat_list:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Retrieves the list of CATs.\n      description: Retrieves the list of CATs.\n      operationId: get_cat_list\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      cat_list:\n                        type: array\n                        description: Default list of CATs\n                        items:\n                          $ref: \"#/components/schemas/cat_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /cancel_offer:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Cancels an offer.\n      description: Cancels an offer.\n      operationId: cancel_offer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - trade_id\n                - secure\n              properties:\n                trade_id:\n                  type: string\n                  format: hex\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n                secure:\n                  type: boolean\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /cancel_offers:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Cancels multiple offers.\n      description: Cancels multiple offers.\n      operationId: cancel_offers\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - secure\n              properties:\n                batch_fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n                secure:\n                  type: boolean\n                batch_size:\n                  type: integer\n                  format: int32\n                  default: 5\n                cancel_all:\n                  type: boolean\n                  default: false\n                asset_id:\n                  type: string\n                  default: \"xch\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /select_coins:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Returns a set of coins that can be used for generating a new transaction.\n      description: Returns a set of coins that can be used for generating a new transaction.\n      operationId: select_coins\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - amount\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                amount:\n                  type: integer\n                  format: uint64\n                min_coin_amount:\n                  type: integer\n                  format: uint64\n                  default: 0\n                excluded_coins:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/coin\"\n                max_coin_amount:\n                  type: integer\n                  format: uint64\n                  default: 0\n                exclude_coin_amounts:\n                  type: array\n                  items:\n                    type: integer\n                    format: uint64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      coins:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/coin\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_offer:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Retrieves an offer.\n      description: Retrieves an offer.\n      operationId: get_offer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - trade_id\n              properties:\n                trade_id:\n                  type: string\n                  format: hex\n                file_contents:\n                  type: boolean\n                  description: Indicator as to whether to return the offer contents\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      trade_record:\n                        $ref: \"#/components/schemas/trade_record\"\n                      offer:\n                        type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_all_offers:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Retrieves offers.\n      description: Retrieves offers.\n      operationId: get_all_offers\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                start:\n                  type: integer\n                  default: 0\n                end:\n                  type: integer\n                  default: 10\n                exclude_my_offers:\n                  type: boolean\n                exclude_taken_offers:\n                  type: boolean\n                include_completed:\n                  type: boolean\n                sort_key:\n                  type: string\n                reverse:\n                  type: boolean\n                file_contents:\n                  type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      trade_records:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/trade_record\"\n                      offers:\n                        type: array\n                        items:\n                          type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /check_offer_validity:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Checks the validity of an offer.\n      description: Checks the validity of an offer.\n      operationId: check_offer_validity\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - offer\n              properties:\n                offer:\n                  type: string\n                  format: hex\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      valid:\n                        type: boolean\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_offer_summary:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Get the summary of a given offer.\n      description: Get the summary of a given offer.\n      operationId: get_offer_summary\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - offer\n              properties:\n                offer:\n                  type: string\n                  format: hex\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      summary:\n                        type: object\n                        properties:\n                          offered:\n                            type: object\n                            additionalProperties:\n                              type: integer\n                              format: uint64\n                          requested:\n                            type: object\n                            additionalProperties:\n                              type: integer\n                              format: uint64\n                          fees:\n                            type: integer\n                            format: uint64\n                          infos:\n                            type: object\n                            additionalProperties:\n                              type: object\n                              additionalProperties: true\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /create_offer_for_ids:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Creates an offer.\n      description: Creates an offer for the given set of wallet id and amount pairs.\n      operationId: create_offer_for_ids\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - offer\n              properties:\n                offer:\n                  type: object\n                  additionalProperties:\n                    type: integer\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n                validate_only:\n                  type: boolean\n                  default: false\n                driver_dict:\n                  type: object\n                  additionalProperties:\n                    type: string\n                min_coin_amount:\n                  type: integer\n                  format: uint128\n                  default: 0\n                solver:\n                  type: object\n                  additionalProperties:\n                    type: object\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      offer:\n                        type: string\n                      trade_record:\n                        $ref: \"#/components/schemas/trade_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /cat_asset_id_to_name:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Gets the name and wallet id associated with an asset id.\n      description: Gets the name and wallet id associated with an asset id.\n      operationId: cat_asset_id_to_name\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - asset_id\n              properties:\n                asset_id:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      name:\n                        type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /cat_get_asset_id:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Gets the asset id of the CAT wallet.\n      description: Gets the asset id of the CAT wallet.\n      operationId: cat_get_asset_id\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      asset_id:\n                        type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /cat_spend:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Spends an amount from the given wallet.\n      description: Spends an amount from the given wallet.\n      operationId: cat_spend\n      requestBody:\n        description: Request body with the Id of a wallet.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - amount\n                - inner_address\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                amount:\n                  type: integer\n                  format: uint64\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n                inner_address:\n                  type: string\n                  format: hex\n                memos:\n                  type: array\n                  items:\n                    type: string\n                min_coin_amount:\n                  type: integer\n                  format: uint128\n                  default: 0\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/transaction_record_response\"\n  /cat_set_name:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Sets the name of the CAT wallet.\n      description: Sets the name of the CAT wallet.\n      operationId: cat_set_name\n      requestBody:\n        description: Request body with the Id of a wallet\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - name\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                name:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /cat_get_name:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Gets the name of the CAT wallet.\n      description: Gets the name of the CAT wallet.\n      operationId: cat_get_name\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      name:\n                        type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_stray_cats:\n    post:\n      tags:\n        - CAT Wallet\n      summary: Get a list of all unacknowledged CATs.\n      description: Get a list of all unacknowledged CATs.\n      operationId: get_stray_cats\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      stray_cats:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/token\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /pw_join_pool:\n    post:\n      tags:\n        - Pool Wallet\n      summary: Joins the given wallet to a pool.\n      description: Joins the given wallet to a pool.\n      operationId: pw_join_pool\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - pool_url\n                - relative_lock_height\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                target_puzzlehash:\n                  type: string\n                  format: hex\n                pool_url:\n                  type: string\n                  format: url\n                relative_lock_height:\n                  type: integer\n                  format: uint32\n                fee:\n                  type: integer\n                  format: uint64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      transaction:\n                        $ref: \"#/components/schemas/transaction_record\"\n                      total_fee:\n                        type: integer\n                        format: uint64\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /pw_self_pool:\n    post:\n      tags:\n        - Pool Wallet\n      summary: Removes the given wallet to a pool.\n      description: Removes the given wallet to a pool.\n      operationId: pw_self_pool\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                fee:\n                  type: integer\n                  format: uint64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      transaction:\n                        $ref: \"#/components/schemas/transaction_record\"\n                      total_fee:\n                        type: integer\n                        format: uint64\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /pw_absorb_rewards:\n    post:\n      tags:\n        - Pool Wallet\n      summary: Perform a sweep of the p2_singleton rewards controlled by the pool wallet singleton.\n      description: Perform a sweep of the p2_singleton rewards controlled by the pool wallet singleton.\n      operationId: pw_absorb_rewards\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                fee:\n                  type: integer\n                  format: uint64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      transaction:\n                        $ref: \"#/components/schemas/transaction_record\"\n                      state:\n                        $ref: \"#/components/schemas/pool_wallet_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /pw_status:\n    post:\n      tags:\n        - Pool Wallet\n      summary: Return the complete state of the given Pool wallet.\n      description: Return the complete state of the given Pool wallet.\n      operationId: pw_status\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      unconfirmed_transactions:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/transaction_record\"\n                      state:\n                        $ref: \"#/components/schemas/pool_wallet_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_current_derivation_index:\n    post:\n      tags:\n        - Wallet\n      summary: Gets the current derivation index.\n      description: Gets the current derivation index.\n      operationId: get_current_derivation_index\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      index:\n                        type: integer\n                        format: uint32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /extend_derivation_index:\n    post:\n      tags:\n        - Wallet\n      summary: Extends the current derivation index.\n      description: Extends the current derivation index.\n      operationId: extend_derivation_index\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - index\n              properties:\n                index:\n                  type: integer\n                  format: uint32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      index:\n                        type: integer\n                        format: uint32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /create_signed_transaction:\n    post:\n      tags:\n        - Wallet\n      summary: Creates and signs a transaction.\n      description: Creates and signs a transaction.\n      operationId: create_signed_transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: \"#/components/schemas/transaction_input\"\n                - type: object\n                  properties:\n                    wallet_id:\n                      type: integer\n                    min_coin_amount:\n                      type: integer\n                      format: uint64\n                      default: 0\n                    max_coin_amount:\n                      type: integer\n                      format: uint64\n                      default: 0\n                    excluded_coins:\n                      type: array\n                      items:\n                        $ref: \"#/components/schemas/coin\"\n                    excluded_coin_amounts:\n                      type: array\n                      items:\n                        type: integer\n                        format: uint64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      signed_tx:\n                        $ref: \"#/components/schemas/transaction_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /send_transaction:\n    post:\n      tags:\n        - Wallet\n      summary: Sends an amount of mojo from then given wallet to the given address.\n      description: Sends an amount of mojo from then given wallet to the given address.\n      operationId: send_transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n                - amount\n                - address\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                amount:\n                  type: integer\n                  format: uint64\n                address:\n                  type: string\n                  format: hex\n                fee:\n                  type: integer\n                  format: uint64\n                memos:\n                  type: array\n                  items:\n                    type: string\n                min_coin_amount:\n                  type: integer\n                  format: uint64\n                  default: 0\n                max_coin_amount:\n                  type: integer\n                  format: uint64\n                  default: 0\n                exclude_coin_amounts:\n                  type: array\n                  items:\n                    type: integer\n                    format: uint64\n                exclude_coin_ids:\n                  type: array\n                  items:\n                    type: string\n                    format: hex\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/transaction_record_response\"\n  /send_transaction_multi:\n    post:\n      tags:\n        - Wallet\n      summary: Sends multiple transactions from then given wallet.\n      description: Sends multiple transactions from then given wallet.\n      operationId: send_transaction_multi\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  required:\n                    - wallet_id\n                  properties:\n                    wallet_id:\n                      type: integer\n                      format: uint32\n                - $ref: \"#/components/schemas/transaction_input\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/transaction_record_response\"\n  /get_wallet_balance:\n    post:\n      tags:\n        - Wallet\n      summary: Retrieves the balance of a specific wallet.\n      description: Retrieves the balance of a specific wallet (in units of mojos).\n      operationId: get_wallet_balance\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    required:\n                      - wallet_balance\n                    properties:\n                      wallet_balance:\n                        $ref: \"#/components/schemas/wallet_balance\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_farmed_amount:\n    post:\n      tags:\n        - Wallet\n      summary: Retrieves the amount farmed.\n      description: Retrieves the amount farmed.\n      operationId: get_farmed_amount\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/farmer_rewards\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /delete_unconfirmed_transactions:\n    post:\n      tags:\n        - Wallet\n      summary: Delete all unconfirmed transactions for a given wallet.\n      description: Delete all unconfirmed transactions for a given wallet.\n      operationId: delete_unconfirmed_transactions\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /get_transaction:\n    post:\n      tags:\n        - Wallet\n      summary: Retrieves a specific transaction.\n      description: Retrieves a specific transaction.\n      operationId: get_transaction\n      requestBody:\n        $ref: \"#/components/requestBodies/transaction_id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/transaction_record_response\"\n  /get_spendable_coins:\n    post:\n      tags:\n        - Wallet\n      summary: Retrieves all spendable coins in a wallet.\n      description: Retrieves all spendable coins in a wallet.\n      operationId: get_spendable_coins\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                min_coin_amount:\n                  type: integer\n                  format: uint64\n                  default: 0\n                max_coin_amount:\n                  type: integer\n                  format: uint64\n                  default: 0\n                excluded_coins:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/coin\"\n                excluded_coin_ids:\n                  type: array\n                  items:\n                    type: string\n                    format: hex\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      confirmed_records:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/coin_record\"\n                      unconfirmed_removals:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/coin_record\"\n                      unconfirmed_additions:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/coin\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_transactions:\n    post:\n      tags:\n        - Wallet\n      summary: Retrieves a list of trnsactions from a wallet.\n      description: Retrieves a list of trnsactions from a wallet.\n      operationId: get_transactions\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                start:\n                  type: integer\n                  format: uint32\n                  default: 0\n                end:\n                  type: integer\n                  format: uint32\n                  default: 50\n                sort_key:\n                  type: string\n                reverse:\n                  type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      transactions:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/transaction_record\"\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_transaction_count:\n    post:\n      tags:\n        - Wallet\n      summary: Retrieves the number of transactions for a wallet.\n      description: Retrieves the number of transactions for a wallet.\n      operationId: get_transaction_count\n      requestBody:\n        $ref: \"#/components/requestBodies/wallet_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      count:\n                        type: integer\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_next_address:\n    post:\n      tags:\n        - Wallet\n      summary: Returns a new address.\n      description: Returns a new address.\n      operationId: get_next_address\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_id\n              properties:\n                wallet_id:\n                  type: integer\n                  format: uint32\n                new_address:\n                  type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      address:\n                        type: string\n                        format: hex\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_network_info:\n    post:\n      tags:\n        - Wallet Node\n      summary: Retrieves some information about the current network.\n      description: Retrieves some information about the current network.\n      operationId: wallet_get_network_info\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/network_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /log_in:\n    post:\n      tags:\n        - Key Management\n      summary: Logs in the wallet with a specific key.\n      description: Logs in the wallet with a specific key.\n      operationId: log_in\n      requestBody:\n        $ref: \"#/components/requestBodies/fingerprint\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/fingerprint_response\"\n  /get_logged_in_fingerprint:\n    post:\n      tags:\n        - Key Management\n      summary: Retrieves the logged in fingerprint.\n      description: Retrieves the logged in fingerprint.\n      operationId: get_logged_in_fingerprint\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/fingerprint_response\"\n  /get_public_keys:\n    post:\n      tags:\n        - Key Management\n      summary: Retrieves all public keys on the node.\n      description: Retrieves all public keys on the node.\n      operationId: get_public_keys\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: object\n                    properties:\n                      public_key_fingerprints:\n                        type: array\n                        items:\n                          type: integer\n                          format: uint32\n                  - type: object\n                    properties:\n                      keyring_is_locked:\n                        type: boolean\n                allOf:\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_private_key:\n    post:\n      tags:\n        - Key Management\n      summary: Retrieves the private key by fingerprint.\n      description: Retrieves the private key by fingerprint.\n      operationId: get_private_key\n      requestBody:\n        $ref: \"#/components/requestBodies/fingerprint\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: object\n                    description: Return type if the private key is found.\n                    properties:\n                      private_key:\n                        $ref: \"#/components/schemas/private_key\"\n                  - type: object\n                    description: Return type if the private key is not found.\n                    properties:\n                      private_key:\n                        type: object\n                        properties:\n                          fingerprint:\n                            type: integer\n                            format: uint32\n                allOf:\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /generate_mnemonic:\n    post:\n      tags:\n        - Key Management\n      summary: Generates a new mnemonic phrase.\n      description: Generates a new mnemonic phrase.\n      operationId: generate_mnemonic\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/mnemonic\"\n  /add_key:\n    post:\n      tags:\n        - Key Management\n      summary: Generates a new mnemonic phrase.\n      description: Generates a new mnemonic phrase.\n      operationId: add_key\n      requestBody:\n        description: The mnemonic phrase.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/mnemonic\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    description: The fingerprint of the new key.\n                    properties:\n                      private_key:\n                        type: object\n                        properties:\n                          fingerprint:\n                            type: integer\n                            format: uint32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /delete_key:\n    post:\n      tags:\n        - Key Management\n      summary: Deletes all keys which have the given public key fingerprint.\n      description: Deletes all keys which have the given public key fingerprint.\n      operationId: delete_key\n      requestBody:\n        $ref: \"#/components/requestBodies/fingerprint\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /check_delete_key:\n    post:\n      tags:\n        - Key Management\n      summary: Determines if it is safe to delete a private key.\n      description: Determines if it is safe to delete a private key. Returns whether it is used for farming, pooling, or has a balance.\n      operationId: check_delete_key\n      requestBody:\n        $ref: \"#/components/requestBodies/fingerprint\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      fingerprint:\n                        type: integer\n                        format: uint32\n                      used_for_farmer_rewards:\n                        type: boolean\n                      used_for_pool_rewards:\n                        type: boolean\n                      wallet_balance:\n                        type: boolean\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /delete_all_keys:\n    post:\n      tags:\n        - Key Management\n      summary: Deletes all keys from the keychain.\n      description: Deletes all keys from the keychain.\n      operationId: wallet_delete_all_keys\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /get_sync_status:\n    post:\n      tags:\n        - Wallet Node\n      summary: Retrieves the sync status of the wallet.\n      description: Retrieves the sync status of the wallet.\n      operationId: get_sync_status\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      synced:\n                        type: boolean\n                      syncing:\n                        type: boolean\n                      genesis_initialized:\n                        type: boolean\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_height_info:\n    post:\n      tags:\n        - Wallet Node\n      summary: Retrieves the sync height of the wallet.\n      description: Retrieves the sync height of the wallet.\n      operationId: get_height_info\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      height:\n                        type: integer\n                        format: uint32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /push_tx:\n    post:\n      tags:\n        - Wallet Node\n      description: Pushes a transaction/spend bundle to the mempool and blockchain. Returns whether the spend bundle was successfully included into the mempool.\n      summary: Pushes a transaction/spend bundle to the mempool and blockchain.\n      operationId: wallet_push_tx\n      requestBody:\n        required: true\n        description: The spend bundle\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - spend_bundle\n              properties:\n                spend_bundle:\n                  $ref: \"#/components/schemas/spend_bundle\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /push_transactions:\n    post:\n      tags:\n        - Wallet Node\n      description: Pushes multiple transactions spend bundle to the mempool and blockchain.\n      summary: Pushes multiple transactions spend bundle to the mempool and blockchain.\n      operationId: push_transactions\n      requestBody:\n        required: true\n        description: The transaction list\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - transactions\n              properties:\n                transactions:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/transaction_record\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /get_notifications:\n    post:\n      tags:\n        - Notifications\n      description: Retreives notifications.\n      summary: Retreives notifications.\n      operationId: get_notifications\n      requestBody:\n        required: true\n        description: Notification query inputs\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  items:\n                    type: string\n                start:\n                  type: integer\n                end:\n                  type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      notifications:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                              format: hex\n                            message:\n                              type: string\n                              format: hex\n                            amount:\n                              type: integer\n                              format: uint64\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /delete_notifications:\n    post:\n      tags:\n        - Notifications\n      description: Deletes notifications.\n      summary: Deletes notifications.\n      operationId: delete_notifications\n      requestBody:\n        required: true\n        description: The notifications to delete\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiResponse\"\n  /send_notification:\n    post:\n      tags:\n        - Notifications\n      description: Sends a notification.\n      summary: Sends a notification.\n      operationId: send_notification\n      requestBody:\n        required: true\n        description: The notification to send\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - target\n                - message\n                - amount\n              properties:\n                target:\n                  type: string\n                  format: hex\n                message:\n                  type: string\n                  format: hex\n                amount:\n                  type: integer\n                  format: uint64\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      tx:\n                        $ref: \"#/components/schemas/transaction_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /sign_message_by_address:\n    post:\n      tags:\n        - Notifications\n      description: Given a derived P2 address, sign the message by its private key.\n      summary: Given a derived P2 address, sign the message by its private key.\n      operationId: sign_message_by_address\n      requestBody:\n        required: true\n        description: The message\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - address\n                - message\n              properties:\n                address:\n                  type: string\n                  format: hex\n                message:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      pubkey:\n                        type: string\n                        format: hex\n                      signature:\n                        type: string\n                        format: hex\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /sign_message_by_id:\n    post:\n      tags:\n        - Notifications\n      description: Given a NFT/DID ID, sign the message by the P2 private key.\n      summary: Given a NFT/DID ID, sign the message by the P2 private key.\n      operationId: sign_message_by_id\n      requestBody:\n        required: true\n        description: The message\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - message\n              properties:\n                id:\n                  type: string\n                  format: hex\n                message:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      pubkey:\n                        type: string\n                        format: hex\n                      signature:\n                        type: string\n                        format: hex\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_coin_records_by_names:\n    post:\n      tags:\n        - Coins\n      description: Retrieves the coins for given coin IDs, by default returns unspent coins.\n      summary: Retrieves the coins for given coin IDs.\n      operationId: get_coin_records_by_names\n      requestBody:\n        required: true\n        description: The coin names.\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  required:\n                    - names\n                  properties:\n                    names:\n                      type: array\n                      items:\n                        type: string\n                        format: hex\n                - $ref: \"#/components/schemas/coin_search_options\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/coin_records\"\n  /get_wallets:\n    post:\n      tags:\n        - Wallet Management\n      description: Retrieves all of the wallets on the node.\n      summary: Retrieves all of the wallets on the node.\n      operationId: get_wallets\n      requestBody:\n        description: Optional wallet type to filter by\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                type:\n                  $ref: \"#/components/schemas/wallet_type\"\n                include_data:\n                  type: boolean\n                  default: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      fingerprint:\n                        type: integer\n                        format: int32\n                      wallets:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/wallet_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /create_new_wallet:\n    post:\n      tags:\n        - Wallet Management\n      description: Creates a new wallet.\n      summary: Creates a new wallet.\n      operationId: create_new_wallet\n      requestBody:\n        required: true\n        description: Details of the wallet to create.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - wallet_type\n              properties:\n                wallet_type:\n                  type: string\n                  description: The type of wallet to create.\n                  enum:\n                    - cat_wallet\n                    - did_wallet\n                    - pool_wallet\n                    - nft_wallet\n                name:\n                  type: string\n                  description: User supplied name for the wallet. Will default if not provided.\n                amount:\n                  type: integer\n                  format: uint64\n                  description: The amount of mojo to deposit in the new wallet.\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n                  description: The transaction fee amount in mojo.\n              oneOf:\n                - type: object\n                  description: Details needed to create a cat_wallet.\n                  properties:\n                    mode:\n                      type: string\n                      enum:\n                        - new\n                        - existing\n                    asset_id:\n                      type: string\n                      description: Only used when `mode` is 'existing'\n                - type: object\n                  description: Details needed to create a did_wallet.\n                  required:\n                    - did_type\n                  properties:\n                    did_type:\n                      type: string\n                      description: The type of DID wallet to create.\n                      enum:\n                        - new\n                        - recovery\n                  oneOf:\n                    - type: object\n                      description: Details needed for creating a new DID wallet.\n                      properties:\n                        backup_dids:\n                          type: array\n                          items:\n                            type: string\n                            format: hex\n                        num_of_backup_ids_needed:\n                          type: integer\n                          format: uint64\n                        metadata:\n                          type: object\n                          additionalProperties:\n                            type: string\n                        wallet_name:\n                          type: string\n                        fee:\n                          type: integer\n                          format: uint64\n                          default: 0\n                    - type: object\n                      description: Details needed to create a recovery DID wallet.\n                      properties:\n                        backup_data:\n                          type: string\n                - type: object\n                  description: Details needed to create a pool wallet.\n                  required:\n                    - mode\n                  properties:\n                    mode:\n                      type: string\n                      description: The pooling mode.\n                      enum:\n                        - new\n                        - recovery\n                    initial_target_state:\n                      $ref: \"#/components/schemas/pool_state\"\n                    p2_singleton_delayed_ph:\n                      type: string\n                      format: hex\n                    p2_singleton_delay_time:\n                      type: integer\n                      format: uint64\n                - type: object\n                  description: Details needed to create an NFT wallet.\n                  properties:\n                    did_id:\n                      type: string\n                      format: hex\n                    name:\n                      type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: object\n                    description: Response when a CAT wallet is created.\n                    properties:\n                      type:\n                        $ref: \"#/components/schemas/wallet_type\"\n                      asset_id:\n                        type: string\n                        format: hex\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                  - type: object\n                    description: Response when a new DID wallet is created.\n                    properties:\n                      type:\n                        $ref: \"#/components/schemas/wallet_type\"\n                      my_did:\n                        type: string\n                        format: hex\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                  - type: object\n                    description: Response when a recovery DID wallet is created.\n                    properties:\n                      type:\n                        $ref: \"#/components/schemas/wallet_type\"\n                      my_did:\n                        type: string\n                        format: hex\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                      coin_name:\n                        type: string\n                        format: hex\n                      coin_list:\n                        $ref: \"#/components/schemas/coin\"\n                      newpuzhash:\n                        type: string\n                        format: hex\n                      pubkey:\n                        type: string\n                        format: hex\n                      backup_dids:\n                        type: array\n                        items:\n                          type: string\n                          format: hex\n                      num_verifications_required:\n                        type: integer\n                        format: uint64\n                  - type: object\n                    description: Response when a new pool wallet is created.\n                    properties:\n                      total_fee:\n                        type: integer\n                        format: uint64\n                      transaction:\n                        $ref: \"#/components/schemas/transaction_record\"\n                      launcher_id:\n                        type: string\n                        format: hex\n                      p2_singleton_puzzle_hash:\n                        type: string\n                        format: hex\n                  - type: object\n                    description: Response when a new nft wallet is created.\n                    properties:\n                      type:\n                        $ref: \"#/components/schemas/wallet_type\"\n                      wallet_id:\n                        type: integer\n                        format: uint32\n                allOf:\n                  - $ref: \"#/components/schemas/apiResponse\"\nexternalDocs:\n  description: Find out more about chia\n  url: https://chia.net\n",
			"canonicalURL": "/github.com/dkackman/chia-api@ce83b295f11842695854052f76995486b16cd24c/-/blob/src/wallet.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dkackman/chia-api/blob/ce83b295f11842695854052f76995486b16cd24c/src/wallet.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/nft_calculate_royalties\": post: responses: code 200: contents: media: \"application/json\": generate schema: allOf: schema type mismatch: array and object",
	"NotImplemented": [
		"discriminator inference",
		"http security scheme",
		"sum types with same names"
	]
}