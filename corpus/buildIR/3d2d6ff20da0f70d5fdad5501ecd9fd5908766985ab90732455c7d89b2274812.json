{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/YAPP-Github/20th-iOS-Team-1-BE"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "src/main/resources/static/openapi.yml",
			"byteSize": 50721,
			"content": "openapi: 3.0.1\n\ninfo:\n  title: YAPP20-BE-ToGaether API\n  description: 모임 기반 플랫폼 ToGaether API 문서\n  license:\n    name: Apache License Version 2.0\n    url: '[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)'\n  version: '1.0'\nservers:\n  - url: https://yapp-togather.com\ntags:\n  - name: 계정 (Account)\n    description: 소셜 로그인 및 계정 관련 API를 제공합니다.\n  - name: 모임 (Club)\n    description: 모임 관련 API를 제공합니다.\n  - name: 토큰 (Token)\n    description: 토큰 관련 API를 제공합니다.\n  - name: 강아지 (Pet)\n    description: 강아지 정보 관련 API를 제공합니다.\n  - name: 댓글 (Comment)\n    description: 댓글 관련 API를 제공합니다.\n  - name: 신고 (Report)\n    description: 신고 관련 API를 제공합니다.\n\npaths:\n\n  ############################################# Account #############################################\n\n  /api/accounts/validation/{nickname}:\n    get:\n      tags:\n        - 계정 (Account)\n      summary: 닉네임 검사 API\n      description: 닉네임 중복 , 길이를 검사합니다.\n      parameters:\n        - in: path\n          name: nickname\n          required: true\n          schema:\n            type: string\n            example: 재롱잔치\n          description: 사용자가 입력한 nickname\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountValidationResponse'\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n  /api/accounts/my-page:\n    get:\n      tags:\n        - 계정 (Account)\n      summary: 마이페이지 조회 API\n      description: 마이페이지 조회 시 요청 파라미터 닉네임 계정의 견주와 강아지 정보를 응답합니다. (타 계정의 마이페이지를 조회할 때는, 즉 myPage 필드가 false인 경우 수정버튼이 보이지 않아야 합니다.)\n      parameters:\n        - in: query\n          name: nickname\n          required: false\n          schema:\n            type: string\n            example: 재롱잔치\n          description: 닉네임값이 없으면 본인의 마이페이지 조회, 값이 존재하면 타인의 마이페이지 조회\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MyPageResponse'\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n\n  /auth/kakao/callback:\n    get:\n      tags:\n        - 계정 (Account)\n      summary: 카카오 로그인 API\n      description: IOS에서 카카오 서버로 로그인 요청 시, 카카오에서 Togaether 서버로 콜백 후, 회원가입 여부와 함께 토큰 값을 응답합니다.\n      parameters:\n        - name: code\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignInResponse'\n\n  /auth/apple:\n    post:\n      tags:\n        - 계정 (Account)\n      summary: 애플 로그인 API\n      description: id_token을 전달받아 회원가입 여부와 함께 토큰 값을 응답합니다.\n      requestBody:\n        content:\n          object:\n            schema:\n              $ref: '#/components/schemas/AppleRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignInResponse'\n\n  /api/accounts/sign-up:\n    post:\n      tags:\n        - 계정 (Account)\n      summary: 회원가입 API\n      description: 회원가입을 진행합니다.\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                nickname:\n                  type: string\n                  description: 닉네임\n                imageFile:\n                  type: object\n                  description: 이미지 파일(필수 값 아님)\n                age:\n                  type: integer\n                  description: 나이\n                sex:\n                  type: string\n                  description: 성별(MAN, WOMAN, PRIVATE 중 하나)\n                city:\n                  type: string\n                  description: 시/도\n                detail:\n                  type: string\n                  description: 시/군/구\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 회원 고유 id 값입니다. (pk)\n                example: 3\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponse'\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n  /api/accounts:\n    patch:\n      tags:\n        - 계정 (Account)\n      summary: 계정 수정 API\n      description: 마이페이지에서 견주 프로필 수정 및 정보(카테고리, 자기소개) 추가 시 사용합니다.\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                nickname:\n                  type: string\n                  description: 닉네임\n                imageFile:\n                  type: object\n                  description: 이미지 파일\n                age:\n                  type: integer\n                  description: 나이\n                sex:\n                  type: string\n                  description: 성별(MAN, WOMAN, PRIVATE 중 하나)\n                city:\n                  type: string\n                  description: 시/도\n                detail:\n                  type: string\n                  description: 시/군/구\n                selfIntroduction:\n                  type: string\n                  description: 자기소개\n                interestCategories:\n                  type: array\n                  items:\n                    properties:\n                      field:\n                        type: string\n                        example: 필드 이름\n                      value:\n                        type: string\n                        example: 클라리언트가 보낸 값\n                      reason:\n                        type: string\n                        example: 에러 이유\n                  description: 관심 카테고리들 ex) WALK, DOG_CAFE ...\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 회원 고유 id 값입니다. (pk)\n                example: 3\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n    delete:\n      tags:\n        - 계정 (Account)\n      summary: 계정 삭제 API\n      description: 회원탈퇴를 누를 경우 현재 로그인 되어있는 회원을 삭제합니다\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 회원 고유 id 값입니다. (pk)\n                example: 3\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n\n  ############################################# Token #############################################\n\n  /api/tokens/re-issuance:\n    post:\n      tags:\n        - 토큰 (Token)\n      summary: 토큰 재발급\n      description: access token 만료시, refresh token을 통해 재발급받습니다. (access, refresh 두 토큰 모두 재발급 됩니다.)\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenResponse'\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n  /api/tokens/expire:\n    delete:\n      tags:\n        - 토큰 (Token)\n      summary: 로그아웃\n      description: 서버에서 refresh token을 삭제합니다. (클라이언트에서는 access,  refresh 토큰 모두 폐기)\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 토큰 고유 id 값입니다. (pk)\n                example: 3\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n  ############################################# Club #############################################\n\n  /api/clubs/search:\n    get:\n      tags:\n        - 모임 (Club)\n      summary: 모임 검색 및 필터링\n      description: Query String을 통해 데이터를 요청받고, 조건에 맞는 모임을 반환합니다.\n      parameters:\n        - name: request\n          in: query\n          description: \"지정되지 않은 필터는 null로 보내주시면 됩니다 !\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/SearchingRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchingResponse'\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n  /api/clubs/search/range:\n    get:\n      tags:\n        - 모임 (Club)\n      summary: 주어진 범위 내에 있는 모임 조회\n      description: 좌상단, 우하단 위도 경도를 통해 해당 범위 내에 있는 모임을 조회합니다\n      operationId: searchingWithinRange\n      parameters:\n        - name: request\n          in: query\n          description: SearchingWithinRangeClubRequest\n          required: true\n          schema:\n            $ref: '#/components/schemas/SearchingWithinRangeClubRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchingWithinRangeClubResponse'\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n  /api/clubs/search/simple/{club-id}:\n    get:\n      tags:\n        - 모임 (Club)\n      summary: FIN 클릭 시 간단한 모임 조회\n      description: 유저의 위도, 경도, 모임의 식별자 값을 통해 모임의 간단한 정보를 조회합니다\n      parameters:\n        - name: request\n          in: query\n          description: SearchingSimpleClubRequest\n          required: true\n          schema:\n            $ref: '#/components/schemas/SearchingSimpleClubRequest'\n        - name: club-id\n          in: path\n          description: 모임의 식별자 값\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchingSimpleClubResponse'\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n  /api/clubs:\n    get:\n      tags:\n        - 모임 (Club)\n      summary: 모임 목록 조회 API\n      description: 참여중인 모임, 본인이 방장인 모임, 본인이 참여했으며 종료된 모임을 조건에 따라 조회합니다.\n      parameters:\n        - name: cursor-id\n          in: query\n          description: 모임 목록 화면에서 마지막 모임 id값에 해당합니다. (화면 기준 가장 아래 위치한 모임)\n          required: false\n          schema:\n            type: integer\n          example: 10\n        - name: cursor-end-date\n          in: query\n          description: 모임 목록 화면에서 마지막 모임 endDate값에 해당합니다. (화면 기준 가장 아래 위치한 모임)\n          required: false\n          schema:\n            type: string\n          example: 2022-03-15 19:24:02\n        - name: condition\n          in: query\n          description: 설명에 명시한 조회 조건입니다. (I_AM_PARTICIPATING , I_AM_LEADER, I_AM_PARTICIPATED_AND_EXCEED)\n          required: false\n          schema:\n            type: string\n          example: I_AM_PARTICIPATING\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClubFindResponse'\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n    post:\n      tags:\n        - 모임 (Club)\n      summary: 모임 생성 API\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClubCreateRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 저장된 모임의 고유 식별자 값입니다.\n                example: 5\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n        '403':\n          description: 애완견을 가지고 있지 않은 유저는 모임을 생성할 수 없습니다\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionCreateClub'\n\n  /api/clubs/{club-id}:\n    get:\n      tags:\n        - 모임 (Club)\n      summary: 모임 상세 조회 API\n      description: 모임의 상세 정보를 조회합니다.\n      parameters:\n        - name: club-id\n          in: path\n          description: 모임의 id값 입니다.\n          required: true\n          schema:\n            type: integer\n          example: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClubFindDetailResponse'\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n    delete:\n      tags:\n        - 모임 (Club)\n      summary: 모임 삭제 API\n      description: 방장이 모임을 삭제합니다.\n      parameters:\n        - name: club-id\n          in: path\n          description: 모임의 id값 입니다.\n          required: true\n          schema:\n            type: integer\n          example: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 모임 고유 id 값입니다. (pk)\n                example: 3\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n  /api/clubs/leave/{club-id}:\n    delete:\n      tags:\n        - 모임 (Club)\n      summary: 모임 나가기 API\n      description: 참여중인 모임을 나갑니다.\n      parameters:\n        - name: club-id\n          in: path\n          description: 모임의 id값 입니다.\n          required: true\n          schema:\n            type: integer\n          example: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 모임을 떠난 계정의 고유 id 값입니다. (pk)\n                example: 3\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n  /api/clubs/participate/{club-id}:\n    post:\n      tags:\n        - 모임 (Club)\n      summary: 모임 참여 API\n      description: 모임에 참여합니다.\n      parameters:\n        - name: club-id\n          in: path\n          description: 모임의 id값 입니다.\n          required: true\n          schema:\n            type: integer\n          example: 1\n      responses:\n        '200':\n          description: 모임에 정상적으로 참여한 경우\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClubParticipateResponse'\n        '400':\n          description: 모임 참여 조건을 만족하지 못하는 경우\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  eligible:\n                    type: boolean\n                    example: false\n                  rejectReason:\n                    type: string\n                    example: HAS_NOT_PET\n                    description: 모임에 참여하지 못하는 이유입니다. (enum 데이터 입니다.)\n\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n    ############################################# Pet #############################################\n\n  /api/pets:\n    post:\n      tags:\n        - 강아지 (Pet)\n      summary: 강아지 정보 추가\n      parameters:\n        - name: request\n          in: query\n          description: PetRequest\n          required: true\n          schema:\n            $ref: '#/components/schemas/PetRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 저장된 애완견 고유 식별자 값입니다.\n                example: 5\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n  /api/pets/{pet-id}:\n    delete:\n      tags:\n        - 강아지 (Pet)\n      summary: 강아지 정보 삭제 API\n      description: 강아지의 식별값을 받아 강아지 정보를 삭제합니다.\n      parameters:\n        - name: pet-id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 삭제한 애완견 고유 식별자 값입니다.\n                example: 5\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n    put:\n      tags:\n        - 강아지 (Pet)\n      summary: 강아지 정보 변경 API\n      description: 강아지의 식별값과 변경 사항을 받아 강아지 정보를 수정합니다. (이미지를 제외한 나머지 프로퍼티는 변경사항이 없으면 기존 데이터 그대로 주시면 됩니다. name이 철수인데 name을 변경하지 않을 경우에 그대로 철수 보내주시면 됩니다. 이미지 파일은 변경사항이 없다면 null 값을 보내주시면 됩니다.\n      parameters:\n        - name: pet-id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 1\n        - name: request\n          in: query\n          description: PetRequest\n          required: true\n          schema:\n            $ref: '#/components/schemas/PetRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 수정된 애완견 고유 식별자 값입니다.\n                example: 5\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n  ############################################# Comment #############################################\n\n  /api/comments:\n    post:\n      tags:\n        - 댓글 (Comment)\n      summary: 댓글 생성 API\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommentRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 저장된 댓글 고유 식별자 값입니다.\n                example: 5\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClubFindDetailResponse'\n  /api/comments/{comment-id}:\n    delete:\n      tags:\n        - 댓글 (Comment)\n      summary: 댓글 삭제 API\n      description: 댓글의 식별값을 받아 해당 댓글을 삭제합니다.\n      parameters:\n        - name: comment-id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: 삭제된 댓글 고유 식별자 값입니다.\n                example: 5\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n\n  ############################################# Report #############################################\n\n  /api/reports/club/{club-id}:\n    post:\n      tags:\n        - 신고 (Report)\n      summary: 모임 신고 API\n      description: 부적절한 모임을 신고합니다.\n      parameters:\n        - name: club-id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 1\n      responses:\n        '200':\n          description: 같은 사용자가 같은 모임을 여러번 신고한 경우 false를 응답합니다. 정상적으로 신고되거나, 3번 이상 신고받은 모임인경우 삭제되고 true값을 응답합니다.\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: 신고 결과 여부를 응답합니다.\n                example: false\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n  /api/reports/comment/{comment-id}:\n    post:\n      tags:\n        - 신고 (Report)\n      summary: 댓글 신고 API\n      description: 부적절한 댓글을 신고합니다.\n      parameters:\n        - name: comment-id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 1\n      responses:\n        '200':\n          description: 같은 사용자가 같은 댓글을 여러번 신고한 경우 false를 응답합니다. 정상적으로 신고되거나, 3번 이상 신고받은 댓글인경우 삭제되고 true값을 응답합니다.\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: 신고 결과 여부를 응답합니다.\n                example: false\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\n  /api/reports/account/{account-id}:\n    post:\n      tags:\n        - 신고 (Report)\n      summary: 사용자 신고 API\n      description: 부적절한 댓글을 신고합니다.\n      parameters:\n        - name: account-id\n          in: path\n          required: true\n          schema:\n            type: integer\n            example: 1\n      responses:\n        '200':\n          description: 같은 사용자가 같은 사용자을 여러번 신고한 경우 false를 응답합니다. 정상적으로 신고되거나, 3번 이상 신고받은 사용자인경우 탈퇴처리하고 true값을 응답합니다.\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: 신고 결과 여부를 응답합니다.\n                example: true\n        '401':\n          description: 토큰이 없거나 문제있는 경우에 아래와 같은 포맷으로 응답합니다. (아래는 토큰이 만료된 경우 예시입니다.)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExceptionResponseInfo'\n\ncomponents:\n  schemas:\n\n    ############################################# Exception #############################################\n\n    ExceptionResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 유효하지 않은 입력 값입니다.\n        status:\n          type: string\n          example: 400\n        errors:\n          type: array\n          items:\n            properties:\n              field:\n                type: string\n                example: 필드 이름\n              value:\n                type: string\n                example: 클라리언트가 보낸 값\n              reason:\n                type: string\n                example: 에러 이유\n    ExceptionResponseInfo:\n      type: object\n      properties:\n        status:\n          type: string\n          example: 401\n        message:\n          type: string\n          example: 만료된 JWT토큰입니다.\n    ExceptionCreateClub:\n      type: object\n      properties:\n        status:\n          type: string\n          example: 403\n        message:\n          type: string\n          example: 해당 모임에 참여할 수 있는 애완견이 없습니다.\n\n\n\n    ############################################# Account #############################################\n\n    SignInResponse:\n      type: object\n      properties:\n        accessToken:\n          title: access token\n          type: string\n          description: 인증 토큰\n          example: eyhidfuiiasdjivxJasiC.etjvcxJxodfo93fjixCVKcfkld.RKOFD045fdBkzls3Q\n        refreshToken:\n          title: refresh token\n          type: string\n          description: access token 재발급을 위한 토큰\n          example: fdsdfu9fjcXjivxJasiC.ezZFD5nopjJ453fxfji6FCjVKcfkld.fC2dFD04kzls4V\n        firstAccount:\n          title: 계정 존재 여부\n          type: boolean\n          description: 이미 존재하는 회원인지 여부 확인\n          example: true\n      description: 소셜 로그인 응답 객체\n\n    AccountValidationResponse:\n      type: object\n      properties:\n        unique:\n          type: boolean\n          description: 중복 검사 결과 (중복되지 않으면 true)\n        satisfyLengthCondition:\n          type: boolean\n          description: 길이 만족 여부 결과 (길이 만족하면 true)\n      description: nickname 검사 결과 (두 필드 모두 true이면 통과)\n\n    MyPageResponse:\n      type: object\n      properties:\n        myPage:\n          type: boolean\n          example: true\n          description: 현재 로그인한 계정의 마이페이지를 조회하는지 여부를 나타냅니다.(true 이면 본인의 마이페이지이므로 정보 수정 버튼이 보여야 합니다.)\n        accountInfo:\n          type: object\n          properties:\n            id:\n              type: integer\n              example: 1\n            nickname:\n              type: string\n              example: 재롱잔치\n            address:\n              type: string\n              example: 서울시 강남구\n            age:\n              type: string\n              example: 10살\n            sex:\n              type: string\n              example: MAN\n            selfIntroduction:\n              type: string\n              example: 재롱이 견주입니다~\n            interestCategories:\n              type: string\n              example:\n                - DOG_CAFE\n                - WALK\n                - PLAY_GROUND\n            imageUrl:\n              type: string\n              example: https://dasko.com\n        petInfos:\n          type: array\n          items:\n            type: object\n          example:\n            - id: 1\n              nickname: 재롱이\n              breed: 말티즈\n              age: 3살\n              sex: MALE\n              tags:\n                - 소식\n                - 산책 좋아함\n                - 귀여움\n              imageUrl: https://pet.com\n            - id: 2\n              nickname: 밀란이\n              breed: 리트리버\n              age: 4살\n              sex: FEMALE\n              tags:\n                - 대형견\n                - 산책 좋아함\n                - 간식 귀신\n              imageUrl: https://bvckpvck.com\n\n    AppleRequest:\n      type: object\n      properties:\n        idToken:\n          type: string\n          example: ioaf8vcksdfAC87dsal.ezZFD5nopjJ453fxfji6FCjVKcfkld.fovix5roxda3\n          description: 애플에서 가져온 id_token값\n        email:\n          type: string\n          example: yapp@email.com\n          description: 이메일\n\n\n    ############################################# Token #############################################\n\n    TokenResponse:\n      type: object\n      properties:\n        accessToken:\n          type: string\n          description: 인증 토큰\n          example: eyhidfuiiasdjivxJasiC.etjvcxJxodfo93fjixCVKcfkld.RKOFD045fdBkzls3Q\n        refreshToken:\n          type: string\n          description: access token 재발급을 위한 토큰\n          example: fdsdfu9fjcXjivxJasiC.ezZFD5nopjJ453fxfji6FCjVKcfkld.fC2dFD04kzls4V\n      description: 토큰 응답 객체\n\n\n    ############################################# Club #############################################\n\n    SearchingRequest:\n      type: object\n      properties:\n        searchingWord:\n          title: 검색어\n          type: string\n          description: 카테고리를 통한 검색일 경우, 해당 값은 null\n        category:\n          type: string\n          enum:\n            - WALK\n            - DOG_CAFE\n        eligibleBreed:\n          type: string\n          example: \"웰시코기\"\n        petSizeType:\n          type: string\n          enum:\n            - LARGE\n            - MEDIUM\n            - SMALL\n            - ALL\n        eligibleSex:\n          type: string\n          enum:\n            - MAN\n            - WOMAN\n            - ALL\n        participateMin:\n          title: 최소 참여 인원 필터링\n          type: integer\n          description: 3명 이하일 경우 해당 값은 0으로 전송\n          format: int32\n        participateMax:\n          title: 최대 참여 인원 필터링\n          type: integer\n          format: int32\n        page:\n          type: integer\n          description: 몇 번째 게시물인지 나타낸다\n          format: int32\n        startLatitude:\n          type: number\n          description: 사용자 위도\n          format: double\n        startLongitude:\n          type: number\n          description: 사용자 경도\n          format: double\n        status:\n          type: string\n          enum:\n            - AVAILABLE\n            - PERSONNEL_FULL\n            - END\n      description: 모임 조회 및 필터링 요청 API\n    SearchingResponse:\n      type: array\n      items:\n        properties:\n          category:\n            type: string\n            enum:\n              - WALK\n              - DOG_CAFE\n          title:\n            type: string\n            example: \"산책할사람!\"\n          startDate:\n            type: string\n            format: date-time\n          endDate:\n            type: string\n            format: date-time\n          eligiblePetSizeTypes:\n            type: array\n            items:\n              type: string\n            example:\n              - LARGE\n              - MEDIUM\n          eligibleBreeds:\n            type: array\n            items:\n              type: string\n            example:\n              - 말티즈\n              - 웰시코기\n              - 리트리버\n          eligibleSex:\n            type: string\n            example: \"ALL\"\n          maximumPeople:\n            type: integer\n            example: \"6\"\n          participants:\n            type: integer\n            example: \"5\"\n          latitude:\n            type: number\n            format: double\n            example: \"2,174\"\n          longitude:\n            type: number\n            format: double\n            example: \"41,4033803\"\n          meetingPlace:\n            type: string\n            example: \"서울 강남역 10번 출구\"\n          distance:\n            type: integer\n            example: \"233m\"\n          status:\n            type: string\n            enum:\n              - AVAILABLE\n              - PERSONNEL_FULL\n              - END\n    SearchingWithinRangeClubRequest:\n      type: object\n      properties:\n        upperLeftLatitude:\n          title: 좌상단 위도\n          type: number\n          format: double\n        upperLeftLongitude:\n          title: 좌상단 경도\n          type: number\n          format: double\n        bottomRightLatitude:\n          title: 우하단 위도\n          type: number\n          format: double\n        bottomRightLongitude:\n          title: 우하단 경도\n          type: number\n          format: double\n    SearchingWithinRangeClubResponse:\n      type: array\n      items:\n        properties:\n          clubId:\n            type: integer\n            description: 모임 식별자 값\n            format: int64\n          category:\n            type: string\n            enum:\n              - WALK\n              - DOG_CAFE\n          clubLatitude:\n            title: 모임 위도\n            type: number\n            format: double\n          clubLongitude:\n            title: 모임 경도\n            type: number\n            format: double\n    SearchingSimpleClubRequest:\n      type: object\n      properties:\n        userLatitude:\n          title: 유저 위도\n          type: number\n          format: double\n        userLongitude:\n          title: 유저 경도\n          type: number\n          format: double\n    SearchingSimpleClubResponse:\n      type: object\n      properties:\n        clubId:\n          type: integer\n        category:\n          type: string\n          enum:\n            - WALK\n            - DOG_CAFE\n        title:\n          type: string\n        startDate:\n          type: string\n          format: date-time\n        endDate:\n          type: string\n          format: date-time\n        eligiblePetSizeTypes:\n          type: array\n          items:\n            type: string\n          example:\n            - LARGE\n            - MEDIUM\n        eligibleBreeds:\n          type: array\n          items:\n            type: string\n          example:\n            - 말티즈\n            - 웰시코기\n            - 리트리버\n        eligibleSex:\n          type: string\n        maximumPeople:\n          type: integer\n        participants:\n          type: integer\n        latitude:\n          type: number\n          format: double\n        longitude:\n          type: number\n          format: double\n        meetingPlace:\n          type: string\n        distance:\n          type: number\n          format: double\n        clubStatus:\n          type: string\n          enum:\n            - AVAILABLE\n            - END\n\n    ClubFindResponse:\n      type: object\n      properties:\n        hasNotClub:\n          type: boolean\n          example: true\n          description: 더 이상 조회할 모임이 없을 때 true를 리턴합니다.(마지막 목록 화면에서 아래로 스크롤을 했을 때)\n        clubInfos:\n          type: object\n          properties:\n            content:\n              type: array\n              items:\n                type: object\n              example:\n                - clubId: 1\n                  title: 산책하실분~\n                  category: WALK\n                  meetingPlace: 서울 한강공원\n                  startDate: 2022-06-25T15:46:08.962Z\n                  endDate: 2022-06-25T15:46:08.962Z\n                  eligibleBreeds:\n                    - 말티즈\n                    - 리트리버\n                    - 불독\n                  eligiblePetSizeTypes:\n                    - MEDIUM\n                    - SMALL\n                  eligibleSex: ALL\n                  maximumPeople: 5\n                  participants: 2\n                - clubId: 2\n                  title: 박람회 모임 모집\n                  category: EXPOSITION\n                  meetingPlace: 서울 한강공원\n                  startDate: 2022-06-25T15:46:08.962Z\n                  endDate: 2022-06-25T15:46:08.962Z\n                  eligibleBreeds:\n                  eligiblePetSizeTypes:\n                    - SMALL\n                  eligibleSex: WOMAN\n                  maximumPeople: 4\n                  participants: 1\n            pageable:\n              type: object\n              properties:\n                sort:\n                  type: object\n                  properties:\n                    empty:\n                      type: boolean\n                      example: false\n                    unsorted:\n                      type: boolean\n                      example: false\n                    sorted:\n                      type: boolean\n                      example: true\n                offset:\n                  type: integer\n                  example: 0\n                pageNumber:\n                  type: integer\n                  example: 0\n                pageSize:\n                  type: integer\n                  example: 0\n                paged:\n                  type: boolean\n                  example: true\n                unpaged:\n                  type: boolean\n                  example: false\n            totalElements:\n              type: integer\n              example: 2\n            totalPages:\n              type: integer\n              example: 1\n            last:\n              type: boolean\n              example: true\n            size:\n              type: integer\n              example: 10\n            number:\n              type: integer\n              example: 0\n            sort:\n              type: object\n              properties:\n                empty:\n                  type: boolean\n                  example: false\n                unsorted:\n                  type: boolean\n                  example: false\n                sorted:\n                  type: boolean\n                  example: true\n            numberOfElements:\n              type: integer\n              example: 2\n            first:\n              type: boolean\n              example: true\n            empty:\n              type: boolean\n              example: false\n\n    ClubFindDetailResponse:\n      type: object\n      properties:\n        participating:\n          type: boolean\n          example: true\n          description: 현재 로그인한 유저가, 조회하는 모임에 참여한 경우 true를 리턴합니다.(모임 참여 및 나갈래요 버튼 노출 판단)\n        leader:\n          type: boolean\n          example: true\n          description: 현재 로그인한 유저가, 조회하는 모임의 리더(방장)인경우 true를 리턴합니다.(모임을 삭제할래요 버튼 노출 판단)\n        accountSex:\n          type: string\n          example: MAN\n          description: 로그인한 사용자의 성별\n        clubDetailInfo:\n          type: object\n          properties:\n            id:\n              type: integer\n              example: 1\n            title:\n              type: string\n              example: \"박람회 모임\"\n            description:\n              type: string\n              example: \"xx 박람회 갑니다.\"\n            category:\n              type: string\n              example: \"EXPOSITION\"\n            meetingPlace:\n              type: string\n              example: \"서울 어딘가\"\n            latitude:\n              type: number\n              example: \"2,174\"\n            longitude:\n              type: number\n              example: \"41,4033803\"\n            startDate:\n              type: string\n              example: \"2022-06-25T11:46:08.962Z\"\n            endDate:\n              type: string\n              example: \"2022-06-25T15:46:08.962Z\"\n            eligiblePetSizeTypes:\n              type: array\n              items:\n                type: string\n              example:\n                - LARGE\n                - MEDIUM\n            eligibleBreeds:\n              type: array\n              items:\n                type: string\n              example:\n                - 말티즈\n                - 웰시코기\n                - 리트리버\n            eligibleSex:\n              type: string\n              example: \"ALL\"\n            maximumPeople:\n              type: integer\n              example: 2\n            participants:\n              type: integer\n              example: 2\n        leaderInfo:\n          type: object\n          properties:\n            id:\n              type: integer\n              example: 1\n            nickname:\n              type: string\n              example: \"재롱잔치\"\n            imageUrl:\n              type: string\n              example: \"https://togaether.s3.ap-northeast-2.amazonaws.com/account/파일이름.jpg\"\n        accountInfos:\n          type: array\n          items:\n            type: object\n          example:\n            - id: 1\n              nickname: 재롱잔치\n              imageUrl: \"https://togaether.s3.ap-northeast-2.amazonaws.com/account/파일이름.jpg\"\n            - id: 2\n              nickname: 밀란이네 시트콤\n              imageUrl: \"https://togaether.s3.ap-northeast-2.amazonaws.com/account/파일이름.jpg\"\n        commentInfos:\n          type: array\n          items:\n            type: object\n          example:\n            - id: 1\n              content: 댓글1\n              author: \"누군가\"\n              leader: false\n              updatedTime: \"2022-06-25T15:46:08.962Z\"\n              breeds:\n                - 골든리트리버\n              imageUrl: \"https://togaether.s3.ap-northeast-2.amazonaws.com/account/파일이름.jpg\"\n            - id: 2\n              content: 댓글2\n              author: \"재롱잔치\"\n              leader: true\n              updatedTime: \"2022-06-25T15:46:08.962Z\"\n              breeds:\n                - 골든리트리버\n                - 말티즈\n              imageUrl: \"https://togaether.s3.ap-northeast-2.amazonaws.com/account/파일이름.jpg\"\n    ClubCreateRequest:\n      type: object\n      properties:\n        meetingPlace:\n          type: string\n        category:\n          type: string\n          enum:\n            - WALK\n            - DOG_CAFE\n        title:\n          type: string\n        description:\n          type: string\n          example: 모임에 관한 설명을 적어주시면 됩니다\n        startDate:\n          type: string\n          format: date-time\n          example: 2022-03-15 19:24:02처럼 년-월-일 시:분:초 로 적어주시면 됩니다 format 꼭 지켜주세요해요!\n        endDate:\n          type: string\n          format: date-time\n          example: 2022-03-15 19:24:02처럼 년-월-일 시:분:초 로 적어주시면 됩니다 format 꼭 지켜주셔야해요!\n        maximumPeople:\n          type: integer\n        eligibleSex:\n          type: string\n          enum:\n            - MAN\n            - WOMAN\n            - ALL\n        eligiblePetSizeTypes:\n          type: array\n          items:\n            type: string\n          example:\n            - LARGE\n            - MEDIUM\n        eligibleBreeds:\n          type: array\n          items:\n            type: string\n          example:\n            - 말티즈\n            - 웰시코기\n            - 리트리버\n        latitude:\n          type: number\n          format: double\n        longitude:\n          type: number\n          format: double\n\n    ClubParticipateResponse:\n      type: object\n      properties:\n        eligible:\n          type: boolean\n          example: true\n          description: 해당 모임에 참여 가능 여부를 나타냅니다.\n        rejectReason:\n          type: string\n          example: null\n          description: 모임에 참여 불가능한 이유를 응답합니다. 참여 가능한 경우 null값을 응답합니다.\n\n    ############################################# Pet #############################################\n\n    PetRequest:\n      type: object\n      properties:\n        name:\n          title: 강아지 이름\n          type: string\n          example: 철수\n        year:\n          title: 강아지 태어난 년도\n          type: integer\n          example: \"2022\"\n        month:\n          title: 강아지 태어난 달\n          type: integer\n          example: \"7\"\n        breed:\n          title: 견종\n          type: string\n        sex:\n          type: string\n          enum:\n            - MALE\n            - FEMALE\n        neutering:\n          title: 중성화 여부\n          type: boolean\n        sizeType:\n          type: string\n          enum:\n            - LARGE\n            - MEDIUM\n            - SMALL\n        tags:\n          type: array\n          description: 강아지 성격\n          items:\n            type: string\n          example:\n            - 활발\n            - 사나움\n        imageFile:\n          type: object\n          description: 이미지 파일\n\n    ############################################# Comment #############################################\n    CommentRequest:\n      type: object\n      properties:\n        clubId:\n          title: 댓글을 처리할 모임의 식별값\n          type: integer\n          example: 5\n        content:\n          title: 댓글 내용\n          type: string\n          example: \"댓글을 입력\"",
			"canonicalURL": "/github.com/YAPP-Github/20th-iOS-Team-1-BE@dbd45c4456739871e0fe54dab459aef402879417/-/blob/src/main/resources/static/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/YAPP-Github/20th-iOS-Team-1-BE/blob/dbd45c4456739871e0fe54dab459aef402879417/src/main/resources/static/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/api/accounts\": patch: requestBody: contents: media: \"multipart/form-data\": form parameter \"interestCategories\": nested objects not allowed"
}