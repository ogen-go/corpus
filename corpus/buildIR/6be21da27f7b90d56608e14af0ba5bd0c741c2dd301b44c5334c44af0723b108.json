{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-qldb-2019-01-02-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-qldb-2019-01-02-swagger.yaml",
			"byteSize": 50401,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2019-01-02\n  x-release: v4\n  title: Amazon QLDB\n  description: The control plane for Amazon QLDB\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: qldb\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/qldb-2019-01-02.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/qldb/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /ledgers:\n    post:\n      operationId: CreateLedger\n      description: Creates a new ledger in your AWS account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateLedgerResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceAlreadyExistsException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Name\n                - PermissionsMode\n              properties:\n                Name:\n                  description: The name of the ledger that you want to create. The name\n                    must be unique among all of your ledgers in the current AWS\n                    Region.\n                  type: string\n                  pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n                  minLength: 1\n                  maxLength: 32\n                Tags:\n                  description: The key-value pairs to add as tags to the ledger that you\n                    want to create. Tag keys are case sensitive. Tag values are\n                    case sensitive and can be null.\n                  type: object\n                  minProperties: 0\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: \"#/components/schemas/TagValue\"\n                PermissionsMode:\n                  description: The permissions mode to assign to the ledger that you want\n                    to create.\n                  type: string\n                  enum:\n                    - ALLOW_ALL\n                DeletionProtection:\n                  description: \u003cp\u003eThe flag that prevents a ledger from being deleted by any\n                    user. If not provided on ledger creation, this feature is\n                    enabled (\u003ccode\u003etrue\u003c/code\u003e) by default.\u003c/p\u003e \u003cp\u003eIf deletion\n                    protection is enabled, you must first disable it before you\n                    can delete the ledger using the QLDB API or the AWS Command\n                    Line Interface (AWS CLI). You can disable it by calling the\n                    \u003ccode\u003eUpdateLedger\u003c/code\u003e operation to set the flag to\n                    \u003ccode\u003efalse\u003c/code\u003e. The QLDB console disables deletion\n                    protection for you when you use it to delete a ledger.\u003c/p\u003e\n                  type: boolean\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListLedgers\n      description: \u003cp\u003eReturns an array of ledger summaries that are associated with the\n        current AWS account and Region.\u003c/p\u003e \u003cp\u003eThis action returns a maximum of\n        100 items and is paginated so that you can retrieve all the items by\n        calling \u003ccode\u003eListLedgers\u003c/code\u003e multiple times.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListLedgersResponse\"\n      parameters:\n        - name: max_results\n          in: query\n          required: false\n          description: The maximum number of results to return in a single\n            \u003ccode\u003eListLedgers\u003c/code\u003e request. (The actual number of results\n            returned might be fewer.)\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: next_token\n          in: query\n          required: false\n          description: A pagination token, indicating that you want to retrieve the next\n            page of results. If you received a value for \u003ccode\u003eNextToken\u003c/code\u003e\n            in the response from a previous \u003ccode\u003eListLedgers\u003c/code\u003e call, then\n            you should use that value as input here.\n          schema:\n            type: string\n            minLength: 4\n            maxLength: 1024\n            pattern: ^[A-Za-z-0-9+/=]+$\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n  \"/ledgers/{name}\":\n    delete:\n      operationId: DeleteLedger\n      description: \u003cp\u003eDeletes a ledger and all of its contents. This action is\n        irreversible.\u003c/p\u003e \u003cp\u003eIf deletion protection is enabled, you must first\n        disable it before you can delete the ledger using the QLDB API or the\n        AWS Command Line Interface (AWS CLI). You can disable it by calling the\n        \u003ccode\u003eUpdateLedger\u003c/code\u003e operation to set the flag to\n        \u003ccode\u003efalse\u003c/code\u003e. The QLDB console disables deletion protection for\n        you when you use it to delete a ledger.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"483\":\n          description: ResourcePreconditionNotMetException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourcePreconditionNotMetException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the ledger that you want to delete.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 32\n            pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: DescribeLedger\n      description: Returns information about a ledger, including its state and when it was\n        created.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeLedgerResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the ledger that you want to describe.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 32\n            pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n    patch:\n      operationId: UpdateLedger\n      description: Updates properties on a ledger.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateLedgerResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the ledger.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 32\n            pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                DeletionProtection:\n                  description: \u003cp\u003eThe flag that prevents a ledger from being deleted by any\n                    user. If not provided on ledger creation, this feature is\n                    enabled (\u003ccode\u003etrue\u003c/code\u003e) by default.\u003c/p\u003e \u003cp\u003eIf deletion\n                    protection is enabled, you must first disable it before you\n                    can delete the ledger using the QLDB API or the AWS Command\n                    Line Interface (AWS CLI). You can disable it by calling the\n                    \u003ccode\u003eUpdateLedger\u003c/code\u003e operation to set the flag to\n                    \u003ccode\u003efalse\u003c/code\u003e. The QLDB console disables deletion\n                    protection for you when you use it to delete a ledger.\u003c/p\u003e\n                  type: boolean\n        required: true\n  \"/ledgers/{name}/journal-s3-exports/{exportId}\":\n    get:\n      operationId: DescribeJournalS3Export\n      description: \u003cp\u003eReturns information about a journal export job, including the ledger\n        name, export ID, when it was created, current status, and its start and\n        end time export parameters.\u003c/p\u003e \u003cp\u003eIf the export job with the given\n        \u003ccode\u003eExportId\u003c/code\u003e doesn't exist, then throws\n        \u003ccode\u003eResourceNotFoundException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the ledger with the\n        given \u003ccode\u003eName\u003c/code\u003e doesn't exist, then throws\n        \u003ccode\u003eResourceNotFoundException\u003c/code\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeJournalS3ExportResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the ledger.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 32\n            pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n        - name: exportId\n          in: path\n          required: true\n          description: The unique ID of the journal export job that you want to describe.\n          schema:\n            type: string\n            minLength: 22\n            maxLength: 22\n            pattern: ^[A-Za-z-0-9]+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/ledgers/{name}/journal-s3-exports\":\n    post:\n      operationId: ExportJournalToS3\n      description: \u003cp\u003eExports journal contents within a date and time range from a ledger\n        into a specified Amazon Simple Storage Service (Amazon S3) bucket. The\n        data is written as files in Amazon Ion format.\u003c/p\u003e \u003cp\u003eIf the ledger with\n        the given \u003ccode\u003eName\u003c/code\u003e doesn't exist, then throws\n        \u003ccode\u003eResourceNotFoundException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the ledger with the\n        given \u003ccode\u003eName\u003c/code\u003e is in \u003ccode\u003eCREATING\u003c/code\u003e status, then throws\n        \u003ccode\u003eResourcePreconditionNotMetException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eYou can\n        initiate up to two concurrent journal export requests for each ledger.\n        Beyond this limit, journal export requests throw\n        \u003ccode\u003eLimitExceededException\u003c/code\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExportJournalToS3Response\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ResourcePreconditionNotMetException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourcePreconditionNotMetException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the ledger.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 32\n            pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - InclusiveStartTime\n                - ExclusiveEndTime\n                - S3ExportConfiguration\n                - RoleArn\n              properties:\n                InclusiveStartTime:\n                  description: \"\u003cp\u003eThe inclusive start date and time for the range of\n                    journal contents that you want to export.\u003c/p\u003e \u003cp\u003eThe\n                    \u003ccode\u003eInclusiveStartTime\u003c/code\u003e must be in \u003ccode\u003eISO\n                    8601\u003c/code\u003e date and time format and in Universal\n                    Coordinated Time (UTC). For example:\n                    \u003ccode\u003e2019-06-13T21:36:34Z\u003c/code\u003e \u003c/p\u003e \u003cp\u003eThe\n                    \u003ccode\u003eInclusiveStartTime\u003c/code\u003e must be before\n                    \u003ccode\u003eExclusiveEndTime\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you provide an\n                    \u003ccode\u003eInclusiveStartTime\u003c/code\u003e that is before the ledger's\n                    \u003ccode\u003eCreationDateTime\u003c/code\u003e, Amazon QLDB defaults it to\n                    the ledger's \u003ccode\u003eCreationDateTime\u003c/code\u003e.\u003c/p\u003e\"\n                  type: string\n                  format: date-time\n                ExclusiveEndTime:\n                  description: \"\u003cp\u003eThe exclusive end date and time for the range of journal\n                    contents that you want to export.\u003c/p\u003e \u003cp\u003eThe\n                    \u003ccode\u003eExclusiveEndTime\u003c/code\u003e must be in \u003ccode\u003eISO\n                    8601\u003c/code\u003e date and time format and in Universal\n                    Coordinated Time (UTC). For example:\n                    \u003ccode\u003e2019-06-13T21:36:34Z\u003c/code\u003e \u003c/p\u003e \u003cp\u003eThe\n                    \u003ccode\u003eExclusiveEndTime\u003c/code\u003e must be less than or equal to\n                    the current UTC date and time.\u003c/p\u003e\"\n                  type: string\n                  format: date-time\n                S3ExportConfiguration:\n                  description: The Amazon Simple Storage Service (Amazon S3) bucket\n                    location in which a journal export job writes the journal\n                    contents.\n                  type: object\n                  properties:\n                    Bucket:\n                      $ref: \"#/components/schemas/S3Bucket\"\n                    Prefix:\n                      $ref: \"#/components/schemas/S3Prefix\"\n                    EncryptionConfiguration:\n                      $ref: \"#/components/schemas/S3EncryptionConfiguration\"\n                RoleArn:\n                  description: \u003cp\u003eThe Amazon Resource Name (ARN) of the IAM role that\n                    grants QLDB permissions for a journal export job to do the\n                    following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eWrite objects into your Amazon\n                    Simple Storage Service (Amazon S3) bucket.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\n                    \u003cp\u003e(Optional) Use your customer master key (CMK) in AWS Key\n                    Management Service (AWS KMS) for server-side encryption of\n                    your exported data.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n                  type: string\n                  minLength: 20\n                  maxLength: 1600\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListJournalS3ExportsForLedger\n      description: \u003cp\u003eReturns an array of journal export job descriptions for a specified\n        ledger.\u003c/p\u003e \u003cp\u003eThis action returns a maximum of \u003ccode\u003eMaxResults\u003c/code\u003e\n        items, and is paginated so that you can retrieve all the items by\n        calling \u003ccode\u003eListJournalS3ExportsForLedger\u003c/code\u003e multiple times.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListJournalS3ExportsForLedgerResponse\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the ledger.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 32\n            pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n        - name: max_results\n          in: query\n          required: false\n          description: The maximum number of results to return in a single\n            \u003ccode\u003eListJournalS3ExportsForLedger\u003c/code\u003e request. (The actual\n            number of results returned might be fewer.)\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: next_token\n          in: query\n          required: false\n          description: A pagination token, indicating that you want to retrieve the next\n            page of results. If you received a value for \u003ccode\u003eNextToken\u003c/code\u003e\n            in the response from a previous\n            \u003ccode\u003eListJournalS3ExportsForLedger\u003c/code\u003e call, then you should use\n            that value as input here.\n          schema:\n            type: string\n            minLength: 4\n            maxLength: 1024\n            pattern: ^[A-Za-z-0-9+/=]+$\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n  \"/ledgers/{name}/block\":\n    post:\n      operationId: GetBlock\n      description: \u003cp\u003eReturns a journal block object at a specified address in a ledger.\n        Also returns a proof of the specified block for verification if\n        \u003ccode\u003eDigestTipAddress\u003c/code\u003e is provided.\u003c/p\u003e \u003cp\u003eIf the specified\n        ledger doesn't exist or is in \u003ccode\u003eDELETING\u003c/code\u003e status, then throws\n        \u003ccode\u003eResourceNotFoundException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the specified ledger\n        is in \u003ccode\u003eCREATING\u003c/code\u003e status, then throws\n        \u003ccode\u003eResourcePreconditionNotMetException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf no block\n        exists with the specified address, then throws\n        \u003ccode\u003eInvalidParameterException\u003c/code\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBlockResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: ResourcePreconditionNotMetException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourcePreconditionNotMetException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the ledger.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 32\n            pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - BlockAddress\n              properties:\n                BlockAddress:\n                  description: A structure that can contain an Amazon Ion value in multiple\n                    encoding formats.\n                  type: object\n                  properties:\n                    IonText:\n                      $ref: \"#/components/schemas/IonText\"\n                DigestTipAddress:\n                  description: A structure that can contain an Amazon Ion value in multiple\n                    encoding formats.\n                  type: object\n                  properties:\n                    IonText:\n                      $ref: \"#/components/schemas/IonText\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/ledgers/{name}/digest\":\n    post:\n      operationId: GetDigest\n      description: Returns the digest of a ledger at the latest committed block in the\n        journal. The response includes a 256-bit hash value and a block address.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDigestResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: ResourcePreconditionNotMetException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourcePreconditionNotMetException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the ledger.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 32\n            pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/ledgers/{name}/revision\":\n    post:\n      operationId: GetRevision\n      description: Returns a revision data object for a specified document ID and block\n        address. Also returns a proof of the specified revision for verification\n        if \u003ccode\u003eDigestTipAddress\u003c/code\u003e is provided.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetRevisionResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: ResourcePreconditionNotMetException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourcePreconditionNotMetException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the ledger.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 32\n            pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - BlockAddress\n                - DocumentId\n              properties:\n                BlockAddress:\n                  description: A structure that can contain an Amazon Ion value in multiple\n                    encoding formats.\n                  type: object\n                  properties:\n                    IonText:\n                      $ref: \"#/components/schemas/IonText\"\n                DocumentId:\n                  description: The unique ID of the document to be verified.\n                  type: string\n                  pattern: ^[A-Za-z-0-9]+$\n                  minLength: 22\n                  maxLength: 22\n                DigestTipAddress:\n                  description: A structure that can contain an Amazon Ion value in multiple\n                    encoding formats.\n                  type: object\n                  properties:\n                    IonText:\n                      $ref: \"#/components/schemas/IonText\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /journal-s3-exports:\n    get:\n      operationId: ListJournalS3Exports\n      description: \u003cp\u003eReturns an array of journal export job descriptions for all ledgers\n        that are associated with the current AWS account and Region.\u003c/p\u003e \u003cp\u003eThis\n        action returns a maximum of \u003ccode\u003eMaxResults\u003c/code\u003e items, and is\n        paginated so that you can retrieve all the items by calling\n        \u003ccode\u003eListJournalS3Exports\u003c/code\u003e multiple times.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListJournalS3ExportsResponse\"\n      parameters:\n        - name: max_results\n          in: query\n          required: false\n          description: The maximum number of results to return in a single\n            \u003ccode\u003eListJournalS3Exports\u003c/code\u003e request. (The actual number of\n            results returned might be fewer.)\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: next_token\n          in: query\n          required: false\n          description: A pagination token, indicating that you want to retrieve the next\n            page of results. If you received a value for \u003ccode\u003eNextToken\u003c/code\u003e\n            in the response from a previous \u003ccode\u003eListJournalS3Exports\u003c/code\u003e\n            call, then you should use that value as input here.\n          schema:\n            type: string\n            minLength: 4\n            maxLength: 1024\n            pattern: ^[A-Za-z-0-9+/=]+$\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/tags/{resourceArn}\":\n    get:\n      operationId: ListTagsForResource\n      description: Returns all tags for a specified Amazon QLDB resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsForResourceResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: \u003cp\u003eThe Amazon Resource Name (ARN) for which you want to list the\n            tags. For example:\u003c/p\u003e \u003cp\u003e\n            \u003ccode\u003earn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger\u003c/code\u003e\n            \u003c/p\u003e\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 1600\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      operationId: TagResource\n      description: \u003cp\u003eAdds one or more tags to a specified Amazon QLDB resource.\u003c/p\u003e \u003cp\u003eA\n        resource can have up to 50 tags. If you try to create more than 50 tags\n        for a resource, your request fails and returns an error.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagResourceResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: \u003cp\u003eThe Amazon Resource Name (ARN) to which you want to add the tags.\n            For example:\u003c/p\u003e \u003cp\u003e\n            \u003ccode\u003earn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger\u003c/code\u003e\n            \u003c/p\u003e\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 1600\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Tags\n              properties:\n                Tags:\n                  description: The key-value pairs to add as tags to the specified QLDB\n                    resource. Tag keys are case sensitive. If you specify a key\n                    that already exists for the resource, your request fails and\n                    returns an error. Tag values are case sensitive and can be\n                    null.\n                  type: object\n                  minProperties: 0\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: \"#/components/schemas/TagValue\"\n        required: true\n  \"/tags/{resourceArn}#tagKeys\":\n    delete:\n      operationId: UntagResource\n      description: Removes one or more tags from a specified Amazon QLDB resource. You can\n        specify up to 50 tag keys to remove.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UntagResourceResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: \u003cp\u003eThe Amazon Resource Name (ARN) from which you want to remove the\n            tags. For example:\u003c/p\u003e \u003cp\u003e\n            \u003ccode\u003earn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger\u003c/code\u003e\n            \u003c/p\u003e\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 1600\n        - name: tagKeys\n          in: query\n          required: true\n          description: The list of tag keys that you want to remove.\n          schema:\n            type: array\n            items:\n              type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://qldb.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The QLDB multi-region endpoint\n  - url: https://qldb.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The QLDB multi-region endpoint\n  - url: http://qldb.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The QLDB endpoint for China (Beijing) and China (Ningxia)\n  - url: https://qldb.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The QLDB endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateLedgerResponse:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/LedgerName\"\n        Arn:\n          $ref: \"#/components/schemas/Arn\"\n        State:\n          $ref: \"#/components/schemas/LedgerState\"\n        CreationDateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        DeletionProtection:\n          $ref: \"#/components/schemas/DeletionProtection\"\n    TagValue:\n      type: string\n      minLength: 0\n      maxLength: 256\n    InvalidParameterException: {}\n    ResourceAlreadyExistsException: {}\n    LimitExceededException: {}\n    ResourceInUseException: {}\n    ResourceNotFoundException: {}\n    ResourcePreconditionNotMetException: {}\n    DescribeJournalS3ExportResponse:\n      type: object\n      required:\n        - ExportDescription\n      properties:\n        ExportDescription:\n          $ref: \"#/components/schemas/JournalS3ExportDescription\"\n    DescribeLedgerResponse:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/LedgerName\"\n        Arn:\n          $ref: \"#/components/schemas/Arn\"\n        State:\n          $ref: \"#/components/schemas/LedgerState\"\n        CreationDateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        DeletionProtection:\n          $ref: \"#/components/schemas/DeletionProtection\"\n    ExportJournalToS3Response:\n      type: object\n      required:\n        - ExportId\n      properties:\n        ExportId:\n          $ref: \"#/components/schemas/UniqueId\"\n    S3Bucket:\n      type: string\n      pattern: ^[A-Za-z-0-9-_.]+$\n      minLength: 3\n      maxLength: 255\n    S3Prefix:\n      type: string\n      minLength: 0\n      maxLength: 128\n    S3EncryptionConfiguration:\n      type: object\n      required:\n        - ObjectEncryptionType\n      properties:\n        ObjectEncryptionType:\n          $ref: \"#/components/schemas/S3ObjectEncryptionType\"\n        KmsKeyArn:\n          $ref: \"#/components/schemas/Arn\"\n      description: The encryption settings that are used by a journal export job to write\n        data in an Amazon Simple Storage Service (Amazon S3) bucket.\n    GetBlockResponse:\n      type: object\n      required:\n        - Block\n      properties:\n        Block:\n          $ref: \"#/components/schemas/ValueHolder\"\n        Proof:\n          $ref: \"#/components/schemas/ValueHolder\"\n    IonText:\n      type: string\n      minLength: 1\n      maxLength: 1048576\n      format: password\n    GetDigestResponse:\n      type: object\n      required:\n        - Digest\n        - DigestTipAddress\n      properties:\n        Digest:\n          $ref: \"#/components/schemas/Digest\"\n        DigestTipAddress:\n          $ref: \"#/components/schemas/ValueHolder\"\n    GetRevisionResponse:\n      type: object\n      required:\n        - Revision\n      properties:\n        Proof:\n          $ref: \"#/components/schemas/ValueHolder\"\n        Revision:\n          $ref: \"#/components/schemas/ValueHolder\"\n    ListJournalS3ExportsResponse:\n      type: object\n      properties:\n        JournalS3Exports:\n          $ref: \"#/components/schemas/JournalS3ExportList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListJournalS3ExportsForLedgerResponse:\n      type: object\n      properties:\n        JournalS3Exports:\n          $ref: \"#/components/schemas/JournalS3ExportList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListLedgersResponse:\n      type: object\n      properties:\n        Ledgers:\n          $ref: \"#/components/schemas/LedgerList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    UpdateLedgerResponse:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/LedgerName\"\n        Arn:\n          $ref: \"#/components/schemas/Arn\"\n        State:\n          $ref: \"#/components/schemas/LedgerState\"\n        CreationDateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        DeletionProtection:\n          $ref: \"#/components/schemas/DeletionProtection\"\n    Arn:\n      type: string\n      minLength: 20\n      maxLength: 1600\n    LedgerName:\n      type: string\n      pattern: (?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$\n      minLength: 1\n      maxLength: 32\n    Tags:\n      type: object\n      minProperties: 0\n      maxProperties: 200\n      additionalProperties:\n        $ref: \"#/components/schemas/TagValue\"\n    PermissionsMode:\n      type: string\n      enum:\n        - ALLOW_ALL\n    DeletionProtection:\n      type: boolean\n    CreateLedgerRequest:\n      type: object\n      required:\n        - Name\n        - PermissionsMode\n      properties:\n        Name:\n          $ref: \"#/components/schemas/LedgerName\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n        PermissionsMode:\n          $ref: \"#/components/schemas/PermissionsMode\"\n        DeletionProtection:\n          $ref: \"#/components/schemas/DeletionProtection\"\n    LedgerState:\n      type: string\n      enum:\n        - CREATING\n        - ACTIVE\n        - DELETING\n        - DELETED\n    Timestamp:\n      type: string\n      format: date-time\n    DeleteLedgerRequest:\n      type: object\n      properties: {}\n    UniqueId:\n      type: string\n      pattern: ^[A-Za-z-0-9]+$\n      minLength: 22\n      maxLength: 22\n    DescribeJournalS3ExportRequest:\n      type: object\n      properties: {}\n    JournalS3ExportDescription:\n      type: object\n      required:\n        - LedgerName\n        - ExportId\n        - ExportCreationTime\n        - Status\n        - InclusiveStartTime\n        - ExclusiveEndTime\n        - S3ExportConfiguration\n        - RoleArn\n      properties:\n        LedgerName:\n          $ref: \"#/components/schemas/LedgerName\"\n        ExportId:\n          $ref: \"#/components/schemas/UniqueId\"\n        ExportCreationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        Status:\n          $ref: \"#/components/schemas/ExportStatus\"\n        InclusiveStartTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        ExclusiveEndTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        S3ExportConfiguration:\n          $ref: \"#/components/schemas/S3ExportConfiguration\"\n        RoleArn:\n          $ref: \"#/components/schemas/Arn\"\n      description: The information about a journal export job, including the ledger name,\n        export ID, when it was created, current status, and its start and end\n        time export parameters.\n    DescribeLedgerRequest:\n      type: object\n      properties: {}\n    Digest:\n      type: string\n      minLength: 32\n      maxLength: 32\n    S3ExportConfiguration:\n      type: object\n      required:\n        - Bucket\n        - Prefix\n        - EncryptionConfiguration\n      properties:\n        Bucket:\n          $ref: \"#/components/schemas/S3Bucket\"\n        Prefix:\n          $ref: \"#/components/schemas/S3Prefix\"\n        EncryptionConfiguration:\n          $ref: \"#/components/schemas/S3EncryptionConfiguration\"\n      description: The Amazon Simple Storage Service (Amazon S3) bucket location in which a\n        journal export job writes the journal contents.\n    ExportJournalToS3Request:\n      type: object\n      required:\n        - InclusiveStartTime\n        - ExclusiveEndTime\n        - S3ExportConfiguration\n        - RoleArn\n      properties:\n        InclusiveStartTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        ExclusiveEndTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        S3ExportConfiguration:\n          $ref: \"#/components/schemas/S3ExportConfiguration\"\n        RoleArn:\n          $ref: \"#/components/schemas/Arn\"\n    ExportStatus:\n      type: string\n      enum:\n        - IN_PROGRESS\n        - COMPLETED\n        - CANCELLED\n    ValueHolder:\n      type: object\n      properties:\n        IonText:\n          $ref: \"#/components/schemas/IonText\"\n      description: A structure that can contain an Amazon Ion value in multiple encoding\n        formats.\n    GetBlockRequest:\n      type: object\n      required:\n        - BlockAddress\n      properties:\n        BlockAddress:\n          $ref: \"#/components/schemas/ValueHolder\"\n        DigestTipAddress:\n          $ref: \"#/components/schemas/ValueHolder\"\n    GetDigestRequest:\n      type: object\n      properties: {}\n    GetRevisionRequest:\n      type: object\n      required:\n        - BlockAddress\n        - DocumentId\n      properties:\n        BlockAddress:\n          $ref: \"#/components/schemas/ValueHolder\"\n        DocumentId:\n          $ref: \"#/components/schemas/UniqueId\"\n        DigestTipAddress:\n          $ref: \"#/components/schemas/ValueHolder\"\n    JournalS3ExportList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/JournalS3ExportDescription\"\n    LedgerSummary:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/LedgerName\"\n        State:\n          $ref: \"#/components/schemas/LedgerState\"\n        CreationDateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: Information about a ledger, including its name, state, and when it was\n        created.\n    LedgerList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/LedgerSummary\"\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 100\n    NextToken:\n      type: string\n      pattern: ^[A-Za-z-0-9+/=]+$\n      minLength: 4\n      maxLength: 1024\n    ListJournalS3ExportsForLedgerRequest:\n      type: object\n      properties: {}\n    ListJournalS3ExportsRequest:\n      type: object\n      properties: {}\n    ListLedgersRequest:\n      type: object\n      properties: {}\n    ListTagsForResourceRequest:\n      type: object\n      properties: {}\n    S3ObjectEncryptionType:\n      type: string\n      enum:\n        - SSE_KMS\n        - SSE_S3\n        - NO_ENCRYPTION\n    TagKeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKey\"\n      minItems: 0\n      maxItems: 200\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    UntagResourceRequest:\n      type: object\n      properties: {}\n    UpdateLedgerRequest:\n      type: object\n      properties:\n        DeletionProtection:\n          $ref: \"#/components/schemas/DeletionProtection\"\n"
		}
	},
	"Error": "buildIR: make ir: path \"/journal-s3-exports\": get: responses: 200: contents: application/json: generate schema: field JournalS3Exports: item: field LedgerName: string validator: pattern: error parsing regexp: invalid or unsupported Perl syntax: `(?!`"
}