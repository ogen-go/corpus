{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rd-alliance/metadata-catalog-v2"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 89131,
			"content": "openapi: 3.0.1\ninfo:\n  title: Metadata Standards Catalog\n  description: \"The RDA [Metadata Standards Catalog](https://rdamsc.bath.ac.uk/) is a collaborative, open directory of metadata standards applicable to research data. It is offered to the international academic community to help address infrastructure challenges.\"\n  termsOfService: https://rdamsc.bath.ac.uk/terms-of-use\n  version: 2.0.0\nexternalDocs:\n  description: Browse the source code\n  url: https://www.github.com/rd-alliance/metadata-catalog-dev\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/alex-ball/rda-metadata-standards-catalog/2.0.0\n- description: Live server\n  url: https://rdamsc.bath.ac.uk\ntags:\n- name: m\n  description: Metadata schemes\n- name: g\n  description: Organizations (groups)\n- name: t\n  description: Tools\n- name: c\n  description: Mappings (crosswalks)\n- name: e\n  description: Endorsements\n- name: rel\n  description: Entity relations\n- name: invrel\n  description: Inverse entity relations\n- name: datatype\n  description: Data types\n- name: type\n  description: Entity types\n- name: location\n  description: Location (URL) types\n- name: id_scheme\n  description: Identifier schemes\n- name: thesaurus\n  description: RDAMSC Thesaurus\n- name: user\n  description: Manage your API account\npaths:\n  /api2/m:\n    get:\n      tags:\n      - m\n      summary: \"List all metadata schemes\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageMetadataScheme'\n    post:\n      tags:\n      - m\n      summary: \"Submit a new metadata scheme record\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetadataScheme'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessMetadataScheme'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api2/m{int}:\n    get:\n      tags:\n      - m\n      summary: \"Retrieve an existing metadata scheme record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemMetadataScheme'\n        404:\n          description: \"Metadata scheme not found\"\n          content: {}\n    put:\n      tags:\n      - m\n      summary: \"Modify an existing metadata scheme record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetadataScheme'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessMetadataScheme'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Metadata scheme not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - m\n      summary: \"Remove an existing metadata scheme record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        204:\n          description: Success\n          content: {}\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Metadata scheme not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/g:\n    get:\n      tags:\n      - g\n      summary: \"List all organizations\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageOrganization'\n    post:\n      tags:\n      - g\n      summary: \"Submit a new organization record\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Organization'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessOrganization'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api2/g{int}:\n    get:\n      tags:\n      - g\n      summary: \"Retrieve an existing organization record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemOrganization'\n        404:\n          description: \"Organization not found\"\n          content: {}\n    put:\n      tags:\n      - g\n      summary: \"Modify an existing organization record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Organization'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessOrganization'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Organization not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - g\n      summary: \"Remove an existing organization record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        204:\n          description: Success\n          content: {}\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Organization not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/t:\n    get:\n      tags:\n      - t\n      summary: \"List all tools\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageTool'\n    post:\n      tags:\n      - t\n      summary: \"Submit a new tool record\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tool'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessTool'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api2/t{int}:\n    get:\n      tags:\n      - t\n      summary: \"Retrieve an existing tool record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemTool'\n        404:\n          description: \"Tool not found\"\n          content: {}\n    put:\n      tags:\n      - t\n      summary: \"Modify an existing tool record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tool'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessTool'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Tool not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - t\n      summary: \"Remove an existing tool record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        204:\n          description: Success\n          content: {}\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Tool not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/c:\n    get:\n      tags:\n      - c\n      summary: \"List all mappings\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageMapping'\n    post:\n      tags:\n      - c\n      summary: \"Submit a new mapping record\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Mapping'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessMapping'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api2/c{int}:\n    get:\n      tags:\n      - c\n      summary: \"Retrieve an existing mapping record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemMapping'\n        404:\n          description: \"Mapping not found\"\n          content: {}\n    put:\n      tags:\n      - c\n      summary: \"Modify an existing mapping record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Mapping'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessMapping'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Mapping not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - c\n      summary: \"Remove an existing mapping record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        204:\n          description: Success\n          content: {}\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Mapping not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/e:\n    get:\n      tags:\n      - e\n      summary: \"List all endorsements\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageEndorsement'\n    post:\n      tags:\n      - e\n      summary: \"Submit a new endorsement record\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Endorsement'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessEndorsement'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api2/e{int}:\n    get:\n      tags:\n      - e\n      summary: \"Retrieve an existing endorsement record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemEndorsement'\n        404:\n          description: \"Endorsement not found\"\n          content: {}\n    put:\n      tags:\n      - e\n      summary: \"Modify an existing endorsement record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Endorsement'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessEndorsement'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Endorsement not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - e\n      summary: \"Remove an existing endorsement record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        204:\n          description: Success\n          content: {}\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Endorsement not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/rel:\n    get:\n      tags:\n      - rel\n      summary: \"List all entity relation records\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageRelation'\n  /api2/rel/{table}{int}:\n    get:\n      tags:\n      - rel\n      summary: \"Retrieve an existing entity relation record\"\n      parameters:\n      - name: table\n        in: path\n        required: true\n        description: \"Table name portion of the MSC ID.\"\n        schema:\n          type: string\n          enum:\n          - m\n          - t\n          - c\n          - e\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemRelation'\n        404:\n          description: \"Entity relation not found\"\n          content: {}\n    put:\n      tags:\n      - rel\n      summary: \"Modify an existing entity relation record\"\n      parameters:\n      - name: table\n        in: path\n        required: true\n        description: \"Table name portion of the MSC ID.\"\n        schema:\n          type: string\n          enum:\n          - m\n          - t\n          - c\n          - e\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Relation'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessRelation'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Entity relation not found\"\n          content: {}\n      security:\n      - api_user: []\n    patch:\n      tags:\n      - rel\n      summary: \"Add or remove an individual entity relation\"\n      parameters:\n      - name: table\n        in: path\n        required: true\n        description: \"Table name portion of the MSC ID.\"\n        schema:\n          type: string\n          enum:\n          - m\n          - t\n          - c\n          - e\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"JSON Patch.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchRelation'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessRelation'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Entity relation not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - rel\n      summary: \"Remove an existing entity relation record\"\n      parameters:\n      - name: table\n        in: path\n        required: true\n        description: \"Table name portion of the MSC ID.\"\n        schema:\n          type: string\n          enum:\n          - m\n          - t\n          - c\n          - e\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        204:\n          description: Success\n          content: {}\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Entity relation not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/invrel:\n    get:\n      tags:\n      - invrel\n      summary: \"List virtual records of inverse entity relations\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageInvRelation'\n  /api2/invrel/{table}{int}:\n    get:\n      tags:\n      - invrel\n      summary: \"Retrieve a virtual record of inverse entity relations\"\n      parameters:\n      - name: table\n        in: path\n        required: true\n        description: \"Table name portion of the MSC ID.\"\n        schema:\n          type: string\n          enum:\n          - m\n          - g\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemInvRelation'\n        404:\n          description: \"Subject entity not found\"\n          content: {}\n    patch:\n      tags:\n      - invrel\n      summary: \"Add or remove an individual entity relation\"\n      parameters:\n      - name: table\n        in: path\n        required: true\n        description: \"Table name portion of the MSC ID.\"\n        schema:\n          type: string\n          enum:\n          - m\n          - g\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"JSON Patch.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchInvRelation'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessInvRelation'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Subject entity not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/datatype:\n    get:\n      tags:\n      - datatype\n      summary: \"List all registered data types\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageDataType'\n    post:\n      tags:\n      - datatype\n      summary: \"Submit a new data type\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataType'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessDataType'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api2/datatype{int}:\n    get:\n      tags:\n      - datatype\n      summary: \"Retrieve an existing data type record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemDataType'\n        404:\n          description: \"Data type not found\"\n          content: {}\n    put:\n      tags:\n      - datatype\n      summary: \"Modify an existing data type record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataType'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessDataType'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Data type not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - datatype\n      summary: \"Remove an existing data type record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        204:\n          description: Success\n          content: {}\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Data type not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/type:\n    get:\n      tags:\n      - type\n      summary: \"List all registered entity types\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageVocabularyTerm'\n    post:\n      tags:\n      - type\n      summary: \"Submit a new entity type\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VocabularyTermNew'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessVocabularyTerm'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api2/type{int}:\n    get:\n      tags:\n      - type\n      summary: \"Retrieve an existing entity type record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemVocabularyTerm'\n        404:\n          description: \"Entity type not found\"\n          content: {}\n    put:\n      tags:\n      - type\n      summary: \"Modify an existing entity type record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VocabularyTermOld'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessVocabularyTerm'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Entity type not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - type\n      summary: \"Remove an existing entity type record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        204:\n          description: Success\n          content: {}\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Data type not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/location:\n    get:\n      tags:\n      - location\n      summary: \"List all registered location (URL) types\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageVocabularyTerm'\n    post:\n      tags:\n      - location\n      summary: \"Submit a new location (URL) type\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VocabularyTermNew'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessVocabularyTerm'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api2/location{int}:\n    get:\n      tags:\n      - location\n      summary: \"Retrieve an existing location (URL) type record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemVocabularyTerm'\n        404:\n          description: \"Location (URL) type not found\"\n          content: {}\n    put:\n      tags:\n      - location\n      summary: \"Modify an existing location (URL) type record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VocabularyTermOld'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessVocabularyTerm'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Location (URL) type not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - location\n      summary: \"Remove an existing location (URL) type record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        204:\n          description: Success\n          content: {}\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Location (URL) type not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/id_scheme:\n    get:\n      tags:\n      - id_scheme\n      summary: \"List all registered ID schemes\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageVocabularyTerm'\n    post:\n      tags:\n      - id_scheme\n      summary: \"Submit a new ID scheme\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VocabularyTermNew'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessVocabularyTerm'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api2/id_scheme{int}:\n    get:\n      tags:\n      - id_scheme\n      summary: \"Retrieve an existing ID scheme record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemVocabularyTerm'\n        404:\n          description: \"ID scheme not found\"\n          content: {}\n    put:\n      tags:\n      - id_scheme\n      summary: \"Modify an existing ID scheme record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VocabularyTermOld'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseSuccessVocabularyTerm'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Data type not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - id_scheme\n      summary: \"Remove an existing ID scheme record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        204:\n          description: Success\n          content: {}\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"ID Scheme not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/thesaurus:\n    get:\n      tags:\n      - thesaurus\n      summary: \"Retrieve SKOS Concept Scheme for RDAMSC Thesaurus\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemThesaurusConceptScheme'\n  /api2/thesaurus/{level}{int}:\n    get:\n      tags:\n      - thesaurus\n      summary: \"Retrieve SKOS Concept from RDAMSC Thesaurus\"\n      parameters:\n      - name: level\n        in: path\n        required: true\n        description: \"String portion of the concept ID.\"\n        schema:\n          type: string\n          enum:\n          - \"domain\"\n          - \"subdomain\"\n          - \"concept\"\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the concept ID.\"\n        schema:\n          type: integer\n      - name: form\n        in: query\n        description: \u003e\n          Level of detail to include in the entry.\n\n          - `concept` (default) provides the relationships for just this concept.\n\n          - `tree` recursively provides the IDs for narrower concepts of narrower concepts, and broader concepts of broader concepts.\n        schema:\n          type: string\n          enum:\n          - concept\n          - tree\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseItemThesaurusConcept'\n        404:\n          description: \"Concept not found\"\n          content: {}\n  /api2/thesaurus/concepts:\n    get:\n      tags:\n      - thesaurus\n      summary: \"Retrieve array of all concepts in the RDAMSC Thesaurus\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageThesaurusConcept'\n  /api2/thesaurus/concepts/used:\n    get:\n      tags:\n      - thesaurus\n      summary: \"Retrieve array of concepts in the RDAMSC Thesaurus that are currently in use in the Catalog.\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePageThesaurusConcept'\n  /api2/user/reset-password:\n    post:\n      tags:\n      - user\n      summary: \"Change API user password\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                new_password:\n                  type: string\n                  description: \"New password to use for subsequent calls.\"\n              required:\n              - new_password\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePassword'\n        400:\n          description: \"Bad Request: no suitable password provided\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponsePassword'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        500:\n          description: \"Internal Server Error: password could not be reset\"\n          content: {}\n      security:\n      - api_user: []\n  /api2/user/token:\n    get:\n      tags:\n      - user\n      summary: \"Request an authorization token\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  apiVersion:\n                    type: string\n                  token:\n                    type: string\n                    description: \"Authorization token valid for 600 seconds.\"\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\ncomponents:\n  schemas:\n    Slug:\n      type: string\n      readOnly: true\n      description: \"Semantic identifier for the record.\"\n      pattern: '^[-a-z0-9]{1,71}$'\n    MSCID:\n      type: string\n      readOnly: true\n      description: \"Non-semantic internal identifier for the record.\"\n      pattern: '^msc:(m|g|t|c|e|datatype|location|type|id_scheme)\\d+$'\n    URI:\n      type: string\n      readOnly: true\n      description: \"API URL from which the record for the current entity may be downloaded.\"\n      pattern: '^[-a-z0-9]{1,71}$'\n    Identifier:\n      type: object\n      properties:\n        id:\n          type: string\n          description: \"The identifier string. DOIs should start `10.`.\"\n        scheme:\n          type: string\n          description: \"A keyword indicating the scheme from which the identifier is drawn. Valid keywords may be obtained from the `id_schemes` endpoint.\"\n    Namespace:\n      type: object\n      properties:\n        prefix:\n          type: string\n          description: \"Recommended prefix to use when abbreviating predicate URIs from this namespace.\"\n        uri:\n          type: string\n          description: \"URI of the scheme’s namespace, to which a predicate name can be appended to generate the URI of a predicate of the scheme. Must begin with a protocol string (e.g. `https://`) and end in a slash (/) or a hash (#).\"\n    Location:\n      type: object\n      properties:\n        url:\n          type: string\n          description: \"URL of the Web resource. Normalized specifications hosted by the MSC should be specified using a relative URL.\"\n        type:\n          type: string\n          description: \"A keyword describing the type of resource. Valid keywords may be obtained from the `locations` endpoint.\"\n    DateRange:\n      type: object\n      properties:\n        start:\n          type: string\n          pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n          description: \"The start date of the period.\"\n        end:\n          type: string\n          pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n          description: \"The end date of the period (if applicable).\"\n    Creator:\n      type: object\n      properties:\n        fullName:\n          type: string\n          description: \"Full name. If absent, a concatenation of the `givenName` and `familyName` will be used for display.\"\n        givenName:\n          type: string\n          description: \"Given name(s)\"\n        familyName:\n          type: string\n          description: \"Family name\"\n    MetadataScheme:\n      type: object\n      properties:\n        slug:\n          $ref: '#/components/schemas/Slug'\n        mscid:\n          $ref: '#/components/schemas/MSCID'\n        uri:\n          $ref: '#/components/schemas/URI'\n        title:\n          type: string\n          description: \u003e\n            The full, human understandable name of the metadata scheme.\n\n            - If the scheme is known by an abbreviation, put this at the start of the title, then give the expanded form in parentheses, e.g. “SDMX (Statistical Data and Metadata Exchange)”.\n\n            - If the title is in English, use title case, i.e. give each significant word a capital letter. Do not use an irregular case to indicate how an abbreviation was defined, e.g. do not write “Statistical Data and Metadata eXchange”.\n        description:\n          type: string\n          description: \"A few sentences describing the nature of the standard and for what it is meant to be used. If any of the information in the remainder of the record needs be clarified, perhaps because the reality is more nuanced than the coarse semantics provide for, then an explanation can be given here.\"\n        keywords:\n          type: array\n          description: \"Keywords indicating the disciplinary scope of the scheme. Provide as few terms as possible to describe the subject areas in which the scheme is most used and useful. In some cases, it may be better to use a broader term even if not all of the available narrower terms apply.\"\n          items:\n            type: string\n            format: URI\n            description: \"A URI drawn from the local profile of the UNESCO Thesaurus. Most UNESCO Concept URIs may be used, in addition to MSC Concept URIs. Valid values may be queried from the `keywords` endpoint.\"\n        dataTypes:\n          type: array\n          description: \"Data types most commonly described by metadata records that conform to this scheme. The data type must be specified by its internal MSC ID.\"\n          items:\n            type: string\n            description: \"Full MSC ID of the entity.\"\n            pattern: '^msc:datatype\\d+$'\n        locations:\n          type: array\n          description: \"Locations where further information about the scheme may be accessed.\"\n          items:\n            $ref: '#/components/schemas/Location'\n        namespaces:\n          type: array\n          description: \"Namespaces that may be used to identify predicates of the scheme in Linked Data contexts.\"\n          items:\n            $ref: '#/components/schemas/Namespace'\n        identifiers:\n          type: array\n          description: \"Strings used to identify all versions of this scheme collectively.\"\n          items:\n            $ref: '#/components/schemas/Identifier'\n        relatedEntities:\n          type: array\n          description: \"Other entities in the MSC database. Note that relationships may be added but may not be deleted through this endpoint.\"\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                description: \"Full MSC ID of the entity.\"\n                pattern: '^msc:(m|g|t|c|e)\\d+$'\n              role:\n                type: string\n                description: \"The manner of the relationship between the entity and the scheme.\"\n                enum:\n                - \"parent scheme\"\n                - \"child scheme\"\n                - \"input to mapping\"\n                - \"output from mapping\"\n                - \"maintainer\"\n                - \"funder\"\n                - \"user\"\n                - \"tool\"\n                - \"endorsement\"\n              data:\n                type: object\n                readOnly: true\n                oneOf:\n                - $ref: '#/components/schemas/Endorsement'\n                - $ref: '#/components/schemas/Mapping'\n                - $ref: '#/components/schemas/MetadataScheme'\n                - $ref: '#/components/schemas/Organization'\n                - $ref: '#/components/schemas/Tool'\n        versions:\n          type: array\n          items:\n            properties:\n              number:\n                type: string\n                description: \"The number, code or other string used to identify the version, omitting any initial “v”, “v.” or “ver.”.\"\n              title:\n                type: string\n                description: \"The full, human understandable name of this version of the metadata scheme. This should be provided only if it differs from the title given for the scheme as a whole.\"\n              note:\n                type: string\n                description: \"If this version requires some explanation, give it here.\"\n              available:\n                type: string\n                pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n                description: \"The date on which this version was made available as a draft or proposal. A version with an `available` date but no `issued` date is assumed not to be approved by its maintainer for use. (This element is provided to allow schemes or versions to be entered into the MSC prior to official approval; retrospectively uncovering this information for versions that have been issued is not encouraged.)\"\n              issued:\n                type: string\n                pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n                description: \"The date on which the version was released or published. This also implies the date on which the version was approved for use by its maintainer, unless an explicit `valid` date is also given.\"\n              valid:\n                allOf:\n                - description: \"A version of a scheme is assumed to be approved for use by its maintainer from its `issued` date until the issued date of a subsequent version. If this is not the case, (for example, where multiple versions are approved simultaneously), `valid` expresses the period for which a version is approved for use. If an end date is provided, this indicates the date on which approval was withdrawn; otherwise the version is still considered approved for use, despite the issue of subsequent versions.\"\n                - $ref: '#/components/schemas/DateRange'\n              locations:\n                type: array\n                description: \"Locations where further information about this version of the scheme may be accessed.\"\n                items:\n                  $ref: '#/components/schemas/Location'\n              namespaces:\n                type: array\n                description: \"Namespaces that may be used to identify predicates of the scheme in Linked Data contexts.\"\n                items:\n                  $ref: '#/components/schemas/Namespace'\n              identifiers:\n                type: array\n                description: \"Strings used to identify this version of the scheme.\"\n                items:\n                  $ref: '#/components/schemas/Identifier'\n              samples:\n                type: array\n                description: \"Metadata records conforming to the scheme.\"\n                items:\n                  type: object\n                  properties:\n                    url:\n                      type: string\n                      description: \"URL of the sample record. For samples hosted by the MSC, the URL should be specified in relative form.\"\n                    title:\n                      type: string\n                      description: \"The value of the title element from the sample record, or an equivalent short summary of what the sample record describes.\"\n    Organization:\n      type: object\n      properties:\n        slug:\n          $ref: '#/components/schemas/Slug'\n        mscid:\n          $ref: '#/components/schemas/MSCID'\n        uri:\n          $ref: '#/components/schemas/URI'\n        name:\n          type: string\n          description: \"The full name of the organization as it is usually given.\"\n        description:\n          type: string\n          description: \"A sentence or several describing the organization and its relevance to research data and metadata.\"\n        types:\n          type: array\n          items:\n            type: string\n            description: \"A keyword describing the type of organization. Valid keywords may be obtained from the `types` endpoint.\"\n        locations:\n          type: array\n          description: \"Locations where further information about the organization may be accessed.\"\n          items:\n            $ref: '#/components/schemas/Location'\n        identifiers:\n          type: array\n          description: \"Strings used to identify the organization.\"\n          items:\n            $ref: '#/components/schemas/Identifier'\n        relatedEntities:\n          type: array\n          description: \"Other entities in the MSC database. Note that relationships may be added but may not be deleted through this endpoint.\"\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                description: \"Full MSC ID of the entity.\"\n                pattern: '^msc:(m|g|t|c|e)\\d+$'\n              role:\n                type: string\n                description: \"The manner of the relationship between the entity and the organization.\"\n                enum:\n                - \"maintained scheme\"\n                - \"maintained tool\"\n                - \"maintained mapping\"\n                - \"funded scheme\"\n                - \"funded tool\"\n                - \"funded mapping\"\n                - \"used scheme\"\n                - \"endorsement\"\n              data:\n                type: object\n                readOnly: true\n                oneOf:\n                - $ref: '#/components/schemas/MetadataScheme'\n                - $ref: '#/components/schemas/Tool'\n                - $ref: '#/components/schemas/Mapping'\n                - $ref: '#/components/schemas/Endorsement'\n    Tool:\n      type: object\n      properties:\n        slug:\n          $ref: '#/components/schemas/Slug'\n        mscid:\n          $ref: '#/components/schemas/MSCID'\n        uri:\n          $ref: '#/components/schemas/URI'\n        title:\n          type: string\n          description: \u003e\n            The full, human understandable name of the tool.\n\n            - If the tool is known by an abbreviation, put this at the start of the title, then give the expanded form in parentheses, e.g. “CMOR (Climate Model Output Rewriter)”.\n\n            - If the title is in English, use title case, i.e. give each significant word a capital letter. Do not use an irregular case to indicate how an abbreviation was defined, e.g. do not write “eXtensible Editor”.\n        description:\n          type: string\n          description: \"A short description of the intended use of the tool, and its capabilities.\"\n        types:\n          type: array\n          description: \"Terms describing how a user interacts with the tool.\"\n          items:\n            type: string\n            description: \"Must be one of ‘terminal (⟨platform⟩)’, ‘graphical (⟨platform⟩)’, ‘web service’, or ‘web application’, where ⟨platform⟩ is ‘Windows’, ‘Mac OS X’, ‘Linux’, ‘BSD’, ‘cross-platform’ or similar.\"\n        identifiers:\n          type: array\n          description: \"Strings used to identify the tool or version.\"\n          items:\n            $ref: '#/components/schemas/Identifier'\n        locations:\n          type: array\n          description: \"Locations where further information about the tool may be accessed.\"\n          items:\n            $ref: '#/components/schemas/Location'\n        creators:\n          type: array\n          description: \"Persons or organizations responsible for creating, maintaining, or approving the tool (the emphasis here is on establishing provenance/responsibility rather than a strict understanding of creation). If a maintaining organization has an entry in the MSC, it should be given under `relatedEntities` with type ‘maintainer’ rather than here.\"\n          items:\n            $ref: '#/components/schemas/Creator'\n        relatedEntities:\n          type: array\n          description: \"Other entities in the MSC database. Note that relationships may be added but may not be deleted through this endpoint.\"\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                description: \"Full MSC ID of the entity.\"\n                pattern: '^msc:(m|g|t|c|e)\\d+$'\n              role:\n                type: string\n                description: \"The manner of the relationship between the entity and the tool.\"\n                enum:\n                - \"supported scheme\"\n                - \"maintainer\"\n                - \"funder\"\n              data:\n                type: object\n                readOnly: true\n                oneOf:\n                - $ref: '#/components/schemas/MetadataScheme'\n                - $ref: '#/components/schemas/Organization'\n        versions:\n          type: array\n          items:\n            properties:\n              number:\n                type: string\n                description: \"The number, code or other string used to identify the version, omitting any initial “v”, “v.” or “ver.”.\"\n              title:\n                type: string\n                description: \"The full, human understandable name of this version of the tool. This should be provided only if it differs from the title given for the tool as a whole.\"\n              note:\n                type: string\n                description: \"If this version requires some explanation, give it here.\"\n              issued:\n                type: string\n                pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n                description: \"The date on which the version was released.\"\n              locations:\n                type: array\n                description: \"Locations where further information about this version of the tool may be accessed.\"\n                items:\n                  $ref: '#/components/schemas/Location'\n              identifiers:\n                type: array\n                description: \"Strings used to identify this version of the tool.\"\n                items:\n                  $ref: '#/components/schemas/Identifier'\n    Mapping:\n      type: object\n      properties:\n        slug:\n          $ref: '#/components/schemas/Slug'\n        mscid:\n          $ref: '#/components/schemas/MSCID'\n        uri:\n          $ref: '#/components/schemas/URI'\n        name:\n          type: string\n          description: \"Name or descriptor for the mapping.\"\n        description:\n          type: string\n          description: \u003e\n            A short description of the mapping.\n\n            - This could indicate if only certain versions of the input and output schemes are supported; if the mapping has been tailored to the outputs or inputs of specific repositories or services; if certain parts of the input or output schemes have been ignored; or if specific conventions in the input scheme are preferred (or necessary).\n\n            - This could recommend steps to be taken before or after applying the mapping in order to improve results.\n        creators:\n          type: array\n          description: \"Persons or organizations responsible for creating, maintaining, or approving the mapping (the emphasis here is on establishing provenance/responsibility rather than a strict understanding of creation). If a maintaining organization has an entry in the MSC, it should be given under `relatedEntities` with type ‘maintainer’ rather than here.\"\n          items:\n            $ref: '#/components/schemas/Creator'\n        locations:\n          type: array\n          description: \"Locations where further information about the tool may be accessed.\"\n          items:\n            $ref: '#/components/schemas/Location'\n        identifiers:\n          type: array\n          description: \"Strings used to identify the mapping or version.\"\n          items:\n            $ref: '#/components/schemas/Identifier'\n        relatedEntities:\n          type: array\n          description: \"Other entities in the MSC database. Note that relationships may be added but may not be deleted through this endpoint.\"\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                description: \"Full MSC ID of the entity.\"\n                pattern: '^msc:(m|g|t|c|e)\\d+$'\n              role:\n                type: string\n                description: \"The manner of the relationship between the entity and the mapping.\"\n                enum:\n                - \"input scheme\"\n                - \"output scheme\"\n                - \"maintainer\"\n                - \"funder\"\n              data:\n                type: object\n                readOnly: true\n                oneOf:\n                - $ref: '#/components/schemas/MetadataScheme'\n                - $ref: '#/components/schemas/Organization'\n        versions:\n          type: array\n          items:\n            properties:\n              number:\n                type: string\n                description: \"The number, code or other string used to identify the version, omitting any initial “v”, “v.” or “ver.”.\"\n              note:\n                type: string\n                description: \"If this version requires some explanation, give it here.\"\n              issued:\n                type: string\n                pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n                description: \"The date on which the version was published.\"\n              locations:\n                type: array\n                description: \"Locations where further information about this version of the mapping may be accessed.\"\n                items:\n                  $ref: '#/components/schemas/Location'\n              identifiers:\n                type: array\n                description: \"Strings used to identify this version of the mapping.\"\n                items:\n                  $ref: '#/components/schemas/Identifier'\n    Endorsement:\n      type: object\n      properties:\n        slug:\n          $ref: '#/components/schemas/Slug'\n        mscid:\n          $ref: '#/components/schemas/MSCID'\n        uri:\n          $ref: '#/components/schemas/URI'\n        title:\n          type: string\n          description: \"The title of the endorsement document.\"\n        description:\n          type: string\n          description: \u003e\n            Description of the endorsement document.\n\n            - Use this to record any caveats to the endorsement.\n\n            - This could indicate if only certain versions of the scheme(s) are endorsed.\n        creators:\n          type: array\n          description: \"Authors of the endorsement document\"\n          items:\n            $ref: '#/components/schemas/Creator'\n        publication:\n          type: string\n          description: \"Other bibliographic information (excluding date).\"\n        issued:\n          type: string\n          pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n          description: \"The date on which the endorsement was made. Use of this element does not imply that the originating organization reviews the endorsement for validity. If both `issued` and `valid` are given, issued is ignored.\"\n        valid:\n          allOf:\n          - description: \"The start date expresses when the endorsement was made. If there is no end date, this implies that the originating organization currently endorses the standard. (If that implication is inappropriate, the date should be given under `issued` instead.)\n\nIf an end date is provided, it expresses the date on which the endorsement was withdrawn.\"\n          - $ref: '#/components/schemas/DateRange'\n        locations:\n          type: array\n          description: \"Locations where further information about the endorsement may be accessed.\"\n          items:\n            $ref: '#/components/schemas/Location'\n        identifiers:\n          type: array\n          description: \"Strings used to identify the endorsement.\"\n          items:\n            $ref: '#/components/schemas/Identifier'\n        relatedEntities:\n          type: array\n          description: \"Other entities in the MSC database. Note that relationships may be added but may not be deleted through this endpoint.\"\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                description: \"Full MSC ID of the entity.\"\n                pattern: '^msc:(m|g|t|c|e)\\d+$'\n              role:\n                type: string\n                description: \"The manner of the relationship between the entity and the endorsement.\"\n                enum:\n                - \"endorsed scheme\"\n                - \"originator\"\n              data:\n                type: object\n                readOnly: true\n                oneOf:\n                - $ref: '#/components/schemas/MetadataScheme'\n                - $ref: '#/components/schemas/Organization'\n    DataType:\n      type: object\n      properties:\n        mscid:\n          $ref: '#/components/schemas/MSCID'\n        uri:\n          $ref: '#/components/schemas/URI'\n        id:\n          type: string\n          description: \"URL identifying this type of data.\"\n        label:\n          type: string\n          description: \"Descriptor for this type of data.\"\n    VocabularyTerm:\n      type: object\n      properties:\n        mscid:\n          $ref: '#/components/schemas/MSCID'\n        uri:\n          $ref: '#/components/schemas/URI'\n        label:\n          type: string\n          description: \"Human-readable descriptor for this term.\"\n        applies:\n          type: array\n          description: \"Entities for which this term may be used.\"\n          items:\n            type: string\n            enum:\n            - \"scheme\"\n            - \"organization\"\n            - \"tool\"\n            - \"mapping\"\n            - \"endorsement\"\n      required:\n      - label\n    VocabularyTermNew:\n      allOf:\n      - $ref: '#/components/schemas/VocabularyTerm'\n      - properties:\n          id:\n            type: string\n            description: \"String used to identify this term in records.\"\n        required:\n        - id\n    VocabularyTermOld:\n      allOf:\n      - $ref: '#/components/schemas/VocabularyTerm'\n      - properties:\n          id:\n            type: string\n            description: \"String used to identify this term in records.\"\n            readOnly: true\n    Relation:\n      type: object\n      properties:\n        \"@id\":\n          $ref: '#/components/schemas/MSCID'\n        parent schemes:\n          type: array\n          description: \"Schemes of which the current scheme is a profile. In practice, this means either that the current scheme explicitly “borrows” elements from the parent scheme, or that all instances of the current scheme would be valid instances of the parent scheme.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:m\\d+$'\n        supported schemes:\n          type: array\n          description: \"Schemes to which the tool’s input metadata should conform, or output metadata does conform.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:m\\d+$'\n        input schemes:\n          type: array\n          description: \"Schemes to which a metadata record input to the current mapping must conform.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:m\\d+$'\n        output schemes:\n          type: array\n          description: \"Schemes to which metadata records output from the current mapping conform.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:m\\d+$'\n        endorsed schemes:\n          type: array\n          description: \"Schemes endorsed by the current endorsement.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:m\\d+$'\n        maintainers:\n          type: array\n          description: \"Organizations that maintain the current scheme, tool or mapping.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:g\\d+$'\n        funders:\n          type: array\n          description: \"Organizations that fund the current scheme, tool or mapping.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:g\\d+$'\n        users:\n          type: array\n          description: \"Organizations that are known to use the current scheme.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:g\\d+$'\n        originators:\n          type: array\n          description: \"Organizations that have made the current endorsement.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:g\\d+$'\n    InvRelation:\n      type: object\n      properties:\n        \"@id\":\n          $ref: '#/components/schemas/MSCID'\n        uri:\n          $ref: '#/components/schemas/URI'\n        child schemes:\n          type: array\n          description: \"Schemes that are profiles of the current scheme. In practice, this means either that the child scheme explicitly “borrows” elements from the current scheme, or that all instances of the child scheme would be valid instances of the current scheme.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:m\\d+$'\n        tools:\n          type: array\n          description: \"Tools that either accept metadata conforming to the current scheme as input, or output such metadata.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:t\\d+$'\n        input to mappings:\n          type: array\n          description: \"Mappings that may be used to convert records conforming to the current scheme into records conforming to other schemes.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:c\\d+$'\n        output from mappings:\n          type: array\n          description: \"Mappings that can be used to convert records conforming to another scheme into records conforming to the current schemes.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:c\\d+$'\n        endorsements:\n          type: array\n          items:\n            type: string\n            description: \"Endorsements of the current scheme or made by the current organization.\"\n            pattern: '^msc:e\\d+$'\n        maintained resources:\n          type: array\n          description: \"Schemes, tools and mappings maintained by the current organization.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:(m|t|c)\\d+$'\n        funded resources:\n          type: array\n          description: \"Schemes, tools and mappings funded by the current organization.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:(m|t|c)\\d+$'\n        used schemes:\n          type: array\n          description: \"Schemes that are known to be used by the current organization.\"\n          items:\n            type: string\n            description: \"Non-semantic internal identifier for the related record.\"\n            pattern: '^msc:m\\d+$'\n    ThesaurusBase:\n      type: object\n      properties:\n        \"@context\":\n          type: object\n          properties:\n            skos:\n              type: string\n        \"@id\":\n          type: string\n        \"@type\":\n          type: string\n        \"skos:prefLabel\":\n          type: array\n          items:\n            type: object\n            properties:\n              \"@value\":\n                type: string\n              \"@language\":\n                type: string\n    ThesaurusConceptBroader:\n      type: object\n      properties:\n        \"skos:broader\":\n          type: array\n          items:\n            allOf:\n            - properties:\n                \"@id\":\n                  type: string\n                \"@type\":\n                  type: string\n            - $ref: '#/components/schemas/ThesaurusConceptBroader'\n        \"skos:topConceptOf\":\n          type: array\n          items:\n            type: object\n            properties:\n              \"@id\":\n                type: string\n    ThesaurusConceptNarrower:\n      type: object\n      properties:\n        \"skos:narrower\":\n          type: array\n          items:\n            allOf:\n            - properties:\n                \"@id\":\n                  type: string\n                \"@type\":\n                  type: string\n            - $ref: '#/components/schemas/ThesaurusConceptNarrower'\n    ThesaurusConceptScheme:\n      allOf:\n      - $ref: '#/components/schemas/ThesaurusBase'\n      - properties:\n          \"skos:hasTopConcept\":\n            type: array\n            items:\n              type: object\n              properties:\n                \"@id\":\n                  type: string\n    ThesaurusConcept:\n      allOf:\n      - $ref: '#/components/schemas/ThesaurusBase'\n      - $ref: '#/components/schemas/ThesaurusConceptBroader'\n      - $ref: '#/components/schemas/ThesaurusConceptNarrower'\n    PatchRelation:\n      type: array\n      items:\n        type: object\n        oneOf:\n        - properties:\n            op:\n              type: string\n              description: \"Operation to perform.\"\n              enum:\n              - add\n              - remove\n              - replace\n              - test\n            path:\n              type: string\n              description: \"Type of relationship to add.\"\n              enum:\n              - \"/parent schemes\"\n              - \"/supported schemes\"\n              - \"/input schemes\"\n              - \"/output schemes\"\n              - \"/endorsed schemes\"\n              - \"/maintainers\"\n              - \"/funders\"\n              - \"/users\"\n              - \"/originators\"\n            value:\n              type: array\n              description: \"When adding, the MSCIDs to add to the new relationship (acts like replacing if relationship already exists); when replacing, the MSCIDs with which to replace the current array; when testing, the MSCIDs with which to compare the current array; ignored when removing.\"\n              items:\n                type: string\n                description: \"Non-semantic internal identifier for the related record.\"\n                pattern: '^msc:(m|g)\\d+$'\n        - properties:\n            op:\n              type: string\n              description: \"Operation to perform.\"\n              enum:\n              - add\n              - remove\n              - replace\n              - test\n            path:\n              type: string\n              description: \"Item on which to perform the operation.\"\n              pattern: '^/((parent|supported|input|output|endorsed) schemes|maintainers|funders|users|originators)(/(-|\\d+))?$'\n            value:\n              type: string\n              description: \"Non-semantic internal identifier for the related record. When adding, the MSCID to insert at that position; when replacing, the MSCID with which to replace the current MSCID at that position; when testing, the MSCID with which to compare the current MSCID at that position; ignored when removing.\"\n              pattern: '^msc:(m|g)\\d+$'\n    PatchInvRelation:\n      type: array\n      items:\n        type: object\n        oneOf:\n        - properties:\n            op:\n              type: string\n              description: \"Operation to perform.\"\n              enum:\n              - add\n              - remove\n              - replace\n              - test\n            path:\n              type: string\n              description: \"Type of relationship to add.\"\n              enum:\n              - \"/child schemes\"\n              - \"/maintained schemes\"\n              - \"/funded schemes\"\n              - \"/used schemes\"\n              - \"/tools\"\n              - \"/maintained tools\"\n              - \"/funded tools\"\n              - \"/input to mappings\"\n              - \"/output from mappings\"\n              - \"/maintained mappings\"\n              - \"/funded mappings\"\n              - \"/endorsements\"\n            value:\n              type: array\n              description: \"When adding, the MSCIDs to add to the new relationship (acts like replacing if relationship already exists); when replacing, the MSCIDs with which to replace the current array; when testing, the MSCIDs with which to compare the current array; ignored when removing.\"\n              items:\n                type: string\n                description: \"Non-semantic internal identifier for the related record.\"\n                pattern: '^msc:(m|t|c|e)\\d+$'\n        - properties:\n            op:\n              type: string\n              description: \"Operation to perform.\"\n              enum:\n              - add\n              - remove\n              - replace\n              - test\n            path:\n              type: string\n              description: \"Item on which to perform the operation.\"\n              pattern: '^/((child|used) schemes|(maintained|funded) (schemes|tools|mappings)|tools|(input to|output from) mappings|endorsements)(/(-|\\d+))?$'\n            value:\n              type: string\n              description: \"Non-semantic internal identifier for the related record. When adding, the MSCID to insert at that position; when replacing, the MSCID with which to replace the current MSCID at that position; when testing, the MSCID with which to compare the current MSCID at that position; ignored when removing.\"\n              pattern: '^msc:(m|t|c|e)\\d+$'\n    Response:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n    ResponseItemMetadataScheme:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/MetadataScheme'\n    ResponseItemOrganization:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/Organization'\n    ResponseItemTool:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/Tool'\n    ResponseItemMapping:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/Mapping'\n    ResponseItemEndorsement:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/Endorsement'\n    ResponseItemDataType:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/DataType'\n    ResponseItemVocabularyTerm:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/VocabularyTermOld'\n    ResponseItemRelation:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/Relation'\n    ResponseItemInvRelation:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/InvRelation'\n    ResponseItemThesaurusConceptScheme:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/ThesaurusConceptScheme'\n    ResponseItemThesaurusConcept:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/ThesaurusConcept'\n    Page:\n      type: object\n      properties:\n        itemsPerPage:\n          type: integer\n          description: \"Number of items per page of results.\"\n        currentItemCount:\n          type: integer\n          description: \"Number of items in the current page of results.\"\n        startIndex:\n          type: integer\n          description: \"Index of the first item in the current page of results. Items are counted from 1.\"\n        totalItems:\n          type: integer\n          description: \"Total number of items in the result set (equal to the index of the last item).\"\n        pageIndex:\n          type: integer\n          description: \"Index of the current page of results. Pages are counted from 1.\"\n        totalPages:\n          type: integer\n          description: \"Total number of pages in the result\"\n        nextLink:\n          type: string\n          description: \"URL from which to obtain the next page of results.\"\n        previousLink:\n          type: string\n          description: \"URL from which to obtain the previous page of results.\"\n    ResponsePageMetadataScheme:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            allOf:\n              - $ref: '#/components/schemas/Page'\n              - properties:\n                  items:\n                    type: array\n                    description: \"Items in the current page of results.\"\n                    items:\n                      $ref: '#/components/schemas/MetadataScheme'\n    ResponsePageOrganization:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            allOf:\n              - $ref: '#/components/schemas/Page'\n              - properties:\n                  items:\n                    type: array\n                    description: \"Items in the current page of results.\"\n                    items:\n                      $ref: '#/components/schemas/Organization'\n    ResponsePageTool:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            allOf:\n              - $ref: '#/components/schemas/Page'\n              - properties:\n                  items:\n                    type: array\n                    description: \"Items in the current page of results.\"\n                    items:\n                      $ref: '#/components/schemas/Tool'\n    ResponsePageMapping:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            allOf:\n              - $ref: '#/components/schemas/Page'\n              - properties:\n                  items:\n                    type: array\n                    description: \"Items in the current page of results.\"\n                    items:\n                      $ref: '#/components/schemas/Mapping'\n    ResponsePageEndorsement:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            allOf:\n              - $ref: '#/components/schemas/Page'\n              - properties:\n                  items:\n                    type: array\n                    description: \"Items in the current page of results.\"\n                    items:\n                      $ref: '#/components/schemas/Endorsement'\n    ResponsePageDataType:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            allOf:\n              - $ref: '#/components/schemas/Page'\n              - properties:\n                  items:\n                    type: array\n                    description: \"Items in the current page of results.\"\n                    items:\n                      $ref: '#/components/schemas/DataType'\n    ResponsePageVocabularyTerm:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            allOf:\n              - $ref: '#/components/schemas/Page'\n              - properties:\n                  items:\n                    type: array\n                    description: \"Items in the current page of results.\"\n                    items:\n                      $ref: '#/components/schemas/VocabularyTermOld'\n    ResponsePageRelation:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            allOf:\n              - $ref: '#/components/schemas/Page'\n              - properties:\n                  items:\n                    type: array\n                    description: \"Items in the current page of results.\"\n                    items:\n                      $ref: '#/components/schemas/Relation'\n    ResponsePageInvRelation:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            allOf:\n              - $ref: '#/components/schemas/Page'\n              - properties:\n                  items:\n                    type: array\n                    description: \"Items in the current page of results.\"\n                    items:\n                      $ref: '#/components/schemas/InvRelation'\n    ResponsePageThesaurusConcept:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            allOf:\n              - $ref: '#/components/schemas/Page'\n              - properties:\n                  items:\n                    type: array\n                    description: \"Items in the current page of results.\"\n                    items:\n                      $ref: '#/components/schemas/ThesaurusConcept'\n    QA:\n      type: object\n      properties:\n        meta:\n          type: object\n          description: \"Information concerning this response.\"\n          properties:\n            conformance:\n              type: string\n              description: \"Conformance level of the record.\"\n              enum:\n                - complete\n                - useful\n                - valid\n    ResponseSuccessMetadataScheme:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - $ref: '#/components/schemas/QA'\n      - properties:\n          data:\n            $ref: '#/components/schemas/MetadataScheme'\n    ResponseSuccessOrganization:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - $ref: '#/components/schemas/QA'\n      - properties:\n          data:\n            $ref: '#/components/schemas/Organization'\n    ResponseSuccessTool:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - $ref: '#/components/schemas/QA'\n      - properties:\n          data:\n            $ref: '#/components/schemas/Tool'\n    ResponseSuccessMapping:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - $ref: '#/components/schemas/QA'\n      - properties:\n          data:\n            $ref: '#/components/schemas/Mapping'\n    ResponseSuccessEndorsement:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - $ref: '#/components/schemas/QA'\n      - properties:\n          data:\n            $ref: '#/components/schemas/Endorsement'\n    ResponseSuccessDataType:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/DataType'\n    ResponseSuccessVocabularyTerm:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/VocabularyTermOld'\n    ResponseSuccessRelation:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/Relation'\n    ResponseSuccessInvRelation:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - properties:\n          data:\n            $ref: '#/components/schemas/InvRelation'\n    SubmissionResponseFailure:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n        error:\n          type: object\n          properties:\n            message:\n              type: string\n              description: \"Summary of the error(s).\"\n            errors:\n              type: array\n              description: \"Errors returned by form validation.\"\n              items:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    description: \"Nature of validation error.\"\n                  location:\n                    type: string\n                    description: \"Object key where the error occurred, in JSONPath dot notation.\"\n    ResponsePassword:\n      type: object\n      properties:\n        apiVersion:\n          type: string\n        username:\n          type: string\n          description: \"Confirmation of the username for which the password was reset.\"\n        password_reset:\n          type: boolean\n          description: \"True if the reset was successful, false otherwise.\"\n  responses:\n    UnauthorizedError:\n      description: Unauthorized access\n      headers:\n        WWW_Authenticate:\n          schema:\n            type: string\n  securitySchemes:\n    api_user:\n      type: http\n      description: \"If using an API token, use this as the username and any arbitrary string as the password.\"\n      scheme: basic\n",
			"canonicalURL": "/github.com/rd-alliance/metadata-catalog-v2@2ead7cbe28dc68ceece81cddeec209b94866cb5d/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rd-alliance/metadata-catalog-v2/blob/2ead7cbe28dc68ceece81cddeec209b94866cb5d/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/api2/thesaurus/concepts\": get: responses: code 200: contents: media: \"application/json\": generate schema: allOf: field data: allOf: field items: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field skos:broader: item: allOf: field @id: schema depth limit (1000) exceeded",
	"NotImplemented": [
		"discriminator inference"
	]
}