{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jmlue42/spectral-jsonapi-ruleset"
		},
		"file": {
			"name": "example-jsonapi-oas.yaml",
			"size": 0,
			"path": "test/assets/example-jsonapi-oas.yaml",
			"byteSize": 18869,
			"content": "openapi: 3.0.3\ninfo:\n  title: Sample JSON:API OAS File\n  description: Example file on how a JSON:API compliant API can be described in OAS v3+\n  version: 1.0.0\n  contact:\n    name: Jeff Marquez\n    email: some_email@domain.com\n    url: http://www.example.com\ntags:\n  - name: collection\n    description: tag description\n  - name: single\n    description: tag description\nservers:\n  - url: https://api.domain.com/v1\n    description: production\n  - url: https://api-sandbox.domain.com/v1\n    description: production sandbox\n  - url: https://api.{environment}.domain.com/v1\n    description: pre-production\n    variables:\n      environment:\n        enum:\n          - 'dev'\n          - 'qa'\n        default: 'dev'\npaths:\n  /myResources:\n    get:\n      tags:\n        - collection\n      summary: Short Description\n      description: A longer MEANINGFUL descripition. Do not copy summary.\n      security:\n        - ApiKeyAuth: []\n          AuthCode:\n            - 'actions:read'\n      parameters:\n        - $ref: '#/components/parameters/filter'\n      responses:\n        '200':\n          $ref: '#/components/responses/MyResource_Collection'\n        '401':\n          $ref: '#/components/responses/401Error'\n        '403':\n          $ref: '#/components/responses/403Error'\n        '406':\n          $ref: '#/components/responses/DefaultError'\n        '415':\n          $ref: '#/components/responses/DefaultError'  \n        'default':\n          $ref: '#/components/responses/DefaultError'\n    post:\n      tags:\n        - single\n      summary: Create Resource\n      description: A longer MEANINGFUL descripition. Do not copy summary.\n      security:\n        - ApiKeyAuth: []\n          AuthCode:\n            - 'actions:write'\n      requestBody:\n        $ref: '#/components/requestBodies/MyResource_Post'\n      responses:\n        '201':\n          $ref: '#/components/responses/MyResource_Single'\n        '401':\n          $ref: '#/components/responses/401Error'\n        '403':\n          $ref: '#/components/responses/403Error'\n        '406':\n          $ref: '#/components/responses/DefaultError'\n        '415':\n          $ref: '#/components/responses/DefaultError'\n        'default':\n          $ref: '#/components/responses/DefaultError'\n  /myResources/{id}:\n    get:\n      tags:\n        - single\n      summary: Short Description\n      description: A longer MEANINGFUL descripition. Do not copy summary.\n      security:\n        - ApiKeyAuth: []\n          AuthCode:\n            - 'actions:read'\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/fields'\n      responses:\n        '200':\n          $ref: '#/components/responses/MyResource_Single'\n        '401':\n          $ref: '#/components/responses/401Error'\n        '403':\n          $ref: '#/components/responses/403Error'\n        '406':\n          $ref: '#/components/responses/DefaultError'\n        '415':\n          $ref: '#/components/responses/DefaultError'\n        'default':\n          $ref: '#/components/responses/DefaultError'\n    patch:\n      tags:\n        - single\n      summary: Short Description\n      description: A longer MEANINGFUL descripition. Do not copy summary.\n      security:\n        - ApiKeyAuth: []\n          AuthCode:\n            - 'actions:write'\n      parameters:\n        - $ref: '#/components/parameters/id'\n      requestBody:\n        $ref: '#/components/requestBodies/MyResource_Patch'\n      responses:\n        '200':\n          $ref: '#/components/responses/MyResource_Single'\n        '401':\n          $ref: '#/components/responses/401Error'\n        '403':\n          $ref: '#/components/responses/403Error'\n        '406':\n          $ref: '#/components/responses/DefaultError'\n        '415':\n          $ref: '#/components/responses/DefaultError'\n        'default':\n          $ref: '#/components/responses/DefaultError'\n    delete:\n      tags:\n        - single\n      summary: Short Description\n      description: A longer MEANINGFUL descripition. Do not copy summary.\n      security:\n        - ApiKeyAuth: []\n          AuthCode:\n            - 'actions:delete'\n      parameters:\n        - $ref: '#/components/parameters/id'\n      responses:\n        '204':\n          description: Successful Operation. No Content.\n        '401':\n          $ref: '#/components/responses/401Error'\n        '403':\n          $ref: '#/components/responses/403Error'\n        '406':\n          $ref: '#/components/responses/DefaultError'\n        '415':\n          $ref: '#/components/responses/DefaultError'\n        'default':\n          $ref: '#/components/responses/DefaultError'\n          \ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      description: Api Key value. First level of client identification and access control to proxy/gateway\n      in: header\n      name: api-key\n    AuthCode:\n            type: oauth2\n            flows:\n                authorizationCode:\n                    authorizationUrl: 'https://api.domain.com/oauth/authorize'\n                    tokenUrl: 'https://api.domain.com/oauth/token'\n                    refreshUrl: 'https://api.domain.com/oauth/refresh'\n                    scopes:\n                        'actions:write': modify actions the end-user has access to\n                        'actions:read': read actions the end-user has access to\n                        'actions:delete': delete actions the end-user has access to\n  headers:\n    Location:\n      description: Location of the resource in question\n      schema:\n        type: string\n        example: http://api.domain.com/v1/{resource-colleciton-name}/{id}\n    WWWAuthenticate:\n      description: Authentication Challenge Information\n      schema:\n        type: string\n        example: Bearer realm=domain.com\n  parameters:\n    id:\n      name: id\n      description: resource reference id\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[afA-F0-9]{4}-[a-fA-F0-9]{12}){1}$'\n        example: 4257c52f-6c78-4747-8106-e185c081436b\n    filter:\n      name: filter\n      description: schema for 'filter' query parameter\n      in: query\n      schema:\n        type: object\n      style: deepObject\n      example:\n        attribute: \"value\"\n        attribute_2: \"value1,value2\"\n        relationship.attribute: \"value\"\n    fields:\n      name: fields\n      description: schema for 'fields' query parameter\n      in: query\n      schema:\n        type: object\n      style: deepObject\n      example:\n        resourceType: \"fieldName\"\n        resourceType2: \"filedName1,fieldName2\"\n  requestBodies:\n    MyResource_Patch:\n      required: true\n      content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/MyResourcePatchObject'\n    MyResource_Post:\n      required: true\n      content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/MyResourcePostObject'\n  responses:\n    MyResource_Single:\n      description: Successful Operation\n      headers:\n        Location:\n          $ref: '#/components/headers/Location'\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            required:\n              - links\n              - data\n            properties:\n              links:\n                type: object\n                properties:\n                  self:\n                    allOf:\n                      - $ref: '#/components/schemas/Link'\n                      - example: https://api.domain.com/v1/myResources/{id}\n              data:\n                $ref: '#/components/schemas/MyResourceResponseObject'\n    MyResource_Collection:\n      description: Successful Operation\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            required:\n              - links\n              - data\n            properties:\n              links:\n                type: object\n                properties:\n                  self:\n                    allOf:\n                      - $ref: '#/components/schemas/Link'\n                      - example: https://api.domain.com/v1/myResources\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MyResourceResponseObject'\n    401Error:\n      description: 'Unauthorized: Invalid or Expired Authentication'\n      headers:\n        WWWAuthenticate:\n          $ref: '#/components/headers/WWWAuthenticate'\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            required:\n              - errors\n            properties:\n              errors:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/BaseErrorObject'\n                    - type: object\n                      description: 'Unauthorized: Invalid or Expired Authentication'\n                      properties:\n                        status:\n                          type: string\n                          enum: \n                            - \"401\"\n                        title:\n                          type: string\n                          enum:\n                            - \"Unauthorized\"\n          example:\n            errors:\n              - id: e50d3928-c1f0-4e10-888b-b110734656ab\n                status: \"401\"\n                title: Unauthorized\n    403Error:\n      description: 'Forbidden: Request does not have necessary permissions'\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            required:\n              - errors\n            properties:\n              errors:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/BaseErrorObject'\n                    - type: object\n                      description: 'Forbidden: Request does not have necessary permissions'\n                      properties:\n                        status:\n                          type: string\n                          enum: \n                            - \"403\"\n                        title:\n                          type: string\n                          enum:\n                            - \"Forbidden\"\n          example:\n            errors:\n              - id: e50d3928-c1f0-4e10-888b-b110734656ab\n                status: \"403\"\n                title: Forbidden\n    DefaultError:\n      description: Error\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            required:\n              - errors\n            properties:\n              errors:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BaseErrorObject'\n          examples:\n            '400 - Bad Request':\n              value:\n                errors:\n                  - id: e50d3928-c1f0-4e10-888b-b110734656ab\n                    status: \"400\"\n                    title: Bad Request\n                    source:\n                      parameter: \"id\"\n            '404 - Not Found':\n              value:\n                errors:\n                  - id: e50d3928-c1f0-4e10-888b-b110734656ab\n                    status: \"404\"\n                    title: Not Found\n            '500 - Server Error':\n              value:\n                errors:\n                  - id: e50d3928-c1f0-4e10-888b-b110734656ab\n                    status: \"500\"\n                    title: Internal Server Error\n            'Multiple Errors':\n              value:\n                errors:\n                  - id: e50d3928-c1f0-4e10-888b-b110734656ab\n                    status: \"400\"\n                    title: Bad Request\n                    source:\n                      parameter: \"id\"\n                  - id: b6ad7d24-4dec-4ba0-931c-52731a9469e3\n                    status: \"400\"\n                    title: Bad Request\n                    source:\n                      pointer: \"/data/attributes/name\"\n  schemas:\n    MyResourceResponseObject:\n      allOf:\n        - $ref: '#/components/schemas/IdentifierObject'\n        - type: object\n          required:\n            - attributes\n            - relationships\n          properties:\n            type:\n              enum:\n                - resources\n            attributes:\n              type: object\n              required:\n                - name\n              properties:\n                name:\n                  type: string\n                  example: do-hickey\n                description:\n                  type: string\n                  example: thing that does stuff\n            relationships:\n              type: object\n              properties:\n                manufacturer:\n                  type: object\n                  required:\n                    - links\n                    - data\n                  properties:\n                    links:\n                      type: object\n                      required:\n                        - self\n                        - related\n                      properties:\n                        self:\n                          allOf:\n                            - $ref: '#/components/schemas/Link'\n                            - example: http://api.domain.com/v1/myResources/{id}/relationships/manufacturers\n                        related:\n                          allOf:\n                            - $ref: '#/components/schemas/Link'\n                            - example: http://api.domain.com/v1/manufacturers/{id}\n                    data:\n                      allOf:\n                        - $ref: '#/components/schemas/RelationshipDataObject'\n                        - type: object\n                          properties:\n                            type:\n                              enum:\n                                - manufacturers\n    MyResourcePostObject:\n      type: object\n      required:\n        - type\n        - attributes\n      properties:\n        type:\n          type: string\n          enum:\n            - resources\n        attributes:\n          type: object\n          required:\n            - name\n          properties:\n            name:\n              type: string\n              example: do-hickey\n            description:\n              type: string\n              example: thing that does stuff\n        relationships:\n          type: object\n          required:\n            - manufacturer\n          properties:\n            manufacturer:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  allOf:\n                    - $ref: '#/components/schemas/RelationshipDataObject'\n                    - type: object\n                      properties:\n                        type:\n                          enum:\n                            - manufacturers\n    MyResourcePatchObject:\n      allOf:\n        - $ref: '#/components/schemas/IdentifierObject'\n        - type: object\n          required:\n            - attributes\n          properties:\n            type:\n              enum:\n                - resources\n            attributes:\n              type: object\n              required:\n                - name\n              properties:\n                name:\n                  type: string\n                  example: do-hickey\n                description:\n                  type: string\n                  example: thing that does stuff\n                  nullable: true\n            relationships:\n              type: object\n              required:\n                - manufacturer\n              properties:\n                manufacturer:\n                  type: object\n                  required:\n                    - data\n                  properties:\n                    data:\n                      allOf:\n                        - $ref: '#/components/schemas/RelationshipDataObject'\n                        - type: object\n                          properties:\n                            type:\n                              enum:\n                                - manufacturers\n                      nullable: true\n    Link:\n      type: string\n    IdentifierObject:\n      type: object\n      required:\n        - id\n        - type\n      properties:\n        id:\n          type: string\n          pattern: '^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[afA-F0-9]{4}-[a-fA-F0-9]{12}){1}$'\n          example: 4257c52f-6c78-4747-8106-e185c081436b\n        type:\n          type: string\n    RelationshipDataObject:\n      type: object\n      required:\n        - id\n        - type\n      properties:\n        id:\n          type: string\n          pattern: '^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[afA-F0-9]{4}-[a-fA-F0-9]{12}){1}$'\n          example: 2357c52f-6c78-4747-8106-e185c08143aa\n        type:\n          type: string\n    BaseErrorObject:\n      type: object\n      description: JSON:API Error Object\n      properties:\n        id:\n          type: string\n          description: a unique identifier for this particular occurrence of the problem\n        links:\n          type: object\n          description: links that lead to further detail about the particular occurrence of the problem\n          properties:\n            about:\n              oneOf:\n                - type: string\n                - type: object\n                  required:\n                    - href\n                  properties:\n                    href:\n                      type: string\n                    meta:\n                      type: object\n                      additionalProperties: true\n        status:\n          type: string\n          description: the HTTP status code applicable to this problem\n        code:\n          type: string\n          description: an application-specific error code\n        title:\n          type: string\n          description:  a human-readable summary specific of the problem. Usually the http status friendly name.\n        detail:\n          type: string\n          description:  a human-readable explanation specific to this occurrence of the problem\n        source:\n          type: object\n          description: an object containing references to the source of the error\n          properties:\n            pointer:\n              description: a JSON Pointer [RFC6901] to the associated entity in the request document\n              oneOf:\n                - type: string\n                - type: array\n                  items:\n                    type: string\n            parameter:\n              description: a string indicating which URI query parameter caused the error\n              type: string\n        meta:\n          type: object\n          additionalProperties: true\n",
			"canonicalURL": "/github.com/jmlue42/spectral-jsonapi-ruleset@afb2e3426060b1a1bbfbec201162056cbe65e7c4/-/blob/test/assets/example-jsonapi-oas.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/jmlue42/spectral-jsonapi-ruleset/blob/afb2e3426060b1a1bbfbec201162056cbe65e7c4/test/assets/example-jsonapi-oas.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: reduce default: default: contents: unsupported content types: [application/vnd.api+json]"
}