{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ezpaarse-project/ezmesure"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "api/lib/controllers/openapi.json",
			"byteSize": 159922,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"API ezMESURE\",\n    \"version\": \"v1\",\n    \"description\": \"Use this API to interact with [ezMESURE](https://ezmesure.couperin.org).\",\n    \"license\": {\n      \"name\": \"CeCILL 2.1\",\n      \"url\": \"http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.html\"\n    },\n    \"contact\": {\n      \"email\": \"ezteam@couperin.org\",\n      \"name\": \"ezTeam\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api\",\n      \"description\": \"Current server\"\n    },\n    {\n      \"url\": \"https://ezmesure.couperin.org/api\",\n      \"description\": \"Production server\"\n    },\n    {\n      \"url\": \"https://ezmesure-preprod.couperin.org/api\",\n      \"description\": \"Staging server for testing\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Administration\"\n    },\n    {\n      \"name\": \"Authentication\"\n    },\n    {\n      \"name\": \"Basics\"\n    },\n    {\n      \"name\": \"Files\"\n    },\n    {\n      \"name\": \"Indices\"\n    },\n    {\n      \"name\": \"Institutions\"\n    },\n    {\n      \"name\": \"Jobs\"\n    },\n    {\n      \"name\": \"Kibana\"\n    },\n    {\n      \"name\": \"Metrics\"\n    },\n    {\n      \"name\": \"Sushi\"\n    },\n    {\n      \"name\": \"Tasks\"\n    },\n    {\n      \"name\": \"Users\"\n    }\n  ],\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"responses\": {\n      \"UnauthorizedError\": {\n        \"description\": \"Access token is missing or invalid\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Error\"\n            }\n          }\n        }\n      },\n      \"ForbiddenError\": {\n        \"description\": \"Action is forbidden for the authenticated user\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Error\"\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\",\n            \"example\": \"Authentication Error\",\n            \"description\": \"The error message\",\n            \"readOnly\": true\n          },\n          \"status\": {\n            \"type\": \"integer\",\n            \"minimum\": 100,\n            \"exclusiveMaximum\": true,\n            \"maximum\": 600,\n            \"readOnly\": true\n          }\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"description\": \"\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"john.doo\",\n            \"readOnly\": true\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"example\": [\n              \"kibana_user\",\n              \"univ-foobar\"\n            ],\n            \"uniqueItems\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"example\": \"bibcnrs\"\n            }\n          },\n          \"full_name\": {\n            \"type\": \"string\",\n            \"example\": \"John Doo\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"doo.john@ezpaarse.org\",\n            \"format\": \"email\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"createdAt\": {\n                \"type\": \"string\",\n                \"example\": \"2018-04-12T13:33:00.930Z\",\n                \"format\": \"date-time\"\n              },\n              \"updatedAt\": {\n                \"type\": \"string\",\n                \"example\": \"2018-05-15T03:23:43.391Z\",\n                \"format\": \"date-time\"\n              },\n              \"remoteUser\": {\n                \"type\": \"string\",\n                \"example\": \"doo.john.6\"\n              },\n              \"persistentId\": {\n                \"type\": \"string\",\n                \"example\": \"https://ezpaarse.org/idp!https://ezmesure.couperin.org/sp!XJ3AGRS5J74DD6PMGS7UD4M5UOGIWQPN\"\n              },\n              \"uid\": {\n                \"type\": \"string\",\n                \"example\": \"doo.john.6\"\n              },\n              \"unit\": {\n                \"type\": \"string\",\n                \"example\": \"PL123\"\n              },\n              \"idp\": {\n                \"type\": \"string\",\n                \"example\": \"https://ezpaarse.org/idp\"\n              },\n              \"org\": {\n                \"type\": \"string\",\n                \"example\": \"EZPAARSE\"\n              },\n              \"affiliation\": {\n                \"type\": \"string\",\n                \"example\": \"employee@ezpaarse.org\"\n              },\n              \"acceptedTerms\": {\n                \"type\": \"boolean\",\n                \"example\": true\n              },\n              \"eppn\": {\n                \"type\": \"string\",\n                \"example\": \"doo.john.6@ezpaarse.org\"\n              }\n            }\n          }\n        }\n      },\n      \"Institution\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Institution identifier\",\n            \"example\": \"496ccfa0-1f73-11eb-a8a0-4f0bd0a37c79\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Institution name\",\n            \"example\": \"University of Foobar\"\n          },\n          \"acronym\": {\n            \"type\": \"string\",\n            \"example\": \"UFO\",\n            \"description\": \"Institution acronym\"\n          },\n          \"website\": {\n            \"type\": \"string\",\n            \"description\": \"URL of the institution website\",\n            \"example\": \"http://univ-foobar.fr\",\n            \"format\": \"uri\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"description\": \"City of the institution\",\n            \"example\": \"Paris\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"domains\": {\n            \"type\": \"array\",\n            \"description\": \"Domains owned by the institution\",\n            \"items\": {\n              \"type\": \"string\",\n              \"example\": \"univ-foobar.fr\"\n            }\n          },\n          \"indexPrefix\": {\n            \"type\": \"string\",\n            \"example\": \"univ-foobar\",\n            \"description\": \"The index prefix allocated to the institution\"\n          },\n          \"space\": {\n            \"type\": \"string\",\n            \"example\": \"univ-foobar\",\n            \"description\": \"ID of the space allocated to the institution\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"example\": \"univ-foobar\",\n            \"description\": \"Role associated to the institution. Users with this role are considered members.\"\n          },\n          \"uai\": {\n            \"type\": \"string\",\n            \"example\": \"0362917P\",\n            \"description\": \"UAI (Unité Administrative Immatriculée) of the institution\"\n          },\n          \"creator\": {\n            \"type\": \"string\",\n            \"description\": \"Username of the user that declared the institution. Removed once the institution is validated.\",\n            \"example\": \"john.doe\",\n            \"nullable\": true\n          },\n          \"validated\": {\n            \"type\": \"boolean\",\n            \"description\": \"True when the institution has been validated\"\n          },\n          \"indexCount\": {\n            \"type\": \"number\",\n            \"example\": 1876124,\n            \"description\": \"Total number of documents under the institution prefix\"\n          },\n          \"logoId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier of the institution logo image\",\n            \"example\": \"32a1c269738c43463312f09821b22323.png\",\n            \"nullable\": true\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-11-05T14:29:17.849Z\",\n            \"description\": \"Datetime of the latest institution update\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"example\": \"2020-11-05T14:29:17.849Z\",\n            \"format\": \"date-time\",\n            \"description\": \"Datetime of the institution creation\"\n          },\n          \"auto\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"ezpaarse\": {\n                \"type\": \"boolean\",\n                \"description\": \"True if the institution has automated log processing with ezPAARSE\"\n              },\n              \"ezmesure\": {\n                \"type\": \"boolean\",\n                \"description\": \"True if the institution has automated consultations' deposit into ezMESURE\"\n              },\n              \"report\": {\n                \"type\": \"boolean\",\n                \"description\": \"True if the institution has an automatic report setup on ezMESURE\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      },\n      \"InstitutionsRefresh\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"errors\": {\n            \"type\": \"boolean\",\n            \"description\": \"true if one or more institutions failed to refresh\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"example\": \"University of Foobar\",\n                  \"description\": \"name of the institution\"\n                },\n                \"indexPrefix\": {\n                  \"type\": \"string\",\n                  \"example\": \"univ-foobar\",\n                  \"description\": \"index prefix of the institution\"\n                },\n                \"indexCount\": {\n                  \"type\": \"integer\",\n                  \"example\": 8542,\n                  \"description\": \"total number of documents stored under the index prefix\"\n                },\n                \"docContactName\": {\n                  \"type\": \"string\",\n                  \"example\": \"John Doe\",\n                  \"description\": \"name of the documentary contact\"\n                },\n                \"techContactName\": {\n                  \"type\": \"string\",\n                  \"example\": \"John Doe\",\n                  \"description\": \"name of the technical contact\"\n                },\n                \"updated\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"true is something changed\"\n                },\n                \"error\": {\n                  \"type\": \"string\",\n                  \"description\": \"an error message if refresh failed\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"IndexList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_shards\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"total\": {\n                \"type\": \"integer\"\n              },\n              \"successful\": {\n                \"type\": \"integer\"\n              },\n              \"failed\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"_all\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"primaries\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"docs\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"count\": {\n                        \"type\": \"integer\"\n                      },\n                      \"deleted\": {\n                        \"type\": \"integer\"\n                      }\n                    }\n                  }\n                }\n              },\n              \"total\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"docs\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"count\": {\n                        \"type\": \"integer\"\n                      },\n                      \"deleted\": {\n                        \"type\": \"integer\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"indices\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"primaries\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"docs\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\"\n                        },\n                        \"deleted\": {\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  }\n                },\n                \"total\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"docs\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\"\n                        },\n                        \"deleted\": {\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"IndexInsert\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"took\": {\n            \"type\": \"integer\",\n            \"description\": \"Response time in ms\"\n          },\n          \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of consultations received\"\n          },\n          \"inserted\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of inserted consultations\"\n          },\n          \"updated\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of updated consultations\"\n          },\n          \"failed\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of consultations that failed to be inserted\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"description\": \"First error messages from consultations that failed to be inserted\",\n            \"items\": {\n              \"type\": \"string\",\n              \"example\": \"log_id is missing\"\n            }\n          }\n        }\n      },\n      \"IndexRemove\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"took\": {\n            \"type\": \"integer\"\n          },\n          \"total\": {\n            \"type\": \"integer\"\n          },\n          \"deleted\": {\n            \"type\": \"integer\"\n          },\n          \"batches\": {\n            \"type\": \"integer\"\n          },\n          \"timed_out\": {\n            \"type\": \"boolean\"\n          },\n          \"version_conflicts\": {\n            \"type\": \"integer\"\n          },\n          \"noops\": {\n            \"type\": \"integer\"\n          },\n          \"throttled_millis\": {\n            \"type\": \"integer\"\n          },\n          \"requests_per_second\": {\n            \"type\": \"integer\"\n          },\n          \"throttled_until_millis\": {\n            \"type\": \"integer\"\n          },\n          \"retries\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bulk\": {\n                \"type\": \"integer\"\n              },\n              \"search\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"failures\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"Metrics\": {\n        \"type\": \"object\",\n        \"x-examples\": {},\n        \"properties\": {\n          \"took\": {\n            \"type\": \"integer\",\n            \"example\": 280,\n            \"description\": \"response time in ms\"\n          },\n          \"docs\": {\n            \"type\": \"integer\",\n            \"example\": 1000,\n            \"description\": \"total number of documents\"\n          },\n          \"dateCoverage\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"min\": {\n                \"type\": \"integer\",\n                \"description\": \"minimum date covered by the documents\"\n              },\n              \"max\": {\n                \"type\": \"integer\",\n                \"description\": \"maximum date covered by the documents\"\n              }\n            }\n          },\n          \"metrics\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"days\": {\n                \"type\": \"integer\",\n                \"description\": \"number of days covered by all documents\"\n              },\n              \"titles\": {\n                \"type\": \"integer\",\n                \"description\": \"number of different publication titles\"\n              },\n              \"platforms\": {\n                \"type\": \"integer\",\n                \"description\": \"number of different platforms\"\n              },\n              \"indices\": {\n                \"type\": \"integer\",\n                \"description\": \"number of indices\"\n              }\n            }\n          }\n        }\n      },\n      \"FileList\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"example\": \"ezproxy.2020.07.01.ec.csv\",\n              \"description\": \"File name\"\n            },\n            \"size\": {\n              \"type\": \"integer\",\n              \"example\": 1342632,\n              \"description\": \"File size in bytes\"\n            },\n            \"createdAt\": {\n              \"type\": \"string\",\n              \"example\": \"2020-11-05T16:15:27.929Z\",\n              \"format\": \"date-time\",\n              \"description\": \"File creation date\"\n            },\n            \"lastModified\": {\n              \"type\": \"string\",\n              \"example\": \"2020-11-05T16:15:27.929Z\",\n              \"format\": \"date-time\",\n              \"description\": \"File modification date\"\n            }\n          }\n        }\n      },\n      \"Sushi\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"645c4000-1f89-11eb-836f-a3005ccf2dc6\",\n            \"description\": \"ID of the sushi item\",\n            \"readOnly\": true\n          },\n          \"vendor\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"example\": \"Akademiai Kiado\",\n            \"description\": \"Vendor name\"\n          },\n          \"requestorId\": {\n            \"type\": \"string\",\n            \"description\": \"Requestor ID\"\n          },\n          \"customerId\": {\n            \"type\": \"string\",\n            \"description\": \"Customer ID\"\n          },\n          \"apiKey\": {\n            \"type\": \"string\",\n            \"description\": \"API key\"\n          },\n          \"comment\": {\n            \"type\": \"string\",\n            \"description\": \"Arbitrary comment\"\n          },\n          \"package\": {\n            \"type\": \"string\",\n            \"description\": \"ezMESURE package ID\"\n          },\n          \"institutionId\": {\n            \"type\": \"string\",\n            \"example\": \"f438c3f0-152b-11eb-8113-ff14fcf1fe5b\",\n            \"format\": \"uuid\",\n            \"description\": \"ID of the institution that owns the sushi item\"\n          },\n          \"endpointId\": {\n            \"type\": \"string\",\n            \"example\": \"f438c3f0-152b-11eb-8113-ff14fcf1fe5b\",\n            \"format\": \"uuid\",\n            \"description\": \"ID of the associated SUSHI endpoint\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-11-05T17:07:31.967Z\",\n            \"description\": \"Last modification of the sushi item\",\n            \"readOnly\": true\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-11-05T17:07:31.967Z\",\n            \"description\": \"Creation date of the sushi item\",\n            \"readOnly\": true\n          },\n          \"connection\": {\n            \"type\": \"object\",\n            \"description\": \"State of the latest connection test\",\n            \"readOnly\": true,\n            \"properties\": {\n              \"success\": {\n                \"type\": \"boolean\",\n                \"description\": \"Whether the latest connection test succeeded\"\n              },\n              \"date\": {\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"description\": \"Date of the latest connection test\"\n              },\n              \"exceptions\": {\n                \"type\": \"array\",\n                \"description\": \"Exceptions that was thrown by the latest connection test\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"description\": \"Parameters that should be added in the query string\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"Name of the query parameter\"\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"Value of the query parameter\"\n              }\n            },\n            \"required\": [\n              \"name\"\n            ]\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"package\",\n          \"institutionId\",\n          \"endpointId\",\n          \"updatedAt\",\n          \"createdAt\"\n        ]\n      },\n      \"SushiEndpoint\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"title\": \"SushiEndpoint\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"645c4000-1f89-11eb-836f-a3005ccf2dc6\",\n            \"description\": \"ID of the sushi item\",\n            \"readOnly\": true\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-11-05T17:07:31.967Z\",\n            \"description\": \"Last modification of the sushi item\",\n            \"readOnly\": true\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2020-11-05T17:07:31.967Z\",\n            \"description\": \"Creation date of the sushi item\",\n            \"readOnly\": true\n          },\n          \"vendor\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"example\": \"Akademiai Kiado\",\n            \"description\": \"Vendor name\"\n          },\n          \"sushiUrl\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"example\": \"https://journals.com/rest/COUNTER/v5/reports\",\n            \"description\": \"URL of the Sushi endpoint\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"Description of the SUSHI endpoint\"\n          },\n          \"technicalProvider\": {\n            \"type\": \"string\",\n            \"description\": \"The technical provider that operates the SUSHI endpoint\"\n          },\n          \"validated\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the endpoint has been validated or not\"\n          },\n          \"requireRequestorId\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the endpoint requires a requestor ID\"\n          },\n          \"requireCustomerId\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the endpoint requires a customer ID\"\n          },\n          \"requireApiKey\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the endpoint requires an API key\"\n          },\n          \"isSushiCompliant\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the endpoint is SUSHI compliant\"\n          },\n          \"counterVersion\": {\n            \"type\": \"string\",\n            \"example\": \"5.0.1\",\n            \"pattern\": \"^[0-9]+(\\\\.[0-9]+(\\\\.[0-9]+)?)?$\",\n            \"description\": \"The COUNTER version supported by the endpoint\"\n          },\n          \"params\": {\n            \"type\": \"array\",\n            \"description\": \"Default query params to add when requesting the endpoint\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"name\"\n              ]\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"description\": \"Tags associated with the endpoint\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Tag name\"\n            }\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"updatedAt\",\n          \"createdAt\",\n          \"vendor\",\n          \"sushiUrl\"\n        ]\n      },\n      \"Member\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"full_name\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"Member full name\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"description\": \"Kibana roles of the member\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"readonly\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the member has Kibana write permission\"\n          },\n          \"docContact\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the member is the documentary contact\"\n          },\n          \"techContact\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the member is the technical contact\"\n          }\n        },\n        \"required\": [\n          \"full_name\",\n          \"roles\",\n          \"readonly\",\n          \"docContact\",\n          \"techContact\"\n        ]\n      },\n      \"Space\": {\n        \"description\": \"A kibana Space\",\n        \"type\": \"object\",\n        \"x-examples\": {\n          \"example-1\": {\n            \"id\": \"toulouse-publisher\",\n            \"name\": \"Espace Toulouse\",\n            \"description\": \"espace éditeur de Toulouse\",\n            \"initials\": \"TL\",\n            \"color\": \"#000000\",\n            \"disabledFeatures\": []\n          }\n        },\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"The space ID\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"The display name of the space\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"The description of the space\"\n          },\n          \"initials\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"The initials shown in the space avatar\",\n            \"maxLength\": 2\n          },\n          \"color\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"The hexadecimal color code used in the space avatar\",\n            \"pattern\": \"^#([a-f0-9]{6}|[a-f0-9]{3})$\",\n            \"example\": \"#6e557e\"\n          },\n          \"disabledFeatures\": {\n            \"type\": \"array\",\n            \"description\": \"The list of disabled features for the space\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"imageUrl\": {\n            \"type\": \"string\",\n            \"description\": \"The data-URL encoded image to display in the space avatar\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\"\n        ]\n      },\n      \"IndexPattern\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/KibanaSavedObject\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"attributes\": {\n                \"$ref\": \"#/components/schemas/IndexPatternAttributes\"\n              }\n            }\n          }\n        ],\n        \"description\": \"A Kibana index pattern\"\n      },\n      \"IndexPatternAttributes\": {\n        \"title\": \"IndexPatternAttributes\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"timeFieldName\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"title\"\n        ]\n      },\n      \"KibanaSavedObject\": {\n        \"title\": \"KibanaSavedObject\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"updated_at\": {\n            \"type\": \"string\"\n          },\n          \"error\": {\n            \"$ref\": \"#/components/schemas/KibanaSavedObjectError\"\n          },\n          \"attributes\": {\n            \"type\": \"object\"\n          },\n          \"references\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/KibanaSavedObjectReference\"\n            }\n          },\n          \"migrationVersion\": {\n            \"type\": \"object\"\n          },\n          \"namespaces\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"originId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"type\",\n          \"attributes\",\n          \"references\",\n          \"migrationVersion\"\n        ],\n        \"description\": \"\"\n      },\n      \"KibanaSavedObjectReference\": {\n        \"title\": \"KibanaSavedObjectReference\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"type\"\n        ]\n      },\n      \"KibanaSavedObjectError\": {\n        \"title\": \"KibanaSavedObjectError\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"statusCode\": {\n            \"type\": \"string\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"KibanaDashboardImportResponse\": {\n        \"title\": \"KibanaDashboardImportResponse\",\n        \"type\": \"object\",\n        \"description\": \"\",\n        \"properties\": {\n          \"objects\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/KibanaSavedObject\"\n            }\n          }\n        },\n        \"required\": [\n          \"objects\"\n        ]\n      },\n      \"KibanaDashboardExportResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"version\": {\n            \"type\": \"string\",\n            \"pattern\": \"^[\\\\d.]+$\"\n          },\n          \"objects\": {\n            \"$ref\": \"#/components/schemas/KibanaSavedObject\"\n          }\n        },\n        \"required\": [\n          \"version\",\n          \"objects\"\n        ]\n      },\n      \"KibanaRole\": {\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"x-examples\": {\n          \"example-1\": {\n            \"metadata\": {\n              \"version\": 1\n            },\n            \"elasticsearch\": {\n              \"cluster\": [],\n              \"indices\": []\n            },\n            \"kibana\": [\n              {\n                \"base\": [],\n                \"feature\": {\n                  \"discover\": [\n                    \"all\"\n                  ],\n                  \"visualize\": [\n                    \"all\"\n                  ],\n                  \"dashboard\": [\n                    \"all\"\n                  ],\n                  \"dev_tools\": [\n                    \"read\"\n                  ],\n                  \"advancedSettings\": [\n                    \"read\"\n                  ],\n                  \"indexPatterns\": [\n                    \"read\"\n                  ]\n                },\n                \"spaces\": [\n                  \"*\"\n                ]\n              }\n            ]\n          }\n        },\n        \"properties\": {\n          \"metadata\": {\n            \"type\": \"object\",\n            \"description\": \"Metadata to be associated to the role\"\n          },\n          \"elasticsearch\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"run_as\": {\n                \"type\": \"array\",\n                \"description\": \"A list of usernames the owners of this role can impersonate\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"cluster\": {\n                \"type\": \"array\",\n                \"description\": \"A list of cluster privileges\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"indices\": {\n                \"type\": \"array\",\n                \"description\": \"A list of indices permissions entries\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"names\": {\n                      \"type\": \"array\",\n                      \"description\": \"A list of indices to which the permissions in this entry apply\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"privileges\": {\n                      \"type\": \"array\",\n                      \"description\": \"The index level privileges the owners of the role have\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"kibana\": {\n            \"type\": \"array\",\n            \"uniqueItems\": false,\n            \"description\": \"Objects that specify the Kibana privileges for the role\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"spaces\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"base\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"feature\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"kibana\"\n        ]\n      },\n      \"Task\": {\n        \"description\": \"Object representing a processing task\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"ID of the task\",\n            \"format\": \"uuid\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"Creation date of the task\",\n            \"format\": \"date\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"Last date of modification\",\n            \"format\": \"date\"\n          },\n          \"startedAt\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"format\": \"date\",\n            \"description\": \"Start date of the task\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"Status of the task\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"Type of the task\",\n            \"example\": \"sushi-harvest\"\n          },\n          \"runningTime\": {\n            \"type\": \"number\",\n            \"description\": \"How many milliseconds the task has been running\"\n          },\n          \"logs\": {\n            \"type\": \"array\",\n            \"uniqueItems\": true,\n            \"minItems\": 1,\n            \"description\": \"Log messages generated during the process\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"date\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"description\": \"Date of the log message\",\n                  \"format\": \"date\"\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"description\": \"Type of message\"\n                },\n                \"message\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"description\": \"Message content\"\n                }\n              }\n            }\n          },\n          \"params\": {\n            \"type\": \"array\",\n            \"uniqueItems\": true,\n            \"minItems\": 1,\n            \"description\": \"Parameters associated to the task\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"sushiId\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"description\": \"ID of the sushi item related to the task\",\n                  \"format\": \"uuid\"\n                },\n                \"institutionId\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"description\": \"ID of the institution related to the task\",\n                  \"format\": \"uuid\"\n                },\n                \"username\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"description\": \"ID of the institution related to the task\",\n                  \"format\": \"uuid\"\n                },\n                \"reportType\": {\n                  \"type\": \"string\",\n                  \"example\": \"tr\",\n                  \"description\": \"Type of COUNTER report\"\n                },\n                \"index\": {\n                  \"type\": \"string\",\n                  \"description\": \"Target index\"\n                },\n                \"beginDate\": {\n                  \"type\": \"string\"\n                },\n                \"endDate\": {\n                  \"type\": \"string\"\n                },\n                \"forceDownload\": {\n                  \"type\": \"string\"\n                },\n                \"endpointVendor\": {\n                  \"type\": \"string\"\n                },\n                \"sushiLabel\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"steps\": {\n            \"type\": \"array\",\n            \"uniqueItems\": true,\n            \"minItems\": 1,\n            \"description\": \"Task steps\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"label\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"description\": \"Label of the step\",\n                  \"example\": \"download\"\n                },\n                \"status\": {\n                  \"type\": \"string\",\n                  \"minLength\": 1,\n                  \"description\": \"ID of the institution related to the task\",\n                  \"enum\": [\n                    \"running\",\n                    \"finished\",\n                    \"failed\"\n                  ]\n                },\n                \"startTime\": {\n                  \"type\": \"string\",\n                  \"format\": \"date\",\n                  \"description\": \"Start time of the step\"\n                },\n                \"took\": {\n                  \"type\": \"number\",\n                  \"description\": \"How many milliseconds the step has been running\"\n                },\n                \"data\": {\n                  \"type\": \"object\",\n                  \"description\": \"Arbitrary data associated to the step\"\n                }\n              }\n            },\n            \"readOnly\": true\n          },\n          \"result\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"inserted\": {\n                \"type\": \"number\",\n                \"description\": \"Number of inserted documents\"\n              },\n              \"updated\": {\n                \"type\": \"number\",\n                \"description\": \"Number of updated documents\"\n              },\n              \"failed\": {\n                \"type\": \"number\",\n                \"description\": \"Number of documents that failed to be inserted\"\n              },\n              \"coveredPeriods\": {\n                \"type\": \"array\",\n                \"description\": \"Performance periods found in the report\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"errors\": {\n                \"type\": \"array\",\n                \"description\": \"A list of errors, if any\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"readOnly\": true\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"createdAt\",\n          \"updatedAt\"\n        ]\n      },\n      \"ElasticsearchIndex\": {\n        \"title\": \"ElasticsearchIndex\",\n        \"type\": \"object\",\n        \"description\": \"\",\n        \"properties\": {\n          \"aliases\": {\n            \"type\": \"object\",\n            \"readOnly\": true\n          },\n          \"mappings\": {\n            \"type\": \"object\",\n            \"readOnly\": true\n          },\n          \"settings\": {\n            \"type\": \"object\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"Queue\": {\n        \"description\": \"Status of a job queue\",\n        \"type\": \"object\",\n        \"x-examples\": {\n          \"example-1\": {\n            \"id\": \"sushi\",\n            \"jobCounts\": 123,\n            \"completedCount\": 123,\n            \"failedCount\": 123,\n            \"delayedCount\": 123,\n            \"activeCount\": 123,\n            \"waitingCount\": 123,\n            \"pausedCount\": 123\n          }\n        },\n        \"title\": \"Queue\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"description\": \"ID of the queue\",\n            \"example\": \"harvest\"\n          },\n          \"paused\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the queue is currently paused\"\n          },\n          \"jobCounts\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"waiting\",\n              \"active\",\n              \"completed\",\n              \"failed\",\n              \"delayed\",\n              \"paused\"\n            ],\n            \"properties\": {\n              \"waiting\": {\n                \"type\": \"number\",\n                \"description\": \"Number of waiting jobs\"\n              },\n              \"active\": {\n                \"type\": \"number\",\n                \"description\": \"Number of active jobs\"\n              },\n              \"completed\": {\n                \"type\": \"number\",\n                \"description\": \"Number of completed jobs\"\n              },\n              \"failed\": {\n                \"type\": \"number\",\n                \"description\": \"Number of failed jobs\"\n              },\n              \"delayed\": {\n                \"type\": \"number\",\n                \"description\": \"Number of delayed jobs\"\n              },\n              \"paused\": {\n                \"type\": \"number\",\n                \"description\": \"Number of paused jobs\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"paused\",\n          \"jobCounts\"\n        ]\n      }\n    }\n  },\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"summary\": \"Ping the API\",\n        \"description\": \"This route is currently only used to send a ping to the API.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"example\": \"OK\"\n                },\n                \"examples\": {\n                  \"example-1\": {\n                    \"value\": \"OK\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"ping\",\n        \"tags\": [\n          \"Basics\"\n        ]\n      }\n    },\n    \"/dashboards\": {\n      \"get\": {\n        \"summary\": \"List dashboards\",\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/KibanaSavedObject\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"operationId\": \"get-dashboards\",\n        \"description\": \"List dashboards\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"space\",\n            \"description\": \"Get dashboards with a specific space ID\"\n          }\n        ]\n      }\n    },\n    \"/dashboards/_copy\": {\n      \"post\": {\n        \"summary\": \"Copy a dashboard from one space to another\",\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/KibanaDashboardImportResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"operationId\": \"post-dashboards-_copy\",\n        \"description\": \"Copy a dashboard from one space to another\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"source\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"space\": {\n                        \"type\": \"string\",\n                        \"description\": \"ID of the source space\"\n                      },\n                      \"dashboard\": {\n                        \"type\": \"array\",\n                        \"description\": \"ID of one or more source dashboards\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    },\n                    \"required\": [\n                      \"dashboard\"\n                    ]\n                  },\n                  \"target\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"space\": {\n                        \"type\": \"string\",\n                        \"description\": \"ID of the space where the dashboard should be imported\"\n                      },\n                      \"indexPattern\": {\n                        \"type\": \"string\",\n                        \"description\": \"An index pattern to use instead of the one included in the imported objects\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"force\",\n            \"description\": \"Override existing objects\"\n          }\n        ]\n      }\n    },\n    \"/dashboards/_export\": {\n      \"get\": {\n        \"summary\": \"Export a dashboard\",\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/KibanaDashboardExportResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          },\n          \"409\": {\n            \"description\": \"Conflict\"\n          }\n        },\n        \"operationId\": \"get-dashboards-_export\",\n        \"description\": \"Export a dashboard\",\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"space\",\n            \"description\": \"ID of the space where the dashboard is located\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"array\"\n            },\n            \"in\": \"query\",\n            \"name\": \"dashboard\",\n            \"description\": \"ID of one or more dashboards to be exported\",\n            \"required\": true\n          }\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      }\n    },\n    \"/dashboards/_import\": {\n      \"post\": {\n        \"summary\": \"Import a dashboard\",\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/KibanaDashboardImportResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"operationId\": \"post-dashboards-_import\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"description\": \"Import a dashboard into a given space\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/KibanaDashboardExportResponse\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"space\",\n            \"description\": \"The space where the dashboard should be imported\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"index-pattern\",\n            \"description\": \"Replace the index-pattern of imported objects\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"force\",\n            \"description\": \"Override existing objects\"\n          }\n        ]\n      }\n    },\n    \"/files\": {\n      \"get\": {\n        \"tags\": [\n          \"Files\"\n        ],\n        \"summary\": \"List your hosted files\",\n        \"description\": \"List your hosted files.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FileList\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"getFiles\"\n      }\n    },\n    \"/files/{filename}\": {\n      \"delete\": {\n        \"tags\": [\n          \"Files\"\n        ],\n        \"summary\": \"Remove one file from your hosted files\",\n        \"description\": \"Remove one file from your hosted files.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"filename\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"univ-foobar_2017-08-17.csv\"\n            },\n            \"description\": \"The file to be removed.\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"File successfully removed\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"deleteFile\"\n      }\n    },\n    \"/files/delete_batch\": {\n      \"post\": {\n        \"tags\": [\n          \"Files\"\n        ],\n        \"summary\": \"Remove a list of files from your hosted files\",\n        \"description\": \"Remove a list of files from your hosted files.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"entries\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"example\": \"univ-foobar_2017-08-17.csv\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"List of files successfully removed\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"deleteMultipleFiles\"\n      }\n    },\n    \"/indices/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"put\": {\n        \"summary\": \"Create an index\",\n        \"operationId\": \"post-indices\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"acknowledged\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"shards_acknowledged\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"index\": {\n                      \"type\": \"string\",\n                      \"minLength\": 1\n                    }\n                  },\n                  \"required\": [\n                    \"acknowledged\",\n                    \"shards_acknowledged\",\n                    \"index\"\n                  ],\n                  \"x-examples\": {\n                    \"example-1\": {\n                      \"acknowledged\": true,\n                      \"shards_acknowledged\": true,\n                      \"index\": \"toulouse-foobarfoo\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          },\n          \"409\": {\n            \"description\": \"Conflict\"\n          }\n        },\n        \"description\": \"Initialize an index with an access events oriented mapping\",\n        \"tags\": [\n          \"Institutions\",\n          \"Administration\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"get\": {\n        \"summary\": \"Get an index\",\n        \"operationId\": \"get-indices-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {},\n                  \"additionalProperties\": {\n                    \"$ref\": \"#/components/schemas/ElasticsearchIndex\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"tags\": [\n          \"Administration\"\n        ],\n        \"description\": \"Get information about an index\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete an index\",\n        \"operationId\": \"delete-indices-id\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"description\": \"Delete an ElasticSearch index\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Administration\",\n          \"Indices\"\n        ]\n      }\n    },\n    \"/institutions\": {\n      \"get\": {\n        \"summary\": \"Get institutions\",\n        \"tags\": [\n          \"Institutions\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Institution\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-institutions\",\n        \"description\": \"Get all institutions\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create an institution\",\n        \"operationId\": \"post-institutions\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Institution\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"409\": {\n            \"description\": \"Conflict\"\n          }\n        },\n        \"description\": \"Create an institution\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Institution\"\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"Institutions\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"creator\",\n            \"description\": \"if set to false, the authenticated user will not be registered as the institution creator (requires admin permissions)\"\n          }\n        ]\n      }\n    },\n    \"/institutions/_refresh\": {\n      \"post\": {\n        \"tags\": [\n          \"Institutions\"\n        ],\n        \"summary\": \"Refresh institutions\",\n        \"description\": \"Refresh dynamic institution fields (contacts, number of ECs).\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InstitutionsRefresh\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"operationId\": \"refreshInstitutions\"\n      }\n    },\n    \"/institutions/{id}/creator\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"delete\": {\n        \"summary\": \"Delete institution creator\",\n        \"operationId\": \"delete-institutions-id-creator\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Institution\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"tags\": [\n          \"Institutions\",\n          \"Administration\"\n        ],\n        \"description\": \"Remove the institution creator\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      }\n    },\n    \"/institutions/{id}/validated\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"put\": {\n        \"summary\": \"Change validation state of an institution\",\n        \"operationId\": \"put-institutions-id-validated\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"description\": \"Change validation state of an institution\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"value\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"required\": [\n                  \"value\"\n                ]\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"Institutions\"\n        ]\n      }\n    },\n    \"/institutions/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get an institution\",\n        \"tags\": [\n          \"Institutions\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Institution\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"operationId\": \"get-institutions-id\",\n        \"description\": \"Get an institution by ID. Use 'self' to get the institution of the authenticated user.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete an institution\",\n        \"operationId\": \"delete-institutions-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"description\": \"Delete an institution.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Institutions\"\n        ]\n      },\n      \"put\": {\n        \"summary\": \"Update an institution\",\n        \"operationId\": \"put-institutions-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Institution\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"description\": \"Update an institution\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Institution\"\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"Institutions\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      }\n    },\n    \"/institutions/{id}/sushi\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get Sushi items of an institution\",\n        \"tags\": [\n          \"Institutions\",\n          \"Sushi\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Sushi\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"operationId\": \"get-institutions-id-sushi\",\n        \"description\": \"Get Sushi items of an institution.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"working\",\n                \"faulty\",\n                \"untested\"\n              ]\n            },\n            \"in\": \"query\",\n            \"name\": \"connection\",\n            \"description\": \"filter items depending on connection state\"\n          }\n        ]\n      }\n    },\n    \"/institutions/{id}/_refresh\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"post\": {\n        \"summary\": \"Refresh an institution\",\n        \"operationId\": \"post-institutions-id-_refresh\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Institution\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"tags\": [\n          \"Institutions\"\n        ],\n        \"description\": \"Refresh dynamic fields (contacts, number of ECs) of a specific institution.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      }\n    },\n    \"/institutions/{id}/members\": {\n      \"get\": {\n        \"summary\": \"Get institution members\",\n        \"tags\": [\n          \"Institutions\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Member\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {}\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"get-institutions-:id-members\",\n        \"description\": \"Get the members of an institution. Must be either admin or institution contact.\"\n      },\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"ID of the institution\"\n        }\n      ]\n    },\n    \"/institutions/${id}/contacts\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Your GET endpoint\",\n        \"tags\": [\n          \"Administration\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/User\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"operationId\": \"get-institutions-$-id-contacts\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"description\": \"Get contact of institutions\"\n      }\n    },\n    \"/institutions/{id}/members/{username}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"ID of the institution\"\n        },\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"username\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"Username of the member\"\n        }\n      ],\n      \"put\": {\n        \"summary\": \"Update a member\",\n        \"tags\": [\n          \"Institutions\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          },\n          \"409\": {\n            \"description\": \"Conflict\"\n          }\n        },\n        \"operationId\": \"put-institutions-id-members-username\",\n        \"description\": \"Update the member of an institution\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"readonly\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Whether the member has readonly access to the dashboards\",\n                    \"default\": true\n                  },\n                  \"docContact\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Whether the member is the documentary contact\"\n                  },\n                  \"techContact\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Whether the member is the technical contact\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Remove a member\",\n        \"tags\": [\n          \"Institutions\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"409\": {\n            \"description\": \"Conflict\"\n          }\n        },\n        \"operationId\": \"delete-institutions-id-members-username\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"description\": \"Remove a member from an institution\"\n      }\n    },\n    \"/institutions/{id}/state\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"ID of the institution\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get institution state\",\n        \"tags\": [\n          \"Institutions\",\n          \"Administration\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"\",\n                  \"type\": \"object\",\n                  \"x-examples\": {\n                    \"example-1\": {\n                      \"space\": {\n                        \"id\": \"toulouse\",\n                        \"name\": \"toulouse\",\n                        \"description\": \"Université Toulouse-II\",\n                        \"disabledFeatures\": []\n                      },\n                      \"indices\": [\n                        \"toulouse\",\n                        \"toulouse-foo\",\n                        \"toulouse-foobar\"\n                      ],\n                      \"indexPatterns\": [\n                        {\n                          \"id\": \"902cf200-b97c-11eb-aae3-e9a25566a440\",\n                          \"title\": \"toulouse*\",\n                          \"timeFieldName\": \"datetime\"\n                        },\n                        {\n                          \"id\": \"34a502d0-b391-11e9-8339-63cd4d0c5d94\",\n                          \"title\": \"univ-example\",\n                          \"timeFieldName\": \"datetime\"\n                        }\n                      ],\n                      \"roles\": {\n                        \"base\": {\n                          \"name\": \"toulouse\",\n                          \"exists\": true\n                        },\n                        \"readonly\": {\n                          \"name\": \"toulouse_read_only\",\n                          \"exists\": true\n                        }\n                      }\n                    }\n                  },\n                  \"properties\": {\n                    \"spaces\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Space\"\n                      }\n                    },\n                    \"indices\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"indexPatterns\": {\n                      \"type\": \"array\",\n                      \"uniqueItems\": true,\n                      \"minItems\": 1,\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"minLength\": 1\n                          },\n                          \"title\": {\n                            \"type\": \"string\",\n                            \"minLength\": 1\n                          },\n                          \"timeFieldName\": {\n                            \"type\": \"string\",\n                            \"minLength\": 1\n                          },\n                          \"spaceId\": {\n                            \"type\": \"string\",\n                            \"nullable\": true\n                          }\n                        },\n                        \"required\": [\n                          \"id\",\n                          \"title\"\n                        ]\n                      }\n                    },\n                    \"roles\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"base\",\n                        \"readonly\"\n                      ],\n                      \"properties\": {\n                        \"base\": {\n                          \"type\": \"object\",\n                          \"required\": [\n                            \"exists\"\n                          ],\n                          \"properties\": {\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"minLength\": 1\n                            },\n                            \"exists\": {\n                              \"type\": \"boolean\"\n                            }\n                          }\n                        },\n                        \"readonly\": {\n                          \"type\": \"object\",\n                          \"required\": [\n                            \"exists\"\n                          ],\n                          \"properties\": {\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"minLength\": 1\n                            },\n                            \"exists\": {\n                              \"type\": \"boolean\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"spaces\",\n                    \"indices\",\n                    \"indexPatterns\",\n                    \"roles\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"operationId\": \"get-institutions-id-state\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"description\": \"Get the current state of an institution (list spaces, indices, index patterns and roles)\",\n        \"x-internal\": false\n      }\n    },\n    \"/logs\": {\n      \"get\": {\n        \"tags\": [\n          \"Indices\"\n        ],\n        \"summary\": \"List existing indices\",\n        \"description\": \"List the existing indices you are allowed to see.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IndexList\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"getLogs\"\n      }\n    },\n    \"/logs/{index}\": {\n      \"post\": {\n        \"tags\": [\n          \"Indices\"\n        ],\n        \"summary\": \"Insert data into an index\",\n        \"description\": \"Insert access events into an index.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"index\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"univ-foobar\"\n            },\n            \"description\": \"the index where the data should be inserted\",\n            \"required\": true\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"Split-Fields\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^([^()]+?\\\\([^()]+?\\\\))+$\"\n            },\n            \"description\": \"a list of multivalued fields, formatted as __\\\"fieldname(delimitor)\\\"__, and separated with whitespaces. Example: __\\\"ezproxy-groups(+) subjects(,)\\\"__\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                }\n              },\n              \"examples\": {}\n            },\n            \"text/csv\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"example\": {\n                  \"datetime\": \"2018-03-22T11:37:42+02:00\",\n                  \"platform\": \"npg\",\n                  \"rtype\": \"ARTICLE\",\n                  \"mime\": \"HTML\",\n                  \"domain\": \"www.nature.com\",\n                  \"title_id\": \"41564\",\n                  \"log_id\": \"d5d680b88def9bc4b41d4b94f22d60514e54689e\",\n                  \"url\": \"https://www.nature.com/articles/s41564-018-0156-0\",\n                  \"status\": \"200\",\n                  \"doi\": \"\"\n                },\n                \"properties\": {\n                  \"datetime\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                  },\n                  \"log_id\": {\n                    \"type\": \"string\"\n                  },\n                  \"rtype\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  },\n                  \"mime\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  },\n                  \"doi\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  },\n                  \"title_id\": {\n                    \"type\": \"string\"\n                  },\n                  \"url\": {\n                    \"type\": \"string\",\n                    \"format\": \"uri\"\n                  },\n                  \"status\": {\n                    \"type\": \"string\"\n                  },\n                  \"domain\": {\n                    \"type\": \"string\"\n                  },\n                  \"publication_title\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"datetime\",\n                  \"log_id\",\n                  \"rtype\",\n                  \"mime\",\n                  \"doi\",\n                  \"title_id\"\n                ]\n              }\n            }\n          },\n          \"description\": \"\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IndexInsert\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          }\n        },\n        \"operationId\": \"insertLogs\"\n      },\n      \"delete\": {\n        \"summary\": \"Delete an index\",\n        \"operationId\": \"delete-logs-index\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"acknowledge\": {\n                      \"type\": \"boolean\"\n                    }\n                  },\n                  \"required\": [\n                    \"acknowledge\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"description\": \"Delete an index\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Indices\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"index\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"name of the index\"\n        }\n      ]\n    },\n    \"/logs/{index}/events\": {\n      \"delete\": {\n        \"tags\": [\n          \"Indices\"\n        ],\n        \"summary\": \"Remove data from an index\",\n        \"description\": \"Remove access events from an index. Defaults to everything if no condition provided.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"index\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"univ-foobar\"\n            },\n            \"description\": \"the index where the data should be removed\",\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"2018-01-24T12:00:00\",\n            \"description\": \"Earliest date of the events that should be removed. Can be either a date or datetime in ISO format.\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"2018-01-25T12:00:00\",\n            \"description\": \"Latest date of the events that should be removed. Can be either a date or datetime in ISO format.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IndexRemove\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          }\n        },\n        \"operationId\": \"deleteEvents\"\n      }\n    },\n    \"/logs/{index}/tops\": {\n      \"get\": {\n        \"tags\": [\n          \"Indices\"\n        ],\n        \"summary\": \"Get top metrics for an index\",\n        \"description\": \"Get top metrics for an index.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"index\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"univ-foobar\"\n            },\n            \"description\": \"The index to get tops from.\",\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"period\",\n            \"description\": \"The time span covered.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"today\",\n                \"yesterday\",\n                \"current_week\",\n                \"last_week\",\n                \"current_month\",\n                \"last_month\",\n                \"current_year\",\n                \"last_year\",\n                \"all\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"size\",\n            \"description\": \"The size of the tops.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"minimum\": 1,\n              \"maximum\": 50,\n              \"default\": 10\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Metrics\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"topLogs\"\n      }\n    },\n    \"/logs/{index}/search\": {\n      \"post\": {\n        \"tags\": [\n          \"Indices\"\n        ],\n        \"summary\": \"Search in indices\",\n        \"description\": \"Perform search in indices using Elasticsearch Search API.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"externalDocs\": {\n          \"description\": \"More about Elasticsearch Query DSL and aggregations can be found on\",\n          \"url\": \"https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html\"\n        },\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"index\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"univ-foobar\"\n            },\n            \"description\": \"the index to search\",\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Elasticsearch query\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"example\": {\n                  \"size\": 0,\n                  \"query\": {\n                    \"term\": {\n                      \"platform\": \"npg\"\n                    }\n                  },\n                  \"aggs\": {\n                    \"rtypes\": {\n                      \"terms\": {\n                        \"field\": \"rtype\",\n                        \"size\": 5\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Raw response as returned by Elasticsearch\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"searchLogs\"\n      }\n    },\n    \"/logs/{index}/aggregation.{extension}\": {\n      \"get\": {\n        \"tags\": [\n          \"Indices\"\n        ],\n        \"summary\": \"Export all aggregated combinations of the given fields\",\n        \"description\": \"Export all aggregated combinations of the given fields\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"index\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"univ-foobar\"\n            },\n            \"description\": \"The index that contains the consultations to be aggregated\",\n            \"required\": true\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"extension\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"csv\",\n                \"ndjson\"\n              ]\n            },\n            \"description\": \"The export format\",\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"fields\",\n            \"description\": \"Comma-separated list of fields that should be aggregated\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"rtype,mime\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"missing\",\n            \"description\": \"Include combinations with missing values\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": true\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from\",\n            \"description\": \"Start date of the period to be aggregated\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"2020-01-01\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to\",\n            \"description\": \"End date of the period to be aggregated\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"2020-12-31\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"filter\",\n            \"description\": \"A list of filters in O-Rison format, that should be applied before performing the aggregation\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"examples\": {\n              \"simple\": {\n                \"value\": \"platform:wiley,status:200\",\n                \"summary\": \"Single value\",\n                \"description\": \"Filter a single value by specifying a field and a value. Strings containing spaces should be surrounded by simple quotes `'`.\"\n              },\n              \"multiple\": {\n                \"value\": \"platform:!(wiley,cairn),status:!(200,304)\",\n                \"summary\": \"Multiple values\",\n                \"description\": \"Filter multiple values by placing them inside `!( )`.\"\n              },\n              \"range\": {\n                \"value\": \"status:(gte:200,lt:400)\",\n                \"summary\": \"Numeric range\",\n                \"description\": \"Filter a numeric range by using `gt`/`gte`/`lt`/`lte` inside `( )`.\"\n              },\n              \"negate\": {\n                \"value\": \"platform:(not:wiley)\",\n                \"summary\": \"Negate filter\",\n                \"description\": \"Negate a filter by placing it inside `(not: )`\"\n              }\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"delimiter\",\n            \"description\": \"Delimiter for the CSV output. Use `tab` to get tab-seperated values.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \",\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/x-ndjson\": {\n                \"examples\": {\n                  \"example-1\": {\n                    \"value\": \"{ \\\"key\\\": { \\\"rtype\\\": \\\"ARTICLE\\\", \\\"mime\\\": \\\"PDF\\\" }, \\\"doc_count\\\": 42 }\\n{ \\\"key\\\": { \\\"rtype\\\": \\\"ARTICLE\\\", \\\"mime\\\": \\\"HTML\\\" }, \\\"doc_count\\\": 17 }\"\n                  }\n                },\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"text/csv\": {\n                \"example\": \"doc_count;rtype;mime\\n42;ARTICLE;PDF\\n17;ARTICLE;HTML\"\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          }\n        },\n        \"operationId\": \"aggregateLogs\"\n      }\n    },\n    \"/logs/{index}/counterize\": {\n      \"post\": {\n        \"tags\": [\n          \"Indices\"\n        ],\n        \"summary\": \"Export aggregated COUNTER metrics into another index\",\n        \"description\": \"Export aggregated COUNTER metrics into another index\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"index\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"univ-foobar\"\n            },\n            \"description\": \"the index that contains the consultations to be aggregated\",\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"destination\"\n                ],\n                \"properties\": {\n                  \"destination\": {\n                    \"type\": \"string\",\n                    \"description\": \"The index where aggregations should be stored\",\n                    \"example\": \"univ-foobar-counter5\"\n                  },\n                  \"from\": {\n                    \"type\": \"string\",\n                    \"example\": \"2020-01\"\n                  },\n                  \"to\": {\n                    \"type\": \"string\",\n                    \"example\": \"2020-04\"\n                  },\n                  \"platform\": {\n                    \"type\": \"string\",\n                    \"description\": \"filter aggregations for a specific platform\",\n                    \"example\": \"wiley\"\n                  },\n                  \"sessionField\": {\n                    \"type\": \"string\",\n                    \"description\": \"The field that holds the session ID, for unique request/investigation counting\",\n                    \"example\": \"ezproxy-session\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IndexInsert\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          }\n        },\n        \"operationId\": \"counterizeLogs\"\n      }\n    },\n    \"/metrics\": {\n      \"get\": {\n        \"tags\": [\n          \"Metrics\"\n        ],\n        \"summary\": \"Get general metrics\",\n        \"description\": \"Get general metrics about the data hosted on ezMESURE.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Metrics\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"getMetrics\"\n      }\n    },\n    \"/partners\": {\n      \"get\": {\n        \"tags\": [\n          \"Institutions\"\n        ],\n        \"summary\": \"Get partners\",\n        \"description\": \"Get the list of validated institutions.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Institution\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"getInstitutions\"\n      }\n    },\n    \"/profile\": {\n      \"get\": {\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"summary\": \"Fetch profile\",\n        \"description\": \"Get the profile associated with the JWT token.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"getProfile\"\n      }\n    },\n    \"/profile/token\": {\n      \"get\": {\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"summary\": \"Get an authorization token\",\n        \"description\": \"Actually requires a JWT token (typically stored in cookies). This route provides you with a token from the user space.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Token generated successfully\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImpvaG4uZG9lIiwiZW1haWwiOiJkb28uam9obkB1bml2ZXJzZS5vcmciLCJpYXQiOjE1MTYyMzkwMjJ9.QsXZLquqEZY4q0XhDEvbEm_LzYEuPToboyUZFZrQSbE\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"getAuthToken\"\n      }\n    },\n    \"/profile/terms/accept\": {\n      \"post\": {\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"summary\": \"Accept terms of service\",\n        \"description\": \"Accept terms of service. You should read them first!\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Terms accepted successfully\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"acceptTerms\"\n      }\n    },\n    \"/profile/password/reset\": {\n      \"post\": {\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"summary\": \"Reset Kibana password\",\n        \"description\": \"Reset Kibana password of the authenticated user.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Password successfully reset\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        },\n        \"operationId\": \"resetPassword\"\n      }\n    },\n    \"/queues\": {\n      \"get\": {\n        \"summary\": \"Get status of all job queues\",\n        \"tags\": [\n          \"Jobs\"\n        ],\n        \"operationId\": \"get-jobs\",\n        \"description\": \"Get queue status for all job types\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Queue\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        }\n      },\n      \"parameters\": []\n    },\n    \"/queues/{type}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\",\n            \"example\": \"harvest\"\n          },\n          \"name\": \"type\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"job type\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get status of a job queue\",\n        \"tags\": [\n          \"Jobs\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Queue\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"operationId\": \"get-jobs-type\",\n        \"description\": \"Get the status of a specific job queue\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      }\n    },\n    \"/queues/{type}/_pause\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\",\n            \"example\": \"harvest\"\n          },\n          \"name\": \"type\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"job type\"\n        }\n      ],\n      \"post\": {\n        \"summary\": \"Pause a job queue\",\n        \"tags\": [\n          \"Jobs\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"paused\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Whether the queue is paused or not\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"operationId\": \"get-jobs-type-_pause\",\n        \"description\": \"Pause a job queue (does not affect jobs that are already running)\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      }\n    },\n    \"/queues/{type}/_resume\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\",\n            \"example\": \"harvest\"\n          },\n          \"name\": \"type\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"job type\"\n        }\n      ],\n      \"post\": {\n        \"summary\": \"Resume a job queue\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"paused\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Whether the queue is paused or not\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"operationId\": \"get-jobs-type-_resume\",\n        \"description\": \"Resume a job queue\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Jobs\"\n        ]\n      }\n    },\n    \"/roles\": {\n      \"get\": {\n        \"summary\": \"Get Kibana roles\",\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/KibanaRole\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"operationId\": \"get-roles\",\n        \"description\": \"List all Kibana roles\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"reserved\",\n            \"description\": \"include reserved roles\"\n          }\n        ]\n      }\n    },\n    \"/roles/{roleName}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"roleName\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"put\": {\n        \"summary\": \"Create or update role\",\n        \"operationId\": \"put-roles-roleName\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"description\": \"Create or update a Kibana role\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/KibanaRole\"\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"Get a role\",\n        \"operationId\": \"get-roles-roleName\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/KibanaRole\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"description\": \"Get a role by its name\",\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a role\",\n        \"operationId\": \"delete-roles-roleName\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"description\": \"Delete a Kibana role\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ]\n      }\n    },\n    \"/spaces\": {\n      \"get\": {\n        \"summary\": \"List spaces\",\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Space\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"operationId\": \"get-spaces\",\n        \"description\": \"List spaces\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create a space\",\n        \"operationId\": \"post-spaces\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Space\"\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Space\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"description\": \"Create a Kibana space\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Space\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/spaces/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get a space\",\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Space\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"operationId\": \"get-spaces-id\",\n        \"description\": \"Get a specific space\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"put\": {\n        \"summary\": \"Update a space\",\n        \"operationId\": \"put-spaces-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Space\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"description\": \"Update a Kibana space\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Space\"\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a space\",\n        \"operationId\": \"delete-space-spaceId\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"description\": \"Delete a Kibana space\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ]\n      }\n    },\n    \"/spaces/{id}/index-patterns\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"List index patterns in a space\",\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/KibanaSavedObject\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"operationId\": \"get-spaces-id-index-patterns\",\n        \"description\": \"List index patterns in a space\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create an index pattern\",\n        \"operationId\": \"post-spaces-id-index-patterns\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IndexPattern\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          },\n          \"409\": {\n            \"description\": \"Conflict\"\n          }\n        },\n        \"description\": \"Create an index pattern in a given space\",\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/IndexPatternAttributes\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/sushi\": {\n      \"get\": {\n        \"summary\": \"Get all Sushi items\",\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Sushi\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"operationId\": \"get-sushi\",\n        \"description\": \"Get all Sushi items\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"working\",\n                \"faulty\",\n                \"untested\"\n              ]\n            },\n            \"in\": \"query\",\n            \"name\": \"connection\",\n            \"description\": \"filter items depending on connection state\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"description\": \"filter items by endpoint ID\",\n            \"name\": \"endpointId\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"institutionId\",\n            \"description\": \"filter items by institution ID\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"id\",\n            \"description\": \"filter items by ID\"\n          }\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create a Sushi item\",\n        \"operationId\": \"post-sushi\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Sushi\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"description\": \"Add a new Sushi item\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Sushi\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/sushi/batch_delete\": {\n      \"post\": {\n        \"summary\": \"Delete multiple Sushi items\",\n        \"operationId\": \"post-sushi-batch_delete\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"status\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"failed\",\n                          \"deleted\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"description\": \"Delete multiple Sushi items at once\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"ids\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"format\": \"uuid\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/sushi/_import\": {\n      \"post\": {\n        \"summary\": \"Import SUSHI items\",\n        \"operationId\": \"post-sushi-_import\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"errors\": {\n                      \"type\": \"integer\",\n                      \"description\": \"number of items that failed to be imported\"\n                    },\n                    \"conflicts\": {\n                      \"type\": \"integer\",\n                      \"description\": \"number of items that already exists\"\n                    },\n                    \"created\": {\n                      \"type\": \"number\",\n                      \"description\": \"number if items that were successfuly imported\"\n                    },\n                    \"items\": {\n                      \"type\": \"array\",\n                      \"description\": \"operation details for each item\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"description\": \"import status of the item\",\n                            \"enum\": [\n                              \"error\",\n                              \"conflict\",\n                              \"created\"\n                            ]\n                          },\n                          \"message\": {\n                            \"type\": \"string\",\n                            \"description\": \"error or conflict message\"\n                          },\n                          \"data\": {\n                            \"$ref\": \"#/components/schemas/Sushi\"\n                          }\n                        },\n                        \"required\": [\n                          \"status\",\n                          \"data\"\n                        ]\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"errors\",\n                    \"conflicts\",\n                    \"created\",\n                    \"items\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"description\": \"Import a list of Sushi items\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"institutionId\",\n            \"required\": true,\n            \"description\": \"ID of the institution that owns the SUSHI items\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"overwrite\",\n            \"description\": \"overwrite item if one with the same ID already exists\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Sushi\"\n                }\n              }\n            }\n          },\n          \"description\": \"\"\n        }\n      }\n    },\n    \"/sushi/_lock\": {\n      \"put\": {\n        \"summary\": \"Lock SUSHI identifiers management\",\n        \"operationId\": \"put-sushi-_lock\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"locked\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Whether the management is locked or not\"\n                    }\n                  },\n                  \"required\": [\n                    \"locked\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"tags\": [\n          \"Sushi\",\n          \"Administration\"\n        ],\n        \"description\": \"Lock SUSHI identifiers management\",\n        \"x-internal\": false,\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"locked\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Wether the management should be locked or not\"\n                  },\n                  \"reason\": {\n                    \"type\": \"string\",\n                    \"description\": \"The reason of the lock\"\n                  }\n                },\n                \"required\": [\n                  \"locked\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"Get SUSHI management lock status\",\n        \"operationId\": \"get-sushi-_lock\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"locked\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Wether SUSHI management is locked or not\"\n                    },\n                    \"reason\": {\n                      \"type\": \"string\",\n                      \"description\": \"The reason of the lock\"\n                    }\n                  },\n                  \"required\": [\n                    \"locked\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"description\": \"Get the current lock status of SUSHI management.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      }\n    },\n    \"/sushi/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"patch\": {\n        \"summary\": \"Update a Sushi item\",\n        \"operationId\": \"patch-sushi-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Sushi\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"description\": \"Update a Sushi item\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Sushi\"\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"\",\n        \"operationId\": \"get-sushi-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Sushi\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"description\": \"Get a Sushi item\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Sushi\"\n        ]\n      }\n    },\n    \"/sushi/{id}/_harvest\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"post\": {\n        \"summary\": \"Initiate a Sushi harvest\",\n        \"operationId\": \"post-sushi-id-_harvest\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Harvest initiated. Returns a task object that can be requested in order to follow the status of the process.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Task\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          }\n        },\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"description\": \"Initiate a Sushi harvest. Downloads the latest COUNTER report, validate it, and import items into a given index.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"target\": {\n                    \"type\": \"string\",\n                    \"description\": \"The index where the report should be imported\"\n                  },\n                  \"reportType\": {\n                    \"type\": \"string\",\n                    \"description\": \"The report type that should be harvested\",\n                    \"example\": \"tr\",\n                    \"default\": \"tr\"\n                  },\n                  \"beginDate\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"^[0-9]{4}-[0-9]{2}$\",\n                    \"example\": \"2020-12\",\n                    \"description\": \"Start of the report period\"\n                  },\n                  \"endDate\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"^[0-9]{4}-[0-9]{2}$\",\n                    \"example\": \"2020-12\",\n                    \"description\": \"End of the report period\"\n                  },\n                  \"harvestId\": {\n                    \"type\": \"string\",\n                    \"description\": \"An identifier used to group tasks from a same harvest batch\"\n                  },\n                  \"forceDownload\": {\n                    \"type\": \"boolean\",\n                    \"default\": false,\n                    \"description\": \"Whether to download the report even if a local copy exists\"\n                  }\n                },\n                \"required\": [\n                  \"target\"\n                ]\n              }\n            }\n          },\n          \"description\": \"\"\n        }\n      }\n    },\n    \"/sushi/{id}/report.json\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Download a COUNTER report\",\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The COUNTER report is returned in the body.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {}\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"The COUNTER report download has been initiated, or the download is not finised yet. Retry the same link later until the report is available.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            },\n            \"headers\": {\n              \"Retry-After\": {\n                \"schema\": {\n                  \"type\": \"integer\"\n                },\n                \"description\": \"Waiting time in seconds\"\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          }\n        },\n        \"operationId\": \"get-sushi-id-report.json\",\n        \"description\": \"Download a COUNTER report using data from a Sushi item, between two given months. If no period is specified, defaults to the previous month.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"2020-01\",\n              \"pattern\": \"^[0-9]{4}-[0-9]{2}$\"\n            },\n            \"in\": \"query\",\n            \"name\": \"beginDate\",\n            \"description\": \"first month of the report period\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[0-9]{4}-[0-9]{2}$\",\n              \"example\": \"2020-01\"\n            },\n            \"in\": \"query\",\n            \"name\": \"endDate\",\n            \"description\": \"last month of the report period\"\n          }\n        ]\n      }\n    },\n    \"/sushi/{id}/tasks\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get tasks of a Sushi item\",\n        \"tags\": [\n          \"Tasks\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Task\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          }\n        },\n        \"operationId\": \"get-sushi-id-tasks\",\n        \"description\": \"Get tasks related to a Sushi item\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      }\n    },\n    \"/sushi-endpoints\": {\n      \"get\": {\n        \"summary\": \"Get all SUSHI endpoints\",\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SushiEndpoint\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"operationId\": \"get-sushi-endpoints\",\n        \"description\": \"Get all SUSHI endpoints\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"requireCustomerId\",\n            \"description\": \"Filter endpoints by requireCustomerId\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"requireRequestorId\",\n            \"description\": \"Filter endpoints by requireRequestorId\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"requireApiKey\",\n            \"description\": \"Filter endpoints by requireApiKey\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"isSushiCompliant\",\n            \"description\": \"Filter endpoints by isSushiCompliant\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"tags\",\n            \"description\": \"Filter endpoints by tags (comma-separated)\"\n          }\n        ]\n      },\n      \"post\": {\n        \"summary\": \"Create a SUSHI endpoint\",\n        \"operationId\": \"post-sushi-endpoints\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SushiEndpoint\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"description\": \"Add a new SUSHI endpoint\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SushiEndpoint\"\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"Sushi\"\n        ]\n      }\n    },\n    \"/sushi-endpoints/_import\": {\n      \"post\": {\n        \"summary\": \"Import SUSHI endpoints\",\n        \"operationId\": \"post-sushi-endpoint-_import\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"errors\": {\n                      \"type\": \"integer\",\n                      \"description\": \"number of items that failed to be imported\"\n                    },\n                    \"conflicts\": {\n                      \"type\": \"integer\",\n                      \"description\": \"number of items that already exists\"\n                    },\n                    \"created\": {\n                      \"type\": \"number\",\n                      \"description\": \"number if items that were successfuly imported\"\n                    },\n                    \"items\": {\n                      \"type\": \"array\",\n                      \"description\": \"operation details for each item\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"status\": {\n                            \"type\": \"string\",\n                            \"description\": \"import status of the item\",\n                            \"enum\": [\n                              \"error\",\n                              \"conflict\",\n                              \"created\"\n                            ]\n                          },\n                          \"message\": {\n                            \"type\": \"string\",\n                            \"description\": \"error or conflict message\"\n                          },\n                          \"data\": {\n                            \"$ref\": \"#/components/schemas/SushiEndpoint\"\n                          }\n                        },\n                        \"required\": [\n                          \"status\",\n                          \"data\"\n                        ]\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"errors\",\n                    \"conflicts\",\n                    \"created\",\n                    \"items\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"description\": \"Import a list of SUSHI endpoints\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"boolean\"\n            },\n            \"in\": \"query\",\n            \"name\": \"overwrite\",\n            \"description\": \"overwrite item if one with the same ID already exists\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/SushiEndpoint\"\n                }\n              }\n            }\n          },\n          \"description\": \"\"\n        }\n      },\n      \"parameters\": []\n    },\n    \"/sushi-endpoints/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"ID of the endpoint\"\n        }\n      ],\n      \"patch\": {\n        \"summary\": \"Update a SUSHI endpoint\",\n        \"operationId\": \"patch-sushi-endpoint-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SushiEndpoint\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"tags\": [\n          \"Sushi\"\n        ],\n        \"description\": \"Update a SUSHI endpoint\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SushiEndpoint\"\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"Get a SUSHI endpoint\",\n        \"operationId\": \"get-sushi-endpoint-id\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SushiEndpoint\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"description\": \"Get a SUSHI endpoint\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Sushi\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a SUSHI endpoint\",\n        \"operationId\": \"delete-sushi-endpoints-id\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"description\": \"Delete a SUSHI endpoint\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Sushi\"\n        ]\n      }\n    },\n    \"/tasks\": {\n      \"get\": {\n        \"summary\": \"Get all tasks\",\n        \"tags\": [\n          \"Tasks\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Task\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          }\n        },\n        \"operationId\": \"get-tasks\",\n        \"description\": \"Get all tasks\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"array\",\n              \"minLength\": 1,\n              \"pattern\": \"[A-Za-z,]+\"\n            },\n            \"in\": \"query\",\n            \"name\": \"status\",\n            \"description\": \"filter tasks by status\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"array\"\n            },\n            \"in\": \"query\",\n            \"name\": \"id\",\n            \"description\": \"filter tasks by ID\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"array\"\n            },\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"description\": \"filter tasks by type\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"array\"\n            },\n            \"in\": \"query\",\n            \"name\": \"institutionId\",\n            \"description\": \"filter tasks by institution ID\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"array\"\n            },\n            \"in\": \"query\",\n            \"name\": \"sushiId\",\n            \"description\": \"filter tasks by SUSHI ID\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"array\"\n            },\n            \"in\": \"query\",\n            \"name\": \"endpointId\",\n            \"description\": \"filter tasks by endpoint ID\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"array\"\n            },\n            \"in\": \"query\",\n            \"name\": \"harvestId\",\n            \"description\": \"filter tasks by harvest ID\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"in\": \"query\",\n            \"name\": \"size\",\n            \"description\": \"maximum number of tasks to get\"\n          }\n        ]\n      }\n    },\n    \"/tasks/{id}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get a task\",\n        \"tags\": [\n          \"Tasks\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Task\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/ForbiddenError\"\n          }\n        },\n        \"operationId\": \"get-tasks-id\",\n        \"description\": \"Get a specific task\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"Delete a task\",\n        \"operationId\": \"delete-tasks-id\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"description\": \"Delete a task, and the associated job if any. This is not possible if the associated job is active.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Tasks\"\n        ]\n      }\n    },\n    \"/tasks/{id}/_cancel\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"post\": {\n        \"summary\": \"Cancel a task\",\n        \"operationId\": \"post-tasks-id-_cancel\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Task\"\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Cancel a task. A task cannot be cancelled if its associated job is active or completed.\",\n        \"tags\": [\n          \"Tasks\"\n        ]\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"summary\": \"List users\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Member\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"operationId\": \"get-users\",\n        \"description\": \"List users. Limited to 10.\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"description\": \"a query for searching\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"in\": \"query\",\n            \"name\": \"size\",\n            \"description\": \"a query to change users list limit size\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"query\",\n            \"name\": \"source\",\n            \"description\": \"a query to retrieve more information, the fields are separated by a comma\"\n          }\n        ],\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/users/{username}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"username\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get a user\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"operationId\": \"get-users-username\",\n        \"description\": \"Get a user by his username\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Users\"\n        ]\n      },\n      \"put\": {\n        \"summary\": \"Update a user\",\n        \"operationId\": \"put-users-username\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"created\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"created\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"description\": \"Update a user\",\n        \"tags\": [\n          \"Users\",\n          \"Administration\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/User\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"password\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a user\",\n        \"operationId\": \"delete-user-username\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No Content\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"found\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"whether the user was found or not\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"description\": \"Delete a Kibana user\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"Administration\",\n          \"Kibana\"\n        ]\n      }\n    },\n    \"/users/{username}/institution\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"username\",\n          \"in\": \"path\",\n          \"required\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get the institution of a user\",\n        \"tags\": [\n          \"Users\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Institution\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"operationId\": \"get-users-id-institution\",\n        \"description\": \"Get the institution of a user\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ]\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/ezpaarse-project/ezmesure@5f9e03661068dc85d2e14bcc966f78b1a64961be/-/blob/api/lib/controllers/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/ezpaarse-project/ezmesure/blob/5f9e03661068dc85d2e14bcc966f78b1a64961be/api/lib/controllers/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/spaces/{id}/index-patterns\": post: responses: 201: contents: application/json: generate schema: save schema types: save inlined type: schema name conflict: \"IndexPatternAttributes\""
}