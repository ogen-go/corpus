{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/colouring-cities/colouring-london"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "app/public/openapi.yml",
			"byteSize": 4928,
			"content": "openapi: 3.0.0\ninfo:\n  title: Colouring London API\n  version: 1.0.0\n\nservers:\n  - url: https://colouring.london/api\n    description: Production server (uses live data)\n\npaths:\n\n  /extracts:\n    get:\n      summary: Returns a list of bulk data extracts\n      responses:\n        '200':\n          description: A list of bulk extracts, from newest to oldest\n          content:\n            application/json:\n              schema:\n                properties:\n                  extracts:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/BulkExtract'\n              example:\n                extracts:\n                  - extract_id: 1\n                    extracted_on: 2019-10-03T05:33:00.000Z\n                    download_path: /downloads/data-extract-2019-10-03-06_33_00.zip\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /history:\n    get:\n      summary: Returns a paginated list of edits (latest edits if no relevant parameters specified)\n      parameters:\n        - name: before_id\n          description: Returned edits will be ones made directly before the specified revision ID\n          in: query\n          schema:\n            $ref: '#/components/schemas/RevisionId'\n          required: false\n        - name: after_id\n          description: Returned edits will be ones made directly after the specified revision ID\n          in: query\n          schema:\n            $ref: '#/components/schemas/RevisionId'\n          required: false\n        - name: count\n          description: The desired number of records to return\n          in: query\n          schema:\n            type: number\n            minimum: 1\n            maximum: 100\n            default: 100\n          required: false\n      responses:\n        '200':\n          description: A list of edit history records\n          content:\n            application/json:\n              schema:\n                properties:\n                  history:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/BuildingEditHistoryEntry'\n                  paging:\n                    type: object\n                    properties:\n                      id_for_older_query:\n                        allOf:\n                          - $ref: '#/components/schemas/RevisionId'\n                          - description: If older records exist - ID to use for querying them (use as before_id param), otherwise null\n                            nullable: true\n                      id_for_newer_query:\n                        allOf:\n                          - $ref: '#/components/schemas/RevisionId'\n                          - description: If newer records exist - ID to use for querying them (use as after_id param), otherwise null\n                            nullable: true\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\ncomponents:\n  responses:\n    BadRequest:\n      description: Invalid request submitted by user\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n\n    ServerError:\n      description: Unexpected server error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            error: Database error\n\n  schemas:\n    Error:\n      type: object\n      properties:\n        error:\n          type: string\n          description: Error message\n\n    BulkExtract:\n      type: object\n      properties:\n        extract_id:\n          type: integer\n          description: Unique sequential ID for the extract\n        extracted_on:\n          type: string\n          format: date-time\n          description: UTC timestamp at which the extract was generated\n        download_path:\n          type: string\n          description: Download path for the extract. Contains only URL path (should be used with the same hostname as the API).\n\n    RevisionId:\n      description: Unique sequential ID for an edit history entry (positive big integer)\n      type: string\n      pattern: ^[1-9]\\d*\u0026\n\n    BuildingEditHistoryEntry:\n      type: object\n      properties:\n        revision_id:\n          $ref: '#/components/schemas/RevisionId'\n        forward_patch:\n          type: object\n          description: Forward diff of the building attribute data\n        reverse_patch:\n          type: object\n          description: Reverse diff of the building attribute data\n        revision_timestamp:\n          type: string\n          format: date-time\n          description: UTC timestamp at which the building data was edited\n        username:\n          type: string\n          description: Username of the editor\n        building_id:\n          type: number\n          description: Unique ID of the edited building",
			"canonicalURL": "/github.com/colouring-cities/colouring-london@8fad7cead924a547e34690e64d916dc4bb8fb033/-/blob/app/public/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/colouring-cities/colouring-london/blob/8fad7cead924a547e34690e64d916dc4bb8fb033/app/public/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/history\": get: responses: code 200: contents: application/json: generate schema: field paging: field id_for_newer_query: allOf: schema type mismatch: string and "
}