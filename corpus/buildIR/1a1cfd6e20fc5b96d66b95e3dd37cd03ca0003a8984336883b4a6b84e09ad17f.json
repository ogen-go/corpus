{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenBanking-Brasil/specs-seguranca"
		},
		"file": {
			"name": "dcr-dcm-swagger.yaml",
			"size": 0,
			"path": "dcr_review/dcr-dcm-swagger.yaml",
			"byteSize": 26047,
			"content": "openapi: 3.0.3\ninfo:\n  title: Open Banking Brasil - Dynamic Client Registration\n  description: Especificação dos serviços de registro dinâmico de cliente (DCR) e manutenção dinâmica de cliente (DCM), baseados nas especificações a seguir\u003cbr/\u003e \u003cul\u003e\u003cli\u003eRFC 7591 - https://datatracker.ietf.org/doc/html/rfc7591\u003c/li\u003e\u003cli\u003eRFC 7592 - https://datatracker.ietf.org/doc/html/rfc7592\u003cli\u003eOpenID Connect Dynamic Client Registration -  https://openid.net/specs/openid-connect-registration-1_0.html\u003c/li\u003e\u003c/ul\u003e\n  contact:\n    email: openbankingbrasil@openbankingbrasil.org.br\n  version: 1.0.0\nexternalDocs:\n  description: Documentação do processo de DCR / DCM no portal do desenvolvedor do Open Banking Brasil\n  url: https://github.com/OpenBanking-Brasil/specs-seguranca/blob/main/open-banking-brasil-dynamic-client-registration-1_ID2.md\ntags:\n- name: DCR\n  description: Operações de registro dinâmico de cliente (DCR)\n  externalDocs:\n    description: RFC 7591\n    url: https://datatracker.ietf.org/doc/html/rfc7591\n- name: DCM\n  description: Operações de manutenção dinâmica de cliente (DCM)\n  externalDocs:\n    description: RFC 7592\n    url: https://datatracker.ietf.org/doc/html/rfc7592  \npaths:\n  /register:\n    post:\n      summary: Registro da aplicação cliente.\n      tags:\n        - DCR\n      security: \n        - OAuth2Security: [register]\n      requestBody:\n        description: Objeto com os dados da aplicação cliente que será registrada, que também inclui o \u003ci\u003eSoftware Statement\u003c/i\u003e emitido pelo Diretório de Participantes.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClientRegistrationRequest'\n      responses:\n        201:\n          description: Cliente registrado na instituição - inclui o \u003ci\u003eclient_id\u003c/i\u003e da aplicação para consumo das APIs da Instituição Financeira.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientRegistrationResponseSuccess'\n        400:\n          description: Erro ao registrar a aplicação cliente.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientRegistrationResponseError'\n        401:\n          description: Access Token inválido, ou outro erro relacionado às validações de acesso a recursos protegidos OAuth 2.0.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    enum: \n                      - invalid_token\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido          \n        403: \n          description: Escopo inválido\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    enum: \n                      - insufficient_scope\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido\n    get: \n      summary: Consulta de dados do registro da aplicação cliente. Uma das implementações possíveis, como descritas no Apêndice B da RFC 7592\n      tags:\n      - DCM\n      security:\n        - DCMSecurity: []\n      parameters:\n        - $ref: '#/components/parameters/clientIdQuerystring'\n      responses:\n        200:\n          description: Dados do cliente registrado na instituição - inclui o \u003ci\u003eclient_id\u003c/i\u003e da aplicação para consumo das APIs da Instituição Financeira.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientGetResponseSuccess'\n        400:\n          description: Erro ao consultar dados da aplicação cliente.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientRegistrationResponseError'\n        401:\n          description: Cliente ou Registration Access Token inválido, ou ainda outro erro relacionado às validações de acesso a recursos protegidos OAuth 2.0.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido          \n        403: \n          description: Sem permissão para atualizar o cliente informado\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido\n    put: \n      summary: Alteração de dados do registro da aplicação cliente. Uma das implementações possíveis, como descritas no Apêndice B da RFC 7592\n      tags:\n      - DCM\n      security:\n        - DCMSecurity: []\n      parameters:\n        - $ref: '#/components/parameters/clientIdQuerystring'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClientRegistrationRequest'        \n      responses:\n        200:\n          description: Dados do cliente registrado na instituição - inclui o \u003ci\u003eclient_id\u003c/i\u003e da aplicação para consumo das APIs da Instituição Financeira.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientGetResponseSuccess'\n        400:\n          description: Erro ao atualizar dados da aplicação cliente.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientRegistrationResponseError'\n        401:\n          description: Cliente ou Registration Access Token inválido, ou ainda outro erro relacionado às validações de acesso a recursos protegidos OAuth 2.0.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido          \n        403: \n          description: Sem permissão para atualizar o cliente informado\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido    \n    delete: \n      summary: Exclusão do registro da aplicação cliente. Uma das implementações possíveis, como descritas no Apêndice B da RFC 7592\n      tags:\n      - DCM\n      security:\n        - DCMSecurity: []\n      parameters:\n        - $ref: '#/components/parameters/clientIdQuerystring'\n      responses:\n        204:\n          description: Sem conteúdo\n        400:\n          description: Erro ao excluir o registro da aplicação cliente.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientRegistrationResponseError'\n        401:\n          description: Cliente ou Registration Access Token inválido, ou ainda outro erro relacionado às validações de acesso a recursos protegidos OAuth 2.0.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido          \n        403: \n          description: Sem permissão para atualizar o cliente informado\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido\n        405: \n          description: Método não suportado    \n  /register/{clientId}:\n    get: \n      summary: Consulta de dados do registro da aplicação cliente. Uma das implementações possíveis, como descritas no Apêndice B da RFC 7592\n      tags:\n      - DCM\n      security:\n        - DCMSecurity: []\n      parameters:\n        - $ref: '#/components/parameters/clientId'\n      responses:\n        200:\n          description: Dados do cliente registrado na instituição - inclui o \u003ci\u003eclient_id\u003c/i\u003e da aplicação para consumo das APIs da Instituição Financeira.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientGetResponseSuccess'\n        400:\n          description: Erro ao consultar dados da aplicação cliente.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientRegistrationResponseError'\n        401:\n          description: Cliente ou Registration Access Token inválido, ou ainda outro erro relacionado às validações de acesso a recursos protegidos OAuth 2.0.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido          \n        403: \n          description: Sem permissão para atualizar o cliente informado\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido                \n    put: \n      summary: Alteração de dados do registro da aplicação cliente. Uma das implementações possíveis, como descritas no Apêndice B da RFC 7592\n      tags:\n      - DCM\n      security:\n        - DCMSecurity: []\n      parameters:\n        - $ref: '#/components/parameters/clientId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClientRegistrationRequest'\n      responses:\n        200:\n          description: Dados do cliente registrado na instituição - inclui o \u003ci\u003eclient_id\u003c/i\u003e da aplicação para consumo das APIs da Instituição Financeira.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientGetResponseSuccess'\n        400:\n          description: Erro ao atualizar dados da aplicação cliente.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientRegistrationResponseError'\n        401:\n          description: Cliente ou Registration Access Token inválido, ou ainda outro erro relacionado às validações de acesso a recursos protegidos OAuth 2.0.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido          \n        403: \n          description: Sem permissão para atualizar o cliente informado\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido  \n    delete: \n      summary: Exclusão do registro da aplicação cliente. Uma das implementações possíveis, como descritas no Apêndice B da RFC 7592\n      tags:\n      - DCM\n      security:\n        - DCMSecurity: []\n      parameters:\n        - $ref: '#/components/parameters/clientId'\n      responses:\n        204:\n          description: Sem conteúdo\n        400:\n          description: Erro ao excluir o registro da aplicação cliente.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientRegistrationResponseError'\n        401:\n          description: Cliente ou Registration Access Token inválido, ou ainda outro erro relacionado às validações de acesso a recursos protegidos OAuth 2.0.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido          \n        403: \n          description: Sem permissão para atualizar o cliente informado\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: códigos de erro de validação de access token OAuth 2.0, usados como descrito na seção 3.1 da RFC 6750\n                  error_description:\n                    type: string\n                    description: mensagem amigável com detalhes do erro ocorrido\n        405: \n          description: Método não suportado\ncomponents:\n  parameters:\n    clientId:\n      name: clientId\n      description: client_id da aplicação cliente registrada na instituição financeira\n      in: path\n      required: true\n      schema:\n        type: string\n    clientIdQuerystring:\n      name: client_id\n      description: client_id da aplicação cliente registrada na instituição financeira      \n      in: query\n      required: true\n      schema:\n        type: string        \n  schemas: \n    ClientGetResponseSuccess:\n      type: object\n      description: Os campos a seguir seguem a especificação descrita na seção 3.2.1 da RFC 7591 e seção 3 da RFC 7592 e, portanto, devem considerar também a inclusão dos campos adicionais ali descritos.\n      required:\n        - client_id\n        - registration_client_uri\n        - registration_access_token\n      properties:\n        client_id:\n          type: string\n          description: client_id da aplicação originalmente registrada\n        client_secret:\n          type: string\n          description: client_secret da aplicação registrada. Pode ser diferente do client_secret originalmente registrado (rotacionamento).\n        client_id_issued_at:\n          type: string\n          description: data/hora da emissão do registro, representado como timestamp, dos segundos desde 1 de janeiro de 1970 - Zulu time.\n        client_secret_expires_at: \n          type: string\n          description: (somente obrigatório se um client_secret foi emitido) data/hora da expiração do client_secret, representado como timestame, dos segundos desde 1 de janeiro de 1970 - Zulu time.\n        registration_client_uri:\n          type: string\n          description: deve conter a URL pública do endpoint de configuração de registro deste cliente (endpoint para DCM). \u003cbr/\u003eEsta URL deve apontar para o recurso específico do cliente registrado, seja através de query parameter ou como parte do path, segundo definido do Apêndice B da RFC 7592. \u003cbr/\u003eExemplo \u003cbr/\u003e\"https://server.example.com/register/s6BhdRkqt3\" ou \u003cbr/\u003e\"https://server.example.com/register?client_id=s6BhdRkqt3\"\n        registration_access_token:\n          type: string\n          description: token necessário para autorizar ajustes na configuração do registro deste cliente na instituição financeira (para DCM). Pode ser diferente do registration_access_token originalmente registrado (rotacionamento).\n    ClientRegistrationResponseError:\n      type: object\n      description: Os campos a seguir seguem a especificação descrita na seção 3.2.2 da RFC 7591, portanto, devem considerar também a inclusão dos campos adicionais ali descritos.\n      required:\n        - error\n      properties:\n        error:\n          type: string\n          enum: \n            - invalid_redirect_uri\n            - invalid_client_metadata\n            - invalid_software_statement\n            - unapproved_software_statement\n          description: códigos de erro de registro de cliente, usados como descrito na seção 3.2.2 da RFC 7591\n        error_description:\n          type: string\n          description: mensagem amigável com detalhes do erro ocorrido\n    ClientRegistrationResponseSuccess:\n      type: object\n      description: Os campos a seguir seguem a especificação descrita na seção 3.2.1 da RFC 7591 e seção 3 da RFC 7592 e, portanto, devem considerar também a inclusão dos campos adicionais ali descritos.\n      required:\n        - client_id\n        - registration_client_uri\n        - registration_access_token\n      properties:\n        client_id:\n          type: string\n          description: client_id da aplicação registrada\n        client_secret:\n          type: string\n          description: client_secret da aplicação registrada\n        client_id_issued_at:\n          type: string\n          description: data/hora da emissão do registro, representado como timestamp, dos segundos desde 1 de janeiro de 1970 - Zulu time.\n        client_secret_expires_at: \n          type: string\n          description: (somente obrigatório se um client_secret foi emitido) data/hora da expiração do client_secret, representado como timestame, dos segundos desde 1 de janeiro de 1970 - Zulu time.\n        registration_client_uri:\n          type: string\n          description: deve conter a URL pública do endpoint de configuração de registro deste cliente (endpoint para DCM). \u003cbr/\u003eEsta URL deve apontar para o recurso específico do cliente registrado, seja através de query parameter ou como parte do path, segundo definido do Apêndice B da RFC 7592. \u003cbr/\u003eExemplo \u003cbr/\u003e\"https://server.example.com/register/s6BhdRkqt3\" ou \u003cbr/\u003e\"https://server.example.com/register?client_id=s6BhdRkqt3\"\n        registration_access_token:\n          type: string\n          description: token necessário para autorizar ajustes na configuração do registro deste cliente na instituição financeira (para DCM)\n    ClientRegistrationRequest:\n      description: Os campos a seguir seguem a especificação descrita na seção 3.2.1 da RFC 7591, seção 3 da RFC 7592 e seção 2 da especificação \"OpenID Connect Dynamic Client Registration 1.0 incorporating errata set 1\" e, portanto, devem considerar também a inclusão dos campos adicionais ali descritos.\n      type: object\n      required:\n        - software_statement\n        - redirect_uris\n      properties:\n        application_type:\n          description: tipo da aplicação\n          type: string\n          enum:\n            - web\n            - native\n          example: web\n        grant_types:\n          description: grant types suportados pela aplicação cliente\n          type: array\n          items:\n            type: string\n            enum:\n              - client_credentials\n              - authorization_code\n              - refresh_token\n            example:\n              - client_credentials\n              - authorization_code\n              - refresh_token\n        id_token_signed_response_alg: \n          description: algorítmo de assinatura do id_token\n          type: string\n          example: \"PS256\"\n        required_auth_time:\n          description: indica se o claim auth_time é obrigatório no id_token\n          type: boolean\n          example: false\n        response_types: \n          description: lista de response_type que a aplicação cliente se restringe a suportar\n          type: array\n          items:\n            type: string\n            enum: \n              - code id_token\n              - code\n            example:\n              code id_token\n        software_statement:\n          description: declaração de software assinada pelo Diretório de Participantes do Open Banking Brasil, definida em xxxx\n          type: string\n          example: \"eyJraWQiOiJzaWduZXIiLCJ0eXAiOiJKV1QiLCJhb......\"\n        subject_type:\n          description: subject types suportados pela aplicação cliente\n          type: string\n          enum: \n            - pairwise\n            - public\n        token_endpoint_auth_method: \n          description: método de autenticação suportado pela aplicação cliente\n          type: string\n          enum: \n            - private_key_jwt\n            - tls_client_auth\n        introspection_endpoint_auth_method:\n          description: método de autenticação suportado pela aplicação cliente        \n          type: string\n          enum: \n            - private_key_jwt\n            - tls_client_auth\n        revocation_endpoint_auth_method:\n          description: método de autenticação suportado pela aplicação cliente        \n          type: string\n          enum: \n            - private_key_jwt\n            - tls_client_auth\n        request_object_signing_alg:\n          description: algorítmo suportado para assinatura de request object\n          type: string\n          example: \"PS256\"\n        require_signed_request_object:\n          description: suporte a request objects assinados\n          type: boolean\n          example: true\n        require_pushed_authorization_request:\n          description: suporte ao PAR\n          type: boolean\n          example: false\n        tls_client_certificate_bound_access_tokens:\n          description: suporte a tokens vinculados ao certificado de cliente\n          type: boolean\n          example: true\n        client_id:\n          description: client_id da aplicação registrada, ou vazio se for o registro inicial.\n          type: string\n          example: \"S38sDSf93jxakçsdf9\"\n        client_name:\n          description: nome da aplicação cliente\n          type: string\n          example: \"MyBank\"\n        client_uri: \n          description: URL que provê informações sobre a aplicação cliente.\n          type: string\n          example: \"https://mybank.com.br\"\n        request_object_encryption_alg:\n          description: algorítmo suportado para criptografia de request object\n          type: string\n          example: \"RSA-OAEP\"\n        request_object_encryption_enc:\n          description: encoding suportado para criptografia de request object\n          type: string\n          example: \"A256GCM\"\n        jwks_uri: \n          description: URL para o JWKS contendo as chaves públicas da aplicação cliente.\n          type: string\n          example: \"https://keystore.directory.openbankingbrasil.org.br/b961c4eb-509d-4edf-afeb-35642b38185d/25556d5a-b9dd-4e27-aa1a-cce732fe74de/application.jwks\"\n        redirect_uris:\n          description: Array com as URLs de redirecionamento da aplicação cliente.\n          type: array\n          items:\n            type: string\n            example: \"https://mybank.com.br/apis/callback\"\n  securitySchemes:\n    OAuth2Security:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://mybank.com.br/token'\n          scopes:\n            openid: OpenID Connect\n    DCMSecurity:\n      type: http\n      description: Deve informar o registration_access_token obtido durante o processo de registro do cliente (DCR) para autorizar a operação\n      scheme: Bearer\n"
		}
	},
	"Error": "buildIR: make ir: path \"/register\": post: security: security \"OAuth2Security\" (index 0): flow \"clientCredentials\": unknown scope \"register\"",
	"NotImplemented": [
		"http security scheme"
	]
}