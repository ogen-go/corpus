{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tfranzel/drf-spectacular"
		},
		"file": {
			"name": "test_basic.yml",
			"size": 0,
			"path": "tests/test_basic.yml",
			"byteSize": 6109,
			"content": "openapi: 3.0.3\ninfo:\n  title: ''\n  version: 0.0.0\npaths:\n  /albums/:\n    get:\n      operationId: albums_list\n      tags:\n      - albums\n      security:\n      - tokenAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Album'\n          description: ''\n    post:\n      operationId: albums_create\n      description: |-\n        Special documentation about creating albums\n\n        There is even more info here\n      tags:\n      - albums\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Album'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Album'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Album'\n        required: true\n      security:\n      - tokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Album'\n          description: ''\n  /albums/{id}/:\n    get:\n      operationId: albums_retrieve\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this album.\n        required: true\n      tags:\n      - albums\n      security:\n      - tokenAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Album'\n          description: ''\n    put:\n      operationId: albums_update\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this album.\n        required: true\n      tags:\n      - albums\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Album'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Album'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Album'\n        required: true\n      security:\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Album'\n          description: ''\n    patch:\n      operationId: albums_partial_update\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this album.\n        required: true\n      tags:\n      - albums\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedAlbum'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedAlbum'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedAlbum'\n      security:\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Album'\n          description: ''\n    delete:\n      operationId: albums_destroy\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this album.\n        required: true\n      tags:\n      - albums\n      security:\n      - tokenAuth: []\n      responses:\n        '204':\n          description: No response body\n  /albums/{id}/like/:\n    post:\n      operationId: albums_like_create\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this album.\n        required: true\n      tags:\n      - albums\n      security:\n      - tokenAuth: []\n      responses:\n        '200':\n          description: No response body\ncomponents:\n  schemas:\n    Album:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        songs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Song'\n          readOnly: true\n        single:\n          allOf:\n          - $ref: '#/components/schemas/Song'\n          readOnly: true\n        title:\n          type: string\n          maxLength: 100\n        genre:\n          $ref: '#/components/schemas/GenreEnum'\n        year:\n          type: integer\n        released:\n          type: boolean\n      required:\n      - genre\n      - id\n      - released\n      - single\n      - songs\n      - title\n      - year\n    GenreEnum:\n      enum:\n      - POP\n      - ROCK\n      type: string\n    PatchedAlbum:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        songs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Song'\n          readOnly: true\n        single:\n          allOf:\n          - $ref: '#/components/schemas/Song'\n          readOnly: true\n        title:\n          type: string\n          maxLength: 100\n        genre:\n          $ref: '#/components/schemas/GenreEnum'\n        year:\n          type: integer\n        released:\n          type: boolean\n    Song:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        title:\n          type: string\n          maxLength: 100\n        length:\n          type: integer\n        top10:\n          type: boolean\n          nullable: true\n          readOnly: true\n      required:\n      - id\n      - length\n      - title\n      - top10\n  securitySchemes:\n    tokenAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Token-based authentication with required prefix \"Token\"\n",
			"canonicalURL": "/github.com/tfranzel/drf-spectacular@350529ad8f670e4d5e288218f582a48715d05d41/-/blob/tests/test_basic.yml",
			"externalURLs": [
				{
					"url": "https://github.com/tfranzel/drf-spectacular/blob/350529ad8f670e4d5e288218f582a48715d05d41/tests/test_basic.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/albums/\": post: requestBody: contents: media: \"application/x-www-form-urlencoded\": form parameter \"songs\": nested objects not allowed"
}