{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest/tram-todo/single-module/openapi.yaml",
			"byteSize": 4952,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: TODO list tram example service API\n  license:\n    name: MIT\nservers:\n  - url: 'http://light-tram.swagger.io/v1'\npaths:\n  /todos:\n    post:\n      summary: Create a new todo task\n      operationId: addTodo\n      requestBody:\n        description: Add todo task to the list\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTodoRequest'\n      tags:\n        - todos\n      security:\n        - todo_auth:\n            - 'read:todo'\n            - 'write:todo'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Todo'\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/todos/{id}':\n    put:\n      summary: update todo task\n      operationId: updateTodo\n      tags:\n        - todos\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the todo task\n          schema:\n            type: string\n      requestBody:\n        description: Update todo task to the list\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTodoRequest'\n      security:\n        - todo_auth:\n            - 'read:todo'\n            - 'write:todo'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Todo'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      summary: Delete a specific todo task\n      operationId: deleteTodoById\n      tags:\n        - todos\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the todo to delete\n          schema:\n            type: string\n      security:\n        - todo_auth:\n            - 'write:todo'\n      responses:\n        '200':\n          description: Expected response to a valid request\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /todoviews:\n    get:\n      summary: List of todo task by search\n      operationId: listTodos\n      tags:\n        - todos\n      parameters:\n        - name: searchValue\n          in: query\n          description: search critiria\n          required: true\n          schema:\n            type: string\n      security:\n        - todo_auth:\n            - 'read:todo'\n      responses:\n        '200':\n          description: List of todos\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TodoView'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  securitySchemes:\n    todo_auth:\n      type: oauth2\n      description: This API uses OAuth 2 with the client credential grant flow.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://localhost:6882/token'\n          scopes:\n            'write:todos': modify todo in your task list\n            'read:todos': read your todo from your task list\n  schemas:\n    Todo:\n      required:\n        - id\n        - title\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        completed:\n          type: boolean\n        executionOrder:\n          type: integer\n          format: int32\n    TodoView:\n      required:\n        - id\n        - title\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        completed:\n          type: boolean\n        executionOrder:\n          type: integer\n          format: int32\n    CreateTodoRequest:\n      required:\n        - title\n      properties:\n        title:\n          type: string\n        completed:\n          type: boolean\n        executionOrder:\n          type: integer\n          format: int32\n    UpdateTodoRequest:\n      required:\n        - title\n      properties:\n        title:\n          type: string\n        completed:\n          type: boolean\n        executionOrder:\n          type: integer\n          format: int32\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
		}
	},
	"Error": "buildIR: make ir: path \"/todos\": post: security: security \"todo_auth\" (index 0): flow \"clientCredentials\": unknown scope \"read:todo\""
}