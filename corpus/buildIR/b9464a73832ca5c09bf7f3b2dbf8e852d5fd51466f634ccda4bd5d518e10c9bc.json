{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/twitter.com/labs/1.14/openapi.yaml",
			"byteSize": 56545,
			"content": "openapi: 3.0.0\nservers:\n  - description: Twitter API\n    url: https://api.twitter.com\ninfo:\n  contact:\n    name: Twitter Developers\n    url: https://developer.twitter.com/\n    x-twitter: twitter\n  description: API Reference â€” Labs v1\n  license:\n    name: Twitter Developer Agreement and Policy\n    url: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html\n  termsOfService: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html\n  title: Tweets and Users\n  version: \"1.14\"\n  x-apisguru-categories:\n    - social\n  x-logo:\n    url: https://twitter.com/twitter/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://api.twitter.com/labs/1/openapi.json\n      version: \"3.0\"\n  x-preferred: false\n  x-providerName: twitter.com\n  x-serviceName: labs\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\ntags:\n  - description: Miscellaneous endpoints for general API functionality\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/labs\n    name: General\n  - description: APIs related to Rules For Tweet APIs\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/labs/filtered-stream/api-reference\n    name: Rules\n  - description: APIs related to Recent Search\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/labs/recent-search/overview\n    name: Search\n  - description: APIs related to Tweets\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/labs/tweets-and-users/overview\n    name: Tweets\n  - description: APIs related to Users\n    externalDocs:\n      description: Find out more\n      url: https://developer.twitter.com/en/docs/labs/tweets-and-users/overview\n    name: Users\npaths:\n  /labs/1/openapi.json:\n    get:\n      description: Full open api spec in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)\n      operationId: getOpenApiSpec\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: The request was successful\n      summary: Returns the open api spec document.\n      tags:\n        - General\n  /labs/1/tweets/metrics/private:\n    get:\n      description: Returns various metrics about a Tweet, including metrics for an embedded Video if one exists\n      operationId: findPrivateTweetMetricsById\n      parameters:\n        - description: A comma separated list of Tweet IDs. Up to 50 are allowed in a single request.\n          explode: false\n          in: query\n          name: ids\n          required: true\n          schema:\n            items:\n              $ref: \"#/components/schemas/TweetID\"\n            maxItems: 50\n            minItems: 1\n            type: array\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TweetMetricsResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Returns private metrics corresponding to a Tweet\n      tags:\n        - Tweets\n  /labs/1/tweets/stream/filter:\n    get:\n      description: Streams tweets matching a user's active rule set.\n      operationId: streamFilter\n      parameters:\n        - description: A comma-separated list of tweet expansions.\n          in: query\n          name: expansions\n          required: false\n          schema:\n            items:\n              $ref: \"#/components/schemas/TweetExpansionsParamType\"\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: A tweet or error that can be returned by the streaming tweet API\n                oneOf:\n                  - description: The values returned with a successful streamed tweet. Includes the user provided rules that the tweet matched.\n                    properties:\n                      data:\n                        $ref: \"#/components/schemas/Tweet\"\n                      includes:\n                        $ref: \"#/components/schemas/Expansions\"\n                      matching_rules:\n                        description: The list of rules which matched the tweet\n                        items:\n                          properties:\n                            id:\n                              $ref: \"#/components/schemas/RuleId\"\n                            tag:\n                              description: The user-supplied tag assigned to the rule which matched\n                              type: string\n                          required:\n                            - id\n                          type: object\n                        type: array\n                    required:\n                      - data\n                      - matching_rules\n                    type: object\n                  - properties:\n                      errors:\n                        items:\n                          $ref: \"#/components/schemas/Problem\"\n                        type: array\n                    required:\n                      - errors\n                    type: object\n                type: object\n          description: The request was successful. Successful responses will return a stream of individual JSON Tweet payloads.\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Streams tweets matching a user's active rule set.\n      tags:\n        - Tweets\n  /labs/1/tweets/stream/filter/rules:\n    get:\n      description: Returns rules from a user's active rule set. Users can fetch all of their rules or a subset, specified by the provided rule ids.\n      operationId: getRules\n      parameters:\n        - description: A comma-separated list of Rule IDs.\n          in: query\n          name: ids\n          required: false\n          schema:\n            items:\n              $ref: \"#/components/schemas/RuleId\"\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetRulesResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Returns rules from a user's active rule set.\n      tags:\n        - Rules\n        - Tweets\n    post:\n      description: Add or delete rules from a user's active rule set. Users can provide unique, optionally tagged rules to add. Users can delete their entire rule set or a subset specified by rule ids or values.\n      operationId: addOrDeleteRules\n      parameters:\n        - description: Dry Run can be used with both the add and delete action, with the expected result given, but without actually taking any action in the system (meaning the end state will always be as it was when the request was submitted). This is particularly useful to validate rule changes.\n          in: query\n          name: dry_run\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/AddRulesRequest\"\n                - $ref: \"#/components/schemas/DeleteRulesRequest\"\n        description: \"\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/AddRulesResponse\"\n                  - $ref: \"#/components/schemas/DeleteRulesResponse\"\n          description: The request was successful\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Add or delete rules from a user's active rule set.\n      tags:\n        - Rules\n        - Tweets\n  /labs/1/tweets/stream/sample:\n    get:\n      description: Streams a deterministic 1% of public tweets.\n      operationId: streamSample\n      parameters:\n        - description: A comma-separated list of tweet expansions.\n          in: query\n          name: expansions\n          required: false\n          schema:\n            items:\n              $ref: \"#/components/schemas/TweetExpansionsParamType\"\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: A tweet or error that can be returned by the streaming tweet API.\n                oneOf:\n                  - $ref: \"#/components/schemas/SingleTweetLookupResponse\"\n                  - properties:\n                      errors:\n                        items:\n                          $ref: \"#/components/schemas/Problem\"\n                        type: array\n                    required:\n                      - errors\n                    type: object\n                type: object\n          description: The request was successful. Successful responses will return a stream of individual JSON Tweet payloads.\n        default:\n          $ref: \"#/components/responses/HttpErrorResponse\"\n      summary: Streams a deterministic 1% of public tweets.\n      tags:\n        - Tweets\ncomponents:\n  parameters:\n    DefaultFormat:\n      description: Format for all the objects returned as part of the response, including expansions.\n      in: query\n      name: format\n      required: false\n      schema:\n        $ref: \"#/components/schemas/FormatParamType\"\n    PlaceFormat:\n      description: Format for all place objects returned in response.\n      in: query\n      name: place.format\n      required: false\n      schema:\n        $ref: \"#/components/schemas/FormatParamType\"\n    TweetFormat:\n      description: Format for all [Tweet](#Tweet) objects returned in response. Can be used together with other format parameters to expand or reduce Tweet objects only.\n      in: query\n      name: tweet.format\n      required: false\n      schema:\n        $ref: \"#/components/schemas/FormatParamType\"\n    UserFormat:\n      description: Format for all [User](#User) objects returned in response. Can be used together with other format parameters to expand or reduce User objects only.\n      in: query\n      name: user.format\n      required: false\n      schema:\n        $ref: \"#/components/schemas/FormatParamType\"\n  responses:\n    HttpErrorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n      description: The request has failed.\n  schemas:\n    AddRulesRequest:\n      properties:\n        add:\n          items:\n            $ref: \"#/components/schemas/RuleNoId\"\n          type: array\n      required:\n        - add\n      type: object\n    AddRulesResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Rule\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/RulesResponseMetadata\"\n      required:\n        - data\n        - meta\n      type: object\n    AnimatedGif:\n      allOf:\n        - $ref: \"#/components/schemas/CommonMediaFields\"\n      properties:\n        preview_image_url:\n          format: uri\n          type: string\n        type:\n          enum:\n            - animated_gif\n          type: string\n      type: object\n    CashtagEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndices\"\n        - $ref: \"#/components/schemas/CashtagFields\"\n    CashtagFields:\n      description: Represent the portion of text recognized as a Cashtag, and its start and end position within the text.\n      properties:\n        tag:\n          type: string\n      required:\n        - tag\n      type: object\n    ClientDisconnectedProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: Your client has gone away.\n      properties:\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/client-disconnected\n          type: string\n      type: object\n    ClientForbiddenProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates your client is forbidden from making this request.\n      properties:\n        reason:\n          enum:\n            - official-client-forbidden\n            - client-not-enrolled\n          type: string\n        registration_url:\n          format: uri\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/client-forbidden\n          type: string\n      type: object\n    CommonMediaFields:\n      description: This contains the list of the fields that are common to all media returned.\n      properties:\n        height:\n          $ref: \"#/components/schemas/MediaHeight\"\n        media_key:\n          $ref: \"#/components/schemas/MediaKey\"\n        width:\n          $ref: \"#/components/schemas/MediaWidth\"\n      required:\n        - media_key\n        - height\n        - width\n      type: object\n    CompactPlace:\n      allOf:\n        - $ref: \"#/components/schemas/CompactPlaceFields\"\n      properties:\n        format:\n          pattern: compact\n          type: string\n    CompactPlaceFields:\n      properties:\n        country_code:\n          $ref: \"#/components/schemas/CountryCode\"\n        id:\n          $ref: \"#/components/schemas/PlaceId\"\n        name:\n          description: The human readable name of this place.\n          type: string\n      required:\n        - id\n        - name\n        - country_code\n      type: object\n    CompactTweet:\n      allOf:\n        - $ref: \"#/components/schemas/CompactTweetFields\"\n      properties:\n        format:\n          pattern: compact\n          type: string\n    CompactTweetFields:\n      description: This is the list of fields returned when requesting a `compact` response format for a Tweet object.\n      properties:\n        attachments:\n          description: Specifies the type of attachments (if any) present in this Tweet.\n          properties:\n            media_keys:\n              description: A list of Media Keys for each one of the media attachments (if media are attached).\n              items:\n                $ref: \"#/components/schemas/MediaKey\"\n              minItems: 1\n              type: array\n            poll_ids:\n              description: A list of poll IDs (if polls are attached).\n              items:\n                $ref: \"#/components/schemas/PollId\"\n              minItems: 1\n              type: array\n          type: object\n        author_id:\n          $ref: \"#/components/schemas/UserID\"\n        created_at:\n          description: Creation time of the Tweet.\n          format: date-time\n          type: string\n        id:\n          $ref: \"#/components/schemas/TweetID\"\n        in_reply_to_user_id:\n          $ref: \"#/components/schemas/UserID\"\n        referenced_tweets:\n          description: A list of Tweets this Tweet refers to. For example, if the parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include the related Tweet referenced to by its parent.\n          items:\n            properties:\n              id:\n                $ref: \"#/components/schemas/TweetID\"\n              type:\n                enum:\n                  - retweeted\n                  - quoted\n                  - replied_to\n                type: string\n            required:\n              - type\n              - id\n            type: object\n          minItems: 1\n          type: array\n        text:\n          description: The content of the Tweet.\n          type: string\n        withheld:\n          $ref: \"#/components/schemas/TweetWithheld\"\n      required:\n        - id\n        - created_at\n        - text\n        - author_id\n      type: object\n    CompactUser:\n      allOf:\n        - $ref: \"#/components/schemas/CompactUserFields\"\n      properties:\n        format:\n          pattern: compact\n          type: string\n    CompactUserFields:\n      description: This is the list of fields returned when requesting a `compact` response format for a User object.\n      properties:\n        created_at:\n          description: Creation time of this user.\n          format: date-time\n          type: string\n        id:\n          $ref: \"#/components/schemas/UserID\"\n        name:\n          description: The friendly name of this user, as shown on their profile.\n          type: string\n        profile_image_url:\n          description: The URL to the profile image for this user.\n          format: uri\n          type: string\n        protected:\n          description: Indicates if this user has chosen to protect their Tweets (in other words, if this user's Tweets are private).\n          type: boolean\n        username:\n          $ref: \"#/components/schemas/UserName\"\n        verified:\n          description: Indicate if this user is a verified Twitter User.\n          type: boolean\n        withheld:\n          $ref: \"#/components/schemas/UserWithheld\"\n      required:\n        - id\n        - created_at\n        - name\n        - username\n        - protected\n        - verified\n      type: object\n    ConnectionExceptionProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates something is wrong with the connection\n      properties:\n        connection_issue:\n          enum:\n            - TooManyConnections\n            - ProvisioningSubscription\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/streaming-connection\n          type: string\n      type: object\n    ContextAnnotation:\n      description: Annotation inferred from the tweet text.\n      properties:\n        domain:\n          $ref: \"#/components/schemas/ContextAnnotationDomainFields\"\n        entity:\n          $ref: \"#/components/schemas/ContextAnnotationEntityFields\"\n      required:\n        - domain\n        - entity\n      type: object\n    ContextAnnotationDomainFields:\n      description: Represents the data for the context annotation domain.\n      properties:\n        description:\n          description: Description of the context annotation domain.\n          type: string\n        id:\n          description: The unique id for a context annotation domain.\n          pattern: ^[0-9]{1,19}$\n          type: string\n        name:\n          description: Name of the context annotation domain.\n          type: string\n      required:\n        - id\n      type: object\n    ContextAnnotationEntityFields:\n      description: Represents the data for the context annotation entity.\n      properties:\n        description:\n          description: Description of the context annotation entity.\n          type: string\n        id:\n          description: The unique id for a context annotation entity.\n          pattern: ^[0-9]{1,19}$\n          type: string\n        name:\n          description: Name of the context annotation entity.\n          type: string\n      required:\n        - id\n      type: object\n    CountryCode:\n      pattern: ^[A-Z]{2}$\n      type: string\n    DefaultPlace:\n      allOf:\n        - $ref: \"#/components/schemas/CompactPlaceFields\"\n        - $ref: \"#/components/schemas/DefaultPlaceFields\"\n      properties:\n        format:\n          pattern: default\n          type: string\n    DefaultPlaceFields:\n      properties:\n        contained_within:\n          items:\n            $ref: \"#/components/schemas/PlaceId\"\n          minItems: 1\n          type: array\n        country:\n          type: string\n        full_name:\n          type: string\n        place_type:\n          $ref: \"#/components/schemas/PlaceType\"\n      required:\n        - place_type\n        - full_name\n        - country\n      type: object\n    DefaultTweet:\n      allOf:\n        - $ref: \"#/components/schemas/CompactTweetFields\"\n        - $ref: \"#/components/schemas/DefaultTweetFields\"\n      properties:\n        format:\n          pattern: default\n          type: string\n    DefaultTweetFields:\n      description: This is the list of fields returned by default for a Tweet object, for example when `format` or `tweet.format` are omitted, or when they are set to `default`.\n      properties:\n        entities:\n          $ref: \"#/components/schemas/FullTextEntities\"\n        geo:\n          description: The location tagged on the Tweet, if the user provided one.\n          properties:\n            coordinates:\n              $ref: \"#/components/schemas/Point\"\n            place_id:\n              $ref: \"#/components/schemas/PlaceId\"\n          type: object\n      type: object\n    DefaultUser:\n      allOf:\n        - $ref: \"#/components/schemas/CompactUserFields\"\n        - $ref: \"#/components/schemas/DefaultUserFields\"\n      properties:\n        format:\n          pattern: default\n          type: string\n    DefaultUserFields:\n      description: This is the list of fields returned by default for a User object, for example when `format` or `user.format` are omitted, or when they are set to `default`.\n      properties:\n        description:\n          description: The text of this user's profile description (also known as bio), if the user provided one.\n          type: string\n        entities:\n          description: A list of metadata found in the user's profile description.\n          properties:\n            description:\n              $ref: \"#/components/schemas/FullTextEntities\"\n            url:\n              description: Expanded details for the URL specified in the user's profile, with start and end indices.\n              properties:\n                urls:\n                  items:\n                    $ref: \"#/components/schemas/UrlEntity\"\n                  minItems: 1\n                  type: array\n              type: object\n          type: object\n        location:\n          description: The location specified in the user's profile, if the user provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries.\n          type: string\n        most_recent_tweet_id:\n          $ref: \"#/components/schemas/TweetID\"\n        pinned_tweet_id:\n          $ref: \"#/components/schemas/TweetID\"\n        url:\n          description: The URL specified in the user's profile.\n          type: string\n      required:\n        - url\n        - description\n      type: object\n    DeleteRulesRequest:\n      properties:\n        ids:\n          items:\n            $ref: \"#/components/schemas/RuleId\"\n          type: array\n        values:\n          items:\n            $ref: \"#/components/schemas/RuleValue\"\n          type: array\n      type: object\n    DeleteRulesResponse:\n      properties:\n        meta:\n          $ref: \"#/components/schemas/RulesResponseMetadata\"\n      required:\n        - meta\n      type: object\n    DetailedPlace:\n      allOf:\n        - $ref: \"#/components/schemas/CompactPlaceFields\"\n        - $ref: \"#/components/schemas/DefaultPlaceFields\"\n        - $ref: \"#/components/schemas/DetailedPlaceFields\"\n      properties:\n        format:\n          pattern: detailed\n          type: string\n    DetailedPlaceFields:\n      properties:\n        geo:\n          $ref: \"#/components/schemas/Geo\"\n      type: object\n    DetailedTweet:\n      allOf:\n        - $ref: \"#/components/schemas/CompactTweetFields\"\n        - $ref: \"#/components/schemas/DefaultTweetFields\"\n        - $ref: \"#/components/schemas/DetailedTweetFields\"\n      properties:\n        format:\n          pattern: detailed\n          type: string\n    DetailedTweetFields:\n      description: This is the list of fields for a Tweet object when `format` or `tweet.format` are set to `detailed`.\n      properties:\n        context_annotations:\n          items:\n            $ref: \"#/components/schemas/ContextAnnotation\"\n          minItems: 1\n          type: array\n        lang:\n          description: Language of the Tweet, if detected by Twitter. Returned as a BCP47 language tag.\n          type: string\n        possibly_sensitive:\n          description: Indicates if this Tweet contains URLs marked as sensitive, for example content suitable for mature audiences.\n          type: boolean\n        source:\n          description: The name of the app the user Tweeted from.\n          type: string\n        stats:\n          description: Engagement metrics for the Tweet at the time of the request.\n          properties:\n            like_count:\n              description: Number of times this Tweet has been liked.\n              type: integer\n            quote_count:\n              description: Number of times this Tweet has been quoted.\n              type: integer\n            reply_count:\n              description: Number of times this Tweet has been replied to.\n              type: integer\n            retweet_count:\n              description: Number of times this Tweet has been Retweeted.\n              type: integer\n          required:\n            - retweet_count\n            - reply_count\n            - like_count\n          type: object\n      required:\n        - stats\n        - possibly_sensitive\n      type: object\n    DetailedUser:\n      allOf:\n        - $ref: \"#/components/schemas/CompactUserFields\"\n        - $ref: \"#/components/schemas/DefaultUserFields\"\n        - $ref: \"#/components/schemas/DetailedUserFields\"\n      properties:\n        format:\n          pattern: detailed\n          type: string\n    DetailedUserFields:\n      description: This is the list of fields for a User object when `format` or `user.format` are set to `detailed`.\n      properties:\n        stats:\n          description: A list of metrics for this user\n          properties:\n            followers_count:\n              description: Number of users who are following this user.\n              type: integer\n            following_count:\n              description: Number of users this user is following.\n              type: integer\n            listed_count:\n              description: The number of lists that include this user.\n              type: integer\n            tweet_count:\n              description: The number of Tweets (including Retweets) posted by this user.\n              type: integer\n          required:\n            - followers_count\n            - following_count\n            - tweet_count\n            - listed_count\n          type: object\n      type: object\n    DisallowedResourceProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates that the resource requested violates the precepts of this API.\n      properties:\n        resource_id:\n          type: string\n        resource_type:\n          enum:\n            - tweet\n          type: string\n        section:\n          enum:\n            - data\n            - includes\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/disallowed-resource\n          type: string\n      required:\n        - resource_id\n        - resource_type\n        - section\n      type: object\n    DuplicateRuleProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: The rule you have submitted is a duplicate.\n      properties:\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/duplicate-rules\n          type: string\n      type: object\n    EntityIndices:\n      description: Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.\n      properties:\n        end:\n          description: Index (zero-based) at which position this entity ends.\n          minimum: 0\n          type: integer\n        start:\n          description: Index (zero-based) at which position this entity starts.\n          minimum: 0\n          type: integer\n      required:\n        - start\n        - end\n      type: object\n    Error:\n      properties:\n        code:\n          format: int32\n          type: integer\n        message:\n          type: string\n      required:\n        - code\n        - message\n    Expansions:\n      properties:\n        media:\n          items:\n            $ref: \"#/components/schemas/Media\"\n          minItems: 1\n          type: array\n        places:\n          items:\n            $ref: \"#/components/schemas/Place\"\n          minItems: 1\n          type: array\n        polls:\n          items:\n            $ref: \"#/components/schemas/Poll\"\n          minItems: 1\n          type: array\n        tweets:\n          items:\n            $ref: \"#/components/schemas/Tweet\"\n          minItems: 1\n          type: array\n        users:\n          items:\n            $ref: \"#/components/schemas/User\"\n          minItems: 1\n          type: array\n      type: object\n    FormatParamType:\n      description: Specifies the level of detail the response body should return. Allowed values are `default` (return most fields in the response body), `compact` (return only a minimum subset with the most important fields) and `detailed` (return all the available fields).\n      enum:\n        - compact\n        - default\n        - detailed\n      example: detailed\n      type: string\n    FullTextEntities:\n      properties:\n        annotations:\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/EntityIndices\"\n              - description: Represents the data for the annotation.\n                properties:\n                  normalized_text:\n                    description: Text used to determine annotation.\n                    type: string\n                  probability:\n                    description: Confidence factor for annotation type.\n                    format: double\n                    maximum: 1\n                    minimum: 0\n                    type: number\n                  type:\n                    description: Annotation type.\n                    type: string\n                type: object\n            description: Annotation for entities based on the tweet text.\n          minItems: 1\n          type: array\n        cashtags:\n          items:\n            $ref: \"#/components/schemas/CashtagEntity\"\n          minItems: 1\n          type: array\n        hashtags:\n          items:\n            $ref: \"#/components/schemas/HashtagEntity\"\n          minItems: 1\n          type: array\n        mentions:\n          items:\n            $ref: \"#/components/schemas/MentionEntity\"\n          minItems: 1\n          type: array\n        urls:\n          items:\n            $ref: \"#/components/schemas/UrlEntity\"\n          minItems: 1\n          type: array\n      type: object\n    GenericProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A generic problem with no additional information beyond that provided by the HTTP status code.\n      properties:\n        status:\n          type: integer\n        type:\n          enum:\n            - about:blank\n          type: string\n      required:\n        - status\n    Geo:\n      properties:\n        bbox:\n          items:\n            format: double\n            maximum: 180\n            minimum: -180\n            type: number\n          maxItems: 4\n          minItems: 4\n          type: array\n        geometry:\n          $ref: \"#/components/schemas/Point\"\n        properties:\n          type: object\n        type:\n          enum:\n            - Feature\n          type: string\n      required:\n        - type\n        - bbox\n        - properties\n      type: object\n    GetRulesResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Rule\"\n          type: array\n        meta:\n          $ref: \"#/components/schemas/RulesResponseMetadata\"\n      required:\n        - data\n        - meta\n      type: object\n    HTTPStatusCode:\n      description: HTTP Status Code.\n      maximum: 599\n      minimum: 100\n      type: integer\n    HashtagEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndices\"\n        - $ref: \"#/components/schemas/HashtagFields\"\n    HashtagFields:\n      description: Represent the portion of text recognized as a Hashtag, and its start and end position within the text.\n      properties:\n        tag:\n          description: The text of the Hashtag\n          type: string\n      required:\n        - tag\n      type: object\n    HideReplyRequest:\n      properties:\n        hidden:\n          enum:\n            - true\n          type: boolean\n      type: object\n    HideReplyResponse:\n      properties:\n        data:\n          properties:\n            hidden:\n              enum:\n                - true\n              type: boolean\n          type: object\n      type: object\n    InvalidRequestProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates this request is invalid.\n      properties:\n        errors:\n          items:\n            properties:\n              message:\n                type: string\n              parameters:\n                additionalProperties:\n                  items:\n                    type: string\n                  type: array\n                type: object\n            type: object\n          type: array\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/invalid-request\n          type: string\n      type: object\n    InvalidRuleProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: The rule you have submitted is invalid.\n      properties:\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/invalid-rules\n          type: string\n      type: object\n    Media:\n      discriminator:\n        mapping:\n          animated_gif: \"#/components/schemas/AnimatedGif\"\n          photo: \"#/components/schemas/Photo\"\n          video: \"#/components/schemas/Video\"\n        propertyName: type\n      oneOf:\n        - $ref: \"#/components/schemas/Photo\"\n        - $ref: \"#/components/schemas/Video\"\n        - $ref: \"#/components/schemas/AnimatedGif\"\n      required:\n        - type\n    MediaHeight:\n      description: The height of the media in pixels\n      minimum: 0\n      type: integer\n    MediaKey:\n      description: The Media Key identifier for this attachment.\n      pattern: ^([0-9]+)_([0-9]+)$\n      type: string\n    MediaWidth:\n      description: The width of the media in pixels\n      minimum: 0\n      type: integer\n    MentionEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndices\"\n        - $ref: \"#/components/schemas/MentionFields\"\n    MentionFields:\n      description: Represent the portion of text recognized as a User mention, and its start and end position within the text.\n      properties:\n        username:\n          $ref: \"#/components/schemas/UserName\"\n      required:\n        - username\n      type: object\n    OperationalDisconnectProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: You have been disconnected for operational reasons.\n      properties:\n        disconnect_type:\n          enum:\n            - OperationalDisconnect\n            - UpstreamOperationalDisconnect\n            - ForceDisconnect\n            - UpstreamUncleanDisconnect\n            - SlowReader\n            - InternalError\n            - PackageUpgraded\n            - PackageDowngraded\n            - ClientApplicationStateDegraded\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/operational-disconnect\n          type: string\n      type: object\n    Photo:\n      allOf:\n        - $ref: \"#/components/schemas/CommonMediaFields\"\n      properties:\n        type:\n          enum:\n            - photo\n          type: string\n        url:\n          format: uri\n          type: string\n      type: object\n    Place:\n      discriminator:\n        mapping:\n          compact: \"#/components/schemas/CompactPlace\"\n          default: \"#/components/schemas/DefaultPlace\"\n          detailed: \"#/components/schemas/DetailedPlace\"\n        propertyName: format\n      oneOf:\n        - $ref: \"#/components/schemas/CompactPlace\"\n        - $ref: \"#/components/schemas/DefaultPlace\"\n        - $ref: \"#/components/schemas/DetailedPlace\"\n      required:\n        - format\n    PlaceId:\n      description: The identifier for this place\n      type: string\n    PlaceType:\n      enum:\n        - poi\n        - neighborhood\n        - city\n        - admin\n        - country\n        - unknown\n      type: string\n    Point:\n      description: A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) geometry object.\n      properties:\n        coordinates:\n          $ref: \"#/components/schemas/Position\"\n        type:\n          enum:\n            - Point\n          type: string\n      required:\n        - type\n        - coordinates\n      type: object\n    Poll:\n      description: Represent a Poll attached to a Tweet\n      properties:\n        duration_minutes:\n          type: integer\n        end_datetime:\n          format: date-time\n          type: string\n        id:\n          $ref: \"#/components/schemas/PollId\"\n        options:\n          items:\n            $ref: \"#/components/schemas/PollOption\"\n          maxItems: 4\n          minItems: 2\n          type: array\n        voting_status:\n          enum:\n            - open\n            - closed\n          type: string\n      required:\n        - id\n        - options\n        - voting_status\n        - end_datetime\n      type: object\n    PollId:\n      description: Unique identifier of this poll.\n      pattern: ^[0-9]{1,19}$\n      type: string\n    PollOption:\n      description: Describes a choice in a Poll object.\n      properties:\n        label:\n          description: The text of a poll choice.\n          type: string\n        position:\n          description: Position of this choice in the poll.\n          type: integer\n        votes:\n          description: Number of users who voted for this choice.\n          type: integer\n      required:\n        - position\n        - label\n        - votes\n      type: object\n    Position:\n      description: A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in the format `[longitude,latitude]`.\n      items:\n        type: number\n      maxItems: 2\n      minItems: 2\n      type: array\n    Problem:\n      description: An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807).\n      discriminator:\n        mapping:\n          about:blank: \"#/components/schemas/GenericProblem\"\n          https://api.twitter.com/labs/1/problems/client-disconnected: \"#/components/schemas/ClientDisconnectedProblem\"\n          https://api.twitter.com/labs/1/problems/client-forbidden: \"#/components/schemas/ClientForbiddenProblem\"\n          https://api.twitter.com/labs/1/problems/disallowed-resource: \"#/components/schemas/DisallowedResourceProblem\"\n          https://api.twitter.com/labs/1/problems/duplicate-rules: \"#/components/schemas/DuplicateRuleProblem\"\n          https://api.twitter.com/labs/1/problems/invalid-request: \"#/components/schemas/InvalidRequestProblem\"\n          https://api.twitter.com/labs/1/problems/invalid-rules: \"#/components/schemas/InvalidRuleProblem\"\n          https://api.twitter.com/labs/1/problems/not-authorized-for-resource: \"#/components/schemas/ResourceUnauthorizedProblem\"\n          https://api.twitter.com/labs/1/problems/operational-disconnect: \"#/components/schemas/OperationalDisconnectProblem\"\n          https://api.twitter.com/labs/1/problems/resource-not-found: \"#/components/schemas/ResourceNotFoundProblem\"\n          https://api.twitter.com/labs/1/problems/rule-cap: \"#/components/schemas/RulesCapProblem\"\n          https://api.twitter.com/labs/1/problems/streaming-connection: \"#/components/schemas/ConnectionExceptionProblem\"\n          https://api.twitter.com/labs/1/problems/unsupported-authentication: \"#/components/schemas/UnsupportedAuthenticationProblem\"\n          https://api.twitter.com/labs/1/problems/usage-capped: \"#/components/schemas/UsageCapExceededProblem\"\n        propertyName: type\n      oneOf:\n        - $ref: \"#/components/schemas/GenericProblem\"\n        - $ref: \"#/components/schemas/InvalidRequestProblem\"\n        - $ref: \"#/components/schemas/ClientForbiddenProblem\"\n        - $ref: \"#/components/schemas/ResourceNotFoundProblem\"\n        - $ref: \"#/components/schemas/ResourceUnauthorizedProblem\"\n        - $ref: \"#/components/schemas/DisallowedResourceProblem\"\n        - $ref: \"#/components/schemas/UnsupportedAuthenticationProblem\"\n        - $ref: \"#/components/schemas/UsageCapExceededProblem\"\n        - $ref: \"#/components/schemas/ConnectionExceptionProblem\"\n        - $ref: \"#/components/schemas/ClientDisconnectedProblem\"\n        - $ref: \"#/components/schemas/OperationalDisconnectProblem\"\n        - $ref: \"#/components/schemas/RulesCapProblem\"\n        - $ref: \"#/components/schemas/InvalidRuleProblem\"\n        - $ref: \"#/components/schemas/DuplicateRuleProblem\"\n    ProblemFields:\n      properties:\n        detail:\n          type: string\n        title:\n          type: string\n        type:\n          format: uri\n          type: string\n      required:\n        - type\n        - title\n        - detail\n      type: object\n    ResourceNotFoundProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates that a given Tweet, User, etc. does not exist.\n      properties:\n        parameter:\n          minLength: 1\n          type: string\n        resource_type:\n          enum:\n            - user\n            - tweet\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/resource-not-found\n          type: string\n        value:\n          description: Value will match the schema of the field.\n      required:\n        - parameter\n        - value\n        - resource_type\n      type: object\n    ResourceUnauthorizedProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates you are not allowed to see a particular Tweet, User, etc.\n      properties:\n        resource_id:\n          type: string\n        resource_type:\n          enum:\n            - tweet\n          type: string\n        section:\n          enum:\n            - data\n            - includes\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/not-authorized-for-resource\n          type: string\n      required:\n        - resource_id\n        - resource_type\n        - section\n      type: object\n    Rule:\n      properties:\n        id:\n          $ref: \"#/components/schemas/RuleId\"\n        tag:\n          $ref: \"#/components/schemas/RuleTag\"\n        value:\n          $ref: \"#/components/schemas/RuleValue\"\n      required:\n        - value\n      type: object\n    RuleId:\n      description: Unique identifier of this rule.\n      example: \"120897978112909812\"\n      pattern: ^[0-9]{1,19}$\n      type: string\n    RuleNoId:\n      properties:\n        tag:\n          $ref: \"#/components/schemas/RuleTag\"\n        value:\n          $ref: \"#/components/schemas/RuleValue\"\n      required:\n        - value\n      type: object\n    RuleTag:\n      description: A tag meant for the labeling of user provided rules.\n      example: Non-retweeted coffee tweets\n      type: string\n    RuleValue:\n      description: The filterlang value of the rule.\n      example: coffee -is:retweet\n      type: string\n    RulesCapProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: You have exceeded the maximum number of rules.\n      properties:\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/rule-cap\n          type: string\n      type: object\n    RulesRequestSummary:\n      oneOf:\n        - properties:\n            created:\n              format: int32\n              type: integer\n            not_created:\n              format: int32\n              type: integer\n          required:\n            - created\n            - not_created\n          type: object\n        - properties:\n            deleted:\n              format: int32\n              type: integer\n            not_deleted:\n              format: int32\n              type: integer\n          required:\n            - deleted\n            - not_deleted\n          type: object\n      type: object\n    RulesResponseMetadata:\n      properties:\n        sent:\n          type: string\n        summary:\n          $ref: \"#/components/schemas/RulesRequestSummary\"\n      required:\n        - sent\n      type: object\n    SingleTweetLookupResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Tweet\"\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    Tweet:\n      discriminator:\n        mapping:\n          compact: \"#/components/schemas/CompactTweet\"\n          default: \"#/components/schemas/DefaultTweet\"\n          detailed: \"#/components/schemas/DetailedTweet\"\n        propertyName: format\n      example:\n        author_id: \"712089797812\"\n        created_at: Wed Jun 20 16:53:49 +0000 2018\n        format: compact\n        id: \"12234\"\n        text: Some great insight into the human condition.\n      oneOf:\n        - $ref: \"#/components/schemas/CompactTweet\"\n        - $ref: \"#/components/schemas/DefaultTweet\"\n        - $ref: \"#/components/schemas/DetailedTweet\"\n      required:\n        - format\n    TweetExpansionsParamType:\n      description: The list of fields you can expand for a [Tweet](#Tweet) object. If the field has an ID, it can be expanded into a full object.\n      example: author_id\n      items:\n        enum:\n          - author_id\n          - referenced_tweets.id\n          - in_reply_to_user_id\n          - geo.place_id\n          - attachments.media_keys\n          - attachments.poll_ids\n          - entities.mentions.username\n          - referenced_tweets.id.author_id\n        type: string\n      minItems: 1\n      type: array\n      uniqueItems: true\n    TweetID:\n      description: Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.\n      example: \"120897978112909812\"\n      pattern: ^[0-9]{1,19}$\n      type: string\n    TweetInteractionMetrics:\n      description: Interaction metrics for a Tweet.\n      example:\n        impression_count: 100\n        like_count: 1\n        quote_count: 3\n        reply_count: 4\n        retweet_count: 2\n      properties:\n        impression_count:\n          description: Number of times this Tweet has been viewed.\n          format: int32\n          type: integer\n        like_count:\n          description: Number of times this Tweet has been liked.\n          format: int32\n          type: integer\n        quote_count:\n          description: Number of times this Tweet has been quoted.\n          format: int32\n          type: integer\n        reply_count:\n          description: Number of times this Tweet has been replied to.\n          format: int32\n          type: integer\n        retweet_count:\n          description: Number of times this Tweet has been Retweeted.\n          format: int32\n          type: integer\n      required:\n        - like_count\n        - retweet_count\n        - quote_count\n        - reply_count\n      type: object\n    TweetLookupResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Tweet\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n      type: object\n    TweetMetrics:\n      description: Metrics for a Tweet.\n      properties:\n        tweet:\n          $ref: \"#/components/schemas/TweetInteractionMetrics\"\n        tweet_id:\n          $ref: \"#/components/schemas/TweetID\"\n        video:\n          $ref: \"#/components/schemas/VideoMetrics\"\n      required:\n        - tweet_id\n        - tweet\n      type: object\n    TweetMetricsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/TweetMetrics\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n      type: object\n    TweetSearchResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Tweet\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n        meta:\n          properties:\n            newest_id:\n              description: Most recent Tweet Id returned by search query\n              pattern: ^[0-9]{1,19}$\n              type: string\n            next_token:\n              description: This value is used to get the next 'page' of results by providing it to the next_token parameter.\n              type: string\n            oldest_id:\n              description: Oldest Tweet Id returned by search query\n              pattern: ^[0-9]{1,19}$\n              type: string\n            result_count:\n              description: Number of search query results\n              format: int32\n              type: integer\n          type: object\n      type: object\n    TweetWithheld:\n      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).\n      properties:\n        copyright:\n          description: Indicates if the content is being withheld for on the basis of copyright infringement.\n          type: boolean\n        country_codes:\n          description: Provides a list of countries where this content is not available.\n          items:\n            $ref: \"#/components/schemas/CountryCode\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n        scope:\n          description: Indicates whether the content being withheld is the `tweet` or a `user`.\n          enum:\n            - tweet\n            - user\n          type: string\n      required:\n        - copyright\n        - country_codes\n      type: object\n    URL:\n      description: A validly formatted URL.\n      example: https://example.com\n      format: uri\n      type: string\n    URLFields:\n      description: Represent the portion of text recognized as a URL.\n      properties:\n        description:\n          description: Description of the URL landing page.\n          type: string\n        display_url:\n          description: The URL as displayed in the Twitter client.\n          type: string\n        expanded_url:\n          $ref: \"#/components/schemas/URL\"\n        images:\n          items:\n            $ref: \"#/components/schemas/URLImage\"\n          minItems: 1\n          type: array\n        status:\n          $ref: \"#/components/schemas/HTTPStatusCode\"\n        title:\n          description: Title of the page the URL points to.\n          type: string\n        url:\n          $ref: \"#/components/schemas/URL\"\n      required:\n        - url\n      type: object\n    URLImage:\n      description: Represent the information for the URL image\n      properties:\n        height:\n          $ref: \"#/components/schemas/MediaHeight\"\n        url:\n          $ref: \"#/components/schemas/URL\"\n        width:\n          $ref: \"#/components/schemas/MediaWidth\"\n      type: object\n    UnsupportedAuthenticationProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates that the authentication used is not supported.\n      properties:\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/unsupported-authentication\n          type: string\n      type: object\n    UrlEntity:\n      allOf:\n        - $ref: \"#/components/schemas/EntityIndices\"\n        - $ref: \"#/components/schemas/URLFields\"\n      description: Represent the portion of text recognized as a URL, and its start and end position within the text.\n    UsageCapExceededProblem:\n      allOf:\n        - $ref: \"#/components/schemas/ProblemFields\"\n      description: A problem that indicates that a usage cap has been exceeded.\n      properties:\n        period:\n          enum:\n            - Daily\n            - Monthly\n          type: string\n        scope:\n          enum:\n            - Account\n            - Product\n          type: string\n        type:\n          enum:\n            - https://api.twitter.com/labs/1/problems/usage-capped\n          type: string\n      type: object\n    User:\n      discriminator:\n        mapping:\n          compact: \"#/components/schemas/CompactUser\"\n          default: \"#/components/schemas/DefaultUser\"\n          detailed: \"#/components/schemas/DetailedUser\"\n        propertyName: format\n      example:\n        created_at: 2017-10-09T17:16:24Z\n        format: compact\n        id: \"1234\"\n        name: Twitter API\n        protected: false\n        username: twitterapi\n      oneOf:\n        - $ref: \"#/components/schemas/CompactUser\"\n        - $ref: \"#/components/schemas/DefaultUser\"\n        - $ref: \"#/components/schemas/DetailedUser\"\n      required:\n        - format\n    UserExpansionsParamType:\n      description: The list of fields you can expand for a [User](#User) object. If the field has an ID, it can be expanded into a full object.\n      example: most_recent_tweet_id\n      items:\n        enum:\n          - most_recent_tweet_id\n          - pinned_tweet_id\n        type: string\n      minItems: 1\n      type: array\n      uniqueItems: true\n    UserID:\n      description: Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.\n      example: \"712089797812\"\n      pattern: ^[0-9]{1,19}$\n      type: string\n    UserLookupResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/User\"\n          minItems: 1\n          type: array\n        errors:\n          items:\n            $ref: \"#/components/schemas/Problem\"\n          minItems: 1\n          type: array\n        includes:\n          $ref: \"#/components/schemas/Expansions\"\n          type: object\n      type: object\n    UserName:\n      description: The Twitter handle (screen name) of this user.\n      pattern: ^[A-Za-z0-9_]{1,15}$\n      type: string\n    UserWithheld:\n      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).\n      properties:\n        country_codes:\n          description: Provides a list of countries where this content is not available.\n          items:\n            $ref: \"#/components/schemas/CountryCode\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n        scope:\n          description: Indicates that the content being withheld is a `user`.\n          enum:\n            - user\n          type: string\n      required:\n        - country_codes\n      type: object\n    Video:\n      allOf:\n        - $ref: \"#/components/schemas/CommonMediaFields\"\n      properties:\n        duration_ms:\n          type: integer\n        preview_image_url:\n          format: uri\n          type: string\n        type:\n          enum:\n            - video\n          type: string\n      type: object\n    VideoMetrics:\n      description: Metrics corresponding to a Video.\n      properties:\n        media_key:\n          $ref: \"#/components/schemas/MediaKey\"\n        playback_0_count:\n          description: Number of users who made it through 0% of the video.\n          format: int32\n          type: integer\n        playback_100_count:\n          description: Number of users who made it through 100% of the video.\n          format: int32\n          type: integer\n        playback_25_count:\n          description: Number of users who made it through 25% of the video.\n          format: int32\n          type: integer\n        playback_50_count:\n          description: Number of users who made it through 50% of the video.\n          format: int32\n          type: integer\n        playback_75_count:\n          description: Number of users who made it through 75% of the video.\n          format: int32\n          type: integer\n        view_count:\n          description: Number of times this video has been viewed.\n          format: int32\n          type: integer\n      required:\n        - media_key\n        - view_count\n      type: object\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@57168637e057c3e5ebe933717019f6f25bc1886e/-/blob/APIs/twitter.com/labs/1.14/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/57168637e057c3e5ebe933717019f6f25bc1886e/APIs/twitter.com/labs/1.14/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/labs/1/tweets/stream/filter\": get: parameters: \"expansions\": nested arrays not allowed",
	"NotImplemented": [
		"sum types with same names"
	]
}