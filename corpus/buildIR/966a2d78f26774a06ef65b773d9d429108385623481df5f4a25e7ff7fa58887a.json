{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenAPITools/openapi-generator"
		},
		"file": {
			"name": "multipart-v3.yaml",
			"size": 0,
			"path": "modules/openapi-generator/src/test/resources/3_0/rust-server/multipart-v3.yaml",
			"byteSize": 3094,
			"content": "# Test the multipart function of the OpenAPI specification\n#\n# Specifically, these tests include\n#   - multipart/form data including\n#      - binary data\n#      - string data\n#      - objects\n\nopenapi: 3.0.1\ninfo:\n  title: Multipart OpenAPI V3 Rust Server Test\n  description: API under test\n  version: 1.0.7\npaths:\n  /multipart_request:\n    post:\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/multipart_request'\n      responses:\n        '201':\n          description: 'OK'\n  /multipart_related_request:\n    post:\n      requestBody:\n        required: true\n        content:\n          multipart/related:  # message with binary body part(s)\n            schema:\n              $ref: '#/components/schemas/multipart_related_request'\n            encoding:\n              object_field:\n                contentType:  application/json\n              optional_binary_field:\n                contentType:  application/zip\n                headers:\n                  Content-Id:\n                    schema:\n                      type: string\n              required_binary_field:\n                contentType:  image/png\n                headers:\n                  Content-Id:\n                    schema:\n                      type: string\n\n      responses:\n        '201':\n          description: 'OK'\n  /multiple-identical-mime-types:\n    post:\n      requestBody:\n        required: true\n        content:\n          multipart/related:\n            schema:\n              type: object\n              properties:\n                binary1:\n                  type: string\n                  format: binary\n                binary2:\n                  type: string\n                  format: binary\n            encoding:\n              binary1:\n                contentType: application/octet-stream\n              binary2:\n                contentType: application/octet-stream\n      responses:\n        200:\n          description: OK\ncomponents:\n  schemas:\n    multipart_request:\n      type: object\n      required:\n        - string_field\n        - binary_field\n      properties:\n        string_field:\n          type: string\n        optional_string_field:\n          type: string\n        object_field:\n          type: object\n          required:\n            - field_a\n          properties:\n            field_a:\n              type: string\n            field_b:\n              type: array\n              items:\n                type: string\n        binary_field:\n          type: string\n          format: byte\n    multipart_related_request:\n      type: object\n      required:\n        - required_binary_field\n      properties:\n        object_field:\n          type: object\n          required:\n            - field_a\n          properties:\n            field_a:\n              type: string\n            field_b:\n              type: array\n              items:\n                type: string\n        optional_binary_field:\n          type: string\n          format: binary\n        required_binary_field:\n          type: string\n          format: binary\n",
			"canonicalURL": "/github.com/OpenAPITools/openapi-generator@3a2bbbb8501f7238dba0dc124234e9e0459cdd9e/-/blob/modules/openapi-generator/src/test/resources/3_0/rust-server/multipart-v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenAPITools/openapi-generator/blob/3a2bbbb8501f7238dba0dc124234e9e0459cdd9e/modules/openapi-generator/src/test/resources/3_0/rust-server/multipart-v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/multipart_request\": post: requestBody: contents: multipart/form-data: form parameter \"object_field\": field \"FieldB\": nested arrays not allowed",
	"NotImplemented": [
		"unsupported content types"
	]
}