{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/beckn/DSEP-Specification"
		},
		"file": {
			"name": "dsep.yaml",
			"size": 0,
			"path": "api/dsep.yaml",
			"byteSize": 84595,
			"content": "openapi: 3.0.0\ninfo:\n  title: Beckn Core API\n  description: Beckn Core API specification\n  version: 1.0.0-dsep-draft\n\nsecurity:\n  - SubscriberAuth: []\n  - GatewaySubscriberAuth: []\n  - GatewaySubscriberAuthNew: []\npaths:\n  /search:\n    post:\n      tags:\n        - Beckn Provider Platform (BPP)\n        - Beckn Gateway (BG)\n      description: This allows a user to search for a) Jobs and Internships b) Trainings and Courses c)  \n      requestBody:\n        description: BAP searches for services\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    intent:\n                      $ref: '#/components/schemas/Intent'\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /select:\n    post:\n      tags:\n        - Beckn Provider Platform (BPP)\n      description: Select items from the catalog and build your order\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n              required:\n                - context\n                - message\n\n\n\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /init:\n    post:\n      tags:\n        - Beckn Provider Platform (BPP)\n      description: Initialize an order by providing billing and/or shipping details\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /confirm:\n    post:\n      tags:\n        - Beckn Provider Platform (BPP)\n      description: Initialize an order by providing billing and/or shipping details\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /status:\n    post:\n      tags:\n        - Beckn Provider Platform (BPP)\n      description: Fetch the latest order object\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order_id:\n                      $ref: '#/components/schemas/Order/properties/id'\n                  required:\n                    - order_id\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /track:\n    post:\n      tags:\n        - Beckn Provider Platform (BPP)\n      description: Track an active order\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order_id:\n                      $ref: '#/components/schemas/Order/properties/id'\n                    callback_url:\n                      type: string\n                      format: uri\n                  required:\n                    - order_id\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /cancel:\n    post:\n      tags:\n        - Beckn Provider Platform (BPP)\n      description: Cancel an order\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order_id:\n                      $ref: '#/components/schemas/Order/properties/id'\n                    cancellation_reason_id:\n                      $ref: '#/components/schemas/Option/properties/id'\n                    descriptor:\n                      $ref: '#/components/schemas/Descriptor'\n                  required:\n                    - order_id\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /update:\n    post:\n      tags:\n        - Beckn Provider Platform (BPP)\n      description: Remove object\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    update_target:\n                      description: 'Comma separated values of order objects being updated. For example: ```\"update_target\":\"item,billing,fulfillment\"```'\n                      type: string\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - update_target\n                    - order\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /rating:\n    post:\n      tags:\n        - Beckn Provider Platform (BPP)\n      description: Provide feedback on a service\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  $ref: '#/components/schemas/Rating'\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /support:\n    post:\n      tags:\n        - Beckn Provider Platform (BPP)\n      description: Contact support\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    ref_id:\n                      type: string\n                      description: ID of the element for which support is needed\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /on_search:\n    post:\n      tags:\n        - Beckn App Platform (BAP)\n        - Beckn Gateway (BG)\n      description: Send catalog\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    catalog:\n                      $ref: '#/components/schemas/Catalog'\n                  required:\n                    - catalog\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - context\n  /on_select:\n    post:\n      tags:\n        - Beckn App Platform (BAP)\n      description: Send draft order object with quoted price for selected items\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      type: object\n                      properties:\n                        provider:\n                          $ref: '#/components/schemas/Provider'\n                        provider_location:\n                          $ref: '#/components/schemas/Location'\n                        items:\n                          type: array\n                          items:\n                            allOf:\n                              - $ref: '#/components/schemas/Item'\n                              - properties:\n                                  quantity:\n                                    $ref: '#/components/schemas/ItemQuantity'\n                        add_ons:\n                          type: array\n                          items:\n                            $ref: '#/components/schemas/AddOn'\n                        offers:\n                          type: array\n                          items:\n                            $ref: '#/components/schemas/Offer'\n                        quote:\n                          $ref: '#/components/schemas/Quotation'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_init:\n    post:\n      tags:\n        - Beckn App Platform (BAP)\n      description: Send order object with payment details updated\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      type: object\n                      properties:\n                        provider:\n                          type: object\n                          properties:\n                            id:\n                              $ref: '#/components/schemas/Provider/properties/id'\n                        provider_location:\n                          type: object\n                          properties:\n                            id:\n                              $ref: '#/components/schemas/Location/properties/id'\n                        items:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                $ref: '#/components/schemas/Item/properties/id'\n                              quantity:\n                                $ref: '#/components/schemas/ItemQuantity/properties/selected'\n                        add_ons:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                $ref: '#/components/schemas/AddOn/properties/id'\n                        offers:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                $ref: '#/components/schemas/Offer/properties/id'\n                        billing:\n                          $ref: '#/components/schemas/Billing'\n                        fulfillment:\n                          $ref: '#/components/schemas/Fulfillment'\n                        quote:\n                          $ref: '#/components/schemas/Quotation'\n                        payment:\n                          $ref: '#/components/schemas/Payment'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_confirm:\n    post:\n      tags:\n        - Beckn App Platform (BAP)\n      description: Send active order object\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_track:\n    post:\n      tags:\n        - Beckn App Platform (BAP)\n      description: Send tracking details of an active order\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    tracking:\n                      $ref: '#/components/schemas/Tracking'\n                  required:\n                    - tracking\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_cancel:\n    post:\n      tags:\n        - Beckn App Platform (BAP)\n      description: Send cancellation request_id with reasons list in case of cancellation request. Else send cancelled order object\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_update:\n    post:\n      tags:\n        - Beckn App Platform (BAP)\n      description: Returns updated service with updated runtime object\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_status:\n    post:\n      tags:\n        - Beckn App Platform (BAP)\n      description: Fetch the status of a Service\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_rating:\n    post:\n      tags:\n        - Beckn App Platform (BAP)\n      description: Provide feedback on a service\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  $ref: '#/components/schemas/RatingAck'\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_support:\n    post:\n      tags:\n        - Beckn App Platform (BAP)\n      description: Contact Support\n      requestBody:\n        description: TODO\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    phone:\n                      type: string\n                      format: phone\n                    email:\n                      type: string\n                      format: email\n                    uri:\n                      type: string\n                      format: uri\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /get_cancellation_reasons:\n    post:\n      tags:\n        - BPP Meta APIs\n      description: Get cancellation reasons from the BPP\n      requestBody:\n        description: Context header is sent as the request\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /cancellation_reasons:\n    post:\n      tags:\n        - BAP Meta APIs\n      description: Get cancellation reasons from the BPP\n      requestBody:\n        description: List of cancellation reasons\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    cancellation_reasons:\n                      type: array\n                      items:\n                          $ref: '#/components/schemas/Option'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /get_return_reasons:\n    post:\n      tags:\n        - BPP Meta APIs\n      description: Get return reasons from the BPP\n      requestBody:\n        description: Context header is sent as the request\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /return_reasons:\n    post:\n      tags:\n        - BAP Meta APIs\n      description: Get return reasons from the BPP\n      requestBody:\n        description: List of return reasons\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n                return_reasons:\n                  type: array\n                  items:\n                      $ref: '#/components/schemas/Option'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /get_rating_categories:\n    post:\n      tags:\n        - BPP Meta APIs\n      description: Get a list of categories that can be rated by the BAP\n      requestBody:\n        description: Context header is sent as the request\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /rating_categories:\n    post:\n      tags:\n        - BAP Meta APIs\n      description: Get a list of categories that can be rated by the BAP\n      requestBody:\n        description: Array of categories which can be rated\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n                rating_categories:  \n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Rating/properties/rating_category'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /get_feedback_categories:\n    post:\n      tags:\n        - BPP Meta APIs\n      description: Get a list of categories for which feedback can be given by the BAP\n      requestBody:\n        description: Context header is sent as the request\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /feedback_categories:\n    post:\n      tags:\n        - BAP Meta APIs\n      description: Get a list of categories for which feedback can be given by the BAP\n      requestBody:\n        description: Array of categories for which feedback can be given by the BAP\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n                feedback_categories:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Rating/properties/rating_category'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n                    \n  /get_feedback_form:\n    post:\n      tags:\n        - BPP Meta APIs\n      description: Request a feedback form from the BPP\n      requestBody:\n        description: The rating value and category is sent by the BAP\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    rating_value:\n                      $ref: '#/components/schemas/Rating/properties/value'\n                    rating_category:\n                      $ref: '#/components/schemas/Rating/properties/rating_category'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\n  /feedback_form:\n    post:\n      tags:\n        - BAP Meta APIs\n      description: Get a feedback form from the BPP\n      requestBody:\n        description: Feedback form sent by the BPP \n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                    $ref: '#/components/schemas/Feedback'\n\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n\ncomponents:\n  securitySchemes:\n    SubscriberAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: 'Signature of message body using BAP or BPP subscriber''s signing public key. \u003cbr/\u003e\u003cbr/\u003eFormat:\u003cbr/\u003e\u003cbr/\u003e\u003ccode\u003eAuthorization : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires) digest\",signature=\"Base64(signing string)\"\u003c/code\u003e'\n    GatewaySubscriberAuth:\n      type: apiKey\n      in: header\n      name: Proxy-Authorization\n      description: 'Signature of message body + BAP/BPP''s Authorization header using BG''s signing public key. Format:\u003cbr/\u003e\u003cbr/\u003e\u003ccode\u003eProxy-Authorization : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires) digest\",signature=\"Base64(signing string)\"\u003c/code\u003e\u003cp\u003e\u003cb\u003eNote:\u003c/b\u003eThis header will be deprecated soon and will no longer be supported in future releases. New implementors are requested to use the X-Gateway-Authorization header. Existing implementations are requested to migrate their header to the new header. The deprecation date will be set after discussion as per the standard specification governance process.\u003c/p\u003e'\n    GatewaySubscriberAuthNew:\n      type: apiKey\n      in: header\n      name: X-Gateway-Authorization\n      description: 'Signature of message body + BAP/BPP''s Authorization header using BG''s signing public key. Format:\u003cbr/\u003e\u003cbr/\u003e\u003ccode\u003eX-Gateway-Authorization : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires) digest\",signature=\"Base64(signing string)\"\u003c/code\u003e'\n  schemas:\n    Ack:\n      description: This describes an acknowledgement of receipt of a message. Upon receiving a message, the receiver must first authenticate the sender by verifying its digital signature. Upon successful verification of the signature, the receiver must validate the schema of the message.  After performing both the operations, the receiver should send an Ack object in response.\n      type: object\n      properties:\n        status:\n          type: string\n          description: 'Describe the status of the ACK response. If the message passes the acknowledgement criteria, then the receiver shouls set this value equal to ACK else it should be set to NACK'\n          enum:\n            - ACK\n            - NACK\n      required:\n        - status\n    AddOn:\n      description: This is typically an optional product or service that can be offered in addition to a product or a service of type Item. Objects of type AddOn should not exist without an associated Item. If a BAP receives an Item with an add-on, it must show it to the user as a selectable object. If any AddOn object is found without an associated Item object, then the validator must throw an error 'NO-PARENT=ITEM' with message 'No parent found' \n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of the add-on as present in the source catalog\n        item_id:\n          type: string\n          description: ID of the item this add-on is offered with.\n        optional:\n          type: boolean\n          default: false\n          description: This value indicates if the add-on is optional or required to be selected by the user along with an Item. If this value is set to true, then the BAP must ensure that the add-on is mandatorily selected by the user while creating the Order object with the Item.\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        price:\n          $ref: '#/components/schemas/Price'\n      required:\n        - item_id\n    Address:\n      description: Describes a postal address\n      oneOf:\n        - $ref: '#/components/schemas/FullAddress'\n        - $ref: '#/components/schemas/StructuredAddress'\n      \n    FullAddress:\n      type: object\n      description: The full postal address.\n      properties:\n        full:\n          type: string\n          description: This is an unstructured string that describes the complete postal address in one line. If supported, the format of this field should be defined in the network policy. If this field is set, then the validator must ignore all the other fields. If this field is unavailable or null, then the validator must validate all the other fields of this object.\n    \n    StructuredAddress:\n      type: object\n      description: Describes a structured address. This contains each component of a postal address as a single field. If supported, the network policy should specify which of these fields are required to be set. The network policy should also specify in what order these fields are to be presented on a user interface. \n      properties:\n        door:\n          type: string\n          description: Door / Shop number of the address\n        name:\n          type: string\n          description: Name of address if applicable. Example, shop name\n        building:\n          type: string\n          description: Name of the building or block\n        street:\n          type: string\n          description: Street name or number\n        locality:\n          type: string\n          description: Name of the locality, apartments\n        district:\n          type: string\n          description: Name of the district this address is in\n        ward:\n          type: string\n          description: Name or number of the ward if applicable\n        city:\n          type: string\n          description: City name\n        state:\n          type: string\n          description: State name\n        country:\n          type: string\n          description: Country name\n        area_code:\n          type: string\n          description: 'Area code. This can be Pincode, ZIP code or any equivalent'\n\n    Agent:\n      description: Describes the agent or person that fulfills an order.\n      allOf:\n        - $ref: '#/components/schemas/Person'\n        - $ref: '#/components/schemas/Contact'\n        - type: object\n          properties:\n            rateable:\n              $ref: '#/components/schemas/Rateable'\n              \n    FulfillmentAuthorization:\n      description: Describes the mechanism that is used to authorize the start or end of a fulfillment. If set, the BAP must show the authorization code to the BAP user in a specified format. The BAP user must provide this authorization code to the fulfillment agent before the start and/or end of the fulfillment. \n      type: object\n      properties:\n        type: \n          type: string\n          description: Type of authorization mechanism used. If this value is equal to IMAGE, then the BAP must render this image as-is. If this value is a STING, then the BAP must clearly display the string to the user. It is recommended that the string be displayed in a way that it can be copied to the clipboard.\n          enum:\n            - IMAGE\n            - STRING\n        token:\n          type: string\n          description: The code displayed to the user for authorizing the start or end of fulfillment. This code must be provided to the fufillment agent before the start and/or end of the fulfillment.\n        valid_from:\n          type: string\n          format: date-time \n          description: Date and time from which token is valid. This token must be shown to the BAP user only after this time. \n        valid_to:\n          type: string\n          format: date-time \n          description: Date and time till which token is valid. This token must NOT be shown to the BAP user after this time.\n    Billing:\n      description: Describes the billing details of an order. This must be provided by BAP user before confirmation of the order. \n      type: object\n      properties:\n        name:\n          description: Name of the person under who's name the bill will be generated.\n          type: string\n        organization:\n          description: Name of the organization under who's name the bill will be generated.\n          $ref: '#/components/schemas/Organization'\n        address:\n          $ref: '#/components/schemas/Address'\n        email:\n          description: Email address of the person / organization being billed. The BPP must send the bill to this email address. The format of the bill may be defined in the network policy.\n          type: string\n          format: email\n        phone:\n          description: Phone number of the person / organization being billed. The BPP must send the bill to this phone number as per the format specified in the network policy. In case the bill is a downloadable file, it is recommended the bill should be sent to the phone number as a downloadable link.\n          type: string\n        time:\n          $ref: '#/components/schemas/Time'\n        tax_number:\n          description: This is the identity of a Tax-paying person or an organization. This number can be provided to the BPP to avail tax benefits, if applicable. The format of this string should be specified in the network policy\n          type: string\n        created_at:\n          description: Date and time at which this bill was generated by the BPP. \n          type: string\n          format: date-time\n    CancellationPolicy:\n      description: Describes the cancellation policy of an Order.  \n      type: object\n      properties:\n        cancellable:\n          type: boolean\n        cancel_before:\n          type: string\n          format: date-time\n        cancellation_fee:\n          $ref: '#/components/schemas/Fee'\n        fee_applied_on:\n          type: string\n          enum:\n            - CURRENT-ORDER\n            - NEXT-ORDER\n        type:\n          type: string\n          enum:\n            - full\n            - partial\n    ItemRefundPolicy:\n      description: Describes the refund policy of an Item when removed from an order  \n      type: object\n      properties:\n        refundable:\n          type: boolean\n        refund_applicable_till:\n          type: string\n          format: date-time\n        refund_type:\n          type: string\n          enum:\n            - FULLY-REFUNDABLE\n            - PARTLY-REFUNDABLE\n            - VARIABLE-REFUND\n        refund_amount_type:\n          type: string\n          enum:\n            - CONSTANT-AMOUNT\n            - CONSTANT-PERCENTAGE\n            - VARIABLE-AMOUNT\n            - VARIABLE-PERCENTAGE\n        refund_amount_value:\n          type: number\n              \n              \n    Catalog:\n      description: Describes a BPP catalog\n      type: object\n      properties:\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/Category'\n        fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n        payments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Payment'\n        offers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Offer'\n        providers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Provider'\n        exp:\n          type: string\n          description: Time after which catalog has to be refreshed\n          format: date-time\n    Category:\n      description: Describes a category\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique id of the category\n        parent_category_id:\n          $ref: '#/components/schemas/Category/properties/id'\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        time:\n          $ref: '#/components/schemas/Time'\n        tags:\n          $ref: '#/components/schemas/Tags'\n    Circle:\n      description: Describes a circular area on the map\n      type: object\n      properties:\n        gps:\n          $ref: '#/components/schemas/Gps'\n        radius:\n          $ref: '#/components/schemas/Scalar'\n      required:\n        - gps\n        - radius\n    City:\n      description: Describes a city\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the city\n        code:\n          type: string\n          description: City code\n    Contact:\n      type: object\n      properties:\n        phone:\n          type: string\n        email:\n          type: string\n        tags:\n          $ref: '#/components/schemas/Tags'\n    Context:\n      description: Describes a beckn message context\n      type: object\n      properties:\n        domain:\n          $ref: '#/components/schemas/Domain'\n        country:\n          $ref: '#/components/schemas/Country/properties/code'\n        city:\n          $ref: '#/components/schemas/City/properties/code'\n        action:\n          type: string\n          description: Defines the Beckn API call. Any actions other than the enumerated actions are not supported by Beckn Protocol\n          enum:\n            - search\n            - select\n            - init\n            - confirm\n            - update\n            - status\n            - track\n            - cancel\n            - rating\n            - support\n            - on_search\n            - on_select\n            - on_init\n            - on_confirm\n            - on_update\n            - on_status\n            - on_track\n            - on_cancel\n            - on_rating\n            - on_support\n        core_version:\n          type: string\n          description: Version of Beckn core API specification being used\n        bap_id:\n          type: string\n          format: uri\n          description: Unique id of the BAP. By default it is the fully qualified domain name of the BAP\n        bap_uri:\n          type: string\n          format: uri\n          description: URI of the BAP for accepting callbacks. Must have the same domain name as the bap_id\n        bpp_id:\n          type: string\n          format: uri\n          description: Unique id of the BPP. By default it is the fully qualified domain name of the BPP\n        bpp_uri:\n          type: string\n          format: uri\n          description: URI of the BPP. Must have the same domain name as the bap_id\n        transaction_id:\n          type: string\n          description: This is a unique value which persists across all API calls from search through confirm\n        message_id:\n          type: string\n          description: This is a unique value which persists during a request / callback cycle\n        timestamp:\n          type: string\n          format: date-time\n          description: Time of request generation in RFC3339 format\n        key:\n          type: string\n          description: The encryption public key of the sender\n        ttl:\n          type: string\n          description: The duration in ISO8601 format after timestamp for which this message holds valid\n      required:\n        - domain\n        - action\n        - country\n        - city\n        - core_version\n        - transaction_id\n        - message_id\n        - bap_id\n        - bap_uri\n        - timestamp\n    Country:\n      description: Describes a country.\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the country\n        code:\n          type: string\n          description: Country code as per ISO 3166-1 and ISO 3166-2 format\n    DecimalValue:\n      description: Describes a decimal value\n      type: string\n      pattern: '[+-]?([0-9]*[.])?[0-9]+'\n\n    Descriptor:\n      description: Describes the description of a real-world object.\n      type: object\n      properties:\n        name:\n          type: string\n        code:\n          type: string\n        symbol:\n          type: string\n        short_desc:\n          type: string\n        long_desc:\n          type: string\n        images:\n          type: array\n          items:\n            $ref: '#/components/schemas/Image'\n        audio:\n          type: string\n          format: uri\n        3d_render:\n          type: string\n          format: uri\n\n    Dimensions:\n      description: Describes the dimensions of a real-world object\n      type: object\n      properties:\n        length:\n          $ref: '#/components/schemas/Scalar'\n        breadth:\n          $ref: '#/components/schemas/Scalar'\n        height:\n          $ref: '#/components/schemas/Scalar'\n    \n    Document:\n      description: Describes a document which can be sent as a url\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        label:\n          type: string\n    \n    Domain:\n      description: Describes the domain of an object\n      type: string\n\n    Duration:\n      description: Describes duration as per ISO8601 format\n      type: string\n\n    Error:\n      description: Describes an error object\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - CONTEXT-ERROR\n            - CORE-ERROR\n            - DOMAIN-ERROR\n            - POLICY-ERROR\n            - JSON-SCHEMA-ERROR\n        code:\n          type: string\n          description: 'Beckn specific error code. For full list of error codes, refer to docs/protocol-drafts/BECKN-RFC-005-ERROR-CODES-DRAFT-01.md of this repo'\n        path:\n          type: string\n          description: Path to json schema generating the error. Used only during json schema validation errors\n        message:\n          type: string\n          description: Human readable message describing the error\n      required:\n        - type\n        - code\n\n    Feedback:\n      description: Feedback for a service\n      type: object\n      properties:\n        feedback_form:\n          $ref: '#/components/schemas/FeedbackForm'\n        feedback_url:\n          $ref: '#/components/schemas/FeedbackUrl'\n          \n    FeedbackForm: \n      description: Describes a feedback form that a BPP can send to get feedback from the BAP\n      type: array\n      items:\n        $ref: '#/components/schemas/FeedbackFormElement'\n    \n    FeedbackFormElement:\n      description: An element in the feedback form. It can be question or an answer to the question.\n      type: object\n      properties:\n        id:\n          type: string\n        parent_id:\n          $ref: '#/components/schemas/FeedbackFormElement/properties/id'\n        question:\n          description: Specifies the question to which the answer options will be contained in the child FeedbackFormElements\n          type: string\n        answer:\n          description: Specifies an answer option to which the question will be in the FeedbackFormElement specified in parent_id  \n          type: string\n        answer_type:\n          description: Specifies how the answer option should be rendered.\n          type: string\n          enum :\n            - radio\n            - checkbox\n            - text\n    \n    Fee:\n      type: object\n      properties:\n        value:\n          type: string\n        currency:\n          type: string\n      \n    FeedbackUrl:\n      description: Describes how a feedback URL will be sent by the BPP\n      type: object\n      properties:\n        url:\n          description: feedback URL sent by the BPP\n          type: string\n          format: uri\n        tl_method:\n          type: string\n          enum:\n            - http/get\n            - http/post\n        params:\n          type: object\n          properties:\n            feedback_id:\n              type: string\n              description: This value will be placed in the the $feedback_id url param in case of http/get and in the requestBody http/post requests\n          additionalProperties:\n            type: string\n          required:\n            - feedback_id\n\n\n\n\n    Fulfillment:\n      description: Describes how a single product/service will be rendered/fulfilled to the end customer\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique reference ID to the fulfillment of an order\n        type:\n          type: string\n          description: This describes the type of fulfillment\n        provider_id:\n          $ref: '#/components/schemas/Provider/properties/id'\n        rating:\n          $ref: '#/components/schemas/Rating/properties/value'\n        state:\n          $ref: '#/components/schemas/State'\n        tracking:\n          type: boolean\n          description: Indicates whether the fulfillment allows tracking\n          default: false\n        customer:\n          type: object\n          properties:\n            person:\n              $ref: '#/components/schemas/Person'\n            contact:\n              $ref: '#/components/schemas/Contact'\n        agent:\n          $ref: '#/components/schemas/Agent'\n        person:\n          $ref: '#/components/schemas/Person'\n        contact:\n          $ref: '#/components/schemas/Contact'\n        vehicle:\n          $ref: '#/components/schemas/Vehicle'\n        start:\n          description: Details on the start of fulfillment\n          type: object\n          properties:\n            location:\n              $ref: '#/components/schemas/Location'\n            time:\n              $ref: '#/components/schemas/Time'\n            instructions:\n              $ref: '#/components/schemas/Descriptor'\n            contact:\n              $ref: '#/components/schemas/Contact'\n            person:\n              $ref: '#/components/schemas/Person'\n            authorization:\n              $ref: '#/components/schemas/FulfillmentAuthorization'\n        end:\n          description: Details on the end of fulfillment\n          type: object\n          properties:\n            location:\n              $ref: '#/components/schemas/Location'\n            time:\n              $ref: '#/components/schemas/Time'\n            instructions:\n              $ref: '#/components/schemas/Descriptor'\n            contact:\n              $ref: '#/components/schemas/Contact'\n            person:\n              $ref: '#/components/schemas/Person'\n            authorization:\n              $ref: '#/components/schemas/FulfillmentAuthorization'\n        rateable:\n          $ref: '#/components/schemas/Rateable'\n        tags:\n          $ref: '#/components/schemas/Tags'\n    Gps:\n      description: Describes a gps coordinate\n      type: string\n      pattern: '^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$'\n    Image:\n      description: 'Image of an object. \u003cbr/\u003e\u003cbr/\u003e A url based image will look like \u003cbr/\u003e\u003cbr/\u003e```uri:http://path/to/image``` \u003cbr/\u003e\u003cbr/\u003e An image can also be sent as a data string. For example : \u003cbr/\u003e\u003cbr/\u003e ```data:js87y34ilhriuho84r3i4```'\n      type: string\n    Intent:\n      description: Intent of a user. Used for searching for services\n      type: object\n      properties:\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        provider:\n          $ref: '#/components/schemas/Provider'\n        fulfillment:\n          $ref: '#/components/schemas/Fulfillment'\n        payment:\n          $ref: '#/components/schemas/Payment'\n        category:\n          $ref: '#/components/schemas/Category'\n        offer:\n          $ref: '#/components/schemas/Offer'\n        item:\n          $ref: '#/components/schemas/Item'\n        tags:\n          $ref: '#/components/schemas/Tags'\n            \n    ItemQuantity:\n      description: Describes count or amount of an item\n      type: object\n      properties:\n        allocated:\n          type: object\n          properties:\n            count:\n              type: integer\n              minimum: 0\n            measure:\n              $ref: '#/components/schemas/Scalar'\n        available:\n          type: object\n          properties:\n            count:\n              type: integer\n              minimum: 0\n            measure:\n              $ref: '#/components/schemas/Scalar'\n        maximum:\n          type: object\n          properties:\n            count:\n              type: integer\n              minimum: 1\n            measure:\n              $ref: '#/components/schemas/Scalar'\n        minimum:\n          type: object\n          properties:\n            count:\n              type: integer\n              minimum: 0\n            measure:\n              $ref: '#/components/schemas/Scalar'\n        selected:\n          type: object\n          properties:\n            count:\n              type: integer\n              minimum: 0\n            measure:\n              $ref: '#/components/schemas/Scalar'\n    Item:\n      description: Describes a product or a service offered to the end consumer by the provider.\n      type: object\n      properties:\n        id:\n          description: This is the most unique identifier of a service item. An example of an Item ID could be the SKU of a product.\n          type: string\n        parent_item_id:\n          $ref: '#/components/schemas/Item/properties/id'\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        price:\n          $ref: '#/components/schemas/Price'\n        category_id:\n          $ref: '#/components/schemas/Category/properties/id'\n        fulfillment_id:\n          $ref: '#/components/schemas/Fulfillment/properties/id'\n        rating:\n          $ref: '#/components/schemas/Rating/properties/value'\n        location_id:\n          $ref: '#/components/schemas/Location/properties/id'\n        time:\n          $ref: '#/components/schemas/Time'\n        rateable:\n          $ref: '#/components/schemas/Rateable'\n        matched:\n          type: boolean\n        related:\n          type: boolean\n        recommended:\n          type: boolean\n        tags:\n          $ref: '#/components/schemas/Tags'\n    Language:\n      description: indicates language code. Beckn supports country codes as per ISO 639.2 standard\n      type: object\n      properties:\n        code:\n          type: string\n    Location:\n      description: Describes the location of a runtime object.\n      type: object\n      properties:\n        id:\n          type: string\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        gps:\n          $ref: '#/components/schemas/Gps'\n        address:\n          $ref: '#/components/schemas/Address'\n        station_code:\n          type: string\n        city:\n          $ref: '#/components/schemas/City'\n        country:\n          $ref: '#/components/schemas/Country'\n        circle:\n          $ref: '#/components/schemas/Circle'\n        polygon:\n          type: string\n        3dspace:\n          type: string\n        time:\n          $ref: '#/components/schemas/Time'\n    Name:\n      type: string\n      description: 'Describes the name of a person in format: ./{given_name}/{honorific_prefix}/{first_name}/{middle_name}/{last_name}/{honorific_suffix}'\n      pattern: '^\\./[^/]+/[^/]*/[^/]*/[^/]*/[^/]*/[^/]*$'\n\n    Offer:\n      description: Describes an offer\n      type: object\n      properties:\n        id:\n          type: string\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        location_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/Location/properties/id'\n        category_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/Category/properties/id'\n        item_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/Item/properties/id'\n        time:\n          $ref: '#/components/schemas/Time'\n\n    Operator:\n      description: Describes the agent of a service\n      allOf:\n        - $ref: \"#/components/schemas/Person\"\n        - properties:\n            experience:\n              type: object\n              properties:\n                label:\n                  type: string\n                value:\n                  type: string\n                unit:\n                  type: string\n\n    Option:\n      description: Describes a selectable option\n      type: object\n      properties:\n        id:\n          type: string\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n    Order:\n      description: Describes the details of an order. \n      type: object\n      properties:\n        id:\n          type: string\n          description: Order ID as generated inside the provider's order management system. If the provider is unable to generate an order id, then the BPP must generate this order_id. \n        state:\n          description: Describes the state of an order. \n          type: string\n          enum:\n            - DRAFT\n            - ACTIVE\n            - COMPLETE\n            - CANCELLED\n        provider:\n          $ref: '#/components/schemas/Provider'\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Document'\n        billing:\n          $ref: '#/components/schemas/Billing'\n        fulfillment:\n          $ref: '#/components/schemas/Fulfillment'\n        quote:\n          $ref: '#/components/schemas/Quotation'\n        payment:\n          $ref: '#/components/schemas/Payment'\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n\n    Organization:\n      description: Describes an organization\n      type: object\n      properties:\n        name:\n          type: string\n        cred:\n          type: string\n          \n    Payment:\n      description: Describes the terms of payment settlement of an order between a BAP and a BPP. The BAP may choose to send its own settlement terms to the BPP before the confirmation of an order. The BPP can choose to accept it, or send its own settlement terms to the BAP. \u003cbr/\u003e\u003cbr/\u003e The terms of settlement must contain, \u003ci\u003e \u003cul\u003e\u003cli\u003eThe final amount to be paid by the BAP to the BPP\u003c/li\u003e\u003cli\u003eAt what stage must the settlement be done i.e On-order, Pre-fulfillment, On-fulfillment, or Post-Fulfillment\u003c/li\u003e\u003cli\u003eA payment endpoint, in case of online settlement\u003c/li\u003e\u003cli\u003eA reference to the order for which the payment is being made\u003c/li\u003e\u003cli\u003eThe destination account where the payment must ultimately go to. This may be a bank account, or a virtual payment address - in case the provider does not want to display the account number to the BAP or its consumer\u003c/li\u003e\u003c/ul\u003e\u003c/i\u003e\u003cb\u003eNote:\u003c/b\u003e\u003cb\u003e\u003ci\u003e\u003cul\u003e\u003cli\u003eThese terms ONLY describe the terms of settlement between the BAP and the BPP.\u003c/li\u003e\u003cli\u003eThese do not affect \"how\" the payment is collected from the consumer, and how it is ultimately credited to the provider's account.\u003c/li\u003e\u003cli\u003eIf the terms of settlement sent by the BAP to the BPP MATCH the terms of settlement sent by the BPP to the BAP, then it indicates a mutual agreement between both the actors.\u003c/li\u003e\u003cli\u003eOnce an agreement has been reached, the BAP and BPP can initiate the order confirmation process.\u003c/li\u003e\u003c/ul\u003e\u003c/i\u003e\u003cb/\u003e\n      type: object\n      properties:\n        uri:\n          description: The payment URL of the payee.  If this field is empty or missing, it indicates that the payment has to be settled manually between the payer and the payee.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eRecommendations:\u003c/b\u003e\u003cul\u003e\u003cli\u003eThe list of supported URI schemes must be published in the network policy\u003c/li\u003e\u003cli\u003eIf this field is set, then the BAP must render this link as a CTA or render the payment screen within a webview\u003c/li\u003e\u003c/ul\u003e\n          type: string\n          format: uri\n        uri_mime_type:\n          description: Describes the contents of the uri field. If the value is text/html, it is recommended for the BAP to render the contents inside a webview. This generally does not render a good user experience on the BAP, hence the payment page developers are recommended to develop their payment pages in a mobile-friendly manner.  \n          type: string\n          enum:\n            - text/html\n            - text/plain\n            - application/octet-stream;provider=$application_id\n        params:\n          description: This object contains all the values necessary to initiate a payment flow. \n          type: object\n          properties:\n            amount:\n              description: The numeric value of the amount that has to be paid for the order\n              type: number\n            currency:\n              $ref: '#/components/schemas/Price/properties/currency'\n            transaction_id:\n              type: string\n              description: The transaction reference string that is generated by the payment interface once a transaction is successful. If the payment happened directly on a payment interface of a BPP, then the BPP must return this value to the BAP in the on_confirm API callback. If the payment was collected at the BAP, then this value has to be sent to the BPP when calling the confirm API. When the BAP actually settles the amount with the BPP, it must send this value as reference so that the BPP can mark the payment as settled.\n            bank_account_number:\n              type: string\n            bank_code:\n              type: string\n            bank_id_type:\n              type: string\n            virtual_payment_address:\n              type: string\n          additionalProperties:\n            type: string\n            description: This contains all the supported fields used in the payment infrastructure of a network. \n          required:\n            - currency\n        type:\n          type: string\n          enum:\n            - ON-ORDER\n            - PRE-FULFILLMENT\n            - ON-FULFILLMENT\n            - POST-FULFILLMENT\n        status:\n          type: string\n          enum:\n            - PAID\n            - NOT-PAID\n        time:\n          $ref: '#/components/schemas/Time'\n\n    Person:\n      description: Describes a person.\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/Name'\n        image:\n          $ref: '#/components/schemas/Image'\n        dob:\n          type: string\n          format: date\n        gender:\n          type: string\n          description: 'Gender of something, typically a Person, but possibly also fictional characters, animals, etc. While Male and Female may be used, text strings are also acceptable for people who do not identify as a binary gender'\n        cred:\n          type: string\n        tags:\n          $ref: '#/components/schemas/Tags'\n    Policy:\n      description: Describes a policy. Allows for domain extension.\n      type: object\n      properties:\n        id:\n          type: string\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        parent_policy_id:\n          $ref: '#/components/schemas/Policy/properties/id'\n        time:\n          $ref: '#/components/schemas/Time'\n\n    Price:\n      description: Describes the price of an item. Allows for domain extension.\n      type: object\n      properties:\n        currency:\n          type: string\n        value:\n          $ref: '#/components/schemas/DecimalValue'\n        estimated_value:\n          $ref: '#/components/schemas/DecimalValue'\n        computed_value:\n          $ref: '#/components/schemas/DecimalValue'\n        listed_value:\n          $ref: '#/components/schemas/DecimalValue'\n        offered_value:\n          $ref: '#/components/schemas/DecimalValue'\n        minimum_value:\n          $ref: '#/components/schemas/DecimalValue'\n        maximum_value:\n          $ref: '#/components/schemas/DecimalValue'\n          \n    Provider:\n      description: 'Describes a service provider. This can be a restaurant, a hospital, a Store etc'\n      type: object\n      properties:\n        id:\n          type: string\n          description: 'Id of the provider'\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        category_id:\n          type: string\n          description: 'Category Id of the provider'\n        rating:\n          $ref: '#/components/schemas/Rating/properties/value'\n        time:\n          $ref: '#/components/schemas/Time'\n        categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/Category'\n        fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n        payments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Payment'\n        locations:\n          type: array\n          items:\n            allOf:\n            - $ref: '#/components/schemas/Location'\n            - type: object\n              properties:\n                rateable:\n                  $ref: '#/components/schemas/Rateable'\n        offers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Offer'\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Item'\n        exp:\n          type: string\n          description: Time after which catalog has to be refreshed\n          format: date-time\n        rateable:\n          $ref: '#/components/schemas/Rateable'\n        tags:\n          $ref: '#/components/schemas/Tags'\n\n    Quotation:\n      description: Describes a quote\n      type: object\n      properties:\n        price:\n          $ref: '#/components/schemas/Price'\n        breakup:\n          type: array\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n              price:\n                $ref: '#/components/schemas/Price'\n        ttl:\n          $ref: '#/components/schemas/Duration'\n\n    Rateable:\n      description: If the entity can be rated or not\n      type: boolean\n\n    Rating:\n      description: Describes the rating of a person or an object.\n      type: object\n      properties:\n        rating_category:\n          description: Category of the object being rated\n          type: string\n        id:\n          description: Id of the object being rated\n          type: string\n        value:\n          description: Rating value given to the object\n          type: number\n          minimum: 0\n        feedback_form: \n          $ref: '#/components/schemas/FeedbackForm'\n        feedback_id:\n          $ref: '#/components/schemas/FeedbackUrl/properties/params/properties/feedback_id'\n          \n    RatingAck:\n      type: object\n      properties:\n        feedback_ack:\n          description: If feedback has been recorded or not\n          type: boolean\n        rating_ack:\n          description: If rating has been recorded or not\n          type: boolean\n\n    Scalar:\n      description: An object representing a scalar quantity.\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - CONSTANT\n            - VARIABLE\n        value:\n          type: number\n        estimated_value:\n          type: number\n        computed_value:\n          type: number\n        range:\n          type: object\n          properties:\n            min:\n              type: number\n            max:\n              type: number\n        unit:\n          type: string\n      required:\n        - value\n        - unit\n\n    Schedule:\n      description: Describes a schedule\n      type: object\n      properties:\n        frequency:\n          $ref: '#/components/schemas/Duration'\n        holidays:\n          type: array\n          items:\n            type: string\n            format: date-time\n        times:\n          type: array\n          items:\n            type: string\n            format: date-time\n    State:\n      description: Describes a state\n      type: object\n      properties:\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        updated_at:\n          type: string\n          format: date-time\n        updated_by:\n          type: string\n          description: ID of entity which changed the state\n    Subscriber:\n      type: object\n      description: 'Any entity which wants to authenticate itself on a network. This can be a BAP, BPP, BG, BPPR or a BGR.'\n      properties:\n        subscriber_id:\n          type: string\n          description: Registered domain name of the subscriber. Must have a valid SSL certificate issued by a Certificate Authority of the operating region\n        type:\n          type: string\n          enum:\n            - bap\n            - bpp\n            - bg\n            - bppr\n            - bgr\n        cb_url:\n          type: string\n          description: Callback URL of the subscriber. The Registry will call this URL's on_subscribe API to validate the subscriber\\'s credentials\n        domain:\n          $ref: '#/components/schemas/Domain'\n        city:\n          $ref: '#/components/schemas/City/properties/code'\n        country:\n          $ref: '#/components/schemas/Country/properties/code'\n        signing_public_key:\n          type: string\n          description: 'Signing Public key of the subscriber. \u003cbr/\u003e\u003cbr/\u003eAny subscriber platform (BAP, BPP, BG) who wants to transact on the network must digitally sign the ```requestBody``` using the corresponding private key of this public key and send it in the transport layer header. In case of ```HTTP``` it is the ```Authorization``` header. \u003cbr\u003e\u003cbr/\u003eThe ```Authorization``` will be used to validate the signature of a BAP or BPP.\u003cbr/\u003e\u003cbr/\u003eFurthermore, if an API call is being proxied or multicast by a Beckn Gateway, the BG must use it\\''s signing key to digitally sign the ```requestBody``` using the corresponding private key of this public key and send it in the ```X-Gateway-Authorization``` header.'\n        encryption_public_key:\n          type: string\n          description: Encryption public key of the BAP subscriber. Any BPP must encrypt the ```requestBody.message``` value of the ```on_search``` API using this public key.\n        status:\n          type: string\n          enum:\n            - INITIATED\n            - UNDER_SUBSCRIPTION\n            - SUBSCRIBED\n            - INVALID_SSL\n            - UNSUBSCRIBED\n        created:\n          type: string\n          description: Timestamp when a subscriber was added to the registry with status = INITIATED\n          format: date-time\n        updated:\n          type: string\n          format: date-time\n        expires:\n          type: string\n          description: Expiry timestamp in UTC derived from the ```lease_time``` of the subscriber\n          format: date-time\n\n    Support:\n      description: Customer support\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - order\n            - billing\n            - fulfillment\n        ref_id:\n          type: string\n        channels:\n          $ref: '#/components/schemas/Tags'\n    \n    Tags:\n      description: Describes a tag. This is a simple key-value store which is used to contain extended metadata\n      additionalProperties:\n        type: string\n    Time:\n      description: Describes time in its various forms. It can be a single point in time; duration; or a structured timetable of operations\n      type: object\n      properties:\n        label:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        duration:\n          $ref: '#/components/schemas/Duration'\n        range:\n          type: object\n          properties:\n            start:\n              type: string\n              format: date-time\n            end:\n              type: string\n              format: date-time\n        days:\n          type: string\n          description: comma separated values representing days of the week\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n\n    TrackingData:\n      description: Describes tracking data object during live tracking of an order\n      $ref: '#/components/schemas/Location/properties/gps'\n\n    Tracking:\n      description: Describes the tracking info of an object\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n\n    Vehicle:\n      description: Describes the properties of a vehicle used in a mobility service\n      type: object\n      properties:\n        category:\n          type: string\n        capacity:\n          type: integer\n        make:\n          type: string\n        model:\n          type: string\n        size:\n          type: string\n        variant:\n          type: string\n        color:\n          type: string\n        energy_type:\n          type: string\n        registration:\n          type: string\n",
			"canonicalURL": "/github.com/beckn/DSEP-Specification@ee6832a26ff07a21e03ef3719fce6c43bc77d6e0/-/blob/api/dsep.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/beckn/DSEP-Specification/blob/ee6832a26ff07a21e03ef3719fce6c43bc77d6e0/api/dsep.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/cancel\": post: requestBody: contents: media: \"application/json\": generate schema: save schema types: save referenced type: reference \"https://raw.githubusercontent.com/beckn/DSEP-Specification/ee6832a26ff07a21e03ef3719fce6c43bc77d6e0/api/dsep.yaml#/components/schemas/City/properties/code\" type name conflict: \"Code\""
}