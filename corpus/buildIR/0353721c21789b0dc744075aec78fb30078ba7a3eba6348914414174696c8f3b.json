{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/apideck.com/webhook/8.11.1/openapi.yaml",
			"byteSize": 43985,
			"content": "openapi: 3.0.3\nservers:\n  - url: https://unify.apideck.com\ninfo:\n  contact:\n    email: hello@apideck.com\n    url: https://developers.apideck.com\n  description: Welcome to the Webhook API.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Webhook API\n  version: 8.11.1\n  x-apideck-api: webhook\n  x-apideck-sdk-support: true\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://developers.apideck.com/icon.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/webhook.yml\n      version: \"3.0\"\n  x-providerName: apideck.com\n  x-serviceName: webhook\n  x-tags:\n    - partner\nexternalDocs:\n  description: Apideck Developer Docs\n  url: https://developers.apideck.com\nsecurity:\n  - apiKey: []\ntags:\n  - description: \"\"\n    name: Webhooks\n    x-apideck-model:\n      $ref: \"#/components/schemas/Webhook\"\npaths:\n  /webhook/logs:\n    get:\n      description: List event logs\n      operationId: eventLogsAll\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/filter\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetWebhookEventLogsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List event logs\n      tags:\n        - Webhooks\n      x-apideck-api: webhook\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.webhook.eventLogsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: eventLogs\n  /webhook/webhooks:\n    get:\n      description: List webhooks\n      operationId: webhooksAll\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetWebhooksResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List webhooks\n      tags:\n        - Webhooks\n      x-apideck-api: webhook\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.webhook.webhooksAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: webhooks\n    post:\n      description: Create webhook\n      operationId: webhooksAdd\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateWebhookRequest\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateWebhookResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create webhook\n      tags:\n        - Webhooks\n      x-apideck-api: webhook\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            const params = {\n              webhook: {\n                description: 'A description',\n                unified_api: 'crm',\n                status: 'enabled',\n                delivery_url: 'https://example.com/my/webhook/endpoint',\n                events: ['vault.connection.created', 'vault.connection.updated']\n              }\n            }\n\n            try {\n              const { data } = await apideck.webhook.webhooksAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/webhook/webhooks/{id}\":\n    delete:\n      description: Delete webhook\n      operationId: webhooksDelete\n      parameters:\n        - $ref: \"#/components/parameters/webhookToken\"\n        - $ref: \"#/components/parameters/applicationId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteWebhookResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Delete webhook\n      tags:\n        - Webhooks\n      x-apideck-api: webhook\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.webhook.webhooksDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get webhook\n      operationId: webhooksOne\n      parameters:\n        - $ref: \"#/components/parameters/webhookToken\"\n        - $ref: \"#/components/parameters/applicationId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetWebhookResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get webhook\n      tags:\n        - Webhooks\n      x-apideck-api: webhook\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.webhook.webhooksOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update webhook\n      operationId: webhooksUpdate\n      parameters:\n        - $ref: \"#/components/parameters/webhookToken\"\n        - $ref: \"#/components/parameters/applicationId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateWebhookRequest\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateWebhookResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update webhook\n      tags:\n        - Webhooks\n      x-apideck-api: webhook\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              webhook: {\n                description: 'A description',\n                status: 'enabled',\n                delivery_url: 'https://example.com/my/webhook/endpoint',\n                events: ['vault.connection.created', 'vault.connection.updated']\n              }\n            }\n\n            try {\n              const { data } = await apideck.webhook.webhooksUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/webhook/webhooks/{id}/execute/{serviceId}\":\n    post:\n      description: Execute a webhook\n      operationId: webhooksExecute\n      parameters:\n        - $ref: \"#/components/parameters/webhookToken\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/ExecuteWebhookEventRequest\"\n                - $ref: \"#/components/schemas/ExecuteWebhookEventsRequest\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ExecuteWebhookResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Execute a webhook\n      tags:\n        - Webhooks\n      x-apideck-api: webhook\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY'\n            })\n\n            const params = {\n              id: 'id_example',\n              serviceId: 'serviceId_example',\n              webhooksExecute: {}\n            }\n\n            try {\n              const { data } = await apideck.webhook.webhooksExecute(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-exclude: true\n      x-sdk-exclude: true\ncomponents:\n  parameters:\n    applicationId:\n      description: The ID of your Unify application\n      in: header\n      name: x-apideck-app-id\n      required: true\n      schema:\n        type: string\n    consumerId:\n      description: ID of the consumer which you want to get or push data from\n      in: header\n      name: x-apideck-consumer-id\n      required: true\n      schema:\n        type: string\n    cursor:\n      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.\n      in: query\n      name: cursor\n      schema:\n        nullable: true\n        type: string\n    filter:\n      description: Filter results\n      explode: true\n      in: query\n      name: filter\n      schema:\n        $ref: \"#/components/schemas/WebhookEventLogsFilter\"\n      style: deepObject\n    id:\n      description: ID of the record you are acting upon.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    limit:\n      description: Number of records to return\n      in: query\n      name: limit\n      schema:\n        default: 20\n        maximum: 200\n        minimum: 1\n        type: integer\n    serviceId:\n      description: Service provider ID.\n      in: path\n      name: serviceId\n      required: true\n      schema:\n        type: string\n    webhookToken:\n      description: JWT Webhook token that represents the unifiedApi and applicationId associated to the event source.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n  responses:\n    BadRequestResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BadRequestResponse\"\n      description: Bad Request\n    CreateWebhookResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateWebhookResponse\"\n      description: Webhooks\n    DeleteWebhookResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteWebhookResponse\"\n      description: Webhooks\n    ExecuteWebhookResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ExecuteWebhookResponse\"\n      description: Execute Webhook\n    GetWebhookEventLogsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetWebhookEventLogsResponse\"\n      description: EventLogs\n    GetWebhookResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetWebhookResponse\"\n      description: Webhooks\n    GetWebhooksResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetWebhooksResponse\"\n      description: Webhooks\n    NotFoundResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotFoundResponse\"\n      description: The specified resource was not found\n    NotImplementedResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotImplementedResponse\"\n      description: Not Implemented\n    PaymentRequiredResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PaymentRequiredResponse\"\n      description: Payment Required\n    UnauthorizedResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnauthorizedResponse\"\n      description: Unauthorized\n    UnexpectedErrorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnexpectedErrorResponse\"\n      description: Unexpected error\n    UnprocessableResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnprocessableResponse\"\n      description: Unprocessable\n    UpdateWebhookResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateWebhookResponse\"\n      description: Webhooks\n  schemas:\n    ApplicationId:\n      description: ID of your Apideck Application\n      example: \"1111\"\n      type: string\n    BadRequestResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: Missing property foobar\n              type: string\n            - example:\n                missing:\n                  - foobar: required\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#requestvalidationerror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 400\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestValidationError\n          type: string\n    ConsumerId:\n      description: Consumer identifier\n      example: test_consumer_id\n      type: string\n    CreateWebhookRequest:\n      additionalProperties: false\n      properties:\n        delivery_url:\n          $ref: \"#/components/schemas/DeliveryUrl\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        events:\n          description: The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.\n          example:\n            - vault.connection.created\n            - vault.connection.updated\n          items:\n            $ref: \"#/components/schemas/WebhookEventType\"\n          title: Subscribed events\n          type: array\n        status:\n          $ref: \"#/components/schemas/Status\"\n        unified_api:\n          $ref: \"#/components/schemas/UnifiedApiId\"\n      required:\n        - delivery_url\n        - status\n        - events\n        - unified_api\n      type: object\n    CreateWebhookResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Webhook\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    CreatedAt:\n      example: 2020-09-30T07:43:32.000Z\n      format: date-time\n      readOnly: true\n      title: Created at (timestamp)\n      type: string\n    DeleteWebhookResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Webhook\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    DeliveryUrl:\n      description: The delivery url of the webhook endpoint.\n      example: https://example.com/my/webhook/endpoint\n      format: uri\n      pattern: ^(https?)://\n      type: string\n    Description:\n      example: A description\n      nullable: true\n      title: Description\n      type: string\n    ExecuteBaseUrl:\n      description: The Unify Base URL events from connectors will be sent to after service id is appended.\n      example: https://unify.apideck.com/webhook/webhooks/1234/execute\n      format: uri\n      pattern: ^(https?)://\n      readOnly: true\n      type: string\n    ExecuteWebhookEventRequest:\n      additionalProperties: true\n      type: object\n    ExecuteWebhookEventsRequest:\n      items:\n        additionalProperties: true\n        type: object\n      type: array\n    ExecuteWebhookResponse:\n      properties:\n        request_id:\n          description: UUID of the request received\n          example: c6af9ac6-7b61-11e6-9a41-93e8deadbeef\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n        timestamp:\n          description: ISO Dtae time webhook event was received\n          example: 2021-10-01T08:26:28.039Z\n          type: string\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    GetWebhookEventLogsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/WebhookEventLog\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n      x-graphql-type-name: EventLogList\n    GetWebhookResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Webhook\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n      x-graphql-type-name: Webhook\n    GetWebhooksResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Webhook\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n      x-graphql-type-name: WebhookList\n    Links:\n      description: Links to navigate to previous or next pages through the API\n      properties:\n        current:\n          description: Link to navigate to the current page through the API\n          example: https://unify.apideck.com/crm/companies\n          type: string\n        next:\n          description: Link to navigate to the previous page through the API\n          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\n          nullable: true\n          type: string\n        previous:\n          description: Link to navigate to the previous page through the API\n          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\n          nullable: true\n          type: string\n      type: object\n    Meta:\n      description: Response metadata\n      properties:\n        cursors:\n          description: Cursors to navigate to previous or next pages through the API\n          properties:\n            current:\n              description: Cursor to navigate to the current page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjI=\n              nullable: true\n              type: string\n            next:\n              description: Cursor to navigate to the next page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjM=\n              nullable: true\n              type: string\n            previous:\n              description: Cursor to navigate to the previous page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjE=\n              nullable: true\n              type: string\n          type: object\n        items_on_page:\n          description: Number of items returned in the data property of the response\n          example: 50\n          type: integer\n      type: object\n    NotFoundResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: \"Could not find widget with id: '123'\"\n              type: string\n            - example:\n                not_found:\n                  entity: widget\n                  id: \"123\"\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Found\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unknown Widget\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#entitynotfounderror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 404\n          type: number\n        type_name:\n          description: The type of error returned\n          example: EntityNotFoundError\n          type: string\n    NotImplementedResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'\n              type: string\n            - type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Implemented\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unmapped Attribute\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#mappingerror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 501\n          type: number\n        type_name:\n          description: The type of error returned\n          example: MappingError\n          type: string\n    PaymentRequiredResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: You have reached your limit of 2000\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Payment Required\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Request Limit Reached\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#requestlimiterror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 402\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestLimitError\n          type: string\n    ServiceId:\n      description: Service provider identifier\n      example: close\n      type: string\n    Status:\n      description: The status of the webhook.\n      enum:\n        - enabled\n        - disabled\n      example: enabled\n      type: string\n      x-graphql-type-name: WebhookStatus\n    UnauthorizedResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: Failed to generate valid JWT Session. Verify applicationId is correct\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unauthorized\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unauthorized Request\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#unauthorizederror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 401\n          type: number\n        type_name:\n          description: The type of error returned\n          example: UnauthorizedError\n          type: string\n    UnexpectedErrorResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: \"Missing Header: x-apideck-consumer-id\"\n              type: string\n            - example:\n                missing:\n                  - x-apideck-consumer-id: required\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#unauthorizederror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 400\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestHeadersValidationError\n          type: string\n    UnifiedApiId:\n      description: Name of Apideck Unified API\n      enum:\n        - vault\n        - lead\n        - crm\n        - accounting\n        - file-storage\n        - spreadsheet\n        - email\n        - script\n        - sms\n        - team-messaging\n        - ecommerce\n        - payroll\n        - customer-support\n        - time-registration\n        - transactional-email\n        - hcm\n        - form\n        - csp\n        - email-marketing\n        - ats\n        - hris\n        - pos\n      example: crm\n      type: string\n    UnprocessableResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: State did not include unified_api\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unprocessable Entity\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid State\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#invalidstateerror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 422\n          type: number\n        type_name:\n          description: The type of error returned\n          example: InvalidStateError\n          type: string\n    UpdateWebhookRequest:\n      additionalProperties: false\n      properties:\n        delivery_url:\n          $ref: \"#/components/schemas/DeliveryUrl\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        events:\n          description: The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.\n          example:\n            - vault.connection.created\n            - vault.connection.updated\n          items:\n            $ref: \"#/components/schemas/WebhookEventType\"\n          title: Subscribed events\n          type: array\n        status:\n          $ref: \"#/components/schemas/Status\"\n      type: object\n    UpdateWebhookResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Webhook\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    UpdatedAt:\n      example: 2020-09-30T07:43:32.000Z\n      format: date-time\n      readOnly: true\n      title: Updated at (timestamp)\n      type: string\n    Webhook:\n      additionalProperties: false\n      properties:\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        delivery_url:\n          $ref: \"#/components/schemas/DeliveryUrl\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        events:\n          description: The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.\n          example:\n            - vault.connection.created\n            - vault.connection.updated\n          items:\n            $ref: \"#/components/schemas/WebhookEventType\"\n          title: Subscribed events\n          type: array\n        execute_base_url:\n          $ref: \"#/components/schemas/ExecuteBaseUrl\"\n        id:\n          example: \"1234\"\n          readOnly: true\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n        unified_api:\n          $ref: \"#/components/schemas/UnifiedApiId\"\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n      required:\n        - delivery_url\n        - status\n        - events\n        - unified_api\n        - execute_base_url\n      type: object\n    WebhookEvent:\n      properties:\n        entity_id:\n          description: The service provider's ID of the entity that triggered this event\n          example: 123456ASDF\n          type: string\n        entity_type:\n          description: The type entity that triggered this event\n          example: Company\n          type: string\n        entity_url:\n          description: The url to retrieve entity detail.\n          example: https://unify.apideck.com/crm/contacts/123456\n          type: string\n        event_id:\n          description: Unique reference to this request event\n          example: 9755c355-56c3-4a2f-a2da-86ff4411fccb\n          type: string\n        event_type:\n          $ref: \"#/components/schemas/WebhookEventType\"\n        execution_attempt:\n          description: The current count this request event has been attempted\n          example: 2\n          type: number\n        occurred_at:\n          description: ISO Datetime for when the original event occurred\n          example: 2021-10-01T03:14:55.419Z\n          format: date-time\n          type: string\n        service_id:\n          $ref: \"#/components/schemas/ServiceId\"\n      type: object\n      x-sdk-exclude: true\n    WebhookEventLog:\n      additionalProperties: false\n      properties:\n        application_id:\n          $ref: \"#/components/schemas/ApplicationId\"\n        attempts:\n          description: record of each attempt to call webhook endpoint\n          items:\n            properties:\n              execution_attempt:\n                description: Number of attempts webhook endpoint was called before a success was returned or eventually failed\n                example: 3\n                type: number\n              status_code:\n                description: HTTP Status code that was returned.\n                example: 200\n                type: integer\n              success:\n                description: Whether or not the request was successful.\n                example: true\n                type: boolean\n              timestamp:\n                description: ISO Date and time when the request was made.\n                example: 2021-07-12T14:26:17.420Z\n                type: string\n            type: object\n          type: array\n        consumer_id:\n          $ref: \"#/components/schemas/ConsumerId\"\n        endpoint:\n          description: The URL of the webhook endpoint.\n          example: https://example.com/my/webhook/endpoint\n          format: uri\n          pattern: ^(https?)://\n          type: string\n        entity_type:\n          description: Name of the Entity described by the attributes delivered within payload\n          example: Connection\n          type: string\n        event_type:\n          description: Name of source event that webhook is subscribed to.\n          example: vault.connection.updated\n          type: string\n        execution_attempt:\n          description: Number of attempts webhook endpoint was called before a success was returned or eventually failed\n          example: 3\n          type: number\n        http_method:\n          description: HTTP Method of request to endpoint.\n          example: GET\n          type: string\n        id:\n          example: 1d174c4d-fe9e-4377-a76c-6da22fe9cd87\n          type: string\n        request_body:\n          description: The JSON stringified payload that was delivered to the webhook endpoint.\n          example: '{\"entity\":{\"id\":\"2222+test_user_id\",\"application_id\":\"2222\",\"consumer_id\":\"test_user_id\",\"name\":\"ActiveCampaign\",\"icon\":\"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png\",\"logo\":\"https://www.activecampaign.com/site/assets/social-2x.png\",\"unified_api\":\"crm\",\"service_id\":\"activecampaign\",\"auth_type\":\"apiKey\",\"enabled\":true,\"tag_line\":\"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.\",\"website\":\"https://www.activecampaign.com/\",\"settings\":{\"instance_url\":\"https://eu28.salesforce.com\",\"base_url\":\"https://updated.api-us1.com\"},\"metadata\":{\"plan\":\"enterprise\",\"account\":{\"name\":\"My Company\"}},\"state\":\"callable\",\"created_at\":\"2021-09-10T10:39:49.628Z\",\"updated_at\":\"2021-09-10T10:39:52.715Z\"},\"entityType\":\"Connection\"}'\n          type: string\n        response_body:\n          description: The JSON stringified response that was returned from the webhook endpoint.\n          example: '{\"status\":\"OK\"}'\n          type: string\n        retry_scheduled:\n          description: If the request has not hit the max retry limit and will be retried.\n          example: true\n          type: boolean\n        service:\n          additionalProperties: false\n          description: Apideck service provider associated with event.\n          properties:\n            id:\n              description: Apideck service provider id.\n              example: 101-data-solution\n              type: string\n            name:\n              description: Apideck service provider name.\n              example: 101 Data Solution\n              type: string\n          required:\n            - id\n            - name\n          type: object\n        status_code:\n          description: HTTP Status code that was returned.\n          example: 200\n          type: integer\n        success:\n          description: Whether or not the request was successful.\n          example: true\n          type: boolean\n        timestamp:\n          description: ISO Date and time when the request was made.\n          example: 2021-07-12T14:26:17.420Z\n          type: string\n        unified_api:\n          $ref: \"#/components/schemas/UnifiedApiId\"\n      type: object\n    WebhookEventLogsFilter:\n      properties:\n        consumer_id:\n          example: test_user_id\n          nullable: true\n          type: string\n        entity_type:\n          example: Connection\n          nullable: true\n          type: string\n        event_type:\n          example: vault.connection.callable\n          nullable: true\n          type: string\n        exclude_apis:\n          example: vault,proxy\n          nullable: true\n          type: string\n        service:\n          nullable: true\n          properties:\n            id:\n              type: string\n          type: object\n      type: object\n      x-graphql-type-name: WebhookEventLogsFilter\n    WebhookEventType:\n      enum:\n        - \"*\"\n        - crm.activity.created\n        - crm.activity.updated\n        - crm.activity.deleted\n        - crm.company.created\n        - crm.company.updated\n        - crm.company.deleted\n        - crm.contact.created\n        - crm.contact.updated\n        - crm.contact.deleted\n        - crm.lead.created\n        - crm.lead.updated\n        - crm.lead.deleted\n        - crm.note.created\n        - crm.notes.updated\n        - crm.notes.deleted\n        - crm.opportunity.created\n        - crm.opportunity.updated\n        - crm.opportunity.deleted\n        - lead.lead.created\n        - lead.lead.updated\n        - lead.lead.deleted\n        - vault.connection.created\n        - vault.connection.updated\n        - vault.connection.deleted\n        - vault.connection.callable\n        - ats.job.created\n        - ats.job.updated\n        - ats.job.deleted\n        - ats.applicant.created\n        - ats.applicant.updated\n        - ats.applicant.deleted\n        - pos.order.created\n        - pos.order.updated\n        - pos.order.deleted\n        - pos.product.created\n        - pos.product.updated\n        - pos.product.deleted\n        - pos.payment.created\n        - pos.payment.updated\n        - pos.payment.deleted\n        - pos.merchant.created\n        - pos.merchant.updated\n        - pos.merchant.deleted\n        - pos.location.created\n        - pos.location.updated\n        - pos.location.deleted\n        - pos.item.created\n        - pos.item.updated\n        - pos.item.deleted\n        - pos.modifier.created\n        - pos.modifier.updated\n        - pos.modifier.deleted\n        - pos.modifier-group.created\n        - pos.modifier-group.updated\n        - pos.modifier-group.deleted\n      example: crm.company.created\n      type: string\n  securitySchemes:\n    apiKey:\n      description: |\n        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. \n        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.\n        Your Apideck application_id can also be found on the same page.\n\n        Authenticate your API requests by including your test or live secret API key in the request header. \n\n        - Bearer authorization header: `Authorization: Bearer \u003cyour-apideck-api-key\u003e`\n        - Application id header: `x-apideck-app-id: \u003cyour-apideck-app-id\u003e`\n\n        You should use the public keys on the SDKs and the secret keys to authenticate API requests.\n\n        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.\n\n        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\n        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n      in: header\n      name: Authorization\n      type: apiKey\n"
		}
	},
	"Error": "buildIR: make ir: path \"/webhook/logs\": get: parameters: field \"service\": nested objects not allowed"
}