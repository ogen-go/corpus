{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainjet/platform"
		},
		"file": {
			"name": "aws-streams-dynamodb-2012-08-10.json",
			"size": 0,
			"path": "schemas/openapi3/aws-streams-dynamodb-2012-08-10.json",
			"byteSize": 55776,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"2012-08-10\",\n    \"x-release\": \"v4\",\n    \"title\": \"Amazon DynamoDB Streams\",\n    \"description\": \"Amazon DynamoDB Streams provides API actions for accessing streams and processing stream records. To learn more about application development with Streams, see Capturing Table Activity with DynamoDB Streams in the Amazon DynamoDB Developer Guide.\",\n    \"x-logo\": {\n      \"url\": \"https://raw.githubusercontent.com/chainjet/assets/master/integrations/aws/Arch_Amazon-DynamoDB_64.svg\"\n    },\n    \"termsOfService\": \"https://aws.amazon.com/service-terms/\",\n    \"contact\": {\n      \"name\": \"Mike Ralphson\",\n      \"email\": \"mike.ralphson@gmail.com\",\n      \"url\": \"https://github.com/mermade/aws2openapi\",\n      \"x-twitter\": \"PermittedSoc\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0 License\",\n      \"url\": \"http://www.apache.org/licenses/\"\n    },\n    \"x-providerName\": \"amazonaws.com\",\n    \"x-serviceName\": \"streams.dynamodb\",\n    \"x-origin\": [\n      {\n        \"contentType\": \"application/json\",\n        \"url\": \"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/streams.dynamodb-2012-08-10.normal.json\",\n        \"converter\": {\n          \"url\": \"https://github.com/mermade/aws2openapi\",\n          \"version\": \"1.0.0\"\n        },\n        \"x-apisguru-driver\": \"external\"\n      }\n    ],\n    \"x-apiClientRegistration\": {\n      \"url\": \"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\"\n    },\n    \"x-apisguru-categories\": [\"cloud\"],\n    \"x-preferred\": true\n  },\n  \"externalDocs\": {\n    \"description\": \"Amazon Web Services documentation\",\n    \"url\": \"https://docs.aws.amazon.com/dynamodb/\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://streams.dynamodb.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The Amazon DynamoDB Streams multi-region endpoint\"\n    },\n    {\n      \"url\": \"https://streams.dynamodb.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The Amazon DynamoDB Streams multi-region endpoint\"\n    },\n    {\n      \"url\": \"http://streams.dynamodb.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The Amazon DynamoDB Streams endpoint for China (Beijing) and China (Ningxia)\"\n    },\n    {\n      \"url\": \"https://streams.dynamodb.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The Amazon DynamoDB Streams endpoint for China (Beijing) and China (Ningxia)\"\n    }\n  ],\n  \"x-hasEquivalentPaths\": true,\n  \"paths\": {\n    \"/#X-Amz-Target=DynamoDBStreams_20120810.DescribeStream\": {\n      \"post\": {\n        \"operationId\": \"DescribeStream\",\n        \"description\": \"\u003cp\u003eReturns information about a stream, including the current status of the stream, its Amazon Resource Name (ARN), the composition of its shards, and its corresponding DynamoDB table.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou can call \u003ccode\u003eDescribeStream\u003c/code\u003e at a maximum rate of 10 times per second.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eEach shard in the stream has a \u003ccode\u003eSequenceNumberRange\u003c/code\u003e associated with it. If the \u003ccode\u003eSequenceNumberRange\u003c/code\u003e has a \u003ccode\u003eStartingSequenceNumber\u003c/code\u003e but no \u003ccode\u003eEndingSequenceNumber\u003c/code\u003e, then the shard is still open (able to receive more stream records). If both \u003ccode\u003eStartingSequenceNumber\u003c/code\u003e and \u003ccode\u003eEndingSequenceNumber\u003c/code\u003e are present, then that shard is closed and can no longer receive more data.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DescribeStreamOutput\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ResourceNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceNotFoundException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalServerError\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InternalServerError\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/DescribeStreamInput\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"DynamoDBStreams_20120810.DescribeStream\"]\n            }\n          }\n        ],\n        \"summary\": \"Describe Stream\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=DynamoDBStreams_20120810.GetRecords\": {\n      \"post\": {\n        \"operationId\": \"GetRecords\",\n        \"description\": \"\u003cp\u003eRetrieves the stream records from a given shard.\u003c/p\u003e \u003cp\u003eSpecify a shard iterator using the \u003ccode\u003eShardIterator\u003c/code\u003e parameter. The shard iterator specifies the position in the shard from which you want to start reading stream records sequentially. If there are no stream records available in the portion of the shard that the iterator points to, \u003ccode\u003eGetRecords\u003c/code\u003e returns an empty list. Note that it might take multiple calls to get to a portion of the shard that contains stream records.\u003c/p\u003e \u003cnote\u003e \u003cp\u003e \u003ccode\u003eGetRecords\u003c/code\u003e can retrieve a maximum of 1 MB of data or 1000 stream records, whichever comes first.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GetRecordsOutput\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ResourceNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceNotFoundException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerError\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InternalServerError\" }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ExpiredIteratorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExpiredIteratorException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"TrimmedDataAccessException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TrimmedDataAccessException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/GetRecordsInput\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"DynamoDBStreams_20120810.GetRecords\"]\n            }\n          }\n        ],\n        \"summary\": \"Get Records\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=DynamoDBStreams_20120810.GetShardIterator\": {\n      \"post\": {\n        \"operationId\": \"GetShardIterator\",\n        \"description\": \"\u003cp\u003eReturns a shard iterator. A shard iterator provides information about how to retrieve the stream records from within a shard. Use the shard iterator in a subsequent \u003ccode\u003eGetRecords\u003c/code\u003e request to read the stream records from the shard.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eA shard iterator expires 15 minutes after it is returned to the requester.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetShardIteratorOutput\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ResourceNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceNotFoundException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalServerError\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InternalServerError\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"TrimmedDataAccessException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TrimmedDataAccessException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/GetShardIteratorInput\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"DynamoDBStreams_20120810.GetShardIterator\"]\n            }\n          }\n        ],\n        \"summary\": \"Get Shard Iterator\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=DynamoDBStreams_20120810.ListStreams\": {\n      \"post\": {\n        \"operationId\": \"ListStreams\",\n        \"description\": \"\u003cp\u003eReturns an array of stream ARNs associated with the current account and endpoint. If the \u003ccode\u003eTableName\u003c/code\u003e parameter is present, then \u003ccode\u003eListStreams\u003c/code\u003e will return only the streams ARNs for that table.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou can call \u003ccode\u003eListStreams\u003c/code\u003e at a maximum rate of 5 times per second.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ListStreamsOutput\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ResourceNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResourceNotFoundException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalServerError\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InternalServerError\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/ListStreamsInput\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"DynamoDBStreams_20120810.ListStreams\"]\n            }\n          }\n        ],\n        \"summary\": \"List Streams\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"X-Amz-Content-Sha256\": {\n        \"name\": \"X-Amz-Content-Sha256\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Date\": {\n        \"name\": \"X-Amz-Date\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Algorithm\": {\n        \"name\": \"X-Amz-Algorithm\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Credential\": {\n        \"name\": \"X-Amz-Credential\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Security-Token\": {\n        \"name\": \"X-Amz-Security-Token\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Signature\": {\n        \"name\": \"X-Amz-Signature\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-SignedHeaders\": {\n        \"name\": \"X-Amz-SignedHeaders\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"hmac\": {\n        \"type\": \"apiKey\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\",\n        \"description\": \"Amazon Signature authorization v4\",\n        \"x-amazon-apigateway-authtype\": \"awsSigv4\"\n      }\n    },\n    \"schemas\": {\n      \"DescribeStreamOutput\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"StreamDescription\": {\n            \"CreationRequestDateTime\": \"Wed May 20 13:51:10 PDT 2015\",\n            \"KeySchema\": [\n              { \"AttributeName\": \"ForumName\", \"KeyType\": \"HASH\" },\n              { \"AttributeName\": \"Subject\", \"KeyType\": \"RANGE\" }\n            ],\n            \"Shards\": [\n              {\n                \"SequenceNumberRange\": {\n                  \"EndingSequenceNumber\": \"20500000000000000910398\",\n                  \"StartingSequenceNumber\": \"20500000000000000910398\"\n                },\n                \"ShardId\": \"shardId-00000001414562045508-2bac9cd2\"\n              },\n              {\n                \"ParentShardId\": \"shardId-00000001414562045508-2bac9cd2\",\n                \"SequenceNumberRange\": {\n                  \"EndingSequenceNumber\": \"820400000000000001192334\",\n                  \"StartingSequenceNumber\": \"820400000000000001192334\"\n                },\n                \"ShardId\": \"shardId-00000001414576573621-f55eea83\"\n              },\n              {\n                \"ParentShardId\": \"shardId-00000001414576573621-f55eea83\",\n                \"SequenceNumberRange\": {\n                  \"EndingSequenceNumber\": \"1683700000000000001135967\",\n                  \"StartingSequenceNumber\": \"1683700000000000001135967\"\n                },\n                \"ShardId\": \"shardId-00000001414592258131-674fd923\"\n              },\n              {\n                \"ParentShardId\": \"shardId-00000001414592258131-674fd923\",\n                \"SequenceNumberRange\": {\n                  \"StartingSequenceNumber\": \"2574600000000000000935255\"\n                },\n                \"ShardId\": \"shardId-00000001414608446368-3a1afbaf\"\n              }\n            ],\n            \"StreamArn\": \"arn:aws:dynamodb:us-west-2:111122223333:table/Forum/stream/2015-05-20T20:51:10.252\",\n            \"StreamLabel\": \"2015-05-20T20:51:10.252\",\n            \"StreamStatus\": \"ENABLED\",\n            \"StreamViewType\": \"NEW_AND_OLD_IMAGES\",\n            \"TableName\": \"Forum\"\n          }\n        },\n        \"properties\": {\n          \"StreamDescription\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamDescription\" },\n              {\n                \"description\": \"A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents the output of a \u003ccode\u003eDescribeStream\u003c/code\u003e operation.\"\n      },\n      \"DescribeStreamInput\": {\n        \"type\": \"object\",\n        \"required\": [\"StreamArn\"],\n        \"title\": \"DescribeStreamInput\",\n        \"properties\": {\n          \"StreamArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) for the stream.\"\n              }\n            ]\n          },\n          \"Limit\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PositiveIntegerObject\" },\n              {\n                \"description\": \"The maximum number of shard objects to return. The upper limit is 100.\"\n              }\n            ]\n          },\n          \"ExclusiveStartShardId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ShardId\" },\n              {\n                \"description\": \"The shard ID of the first item that this operation will evaluate. Use the value that was returned for \u003ccode\u003eLastEvaluatedShardId\u003c/code\u003e in the previous operation. \"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents the input of a \u003ccode\u003eDescribeStream\u003c/code\u003e operation.\"\n      },\n      \"ResourceNotFoundException\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ErrorMessage\" },\n              {\n                \"description\": \"The resource which is being requested does not exist.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"The operation tried to access a nonexistent stream.\"\n      },\n      \"InternalServerError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ErrorMessage\" },\n              {\n                \"description\": \"The server encountered an internal error trying to fulfill the request.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"An error occurred on the server side.\"\n      },\n      \"GetRecordsOutput\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"NextShardIterator\": \"arn:aws:dynamodb:us-west-2:111122223333:table/Forum/stream/2015-05-20T20:51:10.252|1|AAAAAAAAAAGQBYshYDEe ... \u003cremaining characters omitted\u003e ...\",\n          \"Records\": [\n            {\n              \"awsRegion\": \"us-west-2\",\n              \"dynamodb\": {\n                \"ApproximateCreationDateTime\": \"1.46480646E9\",\n                \"Keys\": {\n                  \"ForumName\": { \"S\": \"DynamoDB\" },\n                  \"Subject\": { \"S\": \"DynamoDB Thread 3\" }\n                },\n                \"SequenceNumber\": \"300000000000000499659\",\n                \"SizeBytes\": 41,\n                \"StreamViewType\": \"KEYS_ONLY\"\n              },\n              \"eventID\": \"e2fd9c34eff2d779b297b26f5fef4206\",\n              \"eventName\": \"INSERT\",\n              \"eventSource\": \"aws:dynamodb\",\n              \"eventVersion\": \"1.0\"\n            },\n            {\n              \"awsRegion\": \"us-west-2\",\n              \"dynamodb\": {\n                \"ApproximateCreationDateTime\": \"1.46480527E9\",\n                \"Keys\": {\n                  \"ForumName\": { \"S\": \"DynamoDB\" },\n                  \"Subject\": { \"S\": \"DynamoDB Thread 1\" }\n                },\n                \"SequenceNumber\": \"400000000000000499660\",\n                \"SizeBytes\": 41,\n                \"StreamViewType\": \"KEYS_ONLY\"\n              },\n              \"eventID\": \"4b25bd0da9a181a155114127e4837252\",\n              \"eventName\": \"MODIFY\",\n              \"eventSource\": \"aws:dynamodb\",\n              \"eventVersion\": \"1.0\"\n            },\n            {\n              \"awsRegion\": \"us-west-2\",\n              \"dynamodb\": {\n                \"ApproximateCreationDateTime\": \"1.46480646E9\",\n                \"Keys\": {\n                  \"ForumName\": { \"S\": \"DynamoDB\" },\n                  \"Subject\": { \"S\": \"DynamoDB Thread 2\" }\n                },\n                \"SequenceNumber\": \"500000000000000499661\",\n                \"SizeBytes\": 41,\n                \"StreamViewType\": \"KEYS_ONLY\"\n              },\n              \"eventID\": \"740280c73a3df7842edab3548a1b08ad\",\n              \"eventName\": \"REMOVE\",\n              \"eventSource\": \"aws:dynamodb\",\n              \"eventVersion\": \"1.0\"\n            }\n          ]\n        },\n        \"properties\": {\n          \"Records\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RecordList\" },\n              {\n                \"description\": \"The stream records from the shard, which were retrieved using the shard iterator.\"\n              }\n            ]\n          },\n          \"NextShardIterator\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ShardIterator\" },\n              {\n                \"description\": \"The next position in the shard from which to start sequentially reading stream records. If set to \u003ccode\u003enull\u003c/code\u003e, the shard has been closed and the requested iterator will not return any more data.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents the output of a \u003ccode\u003eGetRecords\u003c/code\u003e operation.\"\n      },\n      \"GetRecordsInput\": {\n        \"type\": \"object\",\n        \"required\": [\"ShardIterator\"],\n        \"title\": \"GetRecordsInput\",\n        \"properties\": {\n          \"ShardIterator\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ShardIterator\" },\n              {\n                \"description\": \"A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.\"\n              }\n            ]\n          },\n          \"Limit\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PositiveIntegerObject\" },\n              {\n                \"description\": \"The maximum number of records to return from the shard. The upper limit is 1000.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents the input of a \u003ccode\u003eGetRecords\u003c/code\u003e operation.\"\n      },\n      \"LimitExceededException\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ErrorMessage\" },\n              { \"description\": \"Too many operations for a given subscriber.\" }\n            ]\n          }\n        },\n        \"description\": \"Your request rate is too high. The AWS SDKs for DynamoDB automatically retry requests that receive this exception. Your request is eventually successful, unless your retry queue is too large to finish. Reduce the frequency of requests and use exponential backoff. For more information, go to \u003ca href=\\\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html#APIRetries\\\"\u003eError Retries and Exponential Backoff\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\"\n      },\n      \"ExpiredIteratorException\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ErrorMessage\" },\n              {\n                \"description\": \"The provided iterator exceeds the maximum age allowed.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"The shard iterator has expired and can no longer be used to retrieve stream records. A shard iterator expires 15 minutes after it is retrieved using the \u003ccode\u003eGetShardIterator\u003c/code\u003e action.\"\n      },\n      \"TrimmedDataAccessException\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ErrorMessage\" },\n              {\n                \"description\": \"\\\"The data you are trying to access has been trimmed.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"\u003cp\u003eThe operation attempted to read past the oldest stream record in a shard.\u003c/p\u003e \u003cp\u003eIn DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream. You might receive a TrimmedDataAccessException if:\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003eYou request a shard iterator with a sequence number older than the trim point (24 hours).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\u003cp\u003eYou obtain a shard iterator, but before you use the iterator in a \u003ccode\u003eGetRecords\u003c/code\u003e request, a stream record in the shard exceeds the 24 hour period and is trimmed. This causes the iterator to access a record that no longer exists.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n      },\n      \"GetShardIteratorOutput\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"ShardIterator\": \"arn:aws:dynamodb:us-west-2:111122223333:table/Forum/stream/2015-05-20T20:51:10.252|1|AAAAAAAAAAEvJp6D+zaQ...  \u003cremaining characters omitted\u003e ...\"\n        },\n        \"properties\": {\n          \"ShardIterator\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ShardIterator\" },\n              {\n                \"description\": \"The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents the output of a \u003ccode\u003eGetShardIterator\u003c/code\u003e operation.\"\n      },\n      \"GetShardIteratorInput\": {\n        \"type\": \"object\",\n        \"required\": [\"StreamArn\", \"ShardId\", \"ShardIteratorType\"],\n        \"title\": \"GetShardIteratorInput\",\n        \"properties\": {\n          \"StreamArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) for the stream.\"\n              }\n            ]\n          },\n          \"ShardId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ShardId\" },\n              {\n                \"description\": \"The identifier of the shard. The iterator will be returned for this shard ID.\"\n              }\n            ]\n          },\n          \"ShardIteratorType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ShardIteratorType\" },\n              {\n                \"description\": \"\u003cp\u003eDetermines how the shard iterator is used to start reading stream records from the shard:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAT_SEQUENCE_NUMBER\u003c/code\u003e - Start reading exactly from the position denoted by a specific sequence number.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAFTER_SEQUENCE_NUMBER\u003c/code\u003e - Start reading right after the position denoted by a specific sequence number.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eTRIM_HORIZON\u003c/code\u003e - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLATEST\u003c/code\u003e - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          },\n          \"SequenceNumber\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SequenceNumber\" },\n              {\n                \"description\": \"The sequence number of a stream record in the shard from which to start reading.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents the input of a \u003ccode\u003eGetShardIterator\u003c/code\u003e operation.\"\n      },\n      \"ListStreamsOutput\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"Streams\": [\n            {\n              \"StreamArn\": \"arn:aws:dynamodb:us-wesst-2:111122223333:table/Forum/stream/2015-05-20T20:51:10.252\",\n              \"StreamLabel\": \"2015-05-20T20:51:10.252\",\n              \"TableName\": \"Forum\"\n            },\n            {\n              \"StreamArn\": \"arn:aws:dynamodb:us-west-2:111122223333:table/Forum/stream/2015-05-20T20:50:02.714\",\n              \"StreamLabel\": \"2015-05-20T20:50:02.714\",\n              \"TableName\": \"Forum\"\n            },\n            {\n              \"StreamArn\": \"arn:aws:dynamodb:us-west-2:111122223333:table/Forum/stream/2015-05-19T23:03:50.641\",\n              \"StreamLabel\": \"2015-05-19T23:03:50.641\",\n              \"TableName\": \"Forum\"\n            }\n          ]\n        },\n        \"properties\": {\n          \"Streams\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamList\" },\n              {\n                \"description\": \"A list of stream descriptors associated with the current account and endpoint.\"\n              }\n            ]\n          },\n          \"LastEvaluatedStreamArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamArn\" },\n              {\n                \"description\": \"\u003cp\u003eThe stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eLastEvaluatedStreamArn\u003c/code\u003e is empty, then the \\\"last page\\\" of results has been processed and there is no more data to be retrieved.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eLastEvaluatedStreamArn\u003c/code\u003e is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when \u003ccode\u003eLastEvaluatedStreamArn\u003c/code\u003e is empty.\u003c/p\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents the output of a \u003ccode\u003eListStreams\u003c/code\u003e operation.\"\n      },\n      \"ListStreamsInput\": {\n        \"type\": \"object\",\n        \"title\": \"ListStreamsInput\",\n        \"properties\": {\n          \"TableName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TableName\" },\n              {\n                \"description\": \"If this parameter is provided, then only the streams associated with this table name are returned.\"\n              }\n            ]\n          },\n          \"Limit\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PositiveIntegerObject\" },\n              {\n                \"description\": \"The maximum number of streams to return. The upper limit is 100.\"\n              }\n            ]\n          },\n          \"ExclusiveStartStreamArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamArn\" },\n              {\n                \"description\": \"The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for \u003ccode\u003eLastEvaluatedStreamArn\u003c/code\u003e in the previous operation. \"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents the input of a \u003ccode\u003eListStreams\u003c/code\u003e operation.\"\n      },\n      \"AttributeValue\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"S\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StringAttributeValue\" },\n              { \"description\": \"A String data type.\" }\n            ]\n          },\n          \"N\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NumberAttributeValue\" },\n              { \"description\": \"A Number data type.\" }\n            ]\n          },\n          \"B\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BinaryAttributeValue\" },\n              { \"description\": \"A Binary data type.\" }\n            ]\n          },\n          \"SS\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StringSetAttributeValue\" },\n              { \"description\": \"A String Set data type.\" }\n            ]\n          },\n          \"NS\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NumberSetAttributeValue\" },\n              { \"description\": \"A Number Set data type.\" }\n            ]\n          },\n          \"BS\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BinarySetAttributeValue\" },\n              { \"description\": \"A Binary Set data type.\" }\n            ]\n          },\n          \"M\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MapAttributeValue\" },\n              { \"description\": \"A Map data type.\" }\n            ]\n          },\n          \"L\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ListAttributeValue\" },\n              { \"description\": \"A List data type.\" }\n            ]\n          },\n          \"NULL\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NullAttributeValue\" },\n              { \"description\": \"A Null data type.\" }\n            ]\n          },\n          \"BOOL\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BooleanAttributeValue\" },\n              { \"description\": \"A Boolean data type.\" }\n            ]\n          }\n        },\n        \"description\": \"\u003cp\u003eRepresents the data for an attribute. You can set one, and only one, of the elements.\u003c/p\u003e \u003cp\u003eEach attribute in an item is a name-value pair. An attribute can be single-valued or multi-valued set. For example, a book item can have title and authors attributes. Each book has one title but can have many authors. The multi-valued attribute is a set; duplicate values are not allowed.\u003c/p\u003e\"\n      },\n      \"AttributeMap\": {\n        \"type\": \"object\",\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/AttributeValue\"\n        }\n      },\n      \"StringAttributeValue\": { \"type\": \"string\" },\n      \"NumberAttributeValue\": { \"type\": \"string\" },\n      \"BinaryAttributeValue\": { \"type\": \"string\" },\n      \"StringSetAttributeValue\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/StringAttributeValue\" }\n      },\n      \"NumberSetAttributeValue\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/NumberAttributeValue\" }\n      },\n      \"BinarySetAttributeValue\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/BinaryAttributeValue\" }\n      },\n      \"MapAttributeValue\": {\n        \"type\": \"object\",\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/AttributeValue\"\n        }\n      },\n      \"ListAttributeValue\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/AttributeValue\" }\n      },\n      \"NullAttributeValue\": { \"type\": \"boolean\" },\n      \"BooleanAttributeValue\": { \"type\": \"boolean\" },\n      \"Date\": { \"type\": \"string\", \"format\": \"date-time\" },\n      \"StreamArn\": { \"type\": \"string\", \"minLength\": 37, \"maxLength\": 1024 },\n      \"PositiveIntegerObject\": { \"type\": \"integer\", \"minimum\": 1 },\n      \"ShardId\": { \"type\": \"string\", \"minLength\": 28, \"maxLength\": 65 },\n      \"StreamDescription\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"StreamArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) for the stream.\"\n              }\n            ]\n          },\n          \"StreamLabel\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"\u003cp\u003eA timestamp, in ISO 8601 format, for this stream.\u003c/p\u003e \u003cp\u003eNote that \u003ccode\u003eLatestStreamLabel\u003c/code\u003e is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003ethe AWS customer ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ethe table name\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ethe \u003ccode\u003eStreamLabel\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          },\n          \"StreamStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamStatus\" },\n              {\n                \"description\": \"\u003cp\u003eIndicates the current status of the stream:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eENABLING\u003c/code\u003e - Streams is currently being enabled on the DynamoDB table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eENABLED\u003c/code\u003e - the stream is enabled.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDISABLING\u003c/code\u003e - Streams is currently being disabled on the DynamoDB table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDISABLED\u003c/code\u003e - the stream is disabled.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          },\n          \"StreamViewType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamViewType\" },\n              {\n                \"description\": \"\u003cp\u003eIndicates the format of the records within this stream:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEYS_ONLY\u003c/code\u003e - only the key attributes of items that were modified in the DynamoDB table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNEW_IMAGE\u003c/code\u003e - entire items from the table, as they appeared after they were modified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOLD_IMAGE\u003c/code\u003e - entire items from the table, as they appeared before they were modified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNEW_AND_OLD_IMAGES\u003c/code\u003e - both the new and the old images of the items from the table.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          },\n          \"CreationRequestDateTime\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Date\" },\n              {\n                \"description\": \"The date and time when the request to create this stream was issued.\"\n              }\n            ]\n          },\n          \"TableName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TableName\" },\n              {\n                \"description\": \"The DynamoDB table with which the stream is associated.\"\n              }\n            ]\n          },\n          \"KeySchema\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/KeySchema\" },\n              {\n                \"description\": \"The key attribute(s) of the stream's DynamoDB table.\"\n              }\n            ]\n          },\n          \"Shards\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ShardDescriptionList\" },\n              { \"description\": \"The shards that comprise the stream.\" }\n            ]\n          },\n          \"LastEvaluatedShardId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ShardId\" },\n              {\n                \"description\": \"\u003cp\u003eThe shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eLastEvaluatedShardId\u003c/code\u003e is empty, then the \\\"last page\\\" of results has been processed and there is currently no more data to be retrieved.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eLastEvaluatedShardId\u003c/code\u003e is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when \u003ccode\u003eLastEvaluatedShardId\u003c/code\u003e is empty.\u003c/p\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents all of the data describing a particular stream.\"\n      },\n      \"ErrorMessage\": { \"type\": \"string\" },\n      \"ShardIterator\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 2048 },\n      \"RecordList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Record\" }\n      },\n      \"ShardIteratorType\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"TRIM_HORIZON\",\n          \"LATEST\",\n          \"AT_SEQUENCE_NUMBER\",\n          \"AFTER_SEQUENCE_NUMBER\"\n        ]\n      },\n      \"SequenceNumber\": { \"type\": \"string\", \"minLength\": 21, \"maxLength\": 40 },\n      \"String\": { \"type\": \"string\" },\n      \"Identity\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"PrincipalId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"A unique identifier for the entity that made the call. For Time To Live, the principalId is \\\"dynamodb.amazonaws.com\\\".\"\n              }\n            ]\n          },\n          \"Type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"The type of the identity. For Time To Live, the type is \\\"Service\\\".\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Contains details about the type of identity that made the request.\"\n      },\n      \"KeySchemaElement\": {\n        \"type\": \"object\",\n        \"required\": [\"AttributeName\", \"KeyType\"],\n        \"properties\": {\n          \"AttributeName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/KeySchemaAttributeName\" },\n              { \"description\": \"The name of a key attribute.\" }\n            ]\n          },\n          \"KeyType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/KeyType\" },\n              {\n                \"description\": \"The attribute data, consisting of the data type and the attribute value itself.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"\u003cp\u003eRepresents \u003ci\u003ea single element\u003c/i\u003e of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index.\u003c/p\u003e \u003cp\u003eA \u003ccode\u003eKeySchemaElement\u003c/code\u003e represents exactly one attribute of the primary key. For example, a simple primary key (partition key) would be represented by one \u003ccode\u003eKeySchemaElement\u003c/code\u003e. A composite primary key (partition key and sort key) would require one \u003ccode\u003eKeySchemaElement\u003c/code\u003e for the partition key, and another \u003ccode\u003eKeySchemaElement\u003c/code\u003e for the sort key.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe partition key of an item is also known as its \u003ci\u003ehash attribute\u003c/i\u003e. The term \\\"hash attribute\\\" derives from DynamoDB's usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.\u003c/p\u003e \u003cp\u003eThe sort key of an item is also known as its \u003ci\u003erange attribute\u003c/i\u003e. The term \\\"range attribute\\\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.\u003c/p\u003e \u003c/note\u003e\"\n      },\n      \"KeySchema\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/KeySchemaElement\" },\n        \"minItems\": 1,\n        \"maxItems\": 2\n      },\n      \"KeySchemaAttributeName\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 255\n      },\n      \"KeyType\": { \"type\": \"string\", \"enum\": [\"HASH\", \"RANGE\"] },\n      \"TableName\": {\n        \"type\": \"string\",\n        \"pattern\": \"[a-zA-Z0-9_.-]+\",\n        \"minLength\": 3,\n        \"maxLength\": 255\n      },\n      \"StreamList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Stream\" }\n      },\n      \"OperationType\": {\n        \"type\": \"string\",\n        \"enum\": [\"INSERT\", \"MODIFY\", \"REMOVE\"]\n      },\n      \"PositiveLongObject\": { \"type\": \"integer\", \"minimum\": 1 },\n      \"StreamRecord\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ApproximateCreationDateTime\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Date\" },\n              {\n                \"description\": \"The approximate date and time when the stream record was created, in \u003ca href=\\\"http://www.epochconverter.com/\\\"\u003eUNIX epoch time\u003c/a\u003e format.\"\n              }\n            ]\n          },\n          \"Keys\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AttributeMap\" },\n              {\n                \"description\": \"The primary key attribute(s) for the DynamoDB item that was modified.\"\n              }\n            ]\n          },\n          \"NewImage\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AttributeMap\" },\n              {\n                \"description\": \"The item in the DynamoDB table as it appeared after it was modified.\"\n              }\n            ]\n          },\n          \"OldImage\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AttributeMap\" },\n              {\n                \"description\": \"The item in the DynamoDB table as it appeared before it was modified.\"\n              }\n            ]\n          },\n          \"SequenceNumber\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SequenceNumber\" },\n              { \"description\": \"The sequence number of the stream record.\" }\n            ]\n          },\n          \"SizeBytes\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PositiveLongObject\" },\n              { \"description\": \"The size of the stream record, in bytes.\" }\n            ]\n          },\n          \"StreamViewType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamViewType\" },\n              {\n                \"description\": \"\u003cp\u003eThe type of data from the modified DynamoDB item that was captured in this stream record:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEYS_ONLY\u003c/code\u003e - only the key attributes of the modified item.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNEW_IMAGE\u003c/code\u003e - the entire item, as it appeared after it was modified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOLD_IMAGE\u003c/code\u003e - the entire item, as it appeared before it was modified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNEW_AND_OLD_IMAGES\u003c/code\u003e - both the new and the old item images of the item.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"A description of a single data modification that was performed on an item in a DynamoDB table.\"\n      },\n      \"Record\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"eventID\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"A globally unique identifier for the event that was recorded in this stream record.\"\n              }\n            ]\n          },\n          \"eventName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/OperationType\" },\n              {\n                \"description\": \"\u003cp\u003eThe type of data modification that was performed on the DynamoDB table:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINSERT\u003c/code\u003e - a new item was added to the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eMODIFY\u003c/code\u003e - one or more of an existing item's attributes were modified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eREMOVE\u003c/code\u003e - the item was deleted from the table\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          },\n          \"eventVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"\u003cp\u003eThe version number of the stream record format. This number is updated whenever the structure of \u003ccode\u003eRecord\u003c/code\u003e is modified.\u003c/p\u003e \u003cp\u003eClient applications must not assume that \u003ccode\u003eeventVersion\u003c/code\u003e will remain at a particular value, as this number is subject to change at any time. In general, \u003ccode\u003eeventVersion\u003c/code\u003e will only increase as the low-level DynamoDB Streams API evolves.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"eventSource\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"The AWS service from which the stream record originated. For DynamoDB Streams, this is \u003ccode\u003eaws:dynamodb\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"awsRegion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"The region in which the \u003ccode\u003eGetRecords\u003c/code\u003e request was received.\"\n              }\n            ]\n          },\n          \"dynamodb\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamRecord\" },\n              {\n                \"description\": \"The main body of the stream record, containing all of the DynamoDB-specific fields.\"\n              }\n            ]\n          },\n          \"userIdentity\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Identity\" },\n              {\n                \"description\": \"\u003cp\u003eItems that are deleted by the Time to Live process after expiration have the following fields: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eRecords[].userIdentity.type\u003c/p\u003e \u003cp\u003e\\\"Service\\\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eRecords[].userIdentity.principalId\u003c/p\u003e \u003cp\u003e\\\"dynamodb.amazonaws.com\\\"\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"A description of a unique event within a stream.\"\n      },\n      \"SequenceNumberRange\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"StartingSequenceNumber\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SequenceNumber\" },\n              { \"description\": \"The first sequence number.\" }\n            ]\n          },\n          \"EndingSequenceNumber\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SequenceNumber\" },\n              { \"description\": \"The last sequence number.\" }\n            ]\n          }\n        },\n        \"description\": \"The beginning and ending sequence numbers for the stream records contained within a shard.\"\n      },\n      \"Shard\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ShardId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ShardId\" },\n              {\n                \"description\": \"The system-generated identifier for this shard.\"\n              }\n            ]\n          },\n          \"SequenceNumberRange\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SequenceNumberRange\" },\n              {\n                \"description\": \"The range of possible sequence numbers for the shard.\"\n              }\n            ]\n          },\n          \"ParentShardId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ShardId\" },\n              { \"description\": \"The shard ID of the current shard's parent.\" }\n            ]\n          }\n        },\n        \"description\": \"A uniquely identified group of stream records within a stream.\"\n      },\n      \"ShardDescriptionList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Shard\" }\n      },\n      \"Stream\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"StreamArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/StreamArn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) for the stream.\"\n              }\n            ]\n          },\n          \"TableName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TableName\" },\n              {\n                \"description\": \"The DynamoDB table with which the stream is associated.\"\n              }\n            ]\n          },\n          \"StreamLabel\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/String\" },\n              {\n                \"description\": \"\u003cp\u003eA timestamp, in ISO 8601 format, for this stream.\u003c/p\u003e \u003cp\u003eNote that \u003ccode\u003eLatestStreamLabel\u003c/code\u003e is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003ethe AWS customer ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ethe table name\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ethe \u003ccode\u003eStreamLabel\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Represents all of the data describing a particular stream.\"\n      },\n      \"StreamStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\"ENABLING\", \"ENABLED\", \"DISABLING\", \"DISABLED\"]\n      },\n      \"StreamViewType\": {\n        \"type\": \"string\",\n        \"enum\": [\"NEW_IMAGE\", \"OLD_IMAGE\", \"NEW_AND_OLD_IMAGES\", \"KEYS_ONLY\"]\n      }\n    }\n  },\n  \"security\": [{ \"hmac\": [] }],\n  \"x-metadata\": {\n    \"apiVersion\": \"2012-08-10\",\n    \"endpointPrefix\": \"streams.dynamodb\",\n    \"jsonVersion\": \"1.0\",\n    \"protocol\": \"json\",\n    \"serviceFullName\": \"Amazon DynamoDB Streams\",\n    \"serviceId\": \"DynamoDB Streams\",\n    \"signatureVersion\": \"v4\",\n    \"signingName\": \"dynamodb\",\n    \"targetPrefix\": \"DynamoDBStreams_20120810\",\n    \"uid\": \"streams-dynamodb-2012-08-10\"\n  }\n}\n",
			"canonicalURL": "/github.com/chainjet/platform@e2f11798433d537a6d63c18ac444f6b6e5360bb2/-/blob/schemas/openapi3/aws-streams-dynamodb-2012-08-10.json",
			"externalURLs": [
				{
					"url": "https://github.com/chainjet/platform/blob/e2f11798433d537a6d63c18ac444f6b6e5360bb2/schemas/openapi3/aws-streams-dynamodb-2012-08-10.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/\": post: requestBody: contents: media: \"application/json\": generate schema: field StreamArn: allOf: schema type mismatch: string and "
}