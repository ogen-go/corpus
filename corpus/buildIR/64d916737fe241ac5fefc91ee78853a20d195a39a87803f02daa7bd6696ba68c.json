{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/personalize-runtime/2018-05-22/openapi.yaml",
			"byteSize": 21772,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-05-22'\n  x-release: v4\n  title: Amazon Personalize Runtime\n  description: \u003cp/\u003e\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: personalize-runtime\n  x-aws-signingName: personalize\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/personalize-runtime-2018-05-22.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/personalize-runtime/'\nservers:\n  - url: 'http://personalize-runtime.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon Personalize Runtime multi-region endpoint\n  - url: 'https://personalize-runtime.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon Personalize Runtime multi-region endpoint\n  - url: 'http://personalize-runtime.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Personalize Runtime endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://personalize-runtime.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Personalize Runtime endpoint for China (Beijing) and China (Ningxia)\npaths:\n  /personalize-ranking:\n    post:\n      operationId: GetPersonalizedRanking\n      description: \u003cp\u003eRe-ranks a list of recommended items for the given user. The first item in the list is deemed the most likely item to be of interest to the user.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe solution backing the campaign must have been created using a recipe of type PERSONALIZED_RANKING.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPersonalizedRankingResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - campaignArn\n                - inputList\n                - userId\n              properties:\n                campaignArn:\n                  description: The Amazon Resource Name (ARN) of the campaign to use for generating the personalized ranking.\n                  type: string\n                  pattern: 'arn:([a-z\\d-]+):personalize:.*:.*:.+'\n                  maxLength: 256\n                inputList:\n                  description: 'A list of items (by \u003ccode\u003eitemId\u003c/code\u003e) to rank. If an item was not included in the training dataset, the item is appended to the end of the reranked list. The maximum is 500.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ItemID'\n                userId:\n                  description: The user for which you want the campaign to provide a personalized ranking.\n                  type: string\n                  maxLength: 256\n                context:\n                  description: 'The contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user''s recommendations, such as the user''s current location or device type.'\n                  type: object\n                  maxProperties: 150\n                  additionalProperties:\n                    $ref: '#/components/schemas/AttributeValue'\n                filterArn:\n                  description: 'The Amazon Resource Name (ARN) of a filter you created to include items or exclude items from recommendations for a given user. For more information, see \u003ca href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\u003eFiltering Recommendations\u003c/a\u003e.'\n                  type: string\n                  pattern: 'arn:([a-z\\d-]+):personalize:.*:.*:.+'\n                  maxLength: 256\n                filterValues:\n                  description: '\u003cp\u003eThe values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma. \u003c/p\u003e \u003cp\u003eFor filter expressions that use an \u003ccode\u003eINCLUDE\u003c/code\u003e element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an \u003ccode\u003eEXCLUDE\u003c/code\u003e element to exclude items, you can omit the \u003ccode\u003efilter-values\u003c/code\u003e.In this case, Amazon Personalize doesn''t use that portion of the expression to filter recommendations.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\u003eFiltering Recommendations\u003c/a\u003e.\u003c/p\u003e'\n                  type: object\n                  maxProperties: 25\n                  additionalProperties:\n                    $ref: '#/components/schemas/FilterAttributeValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /recommendations:\n    post:\n      operationId: GetRecommendations\n      description: '\u003cp\u003eReturns a list of recommended items. The required input depends on the recipe type used to create the solution backing the campaign, as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eRELATED_ITEMS - \u003ccode\u003eitemId\u003c/code\u003e required, \u003ccode\u003euserId\u003c/code\u003e not used\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eUSER_PERSONALIZATION - \u003ccode\u003eitemId\u003c/code\u003e optional, \u003ccode\u003euserId\u003c/code\u003e required\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eCampaigns that are backed by a solution created using a recipe of type PERSONALIZED_RANKING use the API.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRecommendationsResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - campaignArn\n              properties:\n                campaignArn:\n                  description: The Amazon Resource Name (ARN) of the campaign to use for getting recommendations.\n                  type: string\n                  pattern: 'arn:([a-z\\d-]+):personalize:.*:.*:.+'\n                  maxLength: 256\n                itemId:\n                  description: \u003cp\u003eThe item ID to provide recommendations for.\u003c/p\u003e \u003cp\u003eRequired for \u003ccode\u003eRELATED_ITEMS\u003c/code\u003e recipe type.\u003c/p\u003e\n                  type: string\n                  maxLength: 256\n                userId:\n                  description: \u003cp\u003eThe user ID to provide recommendations for.\u003c/p\u003e \u003cp\u003eRequired for \u003ccode\u003eUSER_PERSONALIZATION\u003c/code\u003e recipe type.\u003c/p\u003e\n                  type: string\n                  maxLength: 256\n                numResults:\n                  description: The number of results to return. The default is 25. The maximum is 500.\n                  type: integer\n                  minimum: 0\n                context:\n                  description: 'The contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user''s recommendations, such as the user''s current location or device type.'\n                  type: object\n                  maxProperties: 150\n                  additionalProperties:\n                    $ref: '#/components/schemas/AttributeValue'\n                filterArn:\n                  description: '\u003cp\u003eThe ARN of the filter to apply to the returned recommendations. For more information, see \u003ca href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\u003eFiltering Recommendations\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eWhen using this parameter, be sure the filter resource is \u003ccode\u003eACTIVE\u003c/code\u003e.\u003c/p\u003e'\n                  type: string\n                  pattern: 'arn:([a-z\\d-]+):personalize:.*:.*:.+'\n                  maxLength: 256\n                filterValues:\n                  description: '\u003cp\u003eThe values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma. \u003c/p\u003e \u003cp\u003eFor filter expressions that use an \u003ccode\u003eINCLUDE\u003c/code\u003e element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an \u003ccode\u003eEXCLUDE\u003c/code\u003e element to exclude items, you can omit the \u003ccode\u003efilter-values\u003c/code\u003e.In this case, Amazon Personalize doesn''t use that portion of the expression to filter recommendations.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\u003eFiltering Recommendations\u003c/a\u003e.\u003c/p\u003e'\n                  type: object\n                  maxProperties: 25\n                  additionalProperties:\n                    $ref: '#/components/schemas/FilterAttributeValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    GetPersonalizedRankingResponse:\n      type: object\n      properties:\n        personalizedRanking:\n          allOf:\n            - $ref: '#/components/schemas/ItemList'\n            - description: A list of items in order of most likely interest to the user. The maximum is 500.\n        recommendationId:\n          allOf:\n            - $ref: '#/components/schemas/RecommendationID'\n            - description: The ID of the recommendation.\n    ItemID:\n      type: string\n      maxLength: 256\n    AttributeValue:\n      type: string\n      maxLength: 1000\n      format: password\n    FilterAttributeValue:\n      type: string\n      maxLength: 1000\n      format: password\n    InvalidInputException: {}\n    ResourceNotFoundException: {}\n    GetRecommendationsResponse:\n      type: object\n      properties:\n        itemList:\n          allOf:\n            - $ref: '#/components/schemas/ItemList'\n            - description: A list of recommendations sorted in ascending order by prediction score. There can be a maximum of 500 items in the list.\n        recommendationId:\n          allOf:\n            - $ref: '#/components/schemas/RecommendationID'\n            - description: The ID of the recommendation.\n    Arn:\n      type: string\n      pattern: 'arn:([a-z\\d-]+):personalize:.*:.*:.+'\n      maxLength: 256\n    AttributeName:\n      type: string\n      pattern: '[A-Za-z\\d_]+'\n      maxLength: 150\n    Context:\n      type: object\n      maxProperties: 150\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeValue'\n    FilterAttributeName:\n      type: string\n      pattern: '[A-Za-z0-9_]+'\n      maxLength: 50\n    FilterValues:\n      type: object\n      maxProperties: 25\n      additionalProperties:\n        $ref: '#/components/schemas/FilterAttributeValue'\n    InputList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ItemID'\n    UserID:\n      type: string\n      maxLength: 256\n    GetPersonalizedRankingRequest:\n      type: object\n      required:\n        - campaignArn\n        - inputList\n        - userId\n      title: GetPersonalizedRankingRequest\n      properties:\n        campaignArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the campaign to use for generating the personalized ranking.\n        inputList:\n          allOf:\n            - $ref: '#/components/schemas/InputList'\n            - description: 'A list of items (by \u003ccode\u003eitemId\u003c/code\u003e) to rank. If an item was not included in the training dataset, the item is appended to the end of the reranked list. The maximum is 500.'\n        userId:\n          allOf:\n            - $ref: '#/components/schemas/UserID'\n            - description: The user for which you want the campaign to provide a personalized ranking.\n        context:\n          allOf:\n            - $ref: '#/components/schemas/Context'\n            - description: 'The contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user''s recommendations, such as the user''s current location or device type.'\n        filterArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: 'The Amazon Resource Name (ARN) of a filter you created to include items or exclude items from recommendations for a given user. For more information, see \u003ca href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\u003eFiltering Recommendations\u003c/a\u003e.'\n        filterValues:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: '\u003cp\u003eThe values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma. \u003c/p\u003e \u003cp\u003eFor filter expressions that use an \u003ccode\u003eINCLUDE\u003c/code\u003e element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an \u003ccode\u003eEXCLUDE\u003c/code\u003e element to exclude items, you can omit the \u003ccode\u003efilter-values\u003c/code\u003e.In this case, Amazon Personalize doesn''t use that portion of the expression to filter recommendations.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\u003eFiltering Recommendations\u003c/a\u003e.\u003c/p\u003e'\n    ItemList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PredictedItem'\n    RecommendationID:\n      type: string\n    NumResults:\n      type: integer\n      minimum: 0\n    GetRecommendationsRequest:\n      type: object\n      required:\n        - campaignArn\n      title: GetRecommendationsRequest\n      properties:\n        campaignArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the campaign to use for getting recommendations.\n        itemId:\n          allOf:\n            - $ref: '#/components/schemas/ItemID'\n            - description: \u003cp\u003eThe item ID to provide recommendations for.\u003c/p\u003e \u003cp\u003eRequired for \u003ccode\u003eRELATED_ITEMS\u003c/code\u003e recipe type.\u003c/p\u003e\n        userId:\n          allOf:\n            - $ref: '#/components/schemas/UserID'\n            - description: \u003cp\u003eThe user ID to provide recommendations for.\u003c/p\u003e \u003cp\u003eRequired for \u003ccode\u003eUSER_PERSONALIZATION\u003c/code\u003e recipe type.\u003c/p\u003e\n        numResults:\n          allOf:\n            - $ref: '#/components/schemas/NumResults'\n            - description: The number of results to return. The default is 25. The maximum is 500.\n        context:\n          allOf:\n            - $ref: '#/components/schemas/Context'\n            - description: 'The contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user''s recommendations, such as the user''s current location or device type.'\n        filterArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: '\u003cp\u003eThe ARN of the filter to apply to the returned recommendations. For more information, see \u003ca href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\u003eFiltering Recommendations\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eWhen using this parameter, be sure the filter resource is \u003ccode\u003eACTIVE\u003c/code\u003e.\u003c/p\u003e'\n        filterValues:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: '\u003cp\u003eThe values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma. \u003c/p\u003e \u003cp\u003eFor filter expressions that use an \u003ccode\u003eINCLUDE\u003c/code\u003e element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an \u003ccode\u003eEXCLUDE\u003c/code\u003e element to exclude items, you can omit the \u003ccode\u003efilter-values\u003c/code\u003e.In this case, Amazon Personalize doesn''t use that portion of the expression to filter recommendations.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/personalize/latest/dg/filter.html\"\u003eFiltering Recommendations\u003c/a\u003e.\u003c/p\u003e'\n    PredictedItem:\n      type: object\n      properties:\n        itemId:\n          allOf:\n            - $ref: '#/components/schemas/ItemID'\n            - description: The recommended item ID.\n        score:\n          allOf:\n            - $ref: '#/components/schemas/Score'\n            - description: 'A numeric representation of the model''s certainty that the item will be the next user selection. For more information on scoring logic, see \u003ca\u003ehow-scores-work\u003c/a\u003e.'\n      description: \u003cp\u003eAn object that identifies an item.\u003c/p\u003e \u003cp\u003eThe and APIs return a list of \u003ccode\u003ePredictedItem\u003c/code\u003es.\u003c/p\u003e\n    Score:\n      type: number\n      format: double\nsecurity:\n  - hmac: []\n"
		}
	},
	"Error": "buildIR: make ir: path \"/personalize-ranking\": post: responses: 200: contents: application/json: generate schema: field personalizedRanking: allOf: schema type mismatch: array and "
}