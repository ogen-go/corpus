{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/algorithmiaio/dev-center"
		},
		"file": {
			"name": "openapispec.yml",
			"size": 0,
			"path": "assets/openapispec.yml",
			"byteSize": 183603,
			"content": "openapi: 3.0.0\nservers:\n  - url: '{apiServerUrl}'\n    variables:\n      apiServerUrl:\n        default: https://api.algorithmia.com\n        description: URL to send API requests to\ninfo:\n  version: '1.5.1'\n  title: Algorithmia Management APIs\n  description: APIs for managing actions on the Algorithmia platform\n  termsOfService: 'https://algorithmia.com/terms'\n  contact:\n    name: Algorithmia Support Team\n    url: 'https://algorithmia.com/contact'\n    email: support@algorithmia.com\nexternalDocs:\n  description: Developer Center\n  url: https://algorithmia.com/developers\ntags:\n  - name: algorithms\n    description: Algorithm operations\n  - name: users\n    description: User operations\n  - name: organizations\n    description: Organization operations\n  - name: scm\n    description: Source code management operations\n  - name: secrets\n    description: Secret store operations\n  - name: connectors\n    description: Data connector operations\n  - name: data\n    description: Data API operations\n  - name: eventlisteners\n    description: Event listener operations\n  - name: builds\n    description: Algorithm build operations\n  - name: auth\n    description: Authentication and API key management\n  - name: usage\n    description: Platform usage information\n  - name: invites\n    description: Platform invite code management\n  - name: admin\n    description: Platform administration operations\n  - name: style\n    description: Platform front-end style configuration\n  - name: frontend\n    description: Platform front-end configuration\n  - name: registries\n    description: Optional registries images for mirroring\npaths:\n  /v1/admin/insights-connection:\n    get:\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      tags:\n        - connections\n      summary: Get the currently configured Insights connection\n      operationId: getConnection\n      responses:\n        200:\n          $ref: '#/components/responses/ConnectionConfigurationResponse'\n    post:\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      tags:\n        - connections\n      summary: Set the Insights connection configuration\n      operationId: updateConnection\n      requestBody:\n        $ref: '#/components/requestBodies/ConnectionConfigurationRequestBody'\n      responses:\n        200:\n          $ref: '#/components/responses/ConnectionConfigurationResponse'\n        500:\n          $ref: '#/components/responses/Error'\n    delete:\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      tags:\n        - connections\n      summary: Delete all configured Insights connections\n      operationId: deleteAllConnections\n      responses:\n        204:\n          description: The configuration was deleted successfully.\n\n  /v1/admin/invites:\n    get:\n      summary: Get a list of invite codes\n      tags:\n        - invites\n      operationId: getInvites\n      responses:\n        200:\n          $ref: '#/components/responses/InviteCodeResponse'\n\n    post:\n      summary: Add an invite code\n      tags:\n        - invites\n      operationId: addInvite\n      requestBody:\n        $ref: '#/components/requestBodies/InviteCodeRequestBody'\n      responses:\n        400:\n          $ref: '#/components/responses/Error'\n        200:\n          description: The invite code was added successfully\n\n  /v1/admin/invites/{invite_code}:\n    delete:\n      summary: Delete an invite code\n      tags:\n        - invites\n      operationId: deleteInvite\n      parameters:\n        - in: path\n          name: invite_code\n          description: the invite code to delete\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: Successfully deleted invite code\n        400:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/reservations:\n    get:\n      summary: List reservations\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      tags:\n        - admin\n        - reservations\n      operationId: getReservations\n      responses:\n        200:\n          $ref: '#/components/responses/ReservationsResponse'\n        500:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Create a reservation\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      tags:\n        - admin\n        - reservations\n      operationId: createReservation\n      requestBody:\n        $ref: '#/components/requestBodies/ReservationCreateRequestBody'\n      responses:\n        200:\n          description: Successfully created the reservation\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/reservations/{reservation_id}:\n    delete:\n      summary: Delete a reservation\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      tags:\n        - admin\n        - reservations\n      operationId: deleteReservation\n      parameters:\n        - in: path\n          name: reservation_id\n          description: The reservation to delete\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: Successfully deleted the reservation\n        400:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/usage:\n    get:\n      summary: List usage information for users/orgs including caller\n      description: Returns paginated algorithm usage information for a given date range for users and organizations on the cluster.\n      tags:\n        - admin\n        - usage\n      operationId: getFullUsage\n      parameters:\n        - in: query\n          name: user\n          description: user or organization names\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: true\n          required: false\n        - in: query\n          name: start_date\n          description: start date of query range in UTC format (2021-03-22T00:00:00.000Z)\n          schema:\n            type: string\n            format: date-time\n          required: true\n        - in: query\n          name: end_date\n          description: end date of query range in UTC format (2021-03-22T00:00:00.000Z)\n          schema:\n            type: string\n            format: date-time\n          required: true\n        - in: query\n          name: marker\n          description: Encoded pagination cursor\n          schema:\n            type: string\n          required: false\n        - in: query\n          name: page_size\n          description: maximum number of results to return in one query\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          $ref: '#/components/responses/FullUsageResultResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/usage/algorithms:\n    get:\n      summary: List usage information for users/orgs by algorithm\n      description: Returns paginated algorithm usage information for a given date range.\n      tags:\n        - admin\n        - usage\n      operationId: getAlgorithmUsageResult\n      parameters:\n        - in: query\n          name: user\n          description: user or organization names\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: true\n          required: false\n        - in: query\n          name: start_date\n          description: start date of query range in UTC format (2021-03-22T00:00:00.000Z)\n          schema:\n            type: string\n            format: date-time\n          required: true\n        - in: query\n          name: end_date\n          description: end date of query range in UTC format (2021-03-22T00:00:00.000Z)\n          schema:\n            type: string\n            format: date-time\n          required: true\n        - in: query\n          name: marker\n          description: Encoded pagination cursor\n          schema:\n            type: string\n          required: false\n        - in: query\n          name: page_size\n          description: maximum number of results to return in one query\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmUsageResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/legacy-algorithms:\n    get:\n      summary: Get legacy algorithm usage information\n      description: Returns usage information on legacy algorithms\n      tags:\n        - admin\n        - usage\n      operationId: getLegacyAlgorithmiUsageResult\n      responses:\n        200:\n          $ref: '#/components/responses/LegacyAlgorithmUsageResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/usage/users:\n    get:\n      summary: List algorithm usage information for users/orgs grouped by user/org\n      tags:\n        - admin\n        - usage\n      operationId: getUserUsageResult\n      parameters:\n        - in: query\n          name: user\n          description: user or organization names\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: true\n          required: false\n        - in: query\n          name: start_date\n          description: start date of query range in UTC format (2021-03-22T00:00:00.000Z)\n          schema:\n            type: string\n            format: date-time\n          required: true\n        - in: query\n          name: end_date\n          description: end date of query range in UTC format (2021-03-22T00:00:00.000Z)\n          schema:\n            type: string\n            format: date-time\n          required: true\n        - in: query\n          name: marker\n          description: Encoded pagination cursor\n          schema:\n            type: string\n          required: false\n        - in: query\n          name: page_size\n          description: maximum number of results to return in one query\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          $ref: '#/components/responses/UserUsageResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/features:\n    get:\n      summary: List available feature flags\n      tags:\n        - admin\n      operationId: featureFlagList\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/usernameQueryParam'\n      responses:\n        200:\n          $ref: '#/components/responses/FeatureFlagListResponse'\n        404:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/features/{featureName}:\n    parameters:\n      - $ref: '#/components/parameters/featureNameParam'\n\n    put:\n      summary: Enable/disable a feature flag globally\n      tags:\n        - admin\n      operationId: toggleFeatureFlag\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/usernameQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/FeatureFlagToggle'\n      responses:\n        204:\n          description: Flag value updated.\n        404:\n          $ref: '#/components/responses/Error'\n\n  /v1/organizations/{orgName}/algorithms-host-usernames:\n    parameters:\n      - $ref: '#/components/parameters/orgnameParam'\n\n    get:\n      summary: List AlgorithmHostUsername \"algorithm-id / functional-id\" pairs\n      tags:\n        - organizations\n      operationId: getHostUsernames\n      security:\n        - AdminApiKeyAuth: [ ]\n        - CookieAuth: [ ]\n      responses:\n        200: # Successful with a AlgorithmHostUsername json returned\n          $ref: '#/components/responses/AlgorithmHostUsernameResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    put:\n      summary: Add a list of AlgorithmHostUsername \"algorithm-id / functional-id\" pairs\n      tags:\n        - organizations\n      operationId: setHostUsernames\n      security:\n        - AdminApiKeyAuth: [ ]\n        - CookieAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/HostUpdateRequestBody'\n      responses:\n        204:\n          description: Mappings were succesfully updated\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/organizations/{orgName}/algorithms-host-usernames/{algorithmId}:\n    parameters:\n      - $ref: '#/components/parameters/orgnameParam'\n      - $ref: '#/components/parameters/algoIdParam'\n    delete:\n      summary: Delete functional-ids associated with an algorithm\n      tags:\n        - organizations\n      operationId: deleteHostUsernames\n      security:\n        - AdminApiKeyAuth: [ ]\n        - CookieAuth: [ ]\n      responses:\n        204:\n          description: Mappings were succesfully deleted\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/organization_host_information:\n    put:\n      summary: Update an organization host information mapping\n      tags:\n        - admin\n        - organizations\n      operationId: update\n      security:\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/OrganizationHostInformation'\n      responses:\n        200:\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/organization_host_information/{orgName}:\n    parameters:\n      - $ref: '#/components/parameters/orgnameParam'\n\n    get:\n      summary: Get an organization host information mapping\n      tags:\n        - admin\n        - organizations\n      operationId: getByOrgName\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200: # Successful with a OrganizationHostInformation json returned\n          $ref: '#/components/responses/OrganizationHostInformation'\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Create an organization host information mapping\n      tags:\n        - admin\n        - organizations\n      operationId: createOrganizationHostInformation\n      security:\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateOrganizationHostInformation'\n      responses:\n        200:\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    delete:\n      summary: Delete an organization host information mapping\n      tags:\n        - admin\n        - organizations\n      operationId: delete\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n        400:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/scms:\n    post:\n      summary: Create an SCM configuration\n      tags:\n        - admin\n        - scm\n      operationId: createScm\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/ScmCreateRequestBody'\n      responses:\n        201:\n          $ref: '#/components/responses/ScmResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        409:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Creating an SCM configuration is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/admin/scms \\\n              -X POST \\\n              -H 'Authorization: Simple ADMIN_API_KEY' \\\n              -H 'Content-Type: application/json' \\\n              -d '{\n                \"enabled\": false,\n                \"id\": \"github\",\n                \"oauth\": {\n                  \"client_id\": \"89fsdy7hsdf8tsgd6\",\n                  \"client_secret\": \"...\"\n                },\n                \"provider\": \"github\",\n                \"urls\": {\n                  \"api\": \"https://api.github.com\",\n                  \"ssh\": \"ssh://git@github.com\",\n                  \"web\": \"https://github.com\"\n                }\n              }'\n\n  /v1/admin/scms/{scmId}:\n    parameters:\n      - $ref: '#/components/parameters/scmIdParam'\n\n    patch:\n      summary: Update an SCM configuration\n      tags:\n        - admin\n        - scm\n      operationId: updateScm\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/ScmUpdateRequestBody'\n      responses:\n        200:\n          $ref: '#/components/responses/ScmResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Updating an SCM configuration is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/admin/scms/SCM_CONFIG_ID \\\n              -X PATCH \\\n              -H 'Authorization: Simple ADMIN_API_KEY' \\\n              -H 'Content-Type: application/json' \\\n              -d '{\n                \"enabled\": true\n              }'\n\n    delete:\n      summary: Delete an SCM configuration\n      description: Note that at least one SCM (source code management) configuration must be enabled at any given time. If the SCM configuration is currently enabled, is being used by an algorithm, or is an \"internal\" SCM configuration, this call will fail and an appropriate error code will be returned.\n      tags:\n        - admin\n        - scm\n      operationId: deleteScm\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        204:\n          description: The SCM was deleted successfully.\n        400:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Deleting an SCM configuration is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/admin/scms/SCM_CONFIG_ID \\\n              -X DELETE \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n  /v1/admin/scms/{scmId}/default:\n    parameters:\n      - $ref: '#/components/parameters/scmIdParam'\n\n    post:\n      summary: Set an SCM configuration as the default\n      description: Sets the specified SCM (source code management) configuration to be the default for the cluster and removes this designation from the previous default SCM configuration. If the SCM configuration in question is currently disabled, this call will fail.\n      tags:\n        - admin\n        - scm\n      operationId: setDefaultScm\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        204:\n          description: The SCM was marked as the default.\n        400:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Setting the default SCM configuration is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/admin/scms/SCM_CONFIG_ID/default \\\n              -X POST \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n  /v1/admin/secret-provider:\n    get:\n      summary: List secret providers\n      tags:\n        - admin\n        - secrets\n      operationId: adminListSecretProviders\n      responses:\n        200:\n          $ref: '#/components/responses/ListProviderInfoResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Create a secret provider\n      tags:\n        - admin\n        - secrets\n      operationId: createSecretProvider\n      requestBody:\n        $ref: '#/components/requestBodies/SecretProviderRequestBody'\n      responses:\n        200:\n          $ref: '#/components/responses/ProviderInfoResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/secret-provider/{providerId}:\n    parameters:\n      - $ref: '#/components/parameters/providerIdParam'\n\n    get:\n      summary: Get a secret provider\n      tags:\n        - admin\n        - secrets\n      operationId: getSecretProvider\n      responses:\n        200:\n          $ref: '#/components/responses/ProviderInfoResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Update a secret provider\n      tags:\n        - admin\n        - secrets\n      operationId: updateProvider\n      requestBody:\n        $ref: '#/components/requestBodies/SecretProviderRequestBody'\n      responses:\n        200:\n          $ref: '#/components/responses/ProviderInfoResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    delete:\n      summary: Delete a secret provider\n      tags:\n        - admin\n        - secrets\n      operationId: deleteProvider\n      responses:\n        204:\n          description: The secret provider was deleted\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/users/{username}/keys:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n    post:\n      summary: Add a specific API key for a user\n      tags:\n        - admin\n      operationId: importApiKey\n      responses:\n        200:\n          $ref: '#/components/responses/CreateApiKeyResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/plugins/secret-provider/{providerId}:\n    parameters:\n      - $ref: '#/components/parameters/providerIdParam'\n\n    get:\n      summary: Check if a .jar file has been uploaded for a secret provider\n      tags:\n        - admin\n        - secrets\n      operationId: checkSecretProviderForJar\n      responses:\n        200:\n          description: A .jar file exists\n        400:\n          description: A .jar file does not exists\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Upload a .jar file for a secret provider\n      tags:\n        - admin\n        - secrets\n      operationId: uploadJarForSecretProvider\n      responses:\n        200:\n          description: The .jar was uploaded successfully\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/admin/plugins/secret-provider/{providerId}/default:\n    parameters:\n      - $ref: '#/components/parameters/providerIdParam'\n\n    post:\n      summary: Set a secret provider as the default\n      tags:\n        - admin\n        - secrets\n      operationId: setDefaultSecretProvider\n      responses:\n        204:\n          description: The secret provider was marked as the default\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algo/{algorithmId}/{algoCallableVersion}:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n      - $ref: '#/components/parameters/algoCallableVersionParam'\n      - description: Specifies the amount of time in seconds to wait for the algorithm to respond before returning an error. Defaults to 300 (5 min.)\n        in: query\n        name: timeout\n        required: false\n        schema:\n          default: 300\n          type: number\n      - description: Specifies whether data passed to `stdout` during invocation should be returned to the caller. This parameter is only respected when the caller is the algorithm owner.\n        in: query\n        name: stdout\n        required: false\n        schema:\n          type: boolean\n      - description: Allows customization of the response. `raw` signfies that you wish the algorithm's response to be returned to you without a JSON wrapper, while `void` signifies that you do not wish to wait for an algorithm response. In the latter case, the call will return immediately once the invocation has begun.\n        in: query\n        name: output\n        required: false\n        schema:\n          type: string\n          enum:\n            - raw\n            - void\n\n    post:\n      summary: Make a request to an algorithm by immutable identifier\n      tags:\n        - algorithms\n      operationId: callAlgorithmById\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n          application/text:\n            schema:\n              type: string\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmInvocationResultResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      security:\n        - ApiKeyAuth: [ ]\n\n  /v1/algo/{username}/{algoname}/{algoCallableVersion}:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n      - $ref: '#/components/parameters/algoCallableVersionParam'\n      - description: Specifies the amount of time in seconds to wait for the algorithm to respond before returning an error. Defaults to 300 (5 min.)\n        in: query\n        name: timeout\n        required: false\n        schema:\n          default: 300\n          type: number\n      - description: Specifies whether data passed to `stdout` during invocation should be returned to the caller. This parameter is only respected when the caller is the algorithm owner.\n        in: query\n        name: stdout\n        required: false\n        schema:\n          type: boolean\n      - description: Allows customization of the response. `raw` signfies that you wish the algorithm's response to be returned to you without a JSON wrapper, while `void` signifies that you do not wish to wait for an algorithm response. In the latter case, the call will return immediately once the invocation has begun.\n        in: query\n        name: output\n        required: false\n        schema:\n          type: string\n          enum:\n            - raw\n            - void\n\n    post:\n      summary: Make a request to an algorithm\n      tags:\n        - algorithms\n      description: This is the primary method to execute a request for an algorithm\n      operationId: callAlgorithm\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n          application/text:\n            schema:\n              type: string\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmInvocationResultResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      security:\n        - ApiKeyAuth: [ ]\n\n  /v1/algorithms/{username}:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n\n    post:\n      summary: Create an algorithm\n      tags:\n        - algorithms\n      operationId: createAlgorithm\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateRequest'\n      responses:\n        201:\n          $ref: '#/components/responses/HashResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n            ...\n\n            ## create an algorithm\n\n            import Algorithmia\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            algo = client.algo(\"ALGO_OWNER/ALGO_NAME\")\n\n            algo.create(\n              details = {\n                \"label\": \"My First Algorithm\"\n              },\n              settings = {\n                \"language\": \"python3-1\",\n                \"environment\": \"cpu\",\n                \"source_visibility\": \"closed\",\n                \"license\": \"apl\",\n                \"network_access\": \"full\",\n                \"pipeline_enabled\": True\n              }\n            )\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER \\\n              -H 'Authorization: Simple STD_API_KEY' \\\n              -H 'Content-Type: application/json' \\\n              -d '{\n                \"details\": {\n                  \"label\": \"My First Algorithm\"\n                },\n                \"name\": \"ALGO_NAME\",\n                \"settings\": {\n                  \"language\": \"python3-1\",\n                  \"environment\": \"cpu\",\n                  \"source_visibility\": \"closed\",\n                  \"license\": \"apl\",\n                  \"network_access\": \"full\",\n                  \"pipeline_enabled\": true\n                }\n              }'\n\n    # TODO: fix namespace conflict, these are actually /algorithms/{algorithmId} with algoIdParam\n    get:\n      summary: Get an algorithm\n      tags:\n        - algorithms\n      operationId: getAlgorithmById\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/VersionResponse'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            algo = client.algo(\"ALGO_OWNER/ALGO_NAME\")\n\n            print(algo.info()) # Prints an algorithm object\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER/ALGO_NAME \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n    put:\n      summary: Update an algorithm\n      tags:\n        - algorithms\n      operationId: updateAlgorithmById\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateRequest'\n      responses:\n        200:\n          $ref: '#/components/responses/HashResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{username}/{algoname}:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n\n    get:\n      summary: Get algorithm metadata\n      tags:\n        - algorithms\n      operationId: getAlgorithm\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/VersionResponse'\n\n    put:\n      summary: Update algorithm metadata\n      tags:\n        - algorithms\n      operationId: updateAlgorithm\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateRequest'\n      responses:\n        200:\n          $ref: '#/components/responses/HashResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            algo = client.algo(\"ALGO_OWNER/ALGO_NAME\")\n\n            algo.update(\n              details = {\n                \"label\": \"My Updated Algorithm\"\n              },\n              settings = {\n                \"environment\": \"gpu\",\n                \"license\": \"apl\",\n                \"network_access\": \"full\",\n                \"pipeline_enabled\": True,\n                \"source_visibility\": \"closed\"\n              }\n            )\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER/ALGO_NAME \\\n              -X PUT\n            -H 'Authorization: Simple STD_API_KEY' \\\n              -H 'Content-Type: application/json' \\\n              -d '{\n                \"details\": {\n                  \"label\": \"My Updated Algorithm\"\n                },\n                \"settings\": {\n                  \"environment\": \"gpu\",\n                  \"license\": \"apl\",\n                  \"network_access\": \"full\",\n                  \"pipeline_enabled\": true,\n                  \"source_visibility\": \"closed\"\n                }\n              }'\n\n    delete:\n      summary: Delete an algorithm\n      tags:\n        - algorithms\n      operationId: deleteAlgorithm\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        204:\n          description: The algorithm was successfully deleted.\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Deleting an algorithm is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER/ALGO_NAME \\\n              -X DELETE \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n  /v1/algorithms/{algorithmId}/builds:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n\n    get:\n      summary: Get algorithm builds by algorithm ID\n      tags:\n        - algorithms\n        - builds\n      operationId: getAlgorithmByIdBuilds\n      parameters:\n        - $ref: '#/components/parameters/limitParam'\n        - $ref: '#/components/parameters/markerParam'\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/PagedBuildsListResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{username}/{algoname}/builds:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n\n    get:\n      summary: Get algorithm builds by algorithm name\n      tags:\n        - algorithms\n        - builds\n      operationId: getAlgorithmBuilds\n      parameters:\n        - $ref: '#/components/parameters/limitParam'\n        - $ref: '#/components/parameters/markerParam'\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/PagedBuildsListResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Listing algorithm builds is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER/ALGO_NAME/builds \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n  /v1/algorithms/{algorithmId}/builds/{buildid}:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n      - $ref: '#/components/parameters/buildId'\n\n    get:\n      summary: Get an algorithm build by algorithm ID and build ID\n      tags:\n        - algorithms\n        - builds\n      operationId: getAlgorithmByIdBuildById\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/BuildResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Querying information about a single build is not currently supported in our Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_ID/builds/BUILD_ID \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n\n  /v1/algorithms/{username}/{algoname}/builds/{buildid}:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n      - $ref: '#/components/parameters/buildId'\n\n    get:\n      summary: Get an algorithm build by algorithm name and build ID\n      tags:\n        - algorithms\n        - builds\n      operationId: getAlgorithmBuildById\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/BuildResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Querying information about a single build is not currently supported in our Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER/ALGO_NAME/builds/BUILD_ID \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n  /v1/algorithms/{algorithmId}/builds/{buildid}/logs:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n      - $ref: '#/components/parameters/buildId'\n\n    get:\n      summary: Get algorithm build logs by algorithm ID and build ID\n      tags:\n        - algorithms\n        - builds\n      operationId: getAlgorithmByIdBuildLogs\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/BuildLogsResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Obtaining an algorithm build's logs is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_ID/builds/BUILD_ID/logs \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n  /v1/algorithms/{username}/{algoname}/builds/{buildid}/logs:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n      - $ref: '#/components/parameters/buildId'\n\n    get:\n      summary: Get algorithm build logs by algorithm name and build ID\n      tags:\n        - algorithms\n        - builds\n      operationId: getAlgorithmBuildLogs\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/BuildLogsResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Obtaining an algorithm build's logs is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER/ALGO_NAME/builds/BUILD_ID/logs \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n  /v1/algorithms/{algorithmId}/compile:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n\n    post:\n      summary: Compile an algorithm by algorithm ID\n      tags:\n        - algorithms\n        - builds\n      operationId: compileAlgorithmById\n      description: Compiles the latest available source code for an algorithm, resulting in a new hash version of an algorithm available for publishing. For BitBucket it's necessary to provide additional information in the request body.\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/BuildRequest'\n      responses:\n        200:\n          $ref: '#/components/responses/VersionResponse'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{username}/{algoname}/compile:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n\n    post:\n      summary: Compile an algorithm by algorithm name\n      tags:\n        - algorithms\n        - builds\n      operationId: compileAlgorithm\n      description: Compiles the latest available source code for an algorithm, resulting in a new hash version of an algorithm available for publishing.\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/BuildRequest'\n      responses:\n        200:\n          $ref: '#/components/responses/VersionResponse'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{algorithmId}/errors:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n\n    get:\n      summary: Get algorithm errors by algorithm ID\n      tags:\n        - algorithms\n      operationId: getAlgorithmErrorsByAlgorithmId\n      security:\n        - CookieAuth: []\n        - ApiKeyAuth: []\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmErrorListResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{username}/{algoname}/errors:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n\n    get:\n      summary: Get algorithm errors by algorithm name\n      tags:\n        - algorithms\n      operationId: getAlgorithmErrorsByAlgorithmName\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmErrorListResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{username}/{algoname}/log:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n      - $ref: '#/components/parameters/sinceSha'\n      - $ref: '#/components/parameters/untilSha'\n\n    get:\n      summary: List commits for a repository\n      tags:\n        - algorithms\n        - builds\n      operationId: commitLogForRepository\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/RepositoryCommitLogResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{username}/{algoname}/scm/status:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n\n    get:\n      summary: Get algorithm SCM provider connection status\n      tags:\n        - algorithms\n        - builds\n        - scm\n      operationId: getAlgorithmScmConnectionStatus\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/ScmConnectionStatusResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Obtaining an algorithm's SCM provider status is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER/ALGO_NAME/scm/status \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n  /v1/algorithms/{algorithmId}/scm/webhook:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n\n    post:\n      summary: Receive SCM repository events by algorithm ID\n      description: This endpoint is called exclusively by SCM providers who wish to inform us of changes to repositories backing algorithms.\n      tags:\n        - algorithms\n        - scm\n      operationId: receiveAlgorithmByIdScmRepositoryEvent\n      security:\n        - GithubAuth: [ ]\n          GithubEventIdentification: [ ] ## We need BOTH headers for a valid request\n        - XGitlabEvent: [ ]\n        - XBitbucketKey: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/ScmWebhookRequestBody'\n      responses:\n        202:\n          $ref: '#/components/responses/ScmWebhookIgnoredResponse'\n        204:\n          description: Webhook received.\n        400:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{username}/{algoname}/scm/webhook:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n\n    post:\n      summary: Receive SCM repository events by algorithm name\n      description: This endpoint is called exclusively by SCM providers who wish to inform us of changes to repositories backing algorithms.\n      tags:\n        - algorithms\n        - scm\n      operationId: receiveScmRepositoryEvent\n      security:\n        - GithubAuth: [ ]\n          GithubEventIdentification: [ ] ## We need BOTH headers for a valid request\n        - XGitlabEvent: [ ]\n        - XBitbucketKey: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/ScmWebhookRequestBody'\n      responses:\n        202:\n          $ref: '#/components/responses/ScmWebhookIgnoredResponse'\n        204:\n          description: Webhook received.\n        400:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{algorithmId}/versions:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n\n    post:\n      summary: Publish an algorithm's last successful build\n      tags:\n        - algorithms\n      operationId: publishAlgorithmById\n      requestBody:\n        $ref: '#/components/requestBodies/VersionRequest'\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200: # Successful\n          $ref: '#/components/responses/VersionResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{username}/{algoname}/versions:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n\n    get:\n      summary: Get algorithm versions\n      tags:\n        - algorithms\n      operationId: getAlgorithmVersions\n      parameters:\n        - $ref: '#/components/parameters/limitParam'\n        - $ref: '#/components/parameters/markerParam'\n        - $ref: '#/components/parameters/publishedParam'\n        - $ref: '#/components/parameters/callableParam'\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/PagedVersionsListResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            algo = client.algo(\"ALGO_OWNER/ALGO_NAME\")\n\n            # Query parameters may be passed as options.\n            # Prints the last ten versions of the algorithm.\n            print(algo.versions(limit=10))\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER/ALGO_NAME/versions \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n    post:\n      summary: Publish an algorithm's last successful build\n      tags:\n        - algorithms\n      operationId: publishAlgorithm\n      requestBody:\n        $ref: '#/components/requestBodies/VersionRequest'\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200: # Successful\n          $ref: '#/components/responses/VersionResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            algo = client.algo(\"ALGO_OWNER/ALGO_NAME\")\n\n            algo.publish(\n              settings = {\n                \"algorithm_callability\": \"private\"\n              },\n              version_info = {\n                \"release_notes\": \"A few bug fixes.\",\n                \"sample_input\": \"testing\",\n                \"version_type\": \"minor\"\n              }\n            )\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER/ALGO_NAME/versions \\\n              -X POST \\\n              -H 'Authorization: Simple STD_API_KEY' \\\n              -H 'Content-Type: application/json' \\\n              -d '{\n                \"settings\": {\n                  \"algorithm_callability\": \"private\"\n                },\n                \"version_info\": {\n                  \"version_type\": \"minor\",\n                  \"release_notes\": \"A few bug fixes.\",\n                  \"sample_input\": \"42\"\n                }\n              }'\n\n  /v1/algorithms/{algorithmId}/versions/{algohash}/registry:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n      - $ref: '#/components/parameters/algoHashParam'\n\n    get:\n      summary: Get the image push status of an algorithm\n      tags:\n        - algorithms\n      operationId: GetAlgorithmImagePushStatus\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmImagePushStatusResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Republish an algorithm\n      tags:\n        - algorithms\n      operationId: RepublishAlgorithm\n      requestBody:\n        $ref: '#/components/requestBodies/RegistryPublishAuthRequestBody'\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        204:\n          description: the operation completed successfully\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{username}/{algoname}/versions/{algohash}:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n      - $ref: '#/components/parameters/algoParam'\n      - $ref: '#/components/parameters/algoHashParam'\n\n    get:\n      summary: Get an algorithm by hash version\n      tags:\n        - algorithms\n      operationId: getAlgorithmHashVersion\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/VersionResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Querying information about a single version is not currently supported in our Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/algorithms/ALGO_OWNER/ALGO_NAME/versions/ALGO_VERSION_HASH \\\n              -H \"Authorization: Simple API_KEY\"\n\n  /v1/algorithms/{algorithmId}/secrets:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n\n    get:\n      summary: Get all secrets for an algorithm\n      tags:\n        - algorithms\n        - secrets\n      operationId: getAlgorithmSecrets\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmSecretListResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Create a secret for an algorithm\n      tags:\n        - algorithms\n        - secrets\n      operationId: createAlgorithmSecret\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/AlgorithmSecretCreateRequestBody'\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmSecretResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/algorithms/{algorithmId}/secrets/{secretId}:\n    parameters:\n      - $ref: '#/components/parameters/algoIdParam'\n      - $ref: '#/components/parameters/secretIdParam'\n\n    put:\n      summary: Edit a secret for an algorithm\n      tags:\n        - algorithms\n        - secrets\n      operationId: editAlgorithmSecret\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/AlgorithmSecretEditRequestBody'\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmSecretResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    delete:\n      summary: Delete a secret for an algorithm\n      tags:\n        - algorithms\n        - secrets\n      operationId: deleteAlgorithmSecret\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        204:\n          description: The secret was deleted successfully\n\n  /v1/config/favicon:\n    get:\n      summary: Get favicon for the Algorithmia instance\n      tags:\n        - style\n      operationId: getFavicon\n      responses:\n        200:\n          description: Get user-uploaded custom favicon\n        303:\n          description: Redirect to default Algorithmia favicon\n        500:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Update favicon for the Algorithmia instance\n      tags:\n        - style\n      operationId: updateFavicon\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        201:\n          description: Favicon was updated successfully\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    delete:\n      summary: Delete favicon for the Algorithmia instance\n      tags:\n        - style\n      operationId: deleteFavicon\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        204:\n          description: Favicon was deleted successfully\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/config/frontend:\n    get:\n      summary: List front-end config entries\n      tags:\n        - frontend\n      operationId: getFrontendConfigEntries\n      parameters:\n        - $ref: '#/components/parameters/limitParam'\n        - $ref: '#/components/parameters/markerParam'\n      responses:\n        200: # Successful with a paged list of frontend config entries returned\n          $ref: '#/components/responses/PagedResultList'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n\n  /v1/config/frontend/{keyname}:\n    parameters:\n      - $ref: '#/components/parameters/configKeyParam'\n\n    get:\n      summary: Get a front-end config entry\n      tags:\n        - frontend\n      operationId: getConfigEntry\n      responses:\n        200:\n          $ref: '#/components/responses/FrontendConfigurationEntry'\n        409:\n          $ref: '#/components/responses/Error'\n\n    delete:\n      summary: Delete a front-end config entry\n      tags:\n        - frontend\n      operationId: deleteConfigEntry\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        204:\n          description: The delete action was completed successfully.\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    put:\n      summary: Update or insert a front-end config entry\n      tags:\n        - frontend\n      operationId: updateConfigEntry\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/FrontendConfigurationEntry'\n      responses:\n        200: # Successful with user content returned\n          $ref: '#/components/responses/FrontendConfigurationEntry'\n        404:\n          $ref: '#/components/responses/Error'\n\n  /v1/config/logo:\n\n    get:\n      summary: Get logo for the Algorithmia instance\n      tags:\n        - style\n      operationId: getLogo\n      responses:\n        200:\n          description: Get user-uploaded custom logo\n        303:\n          description: Redirect to default Algorithmia logo\n        500:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Update logo for the Algorithmia instance\n      tags:\n        - style\n      operationId: updateLogo\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        201:\n          description: Logo was updated successfully\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    delete:\n      summary: Delete logo for the Algorithmia instance\n      tags:\n        - style\n      operationId: deleteLogo\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        204:\n          description: Logo was deleted successfully\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/connector/{connectorId}/{connectorPath}:\n    parameters:\n      - $ref: '#/components/parameters/connectorIdParameter'\n      - $ref: '#/components/parameters/connectorPathParameter'\n\n    get:\n      summary: Get file contents or directory listing\n      tags:\n        - connectors\n        - data\n      operationId: getFileOrDirectory\n      parameters:\n        - $ref: '#/components/parameters/aclQueryParameter'\n        - $ref: '#/components/parameters/markerParam'\n      responses:\n        200:\n          $ref: '#/components/responses/FileOrDirectoryResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      security:\n        - ApiKeyAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            ## Getting file contents\n\n            # Download file and get the file handle\n            exampleFile = client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME/example.png\").getFile()\n\n            # Get file's contents as a string\n            exampleText = client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME/example.txt\").getString()\n\n            # Get local file's contents as a string\n            exampleText = client.file(\"file://example.txt\").getString()\n\n            # Get file's contents as JSON\n            exampleJson = client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME/example.txt\").getJson()\n\n            # Get file's contents as a byte array\n            exampleBytes = client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME/example.png\").getBytes()\n\n            ## Getting directory contents\n\n            # Get directory's contents as a string\n            exampleText = client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME\").getString()\n\n            # Get directory's contents as JSON\n            exampleJson =  client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME\").getJson()\n\n            # Get directory's contents as a byte array\n            exampleBytes = client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME\").getBytes()\n        - lang: Shell\n          label: cURL\n          source: |\n            ## Getting file contents\n            curl https://api.CLUSTER_DOMAIN/v1/connector/data/COLLECTION_OWNER/COLLECTION_NAME/example.png \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n            ## Getting directory contents\n            curl https://api.CLUSTER_DOMAIN/v1/connector/data/COLLECTION_OWNER/COLLECTION_NAME \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n    delete:\n      summary: Delete a file or directory\n      tags:\n        - connectors\n        - data\n      operationId: deleteFileOrDirectory\n      parameters:\n        - $ref: '#/components/parameters/forceDeletionQueryParameter'\n      responses:\n        200:\n          $ref: '#/components/responses/FileDeletionResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      security:\n        - ApiKeyAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            exampleFile = client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME/example.png\")\n            exampleFile.delete()\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/connector/data/COLLECTION_OWNER/COLLECTION_NAME/example.txt \\\n              -X DELETE \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n    head:\n      summary: Check if a file exists\n      tags:\n        - connectors\n        - data\n      operationId: verifyFileExistence\n      responses:\n        200:\n          description: File exists.\n          headers:\n            X-Data-Type:\n              schema:\n                $ref: '#/components/schemas/FileType'\n            X-Error-Message:\n              description: Should any errors occur finding the file, they will be cited in this header.\n              schema:\n                type: string\n      security:\n        - ApiKeyAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            if client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME/example.png\").exists():\n              print(\"File exists!\")\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/connector/data/COLLECTION_OWNER/COLLECTION_NAME/example.png \\\n              -I \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n    patch:\n      summary: Update a directory ACL\n      description: Update the ACL for an Algorithmia-hosted data collection. Note that, at this time, this endpoint is not supported for any other connector beyond Algorithmia's own hosted data solution.\n      tags:\n        - connectors\n        - data\n      operationId: updateDirectoryAcl\n      requestBody:\n        $ref: '#/components/requestBodies/DirectoryAclRequestBody'\n      responses:\n        200:\n          description: ACL updated. Response body is empty.\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      security:\n        - ApiKeyAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n            from Algorithmia.acl import ReadAcl\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            example_collection = client.dir(\"data://COLLECTION_OWNER/COLLECTION_NAME\")\n\n            example_collection.update_permissions(ReadAcl.private)\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/connector/data/COLLECTION_OWNER/COLLECTION_NAME \\\n              -X PATCH \\\n              -H 'Authorization: Simple STD_API_KEY' \\\n              -H 'Content-Type: application/json' \\\n              -d '{\n                \"acl\": {\n                  \"read\": []\n                }\n              }'\n\n    post:\n      summary: Create a directory\n      tags:\n        - connectors\n        - data\n      operationId: createDirectory\n      requestBody:\n        $ref: '#/components/requestBodies/CreateDirectoryRequestBody'\n      responses:\n        200:\n          $ref: '#/components/responses/FileOrDirectoryCreationResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      security:\n        - ApiKeyAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n            from Algorithmia.acl import ReadAcl\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            example_collection = client.dir(\"data://COLLECTION_OWNER/COLLECTION_NAME\")\n\n            example_collection.create(ReadAcl.public)\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/connector/data/COLLECTION_OWNER \\\n              -X POST \\\n              -H 'Authorization: Simple STD_API_KEY' \\\n              -H 'Content-Type: application/json' \\\n              -d '{\n                \"name\": \"COLLECTION_NAME\",\n                \"acl\": {\n                  \"read\": [\n                    \"user://*\"\n                  ]\n                }\n              }'\n\n    put:\n      summary: Upload a file\n      tags:\n        - connectors\n        - data\n      operationId: uploadFile\n      requestBody:\n        $ref: '#/components/requestBodies/FileUploadRequestBody'\n      responses:\n        200:\n          $ref: '#/components/responses/FileOrDirectoryCreationResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      security:\n        - ApiKeyAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            import Algorithmia\n\n            client = Algorithmia.client(\"STD_API_KEY\", \"https://api.CLUSTER_DOMAIN\")\n\n            # Uploading a local file\n            client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME/example.png\").putFile(\"/my/local/path/example.png\")\n\n            # Uploading text\n            client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME/example.txt\").put(\"Hello world!\")\n\n            # Uploading a dict as JSON\n            client.file(\"data://COLLECTION_OWNER/COLLECTION_NAME/example.json\").putJson({\"hello\": \"world\"})\n        - lang: Shell\n          label: cURL\n          source: |\n            # Uploading text\n            curl https://api.CLUSTER_DOMAIN/v1/connector/data/COLLECTION_OWNER/COLLECTION_NAME/example.txt \\\n              -X PUT \\\n              -H 'Authorization: Simple STD_API_KEY' \\\n              -d 'Leader of the Autobots'\n\n            # Uploading a local file\n            curl https://api.CLUSTER_DOMAIN/v1/connector/data/COLLECTION_OWNER/COLLECTION_NAME/example.png \\\n              -X PUT \\\n              -H 'Authorization: Simple STD_API_KEY' \\\n              --data-binary @example.png\n\n  /v1/organizations:\n    get:\n      summary: List organizations\n      tags:\n        - organizations\n      operationId: getOrganizations\n      parameters:\n        - $ref: '#/components/parameters/limitParam'\n        - $ref: '#/components/parameters/markerParam'\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200: # Successful with a paged list of organizations returned\n          $ref: '#/components/responses/PagedResultList'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Listing organizations is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/organizations \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n    post:\n      summary: Create an organization\n      description: Creates an organization. The calling user is automatically added as a member of the org and is granted org admin permissions.\n      tags:\n        - organizations\n      operationId: createOrganization\n      security:\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/Organization'\n      responses:\n        200:\n          $ref: '#/components/responses/Organization'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        409:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Creating an organization is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/organizations \\\n              -X POST \\\n              -H 'Authorization: Simple ADMIN_API_KEY' \\\n              -H 'Content-Type: application/json' \\\n              -d '{\n                \"org_contact_name\": \"Example User\",\n                \"org_email\": \"support@example.com\",\n                \"org_label\": \"Example Organization\",\n                \"org_name\": \"ORG_NAME\",\n                \"org_url\": \"https://example.com\"\n              }'\n\n  /v1/organizations/{orgName}:\n    parameters:\n      - $ref: '#/components/parameters/orgnameParam'\n\n    get:\n      summary: Get an organization\n      tags:\n        - organizations\n      operationId: getOrganization\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/Organization'\n        409:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Getting an organization is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/organizations/ORG_NAME \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n    put:\n      summary: Update an organization\n      tags:\n        - organizations\n      operationId: edit\n      requestBody:\n        $ref: '#/components/requestBodies/Organization'\n      responses:\n        204:\n          description: The Organization was updated\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    delete:\n      summary: Delete an organization\n      tags:\n        - organizations\n      operationId: deleteOrganization\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        204: # Successful with no content returned. Also the response if the given org doesn't exist\n          description: The delete action was completed successfully\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Deleting an organization is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/organizations/ORG_NAME \\\n              -X DELETE \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n\n  /v1/organizations/{orgName}/keys:\n    parameters:\n      - $ref: '#/components/parameters/orgnameParam'\n\n    get:\n      summary: List API keys of organization members\n      tags:\n        - organizations\n      operationId: listKeys\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/ApiKeyListResponse'\n        404:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Create an AlgorithmKey for an organization\n      tags:\n        - organizations\n      operationId: createKeyForOrganization\n      security:\n        - CookieAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateOrgApiKey'\n      responses:\n        200:\n          $ref: '#/components/responses/CreateApiKeyResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n\n  /v1/organizations/{orgName}/members:\n    parameters:\n      - $ref: '#/components/parameters/orgnameParam'\n\n    get:\n      summary: List organization members\n      tags:\n        - organizations\n      operationId: listMembers\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200: # Successful with a paged list of organizations returned\n          $ref: '#/components/responses/PagedResultList'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Querying organization members is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/organizations/ORG_NAME/members \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n  /v1/organizations/{orgName}/members/{username}:\n    parameters:\n      - $ref: '#/components/parameters/orgnameParam'\n      - $ref: '#/components/parameters/usernameParam'\n\n    put:\n      summary: Add a user to an organization\n      tags:\n        - organizations\n      operationId: addOrganizationMember\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          description: The user was already a member of this organization\n        201:\n          description: User was succesfully added to the organization\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Adding organization members is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/organizations/ORG_NAME/members/ACCOUNT_NAME \\\n              -X PUT \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n    delete:\n      summary: Remove a user from an organization\n      tags:\n        - organizations\n      operationId: removeOrganizationMember\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        204:\n          description: User was successfully removed from the organization, was not a member of the organization, or did not exist\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Deleting organization members is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/organizations/ORG_NAME/members/ACCOUNT_NAME \\\n              -X DELETE \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n  /v1/organizations/{orgName}/members/{username}/keys:\n    parameters:\n      - $ref: '#/components/parameters/orgnameParam'\n      - $ref: '#/components/parameters/usernameParam'\n\n    post:\n      summary: Create an organization-owned API key for a user\n      tags:\n        - organizations\n      operationId: addOrganizationApiKey\n      security:\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateApiKey'\n      responses:\n        201:\n          $ref: '#/components/responses/CreateApiKeyResponse'\n        400:\n          $ref: '#/components/responses/Error'\n\n  /v1/organization/types:\n    get:\n      summary: List organization types\n      tags:\n        - organizations\n      operationId: getAllOrganizationTypes\n      responses:\n        200: # Successful with a list of organization types returned\n          $ref: '#/components/responses/OrganizationTypeListResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Create an organization type\n      tags:\n        - organizations\n      operationId: create\n      security:\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/OrganizationType'\n      responses:\n        200:\n          $ref: '#/components/responses/OrganizationType'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n\n  /v1/organization/types/{orgTypeName}:\n    parameters:\n      - $ref: '#/components/parameters/orgTypeNameParam'\n\n    delete:\n      summary: Remove an organization type\n      tags:\n        - organizations\n      operationId: deleteByName\n      responses:\n        204:\n          description: OrganizationTypeDeleted\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n\n  /v1/organizations/{orgName}/utility-algorithms:\n    parameters:\n      - $ref: '#/components/parameters/orgnameParam'\n\n    get:\n      summary: List utility algorithms\n      tags:\n        - algorithms\n        - organizations\n      operationId: getUtilityAlgorithms\n      responses:\n        200: # Successful with a paged list of algorithms returned\n          $ref: '#/components/responses/AlgorithmListResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/registries:\n    post:\n      security:\n        - AdminApiKeyAuth: []\n      tags:\n        - registries\n      summary: Add a new registry configuration\n      description: A registry configuration can be linked to algorithms.\n      operationId: createRegistry\n      responses:\n        200:\n          $ref: '#/components/responses/RegistryResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      requestBody:\n        $ref: '#/components/requestBodies/CreateRegistryRequest'\n    get:\n      summary: List registry configurations\n      description: A registry configuration can be linked to algorithms.\n      operationId: get\n      tags:\n        - registries\n      responses:\n        200: # Successful with list of registries returned\n          $ref: '#/components/responses/RegistryNoAuthListResponse'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/registries/{registryId}:\n    put:\n      security:\n        - AdminApiKeyAuth: []\n      tags:\n        - registries\n      summary: Update a registry configuration\n      description: A registry configuration can be linked to algorithms.\n      operationId: updateRegistry\n      parameters:\n        - $ref: '#/components/parameters/registryIdParam'\n      responses:\n        200:\n          $ref: '#/components/responses/RegistryResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateRegistryRequest'\n    delete:\n      security:\n        - AdminApiKeyAuth: []\n      tags:\n        - registries\n      summary: Delete a registry\n      description: A registry configuration can be linked to algorithms.\n      operationId: deleteRegistry\n      parameters:\n        - $ref: '#/components/parameters/registryIdParam'\n      responses:\n        200:\n          description: Registry deleted\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/scms:\n    get:\n      operationId: listScms\n      tags:\n        - scm\n      summary: List SCM configurations\n      description: List SCM (source code management) provider configurations for the Algorithmia instance\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/ScmListResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Listing SCMs is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/scms \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n  /v1/scms/{scmId}:\n    get:\n      summary: Get SCM configuration information\n      description: Retrieve information about a single SCM (source code management) configuration by its ID\n      tags:\n        - scm\n      operationId: getScm\n      parameters:\n        - $ref: '#/components/parameters/scmIdParam'\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/ScmResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Getting SCM configuration information is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/scms/SCM_CONFIG_ID \\\n              -H 'Authorization: Simple STD_API_KEY'\n\n  /v1/scms/{scmId}/oauth/start:\n    get:\n      summary: Initiate SCM configuration authorization\n      description: Applies only to SCM (source code management) providers that leverage an OAuth authorization flow. Allows a user to begin the OAuth authorization flow for a given SCM configuration, thereby allowing Algorithmia to access any necessary SCM provider resources, such as repositories, deploy keys, and webhooks, on their behalf.\n      tags:\n        - scm\n      operationId: initiateScmAuthorization\n      parameters:\n        - $ref: '#/components/parameters/scmIdParam'\n      security:\n        - CookieAuth: [ ]\n      responses:\n        303:\n          description: Indicates the URL the user should follow to begin the OAuth process.\n          headers:\n            Location:\n              schema:\n                type: string\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/scms/{scmId}/oauth/finish:\n\n    get:\n      summary: Complete SCM configuration authorization\n      description: Applies only to SCM (source code management) providers that leverage an OAuth authorization flow. Once a user has successfully authorized with the SCM provider's authorization server, said server will call this endpoint and supply the authorization code as a query parameter.\n      tags:\n        - scm\n      operationId: completeScmAuthorization\n      parameters:\n        - $ref: '#/components/parameters/oauthAuthorizationCodeParam'\n        - $ref: '#/components/parameters/scmIdParam'\n      security:\n        - CookieAuth: [ ]\n      responses:\n        200:\n          description: User connected\n        400:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/scms/{scmId}/oauth/status:\n\n    get:\n      summary: Get SCM configuration authorization status\n      description: Applies only to SCM (source code management) providers that leverage an OAuth authorization flow. If the calling user has completed the authorization flow for the SCM configuration in question, this endpoint describes the SCM username that represents the user, as well as any organizations they have access to. If the calling user has not completed the authorization flow, we return an `authorization_status` of `unauthorized`.\n      tags:\n        - scm\n      operationId: getScmStatus\n      parameters:\n        - $ref: '#/components/parameters/scmIdParam'\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/ScmUserOAuthStatusResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/scms/{scmId}/oauth/revoke:\n    post:\n      summary: Revoke SCM configuration authorization\n      description: Applies only to SCM (source code management) providers that leverage an OAuth authorization flow. If the calling user has completed the authorization flow for the SCM configuration in question, this endpoint prompts us to invalidate and discard said access token. After this has occurred, all algorithms created by the user will continue to function, but the user will no longer be able to create algorithms backed by the SCM configuration.\n      tags:\n        - scm\n      operationId: revokeScmAuthorization\n      parameters:\n        - $ref: '#/components/parameters/scmIdParam'\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        204:\n          description: Access token revoked.\n        401:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/scms/{scmId}/token/connect:\n\n    post:\n      summary: Create SCM authorized connection\n      tags:\n        - scm\n      operationId: addScmConnection\n      parameters:\n        - $ref: '#/components/parameters/scmIdParam'\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          description: Authorization successful.\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/scms/{scmId}/token/status:\n\n    get:\n      summary: Get SCM authorization status\n      tags:\n        - scm\n      operationId: scmTokenStatus\n      parameters:\n        - $ref: '#/components/parameters/scmIdParam'\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/ScmUserOAuthStatusResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/secret-provider:\n    get:\n      summary: List secret providers\n      tags:\n        - secrets\n      operationId: listSecretProviders\n      responses:\n        200:\n          $ref: '#/components/responses/ListProviderInfoResponse'\n        401:\n          $ref: '#/components/responses/Error'\n\n  /v1/users:\n    get:\n      summary: List users\n      tags:\n        - users\n      operationId: getUsers\n      parameters:\n        - $ref: '#/components/parameters/limitParam'\n        - $ref: '#/components/parameters/markerParam'\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/PagedResultList'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Listing users is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/users \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n    post:\n      summary: Create a user\n      tags:\n        - users\n      operationId: createUser\n      security:\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/User'\n      responses:\n        200:\n          $ref: '#/components/responses/User'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        409:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Creating a user is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/users \\\n              -X POST \\\n              -H 'Authorization: Simple ADMIN_API_KEY' \\\n              -H 'Content-Type: application/json' \\\n              -d '{\n                \"company_name\": \"Algorithmia\",\n                \"company_role\": \"Example User\",\n                \"email\": \"example@example.com\",\n                \"fullname\": \"Example User\",\n                \"username\": \"ACCOUNT_NAME\"\n              }'\n\n  /v1/users/{username}:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n\n    get:\n      summary: Get a user\n      tags:\n        - users\n      operationId: getUser\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/User'\n        409:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Retrieving a user is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/users/ACCOUNT_NAME \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n    put:\n      summary: Update a user\n      tags:\n        - users\n      operationId: updateUser\n      security:\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/User'\n      responses:\n        200:\n          $ref: '#/components/responses/User'\n        404:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Updating a user is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/users/ACCOUNT_NAME \\\n              -X PUT \\\n              -H 'Authorization: Simple ADMIN_API_KEY' \\\n              -H 'Content-Type: application/json' \\\n              -d '{\n                \"company_name\": \"Algorithmia\",\n                \"company_role\": \"Updated Role\",\n                \"email\": \"example@example.com\",\n                \"fullname\": \"Example User\",\n                \"username\": \"ACCOUNT_NAME\"\n              }'\n\n    delete:\n      summary: Delete a user\n      tags:\n        - users\n      operationId: deleteUser\n      security:\n        - AdminApiKeyAuth: [ ]\n      responses:\n        204:\n          description: The delete action was completed successfully.\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n      x-codeSamples:\n        - lang: Python\n          label: Python\n          source: |\n            # Deleting a user is not currently supported by the Python client library.\n        - lang: Shell\n          label: cURL\n          source: |\n            curl https://api.CLUSTER_DOMAIN/v1/users/ACCOUNT_NAME \\\n              -X DELETE \\\n              -H 'Authorization: Simple ADMIN_API_KEY'\n\n  /v1/users/{username}/algorithms:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n    get:\n      summary: List algorithms for a user or organization\n      tags:\n        - algorithms\n      operationId: listAlgorithmsForUser\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmListResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        409:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/users/{username}/connectors:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n\n    post:\n      summary: Create a connector\n      description: Creates a data connector for a user.\n      tags:\n        - connectors\n      operationId: createConnectorForUserById\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/ConnectorCreateRequestBody'\n      responses:\n        200:\n          $ref: '#/components/responses/ConnectorResponse'\n        400:\n          $ref: '#/components/responses/Error'\n        409:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/users/{userId}/errors:\n    parameters:\n      - $ref: '#/components/parameters/userIdParam'\n\n    get:\n      summary: Get algorithm errors for a user\n      tags:\n        - algorithms\n      operationId: getAlgorithmErrorsByUserId\n      security:\n        - CookieAuth: [ ]\n        - ApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/AlgorithmErrorListResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/users/{userId}/event-listeners:\n    parameters:\n      - $ref: '#/components/parameters/userIdParam'\n\n    get:\n      summary: List event listeners configured for a user\n      tags:\n        - eventlisteners\n      operationId: getEventListenersForUserById\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/PagedResultList'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    post:\n      summary: Create an event listener for a user\n      tags:\n        - eventlisteners\n      operationId: postEventListenersForUserById\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/EventListenerBody'\n      responses:\n        200:\n          $ref: '#/components/responses/EventListener'\n        400:\n          $ref: '#/components/responses/Error'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/users/{userId}/event-listeners/{eventListenerId}:\n    parameters:\n      - $ref: '#/components/parameters/userIdParam'\n      - $ref: '#/components/parameters/eventListenerIdParam'\n\n    get:\n      summary: Get an event listener configured for a user\n      tags:\n        - eventlisteners\n      operationId: getEventListenerByIdForUserById\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/EventListener'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    put:\n      summary: Update an event listener configured for a user\n      tags:\n        - eventlisteners\n      operationId: updateEventListenerForUserById\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/EventListener'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        404:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n    delete:\n      summary: Delete an event listener configured for a user\n      tags:\n        - eventlisteners\n      operationId: deleteEventListenerForUserById\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200:\n          description: The delete action was completed successfully.\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\n        500:\n          $ref: '#/components/responses/Error'\n\n  /v1/users/{username}/keys:\n    parameters:\n      - $ref: '#/components/parameters/usernameParam'\n    get:\n      summary: List API keys for a user\n      tags:\n        - auth\n      operationId: getKeysForUser\n      security:\n        - CookieAuth: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/ApiKeyListResponse'\n    post:\n      summary: Create an API key for a user\n      tags:\n        - auth\n      operationId: createKeyForUser\n      security:\n        - CookieAuth: [ ]\n      requestBody:\n        $ref: '#/components/requestBodies/CreateApiKey'\n      responses:\n        200:\n          $ref: '#/components/responses/CreateApiKeyResponse'\n        401:\n          $ref: '#/components/responses/Error'\n\n  /v1/users/{userId}/notifications:\n    get:\n      summary: Get notifications for a user\n      tags:\n        - notifications\n      operationId: getUserNotifications\n      parameters:\n        - in: query\n          name: event_types\n          description: The notification types wanted\n          schema:\n            type: string\n            format: comma-seperated #EX: \"algorithm-creation,algorithm-release\"\n          required: true\n        - $ref: '#/components/parameters/userIdParam'\n        - in: query\n          name: limit\n          description: Limits the number of results 1-100\n          schema:\n            type: string\n          required: false\n        - in: query\n          name: since\n          description: Limits the results to after the date\n          schema:\n            type: string\n            format: date-time\n          required: false\n      security:\n        - CookieAuth: [ ]\n        - AdminApiKeyAuth: [ ]\n      responses:\n        200: # Successful with a paged list of organizations returned\n          $ref: '#/components/responses/NotificationContextResponse'\n        401:\n          $ref: '#/components/responses/Error'\n        403:\n          $ref: '#/components/responses/Error'\ncomponents:\n\n  schemas:\n    UtilityAlgorithm:\n      description: Result of getting an algorithm from the db for utilities\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        algoname:\n          type: string\n        username:\n          type: string\n\n    AlgorithmCallability:\n      type: string\n      enum:\n        - public\n        - private\n\n    AlgorithmSecretCreateRequest:\n      type: object\n      properties:\n        short_name:\n          type: string\n        description:\n          type: string\n        owner_type:\n          type: string\n        owner_id:\n          type: string\n          format: uuid\n        secret_key:\n          type: string\n        secret_value:\n          type: string\n        provider_id:\n          type: string\n      required:\n        - id\n        - short_name\n        - description\n        - owner_type\n        - owner_id\n        - secretKey\n\n    AlgorithmSecretEditRequest:\n      type: object\n      properties:\n        short_name:\n          type: string\n        description:\n          type: string\n        secret_key:\n          type: string\n        secret_value:\n          type: string\n      required:\n        - id\n        - short_name\n        - description\n        - secretKey\n\n    AlgorithmSecretList:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlgorithmSecretResult'\n\n    AlgorithmSecretResult:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        short_name:\n          type: string\n        description:\n          type: string\n        owner_type:\n          type: string\n        owner_id:\n          type: string\n          format: uuid\n        default_secret_value_id:\n          type: string\n          format: uuid\n        provider_id:\n          type: string\n          format: uuid\n\n    AlgorithmAsynchronousInvocationResult:\n      description: Result of calling a specific algorithm as an asynchronous operation, e.g. by passing the `output` query parameter set to `void`.\n      type: object\n      properties:\n        async:\n          type: boolean\n        request_id:\n          type: string\n      required:\n        - async\n        - request_id\n\n    AlgorithmErrorEntry:\n      description: A single algorithm error response\n      type: object\n      properties:\n        logs:\n          type: string\n          readOnly: true\n\n    AlgorithmHostUsername:\n      type: object\n      properties:\n        algorithm_id:\n          type: string\n        functional_id:\n          type: string\n      required:\n        - algorithm_id\n        - functional_id\n\n    AlgorithmHostUsernameUpdates:\n      type: object\n      properties:\n        updates:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlgorithmHostUsername'\n\n    AlgorithmInvocationResult:\n      oneOf:\n        - $ref: '#/components/schemas/AlgorithmAsynchronousInvocationResult'\n        - $ref: '#/components/schemas/AlgorithmSynchronousInvocationResult'\n\n    AlgorithmSynchronousInvocationResultOneOf:\n      description: Wrapper object AlgorithmSynchronousInvocationResult\n      oneOf:\n        - type: string\n        - type: object\n    AlgorithmSynchronousInvocationResult:\n      description: Result of calling a specific algorithm as a synchronous operation.\n      type: object\n      properties:\n        error:\n          type: object\n          properties:\n            message:\n              type: string\n            stacktrace:\n              type: string\n        metadata:\n          type: object\n          properties:\n            content_type:\n              type: string\n              enum:\n                - binary\n                - json\n                - text\n                - void\n            duration:\n              type: number\n            stdout:\n              type: string\n          required:\n            - duration\n        result:\n          $ref: '#/components/schemas/AlgorithmSynchronousInvocationResultOneOf'\n\n    ApiKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ApiKey'\n\n    ApiKey:\n      type: object\n      properties:\n        username:\n          type: string\n        key_label:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        api_key_mask:\n          type: string\n        api_key:\n          type: string\n        key_type:\n          $ref: '#/components/schemas/ApiKeyType'\n        permissions:\n          $ref: '#/components/schemas/AuthPermissions'\n        owner_name:\n          type: string\n      required:\n        - username\n        - key_label\n        - created_at\n        - api_key_mask\n        - api_key\n        - key_type\n\n    ApiKeyCreation:\n      type: object\n      properties:\n        key_label:\n          type: string\n        key_type:\n          $ref: '#/components/schemas/ApiKeyType'\n        permissions: # Required for AlgorithmKeys\n          $ref: '#/components/schemas/AuthPermissions'\n      required:\n        - key_type\n\n    ApiKeyType:\n      type: string\n      enum:\n        - ManagementKey # This will deprecated and replaced by PlatformAdminKey\n        - PlatformAdminKey\n        - AlgorithmKey\n\n    AuthPermissions:\n      type: object\n      properties:\n        allow_data:\n          type: boolean\n        allow_data_write:\n          type: boolean\n        allow_algo:\n          type: boolean\n        allow_web_algo:\n          type: boolean\n        referer_host:\n          type: string\n        allow_algo_management:\n          type: boolean\n        algo_acl:\n          type: array\n          items:\n            type: string\n      required:\n        - allow_data\n        - allow_data_write\n        - allow_algo\n        - allow_web_algo\n        - algo_acl\n\n    Build:\n      type: object\n      required: [ 'build_id', 'status','commit_sha','started_at' ]\n      properties:\n        status:\n          type: string\n          enum:\n            - in-progress\n            - succeeded\n            - failed\n          readOnly: true\n        build_id:\n          type: string\n          readOnly: true\n        commit_sha:\n          type: string\n          readOnly: true\n        started_at:\n          type: string\n          format: date-time\n          readOnly: true\n        finished_at:\n          type: string\n          format: date-time\n          readOnly: true\n        resource_type:\n          type: string\n          readOnly: true\n        version_info:\n          $ref: '#/components/schemas/BuildVersionInfo'\n        registry_status:\n          $ref: '#/components/schemas/ImagePushStatus'\n\n    BuildLogs:\n      type: object\n      properties:\n        logs:\n          type: string\n          readOnly: true\n\n    BuildVersionInfo:\n      type: object\n      required: [ 'semantic_version' ]\n      properties:\n        semantic_version:\n          type: string\n          readOnly: true\n\n    Commit:\n      description: Individual commit to a repository\n      type: object\n      required: [ 'id', 'short_message', 'message', 'author' ]\n      properties:\n        id:\n          type: string\n        short_message:\n          type: string\n        message:\n          type: string\n        author:\n          type: string\n\n    Compilation:\n      type: object\n      required: [ 'successful' ]\n      properties:\n        successful:\n          type: boolean\n          readOnly: true\n        output:\n          type: string\n          readOnly: true\n\n    ConnectionConfiguration:\n      type: object\n      required: [ 'broker_url','topic' ]\n      properties:\n        broker_url:\n          type: string\n        topic:\n          type: string\n        broker_username:\n          type: string\n        broker_password:\n          type: string\n        ca_certificate:\n          type: string\n        sasl_mechanism:\n          type: string\n        id:\n          type: string\n          format: uuid\n\n    Connector:\n      type: object\n      required: [ 'username', 'protocol', 'cred_type', 'cred_data' ]\n      properties:\n        username:\n          type: string\n        label:\n          type: string\n        protocol:\n          type: string\n          enum:\n            - s3\n            - dropbox\n            - azureblob\n            - gs\n        is_default:\n          type: boolean\n        cred_data:\n          type: string\n          enum:\n            - IAMConnectorCredential\n            - SASConnectorCredential\n            - ServiceAccountConnectorCredential\n            - OAuthConnectorCredential\n        cred_type:\n          type: string\n          enum:\n            - iam\n            - oauth\n            - sas\n            - serviceaccount\n        path:\n          type: string\n          default: '*'\n        writeable:\n          type: boolean\n          default: false\n\n    IAMConnectorCredential:\n      type: object\n      required: [ 'access_key_id', 'secret_access_key' ]\n      properties:\n        access_key_id:\n          type: string\n        secret_access_key:\n          type: string\n\n    ImagePushStatus:\n      type: object\n      required: [ 'status', 'updated_at' ]\n      properties:\n        status:\n          type: string\n        updated_at:\n          type: string\n          format: date-time\n        status_message:\n          type: string\n        registry_id:\n          type: string\n\n    RegistryPublishAuth:\n      type: object\n      required: [ 'registry_id' ]\n      properties:\n        registry_username:\n          type: string\n        registry_password:\n          type: string\n        registry_id:\n          type: string\n\n    SASConnectorCredential:\n      type: object\n      required: [ 'storage_uri', 'sas_token', 'container_name' ]\n      properties:\n        storage_uri:\n          type: string\n        sas_token:\n          type: string\n        container_name:\n          type: string\n\n    ServiceAccountConnectorCredential:\n      type: object\n      required: [ 'email', 'private_key_id', 'private_key' ]\n      properties:\n        email:\n          type: string\n        private_key_id:\n          type: string\n        private_key:\n          type: string\n\n    OAuthConnectorCredential:\n      type: object\n      required: [ 'access_token' ]\n      properties:\n        access_token:\n          type: string\n        refresh_token:\n          type: string\n\n    BuildRequest:\n      type: object\n      properties:\n        sshPrivateKey:\n          type: string\n        commitSha:\n          type: string\n        registry_push_credentials:\n          $ref: '#/components/schemas/RegistryPublishAuth'\n\n    ConnectorResponse:\n      type: object\n      properties:\n        connector_id:\n          type: string\n        username:\n          type: string\n        label:\n          type: string\n        protocol:\n          type: string\n          enum:\n            - s3\n            - dropbox\n            - azureblob\n            - gs\n        is_default:\n          type: boolean\n        permissions:\n          type: array\n          items:\n            type: string\n\n    SCMSUserPassOrSecretToken:\n      description: One of object for SCM credentials for create request\n      oneOf:\n        - $ref: '#/components/schemas/SCMSUserPass'\n        - $ref: '#/components/schemas/SCMSSecretToken'\n\n    CreateRequest:\n      type: object\n      required: [ 'name', 'details','settings' ]\n      properties:\n        name:\n          type: string\n        details:\n          $ref: '#/components/schemas/Details'\n        settings:\n          $ref: '#/components/schemas/SettingsMandatory'\n        source:\n          $ref: '#/components/schemas/SourceCreate'\n        scmsCredentials:\n          $ref: '#/components/schemas/SCMSUserPassOrSecretToken'\n        version_info:\n          type: object\n          properties:\n            sample_input:\n              type: string\n\n    Details:\n      type: object\n      properties:\n        summary:\n          type: string\n        label:\n          type: string\n        tagline:\n          type: string\n      required:\n        - label\n\n    Environment:\n      type: string\n      enum:\n        - cpu\n        - gpu\n\n    EventListener:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true # shouldn't be included in POST request\n        sourceType:\n          $ref: \"#/components/schemas/EventListenerSourceType\"\n        sourceURI:\n          maxLength: 255\n          type: string\n        algoName:\n          maxLength: 255\n          type: string\n        algoOwner:\n          maxLength: 255\n          type: string\n        algoVersion:\n          maxLength: 255\n          type: string\n        algoTimeoutSeconds:\n          type: integer\n          default: 420\n        listenerOwner:\n          maxLength: 255\n          type: string\n          readOnly: true # can't change listener owner once set\n        credentials:\n          maxLength: 255\n          type: string\n      required: [ 'sourceType', 'sourceURI', 'algoName', 'algoOwner', 'algoVersion', \"credentials\" ]\n\n    EventListenerRequest:\n      required:\n        - algoName\n        - algoOwner\n        - credentials\n        - sourceType\n        - sourceURI\n      type: object\n      properties:\n        algoName:\n          maxLength: 255\n          type: string\n        algoOwner:\n          maxLength: 255\n          type: string\n        algoVersion:\n          maxLength: 255\n          type: string\n        algoTimeoutSeconds:\n          type: integer\n          default: 420\n        credentials:\n          maxLength: 255\n          type: string\n        sourceType:\n          $ref: \"#/components/schemas/EventListenerSourceType\"\n        sourceURI:\n          maxLength: 255\n          type: string\n\n    EventListenerSourceType:\n      type: string\n      enum:\n        - AmazonSQS\n        - AzureSB\n\n    FeatureFlagToggle:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n      required:\n        - enabled\n\n    FullUsageRow:\n      type: object\n      properties:\n        algorithm_called:\n          type: string\n        caller:\n          type: string\n        algorithm_version:\n          type: string\n        total_calls:\n          type: string\n        algorithm_owner:\n          type: string\n        total_errors:\n          type: integer\n          format: int64\n        total_error_duration:\n          type: number\n          format: double\n        total_duration:\n          type: number\n          format: double\n        machine_type:\n          type: string\n          enum: [ cpu, gpu ]\n      required:\n        - algorithm_called\n        - caller\n        - algorithm_version\n        - total_calls\n        - algorithm_owner\n        - total_errors\n        - total_error_duration\n        - total_duration\n        - machine_type\n\n    UserUsageRow:\n      type: object\n      properties:\n        caller:\n          type: string\n        total_calls:\n          type: string\n        total_errors:\n          type: integer\n          format: int64\n        total_error_duration:\n          type: number\n          format: double\n        total_duration:\n          type: number\n          format: double\n      required:\n        - caller\n        - total_calls\n        - total_errors\n        - total_error_duration\n        - total_duration\n\n    AlgorithmUsageRow:\n      type: object\n      properties:\n        algorithm_called:\n          type: string\n        algorithm_version:\n          type: string\n        total_calls:\n          type: string\n        algorithm_owner:\n          type: string\n        total_errors:\n          type: integer\n          format: int64\n        total_error_duration:\n          type: number\n          format: double\n        total_duration:\n          type: number\n          format: double\n        machine_type:\n          type: string\n          enum: [ cpu, gpu ]\n      required:\n        - algorithm_called\n        - algorithm_version\n        - total_calls\n        - algorithm_owner\n        - total_errors\n        - total_error_duration\n        - total_duration\n        - machine_type\n\n    LegacyAlgorithmUsageRow:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        algoname:\n          type: string\n        language:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        lastCompiledAt:\n          type: string\n          format: date-time\n\n    Directory:\n      type: object\n      properties:\n        acl:\n          $ref: '#/components/schemas/DirectoryAcl'\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/File'\n        folders:\n          type: array\n          items:\n            $ref: '#/components/schemas/Folder'\n        marker:\n          type: string\n\n    DirectoryAcl:\n      description: Specifies who may access the data in this directory. `user://*` signifies all users may read from this directory, whereas `algo://.my/*` signifies only the directory owner's algorithms may access the data (no matter the caller of the algorithm). An empty array signifies only the directory owner themselves may access the data.\n      properties:\n        read:\n          type: array\n          items:\n            type: string\n            enum:\n              - user://*\n              - algo://.my/*\n      type: object\n\n    CreateDirectoryRequest:\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/ResourceName'\n        acl:\n          $ref: '#/components/schemas/DirectoryAcl'\n      required:\n        - name\n\n    DirectoryAclUpdateRequest:\n      type: object\n      properties:\n        acl:\n          $ref: '#/components/schemas/DirectoryAcl'\n      required:\n        - acl\n\n    File:\n      type: object\n      properties:\n        filename:\n          type: string\n        last_modified:\n          type: string\n          format: date-time\n        size:\n          type: number\n      required:\n        - filename\n        - last_modified\n        - size\n\n    FileType:\n      description: Describes whether a returned entity contains a file or a directory.\n      enum:\n        - file\n        - directory\n      type: string\n\n    Folder:\n      type: object\n      properties:\n        name:\n          type: string\n      required:\n        - name\n\n    FullUsageResult:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/FullUsageRow'\n        next_marker:\n          type: string\n      required:\n        - results\n\n    UserUsageResult:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserUsageRow'\n        next_marker:\n          type: string\n      required:\n        - results\n\n    AlgorithmUsageResult:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlgorithmUsageRow'\n        next_marker:\n          type: string\n      required:\n        - results\n\n    LegacyAlgorithmUsageResult:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/LegacyAlgorithmUsageRow'\n      required:\n        - results\n\n    AlgorithmListResult:\n      type: array\n      items:\n        $ref: '#/components/schemas/UtilityAlgorithm'\n\n    OrganizationTypeListResult:\n      type: array\n      items:\n        $ref: '#/components/schemas/OrganizationType'\n\n    Error:\n      type: object\n      properties:\n        id:\n          type: string\n        code:\n          type: integer\n          enum:\n            - 1000 # AlgorithmNotFound\n            - 1001 # AlgorithmNameDoesNotExist\n            - 1002 # AlgorithmNameHasBeenTaken\n            - 1003 # PackageSetNotFound\n            - 1004 # PackageSetBuildNotFound\n            - 1005 # PackageNotFound\n            - 1006 # ForbiddenPackageSetUpdate\n            - 1007 # VersionAlreadyPublished\n            - 1008 # ScmFailedToCreateRepository\n            - 1009 # AlgorithmIdDoesNotExist\n            - 1010 # AlgorithmBuildNotFound\n            - 1011 # AlgorithmBuildLogsNotFound\n            - 1012 # VersionTagAlreadyExists\n            - 1013 # VersionTagDoesntExist\n            - 1014 # VersionDoesNotExists\n            - 1015 # ReservedTagName\n            - 1016 # TagIsAVersion\n            - 1017 # AlgorithmVisibilityNotFound\n            - 2001 # NotAuthorized\n            - 2002 # NotAuthenticated\n            - 2011 # PackageNameAlreadyExists\n            - 2012 # InvalidBuildStatus\n            - 2013 # MalformedJson\n            - 2014 # InvalidBuildImage\n            - 2015 # InvalidRequest\n            - 2016 # MalformedPackageSetContentsJson\n            - 2017 # InvalidPackageSetStatus\n            - 2018 # BadScmConnectionUpdateRequest\n            - 3000 # UserNotFound\n            - 3001 # MalformedUserJson\n            - 3003 # UsernameHasBeenTaken\n            - 3004 # EmailAddressHasBeenTaken\n            - 3005 # MissingRequiredFields\n            - 3007 # InconsistentUsername\n            - 3008 # UpdatingEmailNotAllowed\n            - 3009 # InvalidSignUpForm\n            - 3010 # MalformedPackageCreateJson\n            - 3100 # OrganizationNotFound\n            - 3101 # OrganizationAlreadyExists\n            - 3102 # OrganizationRequiresOwner\n            - 3103 # MalformedOrganizationJson\n            - 3104 # CanNotReserveUserForOrganization\n            - 3105 # FaviconSizeLimitExceeded\n            - 3106 # InvalidFileUpload\n            - 3107 # LogoSizeLimitExceeded\n            - 3108 # OrganizationTypeNotFound\n            - 3109 # OrganizationTypeAlreadyExists\n            - 3110 # UnableToDeleteAuthSimple\n            - 3300 # OrganizationHostInformationNotFound\n            - 3301 # OrganizationHostInformationAlreadyExists\n            - 3302 # MalformedOrganizationHostInformationJson\n            - 4001 # UnknownAlgorithmLanguage\n            - 4002 # UnsupportedAlgorithmLanguage\n            - 4003 # MalformedPackageSetJson\n            - 4004 # UnsupportedMachineType\n            - 4005 # PackageSetNameHasBeenTaken\n            - 4006 # PackageSetNameDoesNotExist\n            - 4007 # DuplicatePackageSetContents\n            - 4008 # ScmConnectionNotFound\n            - 4009 # ScmConfigurationNotFound\n            - 4020 # ScmBadCreatePayloadError\n            - 4021 # ScmBadUpdatePayloadError\n            - 4040 # ScmEnabledError\n            - 4041 # ScmDefaultError\n            - 4042 # ScmDisabledError\n            - 4043 # ScmInUseError\n            - 4044 # ScmConflictError\n            - 4045 # ScmDisallowedOperationError\n            - 4050 # ScmOAuthUnsupportedError\n            - 4051 # ScmOAuthMissingParamsError\n            - 4052 # ScmOAuthInvalidAuthorizationCodeError\n            - 4070 # ScmWebhookPayloadMalformedError\n            - 4080 # ScmNotAuthorizedError\n            - 4081 # ScmNotAuthenticatedError\n            - 4082 # ScmBadRequestError\n            - 4083 # ScmUnknownError\n            - 4084 # ScmConnectionError\n            - 5001 # InternalServerError\n            - 5002 # InvalidMarker\n            - 5003 # InvalidLimit\n            - 5004 # ConfigEntryNotFound\n            - 6001 # InputValidationError\n            - 8000 # MalformedAlgorithmSecretRequestJson\n            - 8001 # SecretMetadataConstraintViolation\n            - 8002 # DefaultSecretProviderNotFound\n            - 8003 # CreateSecretNotSupported\n            - 8004 # CreateRequiresSecretValue\n            - 8005 # CannotModifyInternalSecretProvider\n            - 8006 # SecretProviderNotFound\n            - 8007 # EditSecretFailed\n            - 8008 # SecretNotFound\n            - 8009 # SecretProviderFailed\n            - 8010 # UnableToDeleteSecret\n            - 8011 # UnableToSetDefaultSecretProvider\n            - 8012 # SecretProviderDisabled\n            - 8013 # UnableToDeleteDefaultSecretProvider\n            - 8014 # EditSecretNotSupported\n            - 8060 # MissingQueryParameterEventTypes\n            - 8061 # QueryParameterError\n        message:\n          type: string\n      required:\n        - code\n        - message\n\n    FeatureFlagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/FeatureFlag'\n\n    FeatureFlag:\n      type: object\n      properties:\n        name:\n          type: string\n        enabled:\n          type: boolean\n\n    FrontendConfigurationEntry:\n      required:\n        - keyname\n        - value\n        - resource_type\n      type: object\n      properties:\n        keyname:\n          type: string\n        value:\n          type: string\n        created_at:\n          type: number\n          readOnly: true\n        updated_at:\n          type: number\n          readOnly: true\n        resource_type:\n          type: string\n          readOnly: true\n\n    HashResponse:\n      type: object\n      properties:\n        id:\n          description: An immutable UUID which can be used to execute an algorithm.\n          type: string\n          minLength: 36\n          maxLength: 36\n        name:\n          type: string\n        details:\n          $ref: '#/components/schemas/Details'\n        settings:\n          $ref: '#/components/schemas/Settings'\n        source:\n          $ref: '#/components/schemas/Source'\n        self_link:\n          type: string\n\n    NewInviteCode:\n      type: object\n      required: [ 'inviteCode' ]\n      properties:\n        inviteCode:\n          type: string\n        signupCredits:\n          type: integer\n        comments:\n          type: string\n        expiresAt:\n          type: string\n\n    InviteCode:\n      type: object\n      properties:\n        inviteCode:\n          type: string\n        signupCredits:\n          type: integer\n        comments:\n          type: string\n        expiresAt:\n          type: string\n        createdAt:\n          type: string\n        createdBy:\n          type: string\n\n    ConnectionConfigurationRequest:\n      oneOf:\n        - $ref: '#/components/schemas/KafkaSaslSslConnectionConfiguration'\n        - $ref: '#/components/schemas/KafkaPlaintextUnauthenticatedConnectionConfiguration'\n\n    KafkaPlaintextUnauthenticatedConnectionConfiguration:\n      type: object\n      required: [ 'connection_type','broker_url','topic' ]\n      properties:\n        connection_type:\n          type: string\n          enum:\n            - kafka_sasl_ssl\n            - kafka_unauthenticated_plaintext\n        broker_url:\n          type: string\n        topic:\n          type: string\n        id:\n          type: string\n          format: uuid\n\n    KafkaSaslSslConnectionConfiguration:\n      type: object\n      required: [ 'connection_type','broker_url','topic','broker_username','broker_password' ]\n      properties:\n        connection_type:\n          type: string\n          enum:\n            - kafka_sasl_ssl\n            - kafka_unauthenticated_plaintext\n        broker_url:\n          type: string\n        topic:\n          type: string\n        broker_username:\n          type: string\n        broker_password:\n          type: string\n        ca_certificate:\n          type: string\n        sasl_mechanism:\n          type: string\n          enum:\n            - SCRAM-SHA-256\n            - SCRAM-SHA-512\n            - PLAIN\n        id:\n          type: string\n          format: uuid\n\n    License:\n      type: string\n      enum:\n        - apl\n        - apache2\n        - gpl3\n        - mit\n\n    Language:\n      type: string\n      enum:\n        - java\n        - javascript\n        - python2-langpack\n        - python3-1\n        - r\n        - ruby\n        - rust\n        - scala\n\n    NetworkAccess:\n      type: string\n      enum:\n        - isolated\n        - full\n\n    Notification:\n      type: object\n      required:\n        - notification_id\n        - notification_type\n        - created_at\n        - notification_context\n      properties:\n        notification_id:\n          type: string\n          format: uuid\n          maxLength: 100\n        notification_type:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        read_at:\n          type: string\n          format: date-time\n        notification_context:\n          $ref: '#/components/schemas/NotificationContext'\n\n    NotificationContext:\n      type: object\n      required:\n        - algorithm_id\n        - username\n        - algoname\n      properties:\n        algorithm_id:\n          type: string\n          format: uuid\n          maxLength: 100\n        username:\n          type: string\n        algoname:\n          type: string\n        semantic_version:\n          type: integer\n\n    Organization:\n      type: object\n      required:\n        - org_name\n        - org_label\n        - org_contact_name\n        - org_email\n        - type_id\n      properties:\n        org_name:\n          type: string\n          maxLength: 30\n        org_label:\n          type: string\n          maxLength: 100\n        org_contact_name:\n          type: string\n          maxLength: 100\n          pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'\n        org_email:\n          type: string\n          maxLength: 100\n          pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+[.][a-zA-Z]{2,6}$'\n        org_url:\n          type: string\n          maxLength: 100\n        type_id:\n          type: string\n          format: uuid\n          maxLength: 100\n        stripe_customer_id:\n          type: string\n        external_admin_group:\n          type: array\n          items:\n            type: string\n        external_member_group:\n          type: array\n          items:\n            type: string\n        external_executor_group:\n          type: array\n          items:\n            type: string\n        owner_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n        self_link:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n          readOnly: true\n\n    OrganizationApiKeyCreation:\n      type: object\n      required:\n        - permissions\n        - key_label\n      properties:\n        key_label:\n          type: string\n        permissions:\n          $ref: '#/components/schemas/AuthPermissions'\n\n    OrganizationHostInformation:\n      type: object\n      required:\n        - org_id\n        - host_username\n        - host_user_id\n      properties:\n        id:\n          type: string\n          format: uuid\n        org_id:\n          type: string\n          format: uuid\n        host_username:\n          type: string\n        host_user_id:\n          type: string\n\n    CreateOrganizationHostInformation:\n      type: object\n      required:\n        - host_username\n        - host_user_id\n      properties:\n        host_username:\n          type: string\n        host_user_id:\n          type: string\n\n    OrganizationType:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n\n    OrganizationMember:\n      type: object\n      required:\n        - username\n        - role\n        - user_link\n        - resource_type\n      properties:\n        username:\n          type: string\n          maxLength: 30\n          pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'\n        role:\n          type: string\n          enum: [ owner,member,invited,unknown ]\n        user_link:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n          readOnly: true\n\n    PagedBuildsList:\n      description: Paged Algorthm Builds List\n      type: object\n      properties:\n        next_link:\n          type: string\n        marker:\n          type: string\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Build'\n\n    PagedResultListObjects:\n      description: Objects that can be paged over\n      oneOf:\n        - $ref: '#/components/schemas/EventListener'\n        - $ref: '#/components/schemas/FrontendConfigurationEntry'\n        - $ref: '#/components/schemas/Organization'\n        - $ref: '#/components/schemas/OrganizationMember'\n        - $ref: '#/components/schemas/User'\n\n    PagedResultList:\n      type: object\n      properties:\n        next_link:\n          type: string\n        marker:\n          type: string\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/PagedResultListObjects'\n            discriminator:\n              propertyName: resource_type\n              mapping:\n                eventListener: '#/components/schemas/EventListener'\n                frontendConfigurationEntry: '#/components/schemas/FrontendConfigurationEntry'\n                organization: '#/components/schemas/Organization'\n                organizationMember: '#/components/schemas/OrganizationMember'\n                user: '#/components/schemas/User'\n\n    PagedVersionsList:\n      description: Paged Algorthm Versions List Response\n      type: object\n      properties:\n        next_link:\n          type: string\n        marker:\n          type: string\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/VersionResponse'\n\n    ProviderInfo:\n      description: A single ProviderInfo object\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        description:\n          type: string\n        moduleName:\n          type: string\n        factoryClassName:\n          type: string\n        interfaceVersion:\n          type: string\n        isEnabled:\n          type: boolean\n        isDefault:\n          type: boolean\n        created:\n          type: string\n          format: date-time\n        modified:\n          type: string\n          format: date-time\n      required:\n        - name\n        - description\n        - moduleName\n        - factoryClassName\n        - interfaceVersion\n        - isEnabled\n        - isDefault\n    RegistryCreate:\n      description: Details for creating a registry\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 32\n        registry_url:\n          type: string\n          maxLength: 128\n        registry_username:\n          type: string\n          maxLength: 64\n        registry_password:\n          type: string\n          maxLength: 64\n      required:\n        - registry_url\n    RegistryUpdate:\n      description: Details for updating a registry\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 32\n        registry_url:\n          type: string\n          maxLength: 128\n        registry_username:\n          type: string\n          maxLength: 64\n        registry_password:\n          type: string\n          maxLength: 64\n      required:\n        - registry_url\n    RegistryWithoutAuth:\n      description: A registry without the authentication information\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          format: date-time\n        name:\n          type: string\n          maxLength: 32\n        registry_url:\n          type: string\n          maxLength: 128\n    RepositoryCommitLog:\n      description: Log of commits to a repository\n      type: object\n      required: [ 'commits' ]\n      properties:\n        commits:\n          type: array\n          items:\n            $ref: '#/components/schemas/Commit'\n\n    Reservation:\n      description: Sticky slot reservation for an algorithm\n      type: object\n      required: [ 'reservation_id', 'username', 'algoname', 'num_slots', 'version_type', 'algo_id', 'algorithm_id', 'version_hash' ]\n      properties:\n        reservation_id:\n          type: string\n        billable_to:\n          type: string\n        billable_to_uuid:\n          type: string\n        algoname:\n          type: string\n        username:\n          type: string\n        version_type:\n          type: string\n        num_slots:\n          type: integer\n        algo_id:\n          type: string\n        algorithm_id:\n          type: string\n        version_hash:\n          type: string\n\n    ReservationCreate:\n      description: Create reservation object\n      type: object\n      required: [ 'username', 'algoname', 'calling_user', 'version_type', 'num_slots' ]\n      properties:\n        username:\n          type: string\n        algoname:\n          type: string\n        calling_user:\n          type: string\n        version_type:\n          type: string\n        num_slots:\n          type: integer\n        version_identifier:\n          type: string\n\n    ResourceName:\n      maxLength: 30\n      pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'\n      type: string\n\n    ScmConfiguration:\n      type: object\n      description: Information necessary to support SCM (source code management) providers that must authorize users via OAuth.\n      properties:\n        client_id:\n          type: string\n        client_secret:\n          type: string\n          writeOnly: true\n        project_key:\n          type: string\n\n    ScmConfigurationRequestDto:\n      type: object\n      description: Represents new SCM integration.\n      properties:\n        id:\n          type: string\n        enabled:\n          type: boolean\n          default: true\n        name:\n          type: string\n        provider:\n          type: string\n          enum:\n            - internal\n            - github\n            - gitlab\n            - bitbucket\n            - bitbucket-cloud\n        scm:\n          $ref: '#/components/schemas/ScmBitbucketConfiguration'\n        oauth:\n          $ref: '#/components/schemas/ScmOAuthConfiguration'\n        urls:\n          $ref: '#/components/schemas/ScmUrls'\n      required:\n        - provider\n        - urls\n\n    ScmConfigurationResponseDto:\n      type: object\n      description: Represents a single SCM integration. The `scm` fields returns the ScmBitbucketConfiguration only on create requests, on all other requests it is mapped into `ScmOAuthConfiguration` because we can't tell between the two based on DB data.\n      properties:\n        id:\n          type: string\n        enabled:\n          type: boolean\n          default: true\n        name:\n          type: string\n        default:\n          type: boolean\n          readOnly: true\n        provider:\n          type: string\n          enum:\n            - internal\n            - github\n            - gitlab\n            - bitbucket\n            - bitbucket-cloud\n        scm:\n          $ref: '#/components/schemas/ScmConfiguration'\n        urls:\n          $ref: '#/components/schemas/ScmUrls'\n      required:\n        - id\n        - provider\n\n    ScmConnectionStatus:\n      type: object\n      properties:\n        scm_connection_status:\n          type: string\n          enum:\n            - active\n            - deploy_key_error\n            - provider_internal_error\n          readOnly: true\n        repository_public_deploy_key:\n          type: string\n          readOnly: true\n        repository_webhook_secret:\n          type: string\n          readOnly: true\n        repository_webhook_url:\n          type: string\n          readOnly: true\n\n    ScmOAuthConfiguration:\n      type: object\n      description: Information necessary to support SCM (source code management) providers that must authorize users via OAuth.\n      properties:\n        client_id:\n          type: string\n        client_secret:\n          type: string\n          writeOnly: true\n\n    ScmBitbucketConfiguration:\n      type: object\n      description: Information necessary to support Bitbucket Server integration.\n      properties:\n        project_key:\n          type: string\n\n    SCMSUserPass:\n      type: object\n      description: Credentials for authentication in SCM (source code management) system\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n      required:\n        - username\n        - password\n\n    SCMSSecretToken:\n      type: object\n      description: Credentials for authentication in SCM (source code management) system\n      properties:\n        secretToken:\n          type: string\n      required:\n        - secretToken\n\n    ScmUpdateRequest:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        urls:\n          $ref: '#/components/schemas/ScmUrls'\n\n    ScmUrls:\n      type: object\n      description: \u003e\n        Information necessary to support SCM (source code management) endpoints for Oauth, viewing source, making API calls, and cloning Git repositories via SSH.\n\n        The `web` URL should point to the website for the GitHub/GitLab/Bitbucket instance you wish to use. For example, `https://github.com` for public GitHub. Should be filled with the value from the `api` field.\n\n        The `api` URL should point to the base API endpoint for the GitHub/GitLab/Bitbucket instance you wish to use. For example, `https://api.github.com` for public GitHub. Note that GitHub Enterprise places the API under a path, e.g. `https://my-ghe-instance.com/api/v3`. For Bitbucket, this is the only Server URL we need ex. `https://my-bitbucket-server.com`\n\n        The `ssh` URL should be of the format `ssh://git@server.com`, replacing `server.com` with the custom domain for your GitHub/GitLab/Bitbucket instance. For Bitbucket, this field needs the following format: `ssh://git@my-bitbucket-server.com`. If the user supplied a custom SSH server address, ex `custom-domain.com:5000`, then this needs to be adjusted to `ssh://git@custom-domain.com:5000`\n      properties:\n        web:\n          type: string\n        api:\n          type: string\n        ssh:\n          type: string\n      required:\n        - web\n        - api\n        - ssh\n\n    ScmUserOAuthStatus:\n      type: object\n      description: Information about a user's authorization status for the given SCM configuration.\n      properties:\n        authorization_status:\n          type: string\n          enum:\n            - authorized\n            - unauthorized\n        scm_username:\n          type: string\n        scm_organizations:\n          type: array\n          items:\n            type: object\n            properties:\n              scm_org_username:\n                type: string\n              access_level:\n                type: string\n\n    Settings:\n      type: object\n      properties:\n        algorithm_callability:\n          $ref: '#/components/schemas/AlgorithmCallability'\n        source_visibility:\n          $ref: '#/components/schemas/SourceVisibility'\n        environment:\n          $ref: '#/components/schemas/Environment'\n        package_set:\n          type: string\n        algorithm_environment:\n          description: the environment id (not the environment specification id) returned from AEMS\n          type: string\n          format: uuid\n        license:\n          $ref: '#/components/schemas/License'\n        royalty_microcredits:\n          type: integer\n          minimum: 0\n          readOnly: true\n        network_access:\n          $ref: '#/components/schemas/NetworkAccess'\n        pipeline_enabled:\n          type: boolean\n\n    SecretProviderRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        moduleName:\n          type: string\n        factoryClassName:\n          type: string\n        interfaceVersion:\n          type: string\n        configuration:\n          type: object\n          properties:\n            key:\n              type: string\n        isEnabled:\n          type: boolean\n        isDefault:\n          type: boolean\n      required:\n        - name\n        - description\n        - moduleName\n        - factoryClassName\n        - interfaceVersion\n        - isEnabled\n        - isDefault\n\n    SettingsMandatory:\n      type: object\n      required: [ 'source_visibility','license','network_access','pipeline_enabled' ]\n      properties:\n        source_visibility:\n          $ref: '#/components/schemas/SourceVisibility'\n        language:\n          $ref: '#/components/schemas/Language'\n        environment:\n          $ref: '#/components/schemas/Environment'\n        package_set:\n          type: string\n        algorithm_environment:\n          description: the environment id (not the environment specification id) returned from AEMS\n          type: string\n          format: uuid\n        license:\n          $ref: '#/components/schemas/License'\n        royalty_microcredits:\n          type: integer\n          minimum: 0\n          readOnly: true\n        network_access:\n          $ref: '#/components/schemas/NetworkAccess'\n        pipeline_enabled:\n          type: boolean\n        algorithm_callability:\n          $ref: '#/components/schemas/AlgorithmCallability'\n\n    SettingsPublish:\n      type: object\n      properties:\n        algorithm_callability:\n          $ref: '#/components/schemas/AlgorithmCallability'\n        source_visibility:\n          $ref: '#/components/schemas/SourceVisibility'\n        license:\n          $ref: '#/components/schemas/License'\n        royalty_microcredits:\n          type: integer\n          minimum: 0\n        network_access:\n          $ref: '#/components/schemas/NetworkAccess'\n        pipeline_enabled:\n          type: boolean\n\n    Source:\n      type: object\n      description: Represents information about how the algorithm's source code is managed. Upon algorithm creation, the `scm` property is set to the currently enabled default SCM (source code management) configuration for the cluster.\n      properties:\n        repository_name:\n          description: The name of the repo that will be created in the chosen SCM system.\n          type: string\n          readOnly: true\n        repository_owner:\n          description: The ID of the relevant owner as stored by the SCM system in use.\n          type: string\n          readOnly: true\n        repository_https_url:\n          description: The HTTPS URL of the algorithm's Git repository (if the repository is hosted externally to the Algorithmia platform).\n          type: string\n          readOnly: true\n        repository_ssh_url:\n          description: The SSH URL of the algorithm's Git repository (if the repository is hosted externally to the Algorithmia platform).\n          type: string\n          readOnly: true\n        scm:\n          $ref: '#/components/schemas/ScmConfigurationResponseDto'\n      required:\n        - scm\n\n    SourceCreate:\n      type: object\n      description: Describes properties of the Source schema that may be provided at algorithm creation time.\n      properties:\n        repository_name:\n          type: string\n        repository_owner:\n          type: string\n        scm:\n          type: string\n        initial_commit_message:\n          type: string\n        existing_repository_name:\n          type: string\n      required:\n        - scm\n\n    SourceVisibility:\n      type: string\n      description: \u003e\n        For algorithms hosting source code within the Algorithmia platform, this determines if users other than the algorithm owner will be able to view (but not edit) the algorithm's source code.\n        For algorithms hosting their source code on external repository host, this value will determine if the repository is initially created as a private repository (e.g. `closed`) or if it will be public (e.g. `open`).\n        Note that, once you've created an algorithm using an external repository host like GitHub, Gitlab or Bitbucket, any updates to its source visibility must be made via the repository host itself (e.g. via the SCM UI or API).\n      enum:\n        - open\n        - closed\n\n    UpdateRequest:\n      type: object\n      properties:\n        details:\n          $ref: '#/components/schemas/Details'\n        settings:\n          $ref: '#/components/schemas/Settings'\n        version_info:\n          type: object\n          properties:\n            sample_input:\n              type: string\n\n    User:\n      type: object\n      required:\n        - username\n        - email\n        - resource_type\n      properties:\n        id:\n          type: string\n          maxLength: 36\n          minLength: 36\n        fullname:\n          type: string\n          maxLength: 100\n        email:\n          type: string\n          maxLength: 100\n          pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+[.][a-zA-Z]{2,6}$'\n        username:\n          type: string\n          maxLength: 30\n          pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'\n        company_name:\n          type: string\n          maxLength: 100\n        company_role:\n          type: string\n          maxLength: 200\n        self_link:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n          readOnly: true\n\n    VersionInfo:\n      type: object\n      properties:\n        semantic_version:\n          type: string\n          readOnly: true\n        git_hash:\n          type: string\n          readOnly: true\n        version_uuid:\n          type: string\n          readOnly: true\n        release_notes:\n          type: string\n        sample_input:\n          type: string\n        sample_output:\n          type: string\n          readOnly: true\n        insights_enabled:\n          type: boolean\n\n    VersionInfoPublish:\n      type: object\n      properties:\n        version_type:\n          $ref: '#/components/schemas/VersionType'\n        release_notes:\n          type: string\n          writeOnly: true\n        sample_input:\n          type: string\n          writeOnly: true\n        sample_output:\n          type: string\n          writeOnly: true\n        insights_enabled:\n          type: boolean\n          default: false\n\n    VersionRequest:\n      type: object\n      properties:\n        details:\n          $ref: '#/components/schemas/Details'\n        settings:\n          $ref: '#/components/schemas/SettingsPublish'\n        version_info:\n          $ref: '#/components/schemas/VersionInfoPublish'\n        registry_push_credentials:\n          $ref: '#/components/schemas/RegistryPublishAuth'\n\n    VersionResponse:\n      type: object\n      properties:\n        name:\n          type: string\n        details:\n          $ref: '#/components/schemas/Details'\n        settings:\n          $ref: '#/components/schemas/Settings'\n        source:\n          $ref: '#/components/schemas/Source'\n        version_info:\n          $ref: '#/components/schemas/VersionInfo'\n        build:\n          $ref: '#/components/schemas/Build'\n        compilation:\n          $ref: '#/components/schemas/Compilation'\n        self_link:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n          readOnly: true\n\n    VersionType:\n      type: string\n      writeOnly: true\n      enum:\n        - major\n        - minor\n        - revision\n\n  parameters:\n\n    aclQueryParameter:\n      description: Whether the ACL should be included in the response.\n      in: query\n      name: acl\n      required: false\n      schema:\n        default: false\n        type: boolean\n\n    algoHashParam:\n      name: algohash\n      in: path\n      description: Algorithm hash\n      required: true\n      schema:\n        type: string\n\n    algoIdParam:\n      name: algorithmId\n      in: path\n      description: Algorithm UUID\n      required: true\n      schema:\n        type: string\n        format: uuid\n        pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'\n\n    algoParam:\n      name: algoname\n      in: path\n      description: Algorithm name\n      required: true\n      schema:\n        type: string\n\n    algoCallableVersionParam:\n      description: \u003e\n        The specific version of the algorithm you wish to call. May be left blank, in which case the latest publicly published version will be used.\n\n        Examples:\n\n        - `latestPrivate`: Resolves to the latest version you have published privately.\n\n        - `06147a5f7726757845d04d5b24b6e2b1c797fc74`: Resolves to a specific hash version of your algorithm. Useful for testing a specific algorithm build.\n\n        - `1.1.1`: Fully specified semantic version.\n\n        - `1.2.*`: Specified to the minor version level. Will resolve to the latest publicly published version with minor version of 1.2.\n\n        - `1.*`:\tSpecified to the major version level. Will resolve to the latest publicly published version with major version of 1.\n      in: path\n      name: algoCallableVersion\n      required: true\n      schema:\n        pattern: '(^$|latestPrivate|^[a-z0-9]?$|^\\d(\\.(\\d+|\\*))?(\\.(\\d+|\\*))?$)'\n        type: string\n\n    buildId:\n      name: buildid\n      in: path\n      description: Build ID\n      required: true\n      schema:\n        type: string\n\n    callableParam:\n      name: callable\n      in: query\n      description: Algorithm version's callable visibility\n      required: false\n      schema:\n        type: boolean\n\n    commitHashParam:\n      name: commitHash\n      in: path\n      description: Algorithm commit hash\n      required: true\n      schema:\n        type: string\n\n    configKeyParam:\n      name: keyname\n      in: path\n      description: \"The keyname for the config map entry\"\n      required: true\n      schema:\n        type: string\n        maxLength: 64\n        pattern: '^[\\w][\\w-.]*[\\w]$'\n\n    connectorIdParameter:\n      description: \u003e\n        Specifies the connector you wish to interact with.\n\n        For Algorithmia-hosted data, simply supply `data`. Otherwise, provide your connector's ID. A connector's ID is represented as its connector type, the `+` character, and its label (unless it is the default connector for its type, see below.) Thus, a non-default S3 connector with the label \"test\" would be identified as \"s3+test\".\n\n        You can use your default connector for a given storage provider by passing the following identifiers:\n\n        - `azureblob`: Your default Azure Blob connector.\n\n        - `dropbox`: Your default Dropbox connector, if Dropbox is enabled for your Algorithmia instance.\n\n        - `gs`: Your default Google Cloud Storage connector.\n\n        - `s3`: Your default AWS S3 connector.\n      in: path\n      name: connectorId\n      required: true\n      schema:\n        type: string\n        pattern: '^(azureblob|data|dropbox|gs|s3){1}(\\+[a-zA-Z0-9]+)?$'\n\n    connectorPathParameter:\n      description: Describes the file path you wish to operate on within your chosen data connector.\n      in: path\n      name: connectorPath\n      required: true\n      schema:\n        type: string\n        pattern: '^([^\\/]+\\/?)*$'\n\n    eventListenerIdParam:\n      description: The ID of an event listener\n      in: path\n      name: eventListenerId\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'\n\n    featureNameParam:\n      description: The name of the feature flag\n      in: path\n      name: featureName\n      required: true\n      schema:\n        type: string\n\n    forceDeletionQueryParameter:\n      description: If you pass `true` for this parameter, will delete the directory even if it contains files.\n      in: query\n      name: force\n      required: false\n      schema:\n        type: boolean\n\n    limitParam:\n      name: limit\n      in: query\n      description: The number of results to return in a single page\n      schema:\n        type: integer\n        minimum: 1\n\n    markerParam:\n      name: marker\n      in: query\n      description: Encoded pagination cursor\n      schema:\n        type: string\n\n    oauthAuthorizationCodeParam:\n      in: query\n      name: code\n      description: OAuth authorization code which we will be exchanged for an access token.\n      schema:\n        type: string\n      required: true\n\n    orgnameParam:\n      name: orgName\n      in: path\n      description: Organization name\n      required: true\n      schema:\n        type: string\n        maxLength: 30\n        pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'\n\n    orgTypeNameParam:\n      name: orgTypeName\n      in: path\n      description: Organization Type name\n      required: true\n      schema:\n        type: string\n        maxLength: 30\n        pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'\n\n    providerIdParam:\n      name: providerId\n      in: path\n      description: Secret UUID\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'\n\n    publishedParam:\n      name: published\n      in: query\n      description: Algorithm version's published state\n      required: false\n      schema:\n        type: boolean\n\n    registryIdParam:\n      name: registryId\n      in: path\n      description: Registry ID\n      required: true\n      schema:\n        type: string\n\n    scmIdParam:\n      name: scmId\n      in: path\n      description: SCM ID\n      required: true\n      schema:\n        type: string\n\n    secretIdParam:\n      name: secretId\n      in: path\n      description: Secret UUID\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'\n\n    sinceSha:\n      name: since\n      in: query\n      description: The first commit SHA of the repository to list in the commits. This is included in the result list.\n      schema:\n        type: string\n\n    untilSha:\n      name: until\n      in: query\n      description: The last commit SHA of the repository to list in the commits. This is included in the result list.\n      schema:\n        type: string\n\n    userIdParam:\n      name: userId\n      in: path\n      description: The user's ID\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$'\n\n    usernameParam:\n      name: username\n      in: path\n      description: The username of the user or organization\n      required: true\n      schema:\n        type: string\n        maxLength: 30\n        pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'\n\n    usernameQueryParam:\n      name: username\n      in: query\n      description: The username of the user or organization\n      required: false\n      schema:\n        type: string\n\n  requestBodies:\n    BuildRequest:\n      description: A build request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BuildRequest'\n\n    ConnectionConfigurationRequestBody:\n      description: A connection configuration that maps to a SASL configuration or a Plain Text Authentication\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ConnectionConfigurationRequest'\n\n    ConnectorCreateRequestBody:\n      description: Attempting to create a data connector for a specific user or organization\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Connector'\n\n    CreateApiKey:\n      description: Create API Key Request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiKeyCreation'\n\n    CreateOrgApiKey:\n      description: Create API Key for an Organization Request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganizationApiKeyCreation'\n\n    CreateRegistryRequest:\n      description: Parameters to create a new registry for mirroring\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/RegistryCreate'\n\n    UpdateRegistryRequest:\n      description: Parameters to update a new registry for mirroring\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/RegistryUpdate'\n\n    CreateRequest:\n      description: Algorithm Create Request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateRequest'\n\n    DirectoryAclRequestBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DirectoryAclUpdateRequest'\n\n    CreateDirectoryRequestBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateDirectoryRequest'\n\n    EventListenerBody:\n      description: Request with event listener\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EventListenerRequest'\n\n    FeatureFlagToggle:\n      description: Feature flag toggle\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FeatureFlagToggle'\n\n    FileUploadRequestBody:\n      content:\n        '*/*':\n          schema:\n            type: string\n            format: binary\n\n    FrontendConfigurationEntry:\n      description: Request with config entry\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FrontendConfigurationEntry'\n\n    InviteCodeRequestBody:\n      description: Request to create new invite code\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/NewInviteCode'\n\n    Organization:\n      description: Request with Organization\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Organization'\n\n    OrganizationHostInformation:\n      description: Request with organization host information mapping\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganizationHostInformation'\n\n    CreateOrganizationHostInformation:\n      description: Request to create new organization host information mapping\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateOrganizationHostInformation'\n\n    OrganizationType:\n      description: Request with OrganizationType\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganizationType'\n\n    RegistryPublishAuthRequestBody:\n      description: Credentials for accessing an external docker registry\n      required: false\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/RegistryPublishAuth'\n\n    ReservationCreateRequestBody:\n      description: Create a reservation for an algorithm\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ReservationCreate'\n\n    ScmCreateRequestBody:\n      description: Attempting to create an SCM configuration of the type `internal` will return an `ScmDisallowedOperationError`, as this is a special class of SCM leveraged by Algorithmia directly.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ScmConfigurationRequestDto'\n\n    ScmUpdateRequestBody:\n      description: The enabled property or the scmUrls may be updated. If you attempt to disable an SCM that is currently the default, this call will fail, and you will be returned an appropriate error code. You must pass all 3 valid scmUrls or none\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ScmUpdateRequest'\n\n    ScmWebhookRequestBody:\n      description: Contains information for the event that triggered this webhook\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n\n    AlgorithmSecretCreateRequestBody:\n      description: Algorithm Secret Create Request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AlgorithmSecretCreateRequest'\n\n    AlgorithmSecretEditRequestBody:\n      description: Algorithm Secret Edit Request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AlgorithmSecretEditRequest'\n\n    SecretProviderRequestBody:\n      description: Request for creating and updating secret providers\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SecretProviderRequest'\n\n    UpdateRequest:\n      description: Algorithm Update Request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateRequest'\n\n    HostUpdateRequestBody:\n      description: AlgorithmHostUsername Update Request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AlgorithmHostUsernameUpdates'\n\n    User:\n      description: Request with User\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User'\n\n    VersionRequest:\n      description: Publish Version Request\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VersionRequest'\n\n  responses:\n    AlgorithmHostUsernameResponse:\n      description: Algorithm Host Username List\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: '#/components/schemas/AlgorithmHostUsername'\n\n    AlgorithmImagePushStatusResponse:\n      description: Algorithm Image Push Status\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: '#/components/schemas/ImagePushStatus'\n\n    AlgorithmInvocationResultResponse:\n      description: Returns the result of invoking an algorithm.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AlgorithmInvocationResult'\n\n    AlgorithmUsageResponse:\n      description: Algorithm usage information\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AlgorithmUsageResult'\n\n    LegacyAlgorithmUsageResponse:\n      description: Legacay Algorithm usage information\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LegacyAlgorithmUsageResult'\n\n    ApiKeyListResponse:\n      description: List of API keys\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiKeyList'\n\n    AlgorithmListResponse:\n      description: Returns a list of utility algorithms\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AlgorithmListResult'\n\n    AlgorithmSecretListResponse:\n      description: Returns a list of AlgorithmSecrets.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AlgorithmSecretList'\n\n    AlgorithmSecretResponse:\n      description: A secret object without the value\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AlgorithmSecretResult'\n\n    OrganizationTypeListResponse:\n      description: List of OrganizationType\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganizationTypeListResult'\n\n    BuildLogsResponse:\n      description: Build Logs Response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BuildLogs'\n\n    BuildResponse:\n      description: Build Response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Build'\n\n    ConnectionConfigurationResponse:\n      description: Response containing a Connection Configuration\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ConnectionConfiguration'\n\n    AlgorithmErrorListResponse:\n      description: List of algorithm errors response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AlgorithmErrorEntry'\n\n    CreateApiKeyResponse:\n      description: Response containing a generated API key\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiKey'\n\n    ConnectorResponse:\n      description: Response containing a Connector\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ConnectorResponse'\n\n    Error:\n      description: Error response for all non-200 response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                $ref: '#/components/schemas/Error'\n\n    EventListener:\n      description: Event Listener Response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EventListener'\n\n    FeatureFlagListResponse:\n      description: Response with feature flag list\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FeatureFlagList'\n\n    FileDeletionResponse:\n      description: Returns the number of successful deletions under `result`, and number of failed deletions under `error`\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: object\n                properties:\n                  deleted:\n                    type: number\n              result:\n                type: object\n                properties:\n                  deleted:\n                    type: number\n\n    FileOrDirectoryResponse:\n      description: Returns either a `directory` or raw file data, depending on path specified\n      headers:\n        X-Data-Type:\n          schema:\n            $ref: '#/components/schemas/FileType'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Directory'\n        '*/*':\n          schema:\n            type: string\n            format: binary\n\n    FileOrDirectoryCreationResponse:\n      description: Describes the location of a successfully uploaded file\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              result:\n                type: string\n\n    FrontendConfigurationEntry:\n      description: Front-end config representation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FrontendConfigurationEntry'\n\n    FullUsageResultResponse:\n      description: Full usage report response to caller\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FullUsageResult'\n\n    HashResponse:\n      description: Create, Update Response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HashResponse'\n\n    InviteCodeResponse:\n      description: Invite code response\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/InviteCode'\n\n    ListProviderInfoResponse:\n      description: Provider Info response\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: '#/components/schemas/ProviderInfo'\n\n    NotificationContextResponse:\n      description: Notification response\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/NotificationContext'\n\n    Organization:\n      description: Organization response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Organization'\n\n    OrganizationHostInformation:\n      description: OrganizationHostInformation response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganizationHostInformation'\n\n    OrganizationType:\n      description: OrganizationType response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganizationType'\n\n    PagedBuildsListResponse:\n      description: Builds Response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PagedBuildsList'\n\n    PagedResultList:\n      description: Response for all paginated list apis\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PagedResultList'\n\n    PagedVersionsListResponse:\n      description: Create, Update Response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PagedVersionsList'\n\n    ProviderInfoResponse:\n      description: Provider Info response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProviderInfo'\n\n    RegistryResponse:\n      description: A configured registry\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/RegistryWithoutAuth'\n\n    RegistryNoAuthListResponse:\n      description: A list of all registries\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/RegistryWithoutAuth'\n\n    RepositoryCommitLogResponse:\n      description: Log of commits to a repository\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/RepositoryCommitLog'\n\n    ReservationsResponse:\n      description: Reservations response\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Reservation'\n\n    ScmConnectionStatusResponse:\n      description: Returns information about an algorithm's connection to its backing SCM provider.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ScmConnectionStatus'\n\n    ScmListResponse:\n      description: Returns a list of SCMs.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              results:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ScmConfigurationResponseDto'\n\n    ScmResponse:\n      description: Returns a single SCM\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ScmConfigurationResponseDto'\n\n    ScmUserOAuthStatusResponse:\n      description: Returns information about a user's authorization status for the given SCM configuration.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ScmUserOAuthStatus'\n\n    ScmWebhookIgnoredResponse:\n      description: The incoming webhook is not actionable\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              reason:\n                type: string\n\n    User:\n      description: User response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User'\n\n    UserUsageResponse:\n      description: User usage information\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserUsageResult'\n\n    VersionResponse:\n      description: Publish Response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VersionResponse'\n\n  securitySchemes:\n\n    CookieAuth:\n      type: apiKey\n      in: cookie\n      name: ALGO_SESSION{cookieNameSuffix}\n\n    AdminApiKeyAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n\n    GithubAuth:\n      type: apiKey\n      in: header\n      name: X-Hub-Signature\n\n    GithubEventIdentification:\n      type: apiKey\n      in: header\n      name: X-GitHub-Event\n\n    XGitlabEvent:\n      type: apiKey\n      in: header\n      name: X-Gitlab-Event\n\n    XBitbucketKey:\n      type: apiKey\n      in: header\n      name: X-Event-Key\n"
		}
	},
	"Error": "buildIR: make ir: path \"/v1/organizations/{orgName}/algorithms-host-usernames\": get: responses: 400: contents: application/json: schema: save referenced type: reference \"#/components/schemas/Error\" type name conflict: \"Error\""
}