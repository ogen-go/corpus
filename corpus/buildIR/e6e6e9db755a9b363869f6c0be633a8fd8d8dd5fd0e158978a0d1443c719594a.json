{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nextbike/api-doc"
		},
		"file": {
			"name": "nextbike-maps.openapi.yaml",
			"size": 0,
			"path": "maps/nextbike-maps.openapi.yaml",
			"byteSize": 20181,
			"content": "openapi: 3.0.0\ninfo:\n  title: Nextbike Maps\n  description: Nextbike realtime bike and station location information\n  version: 2.0.0\nservers:\n  - url: https://maps.nextbike.net/\npaths:\n  /maps/nextbike-{scope}.{format}:\n    parameters:\n      - in: path\n        name: scope\n        description: Should be \"live\" for all places or \"official\" for only official stations (no free floating bikes).\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: format\n        description: Response format. \"flatjson\" is a flat json array of countries, cities, places with cross-references to parent IDs\n        schema:\n          type: string\n          enum: [json, xml, flatjson]\n        required: true\n      - in: query\n        name: city\n        description: Comma-separated list of Nextbike city UIDs\n        schema:\n          type: array\n          items:\n            type: integer\n        required: false\n      - in: query\n        name: domains\n        description: Comma-separated list of two-digit Nextbike domain codes\n        schema:\n          type: array\n          items:\n            type: string\n          minItems: 1\n        style: form\n        explode: false\n      - in: query\n        name: countries\n        description: Comma-separated list of two-digit ISO 3166-1 (alpha 2) country codes\n        schema:\n          type: array\n          items:\n            type: string\n      - in: query\n        name: place\n        description: Nextbike place UID\n        schema:\n          type: number\n      - in: query\n        name: station\n        description: Nextbike station number\n        schema:\n          type: string\n      - in: query\n        name: lat\n        description: Latitude of center point\n        schema:\n          type: number\n      - in: query\n        name: lng\n        description: longitude of center point\n        schema:\n          type: number\n      - in: query\n        name: limit\n        description: the limit of returned stations within radius, only valid if (lat, lng) are provided\n        schema:\n          type: integer\n          default: 100\n      - in: query\n        name: distance\n        description: filter radius [meters], only considered when (lat, lng) are provided\n        schema:\n          type: integer\n          default: 2000\n      - in: query\n        name: bike_distance\n        description: radius limit [meters] around (lat, lng) for returned free floating bikes\n        schema:\n          type: integer\n      - in: query\n        name: list_cities\n        description: if thruthy, only list cities, omit place nodes from response\n        schema:\n          type: string\n          enum: [\"0\", \"false\", \"1\", \"true\"]\n      - in: query\n        name: bikes\n        description: if falsy, omit bike nodes from the response\n        schema:\n          type: string\n          enum: [\"0\", \"false\"]\n      - in: query\n        name: search\n        description: contains either station-number, station-name, adress or bike number\n        schema:\n          type: string\n\n    get:\n      operationId: maps\n      summary: Returns a list of map markers for all or only official stations, filtered by the given parameters\n      tags: [maps]\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/markers_json'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/markers_xml'\n    post:\n      operationId: mapsPost\n      summary: Returns a list of map markers for all or only official stations, filtered by the given parameters (deprecated, only for legacy compatibility)\n      tags: [maps]\n      deprecated: true\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/markers_json'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/markers_xml'\n\n  /maps/nextbike.{format}:\n    parameters:\n      - in: path\n        name: format\n        schema:\n          type: string\n          enum: [json, xml]\n        required: true\n      - in: query\n        name: city\n        schema:\n          type: array\n          items:\n            type: integer\n        required: false\n      - in: query\n        name: domains\n        schema:\n          type: array\n          items:\n            type: string\n          minItems: 1\n        style: form\n        explode: false\n      - in: query\n        name: countries\n        schema:\n          type: array\n          items:\n            type: string\n      - in: query\n        name: place\n        schema:\n          type: number\n      - in: query\n        name: station\n        schema:\n          type: string\n      - in: query\n        name: lat\n        schema:\n          type: number\n      - in: query\n        name: lng\n        schema:\n          type: number\n      - in: query\n        name: limit\n        schema:\n          type: integer\n          default: 100\n      - in: query\n        name: distance\n        schema:\n          type: integer\n          default: 2000\n      - in: query\n        name: bike_distance\n        schema:\n          type: integer\n      - in: query\n        name: list_cities\n        schema:\n          type: string\n          enum: [\"0\", \"false\", \"1\", \"true\"]\n      - in: query\n        name: bikes\n        schema:\n          enum: [\"0\", \"false\"]\n\n    get:\n      operationId: mapsOfficialLegacy\n      summary: Returns a list of map markers for official stations\n      tags: [maps]\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/markers_json'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/markers_xml'\n    post:\n      operationId: mapsOfficialLegacyPost\n      summary: Returns a list of map markers for official stations (deprecated, only for legacy compatibility)\n      tags: [maps]\n      deprecated: true\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/markers_json'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/markers_xml'\n  \"/office/maps3.php\":\n    parameters:\n      - in: query\n        name: loginkey\n        required: true\n        description: loginkey of a user with privileges for respective domains/cities\n        schema:\n          type: string\n      - in: query\n        required: true\n        name: format\n        schema:\n          type: string\n          enum: [json, xml]\n          default: json\n      - in: query\n        name: city\n        schema:\n          type: array\n          items:\n            type: integer\n        required: false\n      - in: query\n        name: domains\n        schema:\n          type: array\n          items:\n            type: string\n          minItems: 1\n        style: form\n        explode: false\n      - in: query\n        name: countries\n        schema:\n          type: array\n          items:\n            type: string\n      - in: query\n        name: place\n        schema:\n          type: number\n      - in: query\n        name: station\n        schema:\n          type: string\n      - in: query\n        name: lat\n        schema:\n          type: number\n      - in: query\n        name: lng\n        schema:\n          type: number\n      - in: query\n        name: limit\n        schema:\n          type: integer\n          default: 100\n      - in: query\n        name: distance\n        schema:\n          type: integer\n          default: 2000\n      - in: query\n        name: bike_distance\n        schema:\n          type: integer\n      - in: query\n        name: list_cities\n        schema:\n          type: string\n          enum: [\"0\", \"false\", \"1\", \"true\"]\n      - in: query\n        name: bikes\n        schema:\n          enum: [\"0\", \"false\", \"1\", \"true\"]\n    get:\n      operationId: fetchServiceMapsByGet\n      summary: return an array of places with extended service information\n      tags: [serviceMaps]\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/service_maps_json'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/service_maps_xml'\n    post:\n      operationId: fetchServiceMapsPost\n      summary: return an array of places with extended service information (deprecated, only for legacy compatibility)\n      tags: [serviceMaps]\n      deprecated: true\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/service_maps_json'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/service_maps_xml'\n\ncomponents:\n  schemas:\n    service_maps_json:\n      type: object\n      properties:\n        countries:\n          type: array\n          items:\n            $ref: '#/components/schemas/service_country'\n\n    service_maps_xml:\n      type: array\n      items:\n        $ref: '#/components/schemas/service_country'\n\n    markers_json:\n      type: object\n      properties:\n        countries:\n          type: array\n          items:\n            $ref: '#/components/schemas/country'\n      required: [countries]\n\n    markers_xml:\n      type: array\n      items:\n        $ref: '#/components/schemas/country'\n\n    country:\n      allOf:\n        - $ref: '#/components/schemas/base_country'\n        - type: object\n          properties:\n            cities:\n              type: array\n              items:\n                $ref: '#/components/schemas/city'\n          required: [cities]\n\n    service_country:\n      allOf:\n        - $ref: '#/components/schemas/base_country'\n        - type: object\n          properties:\n            cities:\n              type: array\n              items:\n                $ref: '#/components/schemas/service_city'\n\n    base_country:\n      type: object\n      properties:\n        lat:\n          type: number\n          xml:\n            attribute: true\n        lng:\n          type: number\n          xml:\n            attribute: true\n        zoom:\n          type: integer\n          xml:\n            attribute: true\n        name:\n          type: string\n          xml:\n            attribute: true\n        hotline:\n          type: string\n          xml:\n            attribute: true\n        domain:\n          type: string\n          xml:\n            attribute: true\n        language:\n          type: string\n          xml:\n            attribute: true\n        email:\n          type: string\n          nullable: true\n          xml:\n            attribute: true\n        timezone:\n          type: string\n          xml:\n            attribute: true\n        currency:\n          type: string\n          xml:\n            attribute: true\n        country_calling_code:\n          type: string\n          xml:\n            attribute: true\n        system_operator_address:\n          type: string\n          xml:\n            attribute: true\n        country:\n          type: string\n          xml:\n            attribute: true\n        country_name:\n          type: string\n          xml:\n            attribute: true\n        terms:\n          type: string\n          xml:\n            attribute: true\n        policy:\n          type: string\n          xml:\n            attribute: true\n        website:\n          type: string\n          xml:\n            attribute: true\n        show_bike_types:\n          type: boolean\n          xml:\n            attribute: true\n        show_bike_type_groups:\n          type: boolean\n          xml:\n            attribute: true\n        show_free_racks:\n          type: boolean\n          xml:\n            attribute: true\n        booked_bikes:\n          type: integer\n          xml:\n            attribute: true\n        set_point_bikes:\n          type: integer\n          xml:\n            attribute: true\n        available_bikes:\n          type: integer\n          xml:\n            attribute: true\n        capped_available_bikes:\n          type: boolean\n          xml:\n            attribute: true\n        pricing:\n          type: string\n          xml:\n            attribute: true\n\n    city:\n      allOf:\n        - $ref: '#/components/schemas/base_city'\n        - type: object\n          properties:\n            places:\n              type: array\n              items:\n                $ref: '#/components/schemas/place'\n\n    service_city:\n      allOf:\n        - $ref: '#/components/schemas/base_city'\n        - type: object\n          properties:\n            places:\n              type: array\n              items:\n                $ref: '#/components/schemas/service_place'\n\n    base_city:\n      type: object\n      properties:\n        uid:\n          type: integer\n          xml:\n            attribute: true\n        lat:\n          type: number\n          xml:\n            attribute: true\n        lng:\n          type: number\n          xml:\n            attribute: true\n        bounds:\n          type: object\n          xml:\n            attribute: true\n          properties:\n            south_west:\n              $ref: '#/components/schemas/latLng'\n            north_east:\n              $ref: '#/components/schemas/latLng'\n          required: [south_west, north_east]\n        zoom:\n          type: integer\n          xml:\n            attribute: true\n        maps_icon:\n          type: string\n          xml:\n            attribute: true\n        alias:\n          type: string\n          xml:\n            attribute: true\n        website:\n          type: string\n          xml:\n            attribute: true\n        break:\n          type: boolean\n          xml:\n            attribute: true\n        name:\n          type: string\n          xml:\n            attribute: true\n        num_places:\n          type: integer\n          xml:\n            attribute: true\n        refresh_rate:\n          type: string\n          xml:\n            attribute: true\n        booked_bikes:\n          type: integer\n          xml:\n            attribute: true\n        set_point_bikes:\n          type: integer\n          xml:\n            attribute: true\n        available_bikes:\n          type: integer\n          xml:\n            attribute: true\n        return_to_official_only:\n          type: boolean\n          xml:\n            attribute: true\n        bike_types:\n          type: object\n          xml:\n            attribute: true\n        places:\n          type: array\n          items:\n            $ref: '#/components/schemas/place'\n      required: [bounds]\n\n    place:\n      type: object\n      properties:\n        uid:\n          type: integer\n          xml:\n            attribute: true\n        lat:\n          type: number\n          xml:\n            attribute: true\n        lng:\n          type: number\n          xml:\n            attribute: true\n        bike:\n          type: boolean\n          xml:\n            attribute: true\n        name:\n          type: string\n          xml:\n            attribute: true\n        address:\n          type: string\n          nullable: true\n          xml:\n            attribute: true\n        spot:\n          type: boolean\n          xml:\n            attribute: true\n        number:\n          type: integer\n          xml:\n            attribute: true\n        bikes:\n          type: integer\n          xml:\n            attribute: true\n        booked_bikes:\n          type: integer\n          xml:\n            attribute: true\n        bike_racks:\n          type: integer\n          xml:\n            attribute: true\n        free_racks:\n          type: integer\n          xml:\n            attribute: true\n        maintenance:\n          type: boolean\n          xml:\n            attribute: true\n        terminal_type:\n          type: string\n          xml:\n            attribute: true\n        bike_numbers:\n          type: array\n          items:\n            type: string\n          xml:\n            attribute: true\n        bike_types:\n          type: object\n          xml:\n            attribute: true\n        place_type:\n          type: string\n          xml:\n            attribute: true\n\n        rack_locks:\n          type: boolean\n          xml:\n            attribute: true\n        bike_list:\n          type: array\n          items:\n            $ref: '#/components/schemas/bike'\n\n    bike:\n      type: object\n      properties:\n        number:\n          type: string\n          xml:\n            attribute: true\n        bike_type:\n          type: integer\n          xml:\n            attribute: true\n        lock_types:\n          type: array\n          items:\n            type: string\n          xml:\n            attribute: true\n        active:\n          type: boolean\n          xml:\n            attribute: true\n        state:\n          type: string\n          xml:\n            attribute: true\n        electric_lock:\n          type: boolean\n          xml:\n            attribute: true\n        boardcomputer:\n          type: integer\n          xml:\n            attribute: true\n        pedelec_battery:\n          type: integer\n          nullable: true\n          xml:\n            attribute: true\n        battery_pack:\n          type: object\n          nullable: true\n\n    service_bike:\n      type: object\n      properties:\n        active:\n          type: string\n        battery:\n          type: string\n        battery_level_percent:\n          type: number\n          minimum: 0\n          maximum: 100\n        battery_state:\n          type: string\n        bike_name:\n          type: string\n        boardcomputer:\n          type: string\n        campaign_end_time:\n          type: string\n        campaign_name:\n          type: string\n        code_new:\n          type: string\n        firmware:\n          type: string\n        formfactor_id:\n          type: string\n        frame_number:\n          type: string\n        hardware_version:\n          type: string\n        internal_comments:\n          type: string\n        is_lent:\n          type: string\n        last_bikecheck:\n          type: string\n        last_communication:\n          type: string\n        last_customer_id:\n          type: string\n        last_customer_name:\n          type: string\n        last_customer_phonenumber:\n          type: string\n        last_lending:\n          type: string\n        last_lending_end:\n          type: string\n        last_rental_uid:\n          type: string\n        locked:\n          type: string\n        pedelec_battery:\n          type: string\n        rfid_uid:\n          type: string\n        signs:\n          type: string\n        snap:\n          type: string\n        street2:\n          type: string\n        uid:\n          type: string\n\n    service_place:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/place'\n        - type: object\n          properties:\n            bike_list:\n              type: array\n              items:\n                $ref: '#/components/schemas/service_bike'\n              xml:\n                attribute: true\n            bike_racks:\n              type: number\n            bonus_minutes:\n              type: number\n            check:\n              type: integer\n              enum: [0,1]\n            free_racks:\n              type: number\n            free_special_racks:\n              type: number\n            lent:\n              type: number\n            lowest_batt:\n              type: number\n            move:\n              type: integer\n            num_rentals_last_month:\n              type: number\n            online:\n              type: number\n            recognized:\n              type: boolean\n            set:\n              type: number\n            special_racks:\n              type: number\n            terminal_type:\n              type: string\n            terminal_list:\n              type: array\n              items:\n                type: string\n            visit:\n              type: boolean\n            visits:\n              type: string\n    latLng:\n      type:\n        object\n      properties:\n        lat:\n          type: number\n        lng:\n          type: number\n      required: [lat,lng]\n\n\n",
			"canonicalURL": "/github.com/nextbike/api-doc@1d7d8b2394eba701170f0760c8cd4032ab989056/-/blob/maps/nextbike-maps.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nextbike/api-doc/blob/1d7d8b2394eba701170f0760c8cd4032ab989056/maps/nextbike-maps.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/office/maps3.php\": get: responses: code 200: contents: media: \"application/json\": generate schema: field countries: item: allOf: field cities: item: allOf: merge properties: try to merge conflicting property schemas: merge item schema: schema type mismatch:  and object"
}