{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/iSPIRT/healthstack"
		},
		"file": {
			"name": "health-repository.yaml",
			"size": 0,
			"path": "spec/health-repository.yaml",
			"byteSize": 66236,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.5.0\n  title: Health Repository\n  description: \u003e\n    Health repository where health information providers and health information users are connected.\nservers:\n# Added by API Auto Mocking Plugin\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/health-stack/heatlh-repository/0.5.0\n  - url: https://ncg-dev.projecteka.in/api-bridge1\n    description: Dev\ntags:\n  - name: discovery\n  - name: link\n  - name: consent flow\n  - name: data flow\n  - name: identification\n  - name: user auth\n  - name: monitoring\n  - name: hiu side\n  - name: hip side\npaths:\n  /v0.5/care-contexts/discover:\n    post:\n      tags:\n        - discovery\n        - hip side\n      summary: Discover patient's accounts\n      description: \u003e\n        Request for patient care context discover, made by Gateway intended for a specific HIP. It is expected that HIP will subsequently return either zero or one patient record with (potentially masked) associated care contexts\n          1. **At least one of the verified identifier matches**\n          2. **Name (fuzzy), gender matches**\n          3. **If YoB was given, age band(+-2) matches**\n          4. **If unverified identifiers were given, one of them matches**\n          5. **If more than one patient records would be found after aforementioned steps, then patient who matches most verified and unverified identifiers would be returned.**\n          6. **If there would be still more than one patients (after ranking) error would be returned**\n          7. **Intended HIP should be able to resolve and identify results returned in the subsequent link confirmation request via the specified transactionId**\n          8. **Intended HIP should store the discovery results with transactionId and care contexts discovered for subsequent link initiation**\n          \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientDiscoveryRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientDiscoveryRequest'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: \u003e\n            **Causes:**\n              * Empty verified identifiers.\n              * Format mismatch of any of attributes.\n                | type   | Format/Allowed Values|\n                | ------- | ----------------    |\n                | gender  | M/F/O/U |\n                | MOBILE  | valid mobile number with proper country code |\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/links/link/init:\n    post:\n      tags:\n        - link\n        - hip side\n      summary: Link patient's care contexts\n      description: \u003e\n        Request from Gateway to links care contexts associated with only one patient\n          1. **Validate account reference number and care context reference number**\n          2. **Validate transactionId in the request with discovery request entry to check whether there was a discovery\n              and were these care contexts discovered or not for a given patient**\n          3. **Before eventual link confirmation, HIP needs to authenticate the request with the patient(eg: OTP verification)**\n          4. **HIP should communicate the mode of authentication of a successful request to Consent Manager**\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientLinkReferenceRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientLinkReferenceRequest'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: \u003e\n            **Causes:**\n              * Consent manager user id is not provided\n              * Patient reference number is not provided\n              * Care context references are not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/links/link/confirm:\n    post:\n      tags:\n        - link\n        - hip side\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n      summary: Token submission by Consent Manager for link confirmation\n      description: \u003e\n        API to submit the token that was sent by HIP during the link request. \n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkConfirmationRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/LinkConfirmationRequest'\n      responses:\n        '202':\n          description: accepted\n        '400':\n          description: \u003e\n            **Causes:**\n              * Token is not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/health-information/hiu/on-request:\n    post:\n      tags:\n        - data flow\n        - hiu side\n      summary: Health information data request\n      description: \u003e\n        Callback API for acknowledgement of Health information request made by HIU. Gateway calls this API when request has validated for the specified  consent id. Either the **hiRequest** or **error** would be specified. If the health info request was valid, then the ***hiRequest.transactionId*** specifies the transaction context against which HIP would send over the data. \n        Possible cases of errors are\n          1. **Invalid consent artefact id**\n          2. **Consent has expired**\n          3. **Date ranges are invalid**\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIUHealthInformationRequestResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIUHealthInformationRequestResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: \u003e\n            **Causes:**\n              * Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Token is invalid or Link has expired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/health-information/hip/request:\n    post:\n      tags:\n        - data flow\n        - hip side\n      summary: Health information data request\n      description: \u003e\n        API called by CM to request Health information from HIP against a validated consent artefact. The transactionId is the correlation id that HIP should use use when pushing data to the **dataPushUrl**. \n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: '#/components/parameters/X-HIP-ID'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIPHealthInformationRequest'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIPHealthInformationRequest'\n      responses:\n        '202':\n          description: Request accepted.\n        '400':\n          description: \u003e\n            **Causes:**\n              * Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Token is invalid or Link has expired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/health-information/transfer:\n    post:\n      tags:\n        - data flow\n        - hiu side\n      summary: health information transfer API\n      description: \u003e\n        **NOTE**: This API is actually the callback URL that is passed as **dataPushUrl** in the data request API - /v0.5/health-information/hip/request. This API is directly called by HIP Data Bridge and is not mediated via CM, and hence not routed through the Gateway. \n          1. This API should be implemented at HIU side. It maybe implemented by the Data Bridge representing the HIU. \n          2. Entry elements maybe ***content*** or ***link***, although for version 1, entry ***content*** is preferred. \n          3. Entry ***content*** (or even link reference content) must be encrypted by means of Diffie Hellman Key Exchange, utilizing the HIU keymaterials that are passed through the data request API - /v0.5/health-information/hip/request. \n          4. Media contains the mimetype of content, and for v1, it is \"application/fhir+json\"\n          5. checksum is Md5 checksum of the data conent, before encryption\n          6. Please refer to the ProjectEKA WIKI for the format of FHIR bundle that is passed through content \n      parameters:\n        - $ref: '#/components/parameters/authorization'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataNotification'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/DataNotification'\n      responses:\n        '202':\n          description: Data accepted.\n        '401':\n          description: \u003e\n            **Causes:**\n              * Invalid/Expired/Empty token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consent-requests/on-init:\n    post:\n      tags:\n        - consent flow\n        - hiu side\n      summary: Response to consent request\n      description: |\n        Result of consent request creation for a patient. **id** represents the consentrequest id created by CM. The result must contain either **id** or the **error** caused. \u003cbr/\u003e\n          Reasons for error may be\n          * Invalid references (e.g patient id, hiu id), purpose, hiTypes, ranges, persmission\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentRequestInitResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ConsentRequestInitResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description:  \u003e\n            **Causes:**\n              * Invalid data sent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consent-requests/on-status:\n    post:\n      tags:\n        - consent flow\n        - hiu side\n      summary: Result of consent request status\n      description: |\n        Result of consent request done previously. Status of request can be GRANTED,  DENIED, EXPIRED. If the request was GRANTED, then \n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIUConsentRequestStatus'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIUConsentRequestStatus'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: \u003e\n            **Causes:**\n              * Invalid data sent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consents/hiu/notify:\n    post:\n      tags:\n        - consent flow\n        - hiu side\n      summary: Consent notification\n      description: |\n       Health information user will get notified about the consent request granted or denied, consent revoked, consent expired. \n       1. For consent request grant, status=GRANTED, consentRequestId=\u003cconsent-request-id\u003e, and consentArtefacts is an array of generated consent artefact Ids.\n       2. For consent request expiry, status=EXPIRED, consentRequestId=\u003cconsent-request-id\u003e\n       3. For consent request denied, status=DENIED, consentRequestId=\u003cconsent-request-id\u003e\n       4. For consent revocation, status=REVOKED, consentArtefacts is an array of revoked consent artefact ids\n      parameters:\n        - $ref: '#/components/parameters/authorization'\n        - $ref: '#/components/parameters/X-HIU-ID'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIUConsentNotificationEvent'\n      responses:\n        '202':\n          description: Request Accepted.\n        '401':\n          description: \u003e\n            **Causes:**\n              * Invalid/Expired/Empty token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consents/hip/notify:\n    post:\n      tags:\n        - consent flow\n        - hip side\n      summary: Consent notification\n      description: |\n        Notification of consents to health information providers consent request granted, consent revoked, consent expired. Only the GRANTED and REVOKED status notifications will be sent to HIP.\n          1. If consent is granted, status=GRANTED, then consentDetail contains the consent artefact details and signature is available. \n          2. If consent is revoked, then status=REVOKED, and consentId specifes which consent artefact is revoked. \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HIPConsentNotification'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/HIPConsentNotification'\n      responses:\n        '202':\n          description: Request Accepted\n        '401':\n          description: \u003e\n            **Causes:**\n              * Invalid/Expired/Empty token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream services are down\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/consents/on-fetch:\n    post:\n      tags:\n        - consent flow\n        - hiu side\n      summary: Result of fetch request for a consent artefact\n      description: |\n       Must contain either consent or error. Possible reason of errors are \n       1. consentId passed through /fetch is invalid\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentArtefactResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ConsentArtefactResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description:  \u003e\n            **Causes:**\n              * Invalid data sent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description:  \u003e\n            **Causes:**\n              * Expired/Invalid token.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/heartbeat:\n    get:\n      tags:\n        - monitoring\n        - hiu side\n        - hip side\n      summary: Get consent request status\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HeartbeatResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/HeartbeatResponse'\n  /v0.5/patients/on-find:\n    post:\n      tags:\n        - identification\n        - hiu side\n      summary: Identification result for a consent-manager user-id\n      description: |\n        If a patient is found then patient.name contains the patients name. \n        Otherwise, patient is not provided, and possibly error is raised for invalid requests\n        Note in addition to the \"Authorization\" header, one of the following headers must be specified\n        1. specify **X-HIU-ID** if the requester is HIU (identified from /find requester.id)\n        2. specify **X-HIP-ID** if the requester is HIP (identified from /find requester.id)\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientIdentificationResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientIdentificationResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: \u003e\n            Invalid request, required attributes not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v0.5/links/link/on-add-contexts:\n    post:\n      tags:\n        - link\n        - hip side\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n      summary: callback API for HIP initiated patient linking /link/add-context\n      description: \u003e\n        If the accessToken is valid for purpose of linking, and specified details provided, CM will send \"acknoweldgement.status\" as SUCCESS. If any error occcurred, for example invalid token, or other required patient or care-context information not provided, then \"error\" attribute conveys so. \n          1. **accessToken must be valid and must be for the purpose of linking**\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientCareContextLinkResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientCareContextLinkResponse'\n      responses:\n        '202':\n          description: accepted\n        '400':\n          description: \u003e\n            **Causes:**\n              * resp not specified\n              * atleast acknowledgement or error should be specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  \n  /v0.5/users/auth/on-fetch-modes:\n    post:\n      tags:\n        - user auth\n        - hiu side\n        - hip side\n      summary: Identification result for a consent-manager user-id. \n      description: | \n        This is the callback API for /auth/fetch-modes. If a patient is found then **auth** attribute contains the supported modes for the specified purpose. \n        Otherwise, error is raised for invalid requests or for non-existent id.\n        Note in addition to the \"Authorization\" header, one of the following headers must be specified\n        1. **X-HIU-ID** if the requester is HIU (identified from /auth/fetch-modes requester.id)\n        2. **X-HIP-ID** if the requester is HIP (identified from /auth/fetch-modes requester.id)\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientAuthModeQueryResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientAuthModeQueryResponse'\n      responses:\n        '202':\n          description: Request Accepted\n        '400':\n          description: \u003e\n            Invalid request, required attributes not provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  \n  /v0.5/users/auth/on-init:\n    post:\n      tags:\n        - user auth\n        - hip side\n        - hiu side\n      summary: Response to user authentication initialization from HIP\n      description: \u003e\n        If the patient's id is valid, CM will return a transactionId as initialization of user auth. If the request is valid, then 'auth.mode' will convey how the authentication should be done. The authentication can be mediated or direct. For example, if the auth.modeis DIRECT, then HIP/HIU is not expected to send over anything as part of /auth/confirm, rather way for CM to notify them when patient approves so. For other mediated authentication modes, HIP or HIU is epected to send over eiter codes (OTP or similar) or demographic info as part of the /users/auth/confirm request accompanied with the transactionId. Note, for DIRECT authentication, CM will subsequently call /users/auth/notify call (Not spec'd yet)\n        \n          1. **auth.mode** conveys whats the mode of authentication is, and what is expected from HIP/HIU in the subsequent /auth/confirm API call. Possible values, MOBILE_OTP - for OTP sent to mobile,  AADHAAR_OTP - if an OTP was sent as part of Aadhaar authentication. DEMOGRAPHICS - If it is expected that the HIP/HIU sends over demographi details in the /auth/confirm API call. \n          2. **meta.expiry** conveys the expiry time of the token and the authentication session\n          3. **NOTE**, only one of **X-HIP-ID** or **X-HIU-ID** will be sent as part of header, not both. \n          \n        The error section in the body, represents the potential errors that may have occurred. Possible reasons:\n          1. **Patient id is invalid**\n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientAuthInitResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientAuthInitResponse'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: \u003e\n            **Causes:**\n              * required information not provided\n              * neither authInit nor error specified \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'  \n                \n  /v0.5/users/auth/on-confirm:\n    post:\n      tags:\n        - user auth\n        - hip side\n        - hiu side\n      summary: Request sending token, otp or other authentication details from HIP for confirmation\n      description: \u003e\n        This API is called by CMs to confirm authentication of users. \n          1. **auth.accessToken** - is specific to the purpose mentioned in the /auth/init. This token needs to be used for initiating the intended action. For example for HIP initiated linking\n          2. **NOTE**, only one of **X-HIP-ID** or **X-HIU-ID** will be sent as part of header, not both.   \n      parameters:\n        - $ref: \"#/components/parameters/authorization\"\n        - $ref: \"#/components/parameters/X-HIP-ID\"\n        - $ref: \"#/components/parameters/X-HIU-ID\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientAuthConfirmResponse'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/PatientAuthConfirmResponse'\n      responses:\n        '202':\n          description: Request accepted\n        '400':\n          description: \u003e\n            **Causes:**\n              * required details not provided\n              * neither auth nor error specified \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: \u003e\n            **Causes:**\n              * Unauthorized request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: \u003e\n            **Causes:**\n              * Downstream system(s) is down.\n              * Unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'                \n\ncomponents:\n  parameters:\n    authorization:\n      name: Authorization\n      in: header\n      required: true\n      description: Access token which was issued after successful login with gateway auth server, which will be sent by gateway to authenticate itself with API bridge.\n      schema:\n        type: string\n    X-Origin-ID:\n      name: X-Origin-ID\n      in: header\n      description: \u003e\n       Identifier of the health information provider user from which the request came.\n       (Necessity of this header depends on the authentication at the Bridge)\n       If gateway uses JWT authentication, from access token itself originator can be identified.\n      schema:\n        type: string\n    X-HIP-ID:\n      name: X-HIP-ID\n      in: header\n      required: true\n      description: Identifier of the health information provider to which the request was intended.\n      schema:\n        type: string\n    X-HIU-ID:\n      name: X-HIU-ID\n      in: header\n      required: true\n      description: Identifier of the health information user to which the request was intended.\n      schema:\n        type: string\n    X-CM-ID:\n      name: X-CM-ID\n      in: header\n      required: true\n      description: Suffix of the consent manager to which the request was intended.\n      schema:\n        type: string\n    LinkRefNumber:\n      name: linkRefNumber\n      in: path\n      required: true\n      description: Reference number for the link request made earlier.\n      schema:\n        $ref: '#/components/schemas/UuidSchema'\n    ConsentRequestId:\n      name: consentRequestId\n      in: path\n      required: true\n      description: Consent request's identifier\n      schema:\n        type: string\n        format: uuid\n    ConsentId:\n      name: consentId\n      in: path\n      required: true\n      description: Consent request's identifier\n      schema:\n        type: string\n        format: uuid\n  schemas:\n    UuidSchema:\n      type: string\n      format: uuid\n      example: a1s2c932-2f70-3ds3-a3b5-2sfd46b12a18d\n    PatientDiscoveryRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n        - patient\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request. \n          example: \"499a5a4a-7dda-4f20-9b67-e24589627061\"\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          type: string\n          format: uuid\n          description: correlation-Id for patient discovery and subsequent care context linkage\n        patient:\n          type: object\n          required:\n            - id\n            - verifiedIdentifiers\n            - name\n            - gender\n            - yearOfBirth\n          properties:\n            id:\n              type: string\n              example: \u003cpatient-id\u003e@\u003cconsent-manager-id\u003e\n              description: Identifier of patient at consent manager\n            verifiedIdentifiers:\n              type: array\n              items:\n                $ref: '#/components/schemas/Identifier'\n              xml:\n                name: verifiedIdentifiers\n                wrapped: true\n            unverifiedIdentifiers:\n              type: array\n              items:\n                $ref: '#/components/schemas/Identifier'\n              xml:\n                name: unverifiedIdentifiers\n                wrapped: true\n            name:\n              type: string\n              example: \"chandler bing\"\n            gender:\n              $ref: '#/components/schemas/PatientGender'\n            yearOfBirth:\n              type: integer\n              example: 2000\n      xml:\n        name: PatientDiscoveryRequest\n    ErrorResponse:\n      type: object\n      properties:\n        error:\n          $ref: '#/components/schemas/Error'\n    Identifier:\n      type: object\n      required:\n        - type\n        - value\n      properties:\n        type:\n          $ref: '#/components/schemas/IdentifierType'\n        value:\n          type: string\n          example: \"+919800083232\"\n      xml:\n        name: Identifier\n    IdentifierType:\n      type: string\n      enum: [MOBILE, MR]\n    CareContext:\n      type: object\n      required:\n        - referenceNumber\n      properties:\n        referenceNumber:\n          type: string\n      xml:\n        name: Tag\n    PatientLinkReferenceRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n        - patient\n      properties:\n        requestId:\n          type: string\n          format: uuid\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          type: string\n          format: uuid\n        patient:\n          type: object\n          required:\n            - id\n            - referenceNumber\n            - careContexts\n          properties:\n            id:\n              type: string\n              example: hinapatel79@ncg\n            referenceNumber:\n              type: string\n              example: TMH-PUID-001\n            careContexts:\n              type: array\n              items:\n                $ref: '#/components/schemas/CareContext'\n              xml:\n                name: careContexts\n                wrapped: true\n          xml:\n            name: PatientLinkReferenceRequest\n    LinkConfirmationRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - confirmation\n      properties:\n        requestId:\n          type: string\n          format: uuid\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        confirmation:\n          type: object\n          required:\n            - linkRefNumber\n            - token\n          properties:\n            linkRefNumber:\n              type: string\n            token:\n              type: string\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          enum: [1000, 10001]\n          description: a numeric code for the error. \n        message:\n          type: string\n      xml:\n        name: Error\n    consent:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n    DateRange:\n      type: object\n      required:\n        - from\n        - to\n      properties:\n        from:\n          type: string\n          format: date-time\n        to:\n          type: string\n          format: date-time\n    HIPConsentNotification:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - notification\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        notification:\n          type: object\n          required:\n            - status\n            - consentId\n            - signature\n            - consentDetail\n          properties:\n            status:\n              $ref: '#/components/schemas/ConsentStatus'\n            consentId:\n              type: string\n              format: uuid\n            consentDetail:\n              type: object\n              required:\n                - consentId\n                - createdAt\n                - patient\n                - careContexts\n                - purpose\n                - hip\n                - consentManager\n                - hiTypes\n                - permission\n              properties:\n                schemaVersion:\n                  type: string\n                  format: string\n                consentId:\n                  type: string\n                  format: uuid\n                createdAt:\n                  type: string\n                  format: date-time\n                patient:\n                  $ref: '#/components/schemas/ConsentManagerPatientID'\n                careContexts:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - patientReference\n                      - careContextReference\n                    properties:\n                      patientReference:\n                        type: string\n                        example: batman@tmh\n                      careContextReference:\n                        type: string\n                        example: Episode1\n                purpose:\n                  $ref: '#/components/schemas/UsePurpose'\n                hip:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/OrganizationRepresentation'\n                    - xml:\n                        name: hip\n                consentManager:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/OrganizationReference'\n                    - xml:\n                        name: consentManager\n                hiTypes:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/HITypeEnum'\n                permission:\n                  $ref: '#/components/schemas/Permission'\n            signature:\n              type: string\n              example: Signature of CM as defined in W3C standards; Base64 encoded\n    HITypeEnum:\n      type: string\n      enum:\n        - OPConsultation\n        - Prescription\n        - DischargeSummary\n        - DiagnosticReport\n      xml:\n        name: HIType\n    ConsentStatus:\n      type: string\n      enum:\n        - GRANTED\n        - EXPIRED\n        - DENIED\n        - REQUESTED\n        - REVOKED\n    ConsentManagerPatientID:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n          format: \u003cuser-id\u003e@\u003cncg-id\u003e\n          example: batman@ncg\n    UsePurpose:\n      type: object\n      required:\n        - text\n        - code\n      properties:\n        text:\n          type: string\n        code:\n          type: string\n          description: From the fixed set, documented at refUri\n        refUri:\n          type: string\n          format: uri\n    Permission:\n      type: object\n      required:\n        - accessMode\n        - dateRange\n        - dataEraseAt\n        - frequency\n      properties:\n        accessMode:\n          type: string\n          enum: [VIEW, STORE, QUERY, STREAM]\n        dateRange:\n          type: object\n          required:\n            - from\n            - to\n          properties:\n            from:\n              type: string\n              format: date-time\n            to:\n              type: string\n              format: date-time\n        dataEraseAt:\n          type: string\n          format: date-time\n        frequency:\n          type: object\n          properties:\n            unit:\n              type: string\n              enum: [HOUR, WEEK, DAY, MONTH, YEAR]\n            value:\n              type: integer\n            repeats:\n              type: integer\n      xml:\n        name: Permission\n    OrganizationRepresentation:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n      xml:\n        name: OrganizationResponse\n    OrganizationReference:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          xml:\n            attribute: true\n      xml:\n        name: OrganizationReference\n    KeyMaterial:\n      type: object\n      required:\n        - cryptoAlg\n        - curve\n        - dhPublicKey\n        - nonce\n      properties:\n        cryptoAlg:\n          type: string\n          format: string\n          example: ECDH\n        curve:\n          type: string\n          format: string\n          example: Curve25519\n        dhPublicKey:\n          $ref: '#/components/schemas/keyObject'\n        nonce:\n          type: string\n          format: 32 byte string\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n    keyObject:\n      type: object\n      required:\n        - expiry\n        - parameters\n        - keyValue\n      properties:\n        expiry:\n          type: string\n          format: date-time\n        parameters:\n          type: string\n          format: string\n          example: Curve25519/32byte random key\n        keyValue:\n          type: string\n          format: string\n    ConsentArtefactReference:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          example: '\u003cconsent-artefact-id\u003e'\n    HIUConsentNotificationEvent:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - notification\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        notification:\n          type: object\n          required:\n            - status\n            - consentRequestId\n          properties:\n            consentRequestId:\n              type: string\n              example: '\u003cconsent-request-id\u003e'\n            status:\n              $ref: '#/components/schemas/ConsentStatus'\n            consentArtefacts:\n              type: array\n              items:\n                $ref: '#/components/schemas/ConsentArtefactReference'\n              description: if the status is GRANTED or REVOKED, then the consentArtefact references (Ids) must be specified.\n    ConsentRequestInitResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consentRequest:\n          type: object\n          required:\n            - id\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: id of the consent-request created\n              example: f29f0e59-8388-4698-9fe6-05db67aeac46\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n      xml:\n        name: ConsentRequestInitResponse\n    TimestampSchema:\n      type: string\n      format: date-time\n      description: Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ\n    RequestReference:\n      type: object\n      required:\n        - requestId\n      properties:\n        requestId: \n          type: string\n          format: uuid\n          description: the requestId that was passed\n    HeartbeatResponse:\n      type: object\n      required:\n        - timestamp\n        - status\n      properties:\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        status:\n          type: string\n          enum:\n            - UP\n            - DOWN\n        error:\n          $ref: '#/components/schemas/Error'\n      xml:\n        name: HeartbeatResponse\n    HIUConsentRequestStatus:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consentRequest:\n          type: object\n          required:\n            - id\n            - status\n          properties:\n            id:\n              type: string\n              example: '\u003cconsent-request-id\u003e'\n            status:\n              $ref: '#/components/schemas/ConsentStatus'\n            consentArtefacts:\n              type: array\n              items:\n                $ref: '#/components/schemas/ConsentArtefactReference'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    ConsentArtefactResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        consent:\n          type: object\n          required:\n            - status\n            - consentDetail\n            - signature\n          properties:\n            status:\n              $ref: '#/components/schemas/ConsentStatus'\n            consentDetail:\n              type: object\n              required:\n                - consentId\n                - createdAt\n                - patient\n                - careContexts\n                - purpose\n                - hip\n                - hiu\n                - hiTypes\n                - permission\n              properties:\n                schemaVersion:\n                  type: string\n                  format: string\n                consentId:\n                  type: string\n                  format: uuid\n                createdAt:\n                  type: string\n                  format: date-time\n                patient:\n                  $ref: '#/components/schemas/ConsentManagerPatientID'\n                careContexts:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - patientReference\n                      - careContextReference\n                    properties:\n                      patientReference:\n                        type: string\n                        example: batman@tmh\n                      careContextReference:\n                        type: string\n                        example: Episode1\n                purpose:\n                  $ref: '#/components/schemas/UsePurpose'\n                hip:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/OrganizationRepresentation'\n                    - xml:\n                        name: hip\n                hiu:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/OrganizationRepresentation'\n                    - xml:\n                        name: hiu\n                consentManager:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/OrganizationRepresentation'\n                    - xml:\n                        name: consentManager\n                requester:\n                  $ref: '#/components/schemas/Requester'\n                hiTypes:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/HITypeEnum'\n                permission:\n                  $ref: '#/components/schemas/Permission'\n            signature:\n              type: string\n              example: Signature of CM as defined in W3C standards; Base64 encoded\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    Requester:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: Dr. Manju\n        identifier:\n          type: object\n          properties:\n            type: \n              type: string\n              example: REGNO\n            value:\n              type: string\n              example: \"MH1001\"\n            system:\n              type: string\n              example: https://www.mciindia.org\n    HIPHealthInformationRequest:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - transactionId\n        - hiRequest\n      properties:\n        requestId:\n          $ref: '#/components/schemas/UuidSchema'\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        transactionId:\n          $ref: '#/components/schemas/UuidSchema'\n        hiRequest: \n          type: object\n          required:\n            - consent\n            - dataPushUrl\n            - keyMaterial\n            - dateRange\n          properties:\n            consent:\n              $ref: '#/components/schemas/consent'\n            dateRange:\n              $ref: '#/components/schemas/DateRange'\n            dataPushUrl:\n              type: string\n            keyMaterial:\n              $ref: '#/components/schemas/KeyMaterial'\n    HIUHealthInformationRequestResponse:\n        type: object\n        required:\n          - requestId\n          - timestamp\n          - resp\n        properties:\n          requestId:\n            $ref: '#/components/schemas/UuidSchema'\n          timestamp:\n            $ref: '#/components/schemas/TimestampSchema'\n          hiRequest:\n            type: object\n            required:\n              - transactionId\n              - sessionStatus\n            properties:\n              transactionId:\n                $ref: '#/components/schemas/UuidSchema'\n              sessionStatus:\n                type: string\n                enum:\n                - REQUESTED\n                - ACKNOWLEDGED\n          error: \n            $ref: '#/components/schemas/Error'\n          resp:\n            $ref: '#/components/schemas/RequestReference'\n    PatientIdentificationResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        patient:\n          type: object\n          required:\n            - id\n            - name\n          properties:\n            id: \n              type: string\n              example: hinapatel79@ncg\n            name:\n              type: string\n              example: Hina Patel\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n      xml:\n        name: PatientIdentificationResponse\n    DataNotification:\n      type: object\n      required:\n        - transactionId\n        - entries\n        - keyMaterial\n        - pageNumber\n        - pageCount\n      properties:\n        pageNumber:\n          type: integer\n          description: Current page number.\n        pageCount:\n          type: integer\n          description: Total number of pages.\n        transactionId:\n          type: string\n          format: uuid\n          description: Transaction Id issued when data requested.\n        entries:\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/EntryContent'\n              - $ref: '#/components/schemas/EntryLink'\n        keyMaterial:\n          $ref: '#/components/schemas/KeyMaterial'\n    EntryContent:\n      type: object\n      required:\n        - content\n        - media\n        - checksum\n        - careContextReference\n      properties:\n        content:\n          type: string\n          description: Encrypted content\n          example: Encrypted content of data packaged in FHIR bundle\n        media:\n          type: string\n          enum: ['application/fhir+json']\n          description: mimetype of the content.\n        checksum:\n          type: string\n          description: Md5 checksum of the content before encryption\n        careContextReference:\n          type: string\n          example: RVH1008\n          description: care context reference number.\n    EntryLink:\n      type: object\n      required:\n        - link\n        - media\n        - checksum\n        - careContextReference\n      properties:\n        link:\n          type: string\n          description: Encrypted content\n          example: https://data-from.net/sa2321afaf12e13\n        media:\n          type: string\n          enum: ['application/fhir+json']\n          description: mimetype of the content.\n        checksum:\n          type: string\n          description: Md5 checksum of the content before encryption\n        careContextReference:\n          type: string\n          example: NCC1701\n          description: care context reference number.\n    \n    PatientAuthInitResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        auth:\n          type: object\n          required:\n            - transactionId\n            - mode\n          properties:\n            transactionId:\n              type: string\n            mode:\n              $ref: '#/components/schemas/AuthenticationMode'\n            meta:\n              $ref: '#/components/schemas/AuthMeta'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    \n    AuthenticationMode:\n      type: string\n      enum: ['MOBILE_OTP', 'DIRECT', 'DEMOGRAPHICS', 'AADHAAR_OTP']\n      description: \u003e \n        Subjected to CM specific capability\n         1. MOBILE_OTP - for SMS OTP\n         2. DIRECT - for auth through apps (usually direct)\n         3. AADHAAR_OTP - for auth using OTP sent to Aadhaar number\n         4. DEMOGRAPHICS - for auth using demographic.\n    \n    AuthMeta:\n      type: object\n      required:\n        - mode\n        - expiry\n      properties:\n        hint:\n          type: string\n        expiry:\n          type: string\n          example: \"2019-12-30T12:01:55Z\"\n      xml:\n        name: Meta\n        \n    PatientAuthConfirmResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        auth:\n          type: object\n          description: \u003e\n            depending on the purpose of auth, as specified in /auth/init, the response may include the following \n              1. LINK - only returns **accessToken**\n              2. KYC - only returns **patient**\n              3. KYC_AND_LINK - returns both **accessToken** and **patient**\n          properties:\n            accessToken :\n              type: string\n              description: access token for initialization of subsequent action. \n            patient:\n              $ref: '#/components/schemas/PatientDemographicResponse'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    \n    PatientAddress:\n      type: object\n      properties:\n        line:\n          type: string\n        district:\n          type: string\n        state:\n          type: string\n        pincode:\n          type: string\n          \n    PatientGender:\n      type: string\n      enum: [M, F, O, U]\n    \n    PatientDemographicResponse:\n      type: object\n      required:\n        - id\n        - name\n        - gender\n        - yearOfBirth\n      properties:\n        id:\n          type: string\n          example: \u003cpatient-id\u003e@\u003cconsent-manager-id\u003e\n          description: PHR Identifier of patient at consent manager\n        name:\n          type: string\n          example: \"Hina Patel\"\n        gender:\n          $ref: '#/components/schemas/PatientGender'\n        yearOfBirth:\n          type: integer\n          example: 2000\n        address:\n          $ref: '#/components/schemas/PatientAddress'\n        identifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Identifier'\n          xml:\n            name: identifiers\n            wrapped: true\n          \n    PatientCareContextLinkResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        acknowledgement:\n          type: object\n          required:\n            - status\n          properties:\n            status: \n              type: string\n              enum:\n              - SUCCESS\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'\n    \n    PatientAuthPurpose:\n      type: string\n      enum: [LINK, KYC, KYC_AND_LINK]\n      description: what is the purpose of user auth\n    \n    PatientAuthModeQueryResponse:\n      type: object\n      required:\n        - requestId\n        - timestamp\n        - resp\n      properties:\n        requestId:\n          type: string\n          format: uuid\n          description: a nonce, unique for each HTTP request\n          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd\n        timestamp:\n          $ref: '#/components/schemas/TimestampSchema'\n        auth:\n          type: object\n          required:\n            - purpose\n            - modes\n          properties:\n            purpose:\n              $ref: '#/components/schemas/PatientAuthPurpose'\n            modes: \n              type: array\n              items:\n                $ref: '#/components/schemas/AuthenticationMode'\n        error: \n          $ref: '#/components/schemas/Error'\n        resp:\n          $ref: '#/components/schemas/RequestReference'",
			"canonicalURL": "/github.com/iSPIRT/healthstack@b096f1f2d514a6c32043294d904c6fc1393a7c60/-/blob/spec/health-repository.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/iSPIRT/healthstack/blob/b096f1f2d514a6c32043294d904c6fc1393a7c60/spec/health-repository.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/v0.5/consents/on-fetch\": post: requestBody: contents: application/json: generate schema: field consent: field consentDetail: field consentManager: allOf: schema type mismatch: object and ",
	"NotImplemented": [
		"complex anyOf"
	]
}