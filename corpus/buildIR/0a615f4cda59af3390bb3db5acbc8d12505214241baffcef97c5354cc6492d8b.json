{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/gambitcomm.local/mimic/21.00/openapi.yaml",
			"byteSize": 317704,
			"content": "openapi: 3.0.0\nservers:\n  - url: http://gambitcomm.local\n  - description: Gambit Communications MIMIC simulator REST API\n    url: http://127.0.0.1\ninfo:\n  contact:\n    email: support@gambitcomm.com\n  description: This is the API for MIMIC client to connect to MIMIC daemon.\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://www.gambitcomm.com/terms/\n  title: MIMIC REST API\n  version: \"21.00\"\n  x-apisguru-categories:\n    - iot\n  x-logo:\n    url: https://www.gambitcomm.com/site/images/logo.png\n  x-origin:\n    - format: openapi\n      url: https://www.gambitcomm.com/docs/mimic.yaml\n      version: \"3.0\"\n  x-providerName: gambitcomm.local\n  x-serviceName: mimic\nexternalDocs:\n  description: Find out more about Gambit\n  url: https://www.gambitcomm.com/site/about.php\nsecurity:\n  - basicAuth: []\npaths:\n  \"/mimic/access/add/{user}/{agents}/{mask}\":\n    post:\n      description: Adds/Overwrites the user entry in the access control database.\n      operationId: access_add\n      parameters:\n        - description: Username of the simulator hosting system\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: Agent range in minimal range representation\n          in: path\n          name: agents\n          required: true\n          schema:\n            type: string\n        - description: Currently not used\n          in: path\n          name: mask\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Adds/Overwrites the user entry in the access control database.\n      tags:\n        - Access\n  \"/mimic/access/del/{user}\":\n    delete:\n      description: Using '*' for user clears all the users.\n      operationId: access_del\n      parameters:\n        - description: username of the simulator hosting system\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Clears a users entry from access control database.\n      tags:\n        - Access\n  /mimic/access/get/acldb:\n    get:\n      description: If nothing is specified then this returns \"\".\n      operationId: access_get_acldb\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the current access control database in use.\n      tags:\n        - Access\n  /mimic/access/get/admindir:\n    get:\n      description: If nothing is specified in admin/settings.cfg then returns \"\". If no admin directory is specified then the shared area will be used where needed (e.g. for persistent info, access control data files etc. )\n      operationId: access_get_admindir\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the current admin directory.\n      tags:\n        - Access\n  /mimic/access/get/adminuser:\n    get:\n      description: If nothing is specified in admin/settings.cfg then returns \"\".\n      operationId: access_get_adminuser\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the current administrator.\n      tags:\n        - Access\n  /mimic/access/get/enabled:\n    get:\n      description: 0 indicates that it is disabled, 1 indicates it is enabled.\n      operationId: access_get_enabled\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the state of access control checking.\n      tags:\n        - Access\n  /mimic/access/list:\n    get:\n      description: Each entry consists of user, agents (in minimal range representation) and access mask (not used currently).\n      operationId: access_list\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AccessEntry\"\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns an array of entries.\n      tags:\n        - Access\n  \"/mimic/access/load/{filename}\":\n    put:\n      description: If filename is not specified then the currently set 'acldb' parameter is used.\n      operationId: access_load\n      parameters:\n        - description: Filename to load\n          in: path\n          name: filename\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Loads the specified file for access control data.\n      tags:\n        - Access\n  \"/mimic/access/save/{filename}\":\n    put:\n      description: If filename is not specified then the currently set 'acldb' parameter is used.\n      operationId: access_save\n      parameters:\n        - description: Filename to save\n          in: path\n          name: filename\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Saves current access control data in specified file.\n      tags:\n        - Access\n  \"/mimic/access/set/acldb/{databaseName}\":\n    put:\n      description: This will be used for subsequent load and save operations.\n      operationId: access_set_acldb\n      parameters:\n        - description: Database name to use\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Allows setting the name of the current access control database.\n      tags:\n        - Access\n  \"/mimic/access/set/enabled/{enabledOrNot}\":\n    put:\n      description: 0 indicates disabled, 1 indicates enabled.\n      operationId: access_set_enabled\n      parameters:\n        - description: indicator\n          in: path\n          name: enabledOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Allows the user to enable/disable the access control check.\n      tags:\n        - Access\n  \"/mimic/agent/{agentNum}/add/{IP}\":\n    post:\n      description: Add an agent.\n      operationId: new\n      parameters:\n        - description: Agent to return the primary IP\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Primary IP\n          in: path\n          name: IP\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: Triplet array\n              items:\n                $ref: \"#/components/schemas/Triplet\"\n              type: array\n        description: Created agent object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Add an agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/from/add/{IP}/{port}\":\n    post:\n      description: An empty ipaddress or 0.0.0.0 both imply any address. Similarly an empty port or 0 both imply any port. For agents with source-address-indexing enabled, messages which do not match any source address will be discarded with an ERROR message, similar to community string mismatches.\n      operationId: from_add\n      parameters:\n        - description: Agent to add the IP source\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: IP of the port, 0.0.0.0 for any\n          in: path\n          name: IP\n          required: true\n          schema:\n            type: string\n        - description: port of the source, 0 for any\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Add a source address that the agent will accept messages from.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/from/delete/{IP}/{port}\":\n    delete:\n      description: An empty ipaddress or 0.0.0.0 both imply any address. Similarly an empty port or 0 both imply any port. For agents with source-address-indexing enabled, messages which do not match any source address will be discarded with an ERROR message, similar to community string mismatches.\n      operationId: from_del\n      parameters:\n        - description: Agent to delete the IP source\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: IP of the source\n          in: path\n          name: IP\n          required: true\n          schema:\n            type: string\n        - description: port of the source\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: delete a source address that the agent will accept messages from.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/from/list\":\n    get:\n      description: This in effect implements source-address-indexing, where 2 agents with the same address can be configured, each accepting messages from different management stations.\n      operationId: from_list\n      parameters:\n        - description: Agent to show the IP sources\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/IPSource\"\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: List the source addresses that the agent will accept messages from.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/changed\":\n    get:\n      description: has the agent value space changed?\n      operationId: get_changed\n      parameters:\n        - description: Agent to return the indicator\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: has the agent value space changed?\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/config_changed\":\n    get:\n      description: has the lab configuration changed?\n      operationId: get_config_changed\n      parameters:\n        - description: Agent to return the indicator\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: has the lab configuration changed?\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/delay\":\n    get:\n      description: The minimum granularity is 10 msec.\n      operationId: get_delay\n      parameters:\n        - description: Agent to return the delay time\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/start\"\n              parameters:\n                agentNum: $request.body#/agentNum\n        \"400\":\n          description: Invalid agent number value\n      summary: one-way transit delay in msec.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/drops\":\n    get:\n      description: drop rate (every N-th PDU). 0 means no drops.\n      operationId: get_drops\n      parameters:\n        - description: Agent to return the drop rate\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: drop rate (every N-th PDU). 0 means no drops.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/host\":\n    get:\n      description: Currently, only IPv4 addresses are allowed as the main address of the agent, but both IPv4 and IPv6 addresses are allowed as IP aliases for the agent.\n      operationId: get_host\n      parameters:\n        - description: Agent to return the primary IP\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: string\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/value/get/{object}/{instance}/{variable}\"\n              parameters:\n                agentNum: $request.body#/agentNum\n                instance: $response.body#\n                object: ipAdEntIfIndex\n                variable: v\n        \"400\":\n          description: Invalid agent number value\n      summary: host address of the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/inform_timeout\":\n    get:\n      description: The agent will retransmit INFORM PDUs at this interval until it has received a reply from the manager.\n      operationId: get_inform_timeout\n      parameters:\n        - description: Agent to return the timeout setting\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: timeout in seconds for retransmitting INFORM PDUs.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/interface\":\n    get:\n      description: network interface card for the agent.\n      operationId: get_interface\n      parameters:\n        - description: Agent to return the primary interface\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: string\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/mask\"\n              parameters:\n                agentNum: $request.body#/agentNum\n        \"400\":\n          description: Invalid agent number value\n      summary: network interface card for the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/mask\":\n    get:\n      description: subnet mask of the agent.\n      operationId: get_mask\n      parameters:\n        - description: Agent to return the primary interface\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: string\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/port\"\n              parameters:\n                agentNum: $request.body#/agentNum\n        \"400\":\n          description: Invalid agent number value\n      summary: subnet mask of the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/mibs\":\n    get:\n      description: set of MIBs, simulations and scenarios\n      operationId: get_mibs\n      parameters:\n        - description: Agent to return the MIB triplets\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Triplet\"\n                type: array\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/sim\"\n              parameters:\n                agentNum: $request.body#/agentNum\n        \"400\":\n          description: Invalid agent number value\n      summary: set of MIBs, simulations and scenarios\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/num_starts\":\n    get:\n      description: This count is incremented each time an agent starts. It affects the SNMPv3 EngineBoots parameter.\n      operationId: get_number_starts\n      parameters:\n        - description: Agent to return the count\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: number of starts for the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/oiddir\":\n    get:\n      description: MIB directory of the agent.\n      operationId: get_oiddir\n      parameters:\n        - description: Agent to return the directory path\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: MIB directory of the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/owner\":\n    get:\n      description: owner of the agent.\n      operationId: get_owner\n      parameters:\n        - description: Agent to return the owner\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: owner of the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/pdusize\":\n    get:\n      description: The limit for this configurable is 65536.\n      operationId: get_pdusize\n      parameters:\n        - description: Agent to return the PDU size\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: maximum PDU size.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/port\":\n    get:\n      description: port number\n      operationId: get_port\n      parameters:\n        - description: Agent to return the primary SNMP port\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/protocol\"\n              parameters:\n                agentNum: $request.body#/agentNum\n        \"400\":\n          description: Invalid agent number value\n      summary: port number\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/privdir\":\n    get:\n      description: private directory of the agent.\n      operationId: get_privdir\n      parameters:\n        - description: Agent to return the directory path\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: private directory of the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/protocol\":\n    get:\n      description: protocols supported by agent as an array of strings\n      operationId: get_protocols\n      parameters:\n        - description: Agent to return the protocols arrary\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/protocol/{prot}/get/config\"\n              parameters:\n                agentNum: $request.body#/agentNum\n                prot: $response.body#\n        \"400\":\n          description: Invalid agent number value\n      summary: protocols supported by agent\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/read\":\n    get:\n      description: read community string\n      operationId: get_read_community\n      parameters:\n        - description: Agent to return the SNMP read community string\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/write\"\n              parameters:\n                agentNum: $request.body#/agentNum\n        \"400\":\n          description: Invalid agent number value\n      summary: read community string\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/scen\":\n    get:\n      description: first scenario name\n      operationId: get_scen\n      parameters:\n        - description: Agent to return the first scenario number\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: first scenario name\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/sim\":\n    get:\n      description: first simulation name\n      operationId: get_sim\n      parameters:\n        - description: Agent to return the first simulation name\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/scen\"\n              parameters:\n                agentNum: $request.body#/agentNum\n        \"400\":\n          description: Invalid agent number value\n      summary: first simulation name\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/start\":\n    get:\n      description: relative start time\n      operationId: get_starttime\n      parameters:\n        - description: Agent to return the relative start time\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/mibs\"\n              parameters:\n                agentNum: $request.body#/agentNum\n        \"400\":\n          description: Invalid agent number value\n      summary: relative start time\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/state\":\n    get:\n      description: 0-Unknown 1-Running 2-Stopped 3-Halted 4-Paused 5-Deleted 6-Stopping\n      operationId: get_agent_state\n      parameters:\n        - description: Agent to return the state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: current running state of the agent\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/state_changed\":\n    get:\n      description: has the agent state changed?\n      operationId: get_state_changed\n      parameters:\n        - description: Agent to return the indicator\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: has the agent state changed?\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/statistics\":\n    get:\n      description: The statistics are returned as 64-bit decimal numbers for the following statistics, total, discarded, error, GET, GETNEXT, SET, GETBULK, trap, GET variables, GETNEXT variables, SET variables, GETBULK variables, INFORM sent, INFORM re-sent, INFORM timed out, INFORM acked, INFORM REPORT\n      operationId: get_statistics\n      parameters:\n        - description: Agent to return the statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: current statistics of the agent instance\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/trace\":\n    get:\n      description: SNMP PDU tracing\n      operationId: get_trace\n      parameters:\n        - description: Agent to return the indicator\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: SNMP PDU tracing\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/validate\":\n    get:\n      description: Is a bitmask in which with the following bits (from LSB) check for type, length, range, access\n      operationId: get_validate\n      parameters:\n        - description: Agent to return the bitmask integer\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: SNMP SET validation policy.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/get/write\":\n    get:\n      description: write community string\n      operationId: get_write_community\n      parameters:\n        - description: Agent to return the SNMP write community string\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/delay\"\n              parameters:\n                agentNum: $request.body#/agentNum\n        \"400\":\n          description: Invalid agent number value\n      summary: write community string\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/halt\":\n    put:\n      description: Halt the current agent.\n      operationId: halt\n      parameters:\n        - description: Agent to return the primary IP\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Halt the current agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/ipalias/add/{IP}/{port}/{mask}/{interface}\":\n    post:\n      description: port defaults to 161 if not specified. mask defaults to the class-based network mask for the address. interface defaults to the default network interface.  If port is set to 0, the system will automatically select a port number. This is useful for client-mode protocols, such as TFTP or TOD. Upon start of an IP alias with a 0 (auto-assigned) port number, its port will change to contain the value of the selected system port.\n      operationId: add_ipalias\n      parameters:\n        - description: Agent to add the IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: IP address , IPv4 or IPv6\n          in: path\n          name: IP\n          required: true\n          schema:\n            type: string\n        - description: SNMP port , 0 or empty for default\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Netmask, empty for default\n          in: path\n          name: mask\n          required: true\n          schema:\n            type: string\n        - description: Interface. Empty for default\n          in: path\n          name: interface\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Adds a new ipalias for the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/ipalias/delete/{IP}/{port}\":\n    delete:\n      description: port defaults to 161 if not specified.\n      operationId: del_ipalias\n      parameters:\n        - description: Agent to delete the IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: IP address , IPv4 or IPv6\n          in: path\n          name: IP\n          required: true\n          schema:\n            type: string\n        - description: SNMP port , 0 or empty for default\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Deletes an existing ipalias from the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/ipalias/list\":\n    get:\n      description: The agent host address (set with mimic agent set host) is not in this list, since it is already accessible separately with mimic agent get host.\n      operationId: list_ipaliases\n      parameters:\n        - description: Agent to show the IP alias list\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/IPAlias\"\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Lists all the additional ipaliases configured for the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/ipalias/start/{IP}/{port}\":\n    put:\n      description: port defaults to 161 if not specified.\n      operationId: start_ipalias\n      parameters:\n        - description: Agent to start the IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: IP address , IPv4 or IPv6\n          in: path\n          name: IP\n          required: true\n          schema:\n            type: string\n        - description: SNMP port , 0 or empty for default\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Starts an existing ipalias for the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/ipalias/status/{IP}/{port}\":\n    get:\n      description: port defaults to 161 if not specified.\n      operationId: status_ipalias\n      parameters:\n        - description: Agent to show status of the IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: IP address , IPv4 or IPv6\n          in: path\n          name: IP\n          required: true\n          schema:\n            type: string\n        - description: SNMP port , 0 or empty for default\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the status (0=down, 1=up) of an existing ipalias for the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/ipalias/stop/{IP}/{port}\":\n    put:\n      description: port defaults to 161 if not specified.\n      operationId: stop_ipalias\n      parameters:\n        - description: Agent to stop the IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: IP address , IPv4 or IPv6\n          in: path\n          name: IP\n          required: true\n          schema:\n            type: string\n        - description: SNMP port , 0 or empty for default\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Stops an existing ipalias for the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/pause\":\n    put:\n      description: Pause the current agent.\n      operationId: pause_now\n      parameters:\n        - description: Agent to return the primary IP\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Pause the current agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/protocol/msg/coap/get/args\":\n    get:\n      description: Agent's COAP configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_coap_get_args\n      parameters:\n        - description: Agent to show the COAP argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's COAP argument structure\n      tags:\n        - COAP\n  \"/mimic/agent/{agentNum}/protocol/msg/coap/get/config\":\n    get:\n      description: Agent's COAP configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_coap_get_config\n      parameters:\n        - description: Agent to show the COAP configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigCOAP\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's COAP configuration\n      tags:\n        - COAP\n  \"/mimic/agent/{agentNum}/protocol/msg/coap/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_coap_get_statistics\n      parameters:\n        - description: Agent to show COAP statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's COAP statistics\n      tags:\n        - COAP\n  \"/mimic/agent/{agentNum}/protocol/msg/coap/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_coap_get_trace\n      parameters:\n        - description: Agent to show whether COAP tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigCOAP\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's COAP traffic tracing\n      tags:\n        - COAP\n  \"/mimic/agent/{agentNum}/protocol/msg/coap/set/config/{argument}/{value}\":\n    put:\n      description: Agent's COAP configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_coap_set_config\n      parameters:\n        - description: Agent to set the COAP configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the COAP configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the COAP configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's COAP configuration\n      tags:\n        - COAP\n  \"/mimic/agent/{agentNum}/protocol/msg/coap/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_coap_set_trace\n      parameters:\n        - description: Agent to set the COAP tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the COAP tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's COAP traffic tracing\n      tags:\n        - COAP\n  \"/mimic/agent/{agentNum}/protocol/msg/dhcp/get/args\":\n    get:\n      description: Agent's DHCP configuration particulars\n      operationId: protocol_dhcp_get_args\n      parameters:\n        - description: Agent to show the DHCP argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's DHCP argument structure\n      tags:\n        - DHCP\n  \"/mimic/agent/{agentNum}/protocol/msg/dhcp/get/config\":\n    get:\n      description: Agent's DHCP configuration hwaddr,classid,add_options,script\n      operationId: protocol_dhcp_get_config\n      parameters:\n        - description: Agent to show the DHCP configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigDHCP\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's DHCP configuration\n      tags:\n        - DHCP\n  \"/mimic/agent/{agentNum}/protocol/msg/dhcp/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_dhcp_get_statistics\n      parameters:\n        - description: Agent to show DHCP statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's DHCP statistics\n      tags:\n        - DHCP\n  \"/mimic/agent/{agentNum}/protocol/msg/dhcp/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_dhcp_get_trace\n      parameters:\n        - description: Agent to show whether DHCP tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigDHCP\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's DHCP traffic tracing\n      tags:\n        - DHCP\n  \"/mimic/agent/{agentNum}/protocol/msg/dhcp/params\":\n    get:\n      description: DHCP-OFFER message parameters\n      operationId: protocol_dhcp_params\n      parameters:\n        - description: Agent to show DHCP DHCP-OFFER message\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: object\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the parameters configured by the server in its DHCP-OFFER message\n      tags:\n        - DHCP\n  \"/mimic/agent/{agentNum}/protocol/msg/dhcp/set/config/{argument}/{value}\":\n    put:\n      description: Agent's DHCP configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_dhcp_set_config\n      parameters:\n        - description: Agent to set the DHCP configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the DHCP configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the DHCP configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's DHCP configuration\n      tags:\n        - DHCP\n  \"/mimic/agent/{agentNum}/protocol/msg/dhcp/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_dhcp_set_trace\n      parameters:\n        - description: Agent to set the DHCP tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the DHCP tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's DHCP traffic tracing\n      tags:\n        - DHCP\n  \"/mimic/agent/{agentNum}/protocol/msg/ipmi/get/args\":\n    get:\n      description: Agent's IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_ipmi_get_args\n      parameters:\n        - description: Agent to show the IPMI argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's IPMI argument structure\n      tags:\n        - IPMI\n  \"/mimic/agent/{agentNum}/protocol/msg/ipmi/get/config\":\n    get:\n      description: Agent's IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_ipmi_get_config\n      parameters:\n        - description: Agent to show the IPMI configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigIPMI\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's IPMI configuration\n      tags:\n        - IPMI\n  \"/mimic/agent/{agentNum}/protocol/msg/ipmi/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_ipmi_get_statistics\n      parameters:\n        - description: Agent to show IPMI statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's IPMI statistics\n      tags:\n        - IPMI\n  \"/mimic/agent/{agentNum}/protocol/msg/ipmi/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_ipmi_get_trace\n      parameters:\n        - description: Agent to show whether IPMI tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigIPMI\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's IPMI traffic tracing\n      tags:\n        - IPMI\n  \"/mimic/agent/{agentNum}/protocol/msg/ipmi/get/{attr}\":\n    get:\n      description: Attribute can be working_authtype ,session_id, outbound_seq, inbound_seq , field_N\n      operationId: protocol_ipmi_get_attr\n      parameters:\n        - description: Agent to set the IPMI tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Attribute\n          in: path\n          name: attr\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the outgoing message's attributes\n      tags:\n        - IPMI\n  \"/mimic/agent/{agentNum}/protocol/msg/ipmi/set/config/{argument}/{value}\":\n    put:\n      description: Agent's IPMI configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_ipmi_set_config\n      parameters:\n        - description: Agent to set the IPMI configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the IPMI configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the IPMI configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's IPMI configuration\n      tags:\n        - IPMI\n  \"/mimic/agent/{agentNum}/protocol/msg/ipmi/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_ipmi_set_trace\n      parameters:\n        - description: Agent to set the IPMI tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the IPMI tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's IPMI traffic tracing\n      tags:\n        - IPMI\n  \"/mimic/agent/{agentNum}/protocol/msg/ipmi/set/{attr}/{value}\":\n    put:\n      description: Attribute can be working_authtype ,session_id, outbound_seq, inbound_seq , field_N\n      operationId: protocol_ipmi_set_attr\n      parameters:\n        - description: Agent to set the IPMI tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Attribute\n          in: path\n          name: attr\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the outgoing message's attributes\n      tags:\n        - IPMI\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/get/protstate\":\n    get:\n      description: 0 - stopped, 2 - disconnected, 3 - connecting, 4 - connected, 5 - waiting for CONNACK, 6 - waiting for SUBACK, 7 - CONNACK received, in steady state\n      operationId: protocol_mqtt_client_get_protstate\n      parameters:\n        - description: Agent to show MQTT state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's MQTT TCP connection state\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/get/state\":\n    get:\n      description: 0 means stopped, 1 means running\n      operationId: protocol_mqtt_client_get_state\n      parameters:\n        - description: Agent to show MQTT state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's MQTT state\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/message/card\":\n    get:\n      description: 0 or more\n      operationId: protocol_mqtt_client_message_card\n      parameters:\n        - description: Agent to show MQTT message state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's current messages' cardinality\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/message/get/{msgNum}/{attr}\":\n    get:\n      description: Attribute can be topic, interval, count, sent , pre, post, properties(list of PUBLISH properties), properties.i (i-th PUBLISH property), properties.PROP-NAME (PUBLISH property with name PROP-NAME)\n      operationId: protocol_mqtt_client_message_get\n      parameters:\n        - description: Agent to show MQTT state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Message Number\n          in: path\n          name: msgNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Attribute\n          in: path\n          name: attr\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's message attributes\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/message/set/{msgNum}/{attr}/{value}\":\n    put:\n      description: Attribute can not be sent or properties . Use set/{msgNum}/count/{value} together with get/{msgNum}/count to throttle the outgoing MQTT message to the broker.\n      operationId: protocol_mqtt_client_message_set\n      parameters:\n        - description: Agent to show MQTT state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Message Number\n          in: path\n          name: msgNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Attribute\n          in: path\n          name: attr\n          required: true\n          schema:\n            type: string\n        - description: Value\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's message attributes\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/resubscribe/{subNum}\":\n    put:\n      description: Restarts a subscription\n      operationId: protocol_mqtt_client_resubscribe\n      parameters:\n        - description: Agent to change MQTT state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Subscription Number\n          in: path\n          name: subNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Restart receiving messages from a subcription of the agent\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/runtime/abort\":\n    put:\n      description: Abort a connection\n      operationId: protocol_mqtt_client_runtime_abort\n      parameters:\n        - description: Agent to set MQTT behavior\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Abort agent's MQTT TCP session without sending DISCONNECT command\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/runtime/connect\":\n    put:\n      description: Start a connection\n      operationId: protocol_mqtt_client_runtime_connect\n      parameters:\n        - description: Agent to set MQTT behavior\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Start agent's MQTT TCP session\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/runtime/disconnect\":\n    put:\n      description: Graceful disconnect\n      operationId: protocol_mqtt_client_runtime_disconnect\n      parameters:\n        - description: Agent to set MQTT behavior\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Disconnect agent's MQTT TCP session by sending DISCONNECT command\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/broker/{brokerAddr}\":\n    put:\n      description: Broker IP address\n      operationId: protocol_mqtt_client_set_broker\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Broker address\n          in: path\n          name: brokerAddr\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT TCP connection target broker\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/cleansession/{cleanOrNot}\":\n    put:\n      description: 1 for clean session , 0 not\n      operationId: protocol_mqtt_client_set_cleansession\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Clean session\n          in: path\n          name: cleanOrNot\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT session\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/clientid/{clientID}\":\n    put:\n      description: MQTT client ID\n      operationId: protocol_mqtt_client_set_clientid\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Client ID\n          in: path\n          name: clientID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT client ID\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/keepalive/{aliveTime}\":\n    put:\n      description: Keep alive the TCP connection\n      operationId: protocol_mqtt_client_set_keepalive\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: period to send keepalive messages\n          in: path\n          name: aliveTime\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT TCP keepalive\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/on_disconnect/{action}\":\n    put:\n      description: Action to take when MQTT session is disconnected\n      operationId: protocol_mqtt_client_set_on_disconnect\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Action to take\n          in: path\n          name: action\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT disconnection action\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/password/{password}\":\n    put:\n      description: Client password\n      operationId: protocol_mqtt_client_set_password\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Password\n          in: path\n          name: password\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT client password\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/port/{port}\":\n    put:\n      description: target TCP port\n      operationId: protocol_mqtt_client_set_port\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: TCP port\n          in: path\n          name: port\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT TCP connection target port\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/username/{username}\":\n    put:\n      description: Client username\n      operationId: protocol_mqtt_client_set_username\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: User name\n          in: path\n          name: username\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT client username\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willmsg/{msg}\":\n    put:\n      description: Will message\n      operationId: protocol_mqtt_client_set_willmsg\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Will message\n          in: path\n          name: msg\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT client's will\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willqos/{qos}\":\n    put:\n      description: QOS field\n      operationId: protocol_mqtt_client_set_willqos\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Quality of service field\n          in: path\n          name: qos\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT will message's QOS field\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willretain/{retain}\":\n    put:\n      description: Retaining will\n      operationId: protocol_mqtt_client_set_willretain\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Retaining will\n          in: path\n          name: retain\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT retained will\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/set/willtopic/{topic}\":\n    put:\n      description: Will topic for the will message\n      operationId: protocol_mqtt_client_set_willtopic\n      parameters:\n        - description: Agent to set MQTT config\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: topic\n          in: path\n          name: topic\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT client will's topic\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/subscribe/card\":\n    get:\n      description: 0 or more\n      operationId: protocol_mqtt_client_subscribe_card\n      parameters:\n        - description: Agent to show MQTT subscription state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's current subscriptions' cardinality\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/subscribe/get/{subNum}/{attr}\":\n    get:\n      description: Attribute can be topic, properties(list of SUBSCRIBE properties), properties.i (i-th SUBSCRIBE property), properties.PROP-NAME (SUBSCRIBE property with name PROP-NAME)\n      operationId: protocol_mqtt_client_subscribe_get\n      parameters:\n        - description: Agent to show MQTT state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Subscribe Number\n          in: path\n          name: subNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Attribute\n          in: path\n          name: attr\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's subscription attributes\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/subscribe/set/{subNum}/{attr}/{value}\":\n    put:\n      description: Attribute can not be properties .\n      operationId: protocol_mqtt_client_subscribe_set\n      parameters:\n        - description: Agent to show MQTT state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Subscribe Number\n          in: path\n          name: subNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Attribute\n          in: path\n          name: attr\n          required: true\n          schema:\n            type: string\n        - description: Value\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's subscribe attributes\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/client/unsubscribe/{subNum}\":\n    put:\n      description: Stops a subscription\n      operationId: protocol_mqtt_client_unsubscribe\n      parameters:\n        - description: Agent to change MQTT state\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Subscription Number\n          in: path\n          name: subNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Stops receiving messages from a subcription of the agent\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/get/args\":\n    get:\n      description: Agent's MQTT configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_mqtt_get_args\n      parameters:\n        - description: Agent to show the MQTT argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's MQTT argument structure\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/get/config\":\n    get:\n      description: Agent's MQTT configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_mqtt_get_config\n      parameters:\n        - description: Agent to show the MQTT configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigMQTT\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's MQTT configuration\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_mqtt_get_statistics\n      parameters:\n        - description: Agent to show MQTT statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's MQTT statistics\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_mqtt_get_trace\n      parameters:\n        - description: Agent to show whether MQTT tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigMQTT\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's MQTT traffic tracing\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/set/config/{argument}/{value}\":\n    put:\n      description: Agent's MQTT configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_mqtt_set_config\n      parameters:\n        - description: Agent to set the MQTT configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the MQTT configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the MQTT configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT configuration\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/mqtt/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_mqtt_set_trace\n      parameters:\n        - description: Agent to set the MQTT tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the MQTT tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's MQTT traffic tracing\n      tags:\n        - MQTT\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/flow/change/dfs_interval/{interval}\":\n    put:\n      description: Interval in msec .\n      operationId: protocol_netflow_change_dfs\n      parameters:\n        - description: Agent to set the NETFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: NETFLOW export interval\n          in: path\n          name: interval\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Change NETFLOW data export interval\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/flow/change/tfs_interval/{interval}\":\n    put:\n      description: Interval in msec .\n      operationId: protocol_netflow_change_tfs\n      parameters:\n        - description: Agent to set the NETFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: NETFLOW export interval\n          in: path\n          name: interval\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Change NETFLOW template export interval\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/flow/change/{flowset-uid}/{field-num}/{attr}/{value}\":\n    put:\n      description: Change attributes\n      operationId: protocol_netflow_change_attr\n      parameters:\n        - description: Agent to set the NETFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: flowset-uid\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: field-num\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: attr\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Change NETFLOW export attributes\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/flow/list\":\n    get:\n      description: Show list of NETFLOW exports\n      operationId: protocol_netflow_list\n      parameters:\n        - description: Agent to show NETFLOW statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: object\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show list of NETFLOW exports\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/get/args\":\n    get:\n      description: Agent's NETFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_netflow_get_args\n      parameters:\n        - description: Agent to show the NETFLOW argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's NETFLOW argument structure\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/get/config\":\n    get:\n      description: Agent's NETFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_netflow_get_config\n      parameters:\n        - description: Agent to show the NETFLOW configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigNETFLOW\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's NETFLOW configuration\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_netflow_get_statistics\n      parameters:\n        - description: Agent to show NETFLOW statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's NETFLOW statistics\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_netflow_get_trace\n      parameters:\n        - description: Agent to show whether NETFLOW tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigNETFLOW\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's NETFLOW traffic tracing\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/halt\":\n    put:\n      description: Halt NETFLOW traffic\n      operationId: protocol_netflow_halt\n      parameters:\n        - description: Agent to set the NETFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Halt NETFLOW traffic\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/reload\":\n    put:\n      description: Reload NETFLOW configuration before resuming traffic\n      operationId: protocol_netflow_reload\n      parameters:\n        - description: Agent to set the NETFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Reload NETFLOW configuration before resuming traffic\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/resume\":\n    put:\n      description: Resuming traffic\n      operationId: protocol_netflow_resume\n      parameters:\n        - description: Agent to set the NETFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Resuming traffic\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/set/collector/{collectorIP}\":\n    put:\n      description: Allow changing collector without stopping agent\n      operationId: protocol_netflow_set_collector\n      parameters:\n        - description: Agent to set the NETFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: file name to load config\n          in: path\n          name: collectorIP\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Swap NETFLOW collector\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/set/config/{argument}/{value}\":\n    put:\n      description: Agent's NETFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_netflow_set_config\n      parameters:\n        - description: Agent to set the NETFLOW configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the NETFLOW configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the NETFLOW configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's NETFLOW configuration\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/set/filename/{fileName}\":\n    put:\n      description: Allow reloading the configuration file for an agent without stopping agent\n      operationId: protocol_netflow_set_fileName\n      parameters:\n        - description: Agent to set the NETFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: file name to load config\n          in: path\n          name: fileName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Swap NETFLOW configuration file\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/netflow/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_netflow_set_trace\n      parameters:\n        - description: Agent to set the NETFLOW tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the NETFLOW tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's NETFLOW traffic tracing\n      tags:\n        - NETFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/get/args\":\n    get:\n      description: Agent's PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_proxy_get_args\n      parameters:\n        - description: Agent to show the PROXY argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's PROXY argument structure\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/get/config\":\n    get:\n      description: Agent's PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_proxy_get_config\n      parameters:\n        - description: Agent to show the PROXY configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigPROXY\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's PROXY configuration\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_proxy_get_statistics\n      parameters:\n        - description: Agent to show PROXY statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's PROXY statistics\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_proxy_get_trace\n      parameters:\n        - description: Agent to show whether PROXY tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigPROXY\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's PROXY traffic tracing\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/port/add/{port}/{target}/{targetPort}\":\n    post:\n      description: Additional proxy target\n      operationId: protocol_proxy_port_add\n      parameters:\n        - description: Agent to manipulate PROXY target\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: target\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: targetPort\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Add individual proxy target on the agent and the simulator host\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/port/isStarted/{port}\":\n    get:\n      description: Check individual target\n      operationId: protocol_proxy_port_isstarted\n      parameters:\n        - description: Agent to manipulate PROXY target\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Check individual target\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/port/list\":\n    get:\n      operationId: protocol_proxy_port_list\n      parameters:\n        - description: Agent to manipulate PROXY target\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: List all proxy targets\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/port/remove/{port}\":\n    delete:\n      description: Remove proxy target\n      operationId: protocol_proxy_port_remove\n      parameters:\n        - description: Agent to manipulate PROXY target\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Remove individual proxy target on the agent and the simulator host\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/port/start/{port}\":\n    put:\n      description: Start additional target\n      operationId: protocol_proxy_port_start\n      parameters:\n        - description: Agent to manipulate PROXY target\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Start additional target\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/port/stop/{port}\":\n    put:\n      description: Stop additional target\n      operationId: protocol_proxy_port_stop\n      parameters:\n        - description: Agent to manipulate PROXY target\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Stop additional target\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/set/config/{argument}/{value}\":\n    put:\n      description: Agent's PROXY configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_proxy_set_config\n      parameters:\n        - description: Agent to set the PROXY configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the PROXY configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the PROXY configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's PROXY configuration\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/proxy/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_proxy_set_trace\n      parameters:\n        - description: Agent to set the PROXY tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the PROXY tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's PROXY traffic tracing\n      tags:\n        - PROXY\n  \"/mimic/agent/{agentNum}/protocol/msg/sflow/get/args\":\n    get:\n      description: Agent's SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_sflow_get_args\n      parameters:\n        - description: Agent to show the SFLOW argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SFLOW argument structure\n      tags:\n        - SFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/sflow/get/config\":\n    get:\n      description: Agent's SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_sflow_get_config\n      parameters:\n        - description: Agent to show the SFLOW configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigSFLOW\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SFLOW configuration\n      tags:\n        - SFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/sflow/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_sflow_get_statistics\n      parameters:\n        - description: Agent to show SFLOW statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SFLOW statistics\n      tags:\n        - SFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/sflow/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_sflow_get_trace\n      parameters:\n        - description: Agent to show whether SFLOW tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigSFLOW\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SFLOW traffic tracing\n      tags:\n        - SFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/sflow/halt\":\n    put:\n      description: Halt SFLOW traffic\n      operationId: protocol_sflow_halt\n      parameters:\n        - description: Agent to set the SFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Halt SFLOW traffic\n      tags:\n        - SFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/sflow/reload\":\n    put:\n      description: Reload SFLOW configuration before resuming traffic\n      operationId: protocol_sflow_reload\n      parameters:\n        - description: Agent to set the SFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Reload SFLOW configuration before resuming traffic\n      tags:\n        - SFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/sflow/resume\":\n    put:\n      description: Resuming traffic\n      operationId: protocol_sflow_resume\n      parameters:\n        - description: Agent to set the SFLOW\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Resuming traffic\n      tags:\n        - SFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/sflow/set/config/{argument}/{value}\":\n    put:\n      description: Agent's SFLOW configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_sflow_set_config\n      parameters:\n        - description: Agent to set the SFLOW configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the SFLOW configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the SFLOW configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's SFLOW configuration\n      tags:\n        - SFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/sflow/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_sflow_set_trace\n      parameters:\n        - description: Agent to set the SFLOW tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the SFLOW tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's SFLOW traffic tracing\n      tags:\n        - SFLOW\n  \"/mimic/agent/{agentNum}/protocol/msg/snmptcp/get/args\":\n    get:\n      description: Agent's SNMPTCP configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_snmptcp_get_args\n      parameters:\n        - description: Agent to show the SNMPTCP argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SNMPTCP argument structure\n      tags:\n        - SNMPTCP\n  \"/mimic/agent/{agentNum}/protocol/msg/snmptcp/get/config\":\n    get:\n      description: Agent's SNMPTCP configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_snmptcp_get_config\n      parameters:\n        - description: Agent to show the SNMPTCP configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigSNMPTCP\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SNMPTCP configuration\n      tags:\n        - SNMPTCP\n  \"/mimic/agent/{agentNum}/protocol/msg/snmptcp/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_snmptcp_get_statistics\n      parameters:\n        - description: Agent to show SNMPTCP statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SNMPTCP statistics\n      tags:\n        - SNMPTCP\n  \"/mimic/agent/{agentNum}/protocol/msg/snmptcp/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_snmptcp_get_trace\n      parameters:\n        - description: Agent to show whether SNMPTCP tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigSNMPTCP\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SNMPTCP traffic tracing\n      tags:\n        - SNMPTCP\n  \"/mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/disable/{ipaddress}/{port}\":\n    put:\n      description: By default, the MIMIC SNMPTCP server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_snmptcp_ipalias_disable\n      parameters:\n        - description: Agent to manipulate SNMPTCP IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: ipaddress\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Disable individual IP aliases on the agent and the simulator host\n      tags:\n        - SNMPTCP\n  \"/mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/enable/{ipaddress}/{port}\":\n    put:\n      description: By default, the MIMIC SNMPTCP server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_snmptcp_ipalias_enable\n      parameters:\n        - description: Agent to manipulate SNMPTCP IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: ipaddress\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Enable individual IP aliases on the agent and the simulator host\n      tags:\n        - SNMPTCP\n  \"/mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/isenabled/{ipaddress}/{port}\":\n    get:\n      description: By default, the MIMIC SNMPTCP server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_snmptcp_ipalias_isenabled\n      parameters:\n        - description: Agent to manipulate SNMPTCP IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: ipaddress\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Check individual IP aliases on the agent and the simulator host\n      tags:\n        - SNMPTCP\n  \"/mimic/agent/{agentNum}/protocol/msg/snmptcp/ipalias/list\":\n    get:\n      description: By default, the MIMIC SNMPTCP server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_snmptcp_ipalias_list\n      parameters:\n        - description: Agent to manipulate SNMPTCP IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/IPAlias\"\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: List all IP aliases on the agent and the simulator host\n      tags:\n        - SNMPTCP\n  \"/mimic/agent/{agentNum}/protocol/msg/snmptcp/set/config/{argument}/{value}\":\n    put:\n      description: Agent's SNMPTCP configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_snmptcp_set_config\n      parameters:\n        - description: Agent to set the SNMPTCP configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the SNMPTCP configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the SNMPTCP configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's SNMPTCP configuration\n      tags:\n        - SNMPTCP\n  \"/mimic/agent/{agentNum}/protocol/msg/snmptcp/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_snmptcp_set_trace\n      parameters:\n        - description: Agent to set the SNMPTCP tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the SNMPTCP tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's SNMPTCP traffic tracing\n      tags:\n        - SNMPTCP\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/access/add/{groupName}/{prefix}/{securityModel}/{securityLevel}/{contextMatch}/{readView}/{writeView}/{notifyView}\":\n    post:\n      description: Adds a new access entry with the specified parameters.\n      operationId: protocol_snmpv3_access_add\n      parameters:\n        - description: Agent to add the SNMPv3 access\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMPv3 access name\n          in: path\n          name: groupName\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 prefix\n          in: path\n          name: prefix\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 access security model\n          in: path\n          name: securityModel\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 access security level\n          in: path\n          name: securityLevel\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 access context match\n          in: path\n          name: contextMatch\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 access read view\n          in: path\n          name: readView\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 access write view\n          in: path\n          name: writeView\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 access notify view\n          in: path\n          name: notifyView\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Adds a new access entry with the specified parameters.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/access/clear\":\n    delete:\n      description: Clears all access entries.\n      operationId: protocol_snmpv3_access_clear\n      parameters:\n        - description: Agent to add the SNMPv3 access\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Clears all access entries.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/access/del/{accessName}\":\n    delete:\n      description: Deletes the specified access entry.\n      operationId: protocol_snmpv3_access_del\n      parameters:\n        - description: Agent to add the SNMPv3 access\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMPv3 access name\n          in: path\n          name: accessName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Deletes the specified access entry.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/access/list\":\n    get:\n      description: Returns the current acccess entries as an array of strings.\n      operationId: protocol_snmpv3_access_list\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the current acccess entries as an array of strings.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/get/config\":\n    get:\n      description: Returns the SNMPv3 configuration.\n      operationId: protocol_snmpv3_get_config\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigSNMPv3\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the SNMPv3 configuration.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/get/context_engineid\":\n    get:\n      description: Retrieves the contextEngineID for the agent instance.\n      operationId: protocol_snmpv3_get_context_engineid\n      parameters:\n        - description: Agent to show the SNMPv3 engine\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Retrieves the contextEngineID for the agent instance.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/get/engineboots\":\n    get:\n      description: Retrieves the number of times the agent has been restarted.\n      operationId: protocol_snmpv3_get_engineboots\n      parameters:\n        - description: Agent to show the SNMPv3 engine\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Retrieves the number of times the agent has been restarted.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/get/engineid\":\n    get:\n      description: For stopped agents, this operation is meaningless. If not explicitly set by the user then the autogenerated engineID is returned. The format of the engineID is in the familiar hex format, eg. \\x01 23 45 67 89...\n      operationId: protocol_snmpv3_get_engineid\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: For started agents, retrieves the current engineID in use by the snmpv3 module.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/get/enginetime\":\n    get:\n      description: Retrieves the time in seconds for which the agent has been running.\n      operationId: protocol_snmpv3_get_enginetime\n      parameters:\n        - description: Agent to show the SNMPv3 engine\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Retrieves the time in seconds for which the agent has been running.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/group/add/{groupName}/{securityModel}/{securityName}\":\n    post:\n      description: Adds a new group entry with the specified parameters.\n      operationId: protocol_snmpv3_group_add\n      parameters:\n        - description: Agent to add the SNMPv3 group\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMPv3 group name\n          in: path\n          name: groupName\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 group security model\n          in: path\n          name: securityModel\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 group security name\n          in: path\n          name: securityName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Adds a new group entry with the specified parameters.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/group/clear\":\n    delete:\n      description: Clears all group entries.\n      operationId: protocol_snmpv3_group_clear\n      parameters:\n        - description: Agent to add the SNMPv3 group\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Clears all group entries.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/group/del/{groupName}\":\n    delete:\n      description: Deletes the specified group entry.\n      operationId: protocol_snmpv3_group_del\n      parameters:\n        - description: Agent to add the SNMPv3 group\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMPv3 group name\n          in: path\n          name: groupName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Deletes the specified group entry.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/group/list\":\n    get:\n      description: Returns the current group entries as an array of strings.\n      operationId: protocol_snmpv3_group_list\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the current group entries as an array of strings.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/set/config/{parameter}/{value}\":\n    put:\n      description: Changes the SNMPv3 configuration.\n      operationId: protocol_snmpv3_set_config\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMPv3 configuration parameter\n          in: path\n          name: parameter\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 parameter value\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Changes the SNMPv3 configuration.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/user/add/{userName}/{securityName}/{authProtocol}/{authKey}/{privProtocol}/{privKey}\":\n    post:\n      description: Adds a new user entry with the specified parameters.\n      operationId: protocol_snmpv3_user_add\n      parameters:\n        - description: Agent to add the SNMPv3 user\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMPv3 user name\n          in: path\n          name: userName\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 user security name\n          in: path\n          name: securityName\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 user authentication protocol\n          in: path\n          name: authProtocol\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 user authentication key\n          in: path\n          name: authKey\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 user privacy encryption protocol\n          in: path\n          name: privProtocol\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 user privacy encryption key\n          in: path\n          name: privKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Adds a new user entry with the specified parameters.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/user/clear\":\n    delete:\n      description: Clears all user entries.\n      operationId: protocol_snmpv3_user_clear\n      parameters:\n        - description: Agent to add the SNMPv3 user\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Clears all user entries.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/user/del/{userName}\":\n    delete:\n      description: Deletes the specified user entry.\n      operationId: protocol_snmpv3_user_del\n      parameters:\n        - description: Agent to add the SNMPv3 user\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMPv3 user name\n          in: path\n          name: userName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Deletes the specified user entry.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/user/list\":\n    get:\n      description: Returns the current user entries as a Tcl list.\n      operationId: protocol_snmpv3_user_list\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the current user entries as a Tcl list.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/usm/save\":\n    put:\n      description: Saves current user settings in the currently loaded USM config file.\n      operationId: protocol_snmpv3_usm_save\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Saves current user settings in the currently loaded USM config file.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/usm/saveas/{filename}\":\n    put:\n      description: Saves current user settings in the specified USM config file.\n      operationId: protocol_snmpv3_usm_saveas\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Filename to save\n          in: path\n          name: filename\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Saves current user settings in the specified USM config file.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/vacm/save\":\n    put:\n      description: Saves current group, access, view settings in the currently loaded VACM config file.\n      operationId: protocol_snmpv3_vacm_save\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Saves current group, access, view settings in the currently loaded VACM config file.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/vacm/saveas/{filename}\":\n    put:\n      description: Saves current group, access, view settings in the specified VACM config file.\n      operationId: protocol_snmpv3_vacm_saveas\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Filename to save\n          in: path\n          name: filename\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Saves current group, access, view settings in the specified VACM config file.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/view/add/{viewName}/{viewType}/{subtree}/{mask}\":\n    post:\n      description: Adds a new view entry with the specified parameters.\n      operationId: protocol_snmpv3_view_add\n      parameters:\n        - description: Agent to add the SNMPv3 view\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMPv3 view name\n          in: path\n          name: viewName\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 view type\n          in: path\n          name: viewType\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 view subtree\n          in: path\n          name: subtree\n          required: true\n          schema:\n            type: string\n        - description: SNMPv3 view mask\n          in: path\n          name: mask\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Adds a new view entry with the specified parameters.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/view/clear\":\n    delete:\n      description: Clears all view entries.\n      operationId: protocol_snmpv3_view_clear\n      parameters:\n        - description: Agent to add the SNMPv3 view\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Clears all view entries.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/view/del/{viewName}\":\n    delete:\n      description: Deletes the specified view entry.\n      operationId: protocol_snmpv3_view_del\n      parameters:\n        - description: Agent to add the SNMPv3 view\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMPv3 view name\n          in: path\n          name: viewName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Deletes the specified view entry.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/snmpv3/view/list\":\n    get:\n      description: Returns the current view entries as an array of strings.\n      operationId: protocol_snmpv3_view_list\n      parameters:\n        - description: Agent to show the SNMPv3 configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the current view entries as an array of strings.\n      tags:\n        - SNMPv3\n  \"/mimic/agent/{agentNum}/protocol/msg/ssh/get/args\":\n    get:\n      description: Agent's SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_ssh_get_args\n      parameters:\n        - description: Agent to show the SSH argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SSH argument structure\n      tags:\n        - SSH\n  \"/mimic/agent/{agentNum}/protocol/msg/ssh/get/config\":\n    get:\n      description: Agent's SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_ssh_get_config\n      parameters:\n        - description: Agent to show the SSH configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigSSH\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SSH configuration\n      tags:\n        - SSH\n  \"/mimic/agent/{agentNum}/protocol/msg/ssh/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_ssh_get_statistics\n      parameters:\n        - description: Agent to show SSH statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SSH statistics\n      tags:\n        - SSH\n  \"/mimic/agent/{agentNum}/protocol/msg/ssh/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_ssh_get_trace\n      parameters:\n        - description: Agent to show whether SSH tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigSSH\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SSH traffic tracing\n      tags:\n        - SSH\n  \"/mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/disable/{ipaddress}/{port}\":\n    put:\n      description: By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_ssh_ipalias_disable\n      parameters:\n        - description: Agent to manipulate SSH IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: ipaddress\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Disable individual IP aliases on the agent and the simulator host\n      tags:\n        - SSH\n  \"/mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/enable/{ipaddress}/{port}\":\n    put:\n      description: By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_ssh_ipalias_enable\n      parameters:\n        - description: Agent to manipulate SSH IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: ipaddress\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Enable individual IP aliases on the agent and the simulator host\n      tags:\n        - SSH\n  \"/mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/isenabled/{ipaddress}/{port}\":\n    get:\n      description: By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_ssh_ipalias_isenabled\n      parameters:\n        - description: Agent to manipulate SSH IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: ipaddress\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Check individual IP aliases on the agent and the simulator host\n      tags:\n        - SSH\n  \"/mimic/agent/{agentNum}/protocol/msg/ssh/ipalias/list\":\n    get:\n      description: By default, the MIMIC SSH server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_ssh_ipalias_list\n      parameters:\n        - description: Agent to manipulate SSH IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/IPAlias\"\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: List all IP aliases on the agent and the simulator host\n      tags:\n        - SSH\n  \"/mimic/agent/{agentNum}/protocol/msg/ssh/set/config/{argument}/{value}\":\n    put:\n      description: Agent's SSH configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_ssh_set_config\n      parameters:\n        - description: Agent to set the SSH configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the SSH configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the SSH configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's SSH configuration\n      tags:\n        - SSH\n  \"/mimic/agent/{agentNum}/protocol/msg/ssh/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_ssh_set_trace\n      parameters:\n        - description: Agent to set the SSH tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the SSH tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's SSH traffic tracing\n      tags:\n        - SSH\n  \"/mimic/agent/{agentNum}/protocol/msg/syslog/get/args\":\n    get:\n      description: Agent's SYSLOG configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_syslog_get_args\n      parameters:\n        - description: Agent to show the SYSLOG argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SYSLOG argument structure\n      tags:\n        - SYSLOG\n  \"/mimic/agent/{agentNum}/protocol/msg/syslog/get/config\":\n    get:\n      description: Agent's SYSLOG configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_syslog_get_config\n      parameters:\n        - description: Agent to show the SYSLOG configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigSYSLOG\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SYSLOG configuration\n      tags:\n        - SYSLOG\n  \"/mimic/agent/{agentNum}/protocol/msg/syslog/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_syslog_get_statistics\n      parameters:\n        - description: Agent to show SYSLOG statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SYSLOG statistics\n      tags:\n        - SYSLOG\n  \"/mimic/agent/{agentNum}/protocol/msg/syslog/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_syslog_get_trace\n      parameters:\n        - description: Agent to show whether SYSLOG tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigSYSLOG\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's SYSLOG traffic tracing\n      tags:\n        - SYSLOG\n  \"/mimic/agent/{agentNum}/protocol/msg/syslog/get/{attr}\":\n    get:\n      description: Attribute can be server , sequence , separator , hostname , timestamp\n      operationId: protocol_syslog_get_attr\n      parameters:\n        - description: Agent to set the SYSLOG tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Attribute\n          in: path\n          name: attr\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the outgoing message's attributes\n      tags:\n        - SYSLOG\n  \"/mimic/agent/{agentNum}/protocol/msg/syslog/send/{pri}\":\n    post:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_syslog_send\n      parameters:\n        - description: Agent to set the SYSLOG tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Message Priority\n          in: path\n          name: pri\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SyslogMsg\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's SYSLOG traffic tracing\n      tags:\n        - SYSLOG\n  \"/mimic/agent/{agentNum}/protocol/msg/syslog/set/config/{argument}/{value}\":\n    put:\n      description: Agent's SYSLOG configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_syslog_set_config\n      parameters:\n        - description: Agent to set the SYSLOG configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the SYSLOG configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the SYSLOG configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's SYSLOG configuration\n      tags:\n        - SYSLOG\n  \"/mimic/agent/{agentNum}/protocol/msg/syslog/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_syslog_set_trace\n      parameters:\n        - description: Agent to set the SYSLOG tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the SYSLOG tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's SYSLOG traffic tracing\n      tags:\n        - SYSLOG\n  \"/mimic/agent/{agentNum}/protocol/msg/syslog/set/{attr}/{value}\":\n    put:\n      description: Attribute can be server , sequence , separator , hostname , timestamp\n      operationId: protocol_syslog_set_attr\n      parameters:\n        - description: Agent to set the SYSLOG tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Attribute\n          in: path\n          name: attr\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the outgoing message's attributes\n      tags:\n        - SYSLOG\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/connection/logon/{connectionID}/{user}/{password}\":\n    put:\n      description: Logon change allows (hidden) commands for a different access mode to run.\n      operationId: protocol_telnet_connection_logon\n      parameters:\n        - description: Agent to manipulate TELNET connection\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: connectionID\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: password\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Changes the connection's current logon.\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/connection/request/{connectionID}/{command}\":\n    put:\n      description: Equivalent of the command typed in by the user.\n      operationId: protocol_telnet_connection_request\n      parameters:\n        - description: Agent to manipulate TELNET connection\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: connectionID\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: command\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Executes the command asynchronously .\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/connection/signal/{connectionID}/{signalName}\":\n    put:\n      description: Signal name is either connect or idle\n      operationId: protocol_telnet_connection_signal\n      parameters:\n        - description: Agent to manipulate TELNET connection\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: connectionID\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: signalName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Triggers the asynchronous signal event with the specified signal name\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/get/args\":\n    get:\n      description: Agent's TELNET configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_telnet_get_args\n      parameters:\n        - description: Agent to show the TELNET argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TELNET argument structure\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/get/config\":\n    get:\n      description: Agent's TELNET configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_telnet_get_config\n      parameters:\n        - description: Agent to show the TELNET configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigTELNET\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TELNET configuration\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_telnet_get_statistics\n      parameters:\n        - description: Agent to show TELNET statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TELNET statistics\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_telnet_get_trace\n      parameters:\n        - description: Agent to show whether TELNET tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigTELNET\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TELNET traffic tracing\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/disable/{ipaddress}/{port}\":\n    put:\n      description: By default, the MIMIC TELNET server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_telnet_ipalias_disable\n      parameters:\n        - description: Agent to manipulate TELNET IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: ipaddress\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Disable individual IP aliases on the agent and the simulator host\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/enable/{ipaddress}/{port}\":\n    put:\n      description: By default, the MIMIC TELNET server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_telnet_ipalias_enable\n      parameters:\n        - description: Agent to manipulate TELNET IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: ipaddress\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Enable individual IP aliases on the agent and the simulator host\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/isenabled/{ipaddress}/{port}\":\n    get:\n      description: By default, the MIMIC TELNET server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_telnet_ipalias_isenabled\n      parameters:\n        - description: Agent to manipulate TELNET IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - in: path\n          name: ipaddress\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Check individual IP aliases on the agent and the simulator host\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/ipalias/list\":\n    get:\n      description: By default, the MIMIC TELNET server listens on all the IP addresses (aliases) that are configured for an agent\n      operationId: protocol_telnet_ipalias_list\n      parameters:\n        - description: Agent to manipulate TELNET IP alias\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/IPAlias\"\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: List all IP aliases on the agent and the simulator host\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/connections\":\n    get:\n      description: IDs of all connected connections\n      operationId: protocol_telnet_server_get_connections\n      parameters:\n        - description: Agent to show TELNET configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TELNET connections\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/keymap\":\n    get:\n      description: Keymap file name\n      operationId: protocol_telnet_server_get_keymap\n      parameters:\n        - description: Agent to show TELNET statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TELNET keymap file name\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/rulesdb\":\n    get:\n      description: Rules db file name\n      operationId: protocol_telnet_server_get_rulesdb\n      parameters:\n        - description: Agent to show TELNET statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TELNET rules db file name\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/state\":\n    get:\n      description: Return 1 means accepting connections, 0 not\n      operationId: protocol_telnet_server_get_state\n      parameters:\n        - description: Agent to show TELNET statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TELNET server state\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/userdb\":\n    get:\n      description: User db file name\n      operationId: protocol_telnet_server_get_userdb\n      parameters:\n        - description: Agent to show TELNET statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TELNET user db file name\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/server/get/users\":\n    get:\n      description: List of users\n      operationId: protocol_telnet_server_get_users\n      parameters:\n        - description: Agent to show TELNET configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TelnetUser\"\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TELNET users\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/set/config/{argument}/{value}\":\n    put:\n      description: Agent's TELNET configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_telnet_set_config\n      parameters:\n        - description: Agent to set the TELNET configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the TELNET configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the TELNET configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's TELNET configuration\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/telnet/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_telnet_set_trace\n      parameters:\n        - description: Agent to set the TELNET tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the TELNET tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's TELNET traffic tracing\n      tags:\n        - TELNET\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/get/args\":\n    get:\n      description: Agent's TFTP configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_tftp_get_args\n      parameters:\n        - description: Agent to show the TFTP argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TFTP argument structure\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/get/config\":\n    get:\n      description: Agent's TFTP configuration\n      operationId: protocol_tftp_get_config\n      parameters:\n        - description: Agent to show the TFTP configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigTFTP\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TFTP configuration\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_tftp_get_statistics\n      parameters:\n        - description: Agent to show TFTP statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TFTP statistics\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_tftp_get_trace\n      parameters:\n        - description: Agent to show whether TFTP tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigTFTP\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TFTP traffic tracing\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/session/read/server/{srcfile}\":\n    post:\n      description: Session ID is returned\n      operationId: protocol_tftp_session_read\n      parameters:\n        - description: Agent to show TFTP statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: File name to retrieve from server\n          in: path\n          name: srcfile\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Create a read session to download srcfile from server\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/session/write/server/{srcfile}\":\n    post:\n      description: Session ID is returned\n      operationId: protocol_tftp_session_write\n      parameters:\n        - description: Agent to show TFTP statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: File name to upload to server\n          in: path\n          name: srcfile\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Create a read session to upload srcfile to server\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/set/config/{argument}/{value}\":\n    put:\n      description: Agent's TFTP configuration\n      operationId: protocol_tftp_set_config\n      parameters:\n        - description: Agent to set the TFTP configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the TFTP configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the TFTP configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's TFTP configuration\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_tftp_set_trace\n      parameters:\n        - description: Agent to set the TFTP tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the TFTP tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's TFTP traffic tracing\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/get/{parameter}\":\n    get:\n      description: Parameter is server , port , or dstfile\n      operationId: protocol_tftp_session_get_parameter\n      parameters:\n        - description: Agent to show TFTP parameter\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SessionID\n          in: path\n          name: sessionID\n          required: true\n          schema:\n            type: string\n        - description: Parameter to show\n          in: path\n          name: parameter\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show a parameter of a TFTP sesssion\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/set/{parameter}/{value}\":\n    put:\n      description: Parameter is server , port , or dstfile\n      operationId: protocol_tftp_session_set_parameter\n      parameters:\n        - description: Agent to set TFTP parameter\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SessionID\n          in: path\n          name: sessionID\n          required: true\n          schema:\n            type: string\n        - description: Parameter to set\n          in: path\n          name: parameter\n          required: true\n          schema:\n            type: string\n        - description: Value to set\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set a parameter of a TFTP sesssion\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/start\":\n    put:\n      description: Start uploading or downloading the file\n      operationId: protocol_tftp_session_start\n      parameters:\n        - description: Agent to start TFTP transaction\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SessionID\n          in: path\n          name: sessionID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Start a TFTP sesssion\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/status\":\n    get:\n      description: Status includes running state, bytes transfered, and time elapsed\n      operationId: protocol_tftp_session_status\n      parameters:\n        - description: Agent to show TFTP transaction\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SessionID\n          in: path\n          name: sessionID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Check a TFTP sesssion's status\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tftp/{sessionID}/stop\":\n    put:\n      description: Stop uploading or downloading the file\n      operationId: protocol_tftp_session_stop\n      parameters:\n        - description: Agent to stop TFTP transaction\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SessionID\n          in: path\n          name: sessionID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Stop a TFTP sesssion\n      tags:\n        - TFTP\n  \"/mimic/agent/{agentNum}/protocol/msg/tod/get/args\":\n    get:\n      description: Agent's TOD configuration\n      operationId: protocol_tod_get_args\n      parameters:\n        - description: Agent to show the TOD argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TOD argument structure\n      tags:\n        - TOD\n  \"/mimic/agent/{agentNum}/protocol/msg/tod/get/config\":\n    get:\n      description: Agent's TOD configuration\n      operationId: protocol_tod_get_config\n      parameters:\n        - description: Agent to show the TOD configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigTOD\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TOD configuration\n      tags:\n        - TOD\n  \"/mimic/agent/{agentNum}/protocol/msg/tod/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_tod_get_statistics\n      parameters:\n        - description: Agent to show TOD statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TOD statistics\n      tags:\n        - TOD\n  \"/mimic/agent/{agentNum}/protocol/msg/tod/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_tod_get_trace\n      parameters:\n        - description: Agent to show whether TOD tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigTOD\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's TOD traffic tracing\n      tags:\n        - TOD\n  \"/mimic/agent/{agentNum}/protocol/msg/tod/gettime/server/{serverAddr}/port/{portNum}/script/{scriptName}/timeout/{timeSec}/retries/{numRetries}\":\n    get:\n      description: Retrive time from server\n      operationId: protocol_tod_gettime\n      parameters:\n        - description: Agent to show TOD return\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: serverAddr\n          in: path\n          name: serverAddr\n          required: true\n          schema:\n            type: string\n        - description: portNum\n          in: path\n          name: portNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: scriptName\n          in: path\n          name: scriptName\n          required: true\n          schema:\n            type: string\n        - description: timeSec\n          in: path\n          name: timeSec\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: numRetries\n          in: path\n          name: numRetries\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Retrieve TOD time\n      tags:\n        - TOD\n  \"/mimic/agent/{agentNum}/protocol/msg/tod/set/config/{argument}/{value}\":\n    put:\n      description: Agent's TOD configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_tod_set_config\n      parameters:\n        - description: Agent to set the TOD configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the TOD configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the TOD configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's TOD configuration\n      tags:\n        - TOD\n  \"/mimic/agent/{agentNum}/protocol/msg/tod/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_tod_set_trace\n      parameters:\n        - description: Agent to set the TOD tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the TOD tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's TOD traffic tracing\n      tags:\n        - TOD\n  \"/mimic/agent/{agentNum}/protocol/msg/web/get/args\":\n    get:\n      description: Agent's WEB configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_web_get_args\n      parameters:\n        - description: Agent to show the WEB argument structure\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's WEB argument structure\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/get/config\":\n    get:\n      description: Agent's WEB configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_web_get_config\n      parameters:\n        - description: Agent to show the WEB configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigWEB\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's WEB configuration\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/get/statistics\":\n    get:\n      description: Statistics of fields indicated in the headers\n      operationId: protocol_web_get_statistics\n      parameters:\n        - description: Agent to show WEB statistics\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's WEB statistics\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/get/trace\":\n    get:\n      description: Trace 1 means enabled, 0 means not\n      operationId: protocol_web_get_trace\n      parameters:\n        - description: Agent to show whether WEB tracing is enabled\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConfigWEB\"\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's WEB traffic tracing\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/port/add/{port}\":\n    post:\n      description: Add port\n      operationId: protocol_web_port_add\n      parameters:\n        - description: Agent to add WEB port\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: TCP port\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Add the agent's WEB port\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/port/exists/{port}\":\n    get:\n      description: Check the port. 1 means existing, 0 means not\n      operationId: protocol_web_port_exists\n      parameters:\n        - description: Agent to show WEB configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: TCP port\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's WEB port\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/port/remove/{port}\":\n    delete:\n      description: Remove port\n      operationId: protocol_web_port_remove\n      parameters:\n        - description: Agent to remove WEB port\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: TCP port\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Remove the agent's WEB port\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/port/set/{port}/{protocol}/{version}\":\n    put:\n      description: Set port\n      operationId: protocol_web_port_set\n      parameters:\n        - description: Agent to set WEB port\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: TCP port\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Encryption or related protocol\n          in: path\n          name: protocol\n          required: true\n          schema:\n            type: string\n        - description: Encryption or related protocol version\n          in: path\n          name: version\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's WEB port attribute\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/port/start/{port}\":\n    put:\n      description: Start port\n      operationId: protocol_web_port_start\n      parameters:\n        - description: Agent to start WEB port\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: TCP port\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Start the agent's WEB port\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/port/stop/{port}\":\n    put:\n      description: Stop port\n      operationId: protocol_web_port_stop\n      parameters:\n        - description: Agent to stop WEB port\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: TCP port\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Stop the agent's WEB port\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/set/config/{argument}/{value}\":\n    put:\n      description: Agent's WEB configuration with port,rule,prompt,paging_prompt,userdb,keymap\n      operationId: protocol_web_set_config\n      parameters:\n        - description: Agent to set the WEB configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Parameter to set the WEB configuration\n          in: path\n          name: argument\n          required: true\n          schema:\n            type: string\n        - description: Value to set the WEB configuration\n          in: path\n          name: value\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's WEB configuration\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/msg/web/set/trace/{enableOrNot}\":\n    put:\n      description: 1 to enable, 0 to disable\n      operationId: protocol_web_set_trace\n      parameters:\n        - description: Agent to set the WEB tracing\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value to set the WEB tracing\n          in: path\n          name: enableOrNot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the agent's WEB traffic tracing\n      tags:\n        - WEB\n  \"/mimic/agent/{agentNum}/protocol/{prot}/get/config\":\n    get:\n      description: Returns the protocol's configuration.\n      operationId: protocol_get_config\n      parameters:\n        - description: Agent to show the protocol configuration\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Protocol to show configuration\n          in: path\n          name: prot\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Returns the protocol's configuration.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/reload\":\n    put:\n      description: This only works for halted agents. The net effect is the same as restarting an agent (ie. stop, start, halt), but without disconnecting the network (and thus existing connections).\n      operationId: reload\n      parameters:\n        - description: Agent to return the primary IP\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Reload the current agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/remove\":\n    delete:\n      description: For speed, this operation will complete asynchronously. The same synchronization considerations apply as in /mimic/agent/start.\n      operationId: agent_remove\n      parameters:\n        - description: Agent to return the primary IP\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Remove the current agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/resume\":\n    put:\n      description: Resume the current agent.\n      operationId: resume\n      parameters:\n        - description: Agent to return the primary IP\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Resume the current agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/save\":\n    put:\n      description: Save agent MIB values.\n      operationId: save\n      parameters:\n        - description: Agent to save\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Save agent MIB values.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/delay/{delay}\":\n    put:\n      description: The minimum granularity is 10 msec.\n      operationId: set_delay\n      parameters:\n        - description: Agent to set the delay time\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Delay time of the agent\n          in: path\n          name: delay\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: one-way transit delay in msec\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/drops/{drops}\":\n    put:\n      description: 0 means no drops\n      operationId: set_drops\n      parameters:\n        - description: Agent to set the drop rate\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Drop rate of the agent\n          in: path\n          name: drops\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: drop rate (every N-th PDU)\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/host/{host}\":\n    put:\n      description: Currently, only IPv4 addresses are allowed as the main address of the agent, but both IPv4 and IPv6 addresses are allowed as IP aliases for the agent.\n      operationId: set_host\n      parameters:\n        - description: Agent to set the primary IP\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: string\n            type: integer\n        - description: Primary IP of the agent\n          in: path\n          name: host\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/value/set/{object}/0/{variable}\"\n              parameters:\n                agentNum: $request.body#/agentNum\n                object: sysDescr\n                variable: v\n        \"400\":\n          description: Invalid agent number value\n      summary: host address of the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/inform_timeout/{inform_timeout}\":\n    put:\n      description: The agent will retransmit INFORM PDUs at this interval until it has received a reply from the manager.\n      operationId: set_inform_timeout\n      parameters:\n        - description: Agent to set the timeout setting\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Tmeout setting\n          in: path\n          name: inform_timeout\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: timeout in seconds for retransmitting INFORM PDUs\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/interface/{interface}\":\n    put:\n      description: network interface card for the agent\n      operationId: set_interface\n      parameters:\n        - description: Agent to set the primary interface\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: string\n            type: integer\n        - description: Primary interface of the agent\n          in: path\n          name: interface\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: network interface card for the agent\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/mask/{mask}\":\n    put:\n      description: subnet mask of the agent.\n      operationId: set_mask\n      parameters:\n        - description: Agent to set the primary IP address mask\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: string\n            type: integer\n        - description: Mask to set for the agent primary IP address\n          in: path\n          name: mask\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: subnet mask of the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/mibs\":\n    put:\n      description: set of MIBs, simulations and scenarios\n      operationId: set_mibs\n      parameters:\n        - description: Agent to return the MIB triplets\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: Triplet array\n              items:\n                $ref: \"#/components/schemas/Triplet\"\n              type: array\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: set of MIBs, simulations and scenarios\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/oiddir/{oiddir}\":\n    put:\n      description: MIB directory of the agent.\n      operationId: set_oiddir\n      parameters:\n        - description: Agent to set the directory path\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Directory path for the agent\n          in: path\n          name: oiddir\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: MIB directory of the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/owner/{owner}\":\n    put:\n      description: owner of the agent\n      operationId: set_owner\n      parameters:\n        - description: Agent to set the owner\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Owner of the agent\n          in: path\n          name: owner\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: owner of the agent\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/pdusize/{pdusize}\":\n    put:\n      description: The limit for this configurable is 65536\n      operationId: set_pdusize\n      parameters:\n        - description: Agent to return the PDU size\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: PDU size setting for the agent\n          in: path\n          name: pdusize\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: maximum PDU size\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/port/{port}\":\n    put:\n      description: port number\n      operationId: set_port\n      parameters:\n        - description: Agent to set the primary SNMP port\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Primary SNMP port of the agent\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: port number\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/privdir/{privdir}\":\n    put:\n      description: private directory of the agent.\n      operationId: set_privdir\n      parameters:\n        - description: Agent to set the directory path\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Directory path for the agent\n          in: path\n          name: privdir\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: private directory of the agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/protocol\":\n    put:\n      description: protocols supported by agent as a comma-separated list\n      operationId: set_protocols\n      parameters:\n        - description: Agent to return the protocols arrary\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                description: Protocol string\n                type: string\n              type: array\n        description: Created agent object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: string\n                  type: integer\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: protocols supported by agent as a comma-separated list\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/read/{read}\":\n    put:\n      description: read community string\n      operationId: set_read_community\n      parameters:\n        - description: Agent to return the SNMP read community string\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMP read community string\n          in: path\n          name: read\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: read community string\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/start/{start}\":\n    put:\n      description: relative start time\n      operationId: set_starttime\n      parameters:\n        - description: Agent to return the relative start time\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Relative start time of the agent\n          in: path\n          name: start\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: relative start time\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/trace/{trace}\":\n    put:\n      description: SNMP PDU tracing\n      operationId: set_trace\n      parameters:\n        - description: Agent to set trace setting\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Trace setting for the agent\n          in: path\n          name: trace\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: SNMP PDU tracing\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/validate/{validate}\":\n    put:\n      description: Is a bitmask in which with the following bits (from LSB) check for type, length, range, access. A default value of 65535 does all validation checking.\n      operationId: set_validate\n      parameters:\n        - description: Agent to set the bitmask integer\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Bitmask integer to set\n          in: path\n          name: validate\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: SNMP SET validation policy\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/set/write/{write}\":\n    put:\n      description: write community string\n      operationId: set_write_community\n      parameters:\n        - description: Agent to set the SNMP write community string\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: SNMP write community string\n          in: path\n          name: write\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: write community string\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/start\":\n    put:\n      description: For speed, this operation will complete asynchronously. A successful return from this command means the starting of the agent is in progress. If you need to rely on the agent to have completed startup, you should wait for it's state to become RUNNING.\n      operationId: start\n      parameters:\n        - description: Agent to return the primary IP\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Start the current agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/stop\":\n    put:\n      description: Agent primary IP address\n      operationId: stop\n      parameters:\n        - description: Agent to return the primary IP\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the agent's primary IP address\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/store/copy/{otherAgent}\":\n    put:\n      description: This command copies the variable store from the other agent to this agent.\n      operationId: agent_store_copy\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Agent of the value space\n          in: path\n          name: otherAgent\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: This command copies the variable store from the other agent to this agent.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/store/exists/{var}\":\n    get:\n      description: It returns \"1\" if the variable exists, else \"0\".\n      operationId: agent_store_exists\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: This command can be used as a predicate to ascertain the existence of a given variable.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/store/get/{var}\":\n    get:\n      description: The value will be returned as a string (like all Tcl values).\n      operationId: agent_store_get\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Fetches the value associated with a variable.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/store/list\":\n    get:\n      description: The list will be a Tcl format list with curly braces \"{}\" around each list element. These elements in turn are space separated.\n      operationId: agent_store_list\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: This command will return the list of variables in the said scope.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/store/lreplace/{var}/{index}\":\n    put:\n      description: These commands treat the variable as a list, and allow to replace an entry in the list at the specified index with the specified value. The variable has to already exist.\n      operationId: agent_store_lreplace\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n        - description: Index\n          in: path\n          name: index\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: Value\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: These commands treat the variable as a list, and allow to replace an entry in the list at the specified index with the specified value. The variable has to already exist.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/store/persists/{var}\":\n    get:\n      description: It returns \"1\" if the variable is persistent, else \"0\".\n      operationId: agent_store_persists\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: This command can be used as a predicate to ascertain the persistence of a given variable.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/store/set/{var}/{persist}\":\n    put:\n      description: The append sub-command will append the value to an existing variable, or create a new one. The set sub-command will overwrite an existing variable, or create a new one. The optional persist flag can be used to indicate if the variable is to be persistent as described above. By default a value of '0' will be implied for the persist flag. To avoid mistakes, for existing variables the persist flag can only be set. If you want to reset it, you first need to unset the variable.\n      operationId: agent_store_set\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n        - description: Persistent setting\n          in: path\n          name: persist\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: Value\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: These commands allow the creation of a new variable, or changing an existing value.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/store/unset/{var}\":\n    put:\n      description: This will cleanup persistent variables if needed\n      operationId: agent_store_unset\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Deletes a variable which is currently defined.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/timer/script/add/{script}/{interval}/{arg}\":\n    post:\n      description: Add a new timer script to be executed at specified interval (in msec) with the specified argument.\n      operationId: add_timer_script\n      parameters:\n        - description: Agent to return the timer script list\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Script name\n          in: path\n          name: script\n          required: true\n          schema:\n            type: string\n        - description: Interval in msec\n          in: path\n          name: interval\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Arguments to the script\n          in: path\n          name: arg\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Add a new timer script to be executed at specified interval (in msec) with the specified argument.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/timer/script/delete/{script}/{interval}/{arg}\":\n    delete:\n      description: The first scheduled script that matches the script name, and optionally the interval and argument will be deleted.\n      operationId: del_timer_script\n      parameters:\n        - description: Agent to return the timer script list\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Script name\n          in: path\n          name: script\n          required: true\n          schema:\n            type: string\n        - description: Interval in msec\n          in: path\n          name: interval\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Arguments to the script\n          in: path\n          name: arg\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Remove a timer script from the execution list.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/timer/script/list\":\n    get:\n      description: The command mimic timer script list lists global timer scripts, the command /mimic/timer/script/{agentNum}/list is the per-agent equivalent NOTE Global timer scripts run globally but within them you can address individual agents using {agentNum}. To schedule timerscripts for an individual agent, use /mimic/timer/script/{agentNum}.\n      operationId: list_timer_scripts\n      parameters:\n        - description: Agent to return the timer script list\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TimerScript\"\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: List the timer scripts currently running along with the their intervals.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/trap/config/add/{IP}/{port}\":\n    post:\n      description: Add a trap destination to the set of destinations.\n      operationId: trap_config_add\n      parameters:\n        - description: Agent to add the destination\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: IP of the destination\n          in: path\n          name: IP\n          required: true\n          schema:\n            type: string\n        - description: port of the destination\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Add a trap destination to the set of destinations.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/trap/config/delete/{IP}/{port}\":\n    delete:\n      description: Remove a trap destination from the set of destinations.\n      operationId: trap_config_del\n      parameters:\n        - description: Agent to delete the destination\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: IP of the destination\n          in: path\n          name: IP\n          required: true\n          schema:\n            type: string\n        - description: port of the destination\n          in: path\n          name: port\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Remove a trap destination from the set of destinations.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/trap/config/list\":\n    get:\n      description: Each trap destination is identified with an IP address and a port number. The default port number is the standard SNMP trap port 162.\n      operationId: trap_config_list\n      parameters:\n        - description: Agent to show the IP alias list\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TrapDest\"\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: List the set of trap destinations for this agent instance.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/trap/list\":\n    get:\n      description: List the outstanding asynchronous traps for this agent instance.\n      operationId: trap_list\n      parameters:\n        - description: Agent to list the traps\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: array of OID or Object strings\n                items:\n                  type: string\n                type: array\n          description: successful operation\n      summary: List the outstanding asynchronous traps for this agent instance.\n      tags:\n        - Agent\n  \"/mimic/agent/{agentNum}/value/add/{object}/{instance}\":\n    post:\n      description: The object needs to specify the MIB object with the INDEX clause, usually an object whose name ends with Entry.\n      operationId: add\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Object (column) of the table in the agent's value space\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n        - description: Object (column) of the table in the agent's value space\n          in: path\n          name: instance\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Add an entry to a table.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/eval/{object}/{instance}\":\n    get:\n      description: Evaluate the values of the specified instance instance for each specified MIB object object and return it as it would through SNMP requests.\n      operationId: eval_value\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Single instance object or object (column) of the table in the agent's value space.\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n        - description: Row of the table in the agent's value space. 0 for single instance objects\n          in: path\n          name: instance\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Evaluate the values of the specified instance instance for each specified MIB object object and return it as it would through SNMP requests.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/get/{object}/{instance}/{variable}\":\n    get:\n      description: Get a variable in the Value Space.\n      operationId: get_value\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Object (column) of the table in the agent's value space\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n        - description: Object (column) of the table in the agent's value space\n          in: path\n          name: instance\n          required: true\n          schema:\n            type: string\n        - description: Object (column) of the table in the agent's value space\n          in: path\n          name: variable\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/value/eval/{object}/{instance}\"\n              parameters:\n                agentNum: $request.body#/agentNum\n                instance: 0\n                object: sysDescr\n        \"400\":\n          description: Invalid agent number value\n      summary: Get a variable in the Value Space.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/info/{object}\":\n    get:\n      description: Return the syntactical information for the specified object, such as type, size, range, enumerations, and ACCESS.\n      operationId: get_info\n      parameters:\n        - description: Agent to show the information of the object\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Object\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Return the syntactical information for the specified object, such as type, size, range, enumerations, and ACCESS.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/instances/{object}\":\n    get:\n      description: This enables MIB browsing of the MIB on the current agent.\n      operationId: get_instances\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Object (column) of the table in the agent's value space\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Display the MIB object instances for the specified object.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/list/{OID}\":\n    get:\n      description: This command is similar to the ls or dir operating system commands to list filesystem directories.\n      operationId: get_objects\n      parameters:\n        - description: Agent to show the OID branches\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Current OID\n          in: path\n          name: OID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Display the MIB objects below the current position\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/meval/{objInsArray}\":\n    get:\n      description: Evaluate the values of the specified instance instance for each specified MIB object object and return it as it would through SNMP requests.\n      operationId: meval_value\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Multiple objects or object (column) of the table in the agent's value space.\n          in: path\n          name: objInsArray\n          required: true\n          schema:\n            items:\n              items:\n                type: string\n              type: array\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Evaluate the values of the specified instance instance for each specified MIB object object and return it as it would through SNMP requests.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/mget/{objInsVarArray}\":\n    get:\n      description: This is a performance optimization of the mimic value get command, to be used when many variables are requested.\n      operationId: mget_value\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Multiple objects or object (column) of the table in the agent's value space.\n          in: path\n          name: objInsVarArray\n          required: true\n          schema:\n            items:\n              items:\n                type: string\n              type: array\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Get multiple variables in the Value Space.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/mib/{object}\":\n    get:\n      description: This will only return a MIB name if the object is unmistakeably defined in a MIB.\n      operationId: get_mib\n      parameters:\n        - description: Agent to show the MIB\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Object\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Return the MIB that defines the specified object.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/mset\":\n    put:\n      description: This is a performance optimization of the mimic value set command, to be used when many variables are to be set.\n      operationId: mset_value\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                items:\n                  type: string\n                type: array\n              type: array\n        description: objInsVarValArray\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set multiple variables in the Value Space.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/munset\":\n    put:\n      description: This is a performance optimization of the mimic value unset command, to be used when many variables are to be unset.\n      operationId: munset_value\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                items:\n                  type: string\n                type: array\n              type: array\n        description: objInsVarArray\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Unset multiple variables in the Value Space\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/name/{OID}\":\n    get:\n      description: Return the symbolic name of the specified object identifier.\n      operationId: get_name\n      parameters:\n        - description: Agent to show the object\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: OID\n          in: path\n          name: OID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Return the symbolic name of the specified object identifier.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/oid/{object}\":\n    get:\n      description: Return the numeric OID of the specified object.\n      operationId: get_oid\n      parameters:\n        - description: Agent to show the OID\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Object\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Return the numeric OID of the specified object.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/remove/{object}/{instance}\":\n    delete:\n      description: The object needs to specify the MIB object with the INDEX clause, usually an object whose name ends with Entry.\n      operationId: remove\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Object (column) of the table in the agent's value space\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n        - description: Object (column) of the table in the agent's value space\n          in: path\n          name: instance\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Remove an entry from a table.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/set/{object}/{instance}/{variable}\":\n    put:\n      description: NOTE to set a binary string value, specify a string starting with \\\\x followed by pairs of hexadecimal digits, eg. \"\\\\x 01 23 45\". This command also assigns SNMP PDU action scripts for GET* and SET requests on a MIB object. The instance parameter must be 0. The following variables enable actions, g - The specified TCL script will be run on GET or GETNEXT requests. It has to exist under the simulation directory. s - The specified script will be run on SET requests. It has to exist under the simulation directory. This command also controls advanced trap generation functionality. The following variables control trap generation r, tu, c - These variables together represent the rate settings for the trap. r and tu is the actual per second rate and c represents the total duration in seconds for which the trap is sent. As soon as the c variable is set, the trap generation begins, for this reason it should be the last variable set for a particular trap. The following variables have to be set before setting the c variable to modify the behavior of the generated trap(s). OBJECT - An object name when used as a variable is looked up during the trap send and the value of that variable is included in the PDU. OBJECT.i - This type of variable will be used to assign an optional instance for the specified object in the traps varbind. The value of this variable identifies the index. e.g. The commands below will send ifIndex.2 with a value of 5 in the linkUp trap PDU. i - This variable is used to specify any extra version specific information to the trap generation code. Here is what it can be used to represent for various SNMP versions SNMPv1 - [community_string][,[enterprise][,agent_addr]] SNMPv2c - community_string SNMPv2 - source_party,destination_party,context SNMPv3 - user_name,context v - This variable lets the user override the version of the PDU being generated. The possible values are - \"1\", \"2c\", \"2\" and \"3\". o - This variable is used for traps that need extra variables to be added to the PDU along with the ones defined in the MIB as its variables. This lets the user force extra objects (along with instances if needed). All variables to be sent need to be assigned to the o variable. O - To omit any variables which are defined in the MIB you can use the O (capital o) variable. This needs to be set to the list of OIDs of the variable bindings in the order defined in the MIB. ip - The variable ip is used for generating the trap from the N-th IP alias address. a - This variable associates an action script to the trap or INFORM request. The action script specified in the value of this variable has to exist in the simulation directory. It will be executed before each instance of the trap is sent out. I - This optional variable controls the generation of INFORM PDUs. An INFORM is sent only if the variable is non-zero, else a TRAP is generated. R, T, E - This variable associates an action script to the INFORM request. The action script specified in the value of this variable has to exist in the simulation directory. The action script associated with the R variable will be executed on receiving a INFORM RESPONSE, the one associated with the T variable on a timeout (ie. no response), the one associated with the E variable on a report PDU. eid.IP-ADDRESS.PORT - control variable allows to configure message authoritative engine id for the destination specified by IP-ADDRESS and optionally by PORT. eb.IP-ADDRESS.PORT - control variable allows to configure message authoritative engine boots. et.IP-ADDRESS.PORT - control variable allows to configure message authoritative engine time.\n      operationId: set_value\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Single instance object or object (column) of the table in the agent's value space.\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n        - description: Row of the table in the agent's value space. 0 for single instance objects\n          in: path\n          name: instance\n          required: true\n          schema:\n            type: string\n        - description: Variable\n          in: path\n          name: variable\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: Value\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set a variable in the Value Space.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/split/{OID}\":\n    get:\n      description: This is useful if you have an OID which is a combination of object and instance.\n      operationId: split_oid\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: OID\n          in: path\n          name: OID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Split the numerical OID into the object OID and instance OID.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/state/get/{object}\":\n    get:\n      description: To disable traversal into a MIB object and any subtree underneath, set the state to 0, else set the state to 1.\n      operationId: get_state\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Object\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Get the state of a MIB object object.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/state/set/{object}/{state}\":\n    put:\n      description: To disable traversal into a MIB object and any subtree underneath, set the state to 0, else set the state to 1.\n      operationId: set_state\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Object\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n        - description: State\n          in: path\n          name: state\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the state of a MIB object object\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/unset/{object}/{instance}/{variable}\":\n    put:\n      description: Only variables that have previously been set can be unset.\n      operationId: unset_value\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Single instance object or object (column) of the table in the agent's value space.\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n        - description: Row of the table in the agent's value space. 0 for single instance objects\n          in: path\n          name: instance\n          required: true\n          schema:\n            type: string\n        - description: Variable\n          in: path\n          name: variable\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Unset a variable in the Value Space in order to free its memory.\n      tags:\n        - Valuespace\n  \"/mimic/agent/{agentNum}/value/variables/{object}/{instance}\":\n    get:\n      description: This enables variable browsing of the MIB on the current agent.\n      operationId: get_variables\n      parameters:\n        - description: Agent of the value space\n          in: path\n          name: agentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Single instance object or object (column) of the table in the agent's value space.\n          in: path\n          name: object\n          required: true\n          schema:\n            type: string\n        - description: Row of the table in the agent's value space. 0 for single instance objects\n          in: path\n          name: instance\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Display the variables for the specified instance instance for the specified MIB object object\n      tags:\n        - Valuespace\n  \"/mimic/clear/{firstAgentNum}/{lastAgentNum}\":\n    put:\n      description: Clear the lab configuration.\n      operationId: cfg_new\n      parameters:\n        - description: Agent number to start clearing\n          in: path\n          name: firstAgentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Agent number to end the clearing\n          in: path\n          name: lastAgentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: Clear the lab configuration.\n      tags:\n        - Daemon\n  /mimic/get/active_data_list:\n    get:\n      description: This list is guaranteed to be sorted into increasing order.\n      operationId: get_active_data_list\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n          links:\n            address:\n              operationId: get_host\n              parameters:\n                agentNum: $response.body#/id/\n      summary: The list of {agentnum {statistics}} for agents that are currently active and whose statistics have changed since the last invocation of this command.\n      tags:\n        - Daemon\n  /mimic/get/active_list:\n    get:\n      description: This list is guaranteed to be sorted into increasing order.\n      operationId: get_active_list\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/interface\"\n              parameters:\n                agentNum: $response.body#\n      summary: The list of {agentnum} that are currently active (running or paused).\n      tags:\n        - Daemon\n  /mimic/get/cfgfile:\n    get:\n      description: In the case of multi-user access this command returns a different configuration file loaded for each user.\n      operationId: get_cfgfile\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: The currently loaded lab configuration file for the particular user.\n      tags:\n        - Daemon\n  /mimic/get/cfgfile_changed:\n    get:\n      description: Whether the loaded agent configuration file has changed since the last time this predicate was queried. This allows for a client to detect agent configuration changes and to synchronize those changes from the MIMIC daemon.\n      operationId: get_cfg_file_changed\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: This predicate indicates if the currently loaded agent configuration file has changed.\n      tags:\n        - Daemon\n  /mimic/get/changed_config_list:\n    get:\n      description: This list contains at most 5000 agent(s), and is guaranteed to be sorted into increasing order.\n      operationId: get_changed_config_list\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n      summary: The list of {agentnum} for which a configurable parameter changed.\n      tags:\n        - Daemon\n  /mimic/get/changed_state_list:\n    get:\n      description: This list contains at most 5000 agent(s), and is guaranteed to be sorted into increasing order.\n      operationId: get_changed_state_list\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AgentState\"\n                type: array\n          description: successful operation\n      summary: The list of {agentnum state} for which the state changed.\n      tags:\n        - Daemon\n  /mimic/get/clients:\n    get:\n      description: The number of clients currently connected to the daemon.\n      operationId: get_clients\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: The number of clients currently connected to the daemon.\n      tags:\n        - Daemon\n  /mimic/get/configured_list:\n    get:\n      description: This list is guaranteed to be sorted into increasing order.\n      operationId: get_configured_list\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  format: int32\n                  type: integer\n                type: array\n          description: successful operation\n          links:\n            address:\n              operationRef: \"#/mimic/agent/{agentNum}/get/host\"\n              parameters:\n                agentNum: $response.body#\n      summary: The list of {agentnum} that are currently configured.\n      tags:\n        - Daemon\n  /mimic/get/interfaces:\n    get:\n      description: The set of network interfaces that can be used for simulations.\n      operationId: get_interfaces\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: The set of network interfaces that can be used for simulations.\n      tags:\n        - Daemon\n  /mimic/get/last:\n    get:\n      description: The last configured agent instance.\n      operationId: get_last\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n      summary: The last configured agent instance.\n      tags:\n        - Daemon\n  /mimic/get/log:\n    get:\n      description: The current log file for the Simulator.\n      operationId: get_log\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: The current log file for the Simulator.\n      tags:\n        - Daemon\n  /mimic/get/max:\n    get:\n      description: The maximum number of agent instances.\n      operationId: get_max\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n          description: successful operation\n      summary: The maximum number of agent instances.\n      tags:\n        - Daemon\n  /mimic/get/netaddr:\n    get:\n      description: The network address of the host where the MIMIC simulator is running.\n      operationId: get_netaddr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: The network address of the host where the MIMIC simulator is running.\n      tags:\n        - Daemon\n  /mimic/get/netdev:\n    get:\n      description: The default network device to be used for agent addresses if the interface is not explicitly specified for an agent.\n      operationId: get_netdev\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: The default network device to be used for agent addresses.\n      tags:\n        - Daemon\n  /mimic/get/product:\n    get:\n      description: The product number that is licensed.\n      operationId: get_product\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: The product number that is licensed.\n      tags:\n        - Daemon\n  /mimic/get/protocols:\n    get:\n      description: The set of protocols supported by the Simulator.\n      operationId: get_daemon_protocols\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: The set of protocols supported by the Simulator.\n      tags:\n        - Daemon\n  /mimic/get/return:\n    get:\n      description: The OpenAPI daemon operates in two modes, nocatch, where error returns from MIMIC operations return error; or catch, where the TCL catch semantics are used (these are similar to C++ exceptions)\n      operationId: get_return\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: The return mode.\n      tags:\n        - Daemon\n  /mimic/get/version:\n    get:\n      description: The version of the MIMIC command interface.\n      operationId: get_version\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n      summary: The version of the MIMIC command interface.\n      tags:\n        - Daemon\n  \"/mimic/load/{cfgFile}/{firstAgentNum}/{lastAgentNum}/{startAgentNum}\":\n    put:\n      description: Load agents in cfgFile from firstAgentNum to lastAgentNum on startAgentNum of current configuration\n      operationId: cfg_load\n      parameters:\n        - description: MIMIC agent configuration file to load\n          in: path\n          name: cfgFile\n          required: true\n          schema:\n            type: string\n        - description: Agent number in cfgFile to start the loading\n          in: path\n          name: firstAgentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Agent number in cfgFile to end the loading\n          in: path\n          name: lastAgentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Agent number in current configuration to start placing the new agents\n          in: path\n          name: startAgentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: Load the lab configuration file file.\n      tags:\n        - Daemon\n  \"/mimic/mget/{infoArray}\":\n    get:\n      description: Get multiple sets of information about MIMIC, where infoArray is one of the parameters defined in the mimic get command.\n      operationId: mget_info\n      parameters:\n        - description: Multiple strings of info.\n          in: path\n          name: infoArray\n          required: true\n          schema:\n            items:\n              type: string\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: object\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid info string\n      summary: Get multiple sets of information about MIMIC, where infoArray is one of the parameters defined in the mimic get command.\n      tags:\n        - Daemon\n  /mimic/protocol/msg/coap/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_coap_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the COAP statistics headers\n      tags:\n        - COAP\n  /mimic/protocol/msg/dhcp/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_dhcp_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the DHCP statistics headers\n      tags:\n        - DHCP\n  /mimic/protocol/msg/ipmi/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_ipmi_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the IPMI statistics headers\n      tags:\n        - IPMI\n  /mimic/protocol/msg/mqtt/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_mqtt_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the MQTT statistics headers\n      tags:\n        - MQTT\n  /mimic/protocol/msg/netflow/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_netflow_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the NETFLOW statistics headers\n      tags:\n        - NETFLOW\n  /mimic/protocol/msg/proxy/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_proxy_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the PROXY statistics headers\n      tags:\n        - PROXY\n  /mimic/protocol/msg/sflow/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_sflow_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the SFLOW statistics headers\n      tags:\n        - SFLOW\n  /mimic/protocol/msg/snmptcp/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_snmptcp_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the SNMPTCP statistics headers\n      tags:\n        - SNMPTCP\n  /mimic/protocol/msg/ssh/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_ssh_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the SSH statistics headers\n      tags:\n        - SSH\n  /mimic/protocol/msg/syslog/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_syslog_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the SYSLOG statistics headers\n      tags:\n        - SYSLOG\n  /mimic/protocol/msg/telnet/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_telnet_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the TELNET statistics headers\n      tags:\n        - TELNET\n  /mimic/protocol/msg/tftp/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_tftp_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the TFTP statistics headers\n      tags:\n        - TFTP\n  /mimic/protocol/msg/tod/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_tod_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the TOD statistics headers\n      tags:\n        - TOD\n  /mimic/protocol/msg/web/get/stats_hdr:\n    get:\n      description: The headers of statistics fields\n      operationId: protocol_web_get_stats_hdr\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Show the WEB statistics headers\n      tags:\n        - WEB\n  /mimic/save:\n    put:\n      description: Save the lab configuration.\n      operationId: cfg_save\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: Save the lab configuration.\n      tags:\n        - Daemon\n  \"/mimic/saveas/{cfgFile}/{firstAgentNum}/{lastAgentNum}\":\n    put:\n      description: Save the lab configuration in file.\n      operationId: cfg_saveas\n      parameters:\n        - description: MIMIC agent configuration file to save\n          in: path\n          name: cfgFile\n          required: true\n          schema:\n            type: string\n        - description: Agent number in cfgFile to start the loading\n          in: path\n          name: firstAgentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Agent number in cfgFile to end the loading\n          in: path\n          name: lastAgentNum\n          required: true\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: Save the lab configuration in file.\n      tags:\n        - Daemon\n  /mimic/set/log:\n    put:\n      description: The current log file for the Simulator.\n      operationId: set_log\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: The file name of the new log file\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n      summary: The current log file for the Simulator.\n      tags:\n        - Daemon\n  /mimic/set/netdev:\n    put:\n      description: The network address of the host where the MIMIC simulator is running.\n      operationId: set_netdev\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: The network address of the host where the MIMIC simulator is running.\n      tags:\n        - Daemon\n  /mimic/set/persistent:\n    put:\n      description: The MIMIC daemon caches persistent objects and their changes, and writes them to disk at program termination. If it were to crash, these changes would be lost. This operation allows to checkpoint the cache, ie. write changes to persistent objects to disk. To save the lab configuration with per-agent persistent information the mimic save operation needs to be used.\n      operationId: store_save\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: This operation flushes all global objects which need to be made persistent to disk.\n      tags:\n        - Daemon\n  /mimic/start:\n    put:\n      description: Start MIMIC.\n      operationId: start_all_agents\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: Start MIMIC.\n      tags:\n        - Daemon\n  /mimic/stop:\n    put:\n      description: Stop MIMIC.\n      operationId: stop_all_agents\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: Stop MIMIC.\n      tags:\n        - Daemon\n  \"/mimic/store/exists/{var}\":\n    get:\n      description: It returns \"1\" if the variable exists, else \"0\".\n      operationId: store_exists\n      parameters:\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: This command can be used as a predicate to ascertain the existence of a given variable.\n      tags:\n        - Daemon\n  \"/mimic/store/get/{var}\":\n    get:\n      description: The value will be returned as a string (like all Tcl values).\n      operationId: store_get\n      parameters:\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Fetches the value associated with a variable.\n      tags:\n        - Daemon\n  /mimic/store/list:\n    get:\n      description: The list will be a Tcl format list with curly braces \"{}\" around each list element. These elements in turn are space separated.\n      operationId: store_list\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: This command will return the list of variables in the said scope.\n      tags:\n        - Daemon\n  \"/mimic/store/lreplace/{var}/{index}\":\n    put:\n      description: These commands treat the variable as a list, and allow to replace an entry in the list at the specified index with the specified value. The variable has to already exist.\n      operationId: store_lreplace\n      parameters:\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n        - description: Index\n          in: path\n          name: index\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: Value\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: These commands treat the variable as a list, and allow to replace an entry in the list at the specified index with the specified value. The variable has to already exist.\n      tags:\n        - Daemon\n  \"/mimic/store/persists/{var}\":\n    get:\n      description: It returns \"1\" if the variable is persistent, else \"0\".\n      operationId: store_persists\n      parameters:\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: This command can be used as a predicate to ascertain the persistence of a given variable.\n      tags:\n        - Daemon\n  \"/mimic/store/set/{var}/{persist}\":\n    put:\n      description: Persist 1 means persistent , 0 means non-persistent\n      operationId: store_set\n      parameters:\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n        - description: Persistent setting\n          in: path\n          name: persist\n          required: true\n          schema:\n            format: int32\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: Value\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Set the variable store for the global storage\n      tags:\n        - Daemon\n  \"/mimic/store/unset/{var}\":\n    put:\n      description: This will cleanup persistent variables if needed\n      operationId: store_unset\n      parameters:\n        - description: Variable name\n          in: path\n          name: var\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Deletes a variable which is currently defined.\n      tags:\n        - Daemon\n  /mimic/terminate:\n    put:\n      description: Terminate the MIMIC daemon.\n      operationId: terminate\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  format: int32\n                  type: integer\n                type: object\n          description: successful operation\n      summary: Terminate the MIMIC daemon.\n      tags:\n        - Daemon\n  \"/mimic/timer/script/add/{script}/{interval}/{arg}\":\n    post:\n      description: Add a new timer script to be executed at specified interval (in msec) with the specified argument.\n      operationId: add_daemon_timer_script\n      parameters:\n        - description: Script name\n          in: path\n          name: script\n          required: true\n          schema:\n            type: string\n        - description: Interval in msec\n          in: path\n          name: interval\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Arguments to the script\n          in: path\n          name: arg\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Add a new timer script to be executed at specified interval (in msec) with the specified argument.\n      tags:\n        - Daemon\n  \"/mimic/timer/script/delete/{script}/{interval}/{arg}\":\n    delete:\n      description: The first scheduled script that matches the script name, and optionally the interval and argument will be deleted.\n      operationId: del_daemon_timer_script\n      parameters:\n        - description: Script name\n          in: path\n          name: script\n          required: true\n          schema:\n            type: string\n        - description: Interval in msec\n          in: path\n          name: interval\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Arguments to the script\n          in: path\n          name: arg\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: Remove a timer script from the execution list.\n      tags:\n        - Daemon\n  /mimic/timer/script/list:\n    get:\n      description: The command mimic timer script list lists global timer scripts, the command /mimic/timer/script/{agentNum}/list is the per-agent equivalent NOTE Global timer scripts run globally but within them you can address individual agents using {agentNum}. To schedule timerscripts for an individual agent, use /mimic/timer/script/{agentNum}.\n      operationId: list_daemon_timer_scripts\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TimerScript\"\n                type: array\n          description: successful operation\n        \"400\":\n          description: Invalid agent number value\n      summary: List the timer scripts currently running along with the their intervals.\n      tags:\n        - Daemon\ncomponents:\n  schemas:\n    AccessEntry:\n      properties:\n        access_mask:\n          type: string\n        agent_range:\n          type: string\n        user:\n          type: string\n      type: object\n    AgentState:\n      properties:\n        agentNum:\n          format: int32\n          type: integer\n        state:\n          format: int32\n          type: integer\n      type: object\n    ConfigCOAP:\n      properties:\n        keystore:\n          type: string\n        primary_port:\n          format: int32\n          type: integer\n        rule:\n          type: string\n        secure_port:\n          format: int32\n          type: integer\n      type: object\n    ConfigDHCP:\n      properties:\n        add_options:\n          type: string\n        classid:\n          type: string\n        hwaddr:\n          type: string\n        script:\n          type: string\n      type: object\n    ConfigIPMI:\n      properties:\n        primary_port:\n          format: int32\n          type: integer\n        secure_port:\n          format: int32\n          type: integer\n        version:\n          type: string\n      type: object\n    ConfigMQTT:\n      properties:\n        broker:\n          type: string\n        clientid:\n          type: string\n        filename:\n          type: string\n        is_tls:\n          type: string\n        password:\n          type: string\n        port:\n          format: int32\n          type: integer\n        tls_conf_filename:\n          type: string\n        username:\n          type: string\n        version:\n          type: string\n      type: object\n    ConfigNETFLOW:\n      properties:\n        bundleflowsets:\n          format: int32\n          type: integer\n        collector:\n          type: string\n        collectorport:\n          format: int32\n          type: integer\n        filename:\n          type: string\n      type: object\n    ConfigPROXY:\n      properties:\n        TCP_NODELAY:\n          format: int32\n          type: integer\n        client_to_server:\n          type: string\n        disconnect_delay:\n          format: int32\n          type: integer\n        max_connects:\n          format: int32\n          type: integer\n        portno:\n          format: int32\n          type: integer\n        pre_connect:\n          type: string\n        server_to_client:\n          type: string\n        target:\n          type: string\n        transport:\n          type: string\n      type: object\n    ConfigSFLOW:\n      properties:\n        collector:\n          type: string\n        collectorport:\n          format: int32\n          type: integer\n        encoding_type:\n          type: string\n        filename:\n          type: string\n        flows_per_min:\n          format: int32\n          type: integer\n        include_samples:\n          type: string\n        records_per_sample:\n          type: string\n        samples_per_datagram:\n          type: string\n      type: object\n    ConfigSNMPTCP:\n      properties:\n        connections:\n          format: int32\n          type: integer\n      type: object\n    ConfigSNMPv3:\n      properties:\n        context_engine_id:\n          type: string\n        engine_id:\n          type: string\n        usm_db:\n          type: string\n        vacm_db:\n          type: string\n      type: object\n    ConfigSSH:\n      properties:\n        port:\n          format: int32\n          type: integer\n        version:\n          type: string\n      type: object\n    ConfigSYSLOG:\n      properties:\n        client:\n          type: string\n        hostname:\n          type: string\n        localport:\n          format: int32\n          type: integer\n        separator:\n          type: string\n        sequence:\n          format: int32\n          type: integer\n        server:\n          type: string\n        serverport:\n          format: int32\n          type: integer\n        timestamp:\n          type: string\n      type: object\n    ConfigTELNET:\n      properties:\n        keymap:\n          type: string\n        paging_prompt:\n          type: string\n        port:\n          format: int32\n          type: integer\n        prompt:\n          type: string\n        rule:\n          type: string\n        userdb:\n          type: string\n      type: object\n    ConfigTFTP:\n      properties:\n        cache:\n          format: int32\n          type: integer\n        client:\n          type: string\n        dstfile:\n          type: string\n        mode:\n          type: string\n        port:\n          format: int32\n          type: integer\n        retries:\n          format: int32\n          type: integer\n        script:\n          type: string\n        server:\n          type: string\n        srcfile:\n          type: string\n        timeout:\n          format: int32\n          type: integer\n        trace:\n          type: string\n      type: object\n    ConfigTOD:\n      properties:\n        port:\n          format: int32\n          type: integer\n        retries:\n          format: int32\n          type: integer\n        script:\n          type: string\n        server:\n          type: string\n        timeout:\n          format: int32\n          type: integer\n      type: object\n    ConfigWEB:\n      properties:\n        is_persistent_connections:\n          format: int32\n          type: integer\n        password:\n          type: string\n        port:\n          format: int32\n          type: integer\n        rule:\n          type: string\n        username:\n          type: string\n        wsdl:\n          type: string\n      type: object\n    IPAlias:\n      properties:\n        IP:\n          type: string\n        interface:\n          type: string\n        mask:\n          type: string\n        port:\n          format: int32\n          type: integer\n      type: object\n    IPSource:\n      properties:\n        IP:\n          type: string\n        port:\n          format: int32\n          type: integer\n      type: object\n    SyslogMsg:\n      properties:\n        hostname:\n          type: string\n        message:\n          type: string\n        separator:\n          type: string\n        sequence:\n          type: string\n        timestamp:\n          type: string\n      type: object\n    TelnetUser:\n      properties:\n        groups:\n          items:\n            type: string\n          type: array\n        hasPassword:\n          format: int32\n          type: integer\n        password:\n          type: string\n        username:\n          type: string\n      type: object\n    TimerScript:\n      properties:\n        arg:\n          type: string\n        interval:\n          format: int32\n          type: integer\n        script:\n          type: string\n      type: object\n    TrapDest:\n      properties:\n        IP:\n          type: string\n        port:\n          format: int32\n          type: integer\n      type: object\n    Triplet:\n      properties:\n        device:\n          type: string\n        mib:\n          type: string\n        scenario:\n          format: int32\n          type: integer\n      type: object\n  securitySchemes:\n    basicAuth:\n      scheme: basic\n      type: http\n"
		}
	},
	"Error": "buildIR: make ir: path \"/mimic/agent/{agentNum}/value/mget/{objInsVarArray}\": get: parameters: fail: nested arrays not allowed"
}