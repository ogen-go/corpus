{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apostoldevel/apostol-cs"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "www/docs/api.yaml",
			"byteSize": 58367,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    This is a OCPP Central System API.\n  version: \"1.0.0\"\n  title: OCPP CS API\n  contact:\n    email: ufocomp@gmail.com\n  license:\n    name: MIT License\n    url: https://github.com/apostoldevel/apostol-cs/blob/master/LICENSE\nexternalDocs:\n  description: GitHub\n  url: https://github.com/apostoldevel/apostol-cs\nservers:\n  - url: 'http://cs.ocpp-css.ru/api/v1'\n    description: OCPP CS\n  - url: 'http://{host}:{port}/api/v1'\n    description: Custom\n    variables:\n      host:\n        default: localhost\n      port:\n        default: '9220'\ntags:\n  - name: Connection\n    description: Check server connection\n  - name: CentralSystem\n    description: Central System endpoints\n  - name: ChargePoint\n    description: Charge point endpoints\npaths:\n  /ping:\n    get:\n      tags:\n        - Connection\n      summary: Check server connection.\n      responses:\n        '200':\n          description: Successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/response'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /time:\n    get:\n      tags:\n        - Connection\n      summary: Get server time.\n      responses:\n        '200':\n          description: Successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  serverTime:\n                    type: integer\n                    description: UNIX time\n                example:\n                  serverTime: 1642521843938\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /CentralSystem/ChargePointList:\n    get:\n      tags:\n        - CentralSystem\n      summary: Get a list of connected charging stations.\n      operationId: ChargePointList\n      responses:\n        '200':\n          description: Successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChargePointListResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /CentralSystem/TransactionList:\n    post:\n      tags:\n        - CentralSystem\n      summary: Transaction list.\n      operationId: TransactionList\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TransactionList'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransactionList'\n      responses:\n        '200':\n          description: Successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionListResponce'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /CentralSystem/ReservationList:\n    post:\n      tags:\n        - CentralSystem\n      summary: Reservation list.\n      operationId: ReservationList\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ReservationList'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReservationList'\n      responses:\n        '200':\n          description: Successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReservationListResponce'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/CancelReservation:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.1. Cancel Reservation\n      description: \u003e\n        To cancel a reservation the Central System SHALL send an CancelReservation.req PDU to the Charge Point.\n        If the Charge Point has a reservation matching the reservationId in the request PDU, it SHALL return status\n        ‘Accepted’. Otherwise it SHALL return ‘Rejected’.\n      operationId: CancelReservation\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CancelReservation'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CancelReservation'\n      responses:\n        '200':\n          description: \u003e\n            This indicates the success or failure of the cancelling of a reservation by Central System.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CancelReservationResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/ChangeAvailability:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.2. Change Availability\n      description: \u003e\n        Central System can request a Charge Point to change its availability. A Charge Point is considered available\n        (“operative”) when it is charging or ready for charging. A Charge Point is considered unavailable when it does not\n        allow any charging. The Central System SHALL send a ChangeAvailability.req PDU for requesting a Charge Point\n        to change its availability. The Central System can change the availability to available or unavailable.\n      operationId: ChangeAvailability\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ChangeAvailability'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeAvailability'\n      responses:\n        '200':\n          description: \u003e\n            This indicates whether the Charge Point is able to perform the availability change.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AvailabilityResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/ChangeConfiguration:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.3. Change Configuration\n      description: \u003e\n        Central System can request a Charge Point to change configuration parameters. To achieve this, Central System\n        SHALL send a ChangeConfiguration.req. This request contains a key-value pair, where \"key\" is the name of the\n        configuration setting to change and \"value\" contains the new setting for the configuration setting.\n      operationId: ChangeConfiguration\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ChangeConfiguration'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeConfiguration'\n      responses:\n        '200':\n          description: \u003e\n            Returns whether configuration change has been accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/ClearCache:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.4. Clear Cache\n      description: \u003e\n        Central System can request a Charge Point to clear its Authorization Cache. The Central System SHALL send a\n        ClearCache.req PDU for clearing the Charge Point’s Authorization Cache.\n      operationId: ClearCache\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      responses:\n        '200':\n          description: \u003e\n            Accepted if the Charge Point has executed the request, otherwise rejected.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClearCacheResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/ClearChargingProfile:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.5. Clear Charging Profile\n      description: \u003e\n        If the Central System wishes to clear some or all of the charging profiles that were previously sent the Charge Point, it SHALL use the ClearChargingProfile.req PDU.\n      operationId: ClearChargingProfile\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ClearChargingProfile'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClearChargingProfile'\n      responses:\n        '200':\n          description: \u003e\n            Indicates if the Charge Point was able to execute the request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClearChargingProfileResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/DataTransfer:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.6. Data Transfer\n      description: \u003e\n        If the Central System needs to send information to a Charge Point for a function not supported by OCPP, it SHALL use the DataTransfer.req PDU.\n      operationId: DataTransfer\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DataTransfer'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataTransfer'\n      responses:\n        '200':\n          description: \u003e\n            This indicates the success or failure of the data transfer.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataTransferResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/GetCompositeSchedule:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.7. Get Composite Schedule\n      description: \u003e\n        This contains the field definition of the GetCompositeSchedule.conf PDU sent by the Charge Point to the Central System in response to a GetCompositeSchedule.req PDU.\n      operationId: GetCompositeSchedule\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GetCompositeSchedule'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetCompositeSchedule'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the GetCompositeSchedule.conf PDU sent by the Charge Point to the Central System in response to a GetCompositeSchedule.req PDU.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetCompositeScheduleResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/GetConfiguration:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.8. Get Configuration\n      description: \u003e\n        To retrieve the value of configuration settings, the Central System SHALL send a GetConfiguration.req PDU to the Charge Point.\n      operationId: GetConfiguration\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GetConfiguration'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetConfiguration'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the GetConfiguration.conf PDU sent by Charge Point the to the Central System in response to a GetConfiguration.req.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetConfigurationResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/GetDiagnostics:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.9. Get Diagnostics\n      description: \u003e\n        Central System can request a Charge Point for diagnostic information. The Central System SHALL send a\n        GetDiagnostics.req PDU for getting diagnostic information of a Charge Point with a location where the Charge\n        Point MUST upload its diagnostic data to and optionally a begin and end time for the requested diagnostic information.\n      operationId: GetDiagnostics\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GetDiagnostics'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDiagnostics'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the GetDiagnostics.conf PDU sent by the Charge Point to the Central System in response to a GetDiagnostics.req PDU.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDiagnosticsResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/GetLocalListVersion:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.10. Get Local List Version\n      description: \u003e\n        In order to support synchronisation of the Local Authorization List, Central System can request a Charge Point\n        for the version number of the Local Authorization List. The Central System SHALL send a GetLocalListVersion.req\n        PDU to request this value.\n      operationId: GetLocalListVersion\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the GetLocalListVersion.conf PDU sent by the Charge Point to Central System in response to a GetLocalListVersion.req PDU.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLocalListVersionResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/RemoteStartTransaction:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.11. Remote Start Transaction\n      description: \u003e\n        Central System can request a Charge Point to start a transaction by sending a RemoteStartTransaction.req. Upon\n        receipt, the Charge Point SHALL reply with RemoteStartTransaction.conf and a status indicating whether it has\n        accepted the request and will attempt to start a transaction.\n      operationId: RemoteStartTransaction\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/RemoteStartTransaction'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoteStartTransactionJson'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definitions of the RemoteStartTransaction.conf PDU sent from Charge Point to Central System.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoteStartTransactionResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/RemoteStopTransaction:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.12. Remote Stop Transaction\n      description: \u003e\n        Central System can request a Charge Point to stop a transaction by sending a RemoteStopTransaction.req to\n        Charge Point with the identifier of the transaction. Charge Point SHALL reply with RemoteStopTransaction.conf\n        and a status indicating whether it has accepted the request and a transaction with the given transactionId is\n        ongoing and will be stopped.\n      operationId: RemoteStopTransaction\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/RemoteStopTransaction'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoteStopTransaction'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the StopTransaction.conf PDU sent by the Central System to the Charge Point in response to a StopTransaction.req PDU.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoteStopTransactionResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/ReserveNow:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.13. Reserve Now\n      description: A Central System can issue a ReserveNow.req to a Charge Point to reserve a connector for use by a specific idTag.\n      operationId: ReserveNow\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ReserveNow'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReserveNow'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the ReserveNow.conf PDU sent by the Charge Point to the Central System in response to a ReserveNow.req PDU.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReserveNowResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/Reset:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.14. Reset\n      description: \u003e\n        The Central System SHALL send a Reset.req PDU for requesting a Charge Point to reset itself. The Central System\n        can request a hard or a soft reset. Upon receipt of a Reset.req PDU, the Charge Point SHALL respond with a\n        Reset.conf PDU. The response PDU SHALL include whether the Charge Point will attempt to reset itself.\n      operationId: Reset\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Reset'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Reset'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the Reset.conf PDU sent by the Charge Point to the Central System in response to a Reset.req PDU.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/SendLocalList:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.15. Send Local List\n      description: \u003e\n        Central System can send a Local Authorization List that a Charge Point can use for authorization of idTags. The\n        list MAY be either a full list to replace the current list in the Charge Point or it MAY be a differential list with\n        updates to be applied to the current list in the Charge Point.\n      operationId: SendLocalList\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SendLocalList'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendLocalList'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the SendLocalList.conf PDU sent by the Charge Point to the Central System in response to a SendLocalList.req PDU.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SendLocalListResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/SetChargingProfile:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.16. Set Charging Profile\n      description: \u003e\n        A Central System can send a SetChargingProfile.req to a Charge Point, to set a charging profile, in the following situations:\n          • At the start of a transaction to set the charging profile for the transaction;\n          • In a RemoteStartTransaction.req sent to a Charge Point\n          • During a transaction to change the active profile for the transaction;\n          • Outside the context of a transaction as a separate message to set a charging profile to a local controller, Charge Point, or a default charging profile to a connector.\n      operationId: SetChargingProfile\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SetChargingProfile'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetChargingProfile'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the SetChargingProfile.conf PDU sent by the Charge Point to the Central System in response to a SetChargingProfile.req PDU.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SetChargingProfileResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/TriggerMessage:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.17. Trigger Message\n      description: \u003e\n        The TriggerMessage.req makes it possible for the Central System, to request the Charge Point, to send Charge\n        Point-initiated messages. In the request the Central System indicates which message it wishes to receive. For\n        every such requested message the Central System MAY optionally indicate to which connector this request\n        applies. The requested message is leading: if the specified connectorId is not relevant to the message, it should\n        be ignored. In such cases the requested message should still be sent.\n      operationId: TriggerMessage\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TriggerMessage'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TriggerMessage'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the TriggerMessage.conf PDU sent by the Charge Point to the Central System in response to a TriggerMessage.req PDU.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TriggerMessageResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/UnlockConnector:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.18. Unlock Connector\n      description: \u003e\n        Central System can request a Charge Point to unlock a connector. To do so, the Central System SHALL send an UnlockConnector.req PDU.\n      operationId: UnlockConnector\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UnlockConnector'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlockConnector'\n      responses:\n        '200':\n          description: \u003e\n            This contains the field definition of the UnlockConnector.conf PDU sent by the Charge Point to the Central System in response to an UnlockConnector.req PDU.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlockConnectorResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\n  /ChargePoint/{identity}/UpdateFirmware:\n    post:\n      tags:\n        - ChargePoint\n      summary: 5.19. Update Firmware\n      description: \u003e\n        Central System can notify a Charge Point that it needs to update its firmware. The Central System SHALL send an\n        UpdateFirmware.req PDU to instruct the Charge Point to install new firmware. The PDU SHALL contain a date\n        and time after which the Charge Point is allowed to retrieve the new firmware and the location from which the\n        firmware can be downloaded.\n      operationId: UpdateFirmware\n      parameters:\n        - $ref: '#/components/parameters/Identity'\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UpdateFirmware'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateFirmware'\n      responses:\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '5XX':\n          $ref: '#/components/responses/InternalError'\ncomponents:\n  parameters:\n    Identity:\n      in: path\n      name: identity\n      description: Charge point identity\n      required: true\n      schema:\n        type: string\n  responses:\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n    InternalError:\n      description: Internal error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n  schemas:\n    CancelReservation:\n      type: object\n      required:\n        - reservationId\n      properties:\n        reservationId:\n          type: integer\n          format: int32\n          description: Id of the reservation to cancel.\n    CancelReservationResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum: [Accepted, Rejected]\n    ChangeAvailability:\n      type: object\n      required:\n        - connectorId\n        - type\n      properties:\n        connectorId:\n          type: integer\n          format: int32\n          description: \u003e\n            The id of the connector for which availability needs to change.\n            Id '0' (zero) is used if the availability of the Charge Point and all its connectors needs to change.\n        type:\n          type: string\n          enum: [Inoperative, Operative]\n          description: This contains the type of availability change that the Charge Point should perform.\n    AvailabilityResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          enum: [Accepted, Rejected, Scheduled]\n    ChangeConfiguration:\n      type: object\n      required:\n        - key\n        - value\n      properties:\n        key:\n          type: string\n          description: The name of the configuration setting to change.\n        value:\n          type: string\n          description: The new value as string for the setting.\n    ConfigurationResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum: [Accepted, Rejected, RebootRequired, NotSupported]\n    ClearCacheResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          default: Accepted\n    ClearChargingProfile:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n          description: The ID of the charging profile to clear.\n        connectorId:\n          type: integer\n          format: int32\n          description: \u003e\n            Specifies the ID of the connector for which to clear charging profiles. A connectorId of zero (0) specifies\n            the charging profile for the overall Charge Point. Absence of this parameter means the clearing applies\n            to all charging profiles that match the other criteria in the request.\n        chargingProfilePurpose:\n          type: string\n          description: Specifies to purpose of the charging profiles that will be cleared, if they meet the other criteria in the request.\n          enum: [ChargePointMaxProfile, TxDefaultProfile, TxProfile]\n        stackLevel:\n          type: integer\n          format: int32\n          description: Specifies the stackLevel for which charging profiles will be cleared, if they meet the other criteria in the request.\n    ClearChargingProfileResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum: [Accepted, Unknown]\n    DataTransfer:\n      type: object\n      required:\n        - vendorId\n      properties:\n        vendorId:\n          type: string\n          description: This identifies the Vendor specific implementation.\n        messageId:\n          type: string\n          description: Additional identification field.\n        data:\n          type: string\n          description: Data without specified length or format.\n    DataTransferResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum: [Accepted, Rejected, UnknownMessageId, UnknownVendorId]\n        data:\n          type: string\n          description: Data in response to request.\n    GetCompositeSchedule:\n      type: object\n      required:\n        - connectorId\n        - duration\n      properties:\n        connectorId:\n          type: integer\n          format: int32\n          description: \u003e\n            The ID of the Connector for which the schedule is requested.\n            When ConnectorId=0, the Charge Point will calculate the expected consumption for the grid connection.\n        duration:\n          type: integer\n          format: int32\n          description: Time in seconds. Length of requested schedule.\n        chargingRateUnit:\n          type: string\n          enum: [W, A]\n          description: Can be used to force a power or current profile.\n    GetCompositeScheduleResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          enum: [Accepted, Rejected]\n        connectorId:\n          type: integer\n          format: int32\n          description: The charging schedule contained in this notification applies to a Connector.\n        scheduleStart:\n          type: string\n          format: date-time\n          description: \u003e\n            Time. Periods contained in the charging profile are relative to this point in time.\n            If status is \"Rejected\", this field may be absent.\n        chargingSchedule:\n          $ref: '#/components/schemas/ChargingSchedule'\n    GetConfiguration:\n      type: object\n      properties:\n        key:\n          type: string\n          description: List of keys for which the configuration value is requested.\n    GetConfigurationResponse:\n      type: object\n      properties:\n        configurationKey:\n          type: array\n          description: List of requested or known keys/.\n          items:\n            type: object\n            required:\n              - key\n              - readonly\n            properties:\n              key:\n                type: string\n              readonly:\n                type: boolean\n                description: False if the value can be set with the ChangeConfiguration message.\n              value:\n                type: string\n                description: If key is known but not set, this field may be absent.\n        unknownKey:\n          type: string\n          description: Requested keys that are unknown.\n    GetDiagnostics:\n      type: object\n      required:\n        - location\n      properties:\n        location:\n          type: string\n          format: uri\n          description: This contains the location (directory) where the diagnostics file shall be uploaded to.\n        retries:\n          type: integer\n          format: int32\n          description: \u003e\n            This specifies how many times Charge Point must try to upload the\n            diagnostics before giving up. If this field is not present, it is left to Charge Point\n            to decide how many times it wants to retry.\n        retryInterval:\n          type: integer\n          format: int32\n          description: \u003e\n            The interval in seconds after which a retry may be attempted. If this\n            field is not present, it is left to Charge Point to decide how long to wait between attempts.\n        startTime:\n          type: string\n          format: date-time\n          description: This contains the date and time of the oldest logging information to include in the diagnostics.\n        stopTime:\n          type: string\n          format: date-time\n          description: This contains the date and time of the latest logging information to include in the diagnostics.\n    GetDiagnosticsResponse:\n      type: object\n      properties:\n        fileName:\n          type: string\n          description: This contains the name of the file with diagnostic information that will be uploaded. This field is not present when no diagnostic information is available.\n    GetLocalListVersionResponse:\n      type: object\n      required:\n        - listVersion\n      properties:\n        listVersion:\n          type: integer\n          format: int32\n          description: This contains the current version number of the local authorization list in the Charge Point.\n    RemoteStartTransaction:\n      type: object\n      required:\n        - idTag\n      properties:\n        connectorId:\n          type: integer\n          format: int32\n          description: \u003e\n            Number of the connector on which to start the transaction. connectorId SHALL be \u003e 0.\n        idTag:\n          type: string\n          description: The identifier that Charge Point must use to start a transaction.\n    RemoteStartTransactionJson:\n      type: object\n      required:\n        - idTag\n      properties:\n        connectorId:\n          type: integer\n          format: int32\n          description: \u003e\n            Number of the connector on which to start the transaction. connectorId SHALL be \u003e 0.\n        idTag:\n          type: string\n          description: The identifier that Charge Point must use to start a transaction.\n        chargingProfile:\n          $ref: '#/components/schemas/ChargingProfile'\n    RemoteStartTransactionResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          description: Status indicating whether Charge Point accepts the request to stop a transaction.\n          enum: [Accepted, Rejected]\n    RemoteStopTransaction:\n      type: object\n      required:\n        - transactionId\n      properties:\n        transactionId:\n          type: integer\n          format: int32\n          description: The identifier of the transaction which Charge Point is requested to stop.\n    RemoteStopTransactionResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          description: Status indicating whether Charge Point accepts the request to stop a transaction.\n          enum: [Accepted, Rejected]\n    ReserveNow:\n      type: object\n      required:\n        - connectorId\n        - expiryDate\n        - idTag\n        - reservationId\n      properties:\n        connectorId:\n          type: integer\n          format: int32\n          description: This contains the id of the connector to be reserved. A value of 0 means that the reservation is not for a specific connector.\n        expiryDate:\n          type: string\n          format: date-time\n          description: This contains the date and time when the reservation ends.\n        idTag:\n          type: string\n          description: The identifier for which the Charge Point has to reserve a connector.\n        parentIdTag:\n          type: string\n          description: The parent idTag.\n        reservationId:\n          type: integer\n          format: int32\n          description: Unique id for this reservation.\n    ReserveNowResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          description: This indicates the success or failure of the reservation.\n          enum: [Accepted, Faulted, Occupied, Rejected, Unavailable]\n    Reset:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          enum: [Hard, Soft]\n          default: Soft\n          description: This contains the type of reset that the Charge Point should perform.\n    ResetResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          description: This indicates whether the Charge Point is able to perform the reset.\n          enum: [Accepted, Rejected]\n    SendLocalList:\n      type: object\n      required:\n        - listVersion\n        - updateType\n      properties:\n        listVersion:\n          type: integer\n          format: int32\n          description: In case of a full update this is the version number of the full list. In case of a differential update it is the version number of the list after the update has been applied.\n        localAuthorizationList:\n          $ref: '#/components/schemas/AuthorizationData'\n        updateType:\n          type: string\n          enum: [Differential, Full]\n          description: This contains the type of update (full or differential) of this request.\n    SendLocalListResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          description: This indicates whether the Charge Point has successfully received and applied the update of the local authorization list.\n          enum: [Accepted, Failed, NotSupported, VersionMismatch]\n    SetChargingProfile:\n      type: object\n      required:\n        - connectorId\n        - csChargingProfiles\n      properties:\n        connectorId:\n          type: integer\n          format: int32\n          description: \u003e\n            The connector to which the charging profile applies. If connectorId = 0,the message contains an overall limit for the Charge Point.\n        csChargingProfiles:\n          $ref: '#/components/schemas/ChargingProfile'\n    SetChargingProfileResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          description: \u003e\n            Returns whether the Charge Point has been able to process the message successfully.\n            This does not guarantee the schedule will be followed to the letter. There might be other constraints the Charge Point may need to take into account.\n          enum: [Accepted, Rejected, NotSupported]\n    TriggerMessage:\n      type: object\n      required:\n        - requestedMessage\n      properties:\n        requestedMessage:\n          type: string\n          enum: [BootNotification, DiagnosticsStatusNotification, FirmwareStatusNotification, Heartbeat, MeterValues, StatusNotification]\n        connectorId:\n          type: integer\n          format: int32\n          description: Only filled in when request applies to a specific connector.\n    TriggerMessageResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          description: Indicates whether the Charge Point will send the requested notification or not.\n          enum: [Accepted, Rejected, NotImplemented]\n    UnlockConnector:\n      type: object\n      required:\n        - connectorId\n      properties:\n        connectorId:\n          type: integer\n          format: int32\n          description: This contains the identifier of the connector to be unlocked.\n    UnlockConnectorResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          description: This indicates whether the Charge Point has unlocked the connector.\n          enum: [Unlocked, UnlockFailed, NotSupported]\n    UpdateFirmware:\n      type: object\n      required:\n        - location\n        - retrieveDate\n      properties:\n        location:\n          type: string\n          format: uri\n          description: This contains a string containing a URI pointing to a location from which to retrieve the firmware.\n        retries:\n          type: integer\n          format: int32\n          description: \u003e\n            This specifies how many times Charge Point must try to download the\n            firmware before giving up. If this field is not present, it is left to Charge Point to\n            decide how many times it wants to retry.\n        retrieveDate:\n          type: string\n          format: date-time\n          description: \u003e\n            This contains the date and time after which the Charge Point is allowed to retrieve the (new) firmware.\n        retryInterval:\n          type: integer\n          format: int32\n          description: \u003e\n            The interval in seconds after which a retry may be attempted. If this\n            field is not present, it is left to Charge Point to decide how long to wait between attempts.\n    ChargingSchedule:\n      type: object\n      required:\n        - chargingRateUnit\n        - chargingSchedulePeriod\n      properties:\n        duration:\n          type: integer\n          format: int32\n          description: \u003e\n            Duration of the charging schedule in seconds.\n            If the duration is left empty, the last period will continue indefinitely or until end of the transaction in case startSchedule is absent.\n        startSchedule:\n          type: string\n          format: date-time\n        chargingRateUnit:\n          type: string\n          enum: [W, A]\n          description: The unit of measure Limit is expressed in.\n        chargingSchedulePeriod:\n          type: object\n          required:\n            - startPeriod\n            - limit\n          properties:\n            startPeriod:\n              type: integer\n              format: int32\n              description: Start of the period, in seconds from the start of schedule. The value of StartPeriod also defines the stop time of the previous period.\n            limit:\n              type: number\n              format: double\n              description: Charging rate limit during the schedule period, in the applicable chargingRateUnit, for example in Amperes or Watts.\n            numberPhases:\n              type: integer\n              format: int32\n              description: The number of phases that can be used for charging. If a number of phases is needed, numberPhases=3 will be assumed unless another number is given.\n        minChargingRate:\n          type: number\n          format: double\n          description: \u003e\n            Minimum charging rate supported by the electric vehicle. The unit of measure is defined by the chargingRateUnit.\n            This parameter is intended to be used by a local smart charging algorithm to optimize the power allocation for in the case a\n            charging process is inefficient at lower charging rates.\n    ChargingProfile:\n      type: object\n      required:\n        - chargingProfileId\n        - stackLevel\n        - chargingProfilePurpose\n        - chargingProfileKind\n        - chargingSchedule\n      properties:\n        chargingProfileId:\n          type: integer\n          format: int32\n          description: Unique identifier for this profile.\n        transactionId:\n          type: integer\n          format: int32\n          description: Only valid if ChargingProfilePurpose is set to TxProfile, the transactionId MAY be used to match the profile to a specific transaction.\n        stackLevel:\n          type: integer\n          format: int32\n          description: Value determining level in hierarchy stack of profiles. Higher values have precedence over lower values. Lowest level is 0.\n        chargingProfilePurpose:\n          type: string\n          description: Defines the purpose of the schedule transferred by this message.\n          enum: [ChargePointMaxProfile, TxDefaultProfile, TxProfile]\n        chargingProfileKind:\n          type: string\n          enum: [Absolute, Recurring, Relative]\n          description: Indicates the kind of schedule.\n        recurrencyKind:\n          type: string\n          enum: [Daily, Weekly]\n          description: Indicates the start point of a recurrence.\n        validFrom:\n          type: string\n          format: date-time\n          description: Point in time at which the profile starts to be valid. If absent, the profile is valid as soon as it is received by the Charge Point.\n        validTo:\n          type: string\n          format: date-time\n          description: Point in time at which the profile stops to be valid. If absent, the profile is valid until it is replaced by another profile.\n        chargingSchedule:\n          $ref: '#/components/schemas/ChargingSchedule'\n    AuthorizationData:\n      type: object\n      required:\n        - idTag\n      properties:\n        idTag:\n          type: string\n          description: The identifier to which this authorization applies.\n        idTagInfo:\n          $ref: '#/components/schemas/IdTagInfo'\n    IdTagInfo:\n      type: object\n      required:\n        - status\n      properties:\n        expiryDate:\n          type: string\n          format: date-time\n          description: This contains the date at which idTag should be removed from the Authorization Cache.\n        parentIdTag:\n          type: string\n          description: This contains the parent-identifier.\n        status:\n          type: string\n          enum: [Accepted, Blocked, Expired, Invalid, ConcurrentTx]\n          description: This contains whether the idTag has been accepted or not by the Central System.\n    ChargePointListResponse:\n      type: object\n      required:\n        - ChargePointList\n      properties:\n        ChargePointList:\n          type: array\n          items:\n            type: object\n            properties:\n              Identity:\n                type: string\n                description: Charge point identity.\n              Address:\n                type: string\n              Connection:\n                type: object\n                properties:\n                  Socket:\n                    type: integer\n                    format: int32\n                  IP:\n                    type: string\n                  Port:\n                    type: integer\n                    format: int32\n    TransactionList:\n      type: object\n      required:\n        - identity\n      properties:\n        identity:\n          type: string\n          description: Charge point identity.\n        dateFrom:\n          type: string\n          format: date-time\n        dateTo:\n          type: string\n          format: date-time\n    TransactionListResponce:\n      type: object\n      required:\n        - TransactionList\n      properties:\n        TransactionList:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n                format: int32\n                description: Transaction ID.\n              idTag:\n                type: string\n                description: The identifier to which this authorization applies.\n              identity:\n                type: string\n              serialNumber:\n                type: string\n              connectorId:\n                type: integer\n                format: int32\n              meterStart:\n                type: number\n                format: double\n              meterStop:\n                type: number\n                format: double\n              value:\n                type: number\n                format: double\n              reservationId:\n                type: integer\n                format: int32\n              reason:\n                type: string\n              data:\n                type: object\n              dateStart:\n                type: string\n                format: date-time\n              dateStop:\n                type: string\n                format: date-time\n    ReservationList:\n      type: object\n      required:\n        - identity\n      properties:\n        identity:\n          type: string\n          description: Charge point identity.\n        dateFrom:\n          type: string\n          format: date-time\n        dateTo:\n          type: string\n          format: date-time\n    ReservationListResponce:\n      type: object\n      required:\n        - ReservationList\n      properties:\n        ReservationList:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n                format: int32\n                description: Reservation ID.\n              idTag:\n                type: string\n                description: The identifier to which this authorization applies.\n              identity:\n                type: string\n              serialNumber:\n                type: string\n              connectorId:\n                type: integer\n                format: int32\n              expiryDate:\n                type: string\n                format: date-time\n              dateStart:\n                type: string\n                format: date-time\n              dateStop:\n                type: string\n                format: date-time\n    status:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          default: Accepted\n    response:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        error:\n          type: object\n          properties:\n            code:\n              type: integer\n              format: int32\n            message:\n              type: string\n    error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        error:\n          type: object\n          properties:\n            code:\n              type: integer\n              format: int32\n            message:\n              type: string\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      description: \u003e\n        This API uses OAuth 2 with the implicit grant flow.\n        [More info](https://github.com/apostoldevel/module-AuthServer).\n      flows:\n        password:\n          tokenUrl: https://ocpp-css.ru/oauth2/token\n          scopes:\n            css: default\n        implicit:\n          authorizationUrl: https://ocpp-css.ru/oauth2/authorize\n          scopes:\n            css: default\nsecurity:\n  - oauth2:\n      - css\n",
			"canonicalURL": "/github.com/apostoldevel/apostol-cs@b39621cbe3f3d3e242dce47a1edab9438a398224/-/blob/www/docs/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apostoldevel/apostol-cs/blob/b39621cbe3f3d3e242dce47a1edab9438a398224/www/docs/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/ChargePoint/{identity}/SendLocalList\": post: requestBody: contents: media: \"application/x-www-form-urlencoded\": form parameter \"localAuthorizationList\": field \"IdTagInfo\": nested objects not allowed",
	"NotImplemented": [
		"oauth2 security"
	]
}