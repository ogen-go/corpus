{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tagbase/tagbase-server"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tagbase_server/tagbase_server/openapi/openapi.yaml",
			"byteSize": 18237,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: tagtuna@gmail.com\n    name: Tagbase Dev Team\n    url: https://github.com/tagbase/tagbase-server/issues\n  description: \"tagbse-server provides HTTP endpoints for ingestion of various files\\\n    \\ \\\\\\ninto a Tagbase SQL database. Input file support currently includes eTUFF\\\n    \\ (see [here](https://doi.org/10.6084/m9.figshare.10032848.v4) \\\\\\nand [here](https://doi.org/10.6084/m9.figshare.10159820.v1)).\\\n    \\ The REST API complies with [OpenAPI v3.0.3](https://spec.openapis.org/oas/v3.0.3.html).\\n\"\n  license:\n    name: Apache License v2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  termsOfService: TODO\n  title: tagbase-server API\n  version: v0.7.0\nservers:\n- description: Local development tagbase-server\n  url: http://0.0.0.0:5433/v0.7.0\ntags:\n- description: Ingestion operations.\n  name: ingest\n- description: Tag Operations.\n  name: tags\npaths:\n  /ingest:\n    get:\n      description: Get network accessible file and execute ingestion\n      operationId: ingest_get\n      parameters:\n      - description: \"Location of a network accessible (file, ftp, http, https) file\\\n          \\ e.g. 'file:///usr/src/app/data/eTUFF-sailfish-117259.txt'.\"\n        explode: true\n        in: query\n        name: file\n        required: true\n        schema:\n          maxLength: 100\n          minLength: 10\n          pattern: ^(?!\\s*$).+\n          type: string\n        style: form\n      - description: \"Free-form text field where details of submitted eTUFF file for\\\n          \\ ingest can be provided e.g. submitter name, etuff data contents (tag metadata\\\n          \\ and measurements + primary position data, or just secondary solution-positional\\\n          \\ meta/data)\"\n        explode: true\n        in: query\n        name: notes\n        required: false\n        schema:\n          maxLength: 10000\n          minLength: 1\n          pattern: ^(?!\\s*$).+\n          type: string\n        style: form\n      - description: Unique numeric identifier for a given tag geolocation dataset\n          solution. solution_id=1 is assigned to the primary or approved solution.\n          Incremented solution_id's are assigned to other positional dataset solutions\n          for a given tag_id and submission_id\n        explode: true\n        in: query\n        name: solution_id\n        required: false\n        schema:\n          default: 1\n          type: number\n        style: form\n      - description: \"Type of file to be ingested, defaults to 'etuff'\"\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          default: etuff\n          enum:\n          - etuff\n          - netcdf\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ingest200'\n          description: A success message confirming ingestion.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response500'\n          description: Internal tagbase-server error. Contact admin detailed in openapi.yaml.\n      summary: Get network accessible file and execute ingestion\n      tags:\n      - ingest\n      x-openapi-router-controller: tagbase_server.controllers.ingest_controller\n    post:\n      description: Post a local file and perform a ingest operation\n      operationId: ingest_post\n      parameters:\n      - description: \"Free-form text field where details of submitted eTUFF file for\\\n          \\ ingest can be provided e.g. submitter name, etuff data contents (tag metadata\\\n          \\ and measurements + primary position data, or just secondary solution-positional\\\n          \\ meta/data)\"\n        explode: true\n        in: query\n        name: notes\n        required: false\n        schema:\n          maxLength: 10000\n          minLength: 1\n          pattern: ^(?!\\s*$).+\n          type: string\n        style: form\n      - description: Unique numeric identifier for a given tag geolocation dataset\n          solution. solution_id=1 is assigned to the primary or approved solution.\n          Incremented solution_id's are assigned to other positional dataset solutions\n          for a given tag_id and submission_id\n        explode: true\n        in: query\n        name: solution_id\n        required: false\n        schema:\n          default: 1\n          type: number\n        style: form\n      - description: \"Type of file to be ingested, defaults to 'etuff'\"\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          default: etuff\n          enum:\n          - etuff\n          - netcdf\n          type: string\n        style: form\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              description: text file containing eTUFF data\n              format: binary\n              maxLength: 1000000000\n              minLength: 1\n              type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ingest200'\n          description: A success message confirming ingestion.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response500'\n          description: Internal tagbase-server error. Contact admin detailed in openapi.yaml.\n      summary: Post a local file and perform a ingest operation\n      tags:\n      - ingest\n      x-codegen-request-body-name: etuff_body\n      x-openapi-router-controller: tagbase_server.controllers.ingest_controller\n  /tags:\n    get:\n      description: Get information about all tags\n      operationId: list_tags\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tags200'\n          description: A success message confirming ingestion.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response500'\n          description: Internal tagbase-server error. Contact admin detailed in openapi.yaml.\n      summary: Get information about all tags\n      tags:\n      - tags\n      x-openapi-router-controller: tagbase_server.controllers.tags_controller\n  /tags/{tag_id}:\n    get:\n      description: Get information about an individual tag\n      operationId: get_tag\n      parameters:\n      - description: Existing tag id\n        explode: true\n        in: path\n        name: tag_id\n        required: true\n        schema:\n          type: number\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag200'\n          description: A success message confirming ingestion.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response500'\n          description: Internal tagbase-server error. Contact admin detailed in openapi.yaml.\n      summary: Get information about an individual tag\n      tags:\n      - tags\n      x-openapi-router-controller: tagbase_server.controllers.tags_controller\n  /tags/{tag_id}/subs/{sub_id}:\n    put:\n      description: Update a tag submission\n      operationId: put_tag\n      parameters:\n      - description: \"Free-form text field where details of submitted eTUFF file for\\\n          \\ ingest can be provided e.g. submitter name, etuff data contents (tag metadata\\\n          \\ and measurements + primary position data, or just secondary solution-positional\\\n          \\ meta/data)\"\n        explode: true\n        in: query\n        name: notes\n        required: false\n        schema:\n          maxLength: 10000\n          minLength: 1\n          pattern: ^(?!\\s*$).+\n          type: string\n        style: form\n      - description: Existing tag id\n        explode: true\n        in: path\n        name: tag_id\n        required: true\n        schema:\n          type: number\n        style: simple\n      - description: Unique numeric identifier for a given tag geolocation dataset\n          solution. solution_id=1 is assigned to the primary or approved solution.\n          Incremented solution_id's are assigned to other positional dataset solutions\n          for a given tag_id and submission_id\n        explode: true\n        in: query\n        name: solution_id\n        required: false\n        schema:\n          default: 1\n          type: number\n        style: form\n      - description: Existing submission id for an existing tag\n        explode: true\n        in: path\n        name: sub_id\n        required: true\n        schema:\n          type: number\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagPut200'\n          description: A success message confirming ingestion.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response500'\n          description: Internal tagbase-server error. Contact admin detailed in openapi.yaml.\n      summary: Update the 'solution id' and/or 'notes' associated with a tag submission\n      tags:\n      - tags\n      x-openapi-router-controller: tagbase_server.controllers.tags_controller\ncomponents:\n  parameters:\n    notes:\n      description: \"Free-form text field where details of submitted eTUFF file for\\\n        \\ ingest can be provided e.g. submitter name, etuff data contents (tag metadata\\\n        \\ and measurements + primary position data, or just secondary solution-positional\\\n        \\ meta/data)\"\n      explode: true\n      in: query\n      name: notes\n      required: false\n      schema:\n        maxLength: 10000\n        minLength: 1\n        pattern: ^(?!\\s*$).+\n        type: string\n      style: form\n    solutionId:\n      description: Unique numeric identifier for a given tag geolocation dataset solution.\n        solution_id=1 is assigned to the primary or approved solution. Incremented\n        solution_id's are assigned to other positional dataset solutions for a given\n        tag_id and submission_id\n      explode: true\n      in: query\n      name: solution_id\n      required: false\n      schema:\n        default: 1\n        type: number\n      style: form\n    subId:\n      description: Existing submission id for an existing tag\n      explode: true\n      in: path\n      name: sub_id\n      required: true\n      schema:\n        type: number\n      style: simple\n    tagId:\n      description: Existing tag id\n      explode: true\n      in: path\n      name: tag_id\n      required: true\n      schema:\n        type: number\n      style: simple\n    type:\n      description: \"Type of file to be ingested, defaults to 'etuff'\"\n      explode: true\n      in: query\n      name: type\n      required: false\n      schema:\n        default: etuff\n        enum:\n        - etuff\n        - netcdf\n        type: string\n      style: form\n  schemas:\n    filename:\n      description: Full name and extension of the ingested eTUFF tag data file\n      example: eTUFF-sailfish-117259_2.txt\n      title: filename\n      type: string\n    Ingest200:\n      description: HTTP 200 success response\n      example:\n        code: \"200\"\n        elapsed: 0:00:06.506691\n        message: Data file eTUFF-sailfish-117259.txt successfully ingested into Tagbase\n          DB.\n      properties:\n        code:\n          description: HTTP status code\n          example: \"200\"\n          type: string\n        elapsed:\n          description: Elapsed time for the operation\n          type: string\n        message:\n          description: A string detailing specifics of an HTTP operation\n          example: Data file eTUFF-sailfish-117259.txt successfully ingested into\n            Tagbase DB.\n          type: string\n      title: Ingest200\n      type: object\n    Response500:\n      description: 500 Internal Server Error\n      example:\n        code: \"200\"\n        message: Unable to connect to the Tagbase database\n        more_info: https://httpwg.org/specs/rfc7231.html#status.500\n        trace: 123e4567-e89b-12d3-a456-426614174000\n      properties:\n        code:\n          description: HTTP status code\n          example: \"200\"\n          type: string\n        message:\n          description: A string detailing specifics of the HTTP 500 response\n          example: Data file eTUFF-sailfish-117259.txt successfully ingested into\n            Tagbase DB.\n          type: string\n        more_info:\n          description: Additional details (if available) to diagnose the 500 response.\n          example: https://httpwg.org/specs/rfc7231.html#status.500\n          type: string\n        trace:\n          description: Trace diagnostic information related to the response\n          example: 123e4567-e89b-12d3-a456-426614174000\n          type: string\n      title: Response500\n      type: object\n    Tag200:\n      description: Information for a given tag\n      example:\n        tag:\n        - date_time: 2022-04-01T04:58:21.319061+00:00\n          filename: eTUFF-sailfish-117259_2.txt\n          metadata:\n            person_owner: John Do\n            owner_contect: john@do.net\n            manufacturer: telemetry inc.\n            model: new_gen\n            attachment_method: anchor\n          notes: Ingested by admin on 2022-06-01 for Sailfish tagging campaign.\n          submission_id: 5\n          tag_id: 3\n          solution_id: 1\n        - date_time: 2022-04-01T05:39:46.896088+00:00\n          filename: eTUFF-sailfish-117259_2.txt\n          metadata:\n            person_owner: Jane Do\n            owner_contect: jane@do.net\n            manufacturer: telemetry inc.\n            model: newer_gen\n            attachment_method: anchor\n          notes: Ingested by admin on 2022-06-01 for solution_id 1 of the Sailfish\n            tagging campaign.\n          submission_id: 6\n          tag_id: 3\n          solution_id: 1\n      properties:\n        tag:\n          description: List containing one or more submissions for a given tag\n          items:\n            $ref: '#/components/schemas/Tag200_tag_inner'\n          type: array\n      title: Tag200\n      type: object\n    TagPut200:\n      description: HTTP 200 success response\n      example:\n        code: \"200\"\n        message: Tag '1' submission '5' successfully updated.\n      properties:\n        code:\n          description: HTTP status code\n          example: \"200\"\n          type: string\n        message:\n          description: A string detailing specifics of an HTTP operation\n          example: Tag '1' submission '5' successfully updated.\n          type: string\n      title: TagPut200\n      type: object\n    Tags200:\n      description: Response detailing all available unique tags and associated filename\n      example:\n        count: 2\n        tags:\n        - tag_id: 1\n          filename: eTUFF-sailfish-117259_2.txt\n        - tag_id: 2\n          filename: eTUFF-sailfish-117259.txt\n      properties:\n        count:\n          description: Total count of unique tags\n          example: 2\n          type: integer\n        tags:\n          description: List of unique numeric Tag IDs and associated filename\n          items:\n            $ref: '#/components/schemas/Tags200_tags_inner'\n          type: array\n      title: Tags200\n      type: object\n    Tag200_tag_inner:\n      properties:\n        date_time:\n          description: Local datetime stamp at the time of eTUFF tag data file ingestion\n          example: 2022-04-01T04:58:21.319061+00:00\n          title: date_time\n          type: string\n        filename:\n          description: Full name and extension of the ingested eTUFF tag data file\n          example: eTUFF-sailfish-117259_2.txt\n          title: filename\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: Contains the ingested tag metadata consistent with the eTUFF\n            specification\n          example:\n            person_owner: John Do\n            owner_contect: john@do.net\n            manufacturer: telemetry inc.\n            model: new_gen\n            attachment_method: anchor\n          title: metadata\n          type: object\n        notes:\n          description: \"Free-form text field where details of submitted eTUFF file\\\n            \\ for ingest can be provided e.g. submitter name, etuff data contents\\\n            \\ (tag metadata and measurements + primary position data, or just secondary\\\n            \\ solutionpositional meta/data)\"\n          example: Ingested by admin on XXXX-XX-XX to back-process campaign XYZ.\n          title: notes\n          type: string\n        solution_id:\n          description: Unique numeric identifier for a given tag geolocation dataset\n            solution. solution_id=1 is assigned to the primary or approved solution.\n            Incremented solution_id's are assigned to other positional dataset solutions\n            for a given tag_id and submission_id\n          example: 1\n          title: solution_id\n          type: integer\n        submission_id:\n          description: Unique numeric ID assigned upon submission of a tag eTUFF data\n            file for ingest/importation into Tagbase\n          example: 5\n          title: submission_id\n          type: integer\n        tag_id:\n          description: Unique numeric Tag ID associated with the ingested tag eTUFF\n            data file\n          example: 3\n          title: tag_id\n          type: integer\n      title: Tag200_tag_inner\n      type: object\n    Tags200_tags_inner:\n      description: Unique numeric Tag ID associated with the ingested tag eTUFF data\n        file\n      example:\n        tag_id: 1\n        filename: eTUFF-sailfish-117259_2.txt\n      properties:\n        tag_id:\n          description: Unique numeric Tag ID associated with the ingested tag data\n            file\n          example: 1\n          type: integer\n        filename:\n          description: Full name and extension of the ingested eTUFF tag data file\n          example: eTUFF-sailfish-117259.txt\n          type: string\n      title: Tags200_tags_inner\n      type: object\n",
			"canonicalURL": "/github.com/tagbase/tagbase-server@3fb46798c78f111b7cef4330ac32a29a21db3cbf/-/blob/tagbase_server/tagbase_server/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tagbase/tagbase-server/blob/3fb46798c78f111b7cef4330ac32a29a21db3cbf/tagbase_server/tagbase_server/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/ingest\": get: parameters: \"file\": string validator: pattern: error parsing regexp: invalid or unsupported Perl syntax: `(?!`"
}