{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ibm-cloud-docs/blockchain"
		},
		"file": {
			"name": "ibp-v1.yaml",
			"size": 0,
			"path": "reference/ibp-v1.yaml",
			"byteSize": 111220,
			"content": "openapi: 3.0.0\ninfo:\n  title: IBM Blockchain Platform APIs\n  description: This doc lists APIs that you can use to interact with your IBM Blockchain Platform console.\n  contact:\n    name: Blockchain Service Support\n    url: https://cloud.ibm.com/docs/services/blockchain/ibmblockchain_support.html#ibmblockchain_support\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.2\n  x-alternate-name: blockchain\n  x-codegen-config:\n    go:\n      apiPackage: 'github.ibm.com/ibmcloud/blockchain-go-sdk'\n  x-try-it-out-enabled:\n    enabled: true\n    credentials: false\nexternalDocs:\n  description: |\n    Find out more about Swagger\n  url: http://swagger.io\nservers:\n- url: https://<your-instance-id-here>.<cluster-id>.blockchain.cloud.ibm.com\nsecurity:\n- BearerAuth: []\n\ntags:\n- name: Managing components\n  description: APIs to create, import, edit and delete components.\n- name: Monitoring the network\n  description: APIs read and write notifications as well manage the logging behavior.\n- name: Administer the console\n  description: APIs to understand the console settings and health.\npaths:\n  /ak/api/v1/logs/file_settings:\n    put:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"client\":{\"enabled\": true,\"level\": \"silly\",\"unique_name\": false},\"server\":{\"enabled\": true,\"level\": \"info\",\"unique_name\": false}}'\n      tags:\n      - Monitoring the network\n      summary: Change logging settings\n      description: |\n        Change your **console's** file logging settings. Settings that are omitted from the request body will remain unchanged.\n      operationId: update_file_settings\n      requestBody:\n        description: |\n          Include only the settings that you want to change, and the other settings will remain unchanged.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeLoggingSettings'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \\\n                        https://<API endpoint>/ak/api/v1/logs/file_settings \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                            \"client\": {\n                              \"enabled\": true,\n                              \"level\": \"silly\",\n                              \"unique_name\": false\n                              },\n                              \"server\": {\n                                \"enabled\": true,\n                                \"level\": \"info\",\n                                \"unique_name\": false\n                              }\n                            }'\n      responses:\n        200:\n          description: |\n            Successful and the updated settings are returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsoleLoggingSettings'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/components:\n    get:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Managing components\n      summary: Get all components\n      description: |\n        Get all components from the console database. The components include peers, CAs, orderers, MSPs, and so on.\n      operationId: list_components\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \\\n                        https://<API endpoint>/ak/api/v1/components \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and returns an array of all components.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Component'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/kubernetes/components/ca:\n    post:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"display_name\": \"Sample CA\",\"enroll_id\": \"admin\",\"enroll_secret\": \"secret\"}'\n      tags:\n      - Managing components\n      summary: Create a CA\n      description: |\n        Create a CA in your Kubernetes cluster.\n      operationId: create_ca\n      requestBody:\n        description: |\n          Create a CA in your Kubernetes cluster.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateFabricCA'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \\\n                        https://<API endpoint>/ak/api/v1/kubernetes/components/ca \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                          \"display_name\": \"Sample CA\",\n                          \"enroll_id\": \"admin\",\n                          \"enroll_secret\": \"secret\"\n                          }'\n      responses:\n        200:\n          description: |\n            Successful and the CA is created in your Kubernetes cluster.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateFabricComponentResponse'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/components/ca:\n    post:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"display_name\": \"Sample CA\",\"api_url\": \"https://169.55.231.189:30159\",\"ca_name\": \"org1CA\",\"tlsca_name\": \"org1CA\",\"enroll_id\": \"admin\",\"enroll_secret\": \"secret\",\"pem\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"}'\n      tags:\n      - Managing components\n      summary: Import a CA\n      description: |\n        Import an existing CA to your console. You can only use this API to import IBM Blockchain components created by using these APIs or another IBM Blockchain Platform console.\n      operationId: import_ca\n      requestBody:\n        description: |\n          Import a CA.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportFabricCA'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \\\n                        https://<API endpoint>/ak/api/v1/components/ca \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                          \"display_name\": \"Sample CA\",\n                          \"location\": \"ibm_saas\",\n                          \"api_url\": \"https://169.55.231.189:30159\",\n                          \"ca_name\": \"org1CA\",\n                          \"tlsca_name\": \"org1CA\",\n                          \"enroll_id\": \"admin\",\n                          \"enroll_secret\": \"secret\",\n                          \"pem\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"\n                          }'\n      responses:\n        200:\n          description: |\n            Successful and the CA is imported.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportFabricCAResponseBody'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/components/ca/{id}:\n    put:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"display_name\": \"Sample CA\",\"api_url\": \"https://169.55.231.189:30123\",\"msp_id\": \"PeerOrg1\",\"ca_name\": \"org1CA\"}'\n      tags:\n      - Managing components\n      summary: Edit a CA\n      description: |\n        Modify one or more properties in a CA. For example, the \"display_name\" property.\n      operationId: update_ca\n      parameters:\n        - name: id\n          in: path\n          description: |\n            The `id` of the component to modify. Use the `Get all components` API to determine the component id.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: |\n          Edit a CA.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditCA'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \\\n                        https://<API endpoint>/ak/api/v1/components/ca \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                        \"display_name\": \"Sample CA\",\n                        \"api_url\": \"https://169.55.231.189:30123\",\n                        \"ca_name\": \"ca\"\n                        }'\n      responses:\n        200:\n          description: |\n            Successful and CA properties are updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditFabricComponentResponseBody'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/kubernetes/components/orderer:\n    post:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"orderer_type\": \"raft\", \"msp_id\": \"orderermsp\",\"config\": [<configuration file 1>,<configuration file 2>],\"cluster_name\": \"Ordering Service1\", \"display_name\": \"orderer\"}'\n      tags:\n      - Managing components\n      summary: Create an ordering service\n      description: |\n        Create a Raft ordering service in your Kubernetes cluster.\n      operationId: create_orderer\n      requestBody:\n        description: |\n          Create an ordering service in your Kubernetes cluster.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateFabricOrdererRaft'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \\\n                        https://<API endpoint>/ak/api/v1/kubernetes/components/orderer \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                        \"orderer_type\": \"raft\",\n                        \"msp_id\": \"orderermsp\",\n                        \"config\": [<configuration file 1>,<configuration file 2>],\n                        \"cluster_name\": \"ordering service1\",\n                        \"display_name\": \"orderer\"\n                        }'\n      responses:\n        200:\n          description: |\n            Successful and the orderer is created in your Kubernetes cluster.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateFabricComponentResponse'\n        401:\n          description: |\n            Unauthorized.\n  # hiding solo orderer, use raft\n  #/ak/api/v1/kubernetes/components/orderer:\n  #  post:\n  #    x-try-it-out-example:\n  #      -\n  #        in: header\n  #        name: Authorization\n  #        value: Bearer <token>\n  #      -\n  #        in: body\n  #        name: body\n  #        value: '{\"msp_id\": \"org2\",\"config\": <paste configuration here>,\"display_name\": \"orderer2\"}'\n  #    tags:\n  #    - Managing components\n  #    summary: Create an orderer\n  #    description: |\n  #      Create an orderer in your Kubernetes cluster.\n  #    operationId: createFabricOrderer\n  #    requestBody:\n  #      description: |\n  #        Create an orderer in your Kubernetes cluster.\n  #      content:\n  #        application/json:\n  #          schema:\n  #            $ref: '#/components/schemas/CreateFabricOrderer'\n  #      required: true\n  #    x-sdk-operations:\n  #      request-examples:\n  #        curl:\n  #          - name: Example request\n  #            example:\n  #              - type: code\n  #                lang: curl\n  #                source:\n  #                  - |-\n  #                    curl -X POST \\\n  #                      https://<API endpoint>/ak/api/v1/kubernetes/components/orderer \\\n  #                      -H 'Content-Type: application/json' \\\n  #                      -H 'Authorization: Bearer <IAM_token>' \\\n  #                      -d '{\n  #                      \"msp_id\": \"org2\",\n  #                      \"config\": <paste configuration here>,\n  #                      \"display_name\": \"orderer2\"\n  #                      }'\n  #    responses:\n  #      200:\n  #        description: |\n  #          Successful and the orderer is created in your Kubernetes cluster.\n  #        content:\n  #          application/json:\n  #            schema:\n  #              $ref: '#/components/schemas/CreateFabricComponentResponse'\n  #      401:\n  #        description: |\n  #          Unauthorized.\n  /ak/api/v1/components/orderer:\n    post:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"cluster_id\": \"njuunjxpgn\",\"cluster_name\": \"ordering service1\",\"display_name\": \"orderer\",\"location\": \"ibm_saas\",\"api_url\": \"https://169.55.231.189:31086\",\"msp_id\": \"orderermsp\",\"operations_url\": \"https://optools.so01.blockchain.cloud.ibm.com\",\"grpcwp_url\": \"https://optools.so01.blockchain.cloud.ibm.com\"}'\n      tags:\n      - Managing components\n      summary: Import an ordering service\n      description: |\n        Import an existing orderer to your console. You can only use this API to import IBM Blockchain components created by using these APIs or another IBM Blockchain Platform console.\n      operationId: import_orderer\n      requestBody:\n        description: |\n          Import an ordering service.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportFabricOrderer'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \\\n                        https://<API endpoint>/ak/api/v1/components/orderer \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                        \"cluster_id\": \"njuunjxpgn\",\n                        \"cluster_name\": \"ordering service1\",\n                        \"display_name\": \"orderer\",\n                        \"location\": \"ibm_saas\",\n                        \"api_url\": \"https://169.55.231.189:31086\",\n                        \"msp_id\": \"orderermsp\",\n                        \"operations_url\": \"https://optools.so01.blockchain.cloud.ibm.com\",\n                        \"grpcwp_url\": \"https://optools.so01.blockchain.cloud.ibm.com\"\n                        }'\n      responses:\n        200:\n          description: |\n            Successful and the orderer is imported.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportFabricOrdererResponseBody'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/components/orderer/{id}:\n    put:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"cluster_name\": \"ordering service1\",\"display_name\": \"orderer\",\"api_url\": \"https://169.55.231.189:30141\",\"msp_id\": \"orderermsp\",}'\n      tags:\n      - Managing components\n      summary: Edit an ordering service\n      description: |\n        Modify one or more properties in an orderer. For example, the \"display_name\" property.\n      operationId: update_orderer\n      parameters:\n        - name: id\n          in: path\n          description: |\n            The `id` of the component to modify. Use the `Get all components` API to determine the component id.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: |\n          Edit an ordering service.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditOrderer'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \\\n                        https://<API endpoint>/ak/api/v1/components/orderer \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                        \"cluster_name\": \"ordering service1\",\n                        \"display_name\": \"orderer\",\n                        \"api_url\": \"https://169.55.231.189:30141\",\n                        \"msp_id\": \"orderermsp\"\n                        }'\n      responses:\n        200:\n          description: |\n            Successful and the orderer properties are updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditFabricComponentResponseBody'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/kubernetes/components/peer:\n    post:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"msp_id\": \"org2\",\"config\": <paste configuration here>,\"display_name\": \"peer2\"}'\n      tags:\n      - Managing components\n      summary: Create a peer\n      description: |\n        Create a peer in your Kubernetes cluster.\n      operationId: create_peer\n      requestBody:\n        description: |\n          Create a peer in your Kubernetes cluster.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateFabricPeer'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \\\n                        https://<API endpoint>/ak/api/v1/kubernetes/components/peer \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                        \"msp_id\": \"org2\",\n                        \"config\": <paste configuration here>,\n                        \"display_name\": \"peer2\"\n                        }'\n      responses:\n        200:\n          description: |\n            Successful and the peer is created in your Kubernetes cluster.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateFabricComponentResponse'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/components/peer:\n    post:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"display_name\":\"Peer1Org1\",\"location\":\"ibm_saas\",\"api_url\":\"https://169.55.231.189:31336\",\"msp_id\":\"PeerOrg1\",\"operations_url\":\"https://optools.so01.blockchain.cloud.ibm.com\",\"grpcwp_url\":\"https://optools.so01.blockchain.cloud.ibm.com\"}'\n      tags:\n      - Managing components\n      summary: Import a peer\n      description: |\n        Import an existing peer into your console. You can only use this API to import IBM Blockchain components created by using these APIs or another IBM Blockchain Platform console.\n      operationId: import_peer\n      requestBody:\n        description: |\n          Import a peer.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportFabricPeer'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \\\n                        https://<API endpoint>/ak/api/v1/components/peer \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                        \"display_name\": \"Peer1Org1\",\n                        \"location\": \"ibm_saas\",\n                        \"api_url\": \"https://169.55.231.189:31336\",\n                        \"msp_id\": \"PeerOrg1\",\n                        \"operations_url\": \"https://optools.so01.blockchain.cloud.ibm.com\",\n                        \"grpcwp_url\": \"https://optools.so01.blockchain.cloud.ibm.com\"\n                        }'\n      responses:\n        200:\n          description: |\n            Successful and the peer is imported.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportFabricPeerResponseBody'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/components/peer/{id}:\n    put:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"display_name\": \"Peer1Org1\",\"api_url\": \"https://169.55.231.189:31289\",\"msp_id\": \"PeerOrg1\"}'\n      tags:\n      - Managing components\n      summary: Edit a peer\n      description: |\n        Modify one or more properties in a peer. For example, the \"display_name\" property.\n      operationId: update_peer\n      parameters:\n        - name: id\n          in: path\n          description: |\n            The `id` of the component to modify. Use the `Get all components` API to determine the component id.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: |\n          Edit a peer.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditPeer'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X PUT \\\n                        https://<API endpoint>/ak/api/v1/components/peer \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                        \"display_name\": \"Peer1Org1\",\n                        \"api_url\": \"https://169.55.231.189:31289\",\n                        \"msp_id\": \"PeerOrg1\"\n                        }'\n      responses:\n        200:\n          description: |\n            Successful and the peer properties are updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditFabricComponentResponseBody'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/components/msp:\n    post:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"msp_id\": \"PeerOrg1\",\"display_name\": \"PeerOrg1 msp\",\"root_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\"intermediate_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\"admins\": [\"admin1\"],\"tls_root_certs\":  [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\"revocation_list\": [\"revocation_member1\"],\"organizational_unit_identifiers\": [\"oui id 1\"],\"fabric_node_ous\": [\"ous id 1\"]}'\n      tags:\n      - Managing components\n      summary: Create or import a Membership Service Provider (MSP)\n      description: |\n        Import an MSP definition into your console. You can use this definition to represent the peer or orderer organization.\n      operationId: import_msp\n      requestBody:\n        description: |\n         Create or import an MSP.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddMSP'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \\\n                        https://<API endpoint>/ak/api/v1/components/msp \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                        \"msp_id\": \"PeerOrg1\",\n                        \"display_name\": \"PeerOrg1 msp\",\n                        \"root_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\n                        \"intermediate_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\n                        \"admins\": [\"admin1\"],\n                        \"tls_root_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\n                        \"revocation_list\": [\"revocation_member1\"],\n                        \"organizational_unit_identifiers\": [\"oui id 1\"],\n                        \"fabric_node_ous\": [\"ous id 1\"]\n                        }'\n      responses:\n        200:\n          description: |\n            Successful and the new MSP is imported.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddMSPResponseBody'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/components/msp/{id}:\n    put:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n        -\n          in: body\n          name: body\n          value: '{\"msp_id\": \"PeerOrg1\",\"display_name\": \"PeerOrg1 msp\",\"root_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\"intermediate_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\"admins\": [\"admin1\"],\"tls_root_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\"revocation_list\": [\"revocation_member1\"],\"organizational_unit_identifiers\": [\"oui id 1\"],\"fabric_node_ous\": [\"ous id 1\"]}'\n      tags:\n      - Managing components\n      summary: Edit an MSP\n      description: |\n        Modify one or more properties in an MSP definition. For example, the \"fabric_node_ous\" property.\n      operationId: update_msp\n      parameters:\n        - name: id\n          in: path\n          description: |\n            The `id` of the component to modify. Use the `Get all components` API to determine the component id.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: |\n          Edit an MSP.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditMSP'\n        required: true\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \\\n                        https://<API endpoint>/ak/api/v1/components/msp \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>' \\\n                        -d '{\n                        \"msp_id\": \"PeerOrg1\",\n                        \"display_name\": \"PeerOrg1 msp\",\n                        \"root_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\n                        \"intermediate_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\n                        \"admins\": [\"admin1\"],\n                        \"tls_root_certs\": [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"],\n                        \"revocation_list\": [\"revocation_member1\"],\n                        \"organizational_unit_identifiers\": [\"oui id 1\"],\n                        \"fabric_node_ous\": [\"ous id 1\"]\n                        }'\n      responses:\n        200:\n          description: |\n            Successful and the MSP properties are updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditFabricComponentResponseBody'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/components/msps/{msp_id}:\n    get:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Managing components\n      summary: Get a local MSP's certificate\n      description: |\n        External party's IBM Blockchain Platform consoles can use this API to get the public certificate for a given MSP id.\n      operationId: get_msp_certificate\n      parameters:\n        - name: msp_id\n          in: path\n          description: |\n            The `msp_id` to fetch\n          required: true\n          schema:\n            type: string\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \\\n                        https://<API endpoint>/ak/api/v1/components/msps/{msp_id} \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and the local msp's certificate is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMSPCertificateResponse'\n  /ak/api/v1/components/{id}:\n    get:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Managing components\n      summary: Get a component\n      description: |\n        Get the parameters for a single component by specifying its id.\n      operationId: get_component\n      parameters:\n        - name: id\n          in: path\n          description: |\n            The `id` of the component to retrieve. Use the `Get all components` API to determine the component id.\n          required: true\n          schema:\n            type: string\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \\\n                        https://<API endpoint>/ak/api/v1/components/<ID> \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and returns an object of the component.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Component'\n        401:\n          description: |\n            Unauthorized.\n    delete:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Managing components\n      summary: Remove an imported component\n      description: |\n        Remove a single component that was imported to the console. Note this action does not delete the component from the Kubernetes cluster where it resides. It simply removes it from the IBM Blockchain Platform console.\n      operationId: remove_component\n      parameters:\n        - name: id\n          in: path\n          description: |\n            The `id` of the imported component to remove. Use the `Get all components` API to determine the component id.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \\\n                        https://<API endpoint>/ak/api/v1/components/<ID> \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and the component is deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteComponentResponse'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/kubernetes/components/{id}:\n    delete:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Managing components\n      summary: Delete a component\n      description: |\n        Delete a single component from your IBM Blockchain Platform console and from your Kubernetes cluster. A component can be a peer, CA, or orderer.\n      operationId: delete_component\n      parameters:\n        - name: id\n          in: path\n          description: |\n            The `id` of the component to delete. Use the `Get all components` API to determine the id of the component to be deleted.\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \\\n                        https://<API endpoint>/ak/api/v1/kubernetes/components/<ID> \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and the component is deleted from your Kubernetes cluster.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteComponentResponse'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/kubernetes/components/purge:\n    delete:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Managing components\n      summary: Delete all components\n      description: |\n        Delete all components in your Kubernetes cluster. The components include Fabric peers, CAs, and orderers.\n      operationId: delete_all_components\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \\\n                        https://<API endpoint>/ak/api/v1/kubernetes/components/purge \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and all componentes are deleted from your Kubernetes cluster.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteComponentResponse'\n        401:\n          description: Unauthorized\n  /ak/api/v1/notifications:\n    get:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Monitoring the network\n      summary: Get notifications\n      description: |\n        Retrieve all notifications. Use this API to paginate through notifications. Possible notifications include actions such as creating a component, deleting a component, server restart, and so on.\n      operationId: list_notifications\n      parameters:\n        - name: limit\n          in: query\n          description: |\n            The number of notifications to return. The default value is 100.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: number\n        - name: skip\n          in: query\n          description: |\n            `skip` is used to paginate through a long list of sorted entries. For example, if there are 100 notifications, you can issue the API with limit=10 and skip=0 to get the first 1-10. To get the next 10, you can set limit=10 and skip=10 so that the values of entries 11-20 are returned.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: number\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \\\n                        'https://<API endpoint>/ak/api/v1/notifications?limit=20&skip=0' \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and all notifications are returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetNotificationsResponseBody'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/notifications/purge:\n    delete:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Monitoring the network\n      summary: Delete all notifications\n      description: |\n        Delete all notifications. This API is intended for debugging and administration.\n      operationId: delete_all_notifications\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \\\n                        https://<API endpoint>/ak/api/v1/notifications/purge \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and all notifications are deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAllNotificationsResponse'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/settings:\n    get:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Administer the console\n      summary: Get settings for the IBM Blockchain Platform console\n      description: |\n        Retrieve all non-sensitive settings for IBM Blockchain Platform console. Use this API for debugging purposes and to view the current settings. This API informs you of what behavior to expect and confirms whether the desired settings are active.\n      operationId: get_settings\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \\\n                        https://<API endpoint>/ak/api/v1/settings \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and the IBM Blockchain Platform console settings are returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetNonSensitiveSettingsResponseBody'\n  /ak/api/v1/restart:\n    post:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Administer the console\n      summary: Restart IBM Blockchain Platform console\n      description: |\n        Restart the IBM Blockchain Platform console process.\n      operationId: restart\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X POST \\\n                        https://<API endpoint>/ak/api/v1/restart \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and IBM Blockchain Platform console is restarted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestartAthenaResponse'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/sessions:\n    delete:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Administer the console\n      summary: Delete all IBM Blockchain Platform console sessions\n      description: |\n        Delete all client sessions in IBM Blockchain Platform console. Use this API to delete all client sessions in order to clear any active logins and force everyone to login again. This API is useful for debugging purposes and when you change roles of a user and want those changes to take effect immediately. Otherwise, permission or role changes will take effect during the user's next login or session expiration.\n      operationId: delete_all_sessions\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X DELETE \\\n                        https://<API endpoint>/ak/api/v1/sessions \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and all sessions are deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAllSessionsResponse'\n        401:\n          description: |\n            Unauthorized.\n  /ak/api/v1/health:\n    get:\n      x-try-it-out-example:\n        -\n          in: header\n          name: Authorization\n          value: Bearer <token>\n      tags:\n      - Administer the console\n      summary: Get IBM Blockchain Platform console health stats\n      description: |\n        See memory and CPU usage for the console process and other OS stats.\n      operationId: get_health\n      x-sdk-operations:\n        request-examples:\n          curl:\n            - name: Example request\n              example:\n                - type: code\n                  lang: curl\n                  source:\n                    - |-\n                      curl -X GET \\\n                        https://<API endpoint>/ak/api/v1/health \\\n                        -H 'Content-Type: application/json' \\\n                        -H 'Authorization: Bearer <IAM_token>'\n      responses:\n        200:\n          description: |\n            Successful and health statistics are returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAthenaHealthStatsResponse'\n        401:\n          description: |\n            Unauthorized.\n\n  # Lines in this file with 3 hashes indicate that these apis are for IBP Software product.\n  # The (###) will get deleted by travis in our docker image.\n  # The SaaS swagger file will keep these apis commented out.\n  ###/ak/api/v1/permissions/keys:\n  ###  post:\n  ###    tags:\n  ###    - Administer the console\n  ###    summary: ICP - Create an api key\n  ###    description: |\n  ###      ICP - Create an api key. This key can be used to authenticate and call other apis. Only users or api keys with a `manager` role can call this api. The ###`api_secret` in the reponse must be saved by the user. It is unrecoverable. API keys do not expire.\n  ###    requestBody:\n  ###      description: |\n  ###        Pass the desired roles for the new api key. Valid roles - \"reader\", \"writer\", \"manager\".\n  ###      content:\n  ###        application/json:\n  ###          schema:\n  ###            $ref: '#/components/schemas/CreateApiKeyBody'\n  ###      required: true\n  ###    responses:\n  ###      200:\n  ###        description: Successful response.\n  ###        content:\n  ###          application/json:\n  ###            schema:\n  ###              $ref: '#/components/schemas/CreateApiKeyBodyResponse'\n  ###      401:\n  ###        description: Unauthorized.\n  ###  get:\n  ###    tags:\n  ###    - Administer the console\n  ###    summary: ICP - List api keys\n  ###    description: |\n  ###      ICP - List all api keys.\n  ###    responses:\n  ###      200:\n  ###        description: Successful response.\n  ###        content:\n  ###          application/json:\n  ###            schema:\n  ###              $ref: '#/components/schemas/GetApiKeyBodyResponse'\n  ###      401:\n  ###        description:  Unauthorized.\n  ###/ak/api/v1/permissions/keys/{key_id}:\n  ###  delete:\n  ###    tags:\n  ###    - Administer the console\n  ###    summary: ICP - Delete an api key\n  ###    description: |\n  ###      ICP - Delete an api key.\n  ###    parameters:\n  ###      - name: key_id\n  ###        in: path\n  ###        description: |\n  ###          The `api_key` to delete.\n  ###        required: true\n  ###        schema:\n  ###          type: string\n  ###    responses:\n  ###      200:\n  ###        description: Successful response.\n  ###        content:\n  ###          application/json:\n  ###            schema:\n  ###              $ref: '#/components/schemas/DeleteApiKeyBodyResponse'\n  ###      401:\n  ###        description:  Unauthorized.\n  ###/ak/api/v1/permissions/users:\n  ###  post:\n  ###    tags:\n  ###    - Administer the console\n  ###    summary: ICP - Add users to the IBM Blockchain Platform console\n  ###    description: |\n  ###      ICP - add new users. Only users or api keys with a `manager` role can call this api.\n  ###    requestBody:\n  ###      description: |\n  ###        Pass the desired roles for the usernames. Valid roles - \"reader\", \"writer\", \"manager\".\n  ###      content:\n  ###        application/json:\n  ###          schema:\n  ###            $ref: '#/components/schemas/AddUserBody'\n  ###      required: true\n  ###    responses:\n  ###      200:\n  ###        description: Successful response.\n  ###        content:\n  ###          application/json:\n  ###            schema:\n  ###              $ref: '#/components/schemas/AddUserResponse'\n  ###      401:\n  ###        description:  Unauthorized.\n  ###  delete:\n  ###    tags:\n  ###    - Administer the console\n  ###    summary: ICP - Delete users from the IBM Blockchain Platform console\n  ###    description: |\n  ###      ICP - Delete existing users by uuid. Only users or api keys with a `manager` role can call this api. Note that uuids are expected, not usernames.\n  ###    requestBody:\n  ###      description: |\n  ###        Pass the desired roles for the usernames. Valid roles - \"reader\", \"writer\", \"manager\".\n  ###      content:\n  ###        application/json:\n  ###          schema:\n  ###            $ref: '#/components/schemas/DeleteUserBody'\n  ###      required: true\n  ###    responses:\n  ###      200:\n  ###        description: Successful response.\n  ###        content:\n  ###          application/json:\n  ###            schema:\n  ###              $ref: '#/components/schemas/DeleteUserResponse'\n  ###      401:\n  ###        description:  Unauthorized.\n  ###  put:\n  ###    tags:\n  ###    - Administer the console\n  ###    summary: ICP - Edit users on the IBM Blockchain Platform console\n  ###    description: |\n  ###      ICP - edit existing users by uuid. Only users or api keys with a `manager` role can call this api. Note that uuids are expected, not usernames.\n  ###    requestBody:\n  ###      description: |\n  ###        Pass the desired roles for the usernames. Valid roles - \"reader\", \"writer\", \"manager\".\n  ###      content:\n  ###        application/json:\n  ###          schema:\n  ###            $ref: '#/components/schemas/EditUserBody'\n  ###      required: true\n  ###    responses:\n  ###      200:\n  ###        description: Successful response.\n  ###        content:\n  ###          application/json:\n  ###            schema:\n  ###              $ref: '#/components/schemas/EditUserResponse'\n  ###      401:\n  ###        description:  Unauthorized.\n  ###  get:\n  ###    tags:\n  ###    - Administer the console\n  ###    summary: ICP - List users on the IBM Blockchain Platform console\n  ###    description: |\n  ###      ICP - List existing users by uuid.\n  ###    responses:\n  ###      200:\n  ###        description: Successful response.\n  ###        content:\n  ###          application/json:\n  ###            schema:\n  ###              $ref: '#/components/schemas/GetUsersResponse'\n  ###      401:\n  ###        description:  Unauthorized.\n  ###/ak/api/v1/permissions/users/password/reset:\n  ###  put:\n  ###    tags:\n  ###    - Administer the console\n  ###    summary: ICP - Reset users' passwords\n  ###    description: |\n  ###      ICP - Change a user's password to the default password. Only users or api keys with a `manager` role can call this api.\n  ###    requestBody:\n  ###      description: |\n  ###        Pass an array of uuids to reset.\n  ###      content:\n  ###        application/json:\n  ###          schema:\n  ###            $ref: '#/components/schemas/ResetPassBody'\n  ###      required: true\n  ###    responses:\n  ###      200:\n  ###        description: Successful response.\n  ###        content:\n  ###          application/json:\n  ###            schema:\n  ###              $ref: '#/components/schemas/ResetPassResponse'\n  ###      401:\n  ###        description:  Unauthorized.\n\ncomponents:\n  schemas:\n    AddMSP:\n      required:\n      - admins\n      - msp_id\n      - display_name\n      type: object\n      properties:\n        msp_id:\n          type: string\n          description: An id that is used to represent this MSP internally in the console.\n          example: PeerOrg1\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component that is used to represent this MSP internally in the console.\n          example: PeerOrg1 msp\n        root_certs:\n          $ref: '#/components/schemas/RootCerts'\n        intermediate_certs:\n          $ref: '#/components/schemas/IntermediateCerts'\n        admins:\n          $ref: '#/components/schemas/AdminCerts'\n        tls_root_certs:\n           $ref: '#/components/schemas/TlsRootCerts'\n        revocation_list:\n          $ref: '#/components/schemas/RevocationCerts'\n        organizational_unit_identifiers:\n          $ref: '#/components/schemas/OrganizationalUnitIdentifiers'\n        fabric_node_ous:\n          $ref: '#/components/schemas/FabricNodeOus'\n      description: |\n        MSP body\n    AddMSPResponseBody:\n      type: object\n      properties:\n        message:\n          type: string\n          example: ok\n        id:\n          type: string\n          description: |\n            This is your component's id.\n          example: cf2cec3c2edffa78fac5c3ac5d001b1d\n        type:\n          type: string\n          description: |\n            Type of component\n          example: msp\n        msp_id:\n          type: string\n          example: PeerOrg1\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component.\n          example: my first node\n        root_certs:\n          $ref: '#/components/schemas/RootCerts'\n        intermediate_certs:\n          $ref: '#/components/schemas/IntermediateCerts'\n        admins:\n          $ref: '#/components/schemas/AdminCerts'\n        tls_root_certs:\n           $ref: '#/components/schemas/TlsRootCerts'\n        revocation_list:\n          $ref: '#/components/schemas/RevocationCerts'\n        organizational_unit_identifiers:\n          $ref: '#/components/schemas/OrganizationalUnitIdentifiers'\n        fabric_node_ous:\n          $ref: '#/components/schemas/FabricNodeOus'\n      description: |\n        Details for your component are returned\n    ChangeLoggingSettings:\n      type: object\n      properties:\n        client:\n          allOf:\n            - description: |\n                (Optional) Use this section to change client side (browser) logging settings, otherwise it can be omitted if no changes.\n            - $ref: '#/components/schemas/LoggingSettings'\n        server:\n          allOf:\n            - description: |\n                (Optional) Use this section to change server side logging settings, otherwise it can be omitted if no changes.\n            - $ref: '#/components/schemas/LoggingSettings'\n      description: |\n        Only include the settings you want to change, the other settings will remain\n    ConsoleLoggingSettings:\n      type: object\n      properties:\n        client:\n          allOf:\n            - description: The client side (browser) logging settings.\n            - $ref: '#/components/schemas/LoggingSettings'\n        server:\n          allOf:\n            - description: The server side logging settings.\n            - $ref: '#/components/schemas/LoggingSettings'\n      description: |\n        The logging settings for the client and server.\n    CreateFabricCA:\n      required:\n      - enroll_id\n      - enroll_secret\n      - display_name\n      type: object\n      properties:\n        display_name:\n          type: string\n          example: ca2\n        enroll_id:\n          type: string\n          example: admin\n        enroll_secret:\n          type: string\n          example: secret\n        resources:\n            type: object\n            properties:\n              ca:\n                type: object\n                $ref: '#/components/schemas/ResourceObject'\n        storage:\n          type: object\n          properties:\n            ca:\n              type: object\n              $ref: '#/components/schemas/StorageObject'\n        zone:\n          type: string\n          description: \"**(IBM Cloud and OpenShift only)** Specify the zone of your cluster where you want this component to be deployed. Find the list of possible zones (for your k8s cluster) by retrieving your node labels: `kubectl get nodes --show-labels`. [More info](https://kubernetes.io/docs/setup/best-practices/multiple-zones)\"\n        #region:\n        #  type: string\n        #  description: \"**(IBM Cloud only)** Specify the IBM Cloud Kubernetes service region where you want this component to be deployed. Find the list of possible regions (for your k8s cluster) by retrieving your node labels: `kubectl get nodes\n        #  --show-labels`. [More info](https://kubernetes.io/docs/setup/best-practices/multiple-zones)\"\n      description: |\n        Fabric CA body\n    CreateFabricComponentResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: ok\n        id:\n          type: string\n          example: 7ae83e81c3930a98d9683d3aa207ba4a\n        type:\n          type: string\n          description: 'The type of this component: \"fabric-peer\" || \"fabric-ca\" || \"fabric-orderer\"'\n          example: fabric-peer\n        display_name:\n          type: string\n          example: peer1\n        location:\n          type: string\n          example: ibm_saas\n        msp_id:\n          type: string\n          example: org1\n        api_url:\n          type: string\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:31337:30000\n        operations_url:\n          type: string\n          description: |\n            Used by Fabric health checker to monitor health status of the node. For more inforamtion, see [Fabric documentation](https://hyperledger-fabric.readthedocs.io/en/release-1.4/operations_service.html).\n          example: https://169.46.223.99:30001\n        grpcwp_url:\n          type: string\n          description: |\n            The URL for the grpc web proxy for this component.\n          example: https://optools.so01.blockchain.cloud.ibm.com:30002\n        timestamp:\n          type: number\n          description: |\n            Unix timestamp of component creation, UTC, ms.\n          example: 1549490200312\n        resources:\n          $ref: '#/components/schemas/CreateFabricComponentResponse_resources'\n      description: |\n        Details for your component are returned\n    CreateFabricOrdererRaft:\n      required:\n      - config\n      - msp_id\n      - cluster_name\n      - display_name\n      - orderer_type\n      type: object\n      properties:\n        orderer_type:\n          type: string\n          example: raft\n          description: Currently only the type \"raft\" is supported. [etcd/raft](/docs/services/blockchain?topic=blockchain-ibp-console-build-network#ibp-console-build-network-ordering-console)\n        msp_id:\n          type: string\n          example: org2\n        config:\n          type: array\n          description: |\n            An array of config objects. Add one config object per desired raft node. 1 or 5 nodes are recommended [etcd/raft](/docs/services/blockchain?topic=blockchain-ibp-console-build-network#ibp-console-build-network-ordering-console).\n\n            See this [topic](/docs/services/blockchain?topic=blockchain-ibp-v2-apis#ibp-v2-apis-config) for instructions on how to build a config object.\n          items:\n            $ref: '#/components/schemas/ConfigBody'\n        cluster_name:\n          type: string\n          example: My Orderers\n          description: The display name of the ordering service cluster.\n        display_name:\n          type: string\n          example: An Orderer\n          description: The base display name of a single ordering node.\n        resources:\n            type: object\n            properties:\n              orderer:\n                type: object\n                $ref: '#/components/schemas/ResourceObject'\n              grpcweb:\n                type: object\n                $ref: '#/components/schemas/ResourceObject'\n        storage:\n          type: object\n          properties:\n            orderer:\n              type: object\n              $ref: '#/components/schemas/StorageObject'\n        zone:\n          type: array\n          description: \"**(IBM Cloud and OpenShift only)** Specify the zone of your cluster where you want this component to be deployed. Find the list of possible zones (for your k8s cluster) by retrieving your node labels: `kubectl get nodes\n          --show-labels`. [More info](https://kubernetes.io/docs/setup/best-practices/multiple-zones)\"\n          items:\n            type: string\n            description: An array of strings. Add one string per desired raft node. Should be the same number of elements in the `config` array.\n        #region:\n        #  type: array\n        #  description: \"**(IBM Cloud only)** Specify the IBM Cloud Kubernetes service region where you want this component to be deployed. Find the list of possible regions (for your k8s cluster) by retrieving your node labels: `kubectl get nodes\n        #  --show-labels`. [More info](https://kubernetes.io/docs/setup/best-practices/multiple-zones)\"\n        #  items:\n        #    type: string\n        #    description: An array of strings. Add one string per desired raft node. Should be the same number of elements in the `config` array.\n\n      description: |\n        Fabric orderer body\n    CreateFabricOrderer:\n      required:\n      - config\n      - msp_id\n      - display_name\n      type: object\n      properties:\n        msp_id:\n          type: string\n          example: org2\n        config:\n          type: object\n          description: |\n            See this [topic](/docs/services/blockchain?topic=blockchain-ibp-v2-apis#ibp-v2-apis-config) for instructions on how to build a config object.\n          $ref: '#/components/schemas/ConfigBody'\n        display_name:\n          type: string\n          example: orderer2\n        resources:\n            type: object\n            properties:\n              orderer:\n                type: object\n                $ref: '#/components/schemas/ResourceObject'\n              grpcweb:\n                type: object\n                $ref: '#/components/schemas/ResourceObject'\n        storage:\n          type: object\n          properties:\n            orderer:\n              type: object\n              $ref: '#/components/schemas/StorageObject'\n        zone:\n          type: string\n          description: \"**(IBM Cloud and OpenShift only)** Specify the zone of your cluster where you want this component to be deployed. Find the list of possible zones (for your k8s cluster) by retrieving your node labels: `kubectl get nodes --show-labels`. [More info](https://kubernetes.io/docs/setup/best-practices/multiple-zones)\"\n        #region:\n        #  type: string\n        #  description: \"**(IBM Cloud only)** Specify the IBM Cloud Kubernetes service region where you want this component to be deployed. Find the list of possible regions (for your k8s cluster) by retrieving your node labels: `kubectl get nodes\n        #  --show-labels`. [More info](https://kubernetes.io/docs/setup/best-practices/multiple-zones)\"\n      description: |\n        Fabric orderer body\n    CreateFabricPeer:\n      required:\n      - config\n      - msp_id\n      - display_name\n      type: object\n      properties:\n        msp_id:\n          type: string\n          example: org2\n        type:\n          type: string\n          example: fabric-peer\n        config:\n          type: object\n          description: |\n            See this [topic](/docs/services/blockchain?topic=blockchain-ibp-v2-apis#ibp-v2-apis-config) for instructions on how to build a config object.\n          $ref: '#/components/schemas/ConfigBody'\n        display_name:\n          type: string\n          example: peer2\n        resources:\n          type: object\n          properties:\n            peer:\n              type: object\n              $ref: '#/components/schemas/ResourceObject'\n            grpcweb:\n              type: object\n              $ref: '#/components/schemas/ResourceObject'\n            couchdb:\n              type: object\n              $ref: '#/components/schemas/ResourceObject'\n            dind:\n              type: object\n              $ref: '#/components/schemas/ResourceObject'\n        storage:\n          type: object\n          properties:\n            peer:\n              type: object\n              $ref: '#/components/schemas/StorageObject'\n        zone:\n          type: string\n          description: \"**(IBM Cloud and OpenShift only)** Specify the zone of your cluster where you want this component to be deployed. Find the list of possible zones (for your k8s cluster) by retrieving your node labels: `kubectl get nodes --show-labels`. [More info](https://kubernetes.io/docs/setup/best-practices/multiple-zones)\"\n        db_type:\n          type: string\n          description: Select the state database for the peer. Can be either \"couchdb\" or \"leveldb\". The default is \"couchdb\".\n        #region:\n        #  type: string\n        #  description: \"**(IBM Cloud only)** Specify the IBM Cloud Kubernetes service region where you want this component to be deployed. Find the list of possible regions (for your k8s cluster) by retrieving your node labels: `kubectl get nodes\n        #  --show-labels`. [More info](https://kubernetes.io/docs/setup/best-practices/multiple-zones)\"\n      description: Fabric peer body\n    EditCA:\n      type: object\n      properties:\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component.\n          example: Sample CA\n        api_url:\n          type: string\n          description: |\n            The gRPC web proxy URL for the peer. Typically, client applications would send requests to this URL.\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:31337\n        ca_name:\n          type: string\n          example: ca\n      description: |\n        Fabric CA body\n    EditOrderer:\n      type: object\n      properties:\n        cluster_name:\n          type: string\n          description: |\n            The display name of the ordering service cluster.\n          example: ordering service1\n        display_name:\n          type: string\n          description: |\n            The base display name of a single ordering node.\n          example: orderer\n        api_url:\n          type: string\n          description: |\n            The gRPC web proxy URL for the peer. Typically, client applications would send requests to this URL.\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:31337\n        msp_id:\n          type: string\n          example: orderermsp\n      description: |\n        Orderer body\n    EditPeer:\n      type: object\n      properties:\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component.\n          example: Peer1Org1\n        api_url:\n          type: string\n          description: |\n            The gRPC web proxy URL for the peer. Typically, client applications would send requests to this URL.\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:31335\n        msp_id:\n          type: string\n          example: PeerOrg1\n      description: |\n        Peer body\n    EditFabricComponentResponseBody:\n      type: object\n      properties:\n        message:\n          type: string\n          example: ok\n        id:\n          type: string\n          description: |\n            This is your component's id.\n          example: cf2cec3c2edffa78fac5c3ac5d001b1d\n        type:\n          type: string\n          example: fabric-ca\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component.\n          example: my first node\n        api_url:\n          type: string\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:31337\n        msp_id:\n          type: string\n          example: PeerOrg1\n        ca_name:\n          type: string\n          example: org1CA\n        timestamp:\n          type: number\n          example: 1537262855753\n          description: |\n            Unix timestamp of component creation, UTC, ms.\n      description: |\n        Details for your Fabric component are returned\n    EditMSP:\n      required:\n      - msp_id\n      - display_name\n      type: object\n      properties:\n        msp_id:\n          type: string\n          example: PeerOrg1\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component.\n          example: my first node\n        root_certs:\n          $ref: '#/components/schemas/RootCerts'\n        intermediate_certs:\n          $ref: '#/components/schemas/IntermediateCerts'\n        certificate:\n          type: string\n          description: |\n            (Optional).\n          example: cert1\n        admins:\n          $ref: '#/components/schemas/AdminCerts'\n        tls_root_certs:\n           $ref: '#/components/schemas/TlsRootCerts'\n        revocation_list:\n          $ref: '#/components/schemas/RevocationCerts'\n        organizational_unit_identifiers:\n          $ref: '#/components/schemas/OrganizationalUnitIdentifiers'\n        fabric_node_ous:\n          $ref: '#/components/schemas/FabricNodeOus'\n      description: |\n        MSP body\n    Component:\n      type: object\n      description: A component\n      properties:\n        id:\n          type: string\n          description: The unique identifier of this component'\n          example: cf2cec3c2edffa78fac5c3ac5d5b4ce7\n        type:\n          type: string\n          description: 'The type of this component'\n          enum:\n            - fabric-peer\n            - fabric-ca\n            - fabric-orderer\n          example: fabric-ca\n        display_name:\n          type: string\n          description: The name of this component\n          example: Example CA\n        grpcwp_url:\n          type: string\n          description: |\n            The URL for the grpc web proxy for this component.\n          example:  https://optools.so01.blockchain.cloud.ibm.com:30147\n        api_url:\n          type: string\n          description: |\n            The gRPC web proxy URL for the node. Typically, client applications would send requests to this URL.\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:31337\n        operations_url:\n          type: string\n          description: |\n            Used by Fabric health checker to monitor health status of the node. For more inforamtion, see [Fabric documentation](https://hyperledger-fabric.readthedocs.io/en/release-1.4/operations_service.html).\n          example: grpcs://another.url.com\n        msp_id:\n          type: string\n          example: PeerOrg1\n        location:\n          type: string\n          description: |\n            Location where the node is running.\n          example: ibm_saas\n        ca_name:\n          type: string\n          description: |\n            Field exists if its a CA.\n          example: org1CA\n        timestamp:\n          type: number\n          description: |\n            Unix timestamp of component creation, UTC, ms.\n          example: 1537262855753\n    GetNonSensitiveSettingsResponseBody:\n      type: object\n      properties:\n        ATHENA_ID:\n          type: string\n          description: |\n            Random/unique id for an instance of IBM Blockchain Platform console.\n          example: 17v7e\n        AUTH_SCHEME:\n          type: string\n          description: |\n            \"appid\", \"ibmid\", or \"iam\".\n          example: appid\n        REGION:\n          type: string\n          description: |\n            If it's \"local\", things like https are disabled.\n        DOMAIN:\n          type: string\n          description: |\n            Domain that IBM Blockchain Platform console is using for cookies, and it should match the URL in the browser. `null` is valid, but don't make it a \"?\".\n        PORT:\n          type: string\n          description: |\n            Port that IBM Blockchain Platform console is running on.\n          example: \"3000\"\n        DEPLOYER_URL:\n          type: string\n          example: https://optools.so01.blockchain.cloud.ibm.com\n        DB_SYSTEM:\n          type: string\n          description: |\n            Name of settings/tx database.\n          example: athena_system\n        HOST_URL:\n          type: string\n          description: |\n            Home URL.\n          example: http://localhost:3000\n        CONFIGTXLATOR_URL:\n          type: string\n          description: |\n            URL to reach a configtxlator.\n          example: https://example.com\n        LANDING_URL:\n          type: string\n          example: http://localhost:3000\n        LOGIN_URI:\n          type: string\n          example: https://optools.so01.blockchain.cloud.ibm.com\n        LOGOUT_URI:\n          type: string\n          example: https://optools.so01.blockchain.cloud.ibm.com\n        CALLBACK_URI:\n          type: string\n          example: https://optools.so01.blockchain.cloud.ibm.com\n        CONFIGTXLATOR_URLS:\n          type: string\n          example: https://optools.so01.blockchain.cloud.ibm.com\n        CRN_STRING:\n          type: string\n          example: 'crn:v1:staging:public:blockchain:us-south:a/df663f1351e50279adcc6be42918ae07:7c658bd5-c257-4c0a-bd6f-6bed91f359e2::'\n        CRN:\n          type: string\n          example: 'crn:v1:staging:public:blockchain:us-south:a/df663f1351e50279adcc6be42918ae07:7c658bd5-c257-4c0a-bd6f-6bed91f359e2::'\n        ENVIRONMENT:\n          type: string\n          example: 'an environment'\n        TIMESTAMPS:\n          $ref: '#/components/schemas/GetNonSensitiveSettingsResponseBody_TIMESTAMPS'\n        FILE_LOGGING:\n          $ref: '#/components/schemas/GetNonSensitiveSettingsResponseBody_FILE_LOGGING'\n        FEATURE_FLAGS:\n          $ref: '#/components/schemas/GetNonSensitiveSettingsResponseBody_FEATURE_FLAGS'\n        VERSION:\n          type: string\n          example: 1.0.0\n        PROXY_TLS_HTTP_URL:\n          type: string\n          example: https://optools.so01.blockchain.cloud.ibm.com\n        PROXY_TLS_WS_URL:\n          type: string\n          example: https://optools.so01.blockchain.cloud.ibm.com\n        PROXY_TLS_FABRIC_REQS:\n          type: string\n          example: https://optools.so01.blockchain.cloud.ibm.com\n        IAM_URL:\n          type: string\n          example: https://optools.so01.blockchain.cloud.ibm.com\n        IAM_CACHE_ENABLED:\n          type: boolean\n          example: true\n    GetNotificationsResponseBody:\n      type: object\n      properties:\n        total:\n          type: number\n          description: |\n            Number of notifications in database.\n          example: 10\n        returning:\n          type: number\n          description: |\n            Number of notifications returned.\n          example: 3\n        notifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetNotificationsResponseBody_notifications'\n    ImportFabricCA:\n      required:\n      - ca_name\n      - enroll_id\n      - enroll_secret\n      - display_name\n      - tlsca_name\n      - api_url\n      - tls_cert\n      type: object\n      properties:\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component.\n          example: Sample CA\n        location:\n          type: string\n          example: ibm_saas\n        api_url:\n          type: string\n          description: |\n            The URL for the CA. Typically, client applications would send requests to this URL.\n          example: https://optools.so01.blockchain.cloud.ibm.com:30159\n        ca_name:\n          type: string\n          example: org1CA\n        tlsca_name:\n          type: string\n          example: org1CA\n        enroll_id:\n          type: string\n          example: admin\n        enroll_secret:\n          type: string\n          example: secret\n        tls_cert:\n          type: string\n          example: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"\n          description: |\n            The TLS certificate as base 64 encoded pem.\n      description: |\n        Fabric CA body\n    ImportFabricCAResponseBody:\n      type: object\n      properties:\n        message:\n          type: string\n          example: ok\n        id:\n          type: string\n          description: |\n            This is your component's id.\n          example: cf2cec3c2edffa78fac5c3ac5d001b1d\n        type:\n          type: string\n          example: fabric-ca\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component.\n          example: my first node\n        location:\n          type: string\n          example: ibm_saas\n        api_url:\n          type: string\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:30159\n        msp_id:\n          type: string\n          example: PeerOrg1\n        ca_name:\n          type: string\n          example: org1CA\n        tlsca_name:\n          type: string\n          example: org1CA\n        enroll_id:\n          type: string\n          example: admin\n        enroll_secret:\n          type: string\n          example: < secret for the enroll_id >\n        tls_cert:\n          type: string\n          description: |\n            '< pem >'\n          example: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlCOGpDQ0FaaWdBd0lCQWdJVUVoRllva1hRbDJqcnZIU3Z3NEdkSElwWUJNY3dDZ1lJS29aSXpqMEVBd0l3DQpiekVMTUFrR0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFnVERrNXZjblJvSUVOaGNtOXNhVzVoTVJRd0VnWURWUVFLDQpFd3RJZVhCbGNteGxaR2RsY2pFUE1BMEdBMVVFQ3hNR1JtRmljbWxqTVNBd0hnWURWUVFERXhkbVlXSnlhV010DQpZMkV0YzJWeWRtVnlMVzl5WnpGRFFUQWVGdzB4T0RFeU1ERXdOREkzTURCYUZ3MHhPVEV5TURFd05ETXlNREJhDQpNQ0V4RHpBTkJnTlZCQXNUQm1Oc2FXVnVkREVPTUF3R0ExVUVBeE1GWVdSdGFXNHdXVEFUQmdjcWhrak9QUUlCDQpCZ2dxaGtqT1BRTUJCd05DQUFSRUtzRlIwdzJ6MzNGUlRCSkVONDE4WDlOVFdGR3hOS21VTmZUcVFVQ3RPcjIvDQo4WWcxWDJuRTZUWkNUQ05TMTNSQ0VQV3NMZHhZR25IRW5sZmtkYWhzbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DDQpCNEF3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVUvdlRyWlR6MFN2MlFtaVZRR1JEcStzbzA1N0l3DQpId1lEVlIwakJCZ3dGb0FVSk9IYU50NkZDaHgwaWpvc1E2VUtDUXR2ZjlBd0NnWUlLb1pJemowRUF3SURTQUF3DQpSUUloQU5iUUU5OEtVQlpjK3QwNzBYK0RoQ0thcDRDV01wQzdhZTRTYWNuQ0t1TEVBaUF2UzQ4RHFDc3U5dXhQDQpvcm9halg3aWpDSFdFOXR4OVQwaDlGenlGbllOU3c9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K\"\n        operations_url:\n          type: string\n          description: |\n            Used by Fabric health checker to monitor health status of the node. For more inforamtion, see [Fabric documentation](https://hyperledger-fabric.readthedocs.io/en/release-1.4/operations_service.html).\n          example: https://169.46.223.99:30001\n        grpcwp_url:\n          type: string\n          description: |\n            The URL for the grpc web proxy for this component.\n          example: https://optools.so01.blockchain.cloud.ibm.com:30147\n        timestamp:\n          type: number\n          example: 1537262855753\n          description: |\n            Unix timestamp of import, UTC, ms.\n      description: |\n        Details for your Fabric component are returned\n    ImportFabricOrderer:\n      required:\n      - msp_id\n      - cluster_id\n      - cluster_name\n      - display_name\n      - grpcwp_url\n      type: object\n      properties:\n        cluster_id:\n          type: string\n          description: |\n            The cluster ID the ordering service cluster.\n        cluster_name:\n          type: string\n          description: |\n            The display name of the ordering service cluster.\n          example: ordering service1\n        display_name:\n          type: string\n          description: |\n            The base display name of a single ordering node.\n          example: orderer\n        location:\n          type: string\n          example: ibm_saas\n        api_url:\n          type: string\n          description: |\n            The gRPC web proxy URL for the orderer. Typically, client applications would send requests to this URL.\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:31086\n        msp_id:\n          type: string\n          example: orderermsp\n        operations_url:\n          type: string\n          description: |\n            (Optional) Used by Fabric health checker to monitor health status of the node. For more inforamtion, see [Fabric documentation](https://hyperledger-fabric.readthedocs.io/en/release-1.4/operations_service.html).\n          example: https://169.46.223.99:30001\n        grpcwp_url:\n          type: string\n          description: |\n            The URL for the grpc web proxy for this component.\n          example: https://optools.so01.blockchain.cloud.ibm.com:30147\n        tls_cert:\n          type: string\n          example: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"\n          description: |\n            The TLS certificate as base 64 encoded pem.\n      description: |\n        Fabric orderer body\n    ImportFabricOrdererResponseBody:\n      type: object\n      properties:\n        message:\n          type: string\n          example: ok\n        id:\n          type: string\n          description: |\n            This is your component's id.\n          example: cf2cec3c2edffa78fac5c3ac5d001b1d\n        type:\n          type: string\n          description: |\n            Type of component.\n          example: fabric-orderer\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component.\n          example: my first node\n        location:\n          type: string\n          example: ibm_saas\n        api_url:\n          type: string\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:31086\n        msp_id:\n          type: string\n          example: PeerOrg1\n        operations_url:\n          type: string\n          example: https://169.46.223.99:30001\n        grpcwp_url:\n          type: string\n          description: |\n            The URL for the grpc web proxy for this component.\n          example: https://optools.so01.blockchain.cloud.ibm.com:30147\n        timestamp:\n          type: number\n          example: 1537262855753\n          description: |\n            Unix timestamp of import, UTC, ms.\n      description: |\n        Details for your Fabric component are returned\n    ImportFabricPeer:\n      required:\n      - msp_id\n      - display_name\n      - grpcwp_url\n      type: object\n      properties:\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component.\n          example: Peer1Org1\n        location:\n          type: string\n          example: ibm_saas\n        api_url:\n          type: string\n          description: |\n            The gRPC web proxy URL for the peer. Typically, client applications would send requests to this URL.\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:31336\n        msp_id:\n          type: string\n          example: PeerOrg1\n        operations_url:\n          type: string\n          description: |\n            (Optional) Used by Fabric health checker to monitor health status of the node. For more inforamtion, see [Fabric documentation](https://hyperledger-fabric.readthedocs.io/en/release-1.4/operations_service.html).\n          example: https://optools.so01.blockchain.cloud.ibm.com\n        grpcwp_url:\n          type: string\n          description: |\n            The URL for the grpc web proxy for this component.\n          example: https://optools.so01.blockchain.cloud.ibm.com:30147\n        tls_cert:\n          type: string\n          example: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"\n          description: |\n            The TLS certificate as base 64 encoded pem.\n      description: |\n        Fabric peer body\n    ImportFabricPeerResponseBody:\n      type: object\n      properties:\n        message:\n          type: string\n          example: ok\n        id:\n          type: string\n          description: |\n            This is your component's id.\n          example: cf2cec3c2edffa78fac5c3ac5d001b1d\n        type:\n          type: string\n          description: |\n            Type of component.\n          example: fabric-orderer\n        display_name:\n          type: string\n          description: |\n            A descriptive name for this component.\n          example: my first node\n        location:\n          type: string\n          example: ibm_saas\n        api_url:\n          type: string\n          example: grpcs://optools.so01.blockchain.cloud.ibm.com:31336\n        msp_id:\n          type: string\n          example: PeerOrg1\n        operations_url:\n          type: string\n          example: https://169.46.223.99:30001\n        grpcwp_url:\n          type: string\n          description: |\n            The URL for the grpc web proxy for this component.\n        timestamp:\n          type: number\n          example: 1537262855753\n          description: |\n            Unix timestamp of import, UTC, ms.\n      description: |\n        Details for your Fabric component are returned\n    DeleteComponentResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: ok\n        id:\n          type: string\n          example: cf2cec3c2edffa78fac5c3ac5d5b4ce7\n    DeleteAllNotificationsResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: ok\n    RestartAthenaResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: restarting - give me 10 seconds\n    DeleteAllSessionsResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: ok\n        deleted:\n          type: number\n          example: 1000000\n    LoggingSettings:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          description: If true logging will be stored to file.\n          example: true\n        level:\n          type: string\n          description: |\n            \"error\", \"warn\", \"info\", \"verbose\", \"debug\", or \"silly\" logs will be stored.\n          example: silly\n        unique_name:\n          type: boolean\n          description: |\n            If true, log file names will have a random suffix.\n          example: false\n    CreateFabricComponentResponse_resources_requests:\n      type: object\n      properties:\n        cpu:\n          type: string\n          example: 40m\n        memory:\n          type: string\n          example: 40M\n    CreateFabricComponentResponse_resources_limits:\n      type: object\n      properties:\n        cpu:\n          type: string\n          example: 8000m\n        memory:\n          type: string\n          example: 16384M\n    CreateFabricComponentResponse_resources:\n      type: object\n      properties:\n        requests:\n          $ref: '#/components/schemas/CreateFabricComponentResponse_resources_requests'\n        limits:\n          $ref: '#/components/schemas/CreateFabricComponentResponse_resources_limits'\n    GetNonSensitiveSettingsResponseBody_TIMESTAMPS:\n      type: object\n      properties:\n        now:\n          type: number\n          description: |\n            The current unix timestamp.\n          example: 1542746836056\n        born:\n          type: number\n          description: |\n            The timestamp IBM Blockchain Platform console started.\n          example: 1542746836056\n        next_settings_update:\n          type: string\n          description: |\n            The next db settings refresh.\n          example: 1.1 mins\n        up_time:\n          type: string\n          description: |\n            How long this IBM Blockchain Platform console process has been up.\n          example: 28.9 mins\n    GetNonSensitiveSettingsResponseBody_FILE_LOGGING_server:\n      type: object\n      properties:\n        path:\n          type: string\n          description: |\n            Directory of log files.\n          example: ./logs\n        file_name:\n          type: string\n          description: |\n            Name of log file.\n          example: athena.log\n        enabled:\n          type: boolean\n          description: |\n            If true historic logs will be saved to the file system.\n          example: true\n        level:\n          type: string\n          description: |\n            This logging level and above will be stored.\n          example: silly\n      description: |\n        IBM Blockchain Platform console logs.\n    GetNonSensitiveSettingsResponseBody_FILE_LOGGING_client:\n      type: object\n      properties:\n        path:\n          type: string\n          description: |\n            Directory of log files.\n          example: ./logs\n        file_name:\n          type: string\n          description: |\n            Name of log file.\n          example: athena.log\n        enabled:\n          type: boolean\n          description: |\n            If true historic logs will be saved to the file system.\n          example: true\n        level:\n          type: string\n          description: |\n            This logging level and above will be stored.\n          example: silly\n      description: |\n        Apollo logs.\n    GetNonSensitiveSettingsResponseBody_FILE_LOGGING:\n      type: object\n      properties:\n        server:\n          $ref: '#/components/schemas/GetNonSensitiveSettingsResponseBody_FILE_LOGGING_server'\n        client:\n          $ref: '#/components/schemas/GetNonSensitiveSettingsResponseBody_FILE_LOGGING_client'\n      description: |\n        File logging settings.\n    GetNonSensitiveSettingsResponseBody_FEATURE_FLAGS:\n      type: object\n      properties:\n        remote_peer_config_enabled:\n          type: boolean\n          description: |\n            Example feature flag.\n          example: true\n      description: |\n        Copy of \"FEATURE_FLAGS\" key in the settings doc.\n    GetNotificationsResponseBody_notifications:\n      type: object\n      properties:\n        id:\n          type: string\n          description: |\n            Unique id for the notification.\n          example: \"12345\"\n        type:\n          type: string\n          description: |\n            Values can be \"webhook_tx\" or \"other\".\n          example: webhook_tx\n        status:\n          type: string\n          description: |\n            Indicates the icon/color to use for the notification. Values can be \"pending\", \"error\", or \"success\".\n          example: pending\n        message:\n          type: string\n          description: |\n            Short message to show the user of the tx description + outcome.\n          example: Message to show the user\n        ts_display:\n          type: number\n          description: |\n            Unix timestamp to display for the notification. integer, UTC.\n          example: 0\n        tag:\n          type: string\n          description: |\n            Visibility of the notification. Values can be \"admin\" or \"any\".\n          example: admin\n        on_step:\n          type: number\n          description: |\n            (provided if available) what step the tx is on.\n          example: 1\n        total_steps:\n          type: number\n          description: |\n            (provided if available) how many steps this tx will take to complete.\n          example: 3\n        timeout_ms:\n          type: number\n          description: |\n            Max time in milliseconds before the IBM Blockchain Platform console should give up.\n          example: 10000\n        ts_started:\n          type: number\n          description: |\n            Unix timestamp of start of webhook. integer, UTC.\n          example: 0\n        ts_completed:\n          type: number\n          description: |\n            (provided if available) unix timestamp of webhook completion. integer, UTC.\n          example: 0\n      description: |\n        This array is ordered; see \"Sort Order\" note above\n    GetAthenaHealthStatsResponse:\n      type: object\n      properties:\n        OPTOOLS:\n          type: object\n          properties:\n            instance_id:\n              type: string\n              example: p59ta\n              description: |\n                Random/unique id for an instance of IBM Blockchain Platform console\n            now:\n              type: number\n              example: 1554125709422\n              description: |\n                The current unix timestamp, ms\n            born:\n              type: number\n              example: 1554125691549\n              description: |\n                The timestamp IBM Blockchain Platform console started, ms\n            up_time:\n              type: string\n              example: 17.9 secs\n              description: |\n                How long this IBM Blockchain Platform console process has been up\n            memory_usage:\n              type: object\n              properties:\n                rss:\n                  type: string\n                  example: 56.1 MB\n                  description: |\n                    Resident set size - total memory allocated for the process\n                heapTotal:\n                  type: string\n                  example: 34.4 MB\n                  description: |\n                    Memory allocated for the heap of V8\n                heapUsed:\n                  type: string\n                  example: 28.4 MB\n                  description: |\n                    Current heap used by V8\n                external:\n                  type: string\n                  example: 369.3 KB\n                  description: |\n                    Memory used by bound C++ objects\n        OS:\n          type: object\n          properties:\n            arch:\n              type: string\n              example: x64\n              description: |\n                CPU architecture\n            type:\n              type: string\n              example: Windows_NT\n              description: |\n                Operating system name\n            endian:\n              type: string\n              example:  LE\n              description: |\n                Endianness of the CPU. LE - little endian, BE - big endian\n            loadavg:\n              type: string\n              example: [0,0,0]\n              description: |\n                CPU load in 1, 5, & 15 minute averages. n/a on windows\n            cpus:\n              type: array\n              items:\n                $ref: '#/components/schemas/GetAthenaHealthStatsResponse_cpus'\n            total_memory:\n              type: string\n              example: 31.7 GB\n              description: |\n                Total memory known to the OS\n            free_memory:\n              type: string\n              example: 21.9 GB\n              description: |\n                Free memory on the OS\n            up_time:\n              type: string\n              example: 4.9 days\n              description: |\n                Time OS has been running\n    GetAthenaHealthStatsResponse_cpus:\n      type: object\n      properties:\n        model:\n          type: string\n          example: Intel(R) Core(TM) i7-8850H CPU @ 2.60GHz\n          description: |\n            Model of CPU core\n        speed:\n          type: string\n          example: 2592\n          description: |\n            Speed of core in MHz\n        times:\n          type: object\n          properties:\n            idle:\n              type: number\n              example: 131397203\n              description: |\n                ms CPU is in idle\n            irq:\n              type: number\n              example: 6068640\n              description: |\n                ms CPU is in irq\n            nice:\n              type: number\n              example: 0\n              description: |\n                ms CPU is in nice\n            sys:\n              type: number\n              example: 9652328\n              description: |\n                ms CPU is in sys\n            user:\n              type: number\n              example: 4152187\n              description: |\n                ms CPU is in user\n    GetMSPCertificateResponse:\n      type: object\n      properties:\n        msps:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetMSPCertificateResponse_msps'\n    GetMSPCertificateResponse_msps:\n      type: object\n      properties:\n        msp_id:\n          type: string\n          example: org1\n          description: |\n            Org's msp id\n        name:\n          type: string\n          example: msp1\n          description: |\n            Whatever the client named this msp\n        root_certs:\n          $ref: '#/components/schemas/RootCerts'\n        admins:\n          $ref: '#/components/schemas/AdminCerts'\n        tls_root_certs:\n           $ref: '#/components/schemas/TlsRootCerts'\n    ResourceObject:\n      type: object\n      properties:\n        requests:\n          type: object\n          properties:\n            cpu:\n              type: string\n              example: 0.100\n              description: |\n                Maximum CPU for subcomponent. [Resource details](/docs/services/blockchain?topic=blockchain-ibp-console-govern-components#ibp-console-govern-components-allocate-resources)\n            memory:\n              type: string\n              example: 256M\n              description: Maximum memory for subcomponent. [Resource details](/docs/services/blockchain?topic=blockchain-ibp-console-govern-components#ibp-console-govern-components-allocate-resources)\n    StorageObject:\n      type: object\n      properties:\n        size:\n          type: string\n          example: 5G\n          description: |\n            Maximum disk space for subcomponent. [Resource details](/docs/services/blockchain?topic=blockchain-ibp-console-govern-components#ibp-console-govern-components-allocate-resources)\n        class:\n          type: string\n          example: default\n          description: Kubernetes storage class for subcomponent's disk space.\n    ConfigBody:\n      type: object\n      properties:\n        enrollment:\n          type: object\n          properties:\n            component:\n              type: object\n              properties:\n                cahost:\n                  type: string\n                  example: 192.168.1.1\n                caport:\n                  type: string\n                  example: 30023\n                caname:\n                  type: string\n                  example: ca\n                catls:\n                  type: object\n                  properties:\n                    cacert:\n                      type: string\n                      example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n                enrollid:\n                  type: string\n                  example: admin\n                enrollsecret:\n                  type: string\n                  example: secret\n                admincerts:\n                  type: array\n                  items:\n                    type: string\n                    description: base 64 encoded PEM certificates\n            tls:\n              type: object\n              properties:\n                cahost:\n                  type: string\n                  example: 192.168.1.1\n                caport:\n                  type: string\n                  example: 30023\n                caname:\n                  type: string\n                  example: ca\n                catls:\n                  type: object\n                  properties:\n                    cacert:\n                      type: string\n                      example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n                enrollid:\n                  type: string\n                  example: admin\n                enrollsecret:\n                  type: string\n                  example: secret\n                admincerts:\n                  type: array\n                  items:\n                    type: string\n                    description: base 64 encoded PEM certificates\n                    example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n                csr:\n                  type: object\n                  properties:\n                    hosts:\n                      type: array\n                      items:\n                        type: string\n                        description: host names\n    RootCerts:\n      type: array\n      description: |\n        An array that contains one or more base 64 encoded PEM root certificates for your MSP. You must provide either a CA root certificate or an intermediate CA certificate, you may also provide both.\n      items:\n        type: string\n        example: [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"]\n    IntermediateCerts:\n      type: array\n      items:\n        type: string\n        description: An array that contains one or base 64 encoded PEM intermediate certificates for your MSP. You must provide either a CA root certificate or an intermediate CA certificate, you may also provide both.\n        example: [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"]\n    TlsRootCerts:\n      type: array\n      items:\n        type: string\n        description: |\n          Required if using TLS.  An array that contains one or more base 64 encoded PEM certificates for the TLS CA. You must provide either an external TLS CA root certificate or an external intermediate TLS CA certificate, you may also provide both.\n        example: [\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlCOGpDQ0FaaWdBd0lCQWdJVUVoRllva1hRbDJqcnZIU3Z3NEdkSElwWUJNY3dDZ1lJS29aSXpqMEVBd0l3DQpiekVMTUFrR0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFnVERrNXZjblJvSUVOaGNtOXNhVzVoTVJRd0VnWURWUVFLDQpFd3RJZVhCbGNteGxaR2RsY2pFUE1BMEdBMVVFQ3hNR1JtRmljbWxqTVNBd0hnWURWUVFERXhkbVlXSnlhV010DQpZMkV0YzJWeWRtVnlMVzl5WnpGRFFUQWVGdzB4T0RFeU1ERXdOREkzTURCYUZ3MHhPVEV5TURFd05ETXlNREJhDQpNQ0V4RHpBTkJnTlZCQXNUQm1Oc2FXVnVkREVPTUF3R0ExVUVBeE1GWVdSdGFXNHdXVEFUQmdjcWhrak9QUUlCDQpCZ2dxaGtqT1BRTUJCd05DQUFSRUtzRlIwdzJ6MzNGUlRCSkVONDE4WDlOVFdGR3hOS21VTmZUcVFVQ3RPcjIvDQo4WWcxWDJuRTZUWkNUQ05TMTNSQ0VQV3NMZHhZR25IRW5sZmtkYWhzbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DDQpCNEF3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVUvdlRyWlR6MFN2MlFtaVZRR1JEcStzbzA1N0l3DQpId1lEVlIwakJCZ3dGb0FVSk9IYU50NkZDaHgwaWpvc1E2VUtDUXR2ZjlBd0NnWUlLb1pJemowRUF3SURTQUF3DQpSUUloQU5iUUU5OEtVQlpjK3QwNzBYK0RoQ0thcDRDV01wQzdhZTRTYWNuQ0t1TEVBaUF2UzQ4RHFDc3U5dXhQDQpvcm9halg3aWpDSFdFOXR4OVQwaDlGenlGbllOU3c9PQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K\"]\n    AdminCerts:\n      type: array\n      items:\n        type: string\n        description: An array that contains one or more base 64 encoded PEM certificates for admin identities for your MSP. These are also known as the signing certificate of an organization admin.\n        example: '[\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"]'\n    RevocationCerts:\n      type: array\n      items:\n        type: string\n        description: A list of certificates that are no longer valid. For X.509-based identities, these identifiers are pairs of strings known as Subject Key Identifier (SKI) and Authority Access Identifier (AKI), and are checked whenever the X.509 certificate is being used to verify that the certificate has not been revoked.\n        example: '[\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCkNlcnQgZGF0YSB3b3VsZCBiZSBoZXJlIGlmIHRoaXMgd2FzIHJlYWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"]'\n    OrganizationalUnitIdentifiers:\n      type: array\n      items:\n        type: string\n        description: A list of Organizational Units (OU) that members of this MSP should include in their X.509 certificate. An organization is often divided up into multiple organizational units (OUs), each of which has a certain set of responsibilities. When a CA issues X.509 certificates, the OU field in the certificate specifies the line of business to which the identity belongs.\n        example: '[\"oui id 1\"]'\n    FabricNodeOus:\n      type: array\n      items:\n        type: string\n        description: Fabric-specific OUs that enable identity classification. NodeOUs contain information on how to distinguish clients, peers, and orderers based on their OU. If the check is enforced, by setting Enabled to `true`, the MSP will consider an identity valid if it is an identity of a client or a peer. An identity should have only one of these special OUs.\n        example: '[\"ous id 1\"]'\n\n    # Lines in this file with 3 hashes indicate that these apis are for IBP Software product.\n    # The (###) will get deleted by travis in our docker image.\n    # The SaaS swagger file will keep these apis commented out.\n    ###CreateApiKeyBody:\n    ###  type: object\n    ###  properties:\n    ###    roles:\n    ###      type: array\n    ###      items:\n    ###        type: string\n    ###        description: The roles for this api key.\n    ###        example: '\"reader\"'\n    ###    description:\n    ###      type: string\n    ###      description: |\n    ###        User defined description can go here.\n    ###      example: Batman's key\n    ###CreateApiKeyBodyResponse:\n    ###  type: object\n    ###  properties:\n    ###    api_key:\n    ###      type: string\n    ###      example: asdf\n    ###    api_secret:\n    ###      type: string\n    ###      example: asdf\n    ###    roles:\n    ###      type: array\n    ###      items:\n    ###        type: string\n    ###        description: The roles for this api key.\n    ###        example: '\"reader\"'\n    ###    message:\n    ###      type: string\n    ###      example: ok\n    ###GetApiKeyBodyResponse:\n    ###  type: object\n    ###  properties:\n    ###    message:\n    ###      type: string\n    ###      example: ok\n    ###    keys:\n    ###      type: array\n    ###      items:\n    ###         $ref: '#/components/schemas/KeysResponse'\n    ###KeysResponse:\n    ###  type: object\n    ###  properties:\n    ###    api_key:\n    ###      type: string\n    ###      example: asdf\n    ###    ts_created:\n    ###      type: number\n    ###      description: |\n    ###        Unix timestamp of component creation, UTC, ms.\n    ###      example: 1549490200312\n    ###    roles:\n    ###      type: array\n    ###      items:\n    ###        type: string\n    ###        description: The roles for this api key.\n    ###        example: '\"reader\"'\n    ###    description:\n    ###      type: string\n    ###      description: |\n    ###        User defined description can go here.\n    ###      example: Batman's key\n    ###DeleteApiKeyBodyResponse:\n    ###  type: object\n    ###  properties:\n    ###    message:\n    ###      type: string\n    ###      example: ok\n    ###    deleted:\n    ###      type: string\n    ###      description: The api_key wil be listed here.\n    ###      example: asdf\n    ###AddUserBody:\n    ###  type: object\n    ###  properties:\n    ###    users:\n    ###      type: object\n    ###      properties:\n    ###        someone@gmail.com:\n    ###          type: object\n    ###          properties:\n    ###            roles:\n    ###              type: array\n    ###              items:\n    ###                type: string\n    ###                example: \"reader\"\n    ###AddUserResponse:\n    ###  type: object\n    ###  properties:\n    ###    message:\n    ###      type: string\n    ###      example: ok\n    ###DeleteUserBody:\n    ###  type: object\n    ###  properties:\n    ###    users:\n    ###      type: array\n    ###      items:\n    ###        type: string\n    ###        example: \"b26e67a3-8f4c-40e4-b5e2-6303ad2979fc\"\n    ###DeleteUserResponse:\n    ###  type: object\n    ###  properties:\n    ###    message:\n    ###      type: string\n    ###      example: ok\n    ###    uuids:\n    ###      type: array\n    ###      items:\n    ###        type: string\n    ###        example: \"b26e67a3-8f4c-40e4-b5e2-6303ad2979fc\"\n    ###EditUserBody:\n    ###  type: object\n    ###  properties:\n    ###    users:\n    ###      type: object\n    ###      properties:\n    ###        b26e67a3-8f4c-40e4-b5e2-6303ad2979fc:\n    ###          type: object\n    ###          properties:\n    ###            roles:\n    ###              type: array\n    ###              items:\n    ###                type: string\n    ###                example: \"writer\"\n    ###EditUserResponse:\n    ###  type: object\n    ###  properties:\n    ###    message:\n    ###      type: string\n    ###      example: ok\n    ###    uuids:\n    ###      type: array\n    ###      items:\n    ###        type: string\n    ###        example: \"b26e67a3-8f4c-40e4-b5e2-6303ad2979fc\"\n    ###GetUsersResponse:\n    ###  type: object\n    ###  properties:\n    ###    message:\n    ###      type: string\n    ###      example: ok\n    ###    uuids:\n    ###      type: array\n    ###      items:\n    ###        type: string\n    ###        example: \"b26e67a3-8f4c-40e4-b5e2-6303ad2979fc\"\n    ###ResetPassBody:\n    ###  type: object\n    ###  properties:\n    ###    users:\n    ###      type: array\n    ###      items:\n    ###        type: string\n    ###        example: \"b26e67a3-8f4c-40e4-b5e2-6303ad2979fc\"\n    ###ResetPassResponse:\n    ###  type: object\n    ###  properties:\n    ###    message:\n    ###      type: string\n    ###      example: ok\n    ###    uuids:\n    ###      type: array\n    ###      items:\n    ###        type: string\n    ###        example: \"b26e67a3-8f4c-40e4-b5e2-6303ad2979fc\"\n\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n",
			"canonicalURL": "/github.com/ibm-cloud-docs/blockchain@067b95a5f615776cb04d7653ab08be529599b19b/-/blob/reference/ibp-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ibm-cloud-docs/blockchain/blob/067b95a5f615776cb04d7653ab08be529599b19b/reference/ibp-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/ak/api/v1/logs/file_settings\": put: requestBody: contents: application/json: generate schema: field client: allOf: schema type mismatch:  and object"
}