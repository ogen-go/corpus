{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "clickmeter.com-v2-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/clickmeter.com-v2-swagger.yaml",
			"byteSize": 221974,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: api@clickmeter.com\n    name: Api Support\n    url: http://www.clickmeter.com/api\n  description: Api dashboard for ClickMeter API\n  title: ClickMeter\n  version: v2\n  x-apisguru-categories:\n    - marketing\n  x-logo:\n    url: https://s3.amazonaws.com/clickmeter.com/Web/static/cmlogo.svg\n  x-origin:\n    - format: swagger\n      url: http://api.v2.clickmeter.com.s3.amazonaws.com/docs/api-docs-v2.json\n      version: \"2.0\"\n  x-providerName: clickmeter.com\nsecurity:\n  - api_key: []\npaths:\n  /account:\n    get:\n      deprecated: false\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve current account data\n      tags:\n        - Account\n    post:\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Update current account data\n      tags:\n        - Account\n  /account/domainwhitelist:\n    get:\n      deprecated: false\n      parameters:\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Accounting.DomainWhitelistEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Accounting.DomainWhitelistEntry_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve list of a domains allowed to redirect in DDU mode\n      tags:\n        - Account\n    post:\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEn\\\n                try\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEn\\\n                try\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEn\\\n                try\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEn\\\n                try\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEn\\\n                try\"\n        description: The entry to add\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelist\\\n                  Entry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelist\\\n                  Entry\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelist\\\n                  Entry\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelist\\\n                  Entry\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Create an domain entry\n      tags:\n        - Account\n  \"/account/domainwhitelist/{whitelistId}\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: The id of the domain to delete\n          in: path\n          name: whitelistId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelist\\\n                  Entry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelist\\\n                  Entry\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelist\\\n                  Entry\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelist\\\n                  Entry\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Delete an domain entry\n      tags:\n        - Account\n  /account/guests:\n    get:\n      deprecated: false\n      parameters:\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Field to sort by\n          in: query\n          name: sortBy\n          required: false\n          schema:\n            type: string\n        - description: Direction of sort \"asc\" or \"desc\"\n          in: query\n          name: sortDirection\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve list of a guest\n      tags:\n        - Account\n    post:\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n        description: Guest object to create\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Create a guest\n      tags:\n        - Account\n  /account/guests/count:\n    get:\n      deprecated: false\n      parameters:\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve count of guests\n      tags:\n        - Account\n  \"/account/guests/{guestId}\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: Id of the guest\n          in: path\n          name: guestId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Delete a guest\n      tags:\n        - Account\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the guest\n          in: path\n          name: guestId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a guest\n      tags:\n        - Account\n    post:\n      deprecated: false\n      parameters:\n        - description: Id of the guest\n          in: path\n          name: guestId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n        description: Guest object with field updated\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Guest\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Update a guest\n      tags:\n        - Account\n  \"/account/guests/{guestId}/permissions\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the guest\n          in: path\n          name: guestId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Can be \"datapoint\" or \"group\"\n          in: query\n          name: entityType\n          required: false\n          schema:\n            type: string\n            enum:\n              - datapoint\n              - group\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Can be \"w\" or \"r\"\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - r\n              - w\n        - description: Optional id of the datapoint/group entity to filter by\n          in: query\n          name: entityId\n          required: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Grants.Grant_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Grants.Grant_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve permissions for a guest\n      tags:\n        - Account\n  \"/account/guests/{guestId}/permissions/count\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the guest\n          in: path\n          name: guestId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Can be \"datapoint\" or \"group\"\n          in: query\n          name: entityType\n          required: false\n          schema:\n            type: string\n            enum:\n              - datapoint\n              - group\n        - description: Can be \"w\" or \"r\"\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - r\n              - w\n        - description: Optional id of the datapoint/group entity to filter by\n          in: query\n          name: entityId\n          required: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve count of the permissions for a guest\n      tags:\n        - Account\n  \"/account/guests/{guestId}/{type}/permissions/patch\":\n    post:\n      deprecated: false\n      parameters:\n        - description: Id of the guest\n          in: path\n          name: guestId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Can be \"datapoint\" or \"group\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - datapoint\n              - group\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Requests.PermissionPatchRequest\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Change the permission on a shared object\n      tags:\n        - Account\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the guest\n          in: path\n          name: guestId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Can be \"datapoint\" or \"group\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - datapoint\n              - group\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Requests.PermissionPatchRequest\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Change the permission on a shared object\n      tags:\n        - Account\n  /account/ipblacklist:\n    get:\n      deprecated: false\n      parameters:\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Accounting.IpBlacklistEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Accounting.IpBlacklistEntry_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve list of a ip to exclude from event tracking\n      tags:\n        - Account\n    post:\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n        description: The entry to add\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Create an ip blacklist entry\n      tags:\n        - Account\n  \"/account/ipblacklist/{blacklistId}\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: The id of the ip to delete\n          in: path\n          name: blacklistId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Delete an ip blacklist entry\n      tags:\n        - Account\n  /account/plan:\n    get:\n      deprecated: false\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Plan\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Plan\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Plan\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Plan\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve current account plan\n      tags:\n        - Account\n  /aggregated:\n    get:\n      deprecated: false\n      parameters:\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: If using \"yesterday\" or \"today\" timeframe you can ask for the hourly\n            detail\n          in: query\n          name: hourly\n          required: false\n          schema:\n            type: boolean\n        - description: \"\"\n          in: query\n          name: onlyFavorites\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this customer for a timeframe\n      tags:\n        - Aggregated\n  /aggregated/list:\n    get:\n      deprecated: false\n      parameters:\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: The temporal entity you want to group by (\"week\"/\"month\"). If\n            unspecified is \"day\".\n          in: query\n          name: groupBy\n          required: false\n          schema:\n            type: string\n            enum:\n              - week\n              - month\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this customer for a timeframe grouped by some\n        temporal entity (day/week/month)\n      tags:\n        - Aggregated\n  /aggregated/summary/conversions:\n    get:\n      deprecated: false\n      parameters:\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Status of conversion (\"deleted\"/\"active\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: Field to sort by\n          in: query\n          name: sortBy\n          required: false\n          schema:\n            type: string\n        - description: Direction of sort \"asc\" or \"desc\"\n          in: query\n          name: sortDirection\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSumma\\\n                  ryResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSumma\\\n                  ryResult\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about a subset of conversions for a timeframe with\n        conversions data\n      tags:\n        - Aggregated\n  /aggregated/summary/datapoints:\n    get:\n      deprecated: false\n      parameters:\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: Type of datapoint (\"tl\"/\"tp\")\n          in: query\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n        - description: Is the datapoint marked as favourite\n          in: query\n          name: favourite\n          required: false\n          schema:\n            type: boolean\n        - description: Field to sort by\n          in: query\n          name: sortBy\n          required: false\n          schema:\n            type: string\n        - description: Direction of sort \"asc\" or \"desc\"\n          in: query\n          name: sortDirection\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by this group id\n          in: query\n          name: groupId\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSumma\\\n                  ryResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSumma\\\n                  ryResult\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about a subset of datapoints for a timeframe with\n        datapoints data\n      tags:\n        - Aggregated\n  /aggregated/summary/groups:\n    get:\n      deprecated: false\n      parameters:\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Status of group (\"deleted\"/\"active\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n        - description: Is the group marked as favourite\n          in: query\n          name: favourite\n          required: false\n          schema:\n            type: boolean\n        - description: Field to sort by\n          in: query\n          name: sortBy\n          required: false\n          schema:\n            type: string\n        - description: Direction of sort \"asc\" or \"desc\"\n          in: query\n          name: sortDirection\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSumma\\\n                  ryResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSumma\\\n                  ryResult\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about a subset of groups for a timeframe with groups\n        data\n      tags:\n        - Aggregated\n  /clickstream:\n    get:\n      deprecated: false\n      parameters:\n        - description: Filter by this group id (mutually exclusive with \"datapoint\" and\n            \"conversion\")\n          in: query\n          name: group\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Filter by this datapoint id (mutually exclusive with \"group\" and\n            \"conversion\")\n          in: query\n          name: datapoint\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Filter by this conversion id (mutually exclusive with \"datapoint\"\n            and \"group\")\n          in: query\n          name: conversion\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Limit results to this number\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n        - description: Filter event type (\"spiders\"/\"uniques\"/\"nonuniques\"/\"conversions\")\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            enum:\n              - \"\"\n              - spiders\n              - uniques\n              - nonuniques\n              - conversions\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.ClickStream.Hit_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.ClickStream.Hit_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve the latest list of events of this account. Limited to last 100.\n      tags:\n        - ClickStream\n  /conversions:\n    get:\n      deprecated: false\n      parameters:\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Status of conversion (\"deleted\"/\"active\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Exclude conversions created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude conversions created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a list of conversions\n      tags:\n        - Conversions\n    post:\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n        description: The body of the conversion\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Create a conversion\n      tags:\n        - Conversions\n  /conversions/aggregated/list:\n    get:\n      deprecated: false\n      parameters:\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Status of conversion (\"deleted\"/\"active\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: The temporal entity you want to group by (\"week\"/\"month\"). If\n            unspecified is \"day\".\n          in: query\n          name: groupBy\n          required: false\n          schema:\n            type: string\n            enum:\n              - week\n              - month\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this customer for a timeframe related to a\n        subset of conversions grouped by some temporal entity (day/week/month)\n      tags:\n        - Conversions\n  /conversions/count:\n    get:\n      deprecated: false\n      parameters:\n        - description: Status of conversion (\"deleted\"/\"active\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Exclude conversions created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude conversions created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a count of conversions\n      tags:\n        - Conversions\n  \"/conversions/{conversionId}\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Delete conversion specified by id\n      tags:\n        - Conversions\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve conversion specified by id\n      tags:\n        - Conversions\n    post:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Conversions.Conversion\"\n        description: Updated body of the conversion\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Update conversion specified by id\n      tags:\n        - Conversions\n  \"/conversions/{conversionId}/aggregated\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Filter by this tag name\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n        - description: Is the datapoint marked as favourite\n          in: query\n          name: favourite\n          required: false\n          schema:\n            type: boolean\n        - description: If using \"yesterday\" or \"today\" timeframe you can ask for the hourly\n            detail\n          in: query\n          name: hourly\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this conversion for a timeframe\n      tags:\n        - Conversions\n  \"/conversions/{conversionId}/aggregated/list\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: The temporal entity you want to group by (\"week\"/\"month\"). If\n            unspecified is \"day\".\n          in: query\n          name: groupBy\n          required: false\n          schema:\n            type: string\n            enum:\n              - week\n              - month\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this conversion for a timeframe grouped by\n        some temporal entity (day/week/month)\n      tags:\n        - Conversions\n  \"/conversions/{conversionId}/datapoints\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Type of datapoint (\"tl\"/\"tp\")\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: Filter by this tag name\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a list of datapoints connected to this conversion\n      tags:\n        - Conversions\n  \"/conversions/{conversionId}/datapoints/batch/patch\":\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.PatchBodyBatch\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.PatchBodyBatch\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.PatchBodyBatch\"\n        description: Patch requests\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Modify the association between a conversion and multiple datapoints\n      tags:\n        - Conversions\n  \"/conversions/{conversionId}/datapoints/count\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Type of datapoint (\"tl\"/\"tp\")\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n        - description: Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n        - description: Filter by this tag name\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a count of datapoints connected to this conversion\n      tags:\n        - Conversions\n  \"/conversions/{conversionId}/datapoints/patch\":\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.ConversionPatchBody\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.ConversionPatchBody\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.ConversionPatchBody\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.ConversionPatchBody\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.ConversionPatchBody\"\n        description: Patch request\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Modify the association between a conversion and a datapoint\n      tags:\n        - Conversions\n  \"/conversions/{conversionId}/hits\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeframe\n          required: true\n          schema:\n            type: string\n            enum:\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - custom\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Offset where to start from (it's the lastKey field in the response\n            object)\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Filter event type (\"spiders\"/\"uniques\"/\"nonuniques\"/\"conversions\")\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            enum:\n              - spiders\n              - uniques\n              - nonuniques\n              - conversions\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitListPage\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitListPage\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve the list of events related to this conversion.\n      tags:\n        - Conversions\n  \"/conversions/{conversionId}/notes\":\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Requests.GenericTextPatch\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Fast patch the \"notes\" field of a conversion\n      tags:\n        - Conversions\n  \"/conversions/{conversionId}/reports\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the conversion\n          in: path\n          name: conversionId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Type of the report.\n          in: query\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - datapoints\n              - groups\n              - browsers\n              - browsersfamilies\n              - platforms\n              - cities\n              - countries\n              - keywords\n              - referrers\n              - convparameters\n              - destinations\n              - languages\n              - params\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeframe\n          required: true\n          schema:\n            type: string\n            enum:\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - beginning\n              - custom\n        - description: Type of the event you want to filter this report with. By default no\n            filter is applied.\n          in: query\n          name: hittype\n          required: false\n          schema:\n            type: string\n            enum:\n              - clicks\n              - views\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Tops.Top\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Tops.Top\"\n        \"401\":\n          description: Forbidden\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a top report connected to this conversion\n      tags:\n        - Conversions\n  /datapoints:\n    get:\n      deprecated: false\n      parameters:\n        - description: Where to start when retrieving elements. Default is 0 if not\n            specified.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Maximum elements to retrieve. Default to 20 if not specified.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n        - description: Type of the datapoint (\"tp\"/\"tl\")\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by favourite status\n          in: query\n          name: onlyFavorites\n          required: false\n          schema:\n            type: boolean\n        - description: Field to sort by\n          in: query\n          name: sortBy\n          required: false\n          schema:\n            type: string\n        - description: Direction of sort \"asc\" or \"desc\"\n          in: query\n          name: sortDirection\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - description: Exclude datapoints created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: List of all the datapoints associated to the user\n      tags:\n        - DataPoints\n    post:\n      deprecated: false\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Dto.Datapoints.Datapoint\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Create a datapoint\n      tags:\n        - DataPoints\n  /datapoints/aggregated:\n    get:\n      deprecated: false\n      parameters:\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: Type of datapoint (\"tl\"/\"tp\")\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: If using \"yesterday\" or \"today\" timeframe you can ask for the hourly\n            detail\n          in: query\n          name: hourly\n          required: false\n          schema:\n            type: boolean\n        - description: Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n        - description: Is the datapoint is marked as favourite\n          in: query\n          name: favourite\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this customer for a timeframe by groups\n      tags:\n        - DataPoints\n  /datapoints/aggregated/list:\n    get:\n      deprecated: false\n      parameters:\n        - description: Type of datapoint (\"tl\"/\"tp\")\n          in: query\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n        - description: Is the datapoint is marked as favourite\n          in: query\n          name: favourite\n          required: false\n          schema:\n            type: boolean\n        - description: The temporal entity you want to group by (\"week\"/\"month\"). If\n            unspecified is \"day\".\n          in: query\n          name: groupBy\n          required: false\n          schema:\n            type: string\n            enum:\n              - week\n              - month\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about all datapoints of this customer for a\n        timeframe grouped by some temporal entity (day/week/month)\n      tags:\n        - DataPoints\n  /datapoints/batch:\n    delete:\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.DeleteBatch\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.DeleteBatch\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.DeleteBatch\"\n        description: A json containing the datapoints to delete.\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.ModifyBatchItemRespo\\\n                  nce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.ModifyBatchItemRespo\\\n                  nce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Delete multiple datapoints\n      tags:\n        - DataPoints\n    post:\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.DatapointsBatch\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.DatapointsBatch\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.DatapointsBatch\"\n        description: A json containing the datapoints to update.\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.ModifyBatchItemRespo\\\n                  nce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.ModifyBatchItemRespo\\\n                  nce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Update multiple datapoints\n      tags:\n        - DataPoints\n    put:\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.DatapointsBatch\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.DatapointsBatch\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.DatapointsBatch\"\n        description: A json containing the datapoints to create.\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.ModifyBatchItemRespo\\\n                  nce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.ModifyBatchItemRespo\\\n                  nce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Create multiple datapoints\n      tags:\n        - DataPoints\n  /datapoints/count:\n    get:\n      deprecated: false\n      parameters:\n        - description: Type of the datapoint (\"tp\"/\"tl\")\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by favourite status\n          in: query\n          name: onlyFavorites\n          required: false\n          schema:\n            type: boolean\n        - description: Exclude datapoints created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Count the datapoints associated to the user\n      tags:\n        - DataPoints\n  \"/datapoints/{id}\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: The id of the datapoint\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Delete a datapoint\n      tags:\n        - DataPoints\n    get:\n      deprecated: false\n      parameters:\n        - description: The id of the datapoint\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.Datapoint\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.Datapoint\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Get a datapoint\n      tags:\n        - DataPoints\n    post:\n      deprecated: false\n      parameters:\n        - description: The id of the datapoint\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Dto.Datapoints.Datapoint\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Update a datapoint\n      tags:\n        - DataPoints\n  \"/datapoints/{id}/aggregated\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the datapoint\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: If using \"yesterday\" or \"today\" timeframe you can ask for the hourly\n            detail\n          in: query\n          name: hourly\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this datapoint for a timeframe\n      tags:\n        - DataPoints\n  \"/datapoints/{id}/aggregated/list\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the datapoint\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: The temporal entity you want to group by (\"week\"/\"month\"). If\n            unspecified is \"day\".\n          in: query\n          name: groupBy\n          required: false\n          schema:\n            type: string\n            enum:\n              - week\n              - month\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this datapoint for a timeframe grouped by some\n        temporal entity (day/week/month)\n      tags:\n        - DataPoints\n  \"/datapoints/{id}/favourite\":\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the datapoint\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Fast switch the \"favourite\" field of a datapoint\n      tags:\n        - DataPoints\n  \"/datapoints/{id}/hits\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the datapoint\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeframe\n          required: true\n          schema:\n            type: string\n            enum:\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - custom\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Offset where to start from (it's the lastKey field in the response\n            object)\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Filter event type (\"spiders\"/\"uniques\"/\"nonuniques\"/\"conversions\")\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            enum:\n              - spiders\n              - uniques\n              - nonuniques\n              - conversions\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitListPage\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitListPage\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve the list of events related to this datapoint.\n      tags:\n        - DataPoints\n  \"/datapoints/{id}/notes\":\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the datapoint\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Requests.GenericTextPatch\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Fast patch the \"notes\" field of a datapoint\n      tags:\n        - DataPoints\n  \"/datapoints/{id}/reports\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the datapoint\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Type of the report.\n          in: query\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - browsers\n              - browsersfamilies\n              - platforms\n              - cities\n              - countries\n              - isps\n              - ips\n              - oss\n              - ossfamilies\n              - keywords\n              - referrers\n              - destinations\n              - languages\n              - params\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeframe\n          required: true\n          schema:\n            type: string\n            enum:\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Tops.Top\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Tops.Top\"\n        \"401\":\n          description: Forbidden\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a top report connected to this datapoint\n      tags:\n        - DataPoints\n  /domains:\n    get:\n      deprecated: false\n      parameters:\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Type of domain (\"system\"/\"go\"/\"personal\"/\"dedicated\"). If not\n            specified default is \"system\"\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - system\n              - go\n              - personal\n              - dedicated\n            default: system\n        - description: Filter domains with this anmen\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a list of domains\n      tags:\n        - Domains\n    post:\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n        description: The domain to create\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Create a domain\n      tags:\n        - Domains\n  /domains/count:\n    get:\n      deprecated: false\n      parameters:\n        - description: Type of domain (\"system\"/\"go\"/\"personal\"/\"dedicated\"). If not\n            specified default is \"system\"\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - system\n              - go\n              - personal\n              - dedicated\n            default: system\n        - description: Filter domains with this anmen\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve count of domains\n      tags:\n        - Domains\n  \"/domains/{id}\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: Id of domain\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Delete a domain\n      tags:\n        - Domains\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of domain\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Get a domain\n      tags:\n        - Domains\n    post:\n      deprecated: false\n      parameters:\n        - description: Id of domain\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Domains.Domain\"\n        description: The domain to update\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Update a domain\n      tags:\n        - Domains\n  /groups:\n    get:\n      deprecated: false\n      parameters:\n        - description: Where to start when retrieving elements. Default is 0 if not\n            specified.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Maximum elements to retrieve. Default to 20 if not specified.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n        - description: Status of the group\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Exclude groups created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude groups created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n        - description: Write permission\n          in: query\n          name: write\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: List of all the groups associated to the user.\n      tags:\n        - Groups\n    post:\n      deprecated: false\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Dto.Groups.Group\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Create a group\n      tags:\n        - Groups\n  /groups/aggregated:\n    get:\n      deprecated: false\n      parameters:\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: If using \"yesterday\" or \"today\" timeframe you can ask for the hourly\n            detail\n          in: query\n          name: hourly\n          required: false\n          schema:\n            type: boolean\n        - description: Status of group (\"deleted\"/\"active\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n        - description: Is the group is marked as favourite\n          in: query\n          name: favourite\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this customer for a timeframe by groups\n      tags:\n        - Groups\n  /groups/aggregated/list:\n    get:\n      deprecated: false\n      parameters:\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Status of group (\"deleted\"/\"active\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n        - description: Is the group is marked as favourite\n          in: query\n          name: favourite\n          required: false\n          schema:\n            type: boolean\n        - description: The temporal entity you want to group by (\"week\"/\"month\"). If\n            unspecified is \"day\".\n          in: query\n          name: groupBy\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about all groups of this customer for a timeframe\n        grouped by some temporal entity (day/week/month)\n      tags:\n        - Groups\n  /groups/count:\n    get:\n      deprecated: false\n      parameters:\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Exclude groups created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude groups created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n        - description: Write permission\n          in: query\n          name: write\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Count the groups associated to the user.\n      tags:\n        - Groups\n  \"/groups/{id}\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: Id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Delete group specified by id\n      tags:\n        - Groups\n    get:\n      deprecated: false\n      parameters:\n        - description: The id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Groups.Group\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Groups.Group\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Get a group\n      tags:\n        - Groups\n    post:\n      deprecated: false\n      parameters:\n        - description: The id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Dto.Groups.Group\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Update a group\n      tags:\n        - Groups\n  \"/groups/{id}/aggregated\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: If using \"yesterday\" or \"today\" timeframe you can ask for the hourly\n            detail\n          in: query\n          name: hourly\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this group for a timeframe\n      tags:\n        - Groups\n  \"/groups/{id}/aggregated/list\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: The temporal entity you want to group by (\"week\"/\"month\"). If\n            unspecified is \"day\".\n          in: query\n          name: groupBy\n          required: false\n          schema:\n            type: string\n            enum:\n              - week\n              - month\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Dto.Aggregated.AggregatedResult_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about this group for a timeframe grouped by some\n        temporal entity (day/week/month)\n      tags:\n        - Groups\n  \"/groups/{id}/aggregated/summary\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Filter by this group id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeFrame\n          required: true\n          schema:\n            type: string\n            enum:\n              - today\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - last12months\n              - lastyear\n              - currentyear\n              - beginning\n              - custom\n        - description: Type of datapoint (\"tl\"/\"tp\")\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Status of datapoint (\"deleted\"/\"active\"/\"paused\"/\"spam\")\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n        - description: Is the datapoint marked as favourite\n          in: query\n          name: favourite\n          required: false\n          schema:\n            type: boolean\n        - description: Field to sort by\n          in: query\n          name: sortBy\n          required: false\n          schema:\n            type: string\n        - description: Direction of sort \"asc\" or \"desc\"\n          in: query\n          name: sortDirection\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - description: Offset where to start from\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSumma\\\n                  ryResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSumma\\\n                  ryResult\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve statistics about a subset of datapoints for a timeframe with\n        datapoints data\n      tags:\n        - Groups\n  \"/groups/{id}/datapoints\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Where to start when retrieving elements. Default is 0 if not\n            specified.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Maximum elements to retrieve. Default to 20 if not specified.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n        - description: Type of the datapoint (\"tp\"/\"tl\")\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by favourite status\n          in: query\n          name: onlyFavorites\n          required: false\n          schema:\n            type: boolean\n        - description: Field to sort by\n          in: query\n          name: sortBy\n          required: false\n          schema:\n            type: string\n        - description: Direction of sort \"asc\" or \"desc\"\n          in: query\n          name: sortDirection\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - description: Exclude datapoints created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: List of all the datapoints associated to the user in this group.\n      tags:\n        - Groups\n    post:\n      deprecated: false\n      parameters:\n        - description: The id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Dto.Datapoints.Datapoint\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Create a datapoint in this group\n      tags:\n        - Groups\n  \"/groups/{id}/datapoints/count\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Type of the datapoint (\"tp\"/\"tl\")\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by favourite status\n          in: query\n          name: onlyFavorites\n          required: false\n          schema:\n            type: boolean\n        - description: Exclude datapoints created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Count the datapoints associated to the user in this group.\n      tags:\n        - Groups\n  \"/groups/{id}/favourite\":\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Fast switch the \"favourite\" field of a group\n      tags:\n        - Groups\n  \"/groups/{id}/hits\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeframe\n          required: true\n          schema:\n            type: string\n            enum:\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - custom\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Offset where to start from (it's the lastKey field in the response\n            object)\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Filter event type (\"spiders\"/\"uniques\"/\"nonuniques\"/\"conversions\")\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            enum:\n              - spiders\n              - uniques\n              - nonuniques\n              - conversions\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitListPage\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitListPage\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve the list of events related to this group.\n      tags:\n        - Groups\n  \"/groups/{id}/notes\":\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Requests.GenericTextPatch\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Fast patch the \"notes\" field of a group\n      tags:\n        - Groups\n  \"/groups/{id}/reports\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Type of the report.\n          in: query\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - browsers\n              - browsersfamilies\n              - platforms\n              - cities\n              - countries\n              - isps\n              - ips\n              - oss\n              - ossfamilies\n              - keywords\n              - referrers\n              - destinations\n              - languages\n              - params\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeframe\n          required: true\n          schema:\n            type: string\n            enum:\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - beginning\n              - custom\n        - description: Type of the event you want to filter this report with. By default no\n            filter is applied.\n          in: query\n          name: hittype\n          required: false\n          schema:\n            type: string\n            enum:\n              - clicks\n              - views\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Tops.Top\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Tops.Top\"\n        \"401\":\n          description: Forbidden\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a top report connected to this group\n      tags:\n        - Groups\n  /hits:\n    get:\n      deprecated: false\n      parameters:\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeframe\n          required: true\n          schema:\n            type: string\n            enum:\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - custom\n        - description: Limit results to this number\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Offset where to start from (it's the lastKey field in the response\n            object)\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n        - description: Filter event type (\"spiders\"/\"uniques\"/\"nonuniques\"/\"conversions\")\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            enum:\n              - spiders\n              - uniques\n              - nonuniques\n              - conversions\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitListPage\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitListPage\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve the list of events related to this account.\n      tags:\n        - Hits\n  /me:\n    get:\n      deprecated: false\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.User\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve current account data\n      tags:\n        - Me\n  /me/plan:\n    get:\n      deprecated: false\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Plan\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Plan\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Plan\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Accounting.Plan\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve current account plan\n      tags:\n        - Me\n  /reports:\n    get:\n      deprecated: false\n      parameters:\n        - description: Type of the report.\n          in: query\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - browsers\n              - browsersfamilies\n              - platforms\n              - cities\n              - countries\n              - isps\n              - ips\n              - oss\n              - ossfamilies\n              - keywords\n              - referrers\n              - destinations\n              - languages\n              - params\n        - description: Timeframe of the request. See list at $timeframeList\n          in: query\n          name: timeframe\n          required: true\n          schema:\n            type: string\n            enum:\n              - yesterday\n              - last7\n              - last30\n              - lastmonth\n              - currentmonth\n              - previousmonth\n              - last90\n              - last120\n              - last180\n              - beginning\n              - custom\n        - description: Type of the event you want to filter this report with. By default no\n            filter is applied.\n          in: query\n          name: hittype\n          required: false\n          schema:\n            type: string\n        - description: Filter by this group id (mutually exclusive with \"datapoint\" and\n            \"conversion\")\n          in: query\n          name: group\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Filter by this datapoint id (mutually exclusive with \"group\" and\n            \"conversion\")\n          in: query\n          name: datapoint\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Filter by this conversion id (mutually exclusive with \"datapoint\"\n            and \"group\")\n          in: query\n          name: conversion\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: If using a \"custom\" timeFrame you can specify the starting day\n            (YYYYMMDD)\n          in: query\n          name: fromDay\n          required: false\n          schema:\n            type: string\n        - description: If using a \"custom\" timeFrame you can specify the ending day\n            (YYYYMMDD)\n          in: query\n          name: toDay\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Tops.Top\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Tops.Top\"\n        \"401\":\n          description: Forbidden\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a top report\n      tags:\n        - Reports\n  /retargeting:\n    get:\n      deprecated: false\n      parameters:\n        - description: Where to start when retrieving elements. Default is 0 if not\n            specified.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Maximum elements to retrieve. Default to 20 if not specified.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: List of all the retargeting scripts associated to the user\n      tags:\n        - Retargeting\n    post:\n      deprecated: false\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Dto.Retargeting.RetargetingScript\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Creates a retargeting script\n      tags:\n        - Retargeting\n  /retargeting/count:\n    get:\n      deprecated: false\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve count of retargeting scripts\n      tags:\n        - Retargeting\n  \"/retargeting/{id}\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: The id of the retargeting script\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Deletes a retargeting script (and remove associations)\n      tags:\n        - Retargeting\n    get:\n      deprecated: false\n      parameters:\n        - description: The id of the retargeting script\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScr\\\n                  ipt\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScr\\\n                  ipt\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScr\\\n                  ipt\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScr\\\n                  ipt\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Get a retargeting script object\n      tags:\n        - Retargeting\n    post:\n      deprecated: false\n      parameters:\n        - description: The id of the retargeting script\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Dto.Retargeting.RetargetingScript\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Updates a retargeting script\n      tags:\n        - Retargeting\n  \"/retargeting/{id}/datapoints\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the retargeting script\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Where to start when retrieving elements. Default is 0 if not\n            specified.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Maximum elements to retrieve. Default to 20 if not specified.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by favourite status\n          in: query\n          name: onlyFavorites\n          required: false\n          schema:\n            type: boolean\n        - description: Field to sort by\n          in: query\n          name: sortBy\n          required: false\n          schema:\n            type: string\n        - description: Direction of sort \"asc\" or \"desc\"\n          in: query\n          name: sortDirection\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - description: Exclude datapoints created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: List of all the datapoints associated to the retargeting script.\n      tags:\n        - Retargeting\n  \"/retargeting/{id}/datapoints/count\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the group\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: A comma separated list of tags you want to filter with.\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Filter fields by favourite status\n          in: query\n          name: onlyFavorites\n          required: false\n          schema:\n            type: boolean\n        - description: Exclude datapoints created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Count the datapoints associated to the retargeting script.\n      tags:\n        - Retargeting\n  /tags:\n    get:\n      deprecated: false\n      parameters:\n        - description: Where to start when retrieving elements. Default is 0 if not\n            specified.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Maximum elements to retrieve. Default to 20 if not specified.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n        - description: Name of the tag\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Comma separated list of datapoints id to filter by\n          in: query\n          name: datapoints\n          required: false\n          schema:\n            type: string\n        - description: Comma separated list of groups id to filter by\n          in: query\n          name: groups\n          required: false\n          schema:\n            type: string\n        - description: Type of entity related to the tag\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n              - dp\n              - gr\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: List of all the groups associated to the user filtered by this tag.\n      tags:\n        - Tags\n    post:\n      deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Tags.Tag\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Tags.Tag\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Dto.Tags.Tag\"\n        description: The body of the tag\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Create a tag\n      tags:\n        - Tags\n  /tags/count:\n    get:\n      deprecated: false\n      parameters:\n        - description: Name of the tag\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Comma separated list of datapoints id to filter by\n          in: query\n          name: datapoints\n          required: false\n          schema:\n            type: string\n        - description: Comma separated list of groups id to filter by\n          in: query\n          name: groups\n          required: false\n          schema:\n            type: string\n        - description: Type of entity related to the tag\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n              - dp\n              - gr\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/System.Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/System.Object\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: List of all the groups associated to the user filtered by this tag.\n      tags:\n        - Tags\n  \"/tags/{tagId}\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: Id of the tag\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/System.Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/System.Object\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Delete a tag\n      tags:\n        - Tags\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the tag\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Tags.Tag\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Dto.Tags.Tag\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Retrieve a tag\n      tags:\n        - Tags\n  \"/tags/{tagId}/datapoints\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: Id of the tag\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Delete the association of this tag with all datapoints\n      tags:\n        - Tags\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the tag.\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Where to start when retrieving elements. Default is 0 if not\n            specified.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Maximum elements to retrieve. Default to 20 if not specified.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n        - description: Type of the datapoint (\"tp\"/\"tl\")\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: List of all the datapoints associated to the user filtered by this tag\n      tags:\n        - Tags\n  \"/tags/{tagId}/datapoints/count\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the tag.\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Type of the datapoint (\"tp\"/\"tl\")\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - tp\n              - tl\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n              - paused\n              - spam\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude datapoints created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Count the datapoints associated to the user filtered by this tag\n      tags:\n        - Tags\n  \"/tags/{tagId}/datapoints/patch\":\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the tag\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Requests.PatchBody\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Associate/Deassociate a tag with a datapoint\n      tags:\n        - Tags\n  \"/tags/{tagId}/groups\":\n    delete:\n      deprecated: false\n      parameters:\n        - description: Id of the tag\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Delete the association of this tag with all groups\n      tags:\n        - Tags\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the tag.\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Where to start when retrieving elements. Default is 0 if not\n            specified.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Maximum elements to retrieve. Default to 20 if not specified.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Exclude groups created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude groups created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntitiesResponse_Api\\\n                  .Core.Responses.EntityUri_System.Int64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: List of all the groups associated to the user filtered by this tag.\n      tags:\n        - Tags\n  \"/tags/{tagId}/groups/count\":\n    get:\n      deprecated: false\n      parameters:\n        - description: Id of the tag.\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Status of the datapoint\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - deleted\n              - active\n        - description: Filter fields by this pattern\n          in: query\n          name: textSearch\n          required: false\n          schema:\n            type: string\n        - description: Exclude groups created before this date (YYYYMMDD)\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n        - description: Exclude groups created after this date (YYYYMMDD)\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.CountResponce\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Count the groups associated to the user filtered by this tag\n      tags:\n        - Tags\n  \"/tags/{tagId}/groups/patch\":\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the tag\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        $ref: \"#/components/requestBodies/Api.Core.Requests.PatchBody\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not found\n        \"500\":\n          description: Internal Server Error\n      summary: Associate/Deassociate a tag with a group\n      tags:\n        - Tags\n  \"/tags/{tagId}/name\":\n    put:\n      deprecated: false\n      parameters:\n        - description: Id of the tag\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.GenericTextPatch\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.GenericTextPatch\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.GenericTextPatch\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.GenericTextPatch\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Api.Core.Requests.GenericTextPatch\"\n        description: The body patch\n        required: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int\\\n                  64_\"\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: Internal Server Error\n      summary: Fast patch a tag name\n      tags:\n        - Tags\nservers:\n  - url: http://apiv2.clickmeter.com:80\n  - url: https://apiv2.clickmeter.com:80\ncomponents:\n  requestBodies:\n    Api.Core.Requests.PatchBody:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.PatchBody\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.PatchBody\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.PatchBody\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.PatchBody\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.PatchBody\"\n      description: The body patch\n      required: true\n    Api.Core.Dto.Groups.Group:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Groups.Group\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Groups.Group\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Groups.Group\"\n      description: The body of the group\n      required: true\n    Api.Core.Requests.PermissionPatchRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.PermissionPatchRequest\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.PermissionPatchRequest\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.PermissionPatchRequest\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.PermissionPatchRequest\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.PermissionPatchRequest\"\n      description: The patch permission request\n      required: true\n    Api.Core.Requests.GenericTextPatch:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.GenericTextPatch\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.GenericTextPatch\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.GenericTextPatch\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.GenericTextPatch\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Requests.GenericTextPatch\"\n      description: Patch requests\n      required: true\n    Api.Core.Dto.Datapoints.Datapoint:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.Datapoint\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.Datapoint\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.Datapoint\"\n      description: The body of the datapoint\n      required: true\n    Api.Core.Dto.Retargeting.RetargetingScript:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript\"\n      description: The body of the retargeting script\n      required: true\n  securitySchemes:\n    api_key:\n      description: API Key Authentication\n      in: header\n      name: X-Clickmeter-AuthKey\n      type: apiKey\n  schemas:\n    Api.Core.Dto.Accounting.ConversionOptions:\n      properties:\n        hideComCost:\n          type: boolean\n        hideCost:\n          type: boolean\n        hideCount:\n          type: boolean\n        hideParams:\n          type: boolean\n        hideValue:\n          type: boolean\n        percentCommission:\n          format: int32\n          type: integer\n        percentValue:\n          format: int32\n          type: integer\n      type: object\n    Api.Core.Dto.Accounting.DomainWhitelistEntry:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      type: object\n    Api.Core.Dto.Accounting.ExtendedGrants:\n      properties:\n        allowAllGrants:\n          type: boolean\n        allowGroupCreation:\n          type: boolean\n      type: object\n    Api.Core.Dto.Accounting.Guest:\n      properties:\n        apiKey:\n          type: string\n        conversionOptions:\n          $ref: \"#/components/schemas/Api.Core.Dto.Accounting.ConversionOptions\"\n        creationDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        currentGrant:\n          $ref: \"#/components/schemas/Api.Core.Dto.Grants.Grant\"\n        dateFormat:\n          type: string\n        decimalSeparator:\n          type: string\n        email:\n          type: string\n        extendedGrants:\n          $ref: \"#/components/schemas/Api.Core.Dto.Accounting.ExtendedGrants\"\n        groupGrants:\n          format: int64\n          type: integer\n        hitOptions:\n          $ref: \"#/components/schemas/Api.Core.Dto.Accounting.HitOptions\"\n        id:\n          format: int64\n          type: integer\n        key:\n          type: string\n        language:\n          type: string\n        loginCount:\n          format: int32\n          type: integer\n        name:\n          type: string\n        notes:\n          type: string\n        numberGroupSeparator:\n          type: string\n        password:\n          type: string\n        timeFormat:\n          enum:\n            - AmPm\n            - H24\n          type: string\n        timeZone:\n          format: int32\n          type: integer\n        timeframeMinDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        timezonename:\n          type: string\n        tlGrants:\n          format: int64\n          type: integer\n        tpGrants:\n          format: int64\n          type: integer\n        userName:\n          type: string\n      type: object\n    Api.Core.Dto.Accounting.HitOptions:\n      properties:\n        hideReferrer:\n          type: boolean\n      type: object\n    Api.Core.Dto.Accounting.IpBlacklistEntry:\n      properties:\n        id:\n          type: string\n        ip:\n          type: string\n      type: object\n    Api.Core.Dto.Accounting.Plan:\n      properties:\n        allowedPersonalDomains:\n          format: int32\n          type: integer\n        allowedPersonalUrls:\n          format: int32\n          type: integer\n        billingPeriodEnd:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        billingPeriodStart:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        bonusMonthlyEvents:\n          format: int64\n          type: integer\n        maximumDatapoints:\n          format: int64\n          type: integer\n        maximumGuests:\n          format: int64\n          type: integer\n        monthlyEvents:\n          format: int64\n          type: integer\n        name:\n          type: string\n        price:\n          format: double\n          type: number\n        profileId:\n          format: int64\n          type: integer\n        recurring:\n          type: boolean\n        recurringPeriod:\n          format: int32\n          type: integer\n        usedDatapoints:\n          format: int64\n          type: integer\n        usedMonthlyEvents:\n          format: int64\n          type: integer\n      type: object\n    Api.Core.Dto.Accounting.User:\n      properties:\n        boGoVal:\n          type: string\n        bonusClicks:\n          format: int64\n          type: integer\n        companyName:\n          type: string\n        companyRole:\n          type: string\n        email:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        phone:\n          type: string\n        redirectOnly:\n          type: boolean\n        registrationDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        timeframeMinDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        timezone:\n          format: int32\n          type: integer\n        timezonename:\n          type: string\n      type: object\n    Api.Core.Dto.Aggregated.AggregatedResult:\n      properties:\n        activityDay:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        commissionsCost:\n          format: double\n          type: number\n        conversionsCost:\n          format: double\n          type: number\n        conversionsValue:\n          format: double\n          type: number\n        convertedClicks:\n          format: int64\n          type: integer\n        entityData:\n          $ref: \"#/components/schemas/System.Object\"\n        entityId:\n          type: string\n        fromDay:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        hourlyBreakDown:\n          additionalProperties:\n            $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n          type: object\n        lastHitDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        spiderHitsCount:\n          format: int64\n          type: integer\n        toDay:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        totalClicks:\n          format: int64\n          type: integer\n        totalViews:\n          format: int64\n          type: integer\n        uniqueClicks:\n          format: int64\n          type: integer\n        uniqueConversions:\n          format: int64\n          type: integer\n        uniqueViews:\n          format: int64\n          type: integer\n      type: object\n    Api.Core.Dto.Aggregated.AggregatedSummaryResult:\n      properties:\n        count:\n          format: int64\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        offset:\n          format: int64\n          type: integer\n        result:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n          type: array\n      type: object\n    Api.Core.Dto.ClickStream.Hit:\n      properties:\n        accessTime:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        browser:\n          $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitBrowserInfo\"\n        clientLanguage:\n          type: string\n        conversion1:\n          $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo\"\n        conversion2:\n          $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo\"\n        conversion3:\n          $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo\"\n        conversion4:\n          $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo\"\n        conversion5:\n          $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo\"\n        conversions:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo\"\n          type: array\n        entity:\n          $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitDatapointInfo\"\n        ip:\n          type: string\n        isProxy:\n          type: string\n        isSpider:\n          type: string\n        isUnique:\n          type: string\n        location:\n          $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitLocationInfo\"\n        org:\n          type: string\n        os:\n          $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitOsInfo\"\n        queryParams:\n          type: string\n        realDestinationUrl:\n          type: string\n        referer:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.HitSource\"\n        type:\n          type: string\n      type: object\n    Api.Core.Dto.ClickStream.HitBrowserInfo:\n      properties:\n        browserType:\n          type: string\n        familyId:\n          format: int64\n          type: integer\n        familyName:\n          type: string\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n      type: object\n    Api.Core.Dto.ClickStream.HitConversionInfo:\n      properties:\n        accessTime:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        comcost:\n          format: double\n          type: number\n        cost:\n          format: double\n          type: number\n        date:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        deleted:\n          type: boolean\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n        parameter:\n          type: string\n        value:\n          format: double\n          type: number\n      type: object\n    Api.Core.Dto.ClickStream.HitDatapointInfo:\n      properties:\n        creationDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        datapointFavourite:\n          type: boolean\n        datapointId:\n          format: int64\n          type: integer\n        datapointName:\n          type: string\n        datapointTitle:\n          type: string\n        datapointType:\n          type: string\n        destinationUrl:\n          type: string\n        groupId:\n          format: int64\n          type: integer\n        groupName:\n          type: string\n        isABTest:\n          type: boolean\n        isPrivateShared:\n          type: boolean\n        isPublic:\n          type: boolean\n        notes:\n          type: string\n        status:\n          enum:\n            - Active\n            - Paused\n            - Abuse\n            - Deleted\n          type: string\n        tags:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Tags.Tag\"\n          type: array\n        trackingCode:\n          type: string\n      type: object\n    Api.Core.Dto.ClickStream.HitListPage:\n      properties:\n        hits:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.Hit\"\n          type: array\n        lastKey:\n          type: string\n      type: object\n    Api.Core.Dto.ClickStream.HitLocationInfo:\n      properties:\n        areacode:\n          type: string\n        city:\n          type: string\n        country:\n          type: string\n        latitude:\n          format: double\n          type: number\n        longitude:\n          format: double\n          type: number\n        metrocode:\n          type: string\n        organization:\n          type: string\n        postalcode:\n          type: string\n        region:\n          type: string\n        regionName:\n          type: string\n      type: object\n    Api.Core.Dto.ClickStream.HitOsInfo:\n      properties:\n        familyId:\n          format: int64\n          type: integer\n        familyName:\n          type: string\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n      type: object\n    Api.Core.Dto.ClickStream.HitSource:\n      properties:\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n        param:\n          type: string\n      type: object\n    Api.Core.Dto.Conversions.Conversion:\n      properties:\n        code:\n          type: string\n        creationDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        deleted:\n          type: boolean\n        description:\n          type: string\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n        protocol:\n          enum:\n            - Http\n            - Https\n          type: string\n        value:\n          format: double\n          type: number\n      type: object\n    Api.Core.Dto.Datapoints.BrowserBaseDestinationItem:\n      properties:\n        emailDestinationUrl:\n          type: string\n        mobileDestinationUrl:\n          type: string\n        spidersDestinationUrl:\n          type: string\n      type: object\n    Api.Core.Dto.Datapoints.Datapoint:\n      properties:\n        creationDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        encodeIp:\n          type: boolean\n        fifthConversionId:\n          format: int64\n          type: integer\n        fifthConversionName:\n          type: string\n        firstConversionId:\n          format: int64\n          type: integer\n        firstConversionName:\n          type: string\n        fourthConversionId:\n          format: int64\n          type: integer\n        fourthConversionName:\n          type: string\n        groupId:\n          format: int64\n          type: integer\n        groupName:\n          type: string\n        id:\n          format: int64\n          type: integer\n        isPublic:\n          type: boolean\n        isSecured:\n          type: boolean\n        lightTracking:\n          type: boolean\n        name:\n          type: string\n        notes:\n          type: string\n        preferred:\n          type: boolean\n        redirectOnly:\n          type: boolean\n        secondConversionId:\n          format: int64\n          type: integer\n        secondConversionName:\n          type: string\n        status:\n          enum:\n            - Active\n            - Paused\n            - Abuse\n            - Deleted\n          type: string\n        tags:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Tags.Tag\"\n          type: array\n        thirdConversionId:\n          format: int64\n          type: integer\n        thirdConversionName:\n          type: string\n        title:\n          type: string\n        trackingCode:\n          type: string\n        type:\n          enum:\n            - TrackingLink\n            - TrackingPixel\n          type: string\n        typeTL:\n          $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.TrackingLinkSpecifics\"\n        typeTP:\n          $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.TrackingPixelSpecifics\"\n        writePermited:\n          type: boolean\n      type: object\n    Api.Core.Dto.Datapoints.DatapointRetargetingInfo:\n      properties:\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n      type: object\n    Api.Core.Dto.Datapoints.MultipleDestinationItem:\n      properties:\n        url:\n          type: string\n      type: object\n    Api.Core.Dto.Datapoints.TrackingLinkSpecifics:\n      properties:\n        appendQuery:\n          type: boolean\n        browserDestinationItem:\n          $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.BrowserBaseDestinatio\\\n            nItem\"\n        destinationMode:\n          enum:\n            - Simple\n            - RandomDestination\n            - DestinationByLanguage\n            - SpilloverDestination\n            - DynamicUrl\n            - BrowserDestination\n            - DestinationByNation\n            - UniqueDestination\n            - SequentialDestination\n            - WeightedDestination\n          type: string\n        domainId:\n          format: int32\n          type: integer\n        encodeUrl:\n          type: boolean\n        expirationClicks:\n          format: int64\n          type: integer\n        expirationDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        firstUrl:\n          type: string\n        goDomainId:\n          format: int32\n          type: integer\n        hideUrl:\n          type: boolean\n        hideUrlTitle:\n          type: string\n        isABTest:\n          type: boolean\n        password:\n          type: string\n        pauseAfterClicksExpiration:\n          type: boolean\n        pauseAfterDateExpiration:\n          type: boolean\n        randomDestinationItems:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.MultipleDestination\\\n              Item\"\n          type: array\n        redirectType:\n          enum:\n            - PermanentRedirect\n            - TemporaryRedirect\n          type: string\n        referrerClean:\n          enum:\n            - None\n            - Clean\n            - Myself\n          type: string\n        scripts:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.DatapointRetargetin\\\n              gInfo\"\n          type: array\n        sequentialDestinationItems:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.MultipleDestination\\\n              Item\"\n          type: array\n        spilloverDestinationItems:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.MultipleDestination\\\n              Item\"\n          type: array\n        uniqueDestinationItem:\n          $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.UniqueDestinationItem\"\n        url:\n          type: string\n        urlAfterClicksExpiration:\n          type: string\n        urlAfterDateExpiration:\n          type: string\n        urlsByLanguage:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.UrlByLanguageItem\"\n          type: array\n        urlsByNation:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.UrlByNationItem\"\n          type: array\n        weightedDestinationItems:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.WeightedDestination\\\n              Item\"\n          type: array\n      type: object\n    Api.Core.Dto.Datapoints.TrackingPixelSpecifics:\n      properties:\n        parameterNote:\n          type: string\n      type: object\n    Api.Core.Dto.Datapoints.UniqueDestinationItem:\n      properties:\n        firstDestinationUrl:\n          type: string\n      type: object\n    Api.Core.Dto.Datapoints.UrlByLanguageItem:\n      properties:\n        languageCode:\n          type: string\n        url:\n          type: string\n      type: object\n    Api.Core.Dto.Datapoints.UrlByNationItem:\n      properties:\n        nation:\n          type: string\n        url:\n          type: string\n      type: object\n    Api.Core.Dto.Datapoints.WeightedDestinationItem:\n      properties:\n        url:\n          type: string\n        weight:\n          format: int32\n          type: integer\n      type: object\n    Api.Core.Dto.Domains.Domain:\n      properties:\n        custom404:\n          type: string\n        customHomepage:\n          type: string\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n        type:\n          enum:\n            - System\n            - Go\n            - Dedicated\n            - Personal\n          type: string\n      type: object\n    Api.Core.Dto.EntityUriLong:\n      properties:\n        id:\n          format: int64\n          type: integer\n        uri:\n          type: string\n      type: object\n    Api.Core.Dto.Grants.Grant:\n      properties:\n        DatapointType:\n          type: string\n        Entity:\n          $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_\"\n        EntityName:\n          type: string\n        EntityType:\n          type: string\n        Type:\n          type: string\n      type: object\n    Api.Core.Dto.Groups.Group:\n      properties:\n        creationDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        deleted:\n          type: boolean\n        id:\n          format: int64\n          type: integer\n        isPublic:\n          type: boolean\n        name:\n          type: string\n        notes:\n          type: string\n        preferred:\n          type: boolean\n        redirectOnly:\n          type: boolean\n        tags:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Tags.Tag\"\n          type: array\n        writePermited:\n          type: boolean\n      type: object\n    Api.Core.Dto.Retargeting.RetargetingScript:\n      properties:\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n        script:\n          type: string\n      type: object\n    Api.Core.Dto.Tags.Tag:\n      properties:\n        datapoints:\n          items:\n            format: int64\n            type: integer\n          type: array\n        groups:\n          items:\n            format: int64\n            type: integer\n          type: array\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n      type: object\n    Api.Core.Dto.Tops.Top:\n      properties:\n        createdAt:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        data:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Tops.TopItem\"\n          type: array\n        key:\n          type: string\n      type: object\n    Api.Core.Dto.Tops.TopItem:\n      properties:\n        entityData:\n          $ref: \"#/components/schemas/System.Object\"\n        id:\n          type: string\n        lastHitDate:\n          description: ' (A date in \"YmdHis\" format)'\n          example: \"20120203120530\"\n          type: string\n        spiderClicks:\n          format: int64\n          type: integer\n        spiderHits:\n          format: int64\n          type: integer\n        spiderViews:\n          format: int64\n          type: integer\n        totalClicks:\n          format: int64\n          type: integer\n        totalCommissionsCost:\n          format: double\n          type: number\n        totalConversions:\n          format: int64\n          type: integer\n        totalConversionsCost:\n          format: double\n          type: number\n        totalConversionsValue:\n          format: double\n          type: number\n        totalHits:\n          format: int64\n          type: integer\n        totalViews:\n          format: int64\n          type: integer\n        uniqueClicks:\n          format: int64\n          type: integer\n        uniqueHits:\n          format: int64\n          type: integer\n        uniqueViews:\n          format: int64\n          type: integer\n      type: object\n    Api.Core.Requests.ConversionPatchBody:\n      properties:\n        Action:\n          type: string\n        Id:\n          format: int64\n          type: integer\n        ReplaceId:\n          format: int64\n          type: integer\n      type: object\n    Api.Core.Requests.DatapointsBatch:\n      properties:\n        List:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.Datapoint\"\n          type: array\n      type: object\n    Api.Core.Requests.DeleteBatch:\n      properties:\n        Entities:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.EntityUriLong\"\n          type: array\n      type: object\n    Api.Core.Requests.GenericTextPatch:\n      properties:\n        Text:\n          type: string\n      type: object\n    Api.Core.Requests.PatchBody:\n      properties:\n        Action:\n          type: string\n        Id:\n          format: int64\n          type: integer\n      type: object\n    Api.Core.Requests.PatchBodyBatch:\n      properties:\n        PatchRequests:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Requests.PatchBody\"\n          type: array\n      type: object\n    Api.Core.Requests.PermissionPatchRequest:\n      properties:\n        Action:\n          type: string\n        Id:\n          format: int64\n          type: integer\n        Verb:\n          type: string\n      type: object\n    Api.Core.Responses.CountResponce:\n      properties:\n        count:\n          format: int64\n          type: integer\n      type: object\n    ClickMeter.Infrastructure.Validation.ValidationFailure:\n      properties:\n        code:\n          $ref: \"#/components/schemas/System.Object\"\n        errorMessage:\n          type: string\n        errorValue:\n          $ref: \"#/components/schemas/System.Object\"\n        property:\n          type: string\n      type: object\n    System.Object:\n      properties: {}\n      type: object\n    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Accounting.DomainWhitelistEntry_:\n      properties:\n        entities:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry\"\n          type: array\n      type: object\n    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Accounting.IpBlacklistEntry_:\n      properties:\n        entities:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry\"\n          type: array\n      type: object\n    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_:\n      properties:\n        entities:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult\"\n          type: array\n      type: object\n    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.ClickStream.Hit_:\n      properties:\n        entities:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.ClickStream.Hit\"\n          type: array\n      type: object\n    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Grants.Grant_:\n      properties:\n        entities:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Dto.Grants.Grant\"\n          type: array\n      type: object\n    Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_:\n      properties:\n        entities:\n          items:\n            $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_\"\n          type: array\n      type: object\n    Api.Core.Responses.EntityUri_System.Int64_:\n      properties:\n        id:\n          format: int64\n          type: integer\n        uri:\n          type: string\n      type: object\n    Api.Core.Responses.ModifyBatchItemResponce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_:\n      properties:\n        entityData:\n          $ref: \"#/components/schemas/Api.Core.Dto.Datapoints.Datapoint\"\n        errors:\n          items:\n            $ref: \"#/components/schemas/ClickMeter.Infrastructure.Validation.Valida\\\n              tionFailure\"\n          type: array\n        result:\n          $ref: \"#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_\"\n        status:\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/clickmeter.com-v2-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/clickmeter.com-v2-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/account/guests\": post: requestBody: contents: media: \"application/x-www-form-urlencoded\": form parameter \"currentGrant\": field \"Entity\": nested objects not allowed"
}