{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ONDC-Official/protocol-network-extension"
		},
		"file": {
			"name": "igm.yaml",
			"size": 0,
			"path": "specifications/igm/igm.yaml",
			"byteSize": 32850,
			"content": "openapi: 3.0.0\r\ninfo:\r\n  title: Issue and Grievance Management (IGM) for ONDC\r\n  description: ONDC Issue and Grievance Management (IGM)  API Specification\r\n  version: 0.0.1-draft\r\nsecurity:\r\n  - SubscriberAuth: []\r\npaths:\r\n  /issue:\r\n    post:\r\n      tags:\r\n        - Issue Lifecycle management apis\r\n      description: |\r\n        ###  Operation Description \r\n         * Create an issue for the following entities  of intrest, for which an issue is faced by the buyer: \r\n            +  order,\r\n            +  transaction \r\n            +  fulfillment or\r\n            +  item. \r\n         * The issue can be created/raised by any of \r\n            + the Issueca#/components/schemas/IssueCateogory' himself related to any of he entity mentioned  Or\r\n            + By any of the Issueca#/components/schemas/IssueCateogory'-app,seller-app, transaction-counter party, or logistics providers NPs to help resolve any issue rasied by the buyer.\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                context:\r\n                  $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Context\"\r\n                message:\r\n                  type: object\r\n                  properties:\r\n                    issue:\r\n                      $ref: \"#/components/schemas/Issue\"\r\n              required:\r\n                - context\r\n                - context.ttl\r\n                - message.issue\r\n                - message.issue.id\r\n                - message.issue.complainant_info.contact.name\r\n                - message.issue.complainant_info.contact.phone\r\n                - message.issue.complainant_info.contact.email\r\n                - message.issue.issue_order_id\r\n                - message.issue.order\r\n                - message.issue.issue_type\r\n                - message.issue.created_at\r\n                - message.issue.modified_at\r\n                - message.issue.expected_response_time\r\n                - message.issue.expected_resolution_time\r\n                - message.issue.status.issue_status\r\n      responses:\r\n        \"200\":\r\n          description: Acknowledgement of message received\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: object\r\n                    properties:\r\n                      ack:\r\n                        $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Ack\"\r\n                    required:\r\n                      - ack\r\n                  error:\r\n                    $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Error\"\r\n                required:\r\n                  - message\r\n  /on_issue:\r\n    post:\r\n      tags:\r\n        - Issue Lifecycle management apis\r\n      description: Send the issue resolution details object\r\n      requestBody:\r\n        description: Seller confirms order\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                context:\r\n                  $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Context\"\r\n                message:\r\n                  type: object\r\n                  properties:\r\n                    issue_resolution_details:\r\n                      $ref: \"#/components/schemas/IssueResolutionDetails\"\r\n                  required:\r\n                    - issue_resolution_details\r\n                error:\r\n                  $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Error\"\r\n              required:\r\n                - context\r\n                - message.issue_resolution_details\r\n                - message.issue_resolution_details.issue.id\r\n                - message.issue_resolution_details.issue.complainant_info.contact.name\r\n                - message.issue_resolution_details.issue.complainant_info.contact.phone\r\n                - message.issue_resolution_details.issue.complainant_info.contact.email\r\n                - message.issue_resolution_details.issue.issue_order_id\r\n                - message.issue_resolution_details.issue.order\r\n                - message.issue_resolution_details.issue.issue_type\r\n                - message.issue_resolution_details.issue.created_at\r\n                - message.issue_resolution_details.issue.modified_at\r\n                - message.issue_resolution_details.issue.expected_response_time\r\n                - message.issue_resolution_details.issue.expected_resolution_time\r\n                - message.issue_resolution_details.issue.status.issue_status\r\n                - message.issue_resolution_details.resolution_provider.respondent_info.respondent_contact.name\r\n                - message.issue_resolution_details.resolution_provider.respondent_info.respondent_contact.address\r\n                - message.issue_resolution_details.resolution_provider.respondent_info.respondent_contact.email\r\n                - message.issue_resolution_details.resolution_provider.provider.respondent_contact.email\r\n                - message.issue_resolution_details.resolution.network_issue_id\r\n                - message.issue_resolution_details.resolution.resolution_remarks\r\n                - message.issue_resolution_details.resolution.resolution_action\r\n      responses:\r\n        \"200\":\r\n          description: Acknowledgement of message received\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: object\r\n                    properties:\r\n                      ack:\r\n                        $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Ack\"\r\n                    required:\r\n                      - ack\r\n                  error:\r\n                    $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Error\"\r\n                required:\r\n                  - message\r\n  /issue_status:\r\n    post:\r\n      tags:\r\n        - Issue status-check apis\r\n      description: Fetch the latest issue status \r\n      requestBody:\r\n        description: Any of the network participants or the buyer or seller or lsp checks for status of order\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                context:\r\n                  $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Context\"\r\n                message:\r\n                  type: object\r\n                  properties:\r\n                    id:\r\n                      description: Network issue identifier is a unique number assigned to a complaint by the interfacing application\r\n                      type: string\r\n                      format: uuid\r\n                  required:\r\n                    - id\r\n              required:\r\n                - context\r\n                - message\r\n      responses:\r\n        '200':\r\n          description: Acknowledgement of message received\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: object\r\n                    properties:\r\n                      ack:\r\n                        $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Ack\"\r\n                    required:\r\n                      - ack\r\n                  error:\r\n                    $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Error\"\r\n                required:\r\n                  - message\r\n  /on_issue_status:\r\n    post:\r\n      tags:\r\n        - Issue status-check apis\r\n      description: Fetch the status of a Service\r\n      requestBody:\r\n        description: Seller provides status information for order\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                context:\r\n                  $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Context\"\r\n                message:\r\n                  type: object\r\n                  properties:\r\n                    issue_status:\r\n                      type: array\r\n                      items:\r\n                        $ref: '#/components/schemas/IssueStatus'\r\n                  required:\r\n                    - order\r\n                error:\r\n                    $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Error\"\r\n              required:\r\n                - context\r\n      responses:\r\n        '200':\r\n          description: Acknowledgement of message received\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: object\r\n                    properties:\r\n                      ack:\r\n                        $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Ack\"\r\n                    required:\r\n                      - ack\r\n                  error:\r\n                    $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Error\"\r\n                required:\r\n                  - message \r\ncomponents:\r\n  securitySchemes:\r\n    SubscriberAuth:\r\n      type: apiKey\r\n      in: header\r\n      name: Authorization\r\n      description: 'Signature of message body using Collector or Receiver subscriber''s signing public key. \u003cbr/\u003e\u003cbr/\u003eFormat:\u003cbr/\u003e\u003cbr/\u003e\u003ccode\u003eAuthorization : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires) digest\",signature=\"Base64(signing string)\"\u003c/code\u003e'\r\n  schemas:\r\n    Complainant:\r\n      description: |\r\n        - Describes an entity that raises a complaint with an interfacing app. \r\n        - The complainant may be an end user (buyer or seller) or a network participant (buyer app/ seller app/ logistic services  provider app)\r\n      type: object\r\n      properties:\r\n        person:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Person\"\r\n        contact:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Contact\"\r\n        complainant_action:\r\n          description: |\r\n            Describes the action taken by the conplainant who has raised the issue. \r\n            the value should be populated when the conplainant has taken any of the below actions to anotate the action taken. the actions can be, \r\n            ### Actions\r\n            1. Complainant can ```open``` the issue if he isn't satisfied with the products or services he has purchased or used \r\n            2. Complainant can ```escalate``` the issue if he isn't satisfied with the issue resolution\r\n            3. Complainant can ```close``` the issue if he doesn't expect any more additonal action on the issue and he is satisfied with the resolution/actions taken on the issue till the time of closure of the issue. \r\n            4. Complainant can ask for ```need more info``` if he is looking for further more information about the issue or the issue status or any update on the issue. \r\n          type: string\r\n          enum:\r\n            - \"01\"\r\n            - \"02\"\r\n            - \"03\"\r\n            - \"04\"\r\n        complainant_action_reason:\r\n          description: complainant can give the reason for the specific action taken\r\n          type: string\r\n      required:\r\n        - contact.name\r\n        - contact.phone\r\n        - contact.email\r\n        - complainant_action\r\n    ResolutionProvider:\r\n      description: Describes the details of the entity that provides the resolution for the issue\r\n      type: object\r\n      properties:\r\n        respondent_info:\r\n          description: _\r\n           the respondant represents the details of the entity identfied by the resolution provider or the complainant himself (when he has to select the ODRs)\r\n          type: object\r\n          properties:\r\n            type:\r\n              description: | \r\n                Indicates the type of the resolution provider NP type.\r\n                ### TYPES\r\n                1. Interfacing NP : indicating the NP where or through which the issue is raised\r\n                2. Transaction Counterparty NP : indicating the first level of transaction counterparty network provider with which the interfacing NP is interacting with to get an issue resolution.\r\n                3. Cascaded Counterparty NP : indicating the second or any further downstream levels of counterparty network provider with which the NP is interacting with to get an issue resolution.\r\n              type: string\r\n              enum:\r\n                - \"01\"\r\n                - \"02\"\r\n                - \"03\"\r\n            organization:\r\n              $ref: \"#/components/schemas/Organization\"\r\n            resolution_support:\r\n              $ref: \"#/components/schemas/ResolutionSupport\"\r\n      required:\r\n        - respondent_info\r\n\r\n    IssueResolutionDetails:\r\n      properties:\r\n        issue:\r\n          $ref: \"#/components/schemas/Issue\"\r\n        resolution_provider:\r\n          $ref: \"#/components/schemas/ResolutionProvider\"\r\n        resolution:\r\n          $ref: \"#/components/schemas/IssueResolution\"\r\n      required:\r\n        - issue\r\n        - resolution_provider\r\n        - resolution\r\n\r\n    IssueResolution:\r\n      description: Describes the issue resolution for the issue raised by a Complainant \r\n      type: object\r\n      properties:\r\n        network_issue_id:\r\n          description: Network issue identifier is a unique number assigned to a complaint by the interfacing application\r\n          type: string\r\n          format: uuid\r\n        resolution:\r\n          description: resolution\r\n          type: string\r\n        resolution_remarks:\r\n          description: remarks of the resolution of the issue by the respondent\r\n          type: string\r\n        gro_remarks:\r\n          description: resolution remarks provided by the gro\r\n          type: string\r\n        dispute_resolution_remarks:\r\n          description: remarks of the result of the dispute, if applicable\r\n          type: string\r\n        resolution_action:\r\n          description: |\r\n              Indicactes the action taken while addressing the issue.\r\n               ### Actions\r\n                1. resolve : indicating the issue being resolved. \r\n                2. reject : indicating that the issue is rejected by the respondant or the resolution provider. \r\n          type: string\r\n          enum:\r\n            - \"01\"\r\n            - \"02\"\r\n      required:\r\n        - id\r\n        - resolution_remarks\r\n        - resolution_action\r\n    Organization:\r\n      type: object\r\n      properties:\r\n        org:\r\n         $ref: \"https://raw.githubusercontent.com/ONDC-Official/ONDC-Protocol-Specs/master/protocol-specifications/core/v0/api/core.yaml#/components/schemas/Organization\"\r\n        contact: \r\n         $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Contact\"\r\n        person:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Person\"\r\n    ResolutionSupport:\r\n      description: |\r\n        Any one of these resolution support deatils are mandatory to be speficed whenever an issue resolution is proposed.\r\n        In case of Issue, Either a respondent ChatLink, email or faq deatils should be provided or any of the additional sources of support should be provided\r\n        In case of Grievance : the GRO details are manadatory to be provided \r\n        In case of Dispute : the selected ODR details are mandatory to be provided \r\n        Porvides details of the resolution support for the respondent / complainant to interact with the respondent\r\n      type: object\r\n      properties:\r\n        respondentChatLink:\r\n          description: chatbot link for the respondent for complainant to interact with the respondent\r\n          type: string\r\n        respondentEmail:\r\n          description: email for the respondent for complainant to interact with the respondent\r\n          type: string\r\n        respondentContact:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Contact\"\r\n        respondentFaqs:\r\n          description: frequently asked questions for the respondent for complainant to get information as required\r\n          type: object\r\n          additionalProperties:\r\n            $ref: '#/components/schemas/Faq'\r\n        additional_sources:\r\n          type: object\r\n          additionalProperties:\r\n            $ref: \"#/components/schemas/ResolutionSource\"\r\n        selected_odrs:\r\n          description: |\r\n            details of the ODRs selected by the resolution provider .\r\n            one of this would be subsequently finalized to be the ODR resposbile to resolve the issue . \r\n            This is a required object if and when the issue type is \"Dispute\"\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/ODR\"\r\n        gros:\r\n          description: |\r\n            Details of the GRO appointed by the resolution provider to support in issue resolution .\r\n            This is a required object if and when the issue type is \"Grievance\"\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/GRO\"\r\n\r\n    ResolutionSource:\r\n      description: |\r\n        the resolution source provide details of any addtional resolution resources thier types and a link eg : AI enabled chatbot, support/contact webpage link , lnik to IVR detials etc\r\n      type: object\r\n      properties:\r\n        type:\r\n          type: string\r\n        link:\r\n          type: string\r\n    GRO:\r\n      description: |\r\n        Grievance Redressal Officer is appointed by each network participant (buyer app, seller app, logistic provider app) for consumer grievance redressal\r\n        Details of the GRO appointed by the resolution provider to support in issue resolution .\r\n        This is a required object if and when the issue type is \"Grievance\"\r\n        \r\n      type: object\r\n      properties:\r\n        person:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Person\"\r\n        contact:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Contact\"\r\n        gro_type:\r\n          type: string\r\n          description: |\r\n            Indicates the system through which the GRO is assigned to this issue. \r\n            ### TYPES\r\n                1. Intefacing NP GRO : indicating the GRO is assigned by the NP where or through which the issue is raised\r\n                2. Transaction Counterparty NP GRO : indicating the GRO is assigned by the first level of counterparty network provider with which the interfacing NP is interacting with to get an issue resolution.\r\n                3. Cascaded Counterparty NP GRO : indicating the GRO is assigned by the second or any further downstream levels of counterparty network provider, with which the NP is interacting with, to get an issue resolution.\r\n          enum:\r\n            - \"01\"\r\n            - \"02\"\r\n            - \"03\"\r\n      required:\r\n        - contact.name\r\n        - contact.phone\r\n        - contact.email\r\n        - gro_type\r\n    Faq:\r\n      description: |\r\n       type: object\r\n      properties:\r\n        question:\r\n          type: string\r\n        Answer:\r\n          type: string\r\n    ODR:\r\n      description: |\r\n        * Describes the details of the Online Dispute Resolution Provider.\r\n        ODR Service Providers (ODR SP) via dispute resolution methods such as mediation/ conciliation and/or arbitration, will attempt to resolve disputes\r\n        NOTE : ```ODR``` stands for Online Dispute Resolution.\r\n        * May also describe the details of the ODR finalized or identified by the intefacing app, to whom the issue will be assigned for resolution.\r\n      type: object\r\n      properties:\r\n        name:\r\n          description: Name of the ODR provider\r\n          type: string\r\n        about_info:\r\n          description: Detailed information about the ODR provider\r\n          type: string\r\n        url:\r\n          description: URL link to the ODR provider\r\n          type: string\r\n        organization:\r\n          $ref: \"#/components/schemas/Organization\"\r\n        pricing_model:\r\n          description: Details of the pricing modle of the ODR\r\n          type: object\r\n          properties:\r\n            price:\r\n              $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Price\"\r\n            pricing_info:\r\n              description: addtional information about the pricing model\r\n              type: string\r\n\r\n        resolution_ratings:\r\n          $ref: \"#/components/schemas/Rating\"\r\n      required:\r\n        - name\r\n        - about_info\r\n        - url\r\n        - pricing_model.pricing_info\r\n        - resolution_ratings.rating_value\r\n    Rating:\r\n      description: |\r\n            provides details of the ratings provided for a specific entity.\r\n            Describes details of how the ODR has been rated across the resolutions it has provided in the past\r\n      type: object\r\n      properties:\r\n        rating_value:\r\n          description: | \r\n            Rating value in percentage: eg : 98%\r\n          type: string\r\n      required:\r\n        - rating_value\r\n    Issue:\r\n      description: |\r\n        *  Describes the Issue/complaint raised for a particular order, transaction or fulfillment or item for which an issue is faced by the buyer.\r\n        * It also describes the Issue/complaint raised by the network participants to its conuter party or casacaded counterparty apps as and when applicable\r\n        * Describes the issue when it is escalated as a Grievance or a Dispute\r\n        *  supplementary Information  Describes and details evidence of the information about the issue . When the complainant or respondant seeks an issue update the addtional information about the update are populated as part of the supplementary information. \r\n          the supplementary information section , details information including but not limited to any of the following or more: \r\n            * comments from the complaintant/ respondant for seeking more information about the issue\r\n            * comments from the complaintant/ respondant providing the update on the issue with more information on the issue \r\n            * Picutres providing further information about the issue\r\n            * documents attachment/links providing further information about the issue etc\r\n      type: object\r\n      properties:\r\n        id:\r\n          description: |\r\n            * Network issue identifier is an unique number assigned to any complaint by the interfacing application at the source.\r\n\r\n            * **During the life cycle of a complaint, this number will not change and will be communicated to counterparty application.**\r\n\r\n            * Any subsequent issues created with the interfacing,counterpary or casacaded counter party apps are responsible for providing the correalted and relevant network-issue-id which helps all this inteacting systems to traverse back to the main issue.\r\n          type: string\r\n          format: uuid\r\n        complainant_info:\r\n          $ref: \"#/components/schemas/Complainant\"\r\n        # issue_identifiers:\r\n        #   $ref: \"#/components/schemas/IssueIdentifiers\"\r\n       # issue_order_id: #to rewview should this be moved within issue identifiers\r\n          #description: order id for the reference to the order for which there is a complaint\r\n          #type: string\r\n        #issue_fulfilment_id: #to rewview should this be moved within issue identifiers\r\n          #description: issues may be raised with reference to a fulfilment id\r\n          #type: string\r\n        #item_id: #to rewview should this be moved within issue identifiers\r\n         # description: issues may be raised with reference to a specific item id as well for individual items\r\n         # type: string\r\n        order:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Order\"\r\n        description:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Descriptor\"\r\n        category:\r\n          $ref: \"#/components/schemas/IssueCategory\"\r\n        issue_type:\r\n          description: |\r\n            identifies the type of the issue raised\r\n            * the complainant being raised can be a regular ```Issue```, \r\n            * which then subsequently can be escalated to be a ```Grievance``` \r\n            * which may be further escalated to be a ```Dispute```\r\n          type: string\r\n          enum:\r\n            - \"01\"\r\n            - \"02\"\r\n            - \"03\"\r\n        source:\r\n          $ref: \"#/components/schemas/IssueSource\"\r\n        supplementary_information:\r\n          type: array\r\n          items:\r\n            $ref: \"#/components/schemas/SupplementaryInformation\"\r\n        expected_response_time:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Time\"\r\n        expected_resolution_time:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Time\"\r\n        status:\r\n          $ref: \"#/components/schemas/IssueStatus\"\r\n        created_at:\r\n          description: timestamp for the creation of the issue\r\n          type: string\r\n          format: date-time\r\n        modified_at:\r\n          description: timestamp for the capturing the time an issue was last updated\r\n          type: string\r\n          format: date-time\r\n        finalized_odr:\r\n          $ref: \"#/components/schemas/ODR\"\r\n        rating:\r\n          description: rating by the complainant for issue resolution\r\n          type: string\r\n          enum:\r\n            - THUMBS-UP\r\n            - THUMBS-DOWN\r\n      required:\r\n        - id\r\n        - complainant_info.contact.name\r\n        - complainant_info.contact.phone\r\n        - complainant_info.contact.email\r\n        - description\r\n        - issue_order_id\r\n        - order\r\n        - issue_type\r\n        - created_at\r\n        - modified_at\r\n        - expected_response_time\r\n        - expected_resolution_time\r\n        - status.issue_status\r\n    SupplementaryInformation:\r\n      type: object\r\n      properties:\r\n        issue_update_info:\r\n                $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Descriptor\"  \r\n        created_at:\r\n          description: timestamp for the creation of the issue\r\n          type: string\r\n          format: date-time\r\n        modified_at:\r\n          description: timestamp for the capturing the time an issue was last updated\r\n          type: string\r\n          format: date-time\r\n  #  IssueIdentifiers:\r\n      # description:  IDs of the subsequent tickets generated by the systems partipating in complaint resolution respectively.\r\n      # type: object\r\n      # properties:\r\n      #   issue_id_crm_bap:\r\n      #     description: this id shall be maitained and populated by the buyer app for an issue raised\r\n      #     type: string\r\n      #   issue_id_crm_bpp:\r\n      #     description: this id shall be maitained and populated by the seller app for an issue raised\r\n      #     type: string\r\n      #   issue_id_crm_lsp:\r\n      #     description: This id shall be maitained and populated by the LSP for an issue raised\r\n      #     type: string\r\n    IssueSource:\r\n      description: _\r\n      type: object\r\n      properties:\r\n        network_participant_id:\r\n          type: string\r\n          description: unique identifier of the network participant of the source of this issue. It can be one of buyer-id in the buyer- interfacing app , or any of the relevant network provider id based on what causes the issue\r\n        issue_source_type:\r\n          description: |\r\n            Indicates the source from where the issue is raised. \r\n            ### TYPES\r\n                1. Buyer : indicating that the Buyer of a product or a service has raised the issue\r\n                2. Seller : indicating that the Seller of a product or a service has raised the issue\r\n                3. Intefacing NP : indicating that the Interfacing NP has identified and raised the issue\r\n          type: string\r\n          enum:\r\n            - \"01\"\r\n            - \"02\"\r\n            - \"03\"\r\n    IssueStatus:\r\n      description: |\r\n        Status of the issue updated by respondent or the complainant\r\n        The issue may attain different status based on its lifecycle. TODO add info of enums in here and in issue-source\r\n      type: object\r\n      properties:\r\n        network_issue_id:\r\n          type: string\r\n          format: uuid\r\n        status:\r\n          description: |\r\n             ### Statues\r\n                1. Open : indicating that the issue is opened and further action is yet to be taken on the issue\r\n                2. Closed : indicating that the issue is closed and no further action/update/info/resolution action/status change are expected/accepted on this issue         \r\n                3. Resolved : indicating that the issue is resolved and no further resolution action is expected on this issue        \r\n                4. Need More Info :   indicating that the network participant  is expecting more information from the complaiant . In that scenario the network participant working on the issue will set this status .  \r\n          type: string\r\n          enum:\r\n            - \"01\"\r\n            # TODO should we also have the \"assigned \" and \"in progress\" statues\r\n            - \"02\"\r\n            - \"03\"\r\n            - \"04\"\r\n        closing_reason:\r\n          description: |\r\n            details of the reason why the issue is closed, can be captured when the complainant triggers a closing action\r\n          type: string\r\n        closing_remarks:\r\n          description: |\r\n            details of the remarks when the issue is closed, can be captured when the complainant triggers a closing action\r\n          type: string\r\n        status_details:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Descriptor\"\r\n        status_change_date:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Time\"\r\n        issue_modification_date:\r\n          $ref: \"https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Time\"\r\n        modified_by:\r\n          $ref: \"#/components/schemas/Organization\"\r\n        modified_issue_field_name:\r\n          description: \r\n            The issue field name that has been modified\r\n          type: string\r\n    IssueCategory:\r\n      description: |\r\n        Identifies what is the category of this issue\r\n        ### CATEGORIES:\r\n        1. Order : Indicactes that the issue is related to  Order.\r\n        2. Transaction : Indicactes that the issue is related to  Transaction.\r\n        3. Fulfillment : Indicactes that the issue is related to  Fulfillment.\r\n        4. Product : Indicactes that the issue is related to  Product.\r\n        5. Product Service : Indicactes that the issue is related to  Product Service.\r\n        6. Service : Indicactes that the issue is related to  Service.\r\n        7. Payment : Indicactes that the issue is related to  Payments.\r\n      type: string\r\n      enum: # TODO need to revisit\r\n        - \"01\"\r\n        - \"02\"\r\n        - \"03\"\r\n        - \"04\"\r\n        - \"05\"\r\n        - \"06\"\r\n        - \"07\"\r\n",
			"canonicalURL": "/github.com/ONDC-Official/protocol-network-extension@c2b8f72ef62fbba40ba6d952969253a8b6557581/-/blob/specifications/igm/igm.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ONDC-Official/protocol-network-extension/blob/c2b8f72ef62fbba40ba6d952969253a8b6557581/specifications/igm/igm.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/issue\": post: requestBody: contents: media: \"application/json\": generate schema: save schema types: save referenced type: reference \"https://raw.githubusercontent.com/ONDC-Official/ONDC-Protocol-Specs/master/protocol-specifications/core/v0/api/core.yaml#/components/schemas/Organization\" type name conflict: \"Organization\""
}