{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zircote/swagger-php"
		},
		"file": {
			"name": "using-traits.yaml",
			"size": 0,
			"path": "Examples/using-traits/using-traits.yaml",
			"byteSize": 3272,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'Example of using traits in swagger-php'\n  version: 1.0.0\npaths:\n  '/entities/{id}':\n    delete:\n      tags:\n        - Entities\n      operationId: deleteEntity\n      parameters:\n        -\n          name: id\n          in: path\n          description: 'ID of entity to delete'\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: 'successful operation'\n  '/products/{product_id}':\n    get:\n      tags:\n        - Products\n      operationId: 1395fb672d283f343885d77e3a1ce8a5\n      parameters:\n        -\n          name: product_id\n          in: path\n          description: 'ID of product to return'\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: 'successful operation'\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - { $ref: '#/components/schemas/SimpleProduct' }\n                  - { $ref: '#/components/schemas/Product' }\n                  - { $ref: '#/components/schemas/TrickyProduct' }\ncomponents:\n  schemas:\n    BellsAndWhistles:\n      title: 'Bells and Whistles trait'\n      allOf:\n        -\n          $ref: '#/components/schemas/Bells'\n        -\n          $ref: '#/components/schemas/Whistles'\n        -\n          properties:\n            plating:\n              description: 'The plating.'\n              example: gold\n    CustomName/Blink:\n      title: 'Blink trait'\n      properties:\n        frequency:\n          description: 'The frequency.'\n          example: 1\n      type: object\n    Colour:\n      title: 'Colour trait'\n      properties:\n        colour:\n          description: 'The colour.'\n          example: red\n      type: object\n    Bells:\n      title: 'Bells trait'\n      properties:\n        bell:\n          description: 'The bell (clashes with Product::bell).'\n          example: chime\n      type: object\n    Whistles:\n      title: 'Whistles trait'\n      properties:\n        whistle:\n          description: 'The bell.'\n          example: 'bone whistle'\n      type: object\n    Product:\n      title: 'Product model'\n      allOf:\n        -\n          $ref: '#/components/schemas/Colour'\n        -\n          $ref: '#/components/schemas/BellsAndWhistles'\n        -\n          properties:\n            id:\n              description: 'The unique identifier of a product in our catalog.'\n              type: integer\n              format: int64\n              example: 1\n            bell:\n              description: 'The product bell.'\n              example: gong\n    SimpleProduct:\n      title: 'SimpleProduct model'\n      allOf:\n        -\n          $ref: '#/components/schemas/Bells'\n        -\n          properties:\n            id:\n              description: 'The unique identifier of a simple product in our catalog.'\n              type: integer\n              format: int64\n              example: 1\n    TrickyProduct:\n      title: 'TrickyProduct model'\n      allOf:\n        -\n          $ref: '#/components/schemas/SimpleProduct'\n        -\n          $ref: '#/components/schemas/CustomName~1Blink'\n        -\n          properties:\n            trick:\n              description: 'The trick.'\n              example: 'recite poem'\n",
			"canonicalURL": "/github.com/zircote/swagger-php@99a8deb5cf5e3cd6ecd444ebacd18f1d19288f83/-/blob/Examples/using-traits/using-traits.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/zircote/swagger-php/blob/99a8deb5cf5e3cd6ecd444ebacd18f1d19288f83/Examples/using-traits/using-traits.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/products/{product_id}\": get: responses: default: contents: application/json: generate schema: oneOf: collect variants: oneOf[1]: allOf: schema type mismatch: object and "
}