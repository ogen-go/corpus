{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RedHatProductSecurity/component-registry"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi.yml",
			"byteSize": 60971,
			"content": "openapi: 3.0.3\ninfo:\n  title: Component Registry API\n  version: 0.0.1\n  description: REST API auto-generated docs for Component Registry\npaths:\n  /api/healthy:\n    get:\n      operationId: healthy_retrieve\n      description: Send empty 200 response as an indicator that the application is\n        up and running.\n      tags:\n      - healthy\n      responses:\n        '200':\n          description: No response body\n  /api/v1/builds:\n    get:\n      operationId: v1_builds_list\n      description: View for api/v1/builds\n      parameters:\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: tags\n        schema:\n          type: integer\n      - in: query\n        name: type\n        schema:\n          type: string\n          enum:\n          - BREW\n          - KOJI\n          - PNC\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSoftwareBuildList'\n          description: ''\n  /api/v1/builds/{build_id}:\n    get:\n      operationId: v1_builds_retrieve\n      description: View for api/v1/builds\n      parameters:\n      - in: path\n        name: build_id\n        schema:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        description: A unique value identifying this software build.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SoftwareBuild'\n          description: ''\n  /api/v1/builds/{build_id}/tags:\n    post:\n      operationId: v1_builds_tags_create\n      description: View for api/v1/builds\n      parameters:\n      - in: path\n        name: build_id\n        schema:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        description: A unique value identifying this software build.\n        required: true\n      tags:\n      - v1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Tag'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: ''\n    delete:\n      operationId: v1_builds_tags_destroy\n      description: Delete a tag from a build.\n      parameters:\n      - in: path\n        name: build_id\n        schema:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        description: A unique value identifying this software build.\n        required: true\n      tags:\n      - v1\n      responses:\n        '204':\n          description: No response body\n  /api/v1/channels:\n    get:\n      operationId: v1_channels_list\n      description: View for api/v1/channels\n      parameters:\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: type\n        schema:\n          type: string\n          enum:\n          - CDN_REPO\n          - CONTAINER_REGISTRY\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedChannelList'\n          description: ''\n  /api/v1/channels/{uuid}:\n    get:\n      operationId: v1_channels_retrieve\n      description: View for api/v1/channels\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this channel.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Channel'\n          description: ''\n  /api/v1/components:\n    get:\n      operationId: v1_components_list\n      description: View for api/v1/components\n      parameters:\n      - in: query\n        name: arch\n        schema:\n          type: string\n      - in: query\n        name: channels\n        schema:\n          type: string\n      - in: query\n        name: description\n        schema:\n          type: string\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: name\n        schema:\n          type: string\n      - in: query\n        name: nevra\n        schema:\n          type: string\n      - in: query\n        name: nvr\n        schema:\n          type: string\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - in: query\n        name: ofuri\n        schema:\n          type: string\n      - in: query\n        name: product_streams\n        schema:\n          type: string\n      - in: query\n        name: product_variants\n        schema:\n          type: string\n      - in: query\n        name: product_versions\n        schema:\n          type: string\n      - in: query\n        name: products\n        schema:\n          type: string\n      - in: query\n        name: provides\n        schema:\n          type: string\n      - in: query\n        name: re_name\n        schema:\n          type: string\n      - in: query\n        name: re_purl\n        schema:\n          type: string\n      - in: query\n        name: re_upstream\n        schema:\n          type: string\n      - in: query\n        name: release\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: sources\n        schema:\n          type: string\n      - in: query\n        name: tags\n        schema:\n          type: integer\n      - in: query\n        name: type\n        schema:\n          type: string\n          enum:\n          - CONTAINER_IMAGE\n          - GOLANG\n          - MAVEN\n          - NPM\n          - PYPI\n          - RHEL_MODULE\n          - RPM\n          - SRPM\n          - UNKNOWN\n          - UPSTREAM\n      - in: query\n        name: upstreams\n        schema:\n          type: string\n      - in: query\n        name: version\n        schema:\n          type: string\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedComponentList'\n          description: ''\n  /api/v1/components/{uuid}:\n    get:\n      operationId: v1_components_retrieve\n      description: View for api/v1/components\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Component(\u003cclass 'type'\u003e).\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComponentDetail'\n          description: ''\n  /api/v1/components/{uuid}/provides:\n    get:\n      operationId: v1_components_provides_retrieve\n      description: View for api/v1/components\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Component(\u003cclass 'type'\u003e).\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Component'\n          description: ''\n  /api/v1/components/{uuid}/tags:\n    post:\n      operationId: v1_components_tags_create\n      description: View for api/v1/components\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Component(\u003cclass 'type'\u003e).\n        required: true\n      tags:\n      - v1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Component'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Component'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Component'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Component'\n          description: ''\n    delete:\n      operationId: v1_components_tags_destroy\n      description: Delete a tag from a build.\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Component(\u003cclass 'type'\u003e).\n        required: true\n      tags:\n      - v1\n      responses:\n        '204':\n          description: No response body\n  /api/v1/components/{uuid}/taxonomy:\n    get:\n      operationId: v1_components_taxonomy_retrieve\n      description: View for api/v1/components\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Component(\u003cclass 'type'\u003e).\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Component'\n          description: ''\n  /api/v1/lifecycles:\n    get:\n      operationId: v1_lifecycles_list\n      description: View for api/v1/lifecycles\n      parameters:\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedAppStreamLifeCycleList'\n          description: ''\n  /api/v1/lifecycles/{id}:\n    get:\n      operationId: v1_lifecycles_retrieve\n      description: View for api/v1/lifecycles\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this app stream life cycle.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStreamLifeCycle'\n          description: ''\n  /api/v1/product_streams:\n    get:\n      operationId: v1_product_streams_list\n      description: View for api/v1/product_streams\n      parameters:\n      - in: query\n        name: channels\n        schema:\n          type: string\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - in: query\n        name: product_streams\n        schema:\n          type: string\n      - in: query\n        name: product_variants\n        schema:\n          type: string\n      - in: query\n        name: product_versions\n        schema:\n          type: string\n      - in: query\n        name: products\n        schema:\n          type: string\n      - in: query\n        name: re_name\n        schema:\n          type: string\n      - in: query\n        name: re_ofuri\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: tags\n        schema:\n          type: integer\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedProductStreamList'\n          description: ''\n  /api/v1/product_streams/{uuid}:\n    get:\n      operationId: v1_product_streams_retrieve\n      description: View for api/v1/product_streams\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product stream.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductStream'\n          description: ''\n  /api/v1/product_streams/{uuid}/manifest:\n    get:\n      operationId: v1_product_streams_manifest_retrieve\n      description: View for api/v1/product_streams\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product stream.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductStream'\n          description: ''\n  /api/v1/product_streams/{uuid}/tags:\n    post:\n      operationId: v1_product_streams_tags_create\n      description: View for api/v1/product_streams\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product stream.\n        required: true\n      tags:\n      - v1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Tag'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: ''\n    delete:\n      operationId: v1_product_streams_tags_destroy\n      description: Delete a tag from a build.\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product stream.\n        required: true\n      tags:\n      - v1\n      responses:\n        '204':\n          description: No response body\n  /api/v1/product_streams/{uuid}/taxonomy:\n    get:\n      operationId: v1_product_streams_taxonomy_retrieve\n      description: View for api/v1/product_streams\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product stream.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductStream'\n          description: ''\n  /api/v1/product_variants:\n    get:\n      operationId: v1_product_variants_list\n      description: View for api/v1/product_variants\n      parameters:\n      - in: query\n        name: channels\n        schema:\n          type: string\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - in: query\n        name: product_streams\n        schema:\n          type: string\n      - in: query\n        name: product_variants\n        schema:\n          type: string\n      - in: query\n        name: product_versions\n        schema:\n          type: string\n      - in: query\n        name: products\n        schema:\n          type: string\n      - in: query\n        name: re_name\n        schema:\n          type: string\n      - in: query\n        name: re_ofuri\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: tags\n        schema:\n          type: integer\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedProductVariantList'\n          description: ''\n  /api/v1/product_variants/{uuid}:\n    get:\n      operationId: v1_product_variants_retrieve\n      description: View for api/v1/product_variants\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product variant.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductVariant'\n          description: ''\n  /api/v1/product_variants/{uuid}/manifest:\n    get:\n      operationId: v1_product_variants_manifest_retrieve\n      description: View for api/v1/product_variants\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product variant.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductVariant'\n          description: ''\n  /api/v1/product_variants/{uuid}/tags:\n    post:\n      operationId: v1_product_variants_tags_create\n      description: View for api/v1/product_variants\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product variant.\n        required: true\n      tags:\n      - v1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Tag'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: ''\n    delete:\n      operationId: v1_product_variants_tags_destroy\n      description: Delete a tag from a build.\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product variant.\n        required: true\n      tags:\n      - v1\n      responses:\n        '204':\n          description: No response body\n  /api/v1/product_variants/{uuid}/taxonomy:\n    get:\n      operationId: v1_product_variants_taxonomy_retrieve\n      description: View for api/v1/product_variants\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product variant.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductVariant'\n          description: ''\n  /api/v1/product_versions:\n    get:\n      operationId: v1_product_versions_list\n      description: View for api/v1/product_versions\n      parameters:\n      - in: query\n        name: channels\n        schema:\n          type: string\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - in: query\n        name: product_streams\n        schema:\n          type: string\n      - in: query\n        name: product_variants\n        schema:\n          type: string\n      - in: query\n        name: product_versions\n        schema:\n          type: string\n      - in: query\n        name: products\n        schema:\n          type: string\n      - in: query\n        name: re_name\n        schema:\n          type: string\n      - in: query\n        name: re_ofuri\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: tags\n        schema:\n          type: integer\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedProductVersionList'\n          description: ''\n  /api/v1/product_versions/{uuid}:\n    get:\n      operationId: v1_product_versions_retrieve\n      description: View for api/v1/product_versions\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product version.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductVersion'\n          description: ''\n  /api/v1/product_versions/{uuid}/manifest:\n    get:\n      operationId: v1_product_versions_manifest_retrieve\n      description: View for api/v1/product_versions\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product version.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductVersion'\n          description: ''\n  /api/v1/product_versions/{uuid}/tags:\n    post:\n      operationId: v1_product_versions_tags_create\n      description: View for api/v1/product_versions\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product version.\n        required: true\n      tags:\n      - v1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Tag'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: ''\n    delete:\n      operationId: v1_product_versions_tags_destroy\n      description: Delete a tag from a build.\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product version.\n        required: true\n      tags:\n      - v1\n      responses:\n        '204':\n          description: No response body\n  /api/v1/product_versions/{uuid}/taxonomy:\n    get:\n      operationId: v1_product_versions_taxonomy_retrieve\n      description: View for api/v1/product_versions\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product version.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductVersion'\n          description: ''\n  /api/v1/products:\n    get:\n      operationId: v1_products_list\n      description: View for api/v1/products\n      parameters:\n      - in: query\n        name: channels\n        schema:\n          type: string\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: name\n        schema:\n          type: string\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - in: query\n        name: product_streams\n        schema:\n          type: string\n      - in: query\n        name: product_variants\n        schema:\n          type: string\n      - in: query\n        name: product_versions\n        schema:\n          type: string\n      - in: query\n        name: products\n        schema:\n          type: string\n      - in: query\n        name: re_name\n        schema:\n          type: string\n      - in: query\n        name: re_ofuri\n        schema:\n          type: string\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: tags\n        schema:\n          type: integer\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedProductList'\n          description: ''\n  /api/v1/products/{uuid}:\n    get:\n      operationId: v1_products_retrieve\n      description: View for api/v1/products\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n          description: ''\n  /api/v1/products/{uuid}/manifest:\n    get:\n      operationId: v1_products_manifest_retrieve\n      description: View for api/v1/products\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n          description: ''\n  /api/v1/products/{uuid}/tags:\n    post:\n      operationId: v1_products_tags_create\n      description: View for api/v1/products\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product.\n        required: true\n      tags:\n      - v1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Tag'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: ''\n    delete:\n      operationId: v1_products_tags_destroy\n      description: Delete a tag from a build.\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product.\n        required: true\n      tags:\n      - v1\n      responses:\n        '204':\n          description: No response body\n  /api/v1/products/{uuid}/taxonomy:\n    get:\n      operationId: v1_products_taxonomy_retrieve\n      description: View for api/v1/products\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n          description: ''\n  /api/v1/relations:\n    get:\n      operationId: v1_relations_list\n      description: View for api/v1/relations\n      parameters:\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedRelationList'\n          description: ''\n  /api/v1/relations/{uuid}:\n    get:\n      operationId: v1_relations_retrieve\n      description: View for api/v1/relations\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product component relation.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Relation'\n          description: ''\n  /api/v1/relations/{uuid}/tags:\n    post:\n      operationId: v1_relations_tags_create\n      description: View for api/v1/relations\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product component relation.\n        required: true\n      tags:\n      - v1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Tag'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Tag'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: ''\n    delete:\n      operationId: v1_relations_tags_destroy\n      description: Delete a tag from a build.\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product component relation.\n        required: true\n      tags:\n      - v1\n      responses:\n        '204':\n          description: No response body\n  /api/v1/reports/coverage:\n    get:\n      operationId: v1_reports_coverage_retrieve\n      description: View for api/v1/reports/coverage\n      tags:\n      - v1\n      responses:\n        '200':\n          description: No response body\n  /api/v1/reports/coverage/{uuid}:\n    get:\n      operationId: v1_reports_coverage_retrieve_2\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this product.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          description: No response body\n  /api/v1/schema:\n    get:\n      operationId: v1_schema_retrieve\n      description: |-\n        OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n        - YAML: application/vnd.oai.openapi\n        - JSON: application/vnd.oai.openapi+json\n      parameters:\n      - in: query\n        name: format\n        schema:\n          type: string\n          enum:\n          - json\n          - yaml\n      tags:\n      - v1\n      security:\n      - {}\n      responses:\n        '200':\n          content:\n            application/vnd.oai.openapi:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/yaml:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/vnd.oai.openapi+json:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/v1/status:\n    get:\n      operationId: v1_status_list\n      description: View for api/v1/status\n      parameters:\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      tags:\n      - v1\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?offset=400\u0026limit=100\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?offset=200\u0026limit=100\n                  results:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        status:\n                          type: string\n                        dt:\n                          type: string\n                          format: date-time\n                        service_version:\n                          type: string\n                        rest_api_version:\n                          type: string\n                        db_size:\n                          type: string\n                        builds:\n                          type: object\n                          properties:\n                            count:\n                              type: integer\n                        products:\n                          type: object\n                          properties:\n                            count:\n                              type: integer\n                        product_versions:\n                          type: object\n                          properties:\n                            count:\n                              type: integer\n                        product_streams:\n                          type: object\n                          properties:\n                            count:\n                              type: integer\n                        product_variants:\n                          type: object\n                          properties:\n                            count:\n                              type: integer\n                        channels:\n                          type: object\n                          properties:\n                            count:\n                              type: integer\n                        components:\n                          type: object\n                          properties:\n                            count:\n                              type: integer\n                        relations:\n                          type: object\n                          properties:\n                            count:\n                              type: integer\n          description: ''\n  /api/v1/status/{build_id}:\n    get:\n      operationId: v1_status_retrieve\n      parameters:\n      - in: path\n        name: build_id\n        schema:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        description: A unique value identifying this software build.\n        required: true\n      tags:\n      - v1\n      responses:\n        '200':\n          description: No response body\n  /api/v1/taxonomy/components:\n    get:\n      operationId: v1_taxonomy_components_retrieve\n      description: return all components in component taxonomy\n      tags:\n      - v1\n      responses:\n        '200':\n          description: No response body\n  /api/v1/taxonomy/products:\n    get:\n      operationId: v1_taxonomy_products_retrieve\n      description: return all product nodes in product taxonomy\n      tags:\n      - v1\n      responses:\n        '200':\n          description: No response body\ncomponents:\n  schemas:\n    AppStreamLifeCycle:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        last_changed:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/AppStreamLifeCycleTypeEnum'\n        lifecycle:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        acg:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        start_date:\n          type: string\n          format: date\n          nullable: true\n        end_date:\n          type: string\n          format: date\n          nullable: true\n        product:\n          type: string\n        initial_product_version:\n          type: string\n        stream:\n          type: string\n        source:\n          $ref: '#/components/schemas/SourceEnum'\n        private:\n          type: boolean\n        meta_attr:\n          type: object\n          additionalProperties: {}\n      required:\n      - acg\n      - created_at\n      - id\n      - initial_product_version\n      - last_changed\n      - lifecycle\n      - name\n      - private\n      - product\n      - source\n      - stream\n    AppStreamLifeCycleTypeEnum:\n      enum:\n      - module\n      - package\n      - scl\n      type: string\n    Channel:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        last_changed:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/ChannelTypeEnum'\n        description:\n          type: string\n        meta_attr:\n          type: object\n          additionalProperties: {}\n      required:\n      - created_at\n      - last_changed\n      - name\n      - type\n      - uuid\n    ChannelTypeEnum:\n      enum:\n      - CDN_REPO\n      - CONTAINER_REGISTRY\n      type: string\n    Component:\n      type: object\n      properties:\n        link:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        type:\n          $ref: '#/components/schemas/Type1b3Enum'\n        purl:\n          type: string\n          maxLength: 1024\n        name:\n          type: string\n        description:\n          type: string\n        related_url:\n          type: string\n          nullable: true\n          maxLength: 1024\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n          readOnly: true\n        version:\n          type: string\n          maxLength: 1024\n        release:\n          type: string\n          maxLength: 1024\n        arch:\n          type: string\n          maxLength: 1024\n        nvr:\n          type: string\n          maxLength: 1024\n        nevra:\n          type: string\n          maxLength: 1024\n        epoch:\n          type: string\n          readOnly: true\n        license:\n          type: string\n        license_list:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        software_build:\n          $ref: '#/components/schemas/SoftwareBuildSummary'\n        errata:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        products:\n          type: string\n          readOnly: true\n        product_versions:\n          type: string\n          readOnly: true\n        product_streams:\n          type: string\n          readOnly: true\n        product_variants:\n          type: string\n          readOnly: true\n        sources:\n          type: string\n          readOnly: true\n        provides:\n          type: string\n          readOnly: true\n        upstreams:\n          type: string\n          readOnly: true\n      required:\n      - description\n      - epoch\n      - errata\n      - license_list\n      - link\n      - name\n      - product_streams\n      - product_variants\n      - product_versions\n      - products\n      - provides\n      - software_build\n      - sources\n      - tags\n      - type\n      - upstreams\n      - uuid\n      - version\n    ComponentDetail:\n      type: object\n      properties:\n        link:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        type:\n          $ref: '#/components/schemas/Type1b3Enum'\n        purl:\n          type: string\n          maxLength: 1024\n        name:\n          type: string\n        description:\n          type: string\n        related_url:\n          type: string\n          nullable: true\n          maxLength: 1024\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n          readOnly: true\n        version:\n          type: string\n          maxLength: 1024\n        release:\n          type: string\n          maxLength: 1024\n        arch:\n          type: string\n          maxLength: 1024\n        nvr:\n          type: string\n          maxLength: 1024\n        nevra:\n          type: string\n          maxLength: 1024\n        epoch:\n          type: string\n          readOnly: true\n        license:\n          type: string\n        license_list:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        software_build:\n          $ref: '#/components/schemas/SoftwareBuildSummary'\n        errata:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        products:\n          type: string\n          readOnly: true\n        product_versions:\n          type: string\n          readOnly: true\n        product_streams:\n          type: string\n          readOnly: true\n        product_variants:\n          type: string\n          readOnly: true\n        sources:\n          type: string\n          readOnly: true\n        provides:\n          type: string\n          readOnly: true\n        upstreams:\n          type: string\n          readOnly: true\n        meta_attr:\n          type: object\n          additionalProperties: {}\n      required:\n      - description\n      - epoch\n      - errata\n      - license_list\n      - link\n      - name\n      - product_streams\n      - product_variants\n      - product_versions\n      - products\n      - provides\n      - software_build\n      - sources\n      - tags\n      - type\n      - upstreams\n      - uuid\n      - version\n    ComponentList:\n      type: object\n      properties:\n        link:\n          type: string\n          readOnly: true\n        purl:\n          type: string\n          maxLength: 1024\n      required:\n      - link\n    PaginatedAppStreamLifeCycleList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppStreamLifeCycle'\n    PaginatedChannelList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Channel'\n    PaginatedComponentList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Component'\n    PaginatedProductList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Product'\n    PaginatedProductStreamList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductStream'\n    PaginatedProductVariantList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductVariant'\n    PaginatedProductVersionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductVersion'\n    PaginatedRelationList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Relation'\n    PaginatedSoftwareBuildList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SoftwareBuild'\n    Product:\n      type: object\n      properties:\n        link:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        ofuri:\n          type: string\n          maxLength: 1024\n        name:\n          type: string\n        description:\n          type: string\n        coverage:\n          type: string\n          readOnly: true\n        build_count:\n          type: string\n          readOnly: true\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n          readOnly: true\n        product_versions:\n          type: string\n          readOnly: true\n        product_streams:\n          type: string\n          readOnly: true\n        product_variants:\n          type: string\n          readOnly: true\n        errata:\n          type: string\n          readOnly: true\n        builds:\n          type: string\n          readOnly: true\n        channels:\n          type: array\n          items:\n            type: string\n            maxLength: 200\n        components:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentList'\n          readOnly: true\n        manifest:\n          type: string\n          readOnly: true\n        upstream:\n          type: string\n          readOnly: true\n        meta_attr:\n          type: object\n          additionalProperties: {}\n      required:\n      - build_count\n      - builds\n      - components\n      - coverage\n      - errata\n      - link\n      - manifest\n      - name\n      - product_streams\n      - product_variants\n      - product_versions\n      - tags\n      - upstream\n      - uuid\n    ProductStream:\n      type: object\n      properties:\n        link:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        ofuri:\n          type: string\n          maxLength: 1024\n        name:\n          type: string\n        cpe:\n          type: string\n          maxLength: 1000\n        description:\n          type: string\n        coverage:\n          type: string\n          readOnly: true\n        build_count:\n          type: string\n          readOnly: true\n        relations:\n          type: array\n          items:\n            type: object\n            additionalProperties:\n              type: string\n          readOnly: true\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n          readOnly: true\n        products:\n          type: string\n          readOnly: true\n        product_versions:\n          type: string\n          readOnly: true\n        product_variants:\n          type: string\n          readOnly: true\n        errata:\n          type: string\n          readOnly: true\n        builds:\n          type: string\n          readOnly: true\n        channels:\n          type: array\n          items:\n            type: string\n            maxLength: 200\n        components:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentList'\n          readOnly: true\n        manifest:\n          type: string\n          readOnly: true\n        upstream:\n          type: string\n          readOnly: true\n        meta_attr:\n          type: object\n          additionalProperties: {}\n      required:\n      - build_count\n      - builds\n      - components\n      - coverage\n      - errata\n      - link\n      - manifest\n      - name\n      - product_variants\n      - product_versions\n      - products\n      - relations\n      - tags\n      - upstream\n      - uuid\n    ProductVariant:\n      type: object\n      properties:\n        link:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        ofuri:\n          type: string\n          maxLength: 1024\n        name:\n          type: string\n        description:\n          type: string\n        build_count:\n          type: string\n          readOnly: true\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n          readOnly: true\n        relations:\n          type: array\n          items:\n            type: object\n            additionalProperties:\n              type: string\n          readOnly: true\n        products:\n          type: string\n          readOnly: true\n        product_versions:\n          type: string\n          readOnly: true\n        product_streams:\n          type: string\n          readOnly: true\n        errata:\n          type: string\n          readOnly: true\n        builds:\n          type: string\n          readOnly: true\n        channels:\n          type: array\n          items:\n            type: string\n            maxLength: 200\n        components:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentList'\n          readOnly: true\n        manifest:\n          type: string\n          readOnly: true\n        upstream:\n          type: string\n          readOnly: true\n        meta_attr:\n          type: object\n          additionalProperties: {}\n      required:\n      - build_count\n      - builds\n      - components\n      - errata\n      - link\n      - manifest\n      - name\n      - product_streams\n      - product_versions\n      - products\n      - relations\n      - tags\n      - upstream\n      - uuid\n    ProductVersion:\n      type: object\n      properties:\n        link:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        ofuri:\n          type: string\n          maxLength: 1024\n        name:\n          type: string\n        description:\n          type: string\n        coverage:\n          type: string\n          readOnly: true\n        build_count:\n          type: string\n          readOnly: true\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n          readOnly: true\n        products:\n          type: string\n          readOnly: true\n        product_streams:\n          type: string\n          readOnly: true\n        product_variants:\n          type: string\n          readOnly: true\n        errata:\n          type: string\n          readOnly: true\n        builds:\n          type: string\n          readOnly: true\n        channels:\n          type: array\n          items:\n            type: string\n            maxLength: 200\n        components:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentList'\n          readOnly: true\n        manifest:\n          type: string\n          readOnly: true\n        upstream:\n          type: string\n          readOnly: true\n        meta_attr:\n          type: object\n          additionalProperties: {}\n      required:\n      - build_count\n      - builds\n      - components\n      - coverage\n      - errata\n      - link\n      - manifest\n      - name\n      - product_streams\n      - product_variants\n      - products\n      - tags\n      - upstream\n      - uuid\n    Relation:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        last_changed:\n          type: string\n          format: date-time\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        type:\n          $ref: '#/components/schemas/RelationTypeEnum'\n        meta_attr:\n          type: object\n          additionalProperties: {}\n        external_system_id:\n          type: string\n          maxLength: 200\n        product_ref:\n          type: string\n          maxLength: 200\n        build_id:\n          type: string\n          maxLength: 200\n      required:\n      - created_at\n      - last_changed\n      - type\n      - uuid\n    RelationTypeEnum:\n      enum:\n      - ERRATA\n      - COMPOSE\n      type: string\n    SoftwareBuild:\n      type: object\n      properties:\n        link:\n          type: string\n          readOnly: true\n        build_id:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        type:\n          $ref: '#/components/schemas/TypeF2cEnum'\n        name:\n          type: string\n        source:\n          type: string\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        last_changed:\n          type: string\n          format: date-time\n          readOnly: true\n        components:\n          type: string\n          readOnly: true\n        meta_attr:\n          type: object\n          additionalProperties: {}\n      required:\n      - build_id\n      - components\n      - created_at\n      - last_changed\n      - link\n      - name\n      - source\n      - tags\n      - type\n    SoftwareBuildSummary:\n      type: object\n      properties:\n        link:\n          type: string\n          readOnly: true\n        build_id:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        type:\n          $ref: '#/components/schemas/TypeF2cEnum'\n        name:\n          type: string\n        source:\n          type: string\n      required:\n      - build_id\n      - link\n      - name\n      - source\n      - type\n    SourceEnum:\n      enum:\n      - default\n      - previous_release\n      - prp\n      - confirmed\n      - override\n      type: string\n    Tag:\n      type: object\n      properties:\n        name:\n          type: string\n          pattern: ^[-a-zA-Z0-9_]+$\n        value:\n          type: string\n          default: ''\n          maxLength: 1024\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created_at\n      - name\n    Type1b3Enum:\n      enum:\n      - CONTAINER_IMAGE\n      - GOLANG\n      - MAVEN\n      - NPM\n      - RHEL_MODULE\n      - RPM\n      - SRPM\n      - PYPI\n      - UNKNOWN\n      - UPSTREAM\n      type: string\n    TypeF2cEnum:\n      enum:\n      - BREW\n      - PNC\n      - KOJI\n      type: string\n",
			"canonicalURL": "/github.com/RedHatProductSecurity/component-registry@21ad6e95066b9824c979eb682758003933925942/-/blob/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/RedHatProductSecurity/component-registry/blob/21ad6e95066b9824c979eb682758003933925942/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/api/v1/components/{uuid}/tags\": post: requestBody: contents: application/x-www-form-urlencoded: form parameter \"tags\": nested objects not allowed"
}