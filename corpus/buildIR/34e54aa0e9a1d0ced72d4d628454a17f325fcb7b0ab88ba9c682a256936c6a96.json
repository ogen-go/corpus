{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/redhat-developer/app-services-sdk-java"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "packages/smartevents-management-sdk/api/openapi.yaml",
			"byteSize": 45471,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: openbridge-dev@redhat.com\n    name: Development Team\n  description: The API exposed by the fleet manager of the SmartEvents service.\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  title: Red Hat Openshift SmartEvents Fleet Manager\n  version: 0.0.1\nservers:\n- url: https://api.stage.openshift.com\n- url: http://localhost:8000\n- url: https://api.openshift.com\n- url: /\ntags:\n- description: The API that allow the user to retrieve, create or delete Bridge instances.\n  name: Bridges\n- description: List Supported Cloud Providers and Regions\n  name: Cloud Providers\n- description: List and get the error definitions from the error catalog.\n  name: Error Catalog\n- description: The API that allow the user to retrieve processing errors of a specific\n    bridge instance.\n  name: Processing Errors\n- description: The API that allow the user to retrieve, create or delete Processors\n    of a Bridge instance.\n  name: Processors\n- description: The API that provide the catalog of the available action/source processors\n    definition and their JSON schema.\n  name: Schema Catalog\npaths:\n  /api/smartevents_mgmt/v1/bridges:\n    get:\n      description: Get the list of Bridge instances for the authenticated user.\n      operationId: BridgesAPI_getBridges\n      parameters:\n      - explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 0\n          format: int32\n          minimum: 0\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          format: int32\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: status\n        required: false\n        schema:\n          items:\n            $ref: '#/components/schemas/ManagedResourceStatus'\n          type: array\n          uniqueItems: true\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BridgeListResponse'\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Unauthorized.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Forbidden.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Get the list of Bridge instances\n      tags:\n      - Bridges\n      x-accepts: application/json\n    post:\n      description: Create a Bridge instance for the authenticated user.\n      operationId: BridgesAPI_createBridge\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BridgeRequest'\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BridgeResponse'\n          description: Accepted.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Create a Bridge instance\n      tags:\n      - Bridges\n      x-contentType: application/json\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/bridges/{bridgeId}:\n    delete:\n      description: Delete a Bridge instance of the authenticated user by ID.\n      operationId: BridgesAPI_deleteBridge\n      parameters:\n      - explode: false\n        in: path\n        name: bridgeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"202\":\n          description: Accepted.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Delete a Bridge instance\n      tags:\n      - Bridges\n      x-accepts: application/json\n    get:\n      description: Get a Bridge instance of the authenticated user by ID.\n      operationId: BridgesAPI_getBridge\n      parameters:\n      - explode: false\n        in: path\n        name: bridgeId\n        required: true\n        schema:\n          minLength: 1\n          nullable: false\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BridgeResponse'\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Get a Bridge instance\n      tags:\n      - Bridges\n      x-accepts: application/json\n    put:\n      description: Update a Bridge instance for the authenticated user.\n      operationId: BridgesAPI_updateBridge\n      parameters:\n      - explode: false\n        in: path\n        name: bridgeId\n        required: true\n        schema:\n          minLength: 1\n          nullable: false\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BridgeRequest'\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BridgeResponse'\n          description: Accepted.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Unauthorized.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Forbidden.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Update a Bridge instance\n      tags:\n      - Bridges\n      x-contentType: application/json\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/bridges/{bridgeId}/processors:\n    get:\n      description: Get the list of Processors of a Bridge instance for the authenticated\n        user.\n      operationId: ProcessorsAPI_listProcessors\n      parameters:\n      - explode: false\n        in: path\n        name: bridgeId\n        required: true\n        schema:\n          minLength: 1\n          nullable: false\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 0\n          format: int32\n          minimum: 0\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          format: int32\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: status\n        required: false\n        schema:\n          items:\n            $ref: '#/components/schemas/ManagedResourceStatus'\n          type: array\n          uniqueItems: true\n        style: form\n      - explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          $ref: '#/components/schemas/ProcessorType'\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProcessorListResponse'\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Get the list of Processors of a Bridge instance\n      tags:\n      - Processors\n      x-accepts: application/json\n    post:\n      description: Create a Processor of a Bridge instance for the authenticated user.\n      operationId: ProcessorsAPI_addProcessorToBridge\n      parameters:\n      - explode: false\n        in: path\n        name: bridgeId\n        required: true\n        schema:\n          minLength: 1\n          nullable: false\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProcessorRequest'\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProcessorResponse'\n          description: Accepted.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Create a Processor of a Bridge instance\n      tags:\n      - Processors\n      x-contentType: application/json\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/bridges/{bridgeId}/processors/{processorId}:\n    delete:\n      description: Delete a Processor of a Bridge instance for the authenticated user.\n      operationId: ProcessorsAPI_deleteProcessor\n      parameters:\n      - explode: false\n        in: path\n        name: bridgeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: processorId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"202\":\n          description: Accepted.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Delete a Processor of a Bridge instance\n      tags:\n      - Processors\n      x-accepts: application/json\n    get:\n      description: Get a Processor of a Bridge instance for the authenticated user.\n      operationId: ProcessorsAPI_getProcessor\n      parameters:\n      - explode: false\n        in: path\n        name: bridgeId\n        required: true\n        schema:\n          minLength: 1\n          nullable: false\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: processorId\n        required: true\n        schema:\n          minLength: 1\n          nullable: false\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProcessorResponse'\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Get a Processor of a Bridge instance\n      tags:\n      - Processors\n      x-accepts: application/json\n    put:\n      description: Update a Processor instance Filter definition or Transformation\n        template for the authenticated user.\n      operationId: ProcessorsAPI_updateProcessor\n      parameters:\n      - explode: false\n        in: path\n        name: bridgeId\n        required: true\n        schema:\n          minLength: 1\n          nullable: false\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: processorId\n        required: true\n        schema:\n          minLength: 1\n          nullable: false\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProcessorRequest'\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProcessorResponse'\n          description: Accepted.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Update a Processor instance Filter definition or Transformation template.\n      tags:\n      - Processors\n      x-contentType: application/json\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/cloud_providers:\n    get:\n      description: Returns the list of supported Cloud Providers.\n      operationId: CloudProviderAPI_listCloudProviders\n      parameters:\n      - explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 0\n          format: int32\n          minimum: 0\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          format: int32\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudProviderListResponse'\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      summary: List Supported Cloud Providers.\n      tags:\n      - Cloud Providers\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/cloud_providers/{id}:\n    get:\n      description: Get details of the Cloud Provider specified by id.\n      operationId: CloudProviderAPI_getCloudProvider\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          minLength: 1\n          nullable: false\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudProviderListResponse'\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      summary: Get Cloud Provider.\n      tags:\n      - Cloud Providers\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/cloud_providers/{id}/regions:\n    get:\n      description: Returns the list of supported Regions of the specified Cloud Provider.\n      operationId: CloudProviderAPI_listCloudProviderRegions\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          minLength: 1\n          nullable: false\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 0\n          format: int32\n          minimum: 0\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          format: int32\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudRegionListResponse'\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      summary: List Supported Cloud Regions.\n      tags:\n      - Cloud Providers\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/errors:\n    get:\n      description: Get the list of errors from the error catalog.\n      operationId: ErrorsAPI_getErrors\n      parameters:\n      - explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 0\n          format: int32\n          minimum: 0\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          format: int32\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorListResponse'\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      summary: Get the list of errors.\n      tags:\n      - Error Catalog\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/errors/{id}:\n    get:\n      description: Get an error from the error catalog.\n      operationId: ErrorsAPI_getError\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BridgeError'\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      summary: Get an error from the error catalog.\n      tags:\n      - Error Catalog\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/schemas:\n    get:\n      description: Get the processor catalog with all the available sources and actions.\n      operationId: SchemaAPI_getCatalog\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProcessorCatalogResponse'\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Get processor catalog\n      tags:\n      - Schema Catalog\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/schemas/actions/{id}:\n    get:\n      description: Get the action processor JSON schema.\n      operationId: SchemaAPI_getActionProcessorSchema\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Get action processor schema\n      tags:\n      - Schema Catalog\n      x-accepts: application/json\n  /api/smartevents_mgmt/v1/schemas/sources/{id}:\n    get:\n      description: Get the source processor JSON schema.\n      operationId: SchemaAPI_getSourceProcessorSchema\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Success.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Bad request.\n        \"401\":\n          description: Unauthorized.\n        \"403\":\n          description: Forbidden.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorsList'\n          description: Internal error.\n      security:\n      - bearer: []\n      summary: Get source processor schema\n      tags:\n      - Schema Catalog\n      x-accepts: application/json\ncomponents:\n  schemas:\n    Action:\n      example:\n        type: type\n        parameters: '{}'\n      properties:\n        type:\n          nullable: false\n          type: string\n        parameters:\n          type: object\n      required:\n      - parameters\n      - type\n      type: object\n    BaseFilter:\n      example:\n        type: type\n        key: key\n      properties:\n        type:\n          type: string\n        key:\n          minLength: 1\n          nullable: false\n          type: string\n      required:\n      - key\n      type: object\n    BridgeError:\n      example:\n        reason: reason\n        code: code\n        id: 0\n      properties:\n        id:\n          format: int32\n          type: integer\n        code:\n          type: string\n        reason:\n          type: string\n        type:\n          $ref: '#/components/schemas/BridgeErrorType'\n      type: object\n    BridgeErrorInstance:\n      properties:\n        id:\n          format: int32\n          type: integer\n        code:\n          type: string\n        reason:\n          type: string\n        type:\n          $ref: '#/components/schemas/BridgeErrorType'\n        uuid:\n          type: string\n      type: object\n    BridgeErrorType:\n      enum:\n      - USER\n      - PLATFORM\n      type: string\n    BridgeListResponse:\n      example:\n        total: 1\n        size: 6\n        kind: kind\n        page: 0\n        items:\n        - owner: owner\n          status_message: status_message\n          error_handler:\n            type: type\n            parameters: '{}'\n          submitted_at: 2000-01-23T04:56:07.000+00:00\n          kind: kind\n          cloud_provider: cloud_provider\n          endpoint: endpoint\n          name: name\n          id: id\n          href: href\n          published_at: 2000-01-23T04:56:07.000+00:00\n          modified_at: 2000-01-23T04:56:07.000+00:00\n          region: region\n          status: \"\"\n        - owner: owner\n          status_message: status_message\n          error_handler:\n            type: type\n            parameters: '{}'\n          submitted_at: 2000-01-23T04:56:07.000+00:00\n          kind: kind\n          cloud_provider: cloud_provider\n          endpoint: endpoint\n          name: name\n          id: id\n          href: href\n          published_at: 2000-01-23T04:56:07.000+00:00\n          modified_at: 2000-01-23T04:56:07.000+00:00\n          region: region\n          status: \"\"\n      properties:\n        kind:\n          nullable: false\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/BridgeResponse'\n          type: array\n        page:\n          format: int64\n          nullable: false\n          type: integer\n        size:\n          format: int64\n          nullable: false\n          type: integer\n        total:\n          format: int64\n          nullable: false\n          type: integer\n      required:\n      - kind\n      - page\n      - size\n      - total\n      type: object\n    BridgeRequest:\n      example:\n        error_handler:\n          type: type\n          parameters: '{}'\n        name: name\n        cloud_provider: cloud_provider\n        region: region\n      properties:\n        name:\n          minLength: 1\n          nullable: false\n          type: string\n        error_handler:\n          $ref: '#/components/schemas/Action'\n        cloud_provider:\n          minLength: 1\n          nullable: false\n          type: string\n        region:\n          minLength: 1\n          nullable: false\n          type: string\n      required:\n      - cloud_provider\n      - name\n      - region\n      type: object\n    BridgeResponse:\n      example:\n        owner: owner\n        status_message: status_message\n        error_handler:\n          type: type\n          parameters: '{}'\n        submitted_at: 2000-01-23T04:56:07.000+00:00\n        kind: kind\n        cloud_provider: cloud_provider\n        endpoint: endpoint\n        name: name\n        id: id\n        href: href\n        published_at: 2000-01-23T04:56:07.000+00:00\n        modified_at: 2000-01-23T04:56:07.000+00:00\n        region: region\n        status: \"\"\n      properties:\n        kind:\n          nullable: false\n          type: string\n        id:\n          nullable: false\n          type: string\n        name:\n          type: string\n        href:\n          nullable: false\n          type: string\n        submitted_at:\n          format: date-time\n          nullable: false\n          type: string\n        published_at:\n          format: date-time\n          type: string\n        modified_at:\n          format: date-time\n          type: string\n        status:\n          allOf:\n          - $ref: '#/components/schemas/ManagedResourceStatus'\n          - nullable: false\n        owner:\n          nullable: false\n          type: string\n        endpoint:\n          type: string\n        error_handler:\n          $ref: '#/components/schemas/Action'\n        cloud_provider:\n          type: string\n        region:\n          type: string\n        status_message:\n          type: string\n      required:\n      - href\n      - id\n      - kind\n      - owner\n      - status\n      - submitted_at\n      type: object\n    CloudProviderListResponse:\n      example:\n        total: 1\n        size: 6\n        kind: kind\n        page: 0\n        items:\n        - kind: kind\n          name: name\n          id: id\n          href: href\n          display_name: display_name\n          enabled: true\n        - kind: kind\n          name: name\n          id: id\n          href: href\n          display_name: display_name\n          enabled: true\n      properties:\n        kind:\n          nullable: false\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/CloudProviderResponse'\n          type: array\n        page:\n          format: int64\n          nullable: false\n          type: integer\n        size:\n          format: int64\n          nullable: false\n          type: integer\n        total:\n          format: int64\n          nullable: false\n          type: integer\n      required:\n      - kind\n      - page\n      - size\n      - total\n      type: object\n    CloudProviderResponse:\n      example:\n        kind: kind\n        name: name\n        id: id\n        href: href\n        display_name: display_name\n        enabled: true\n      properties:\n        kind:\n          nullable: false\n          type: string\n        id:\n          nullable: false\n          type: string\n        name:\n          type: string\n        href:\n          nullable: false\n          type: string\n        display_name:\n          nullable: false\n          type: string\n        enabled:\n          nullable: false\n          type: boolean\n      required:\n      - display_name\n      - enabled\n      - href\n      - id\n      - kind\n      type: object\n    CloudRegionListResponse:\n      example:\n        total: 1\n        size: 6\n        kind: kind\n        page: 0\n        items:\n        - kind: kind\n          name: name\n          display_name: display_name\n          enabled: true\n        - kind: kind\n          name: name\n          display_name: display_name\n          enabled: true\n      properties:\n        kind:\n          nullable: false\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/CloudRegionResponse'\n          type: array\n        page:\n          format: int64\n          nullable: false\n          type: integer\n        size:\n          format: int64\n          nullable: false\n          type: integer\n        total:\n          format: int64\n          nullable: false\n          type: integer\n      required:\n      - kind\n      - page\n      - size\n      - total\n      type: object\n    CloudRegionResponse:\n      example:\n        kind: kind\n        name: name\n        display_name: display_name\n        enabled: true\n      properties:\n        kind:\n          nullable: false\n          type: string\n        name:\n          nullable: false\n          type: string\n        display_name:\n          nullable: false\n          type: string\n        enabled:\n          nullable: false\n          type: boolean\n      required:\n      - display_name\n      - enabled\n      - kind\n      - name\n      type: object\n    Error:\n      example:\n        reason: reason\n        code: code\n        kind: kind\n        name: name\n        id: id\n        href: href\n      properties:\n        kind:\n          nullable: false\n          type: string\n        name:\n          type: string\n        code:\n          type: string\n        reason:\n          nullable: false\n          type: string\n        id:\n          nullable: false\n          type: string\n        href:\n          nullable: false\n          type: string\n      required:\n      - href\n      - id\n      - kind\n      - reason\n      type: object\n    ErrorListResponse:\n      example:\n        total: 1\n        size: 6\n        kind: kind\n        page: 0\n        items:\n        - reason: reason\n          code: code\n          kind: kind\n          name: name\n          id: id\n          href: href\n        - reason: reason\n          code: code\n          kind: kind\n          name: name\n          id: id\n          href: href\n      properties:\n        kind:\n          nullable: false\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/Error'\n          type: array\n        page:\n          format: int64\n          nullable: false\n          type: integer\n        size:\n          format: int64\n          nullable: false\n          type: integer\n        total:\n          format: int64\n          nullable: false\n          type: integer\n      required:\n      - kind\n      - page\n      - size\n      - total\n      type: object\n    ErrorsList:\n      properties:\n        kind:\n          nullable: false\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/Error'\n          type: array\n      required:\n      - kind\n      type: object\n    List:\n      allOf:\n      - $ref: '#/components/schemas/ListResponse'\n      - $ref: '#/components/schemas/List_allOf'\n    ListResponse:\n      properties:\n        kind:\n          nullable: false\n          type: string\n        items:\n          items:\n            type: object\n          type: array\n      required:\n      - kind\n      type: object\n    ManagedResourceStatus:\n      enum:\n      - accepted\n      - preparing\n      - provisioning\n      - ready\n      - deprovision\n      - deleting\n      - deleted\n      - failed\n      type: string\n    ObjectReference:\n      properties:\n        kind:\n          nullable: false\n          type: string\n        id:\n          nullable: false\n          type: string\n        name:\n          type: string\n        href:\n          nullable: false\n          type: string\n      required:\n      - href\n      - id\n      - kind\n      type: object\n    ProcessingErrorListResponse:\n      properties:\n        kind:\n          nullable: false\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/ProcessingErrorResponse'\n          type: array\n        page:\n          format: int64\n          nullable: false\n          type: integer\n        size:\n          format: int64\n          nullable: false\n          type: integer\n        total:\n          format: int64\n          nullable: false\n          type: integer\n      required:\n      - kind\n      - page\n      - size\n      - total\n      type: object\n    ProcessingErrorResponse:\n      properties:\n        recorded_at:\n          format: date-time\n          type: string\n        headers:\n          additionalProperties:\n            type: string\n          type: object\n        payload:\n          type: object\n      type: object\n    ProcessorCatalogResponse:\n      example:\n        kind: kind\n        items:\n        - kind: kind\n          name: name\n          description: description\n          id: id\n          href: href\n          type: type\n        - kind: kind\n          name: name\n          description: description\n          id: id\n          href: href\n          type: type\n      properties:\n        kind:\n          nullable: false\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/ProcessorSchemaEntryResponse'\n          type: array\n      required:\n      - kind\n      type: object\n    ProcessorListResponse:\n      example:\n        total: 1\n        size: 6\n        kind: kind\n        page: 0\n        items:\n        - owner: owner\n          status_message: status_message\n          submitted_at: 2000-01-23T04:56:07.000+00:00\n          kind: kind\n          filters:\n          - type: type\n            key: key\n          - type: type\n            key: key\n          source:\n            type: type\n            parameters: '{}'\n          type: \"\"\n          name: name\n          action:\n            type: type\n            parameters: '{}'\n          id: id\n          href: href\n          published_at: 2000-01-23T04:56:07.000+00:00\n          modified_at: 2000-01-23T04:56:07.000+00:00\n          transformationTemplate: transformationTemplate\n          status: \"\"\n        - owner: owner\n          status_message: status_message\n          submitted_at: 2000-01-23T04:56:07.000+00:00\n          kind: kind\n          filters:\n          - type: type\n            key: key\n          - type: type\n            key: key\n          source:\n            type: type\n            parameters: '{}'\n          type: \"\"\n          name: name\n          action:\n            type: type\n            parameters: '{}'\n          id: id\n          href: href\n          published_at: 2000-01-23T04:56:07.000+00:00\n          modified_at: 2000-01-23T04:56:07.000+00:00\n          transformationTemplate: transformationTemplate\n          status: \"\"\n      properties:\n        kind:\n          nullable: false\n          type: string\n        items:\n          items:\n            $ref: '#/components/schemas/ProcessorResponse'\n          type: array\n        page:\n          format: int64\n          nullable: false\n          type: integer\n        size:\n          format: int64\n          nullable: false\n          type: integer\n        total:\n          format: int64\n          nullable: false\n          type: integer\n      required:\n      - kind\n      - page\n      - size\n      - total\n      type: object\n    ProcessorRequest:\n      example:\n        name: name\n        action:\n          type: type\n          parameters: '{}'\n        filters:\n        - type: type\n          key: key\n        - type: type\n          key: key\n        source:\n          type: type\n          parameters: '{}'\n        transformationTemplate: transformationTemplate\n      properties:\n        name:\n          minLength: 1\n          nullable: false\n          type: string\n        filters:\n          items:\n            $ref: '#/components/schemas/BaseFilter'\n          type: array\n          uniqueItems: true\n        transformationTemplate:\n          type: string\n        action:\n          $ref: '#/components/schemas/Action'\n        source:\n          $ref: '#/components/schemas/Source'\n      required:\n      - name\n      type: object\n    ProcessorResponse:\n      example:\n        owner: owner\n        status_message: status_message\n        submitted_at: 2000-01-23T04:56:07.000+00:00\n        kind: kind\n        filters:\n        - type: type\n          key: key\n        - type: type\n          key: key\n        source:\n          type: type\n          parameters: '{}'\n        type: \"\"\n        name: name\n        action:\n          type: type\n          parameters: '{}'\n        id: id\n        href: href\n        published_at: 2000-01-23T04:56:07.000+00:00\n        modified_at: 2000-01-23T04:56:07.000+00:00\n        transformationTemplate: transformationTemplate\n        status: \"\"\n      properties:\n        kind:\n          nullable: false\n          type: string\n        id:\n          nullable: false\n          type: string\n        name:\n          type: string\n        href:\n          nullable: false\n          type: string\n        submitted_at:\n          format: date-time\n          nullable: false\n          type: string\n        published_at:\n          format: date-time\n          type: string\n        modified_at:\n          format: date-time\n          type: string\n        status:\n          allOf:\n          - $ref: '#/components/schemas/ManagedResourceStatus'\n          - nullable: false\n        owner:\n          nullable: false\n          type: string\n        type:\n          allOf:\n          - $ref: '#/components/schemas/ProcessorType'\n          - nullable: false\n        filters:\n          items:\n            $ref: '#/components/schemas/BaseFilter'\n          type: array\n          uniqueItems: true\n        transformationTemplate:\n          type: string\n        action:\n          $ref: '#/components/schemas/Action'\n        source:\n          $ref: '#/components/schemas/Source'\n        status_message:\n          type: string\n      required:\n      - href\n      - id\n      - kind\n      - owner\n      - status\n      - submitted_at\n      - type\n      type: object\n    ProcessorSchemaEntryResponse:\n      example:\n        kind: kind\n        name: name\n        description: description\n        id: id\n        href: href\n        type: type\n      properties:\n        kind:\n          nullable: false\n          type: string\n        id:\n          nullable: false\n          type: string\n        name:\n          nullable: false\n          type: string\n        description:\n          nullable: false\n          type: string\n        type:\n          nullable: false\n          type: string\n        href:\n          nullable: false\n          type: string\n      required:\n      - description\n      - href\n      - id\n      - kind\n      - name\n      - type\n      type: object\n    ProcessorType:\n      enum:\n      - source\n      - sink\n      - error_handler\n      type: string\n    Source:\n      example:\n        type: type\n        parameters: '{}'\n      properties:\n        type:\n          nullable: false\n          type: string\n        parameters:\n          type: object\n      required:\n      - parameters\n      - type\n      type: object\n    List_allOf:\n      properties:\n        page:\n          format: int64\n          nullable: false\n          type: integer\n        size:\n          format: int64\n          nullable: false\n          type: integer\n        total:\n          format: int64\n          nullable: false\n          type: integer\n      required:\n      - page\n      - size\n      - total\n      type: object\n  securitySchemes:\n    bearer:\n      scheme: Bearer\n      type: http\n\n",
			"canonicalURL": "/github.com/redhat-developer/app-services-sdk-java@e1c2605fd3feec9e1832325acbb3b8af4c11195a/-/blob/packages/smartevents-management-sdk/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/redhat-developer/app-services-sdk-java/blob/e1c2605fd3feec9e1832325acbb3b8af4c11195a/packages/smartevents-management-sdk/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/api/smartevents_mgmt/v1/bridges\": get: responses: code 200: contents: media: \"application/json\": generate schema: field items: item: field status: allOf: schema type mismatch: string and "
}