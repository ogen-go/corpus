{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tyntec/api-collection"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "authentication/2fa/v1/openapi.yaml",
			"byteSize": 34605,
			"content": "openapi: 3.0.0\ninfo:\n  title: Authentication API\n  description: \u003e\n    Two-factor authentication (2FA) is an additional security layer for your business applications.\n\n    Traditional username/password approach is vulnerable, especially in today's environment where everything is online.\n\n    2FA aims to increase the security level of a standard password-only approach.\n  version: \"1.0\"\n  contact:\n    name: tyntec API Support\n    url: http://www.tyntec.com/support\n    email: support@tyntec.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  x-repository: https://github.com/tyntec/api-collection/blob/master/authentication/2fa\n  x-major-version: v1\nservers:\n  - url: https://api.tyntec.com\nsecurity:\n  - APIKeyHeader: []\ntags:\n  - name: 2FA Application Service\n    description: \u003e\n      Users can create multiple 2FA applications and configurations through the 2FA API.\n      tyntec stores these configurations so that users can select between own 2FA applications\n      and the corresponding linked configuration. Those configurations will be used\n      when delivering One-Time Passwords (OTP).\n\n      For each user, there is the default 2FA application which contains default values and the English language template.\n\n      This default application will be used in the case no 2FA application ID is specified in an OTP delivery request.\n\n      The default 2FA application is configurable and users can set own default parameters or a 2FA application.\n  - name: 2FA OTP Service\n    description: The OTP service is used for delivering and checking One Time Password\n      (OTP) codes to destination numbers.\npaths:\n  /2fa/v1/application:\n    get:\n      tags:\n        - 2FA Application Service\n      summary: List all applications\n      description: Returns a list of all applications that were created under your account.\n      operationId: getTwoFactorAuthApplicationsUsingGET\n      responses:\n        \"200\":\n          description: The list of applications\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/TwoFactorAuthApplicationEntity\"\n        \"204\":\n          description: Empty list. No applications were found for your account.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/TwoFactorAuthApplicationEntity\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    post:\n      tags:\n        - 2FA Application Service\n      summary: Create a 2FA application\n      description: |\n        Creates a 2FA application instance. You can either:\n\n          - use the target URI with a POST HTTP request or\n          - include the application parameters in your request body.\n\n        Values that are not defined will be populated with default values.\n      operationId: createTwoFactorAuthApplicationUsingPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TwoFactorAuthApplicationEntity\"\n        description: The application to be created\n      responses:\n        \"200\":\n          description: The new application was created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TwoFactorAuthApplicationEntity\"\n        \"400\":\n          description: Not valid configuration provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            Wrong PIN length:\n              examples:\n                response:\n                  value:\n                    message: PIN length should be between 4 to 10 digits.\n                    code: \"1006\"\n                    timestamp: 1498730218449\n            Wrong expiration time:\n              examples:\n                response:\n                  value:\n                    message: Expiration value should be between 30 and 7200.\n                    code: \"1008\"\n                    timestamp: 1498730687525\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/2fa/v1/application/{applicationId}\":\n    get:\n      tags:\n        - 2FA Application Service\n      summary: Read a 2FA application\n      description: Returns a 2FA application. You can get a specific application by using the GET HTTP method and the\n        application’s Universally Unique ID (UUID).\n      operationId: getTwoFactorAuthApplicationUsingGET\n      parameters:\n        - name: applicationId\n          in: path\n          description: Application ID to be returned\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The application is included in the response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TwoFactorAuthApplicationEntity\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: The ID is not valid for this application.\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    post:\n      tags:\n        - 2FA Application Service\n      summary: Edit a 2FA application\n      description: Define the parameters that you would like to change in a 2FA application.\n      operationId: updateTwoFactorAuthApplicationUsingPOST\n      parameters:\n        - name: applicationId\n          in: path\n          description: This parameter is a part of the URI following the pattern.\n            ${baseURL}/application/{applicationId}. You can specify \"default\" to\n            reference the default application.\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: This parameter represents the custom name for this application.\n            “default” is not allowed, since it is reserved as it maps to the\n            default application for this user.\n          required: false\n          schema:\n            type: string\n        - name: pinLength\n          in: query\n          description: The length of the auto-generated PIN length. PIN length can be\n            between 4-11 digits.\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: alphaNumeric\n          in: query\n          description: By default, this parameter is FALSE and the PIN is generated in\n            numeric values. In the case this parameter is TRUE, then the\n            auto-generated PIN will be a lowercase alphanumeric PIN.\n          required: false\n          schema:\n            type: boolean\n        - name: attempts\n          in: query\n          description: This parameter controls how many attempts the user is allowed to\n            have in order to validate a delivered OTP.\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: expire\n          in: query\n          description: This parameter controls the expiration time in seconds after the\n            first OTP delivery request.\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - name: sender\n          in: query\n          description: This parameter controls the sender name upon SMS delivery.\n          required: false\n          schema:\n            type: string\n        - name: caller\n          in: query\n          description: This parameter is used to define a number as caller for voice calls.\n            Adding this will improve the call success ratio, as some operators\n            filter anonymous calls.\n          required: false\n          schema:\n            type: string\n        - name: deleteCaller\n          in: query\n          description: This parameter is used to delete an already defined caller for voice\n            calls.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: The application is included in the response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TwoFactorAuthApplicationEntity\"\n        \"201\":\n          description: Created\n        \"400\":\n          description: Valid configuration was not provided.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: The ID is not valid for this application.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: Something went wrong. :-(\n    delete:\n      tags:\n        - 2FA Application Service\n      summary: Delete a 2FA application\n      description: \u003e\n        You can delete your application if needed by using the DELETE HTTP\n        method. Existing OTPs will still be valid but resend or verification of\n        an OTP will not be possible.\n\n\n        **Note:** You cannot delete the “default” application.\n      operationId: deleteTwoFactorAuthApplicationUsingDELETE\n      parameters:\n        - name: applicationId\n          in: path\n          description: ID of the application to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The application was deleted.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TwoFactorAuthApplicationEntity\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: The ID is not valid for this application.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: Something went wrong. :-(\n  \"/2fa/v1/application/{applicationId}/language\":\n    post:\n      tags:\n        - 2FA Application Service\n      summary: Add/Update a language template\n      description: You can add or edit a language template by referring to the application\n        UUID resource and the language you want to add or edit. If you specify\n        also the channel optional parameter, the specific template for this\n        delivery channel will be created.\n      operationId: saveLanguageTwoFactorAuthApplicationUsingPOST\n      parameters:\n        - name: applicationId\n          in: path\n          description: The applicationId of the application you would like to edit. This\n            parameter is part of the URI following the pattern\n            ${baseURL}/application/{applicationId}. You can specify \"default\" to\n            reference the default application.\n          required: true\n          schema:\n            type: string\n        - name: language\n          in: query\n          description: The language locale should be in the [ISO\n            639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n          required: true\n          schema:\n            type: string\n        - name: text\n          in: query\n          description: The text template for the specific language. Placeholder {{OTP}}\n            must exist at least once. {{SEC}} is an optional placeholder that\n            will replace the “expire” parameter for this application.\n          required: true\n          schema:\n            type: string\n        - name: channel\n          in: query\n          required: false\n          description: This optional parameter is set in the case you want to have different\n            template for the same language, depending on the delivery channel,\n            SMS or VOICE.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The application language template was saved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TwoFactorAuthApplicationEntity\"\n        \"201\":\n          description: Created\n        \"400\":\n          description: Wrong arguments were provided.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: The ID for this application is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    delete:\n      tags:\n        - 2FA Application Service\n      summary: Delete a language template\n      description: \u003e\n        You can delete a language template by referring to the application UUID\n        resource and the language you want to delete.\n\n        If you specify also the channel optional parameter, the specific template for this delivery channel will be deleted.\n      operationId: deleteLanguageTwoFactorAuthApplicationUsingDELETE\n      parameters:\n        - name: applicationId\n          in: path\n          description: This parameter is the applicationId of the application you would\n            like to edit and it is a part of the URI following the pattern\n            ${baseURL}/application/{applicationId}. You can specify \"default\" to\n            reference the default application.\n          required: true\n          schema:\n            type: string\n        - name: language\n          in: query\n          description: The language locale should be in [ISO\n            639-1](https://en.wikipedia.org/wiki/ISO_639-1) format\n          required: true\n          schema:\n            type: string\n        - name: channel\n          in: query\n          required: false\n          description: This optional parameter is set in the case you want to have different\n            template for the same language, depending on the delivery channel,\n            SMS or VOICE.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The language template was deleted.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TwoFactorAuthApplicationEntity\"\n        \"204\":\n          description: No Content\n        \"400\":\n          description: Wrong arguments were provided.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: The ID is not valid for this application, or the language does not exist.\n        \"500\":\n          description: Something went wrong. :-(\n  /2fa/v1/otp:\n    get:\n      tags:\n        - 2FA OTP Service\n      summary: List OTPs\n      description: You can query the event's endpoint of an OTP delivery instance to get a list\n        of events reported for this delivery.\n      operationId: getOtpsForNumberUsingGET\n      parameters:\n        - name: number\n          in: query\n          description: The destination telephone number in the [E.164](https://en.wikipedia.org/wiki/E.164) format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of OTPs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"204\":\n          description: Empty list. No OTPs were found for this account.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"400\":\n          description: Invalid number format was provided.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    post:\n      tags:\n        - 2FA OTP Service\n      summary: Send an OTP\n      description: Sends an OTP based on your application configuration. Modifies the request\n        based on the optional parameters.\n      operationId: sendOtpForNumberUsingPOST\n      parameters:\n        - name: number\n          in: query\n          description: The destination telephone number in\n            the [E.164](https://en.wikipedia.org/wiki/E.164) format\n          required: true\n          schema:\n            type: string\n        - name: applicationId\n          in: query\n          description: The UUID of the application you want to use. If not specified, the\n            default will be used.\n          required: false\n          schema:\n            type: string\n        - name: via\n          in: query\n          description: SMS/VOICE/AUTO; the channel to deliver the OTP to\n          required: false\n          schema:\n            type: string\n            default: AUTO\n        - name: country\n          in: query\n          description: \u003e\n            Optional; if you provided a number without a country code, it will be added\n            automatically.\n\n            If the country code is included but doesn't match the country specified, it will result in an error.\n          required: false\n          schema:\n            type: string\n        - name: language\n          in: query\n          description: The language template to be used in the [ISO\n            639-1](https://en.wikipedia.org/wiki/ISO_639-1) codes. If the\n            template is not specified, it will be auto-detected based on the number.\n            If a language template does not exist, it will default to English.\n          required: false\n          schema:\n            type: string\n        - name: text\n          in: query\n          description: Text to override the default template. Placeholder {{OTP}} must\n            exist for auto-generation of OTP, otherwise otpCode should be\n            specified.\n          required: false\n          schema:\n            type: string\n        - name: referenceId\n          in: query\n          description: Set your custom reference ID.\n          required: false\n          schema:\n            type: string\n        - name: otpCode\n          in: query\n          description: Override the auto-generated OTP code.\n          required: false\n          schema:\n            type: string\n        - name: sender\n          in: query\n          description: Override the applications sender.\n          required: false\n          schema:\n            type: string\n        - name: caller\n          in: query\n          description: Override the applications caller.\n          required: false\n          schema:\n            type: string\n        - name: pinLength\n          in: query\n          description: The length of the auto-generated PIN length. PIN length can be\n            between 4-11 digits.\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The result of the OTP with a unique ID\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OtpStatusEntity\"\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"201\":\n          description: Created\n        \"400\":\n          description: Invalid parameters provided. Look at the response for the specific\n            error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/2fa/v1/otp/{otpId}\":\n    get:\n      tags:\n        - 2FA OTP Service\n      summary: Read OTP status\n      description: Returns the status of an OTP.\n      operationId: getOtpStatusUsingGET\n      parameters:\n        - name: otpId\n          in: path\n          description: The OTP ID that the code should be re-sent to.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The OTP status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: OTP code was not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    post:\n      tags:\n        - 2FA OTP Service\n      summary: Re-send an OTP\n      description: \u003e\n        In the case the end user didn’t receive the OTP in a reasonable time frame,\n        you can use this operation to re-send the same OTP code.\n\n        The OTP code will be the same as the original one, but you have the option to choose a different delivery channel.\n      operationId: resendOtpStatusUsingPOST\n      parameters:\n        - name: otpId\n          in: path\n          description: The OTP ID that the code should be re-sent to\n          required: true\n          schema:\n            type: string\n        - name: via\n          in: query\n          description: You can force a delivery channel by using this parameter. Possible\n            values are AUTO, SMS, or VOICE. The default is “AUTO”, which will use\n            SMS in the case of a mobile number and VOICE in the case of a landline\n            number.\n          required: false\n          schema:\n            type: string\n            default: AUTO\n        - name: sender\n          in: query\n          description: In the case you want to override the sender set in the application's\n            configuration, you can specify a sender's name for this OTP delivery.\n          required: false\n          schema:\n            type: string\n        - name: caller\n          in: query\n          description: In the case you want to override the caller set in the application's\n            configuration, you can specify a caller's ID for this OTP delivery.\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OTP was re-sent\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"201\":\n          description: Created\n        \"400\":\n          description: The provided parameter is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: OTP is not valid anymore.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: OTP was not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    delete:\n      tags:\n        - 2FA OTP Service\n      summary: Delete an OTP\n      description: You can delete the status of an OTP by using this operation.\n      operationId: deleteOtpStatusUsingDELETE\n      parameters:\n        - name: otpId\n          in: path\n          description: The OTP ID that the code should be resent to\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OTP deleted\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: OTP was not found.\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/2fa/v1/otp/{otpId}/events\":\n    get:\n      tags:\n        - 2FA OTP Service\n      summary: List OTP events\n      operationId: getOtpEventsUsingGET\n      description: You can query the event's endpoint of an OTP delivery instance to get\n        a list of events reported for this delivery.\n      parameters:\n        - name: otpId\n          in: path\n          description: The OTP ID that the code should be re-sent to\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The OTP status\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/StatusEvent\"\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/StatusEvent\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: OTP code was not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/2fa/v1/otp/{otpId}/check\":\n    post:\n      tags:\n        - 2FA OTP Service\n      summary: Validate an OTP\n      description: \u003e\n        This operation will verify whether the OTP code used matched the OTP code\n        that was generated for this user.\n\n        To verify an OTP code, you need to provide:\n            1) the unique OTPId that refers the the OTP delivery request\n            2) the OTP code sent to the user\n      operationId: checkOtpUsingPOST\n      parameters:\n        - name: otpId\n          in: path\n          description: The OTP ID that the code should be re-sent to\n          required: true\n          schema:\n            type: string\n        - name: otpCode\n          in: query\n          description: otpCode\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"201\":\n          description: Created\n        \"202\":\n          description: The provided OTP is valid.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"401\":\n          description: The provided OTP code is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"403\":\n          description: OTP expired because of too many attempts made.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"404\":\n          description: OTP was not found.\n        \"410\":\n          description: OTP is not active anymore.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OtpStatusEntity\"\n        \"500\":\n          description: Something went wrong. :-(\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\ncomponents:\n  securitySchemes:\n    APIKeyHeader:\n      type: apiKey\n      in: header\n      name: apiKey\n  schemas:\n    OtpStatusEntity:\n      type: object\n      description: OTP Status schema\n      properties:\n        accountId:\n          description: This is your 2FA accountId in the tyntec system. You cannot change\n            this value.\n          type: string\n        applicationId:\n          description: The Universally Unique ID (UUID) that identifies the specific\n            application used to deliver this OTP\n          type: string\n        attemptCount:\n          description: The number of attempts made for this OTP to be validated\n          type: integer\n          format: int32\n        created:\n          description: The time in milliseconds in which the OTP request was created\n          type: integer\n          format: int64\n        expire:\n          description: The time in milliseconds in which the OTP will expire\n          type: integer\n          format: int64\n        number:\n          description: The destination phone number in\n            the [E.164](https://en.wikipedia.org/wiki/E.164) format\n          type: string\n        otpId:\n          description: The OTP ID that the code should be re-sent to\n          type: string\n        otpStatus:\n          description: \u003e\n            The OTP status. Possible values, ACTIVE, when the OTP is still\n            active; VERIFIED, when the OTP was verified successfully;\n\n            EXPIRED, when the OTP expired; TOO_MANY_ATTEMPTS, when the OTP validation requests exceeded the maximum allowed by the application configuration.\n          type: string\n        referenceId:\n          description: Set your custom reference ID.\n          type: string\n        timestampCreated:\n          description: The string timestamp “created” representation in UTC Z format\n          type: string\n        timestampExpire:\n          description: The string timestamp “expire” representation in UTC Z format\n          type: string\n    StatusEvent:\n      type: object\n      description: Status schema\n      properties:\n        created:\n          description: Timestamp in the [Epoch/Unix\n            time](https://en.wikipedia.org/wiki/Unix_time)\n          type: integer\n          format: int64\n        status:\n          description: Event status; possible values are success/failed/null.\n          type: string\n        statusText:\n          description: The status reported by the delivery system\n          type: string\n        timestampCreated:\n          description: The string timestamp “created” representation in UTC Z format\n          type: string\n        type:\n          description: Refer to the next table regarding all event types.\n          type: string\n    TwoFactorAuthApplicationEntity:\n      type: object\n      description: Two-Factor Authentication Application structure\n      properties:\n        alphanumeric:\n          type: boolean\n          example: false\n          description: Whether the OTP is alphanumeric or not\n        attempts:\n          type: integer\n          format: int32\n          example: 3\n          description: How many attempts the user can have for this OTP\n        expire:\n          type: integer\n          format: int64\n          example: 300\n          description: After how many seconds the OTP expires\n        name:\n          type: string\n          description: Custom application name\n        pinLength:\n          type: integer\n          format: int32\n          description: The length of the auto-generated PIN length. PIN length can be\n            between 4-11 digits.\n          example: 4\n        sender:\n          type: string\n          example: VERIFY\n          description: The sender used for SMS delivery\n        caller:\n          type: string\n          example: VERIFY\n          description: The caller used for TTS delivery. Using a valid number will improve\n            filtering issues caused by anonymous calls.\n    ErrorResponse:\n      type: object\n      description: Error Response schema\n      properties:\n        code:\n          description: The reason for an unsuccessful attempt\n          type: string\n        id:\n          description: Error code ID\n          type: string\n        message:\n          description: Textual representation of the code, containing further information\n          type: string\n        timestamp:\n          description: Timestamp in [Epoch/Unix\n            time](https://en.wikipedia.org/wiki/Unix_time)\n          type: integer\n          format: int64\n"
		}
	},
	"Error": "buildIR: make ir: path \"/2fa/v1/application\": post: responses: 400: contents: filter most specific: parse content type \"Wrong PIN length\": mime: expected slash after first token"
}