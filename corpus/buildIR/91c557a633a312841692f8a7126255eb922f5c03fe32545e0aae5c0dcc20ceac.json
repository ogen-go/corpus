{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jclingan/manning-kube-native-microservices"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "chapter12/account-service-external-openapi/src/main/resources/META-INF/openapi.yaml",
			"byteSize": 5824,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  title: Account Service (development)\n  description: \"Service for maintaining accounts, their balances, and issuing deposit\\\n    \\ and withdrawal transactions\"\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\ntags:\n- name: admin\n  description: Operations for managing accounts.\n- name: transactions\n  description: Operations manipulating account balances.\npaths:\n  /accounts:\n    get:\n      tags:\n      - admin\n      operationId: allAccounts\n      responses:\n        \"200\":\n          description: Retrieved all Accounts\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Account'\n    post:\n      tags:\n      - admin\n      description: Create a new bank account.\n      operationId: createAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Account'\n      responses:\n        \"201\":\n          description: Successfully created a new account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n        \"400\":\n          description: No account number was specified on the Account.\n          content:\n            application/json:\n              schema:\n                required:\n                - code\n                - exceptionType\n                type: object\n                properties:\n                  code:\n                    format: int32\n                    type: integer\n                    example: 400\n                  error:\n                    type: string\n                  exceptionType:\n                    type: string\n                    example: javax.ws.rs.WebApplicationException\n                example:\n                  exceptionType: javax.ws.rs.WebApplicationException\n                  code: 400\n                  error: No Account number specified.\n  /accounts/{accountNumber}:\n    get:\n      tags:\n      - admin\n      operationId: getAccount\n      parameters:\n      - name: accountNumber\n        in: path\n        description: Number of the Account instance to be retrieved.\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          description: Successfully retrieved an account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n        \"400\":\n          description: \"Account with id of {accountNumber} does not exist.\"\n          content:\n            application/json:\n              schema:\n                required:\n                - code\n                - exceptionType\n                type: object\n                properties:\n                  code:\n                    format: int32\n                    type: integer\n                    example: 400\n                  error:\n                    type: string\n                  exceptionType:\n                    type: string\n                    example: javax.ws.rs.WebApplicationException\n                example:\n                  exceptionType: javax.ws.rs.WebApplicationException\n                  code: 400\n                  error: Account with id of 12345678 does not exist.\n    delete:\n      tags:\n      - close-account\n      operationId: closeAccount\n      parameters:\n      - name: accountNumber\n        in: path\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          description: OK\n  /accounts/{accountNumber}/deposit:\n    put:\n      tags:\n      - transactions\n      operationId: deposit\n      parameters:\n      - name: accountNumber\n        in: path\n        description: Number of the Account to deposit into.\n        required: true\n        schema:\n          format: int64\n          type: integer\n      requestBody:\n        description: Amount to be deposited into the account.\n        content:\n          application/json:\n            schema:\n              minLength: 4\n              type: string\n            example: \"435.61\"\n        required: true\n      responses:\n        \"200\":\n          description: Successfully deposited funds to an account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n  /accounts/{accountNumber}/withdrawal:\n    put:\n      tags:\n      - transactions\n      operationId: withdrawal\n      parameters:\n      - name: accountNumber\n        in: path\n        required: true\n        schema:\n          format: int64\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\ncomponents:\n  schemas:\n    Account:\n      description: POJO representing an account.\n      required:\n      - accountNumber\n      - accountStatus\n      - balance\n      - customerNumber\n      type: object\n      properties:\n        accountNumber:\n          format: int64\n          minLength: 8\n          type: integer\n          example: 123456789\n        accountStatus:\n          allOf:\n          - $ref: '#/components/schemas/AccountStatus'\n          - example: OPEN\n        balance:\n          type: number\n          example: 438.32\n        customerName:\n          type: string\n          example: Steve Hanger\n        customerNumber:\n          format: int64\n          minLength: 6\n          type: integer\n          example: 432542374\n    AccountStatus:\n      enum:\n      - CLOSED\n      - OPEN\n      - OVERDRAWN\n      type: string\n",
			"canonicalURL": "/github.com/jclingan/manning-kube-native-microservices@a6da26ecd48fe44432cffc130568a695e0b84943/-/blob/chapter12/account-service-external-openapi/src/main/resources/META-INF/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/jclingan/manning-kube-native-microservices/blob/a6da26ecd48fe44432cffc130568a695e0b84943/chapter12/account-service-external-openapi/src/main/resources/META-INF/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/accounts\": get: responses: code 200: contents: application/json: generate schema: item: field accountStatus: allOf: schema type mismatch: string and "
}