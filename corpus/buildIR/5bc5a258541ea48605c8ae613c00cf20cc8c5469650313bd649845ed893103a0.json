{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ibutsu/ibutsu-server"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "backend/ibutsu_server/openapi/openapi.yaml",
			"byteSize": 95069,
			"content": "openapi: 3.0.0\ninfo:\n  description: A system to store and query test results\n  title: Ibutsu API\n  version: 2.4.2\nservers:\n  - url: /api\ntags:\n  - description: The result of a test\n    name: result\n  - description: An artifact generated during the running of a test\n    name: artifact\n  - description: A collection of test results\n    name: run\n  - description: A collection of test runs\n    name: project\n  - description: A group of projects\n    name: group\n  - description: A report\n    name: report\n  - description: A health report\n    name: health\n  - description: Widgets\n    name: widget\n  - description: Widget configuration\n    name: widget-config\n  - description: Celery task\n    name: task\n  - description: Login related methods\n    name: login\nsecurity:\n  - jwt: []\npaths:\n  /result:\n    get:\n      description: |\n        The `filter` parameter takes a list of filters to apply in the form of:\n\n            {name}{operator}{value}\n\n        where:\n\n          - `name` is any valid column in the database\n          - `operator` is one of `=`, `!`, `＞`, `＜`, `)`, `(`, `~`, `*`\n          - `value` is what you want to filter by\n\n        Operators are simple correspondents to MongoDB's query selectors:\n\n          - `=` becomes `$eq`\n          - `!` becomes `$ne`\n          - `＞` becomes `$gt`\n          - `＜` becomes `$lt`\n          - `)` becomes `$gte`\n          - `(` becomes `$lte`\n          - `~` becomes `$regex`\n          - `*` becomes `$in`\n          - `@` becomes `$exists`\n\n        Notes:\n\n        - For the `$exists` operator, \"true\", \"t\", \"yes\", \"y\" and `1` will all be considered true,\n          all other values are considered false.\n\n        Example queries:\n\n            /result?filter=metadata.run=63fe5\n            /result?filter=test_id~neg\n            /result?filter=result!passed\n      operationId: get_result_list\n      parameters:\n        - description: Fields to filter by\n          explode: true\n          in: query\n          name: filter\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: Return an estimated count\n          in: query\n          name: estimate\n          required: false\n          schema:\n            type: boolean\n          style: form\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultList'\n          description: successful operation\n        201:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Query being evaluated in a celery task\n      summary: Get the list of results.\n      tags:\n        - result\n      x-openapi-router-controller: ibutsu_server.controllers.result_controller\n    post:\n      operationId: add_result\n      requestBody:\n        $ref: '#/components/requestBodies/Result'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n          description: Created\n        400:\n          description: Bad request, JSON required or not enough parameters\n      summary: Create a test result\n      tags:\n        - result\n      x-openapi-router-controller: ibutsu_server.controllers.result_controller\n  /result/{id}:\n    get:\n      operationId: get_result\n      parameters:\n        - description: ID of result to return (uuid required)\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n          description: Result item\n        404:\n          description: Result not found\n      summary: Get a single result\n      tags:\n        - result\n      x-openapi-router-controller: ibutsu_server.controllers.result_controller\n    put:\n      operationId: update_result\n      parameters:\n        - description: ID of result to update\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/Result'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n          description: successful operation\n        400:\n          description: Bad reqest, JSON required or not enough parameters\n        404:\n          description: Result not found\n      summary: Updates a single result\n      tags:\n        - result\n      x-openapi-router-controller: ibutsu_server.controllers.result_controller\n  /artifact:\n    get:\n      operationId: get_artifact_list\n      parameters:\n        - description: The result ID to filter by\n          explode: true\n          in: query\n          name: resultId\n          required: false\n          schema:\n            type: string\n            format: uuid\n          style: form\n        - description: The run ID to filter by\n          explode: true\n          in: query\n          name: runId\n          required: false\n          schema:\n            type: string\n            format: uuid\n          style: form\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArtifactList'\n          description: Array of artifacts\n      summary: Get a (filtered) list of artifacts\n      tags:\n        - artifact\n      x-openapi-router-controller: ibutsu_server.controllers.artifact_controller\n    post:\n      operationId: upload_artifact\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                resultId:\n                  description: ID of result to attach artifact to\n                  type: string\n                  format: uuid\n                runId:\n                  description: ID of run to attach artifact to\n                  type: string\n                  format: uuid\n                filename:\n                  description: name of the file\n                  type: string\n                file:\n                  description: file to upload\n                  format: binary\n                  type: string\n                additionalMetadata:\n                  description: Additional data to pass to server\n                  type: object\n              required:\n                - file\n                - filename\n              type: object\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Artifact'\n          description: An artifact was created\n        400:\n          description: Bad request, not enough parameters\n      summary: Uploads a test run artifact\n      tags:\n        - artifact\n      x-openapi-router-controller: ibutsu_server.controllers.artifact_controller\n  /artifact/{id}:\n    delete:\n      operationId: delete_artifact\n      parameters:\n        - description: ID of artifact to delete\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          description: The artifact was deleted\n        404:\n          description: The artifact was not found\n      summary: Delete an artifact\n      tags:\n        - artifact\n      x-openapi-router-controller: ibutsu_server.controllers.artifact_controller\n    get:\n      operationId: get_artifact\n      parameters:\n        - description: ID of artifact to return\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Artifact'\n          description: Artifact object\n        404:\n          description: Artifact not found\n      summary: Get a single artifact\n      tags:\n        - artifact\n      x-openapi-router-controller: ibutsu_server.controllers.artifact_controller\n  /artifact/{id}/download:\n    get:\n      operationId: download_artifact\n      parameters:\n        - description: ID of artifact to return\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            text/plain:\n              schema:\n                format: binary\n                type: string\n            image/jpeg:\n              schema:\n                format: binary\n                type: string\n            image/png:\n              schema:\n                format: binary\n                type: string\n            image/gif:\n              schema:\n                format: binary\n                type: string\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: File contents\n        404:\n          description: Artifact not found\n      summary: Download an artifact\n      tags:\n        - artifact\n      x-openapi-router-controller: ibutsu_server.controllers.artifact_controller\n  /artifact/{id}/view:\n    get:\n      operationId: view_artifact\n      parameters:\n        - description: ID of artifact to return\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            text/plain:\n              schema:\n                format: binary\n                type: string\n            image/jpeg:\n              schema:\n                format: binary\n                type: string\n            image/png:\n              schema:\n                format: binary\n                type: string\n            image/gif:\n              schema:\n                format: binary\n                type: string\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: File contents\n        404:\n          description: Artifact not found\n      summary: Stream an artifact directly to the client/browser\n      tags:\n        - artifact\n      x-openapi-router-controller: ibutsu_server.controllers.artifact_controller\n  /run:\n    get:\n      description: |\n        The `filter` parameter takes a list of filters to apply in the form of:\n\n\n            {name}{operator}{value}\n\n\n        where:\n\n          - `name` is any valid column in the database\n          - `operator` is one of `=`, `!`, `＞`, `＜`, `)`, `(`, `~`, `*`\n          - `value` is what you want to filter by\n\n        Operators are simple correspondents to MongoDB's query selectors:\n\n          - `=` becomes `$eq`\n          - `!` becomes `$ne`\n          - `＞` becomes `$gt`\n          - `＜` becomes `$lt`\n          - `)` becomes `$gte`\n          - `(` becomes `$lte`\n          - `~` becomes `$regex`\n          - `*` becomes `$in`\n          - `@` becomes `$exists`\n\n        Notes:\n\n        - For the `$exists` operator, \"true\", \"t\", \"yes\", \"y\" and `1` will all be considered true,\n          all other values are considered false.\n\n        Example queries:\n\n            /run?filter=metadata.jenkins.job_name=jenkins_job\n            /run?filter=summary.failures\u003e0\n\n      operationId: get_run_list\n      parameters:\n        - description: Fields to filter by\n          explode: true\n          in: query\n          name: filter\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: Return an estimated count\n          in: query\n          name: estimate\n          required: false\n          schema:\n            type: boolean\n          style: form\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunList'\n          description: Array of Runs\n        201:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Query being evaluated in a celery task\n      summary: Get a list of the test runs\n      tags:\n        - run\n      x-openapi-router-controller: ibutsu_server.controllers.run_controller\n    post:\n      operationId: add_run\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Run'\n        description: Run item\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Run'\n          description: A Run was created\n        400:\n          description: Bad request, JSON required\n      summary: Create a run\n      tags:\n        - run\n      x-openapi-router-controller: ibutsu_server.controllers.run_controller\n  /runs/bulk-update:\n    post:\n      operationId: bulk_update\n      parameters:\n        - description: Fields to filter by\n          explode: true\n          in: query\n          name: filter\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - $ref: '#/components/parameters/PageSize'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRun'\n        description: The metadata to add to the test runs\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunList'\n          description: Updated Run\n        400:\n          description: Bad request, JSON required\n        401:\n          description: Bad request, can only update metadata\n        404:\n          description: Filter(s) returned no Runs\n        405:\n          description: Bad request, cannot update more than 25 runs at a time\n      summary: Update multiple runs with common metadata\n      tags:\n        - run\n      x-openapi-router-controller: ibutsu_server.controllers.run_controller\n  /run/{id}:\n    get:\n      operationId: get_run\n      parameters:\n        - description: ID of test run\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Run'\n          description: Run item\n        404:\n          description: Run not found\n      summary: Get a single run by ID (uuid required)\n      tags:\n        - run\n      x-openapi-router-controller: ibutsu_server.controllers.run_controller\n    put:\n      operationId: update_run\n      parameters:\n        - description: ID of the test run\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Run'\n        description: The updated test run\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Run'\n          description: Updated Run\n        400:\n          description: Bad request, JSON required\n        404:\n          description: Run not found\n      summary: Update a single run\n      tags:\n        - run\n      x-openapi-router-controller: ibutsu_server.controllers.run_controller\n  /project:\n    get:\n      operationId: get_project_list\n      parameters:\n        - description: Fields to filter by\n          explode: true\n          in: query\n          name: filter\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: Filter projects by owner ID\n          explode: true\n          in: query\n          name: ownerId\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: Filter projects by group ID\n          explode: true\n          in: query\n          name: groupId\n          required: false\n          schema:\n            type: string\n          style: form\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectList'\n          description: Array of projects\n      summary: Get a list of projects\n      tags:\n        - project\n      x-openapi-router-controller: ibutsu_server.controllers.project_controller\n    post:\n      operationId: add_project\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n        description: Project\n        required: true\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: A project was created\n        400:\n          description: Bad request, JSON required\n      summary: Create a project\n      tags:\n        - project\n      x-openapi-router-controller: ibutsu_server.controllers.project_controller\n  /project/{id}:\n    get:\n      operationId: get_project\n      parameters:\n        - description: ID of test project\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: Project object\n        404:\n          description: Project not found\n      summary: Get a single project by ID\n      tags:\n        - project\n      x-openapi-router-controller: ibutsu_server.controllers.project_controller\n    put:\n      operationId: update_project\n      parameters:\n        - description: ID of test project\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n        description: Project\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: Project object\n        400:\n          description: Bad request, JSON required or not enough parameters\n        404:\n          description: Project not found\n      summary: Update a project\n      tags:\n        - project\n      x-openapi-router-controller: ibutsu_server.controllers.project_controller\n  /group:\n    get:\n      operationId: get_group_list\n      parameters:\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupList'\n          description: A list of groups\n      summary: Get a list of groups\n      tags:\n        - group\n      x-openapi-router-controller: ibutsu_server.controllers.group_controller\n    post:\n      operationId: add_group\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        description: The group\n        required: true\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: Group created\n        400:\n          description: Bad request, probably not enough parameters\n      summary: Create a new group\n      tags:\n        - group\n      x-openapi-router-controller: ibutsu_server.controllers.group_controller\n  /group/{id}:\n    get:\n      operationId: get_group\n      parameters:\n        - description: The ID of the group\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: Group item\n        404:\n          description: Group not found\n      summary: Get a group\n      tags:\n        - group\n      x-openapi-router-controller: ibutsu_server.controllers.group_controller\n    put:\n      operationId: update_group\n      parameters:\n        - description: The ID of the group\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        description: The updated group\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: Group item\n        400:\n          description: Bad request, probably not enough parameters\n        404:\n          description: Group not found\n      summary: Update a group\n      tags:\n        - group\n      x-openapi-router-controller: ibutsu_server.controllers.group_controller\n  /dashboard:\n    get:\n      operationId: get_dashboard_list\n      parameters:\n        - description: Fields to filter by\n          explode: true\n          in: query\n          name: filter\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: Filter dashboards by project ID\n          explode: true\n          in: query\n          name: project_id\n          required: false\n          schema:\n            type: string\n          style: form\n        - description: Filter dashboards by user ID\n          explode: true\n          in: query\n          name: user_id\n          required: false\n          schema:\n            type: string\n          style: form\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DashboardList'\n          description: Array of dashboards\n      summary: Get a list of dashboards\n      tags:\n        - dashboard\n      x-openapi-router-controller: ibutsu_server.controllers.dashboard_controller\n    post:\n      operationId: add_dashboard\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dashboard'\n        description: Dashboard\n        required: true\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dashboard'\n          description: A dashboard was created\n        400:\n          description: Bad request, JSON required\n      summary: Create a dashboard\n      tags:\n        - dashboard\n      x-openapi-router-controller: ibutsu_server.controllers.dashboard_controller\n  /dashboard/{id}:\n    get:\n      operationId: get_dashboard\n      parameters:\n        - description: ID of test dashboard\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dashboard'\n          description: Dashboard object\n        404:\n          description: Dashboard not found\n      summary: Get a single dashboard by ID\n      tags:\n        - dashboard\n      x-openapi-router-controller: ibutsu_server.controllers.dashboard_controller\n    put:\n      operationId: update_dashboard\n      parameters:\n        - description: ID of test dashboard\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dashboard'\n        description: Dashboard\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dashboard'\n          description: Dashboard object\n        400:\n          description: Bad request, JSON required or not enough parameters\n        404:\n          description: Dashboard not found\n      summary: Update a dashboard\n      tags:\n        - dashboard\n      x-openapi-router-controller: ibutsu_server.controllers.dashboard_controller\n    delete:\n      operationId: delete_dashboard\n      parameters:\n        - description: ID of dashboard to delete\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          description: The dashboard was deleted\n        404:\n          description: The dashboard was not found\n      summary: Delete a dashboard\n      tags:\n        - dashboard\n      x-openapi-router-controller: ibutsu_server.controllers.dashboard_controller\n  /report:\n    get:\n      operationId: get_report_list\n      parameters:\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n        - description: Filter reports by project ID\n          explode: true\n          in: query\n          name: project\n          required: false\n          schema:\n            type: string\n          style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportList'\n          description: A list of reports\n      summary: Get a list of reports\n      tags:\n        - report\n      x-openapi-router-controller: ibutsu_server.controllers.report_controller\n    post:\n      operationId: add_report\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReportParameters'\n        description: The parameters for the report\n        required: true\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Report'\n          description: Report created\n        400:\n          description: Bad request, probably not enough parameters\n      summary: Create a new report\n      tags:\n        - report\n      x-openapi-router-controller: ibutsu_server.controllers.report_controller\n  /report/{id}:\n    get:\n      operationId: get_report\n      parameters:\n        - description: The ID of the report\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Report'\n          description: Report item\n        404:\n          description: Report not found\n      summary: Get a report\n      tags:\n        - report\n      x-openapi-router-controller: ibutsu_server.controllers.report_controller\n    delete:\n      operationId: delete_report\n      parameters:\n        - description: ID of report to delete\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          description: The report was deleted\n        404:\n          description: The report was not found\n      summary: Delete a report\n      tags:\n        - report\n      x-openapi-router-controller: ibutsu_server.controllers.report_controller\n  /report/{id}/view/{filename}:\n    get:\n      operationId: view_report\n      parameters:\n        - description: The ID of the report\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n        - description: The file name of the downloadable report\n          explode: false\n          in: path\n          name: filename\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        200:\n          content:\n            text/plain:\n              schema:\n                format: binary\n                type: string\n            application/csv:\n              schema:\n                format: binary\n                type: string\n            application/json:\n              schema:\n                format: binary\n                type: string\n            text/html:\n              schema:\n                format: binary\n                type: string\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: File contents\n        404:\n          description: Artifact not found\n      summary: View a report\n      tags:\n        - report\n      x-openapi-router-controller: ibutsu_server.controllers.report_controller\n  /report/{id}/download/{filename}:\n    get:\n      operationId: download_report\n      parameters:\n        - description: The ID of the report\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n        - description: The file name of the downloadable report\n          explode: false\n          in: path\n          name: filename\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        200:\n          content:\n            text/plain:\n              schema:\n                format: binary\n                type: string\n            application/csv:\n              schema:\n                format: binary\n                type: string\n            application/json:\n              schema:\n                format: binary\n                type: string\n            text/html:\n              schema:\n                format: binary\n                type: string\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: File contents\n        404:\n          description: Artifact not found\n      summary: Download a report\n      tags:\n        - report\n      x-openapi-router-controller: ibutsu_server.controllers.report_controller\n  /report/types:\n    get:\n      operationId: get_report_types\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    type:\n                      description: The machine-readable name of report type\n                      example: csv\n                      type: string\n                    name:\n                      description: The human-readable name of report type\n                      example: CSV\n                      type: string\n                  type: object\n                type: array\n          description: A list of types of reports available\n      summary: Get a list of report types\n      tags:\n        - report\n      x-openapi-router-controller: ibutsu_server.controllers.report_controller\n  /widget/{id}:\n    get:\n      operationId: get_widget\n      parameters:\n        - description: The widget identifier\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n        - description: The parameters for the widget\n          in: query\n          name: params\n          schema:\n            type: object\n          style: form\n          explode: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: The data returned for the widget\n        404:\n          description: No widget of this type exists\n      summary: Generate data for a dashboard widget\n      tags:\n        - widget\n      x-openapi-router-controller: ibutsu_server.controllers.widget_controller\n  /widget/types:\n    get:\n      description: A list of widget types\n      operationId: get_widget_types\n      parameters:\n        - description: Filter by type of widget\n          explode: true\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n          style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WidgetTypeList'\n          description: A list of types of widgets available\n      summary: Get a list of widget types\n      tags:\n        - widget\n      x-openapi-router-controller: ibutsu_server.controllers.widget_controller\n  /widget-config:\n    get:\n      description: A list of widget configurations\n      operationId: get_widget_config_list\n      parameters:\n        - description: Fields to filter by\n          explode: true\n          in: query\n          name: filter\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WidgetConfigList'\n          description: successful operation\n      summary: Get the list of widget configurations\n      tags:\n        - widget-config\n      x-openapi-router-controller: ibutsu_server.controllers.widget_config_controller\n    post:\n      operationId: add_widget_config\n      requestBody:\n        $ref: '#/components/requestBodies/WidgetConfig'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WidgetConfig'\n          description: Created\n        400:\n          description: Bad request, JSON required or not enough parameters\n      summary: Create a widget configuration\n      tags:\n        - widget-config\n      x-openapi-router-controller: ibutsu_server.controllers.widget_config_controller\n  /widget-config/{id}:\n    get:\n      operationId: get_widget_config\n      parameters:\n        - description: ID of widget config to return\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WidgetConfig'\n          description: WidgetConfig item\n        404:\n          description: WidgetConfig not found\n      summary: Get a single widget configuration\n      tags:\n      - widget-config\n      x-openapi-router-controller: ibutsu_server.controllers.widget_config_controller\n    put:\n      operationId: update_widget_config\n      parameters:\n        - description: ID of widget configuration to update\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/WidgetConfig'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WidgetConfig'\n          description: successful operation\n        400:\n          description: Bad reqest, JSON required or not enough parameters\n        404:\n          description: Widget configuration not found\n      summary: Updates a single widget configuration\n      tags:\n        - widget-config\n      x-openapi-router-controller: ibutsu_server.controllers.widget_config_controller\n    delete:\n      operationId: delete_widget_config\n      parameters:\n        - description: ID of widget configuration to delete\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          description: The widget configuration was deleted\n        404:\n          description: The widget configuration was not found\n      summary: Delete a widget configuration\n      tags:\n        - widget-config\n      x-openapi-router-controller: ibutsu_server.controllers.widget_config_controller\n  /health:\n    get:\n      operationId: get_health\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Health'\n          description: A health report\n      summary: Get a general health report\n      tags:\n        - health\n      x-openapi-router-controller: ibutsu_server.controllers.health_controller\n  /health/database:\n    get:\n      operationId: get_database_health\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Health'\n          description: A health report\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Health'\n          description: A health report with an error\n      summary: Get a health report for the database\n      tags:\n        - health\n      x-openapi-router-controller: ibutsu_server.controllers.health_controller\n  /health/info:\n    get:\n      operationId: get_health_info\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthInfo'\n          description: Some information about the server\n      summary: Get information about the server\n      tags:\n        - health\n      x-openapi-router-controller: ibutsu_server.controllers.health_controller\n  /import:\n    post:\n      operationId: add_import\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                importFile:\n                  description: The file to import\n                  format: binary\n                  type: string\n                project:\n                  description: The project associated with this import\n                  type: string\n                metadata:\n                  description: Additional metadata about imported run\n                  type: object\n                source:\n                  description: The source of this import\n                  type: string\n              required:\n                - importFile\n              type: object\n            encoding:\n              importFile:\n                contentType: application/octet-stream\n              metadata:\n                contentType: application/json\n              project:\n                contentType: text/plain\n              source:\n                contentType: text/plain\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Import'\n          description: The file has been queued for importing\n        400:\n          description: Bad Request\n        415:\n          description: Unsupported Media Type. This file cannot be imported\n      summary: Import a file into Ibutsu. This can be either a JUnit XML file, or an Ibutsu archive\n      tags:\n        - import\n      x-openapi-router-controller: ibutsu_server.controllers.import_controller\n  /import/{id}:\n    get:\n      operationId: get_import\n      parameters:\n        - description: The ID of the import\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Import'\n          description: The file has successfully been imported\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Import'\n          description: The file is currently being imported\n        404:\n          description: The import does not exist\n      summary: Get the status of an import\n      tags:\n        - import\n      x-openapi-router-controller: ibutsu_server.controllers.import_controller\n  /task/{id}:\n    get:\n      operationId: get_task\n      parameters:\n        - description: The ID of the task\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: The task has completed and the data has been returned\n        206:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: The task either doesn't exist or hasn't finished\n        203:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Error occurred in the task\n      summary: Get the status or result of a task\n      tags:\n        - task\n      x-openapi-router-controller: ibutsu_server.controllers.task_controller\n  /login:\n    post:\n      operationId: login\n      requestBody:\n        $ref: '#/components/requestBodies/Credentials'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginToken'\n          description: The user was authenticated\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginError'\n          description: There was an error when the user tried to log in\n      tags:\n        - login\n      security: []\n      x-openapi-router-controller: ibutsu_server.controllers.login_controller\n  /login/support:\n    get:\n      operationId: support\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginSupport'\n          description: A list of the login types supported by the backend\n      tags:\n        - login\n      security: []\n      x-openapi-router-controller: ibutsu_server.controllers.login_controller\n  /login/config/{provider}:\n    get:\n      operationId: config\n      parameters:\n        - description: The login provider's configuration\n          explode: false\n          in: path\n          name: provider\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginConfig'\n          description: A list of the login types supported by the backend\n      tags:\n        - login\n      security: []\n      x-openapi-router-controller: ibutsu_server.controllers.login_controller\n  /login/auth/{provider}:\n    get:\n      operationId: auth\n      parameters:\n        - description: The login provider's configuration\n          explode: false\n          in: path\n          name: provider\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        200:\n          description: Successful auth\n      tags:\n        - login\n      security: []\n      x-openapi-router-controller: ibutsu_server.controllers.login_controller\n  /login/register:\n    post:\n      operationId: register\n      requestBody:\n        $ref: '#/components/requestBodies/AccountRegistration'\n      responses:\n        201:\n          description: The user was registered\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginError'\n          description: There was an error when the user tried to log in\n      tags:\n        - login\n      security: []\n      x-openapi-router-controller: ibutsu_server.controllers.login_controller\n  /login/recover:\n    post:\n      operationId: recover\n      requestBody:\n        $ref: '#/components/requestBodies/AccountRecovery'\n      responses:\n        201:\n          description: An e-mail was sent to the user\n        400:\n          description: There was an error when the user tried to recover their account\n      tags:\n        - login\n      security: []\n      x-openapi-router-controller: ibutsu_server.controllers.login_controller\n  /login/reset-password:\n    post:\n      operationId: reset_password\n      requestBody:\n        $ref: '#/components/requestBodies/AccountReset'\n      responses:\n        201:\n          description: The user's password was reset\n        400:\n          description: There was an error when the user tried to reset their password\n      tags:\n        - login\n      security: []\n      x-openapi-router-controller: ibutsu_server.controllers.login_controller\n  /login/activate/{activation_code}:\n    get:\n      operationId: activate\n      parameters:\n        - description: The activation code\n          explode: false\n          in: path\n          name: activation_code\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        302:\n          description: Redirect the user to the login page\n        404:\n          description: The activation code was not found\n      tags:\n        - login\n      security: []\n      x-openapi-router-controller: ibutsu_server.controllers.login_controller\n  /user:\n    get:\n      operationId: get_current_user\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: The details of the logged in user\n        401:\n          description: The user needs to be logged in\n      summary: Return the user details for the current user\n      tags:\n        - user\n      x-openapi-router-controller: ibutsu_server.controllers.user_controller\n    put:\n      operationId: update_current_user\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: The details of the logged in user\n        401:\n          description: The user needs to be logged in\n      summary: Return the user details for the current user\n      tags:\n        - user\n      x-openapi-router-controller: ibutsu_server.controllers.user_controller\n  /user/token:\n    get:\n      operationId: get_token_list\n      parameters:\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenList'\n          description: The list of tokens for the logged in user\n        401:\n          description: The user needs to be logged in\n      summary: Return the tokens for the user\n      tags:\n        - user\n      x-openapi-router-controller: ibutsu_server.controllers.user_controller\n    post:\n      operationId: add_token\n      requestBody:\n        $ref: '#/components/requestBodies/CreateToken'\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n          description: The newly created token\n        401:\n          description: The user needs to be logged in\n      summary: Create a token for the current user\n      tags:\n        - user\n      x-openapi-router-controller: ibutsu_server.controllers.user_controller\n  /user/token/{id}:\n    get:\n      operationId: get_token\n      parameters:\n        - description: The id of a token\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n          description: A single token for the logged in user\n        401:\n          description: The user needs to be logged in\n      summary: Retrieve a single token for the current user\n      tags:\n        - user\n      x-openapi-router-controller: ibutsu_server.controllers.user_controller\n    delete:\n      operationId: delete_token\n      parameters:\n        - description: The id of a token\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        200:\n          description: The token was deleted\n        401:\n          description: The user needs to be logged in\n      summary: Delete the token\n      tags:\n        - user\n      x-openapi-router-controller: ibutsu_server.controllers.user_controller\n  /admin/user:\n    get:\n      operationId: admin_get_user_list\n      parameters:\n        - description: Fields to filter by\n          explode: true\n          in: query\n          name: filter\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserList'\n          description: Returns a list of users\n        401:\n          description: The user needs to be logged in\n        403:\n          description: The user needs to be a superadmin\n      tags:\n        - admin/user management\n      summary: Administration endpoint to return a list of users. Only accessible to superadmins.\n      x-openapi-router-controller: ibutsu_server.controllers.admin.user_controller\n    post:\n      operationId: admin_add_user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        description: A user\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: A user was created\n        400:\n          description: Bad request, JSON required\n        401:\n          description: The user needs to be logged in\n        403:\n          description: The user needs to be a superadmin\n      tags:\n        - admin/user management\n      summary: Administration endpoint to manually add a user. Only accessible to superadmins.\n      x-openapi-router-controller: ibutsu_server.controllers.admin.user_controller\n  /admin/user/{id}:\n    get:\n      operationId: admin_get_user\n      parameters:\n        - description: The id of a user\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Returns a user\n        401:\n          description: The querying user needs to be logged in\n        403:\n          description: The querying user needs to be a superadmin\n        404:\n          description: The requested user does not exist\n      tags:\n        - admin/user management\n      summary: Administration endpoint to return a user. Only accessible to superadmins.\n      x-openapi-router-controller: ibutsu_server.controllers.admin.user_controller\n    put:\n      operationId: admin_update_user\n      parameters:\n        - description: The ID of the user to update\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/requestBodies/User'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: successful operation\n        400:\n          description: Bad reqest, JSON required or not enough parameters\n        401:\n          description: The user needs to be logged in\n        403:\n          description: The user needs to be a superadmin\n        404:\n          description: User not found\n      summary: Administration endpoint to update a user. Only accessible to superadmins.\n      tags:\n        - admin/user management\n      x-openapi-router-controller: ibutsu_server.controllers.admin.user_controller\n    delete:\n      operationId: admin_delete_user\n      parameters:\n        - description: The ID of the user to delete\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          description: The specified user was deleted\n        401:\n          description: The user needs to be logged in\n        403:\n          description: The user needs to be a superadmin\n        404:\n          description: User not found\n      summary: Administration endpoint to delete a user. Only accessible to superadmins.\n      tags:\n        - admin/user management\n      x-openapi-router-controller: ibutsu_server.controllers.admin.user_controller\n  /admin/project:\n    get:\n      operationId: admin_get_project_list\n      parameters:\n        - description: Fields to filter by\n          explode: true\n          in: query\n          name: filter\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/PageSize'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectList'\n          description: Returns a list of projects\n        401:\n          description: The user needs to be logged in\n        403:\n          description: The user needs to be a superadmin\n      tags:\n        - admin/project management\n      summary: Administration endpoint to return a list of projects. Only accessible to superadmins.\n      x-openapi-router-controller: ibutsu_server.controllers.admin.project_controller\n    post:\n      operationId: admin_add_project\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n        description: A project\n      responses:\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: A project was created\n        400:\n          description: Bad request, JSON required\n        401:\n          description: The user needs to be logged in\n        403:\n          description: The user needs to be a superadmin\n      tags:\n        - admin/project management\n      summary: Administration endpoint to manually add a project. Only accessible to superadmins.\n      x-openapi-router-controller: ibutsu_server.controllers.admin.project_controller\n  /admin/project/{id}:\n    get:\n      operationId: admin_get_project\n      parameters:\n        - description: The id of a project\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: Returns a projects\n        401:\n          description: The user needs to be logged in\n        403:\n          description: The user needs to be a superadmin\n        404:\n          description: The project does not exist\n      tags:\n        - admin/project management\n      summary: Administration endpoint to return a project. Only accessible to superadmins.\n      x-openapi-router-controller: ibutsu_server.controllers.admin.project_controller\n    put:\n      operationId: admin_update_project\n      parameters:\n        - description: The ID of the project to update\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/Project'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: successful operation\n        400:\n          description: Bad reqest, JSON required or not enough parameters\n        401:\n          description: The user needs to be logged in\n        403:\n          description: The user needs to be a superadmin\n        404:\n          description: Project not found\n      summary: Administration endpoint to update a project. Only accessible to superadmins.\n      tags:\n        - admin/project management\n      x-openapi-router-controller: ibutsu_server.controllers.admin.project_controller\n    delete:\n      operationId: admin_delete_project\n      parameters:\n        - description: The ID of the project to delete\n          explode: false\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n          style: simple\n      responses:\n        200:\n          description: The specified project was deleted\n        401:\n          description: The user needs to be logged in\n        403:\n          description: The user needs to be a superadmin\n        404:\n          description: Project not found\n      summary: Administration endpoint to delete a project. Only accessible to superadmins.\n      tags:\n        - admin/project management\n      x-openapi-router-controller: ibutsu_server.controllers.admin.project_controller\ncomponents:\n  requestBodies:\n    Result:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Result'\n      description: Result item\n    ReportParameters:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ReportParameters'\n      description: Report parameters\n    WidgetConfig:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/WidgetConfig'\n      description: Widget configuration\n    Credentials:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Credentials'\n      description: A login object\n    AccountRegistration:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AccountRegistration'\n      description: A user registering their account\n    AccountRecovery:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AccountRecovery'\n      description: A user recovering their password\n    AccountReset:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AccountReset'\n      description: A user resetting their password\n    CreateToken:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateToken'\n      description: Create a token for a user\n    User:\n      content:\n        application/json:\n          schema:\n            example:\n              id: 81e2c9d6-1593-4559-af4f-90f6f1f8fa03\n              email: user@domain.com\n              name: Namey McNameface\n              is_superadmin: false\n              is_active: true\n              group_id: a16ad60e-bf23-4195-99dc-594858ad3e5e\n            properties:\n              id:\n                description: The ID of the user\n                example: 81e2c9d6-1593-4559-af4f-90f6f1f8fa03\n                type: string\n                format: uuid\n              email:\n                description: The user's e-mail address\n                example: user@domain.com\n                type: string\n                format: email\n              name:\n                description: The user's name\n                example: Namey McNameface\n                type: string\n                nullable: true\n              is_superadmin:\n                description: Flag to show if a user is a super-admin\n                example: false\n                type: boolean\n              is_active:\n                description: Flag to show if the user is active\n                example: true\n                type: boolean\n              group_id:\n                description: The ID of the group of this project\n                example: a16ad60e-bf23-4195-99dc-594858ad3e5e\n                type: string\n                format: uuid\n                nullable: true\n            required:\n              - email\n            type: object\n    Project:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Project'\n  schemas:\n    Result:\n      example:\n        id: a16ad60e-bf23-4195-99dc-594858ad3e5e\n        duration: 6.027456183070403\n        result: passed\n        project_id: 9212ac64-348f-4c1c-90f7-fd0a45bcb47c\n        component: login\n        env: qa\n        metadata:\n          jenkins:\n            build_number: 123\n            job_name: test-jenkins-job\n          project: 'insights-qe'\n          commit_hash: F4BA3E12\n        start_time: 2020-05-15T16:18:32.014053\n        source: source\n        params:\n          provider: vmware\n          ip_stack: ipv4\n        test_id: test_click_on_button\n      properties:\n        id:\n          description: Unique ID of the test result\n          example: a16ad60e-bf23-4195-99dc-594858ad3e5e\n          type: string\n          format: uuid\n        test_id:\n          description: Unique id\n          example: test_click_on_button\n          type: string\n        start_time:\n          description: Timestamp of starttime.\n          type: string\n        duration:\n          description: Duration of test in seconds.\n          type: number\n        result:\n          description: Status of result.\n          enum:\n          - passed\n          - failed\n          - error\n          - skipped\n          - xpassed\n          - xfailed\n          - manual\n          - blocked\n          type: string\n        component:\n          description: A component\n          example: login\n          type: string\n          nullable: true\n        env:\n          description: The environment which is being tested\n          example: qa\n          type: string\n          nullable: true\n        run_id:\n          description: The run this result is associated with\n          example: 64c2ab9e-cd64-4815-bf73-83b00c2e650f\n          type: string\n          nullable: true\n          format: uuid\n        project_id:\n          description: The project this run is associated with\n          example: 44941c55-9736-42f6-acce-ca3c4739d0f3\n          type: string\n          format: uuid\n          nullable: true\n        metadata:\n          example:\n            jenkins:\n              job_name: test-jenkins-job\n              build_number: 123\n            project: insights-qe\n            commit_hash: F4BA3E12\n          type: object\n        params:\n          example:\n            provider: vmware\n            ip_stack: ipv4\n          type: object\n        source:\n          description: Where the data came from (useful for filtering)\n          type: string\n      type: object\n    Run:\n      example:\n        id: 64c2ab9e-cd64-4815-bf73-83b00c2e650f\n        created: 2020-05-15T16:18:32.014053\n        duration: 540.05433\n        source: my-tests\n        start_time: 2020-05-15T16:18:32.014053\n        component: login\n        env: qa\n        summary:\n          errors: 1\n          failures: 3\n          skips: 0\n          xfailures: 0\n          xpasses: 1\n          tests: 548\n        metadata:\n          component: login\n          env: qa\n      properties:\n        id:\n          description: Unique ID of the test run\n          example: 64c2ab9e-cd64-4815-bf73-83b00c2e650f\n          type: string\n          format: uuid\n        created:\n          description: The time this record was created\n          example: 2020-05-15T16:18:32.014053\n          type: string\n        duration:\n          description: Duration of tests in seconds\n          example: 154.778524555\n          type: number\n        source:\n          description: A source for this test run\n          example: my-tests\n          type: string\n          nullable: true\n        start_time:\n          description: The time the test run started\n          example: 2020-05-15T16:18:32.014053\n          type: string\n        component:\n          description: A component\n          example: login\n          type: string\n          nullable: true\n        env:\n          description: The environment which is being tested\n          example: qa\n          type: string\n          nullable: true\n        project_id:\n          description: The project this run is associated with\n          example: 44941c55-9736-42f6-acce-ca3c4739d0f3\n          type: string\n          format: uuid\n          nullable: true\n        summary:\n          description: A summary of the test results\n          type: object\n        metadata:\n          description: Extra metadata for this run\n          type: object\n          nullable: true\n      type: object\n    UpdateRun:\n      example:\n        metadata:\n          annotations:\n            - name: deploymentAnnotation\n              value: Application was deployed at \u003ctimestamp\u003e\n              description: Optional description\n            - name: otherAnnotation\n              value: A different type of annotation\n              description: Optional description\n      properties:\n        metadata:\n          description: Extra data for this run\n          type: object\n      type: object\n    Artifact:\n      example:\n        filename: filename\n        result_id: a16ad60e-bf23-4195-99dc-594858ad3e5e\n        id: 22785097-a256-4aad-874b-9c204caba341\n        additional_metadata:\n          key: '{}'\n        upload_date: 2021-03-08T14:48:51+00:00\n      properties:\n        id:\n          description: Unique ID of the artifact\n          example: 22785097-a256-4aad-874b-9c204caba341\n          type: string\n          format: uuid\n        result_id:\n          description: ID of test result to attach artifact to\n          example: a16ad60e-bf23-4195-99dc-594858ad3e5e\n          type: string\n          format: uuid\n        run_id:\n          description: ID of test run to attach artifact to\n          example: 04af3d2a-55c5-4562-9ed6-3bf30ac6753e\n          type: string\n          format: uuid\n        filename:\n          description: name of the file\n          type: string\n        additional_metadata:\n          description: Additional data to pass to server\n          type: object\n        upload_date:\n          description: The date this artifact was uploaded\n          type: string\n      type: object\n    Project:\n      example:\n        id: 44941c55-9736-42f6-acce-ca3c4739d0f3\n        name: my-project\n        title: My Project\n        owner_id: 6b8b01ad-a17e-4ca1-8df5-fadb41439567\n        group_id: a16ad60e-bf23-4195-99dc-594858ad3e5e\n      properties:\n        id:\n          description: Unique ID of the project\n          example: 44941c55-9736-42f6-acce-ca3c4739d0f3\n          type: string\n          format: uuid\n        name:\n          description: The machine name of the project\n          example: my-project\n          type: string\n        title:\n          description: The human-readable title of the project\n          example: My project\n          type: string\n        owner_id:\n          description: The ID of the owner of this project\n          example: 6b8b01ad-a17e-4ca1-8df5-fadb41439567\n          type: string\n          format: uuid\n          nullable: true\n        group_id:\n          description: The ID of the group of this project\n          example: a16ad60e-bf23-4195-99dc-594858ad3e5e\n          type: string\n          format: uuid\n          nullable: true\n      type: object\n    Dashboard:\n      example:\n        id: 62faa4ce-d264-46c2-813e-579949c8ab9b\n        title: My Dashboard\n        description: A dashboard for me\n        filters: ''\n        project_id: 44941c55-9736-42f6-acce-ca3c4739d0f3\n        user_id: 90be2a4a-1a4d-4779-b40f-f08ccd7101d5\n      properties:\n        id:\n          description: Unique ID of the dashboard\n          example: 62faa4ce-d264-46c2-813e-579949c8ab9b\n          type: string\n          format: uuid\n        title:\n          description: The title of the dashboard\n          example: My Dashboard\n          type: string\n        description:\n          description: A basic description of the dashboard\n          example: A dashboard for me\n          type: string\n        filters:\n          description: An optional set of filters\n          example: ''\n          type: string\n        project_id:\n          description: The ID of the project this dashboard is associated with\n          example: 44941c55-9736-42f6-acce-ca3c4739d0f3\n          type: string\n          format: uuid\n        user_id:\n          description: The ID of a user this dashboard might be associated with\n          example: 90be2a4a-1a4d-4779-b40f-f08ccd7101d5\n          type: string\n          format: uuid\n      type: object\n    Group:\n      example:\n        id: a16ad60e-bf23-4195-99dc-594858ad3e5e\n        name: Example group\n      properties:\n        id:\n          description: Unique ID of the group\n          example: a16ad60e-bf23-4195-99dc-594858ad3e5e\n          type: string\n          format: uuid\n        name:\n          description: The name of the group\n          example: Group A\n          type: string\n      type: object\n    ReportParameters:\n      example:\n        type: dashboard\n        filter: test_navigation\n        source: iqe-jenkins\n      properties:\n        type:\n          description: The type of report to generate\n          example: dashboard\n          type: string\n        filter:\n          description: A regular expression to filter test results by\n          example: test_navigation\n          type: string\n        source:\n          description: The source of the test results\n          example: iqe-jenkins\n          type: string\n      required:\n        - type\n      type: object\n    Report:\n      example:\n        id: a9560d7d-dbe4-4a7f-8d09-dde6b5b137ae\n        filename: myreport.zip\n        mimetype: application/zip\n        url: http://ibutsu/reports/download/myreport.zip\n        download_url: http://ibutsu/reports/download/myreport.zip\n        view_url: http://ibutsu/reports/view/myreport.zip\n        parameters:\n          type: dashboard\n          filter: test_navigation\n          source: iqe-jenkins\n        status: done\n      properties:\n        id:\n          description: Unique ID of the report\n          example: a9560d7d-dbe4-4a7f-8d09-dde6b5b137ae\n          type: string\n          format: uuid\n        filename:\n          description: The filename of the report\n          example: myreport.zip\n          type: string\n        mimetype:\n          description: The mime type of the downloadable file\n          example: application/zip\n          type: string\n        url:\n          description: The URL to the downloadable report (deprecated)\n          example: http://ibutsu/reports/download/myreport.zip\n          type: string\n        download_url:\n          description: The URL to the downloadable report\n          example: http://ibutsu/reports/download/myreport.zip\n          type: string\n        view_url:\n          description: The URL to the viewable report\n          example: http://ibutsu/reports/view/myreport.html\n          type: string\n        parameters:\n          $ref: '#/components/schemas/ReportParameters'\n        status:\n          description: The status of the report, one of \"pending\", \"running\", \"done\"\n          example: done\n          type: string\n      type: object\n    Import:\n      example:\n        id: e56740ba-0dbb-43ac-a556-364eefbf1f62\n        status: done\n        filename: test-run.xml\n        format: JUnit\n        run_id: 64c2ab9e-cd64-4815-bf73-83b00c2e650f\n      properties:\n        id:\n          description: The database ID of the import\n          example: e56740ba-0dbb-43ac-a556-364eefbf1f62\n          type: string\n          format: uuid\n        status:\n          description: The current status of the import, can be one of \"pending\", \"running\", \"done\"\n          example: done\n          type: string\n        filename:\n          description: The name of the file that was uploaded\n          example: test-run.xml\n          type: string\n        format:\n          description: The format of the file uploaded\n          example: JUnit\n          type: string\n        run_id:\n          description: The ID of the run from the import\n          example: 64c2ab9e-cd64-4815-bf73-83b00c2e650f\n          type: string\n          format: uuid\n      type: object\n    WidgetConfig:\n      example:\n        id: afbcf5c7-1ffd-4367-b228-5a868c29e0ef\n        type: widget\n        widget: jenkins-heatmap\n        project_id: 44941c55-9736-42f6-acce-ca3c4739d0f3\n        weight: 0\n        params:\n          job_name: integration_tests\n          builds: 5\n          group_field: metadata.component\n          sort_field: starttime\n        title: Jenkins Pipeline Health\n      properties:\n        id:\n          description: The internal ID of the WidgetConfig\n          example: afbcf5c7-1ffd-4367-b228-5a868c29e0ef\n          type: string\n          format: uuid\n        type:\n          description: The type of widget, one of either \"widget\" or \"view\"\n          example: widget\n          type: string\n        widget:\n          description: The widget to render, from the list at /widget/types\n          example: jenkins-heatmap\n          type: string\n        project_id:\n          description: The project ID for which the widget is designed\n          example: 44941c55-9736-42f6-acce-ca3c4739d0f3\n          type: string\n          format: uuid\n        weight:\n          description: The weighting for the widget, lower weight means it will display first\n          example: 0\n          type: integer\n        params:\n          description: A dictionary of parameters to send to the widget\n          example:\n            job_name: integration_tests\n            builds: 5\n            group_field: metadata.component\n            sort_field: starttime\n          type: object\n        title:\n          description: The title shown on the widget or page\n          example: Job Health\n          type: string\n      type: object\n    WidgetParam:\n      example:\n        name: job_name\n        description: The Jenkins job name\n        type: string\n      properties:\n        name:\n          description: The name of the parameter to supply to the widget\n          example: job_name\n          type: string\n        description:\n          description: A friendly description of the parameter\n          example: The Jenkins job name\n          type: string\n        type:\n          description: The type of parameter (string, integer, etc)\n          example: string\n          type: string\n      type: object\n    WidgetType:\n      example:\n        id: jenkins-heatmap\n        title: Jenkins Pipeline Heatmap\n        description: A heatmap of test runs and trends from a Jenkins pipeline\n        params:\n          - name: job_name\n            description: The Jenkins job name\n            type: string\n          - name: builds\n            description: The number of Jenkins builds to analyze\n            type: integer\n          - name: group_field\n            description: The field in a result to group by\n            type: string\n          - name: sort_field\n            description: The field to sort results by\n            type: string\n        type: widget\n      properties:\n        id:\n          description: A unique identifier for this widget type\n          example: heatmap\n          type: string\n        title:\n          description: The title of the widget, for users to see\n          example: Heatmap\n          type: string\n        description:\n          description: A helpful description of this widget type\n          example: A heatmap of runs and trends\n          type: string\n        params:\n          description: A dictionary or map of parameters to values\n          example:\n            - name: job_name\n              description: The Jenkins job name\n              type: string\n            - name: builds\n              description: The number of Jenkins builds to analyze\n              type: integer\n            - name: group_field\n              description: The field in a result to group by\n              type: string\n            - name: sort_field\n              description: The field to sort results by\n              type: string\n          items:\n            $ref: '#/components/schemas/WidgetParam'\n          type: array\n        type:\n          description: The type of widget (widget, view)\n          example: widget\n          type: string\n      type: object\n    Health:\n      example:\n        status: \"OK\"\n        message: \"Service is running\"\n      properties:\n        status:\n          description: The status of the database, one of \"OK\", \"Error\", \"Pending\"\n          example: \"Error\"\n          type: string\n        message:\n          description: A message to explain the current status\n          example: \"Cannot connect to database\"\n          type: string\n      type: object\n    HealthInfo:\n      example:\n        frontend: \"http://localhost:3000\"\n        backend: \"http://localhost:8080\"\n        api_url: \"http://localhost:8080/api\"\n      properties:\n        frontend:\n          description: The URL of the frontend\n          example: http://localhost:3000\n          type: string\n        backend:\n          description: The URL of the backend\n          example: http://localhost:8080\n          type: string\n        api_ui:\n          description: The URL to the UI for the API\n          example: http://localhost:8080/api/ui/\n          type: string\n      type: object\n    LoginToken:\n      example:\n        token: eyJhbGciOiJIUzI1NiJ9.SGVsbG8sIHdvcmxkIQ.onO9Ihudz3WkiauDO2Uhyuz0Y18UASXlSc1eS0NkWyA\n      properties:\n        token:\n          description: The JWT token returned from a successful login\n          example: eyJhbGciOiJIUzI1NiJ9.SGVsbG8sIHdvcmxkIQ.onO9Ihudz3WkiauDO2Uhyuz0Y18UASXlSc1eS0NkWyA\n          type: string\n      type: object\n    LoginError:\n      example:\n        code: ERR01\n        message: Username or password was invalid\n      properties:\n        code:\n          description: An error code generated by the server\n          example: ERR01\n          type: string\n        message:\n          description: The error message that corresponds with the error code\n          example: Username or password was invalid\n          type: string\n      type: object\n    LoginSupport:\n      example:\n        user: true\n        keycloak: true\n        google: false\n        github: true\n        facebook: false\n        gitlab: true\n      properties:\n        user:\n          description: Flag to see if email/password login is available\n          example: true\n          type: boolean\n        keycloak:\n          description: Flag to see if Keycloak login is available\n          example: true\n          type: boolean\n        google:\n          description: Flag to see if Google login is available\n          example: true\n          type: boolean\n        github:\n          description: Flag to see if GitHub login is available\n          example: true\n          type: boolean\n        facebook:\n          description: Flag to see if Facebook login is available\n          example: true\n          type: boolean\n        gitlab:\n          description: Flag to see if GitLab login is available\n          example: true\n          type: boolean\n      type: object\n    LoginConfig:\n      example:\n        client_id: ff542f48922114019fc5befd0fa0e107b494c365fa4f8af09f3fcb2eb6dc0f77\n        redirect_uri: /api/login/oauth\n        scope: read:user\n      properties:\n        client_id:\n          description: The client ID for the provider\n          example: ff542f48922114019fc5befd0fa0e107b494c365fa4f8af09f3fcb2eb6dc0f77\n          type: string\n        redirect_uri:\n          description: The redirect URI for the provider to call back\n          example: /api/login/oauth\n          type: string\n        scope:\n          description: The OAuth2 permission scope\n          example: read:user\n          type: string\n      type: object\n    Credentials:\n      example:\n        email: me@example.com\n        password: mysupersecretpassword\n      properties:\n        email:\n          description: The e-mail address of the user\n          example: me@example.com\n          type: string\n          format: email\n        password:\n          description: The password for the user\n          example: mysupersecretpassword\n          type: string\n      required:\n        - email\n        - password\n      type: object\n    AccountRegistration:\n      example:\n        email: user@domain.com\n        password: supersecretpassword\n      properties:\n        email:\n          description: The user's e-mail address\n          example: user@domain.com\n          type: string\n          format: email\n        password:\n          description: The user's password\n          example: supersecretpassword\n          type: string\n      required:\n        - email\n        - password\n      type: object\n    AccountRecovery:\n      example:\n        email: user@domain.com\n      properties:\n        email:\n          description: The user's e-mail address\n          example: user@domain.com\n          type: string\n          format: email\n      required:\n        - email\n      type: object\n    AccountReset:\n      example:\n        activation_code: YjdmYWFkMTItNzkxZC00MjE4LTgwZGItOWFlOWM2Y2RhOTM5\n        password: supersecretpassword\n      properties:\n        activation_code:\n          description: The activation code generated by Ibutsu\n          example: YjdmYWFkMTItNzkxZC00MjE4LTgwZGItOWFlOWM2Y2RhOTM5\n          type: string\n        password:\n          description: The user's password\n          example: supersecretpassword\n          type: string\n      required:\n        - activation_code\n        - password\n      type: object\n    User:\n      example:\n        id: 81e2c9d6-1593-4559-af4f-90f6f1f8fa03\n        email: user@domain.com\n        name: Namey McNameface\n        is_superadmin: false\n        is_active: true\n        group_id: a16ad60e-bf23-4195-99dc-594858ad3e5e\n      properties:\n        id:\n          description: The ID of the user\n          example: 81e2c9d6-1593-4559-af4f-90f6f1f8fa03\n          type: string\n          format: uuid\n        email:\n          description: The user's e-mail address\n          example: user@domain.com\n          type: string\n          format: email\n        name:\n          description: The user's name\n          example: Namey McNameface\n          type: string\n          nullable: true\n        is_superadmin:\n          description: Flag to show if a user is a super-admin\n          example: false\n          type: boolean\n        is_active:\n          description: Flag to show if the user is active\n          example: true\n          type: boolean\n        group_id:\n          description: The ID of the group of this project\n          example: a16ad60e-bf23-4195-99dc-594858ad3e5e\n          type: string\n          format: uuid\n          nullable: true\n      required:\n        - email\n      type: object\n    CreateToken:\n      example:\n        name: My user token\n        expires: 2038-12-31T23:59:59+0000\n      properties:\n        name:\n          description: The name given to this token\n          example: My user token\n          type: string\n        expires:\n          description: The date and time when this token expires\n          example: 2038-12-31T23:59:59+0000\n          type: string\n          nullable: true\n      required:\n        - name\n        - expires\n      type: object\n    Token:\n      example:\n        id: e2772010-bc06-47ed-8b6b-767ab87427cc\n        user_id: 81e2c9d6-1593-4559-af4f-90f6f1f8fa03\n        name: My user token\n        expires: 2038-12-31T23:59:59+0000\n        token: 64ad787a-5aa8-48fa-842e-6e3b9631308a\n      properties:\n        id:\n          description: The ID of the token\n          example: e2772010-bc06-47ed-8b6b-767ab87427cc\n          type: string\n          format: uuid\n        user_id:\n          description: The ID of the user that owns this token\n          example: 81e2c9d6-1593-4559-af4f-90f6f1f8fa03\n          type: string\n          format: uuid\n        name:\n          description: The name given to this token\n          example: My user token\n          type: string\n        expires:\n          description: The date and time when this token expires\n          example: 2038-12-31T23:59:59+0000\n          type: string\n          nullable: true\n        token:\n          description: The token itself\n          example: 64ad787a-5aa8-48fa-842e-6e3b9631308a\n          type: string\n      required:\n        - id\n        - user_id\n        - name\n        - token\n      type: object\n    Pagination:\n      example:\n        page: 2\n        pageSize: 25\n        totalPages: 10\n        totalItems: 243\n      properties:\n        page:\n          description: The current page number\n          example: 2\n          type: integer\n        pageSize:\n          description: The number of items per page\n          example: 25\n          type: integer\n        totalPages:\n          description: The total number of pages\n          example: 10\n          type: integer\n        totalItems:\n          description: The total number of items for this query\n          example: 243\n          type: integer\n      type: object\n    ResultList:\n      example:\n        results:\n        - duration: 6.027456183070403\n          result: passed\n          metadata:\n            jenkins_build: 145\n            commit_hash: F4BA3E12\n          starttime: 0.8008281904610115\n          source: source\n          params:\n            provider: vmware\n            ip_stack: ipv4\n          test_id: test_id\n        pagination:\n          page: 2\n          pageSize: 25\n          totalPages: 10\n          totalItems: 243\n      properties:\n        results:\n          items:\n            $ref: '#/components/schemas/Result'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    RunList:\n      example:\n        runs:\n        - id: 64c2ab9e-cd64-4815-bf73-83b00c2e650f\n          duration: 540.05433\n          summary:\n            errors: 1\n            failures: 3\n            skips: 0\n            xfailures: 0\n            xpasses: 1\n            tests: 548\n        pagination:\n          page: 2\n          pageSize: 25\n          totalPages: 10\n          totalItems: 243\n      properties:\n        runs:\n          items:\n            $ref: '#/components/schemas/Run'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    ArtifactList:\n      example:\n        artifacts:\n        - filename: filename\n          resultId: a16ad60e-bf23-4195-99dc-594858ad3e5e\n          id: 22785097-a256-4aad-874b-9c204caba341\n          upload_date: 2021-03-08T14:48:51+00:00\n          additional_metadata:\n            key: '{}'\n        pagination:\n          page: 2\n          pageSize: 25\n          totalPages: 10\n          totalItems: 243\n      properties:\n        artifacts:\n          items:\n            $ref: '#/components/schemas/Artifact'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    ProjectList:\n      example:\n        projects:\n        - id: 44941c55-9736-42f6-acce-ca3c4739d0f3\n          name: My Project\n          ownerId: 6b8b01ad-a17e-4ca1-8df5-fadb41439567\n          groupId: a16ad60e-bf23-4195-99dc-594858ad3e5e\n        pagination:\n          page: 2\n          pageSize: 25\n          totalPages: 10\n          totalItems: 243\n      properties:\n        projects:\n          items:\n            $ref: '#/components/schemas/Project'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    DashboardList:\n      example:\n        dashboards:\n        - id: 62faa4ce-d264-46c2-813e-579949c8ab9b\n          title: My Dashboard\n          description: A dashboard for me\n          filters: ''\n          project_id: 44941c55-9736-42f6-acce-ca3c4739d0f3\n          user_id: 90be2a4a-1a4d-4779-b40f-f08ccd7101d5\n        pagination:\n          page: 2\n          pageSize: 25\n          totalPages: 10\n          totalItems: 243\n      properties:\n        dashboards:\n          items:\n            $ref: '#/components/schemas/Dashboard'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    GroupList:\n      example:\n        groups:\n        - id: a16ad60e-bf23-4195-99dc-594858ad3e5e\n          name: Example group\n        pagination:\n          page: 2\n          pageSize: 25\n          totalPages: 10\n          totalItems: 243\n      properties:\n        groups:\n          items:\n            $ref: '#/components/schemas/Group'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    ReportList:\n      example:\n        reports:\n        - id: a9560d7d-dbe4-4a7f-8d09-dde6b5b137ae\n          filename: myreport.zip\n          mimetype: application/zip\n          url: http://ibutsu/reports/download/myreport.zip\n          parameters:\n            type: dashboard\n            filter: test_navigation\n            source: iqe-jenkins\n        pagination:\n          page: 2\n          pageSize: 25\n          totalPages: 10\n          totalItems: 243\n      properties:\n        reports:\n          items:\n            $ref: '#/components/schemas/Report'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    WidgetConfigList:\n      example:\n        widgets:\n          - id: afbcf5c7-1ffd-4367-b228-5a868c29e0ef\n            type: widget\n            widget: heatmap\n            params:\n              - field: metadata.jenkins.job_name\n                type: scalar\n                value: my-jenkins-job-name\n              - field: metadata.jenkins.build_number\n                type: range-desc\n                value: 5\n            title: Job Health\n        pagination:\n          page: 1\n          pageSize: 25\n          totalPages: 1\n          totalItems: 1\n      properties:\n        widgets:\n          items:\n            $ref: '#/components/schemas/WidgetConfig'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    WidgetTypeList:\n      example:\n        types:\n          - id: heatmap\n            title: Heatmap\n            description: A heatmap of runs and trends\n        pagination:\n          page: 1\n          pageSize: 25\n          totalPages: 1\n          totalItems: 1\n      properties:\n        types:\n          items:\n            $ref: '#/components/schemas/WidgetType'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    TokenList:\n      example:\n        tokens:\n          - id: e2772010-bc06-47ed-8b6b-767ab87427cc\n            user_id: 81e2c9d6-1593-4559-af4f-90f6f1f8fa03\n            name: My user token\n            expires: 2038-12-31T23:59:59+0000\n            token: 64ad787a-5aa8-48fa-842e-6e3b9631308a\n        pagination:\n          page: 1\n          pageSize: 25\n          totalPages: 1\n          totalItems: 1\n      properties:\n        tokens:\n          items:\n            $ref: '#/components/schemas/Token'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    UserList:\n      example:\n        users:\n          - id: 64c2ab9e-cd64-4815-bf73-83b00c2e650f\n            email: jdoe@example.com\n        pagination:\n          page: 2\n          pageSize: 25\n          totalPages: 10\n          totalItems: 243\n      properties:\n        users:\n          items:\n            $ref: '#/components/schemas/User'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n  parameters:\n    Page:\n      description: Set the page of items to return, defaults to 1\n      explode: true\n      in: query\n      name: page\n      required: false\n      schema:\n        format: int32\n        type: integer\n      style: form\n    PageSize:\n      description: Set the number of items per page, defaults to 25\n      explode: true\n      in: query\n      name: pageSize\n      required: false\n      schema:\n        format: int32\n        type: integer\n        minimum: 1\n      style: form\n  securitySchemes:\n    jwt:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      x-bearerInfoFunc: ibutsu_server.util.jwt.decode_token\n",
			"canonicalURL": "/github.com/ibutsu/ibutsu-server@4bec71a648d853717c7b0396d49c562705e2a86e/-/blob/backend/ibutsu_server/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ibutsu/ibutsu-server/blob/4bec71a648d853717c7b0396d49c562705e2a86e/backend/ibutsu_server/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: reference type \"https://raw.githubusercontent.com/ibutsu/ibutsu-server/4bec71a648d853717c7b0396d49c562705e2a86e/backend/ibutsu_server/openapi/openapi.yaml#/components/requestBodies/User\" name conflict: \"User\""
}