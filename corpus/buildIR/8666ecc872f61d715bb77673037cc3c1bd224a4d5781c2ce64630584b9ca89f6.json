{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/elan-ev/studip-opencast-plugin"
		},
		"file": {
			"name": "studip_opencast_routes.json",
			"size": 0,
			"path": "docs/studip_opencast_routes.json",
			"byteSize": 53162,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Opencast V3 Routes\",\n    \"description\": \"JSON Routes for Opencast V3\",\n    \"license\": {\n      \"name\": \"GPL v2\",\n      \"url\": \"https://www.gnu.org/licenses/old-licenses/gpl-2.0.de.html\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://demo.studip.de/plugins.php/opencast/api\"\n    }\n  ],\n  \"paths\": {\n    \"/videos\": {\n      \"get\": {\n        \"tags\": [\n          \"videos\"\n        ],\n        \"summary\": \"Get the videos the session user has rights on\",\n        \"operationId\": \"getVideosForUser\",\n        \"parameters\": [\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"The number of items to skip before starting to collect the result set\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The numbers of items to return\",\n            \"schema\": {\n              \"minimum\": 20,\n              \"type\": \"integer\",\n              \"default\": 20\n            }\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"description\": \"Pass some filters to narrow down the list of videos\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/Filter\"\n              }\n            },\n            \"required\": false\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Video\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/playlists\": {\n      \"get\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Get the playlists for the session user\",\n        \"operationId\": \"getPlaylistsForUser\",\n        \"parameters\": [\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"The number of items to skip before starting to collect the result set\",\n            \"schema\": {\n              \"minimum\": 0,\n              \"type\": \"integer\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"The numbers of items to return\",\n            \"schema\": {\n              \"minimum\": 20,\n              \"type\": \"integer\",\n              \"default\": 20\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Playlist\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Add a new playlist for the current user\",\n        \"operationId\": \"addPlaylistsForUser\",\n        \"requestBody\": {\n          \"description\": \"Playlist object to be added for the current user\",\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Playlist\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      }\n    },\n    \"/playlists/{token}\": {\n      \"get\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Get the playlist with the passed id\",\n        \"operationId\": \"getPlaylistsForId\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the playlist\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Update the playlist with the passed id\",\n        \"operationId\": \"putPlaylistsForId\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the playlist\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Playlist object to be updated\",\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Playlist\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Delete the playlist with the passed id (if current user has permissions to do so)\",\n        \"operationId\": \"deletePlaylistsForId\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the playlist\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/playlists/{token}/video/{token}\": {\n      \"put\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Add video to playlist\",\n        \"operationId\": \"addVideoToPlaylist\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"token reference for playlist or video\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Delete video from playlist\",\n        \"operationId\": \"deleteVideoFromPlaylist\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"token reference for playlist or video\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/playlists/{token}/user\": {\n      \"put\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Add user with perms to playlist\",\n        \"operationId\": \"addPermsToPlaylist\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the playlist\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"required\": [\n                  \"perm\",\n                  \"username\"\n                ],\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"description\": \"User to add/modify perms for the playlist\"\n                  },\n                  \"perm\": {\n                    \"type\": \"string\",\n                    \"description\": \"The perm the user shall have\",\n                    \"enum\": [\n                      \"owner\",\n                      \"write\",\n                      \"read\",\n                      \"share\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/playlists/{token}/videos\": {\n      \"get\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Get videos for the passed playlist\",\n        \"operationId\": \"getVideosForPlaylist\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the playlist\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"cid\",\n            \"in\": \"query\",\n            \"description\": \"Course ID as context for the playlist\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Video\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/playlists/{token}/courses\": {\n      \"get\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Get courses associated with the passed playlist\",\n        \"operationId\": \"getCoursesForPlaylist\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the playlist\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Set course link\",\n        \"description\": \"Set course links for the playlist with the passed token, clearing out all not passed course links\",\n        \"operationId\": \"linkPlaylistToCourses\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the video\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"List of courses to link to\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"courses\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      }\n    },\n    \"/playlists/{token}/user/{username}\": {\n      \"delete\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Remove perms for user from playlist\",\n        \"operationId\": \"removePermsFromPlaylist\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the playlist\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"Username of the user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/playlist/{token}/positions\": {\n      \"put\": {\n        \"tags\": [\n          \"playlists\"\n        ],\n        \"summary\": \"Set order of videos\",\n        \"description\": \"Set order of videos for the playlist with the passed token, giving each video a defined position\",\n        \"operationId\": \"setPlaylistVideoPositions\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the video\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"List of courses to link to\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"example\": [\n                  \"video_token_1\",\n                  \"video_token_2\"\n                ],\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      }\n    },\n    \"/courses\": {\n      \"get\": {\n        \"tags\": [\n          \"courses\"\n        ],\n        \"summary\": \"returns a list of all courses the current user has tutor perms for or higher\",\n        \"operationId\": \"getCoursesForUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Course\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/courses/{course_id}/videos\": {\n      \"get\": {\n        \"tags\": [\n          \"courses\"\n        ],\n        \"summary\": \"Returns videos directly associated to this course\",\n        \"operationId\": \"getVideosForCourse\",\n        \"parameters\": [\n          {\n            \"name\": \"course_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of course\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Video\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/courses/{course_id}/config\": {\n      \"get\": {\n        \"tags\": [\n          \"courses\"\n        ],\n        \"summary\": \"Returns the config settings for this course, like series and configured workflow\",\n        \"operationId\": \"getConfigForCourse\",\n        \"parameters\": [\n          {\n            \"name\": \"course_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of course\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CourseConfig\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/courses/{course_id}/playlists\": {\n      \"get\": {\n        \"tags\": [\n          \"courses\"\n        ],\n        \"summary\": \"Returns playlists for this course. Videos without explicit playlist in this course are mapped to a virtual playlist which can be accessed via the standard playlist routes\",\n        \"operationId\": \"getPlaylistsForCourse\",\n        \"parameters\": [\n          {\n            \"name\": \"course_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of course\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/courses/{course_id}/playlist/{token}\": {\n      \"put\": {\n        \"tags\": [\n          \"courses\"\n        ],\n        \"summary\": \"Add playlist to course\",\n        \"operationId\": \"addPlaylistToCourse\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the playlist\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"course_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of course\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Playlist\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"courses\"\n        ],\n        \"summary\": \"Remove Playlist from course\",\n        \"operationId\": \"removePlaylistFromCourse\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the playlist\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"course_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of course\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/courses/{course_id}/{semester_filter}/schedule\": {\n      \"get\": {\n        \"tags\": [\n          \"courses\"\n        ],\n        \"summary\": \"Get list of scheduled events for this course\",\n        \"operationId\": \"getListOfScheduleEvents\",\n        \"parameters\": [\n          {\n            \"name\": \"course_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of course\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"semester_filter\",\n            \"in\": \"path\",\n            \"description\": \"ID of the selected semester filter or 'all'\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ScheduledEvent\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/courses/{course_id}/visibility/{visibility}\": {\n      \"get\": {\n        \"tags\": [\n          \"courses\"\n        ],\n        \"summary\": \"Set visibility for course tab\",\n        \"description\": \"Sets, if the course tab is visible for non-privileged users in the passed course\",\n        \"operationId\": \"setCourseVisibility\",\n        \"parameters\": [\n          {\n            \"name\": \"course_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of course\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"visibility\",\n            \"in\": \"path\",\n            \"description\": \"Visibility for the course\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"free\",\n                \"public\",\n                \"internal\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/videos/{token}\": {\n      \"put\": {\n        \"tags\": [\n          \"videos\"\n        ],\n        \"summary\": \"Update Video with ID\",\n        \"operationId\": \"updateVideo\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the video\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Video object to be updated\",\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Video\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"videos\"\n        ],\n        \"summary\": \"Remove the video from Stud.IP and from Opencast!\",\n        \"description\": \"**This operation is used to completely remove a video. It will remove the entry from Stud.IP and retract and delete the event completely in Opencast, so use with care!**\",\n        \"operationId\": \"deleteVideo\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the video\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/videos/{token}/report\": {\n      \"put\": {\n        \"tags\": [\n          \"videos\"\n        ],\n        \"summary\": \"Send technical feedback\",\n        \"description\": \"Sends a technical feedback for the video with the passed token to the configured OPENCAST_SUPPORT_EMAIL\",\n        \"operationId\": \"sendReportForVideo\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the video\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Video object to be updated\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"description\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      }\n    },\n    \"/videos/{token}/courses\": {\n      \"put\": {\n        \"tags\": [\n          \"videos\"\n        ],\n        \"summary\": \"Set course link\",\n        \"description\": \"Set course links for the video with the passed token, clearing out all not passed course links\",\n        \"operationId\": \"linkVideoToCourses\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"ID of the video\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"List of courses to link to\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"courses\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      }\n    },\n    \"/tags\": {\n      \"get\": {\n        \"tags\": [\n          \"tags\"\n        ],\n        \"summary\": \"Get all available tags for this user\",\n        \"operationId\": \"getTagsForUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Tag\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/config\": {\n      \"get\": {\n        \"tags\": [\n          \"config\"\n        ],\n        \"summary\": \"Get opencast configuration with all servers\",\n        \"operationId\": \"getOpencastConfig\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"example\": [\n                    {\n                      \"id\": \"1\",\n                      \"service_url\": \"https://opencast.example.com\",\n                      \"service_user\": \"user\",\n                      \"service_password\": \"password\",\n                      \"service_version\": \"11\",\n                      \"settings\": {\n                        \"upload_chunk_size\": \"5000000\",\n                        \"number_of_configs\": \"1\",\n                        \"time_buffer_overlap\": \"60\",\n                        \"ssl_verify_peer\": true,\n                        \"ssl_verify_host\": true,\n                        \"ssl_cipher_list\": \"none\",\n                        \"lti_consumerkey\": \"CONSUMERKEY\",\n                        \"lti_consumersecret\": \"CONSUMERSECRET\",\n                        \"paella\": true,\n                        \"livestream\": false,\n                        \"service_url\": \"https://opencast.example.com\",\n                        \"service_user\": \"user\",\n                        \"service_password\": \"password\"\n                      }\n                    },\n                    {\n                      \"settings\": [\n                        {\n                          \"name\": \"OPENCAST_TOS\",\n                          \"description\": \"Terms of service\",\n                          \"value\": \"\",\n                          \"type\": \"string\"\n                        },\n                        {\n                          \"name\": \"OPENCAST_SHOW_TOS\",\n                          \"description\": \"Müssen Lehrende einem Datenschutztext zustimmen, bevor sie das Opencast-Plugin in einer Veranstaltung verwenden können?\",\n                          \"value\": false,\n                          \"type\": \"boolean\"\n                        },\n                        {\n                          \"name\": \"OPENCAST_ALLOW_ALTERNATE_SCHEDULE\",\n                          \"description\": \"Dürfen Lehrende abweichende Aufzeichnungszeiten einstellen?\",\n                          \"value\": false,\n                          \"type\": \"boolean\"\n                        },\n                        {\n                          \"name\": \"OPENCAST_ALLOW_MEDIADOWNLOAD\",\n                          \"description\": \"Wird Nutzern angeboten, Aufzeichnungen herunterzuladen?\",\n                          \"value\": true,\n                          \"type\": \"boolean\"\n                        },\n                        {\n                          \"name\": \"OPENCAST_ALLOW_STUDIO\",\n                          \"description\": \"Wird Nutzern angeboten, Aufzeichnungen mit Opencast Studio zu erstellen?\",\n                          \"value\": true,\n                          \"type\": \"boolean\"\n                        },\n                        {\n                          \"name\": \"OPENCAST_HIDE_EPISODES\",\n                          \"description\": \"Sollen Videos standardmäßig nur für Lehrende sichtbar sein?\",\n                          \"value\": false,\n                          \"type\": \"boolean\"\n                        },\n                        {\n                          \"name\": \"OPENCAST_TUTOR_EPISODE_PERM\",\n                          \"description\": \"Sollen Tutor/innen im Opencast-Plugin die gleichen Rechte haben wie Dozent/innen?\",\n                          \"value\": true,\n                          \"type\": \"boolean\"\n                        }\n                      ]\n                    },\n                    {\n                      \"de_DE\": {\n                        \"id\": \"de_DE\",\n                        \"picture\": \"lang_de.gif\",\n                        \"name\": \"Deutsch\"\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"config\"\n        ],\n        \"summary\": \"Update global configuration settings\",\n        \"operationId\": \"updateOpencastConfig\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"required\": [\n                  \"settings\"\n                ],\n                \"properties\": {\n                  \"settings\": {\n                    \"type\": \"string\",\n                    \"description\": \"User to add/modify perms for the playlist\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/config/{config_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"config\"\n        ],\n        \"summary\": \"Get opencast configuration for server\",\n        \"operationId\": \"getOpencastServerConfig\",\n        \"parameters\": [\n          {\n            \"name\": \"config_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the server config\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"config\"\n        ],\n        \"summary\": \"Add or Update opencast configuration for server\",\n        \"operationId\": \"addOrUpdateOpencastServerConfig\",\n        \"parameters\": [\n          {\n            \"name\": \"config_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the server config\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"config\"\n        ],\n        \"summary\": \"Delete opencast configuration for server\",\n        \"operationId\": \"deleteOpencastServerConfig\",\n        \"parameters\": [\n          {\n            \"name\": \"config_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of the server config\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/config/simple\": {\n      \"get\": {\n        \"tags\": [\n          \"config\"\n        ],\n        \"summary\": \"Get the list of configured Opencast servers and the global config options, without any credentials or unsafe config options\",\n        \"operationId\": \"getSimpleOpencastServerConfig\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/lti/launch_data\": {\n      \"get\": {\n        \"tags\": [\n          \"lti\"\n        ],\n        \"summary\": \"Get the LTI launch data, signed and ready to send\",\n        \"operationId\": \"getLTILaunchData\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/lti/launch_data/{context_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"lti\"\n        ],\n        \"summary\": \"Get the LTI launch data, signed and ready to send for the passed context\",\n        \"operationId\": \"getLTILaunchDataForContext\",\n        \"parameters\": [\n          {\n            \"name\": \"context_id\",\n            \"in\": \"path\",\n            \"description\": \"ID of course or institute\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/schedule/{course_id}/{termin_id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"course_id\",\n          \"in\": \"path\",\n          \"description\": \"ID of course\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"termin_id\",\n          \"in\": \"path\",\n          \"description\": \"ID of scheduled event\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"schedule\"\n        ],\n        \"summary\": \"Get scheduled event\",\n        \"operationId\": \"getScheduledEvent\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ScheduledEvent\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"schedule\"\n        ],\n        \"summary\": \"Update a scheduled event\",\n        \"operationId\": \"updateScheduledEvent\",\n        \"requestBody\": {\n          \"description\": \"Update an existing scheduled event\",\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ScheduledEvent\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ScheduledEvent\"\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      },\n      \"post\": {\n        \"tags\": [\n          \"schedule\"\n        ],\n        \"summary\": \"Add a new scheduled event\",\n        \"operationId\": \"addScheduledEvent\",\n        \"requestBody\": {\n          \"description\": \"ScheduledEvent object to be added, course is determined by date_id\",\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ScheduledEvent\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      },\n      \"delete\": {\n        \"tags\": [\n          \"schedule\"\n        ],\n        \"summary\": \"Delete a scheduled event\",\n        \"operationId\": \"deleteScheduledEvent\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/schedulebulk/{course_id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"course_id\",\n          \"in\": \"path\",\n          \"description\": \"ID of course\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"tags\": [\n          \"schedule\"\n        ],\n        \"summary\": \"Modify multiple scheduled events\",\n        \"description\": \"Pass a bulk operation type and a list of events to apply the bulk operation to\",\n        \"operationId\": \"bulkOperationForScheduledEvents\",\n        \"requestBody\": {\n          \"description\": \"Schedule events to bulk operate on\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"action\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"schedule\",\n                      \"unschedule\",\n                      \"update\",\n                      \"live\"\n                    ]\n                  },\n                  \"termin_ids\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      }\n    },\n    \"/opencast/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"opencast\"\n        ],\n        \"summary\": \"Get user and roles by user name\",\n        \"description\": \"Returns the user with all necessary role ids\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"query\",\n            \"description\": \"API Key to use for the call\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserRoles\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\",\n            \"content\": {}\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get currently loggend in user\",\n        \"description\": \"Returns a data structur with details and permissions for the currently authenticated user\",\n        \"operationId\": \"getUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/search/{search_term}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Search for users\",\n        \"description\": \"Search in users accessible to the currently authenticated user\",\n        \"operationId\": \"searchForUser\",\n        \"parameters\": [\n          {\n            \"name\": \"search_term\",\n            \"in\": \"path\",\n            \"description\": \"Part of user data to search for\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/User\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/log\": {\n      \"post\": {\n        \"tags\": [\n          \"log\"\n        ],\n        \"summary\": \"Log an event\",\n        \"description\": \"Pass details on log event type to create an entry in Stud.IPs log\",\n        \"operationId\": \"logEvent\",\n        \"requestBody\": {\n          \"description\": \"Details of the event\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"x-codegen-request-body-name\": \"body\"\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Video\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"description\": \"If not empty, this is the token for videos made accesible via secret link\",\n            \"format\": \"varchar(8)\"\n          },\n          \"config_id\": {\n            \"type\": \"integer\",\n            \"description\": \"opencast config this video belongs to\"\n          },\n          \"episode\": {\n            \"type\": \"string\",\n            \"description\": \"The id of the event in Opencast\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"duration\": {\n            \"type\": \"integer\",\n            \"description\": \"video duration in milliseconds\"\n          },\n          \"views\": {\n            \"type\": \"integer\",\n            \"description\": \"number of clicks for this video from Stud.IP\"\n          },\n          \"preview\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"search\": {\n                \"type\": \"string\"\n              },\n              \"player\": {\n                \"type\": \"string\"\n              },\n              \"has_previews\": {\n                \"type\": \"boolean\"\n              }\n            }\n          },\n          \"publication\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"downloads\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Download\"\n                }\n              },\n              \"annotation_tool\": {\n                \"type\": \"string\"\n              },\n              \"track_link\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"visibility\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"author\": {\n            \"type\": \"string\"\n          },\n          \"contributors\": {\n            \"type\": \"string\"\n          },\n          \"chdate\": {\n            \"type\": \"integer\"\n          },\n          \"mkdate\": {\n            \"type\": \"integer\"\n          },\n          \"paella\": {\n            \"type\": \"string\"\n          },\n          \"perm\": {\n            \"type\": \"boolean\"\n          },\n          \"courses\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"Download\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"info\": {\n            \"type\": \"string\"\n          },\n          \"size\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"Playlist\": {\n        \"required\": [\n          \"title\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\",\n            \"example\": \"Meine Videos\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"visibility\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"internal\",\n              \"free\",\n              \"public\"\n            ]\n          },\n          \"mkdate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"chdate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"references\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PlaylistReference\"\n            }\n          }\n        }\n      },\n      \"ScheduledEvent\": {\n        \"required\": [\n          \"date_id\",\n          \"resource_id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"resource_id\": {\n            \"type\": \"string\",\n            \"example\": \"ddce269a1e3d054cae349621c198dd52\"\n          },\n          \"date_id\": {\n            \"type\": \"string\",\n            \"example\": \"ddce269a1e3d054cae349621c198dd52\"\n          },\n          \"event_id\": {\n            \"type\": \"string\",\n            \"example\": \"f8c3de3d-1fea-4d7c-a8b0-29f63c4c3454\"\n          }\n        }\n      },\n      \"PlaylistReference\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"course_id\": {\n            \"type\": \"string\",\n            \"format\": \"varchar(32)\"\n          },\n          \"visibility\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"hidden\",\n              \"visible\"\n            ]\n          }\n        }\n      },\n      \"OpencastConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"server\": {\n            \"type\": \"object\",\n            \"properties\": {}\n          },\n          \"settings\": {\n            \"type\": \"object\",\n            \"properties\": {}\n          },\n          \"languages\": {\n            \"type\": \"object\",\n            \"properties\": {}\n          }\n        }\n      },\n      \"Filter\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"text\",\n              \"playlist\",\n              \"tag\"\n            ]\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"default\": \"user\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"username\": {\n                \"type\": \"string\"\n              },\n              \"fullname\": {\n                \"type\": \"string\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"user\",\n                  \"autor\",\n                  \"tutor\",\n                  \"dozent\",\n                  \"admin\",\n                  \"root\"\n                ]\n              },\n              \"admin\": {\n                \"type\": \"boolean\"\n              },\n              \"can_edit\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        }\n      },\n      \"UserRoles\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"Course\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"start_semester\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"end_semester\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"example\": \"WS2022/23\"\n              }\n            },\n            \"example\": \"S1234567\"\n          }\n        },\n        \"example\": {\n          \"S12345678\": {\n            \"unbegrenzt\": {\n              \"id\": 1,\n              \"name\": \"Kurs A\"\n            },\n            \"WS2022/23\": {\n              \"id\": 2,\n              \"name\": \"Kurs B\"\n            }\n          }\n        }\n      },\n      \"CourseConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"series\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"series_id\": {\n                \"type\": \"string\"\n              },\n              \"visibility\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"visible\",\n                  \"invisible\"\n                ]\n              }\n            }\n          },\n          \"workflow\": {\n            \"type\": \"string\",\n            \"example\": \"upload\"\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/elan-ev/studip-opencast-plugin@10db2bf20d74b6d0faaec716b9fbbbd81ff0db11/-/blob/docs/studip_opencast_routes.json",
			"externalURLs": [
				{
					"url": "https://github.com/elan-ev/studip-opencast-plugin/blob/10db2bf20d74b6d0faaec716b9fbbbd81ff0db11/docs/studip_opencast_routes.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/videos\": get: parameters: \"filter\": nested objects not allowed",
	"NotImplemented": [
		"unsupported content types"
	]
}