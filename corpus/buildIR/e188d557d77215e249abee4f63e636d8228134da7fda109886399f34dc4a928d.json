{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/giphy.com/1.0/openapi.yaml",
			"byteSize": 25488,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.giphy.com/v1\ninfo:\n  contact:\n    email: support@giphy.com\n  description: Giphy API\n  termsOfService: https://developers.giphy.com/\n  title: Giphy API\n  version: \"1.0\"\n  x-apisguru-categories:\n    - media\n  x-logo:\n    url: https://twitter.com/GIPHY/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/faragorn/open-api-specs/master/specs/giphy_api/1.0/index.yml\n      version: \"3.0\"\n  x-providerName: giphy.com\nexternalDocs:\n  description: Official Giphy Documentation\n  url: https://developers.giphy.com/docs/\nsecurity:\n  - api_key: []\ntags:\n  - name: gifs\n  - name: stickers\npaths:\n  /gifs:\n    get:\n      description: |\n        A multiget version of the get GIF by ID endpoint.\n      operationId: getGifsById\n      parameters:\n        - $ref: \"#/components/parameters/gifIds\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Gif\"\n                    type: array\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                  pagination:\n                    $ref: \"#/components/schemas/Pagination\"\n                type: object\n          description: \"\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      summary: Get GIFs by ID\n      tags:\n        - gifs\n  /gifs/random:\n    get:\n      description: |\n        Returns a random GIF, limited by tag. Excluding the tag parameter will return a random GIF from the GIPHY catalog.\n      operationId: randomGif\n      parameters:\n        - $ref: \"#/components/parameters/tag\"\n        - $ref: \"#/components/parameters/rating\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Gif\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                type: object\n          description: \"\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      summary: Random GIF\n      tags:\n        - gifs\n  /gifs/search:\n    get:\n      description: |\n        Search all GIPHY GIFs for a word or phrase. Punctuation will be stripped and ignored.  Use a plus or url encode for phrases. Example paul+rudd, ryan+gosling or american+psycho.\n      operationId: searchGifs\n      parameters:\n        - $ref: \"#/components/parameters/query\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/rating\"\n        - $ref: \"#/components/parameters/lang\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Gif\"\n                    type: array\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                  pagination:\n                    $ref: \"#/components/schemas/Pagination\"\n                type: object\n          description: Search results\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      summary: Search GIFs\n      tags:\n        - gifs\n  /gifs/translate:\n    get:\n      description: |\n        The translate API draws on search, but uses the GIPHY `special sauce` to handle translating from one vocabulary to another. In this case, words and phrases to GIF\n      operationId: translateGif\n      parameters:\n        - $ref: \"#/components/parameters/term\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Gif\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                type: object\n          description: \"\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      summary: Translate phrase to GIF\n      tags:\n        - gifs\n  /gifs/trending:\n    get:\n      description: |\n        Fetch GIFs currently trending online. Hand curated by the GIPHY editorial team.  The data returned mirrors the GIFs showcased on the GIPHY homepage. Returns 25 results by default.\n      operationId: trendingGifs\n      parameters:\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/rating\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Gif\"\n                    type: array\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                  pagination:\n                    $ref: \"#/components/schemas/Pagination\"\n                type: object\n          description: \"\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      summary: Trending GIFs\n      tags:\n        - gifs\n  \"/gifs/{gifId}\":\n    get:\n      description: |\n        Returns a GIF given that GIF's unique ID\n      operationId: getGifById\n      parameters:\n        - $ref: \"#/components/parameters/gifId\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Gif\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                type: object\n          description: \"\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      summary: Get GIF by Id\n      tags:\n        - gifs\n  /stickers/random:\n    get:\n      description: |\n        Returns a random GIF, limited by tag. Excluding the tag parameter will return a random GIF from the GIPHY catalog.\n      operationId: randomSticker\n      parameters:\n        - $ref: \"#/components/parameters/tag\"\n        - $ref: \"#/components/parameters/rating\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Gif\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                type: object\n          description: \"\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      summary: Random Sticker\n      tags:\n        - stickers\n  /stickers/search:\n    get:\n      description: |\n        Replicates the functionality and requirements of the classic GIPHY search, but returns animated stickers rather than GIFs.\n      operationId: searchStickers\n      parameters:\n        - $ref: \"#/components/parameters/query\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/rating\"\n        - $ref: \"#/components/parameters/lang\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Gif\"\n                    type: array\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                  pagination:\n                    $ref: \"#/components/schemas/Pagination\"\n                type: object\n          description: Search results\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      summary: Search Stickers\n      tags:\n        - stickers\n  /stickers/translate:\n    get:\n      description: |\n        The translate API draws on search, but uses the GIPHY `special sauce` to handle translating from one vocabulary to another. In this case, words and phrases to GIFs.\n      operationId: translateSticker\n      parameters:\n        - $ref: \"#/components/parameters/term\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Gif\"\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                type: object\n          description: \"\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      summary: Translate phrase to Sticker\n      tags:\n        - stickers\n  /stickers/trending:\n    get:\n      description: |\n        Fetch Stickers currently trending online. Hand curated by the GIPHY editorial team. Returns 25 results by default.\n      operationId: trendingStickers\n      parameters:\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/rating\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Gif\"\n                    type: array\n                  meta:\n                    $ref: \"#/components/schemas/Meta\"\n                  pagination:\n                    $ref: \"#/components/schemas/Pagination\"\n                type: object\n          description: \"\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n      summary: Trending Stickers\n      tags:\n        - stickers\ncomponents:\n  parameters:\n    gifId:\n      description: Filters results by specified GIF ID.\n      in: path\n      name: gifId\n      required: true\n      schema:\n        format: int32\n        type: integer\n    gifIds:\n      description: Filters results by specified GIF IDs, separated by commas.\n      in: query\n      name: ids\n      schema:\n        type: string\n    lang:\n      description: Specify default language for regional content; use a 2-letter ISO 639-1 language code.\n      in: query\n      name: lang\n      schema:\n        type: string\n    limit:\n      description: The maximum number of records to return.\n      in: query\n      name: limit\n      schema:\n        default: 25\n        format: int32\n        type: integer\n    offset:\n      description: An optional results offset.\n      in: query\n      name: offset\n      schema:\n        default: 0\n        format: int32\n        type: integer\n    query:\n      description: Search query term or prhase.\n      in: query\n      name: q\n      required: true\n      schema:\n        type: string\n    rating:\n      description: Filters results by specified rating.\n      in: query\n      name: rating\n      schema:\n        type: string\n    tag:\n      description: Filters results by specified tag.\n      in: query\n      name: tag\n      schema:\n        type: string\n    term:\n      description: Search term.\n      in: query\n      name: s\n      required: true\n      schema:\n        type: string\n  responses:\n    BadRequest:\n      description: Your request was formatted incorrectly or missing required parameters.\n    Forbidden:\n      description: You weren't authorized to make your request; most likely this indicates an issue with your API Key.\n    NotFound:\n      description: The particular GIF you are requesting was not found. This occurs, for example, if you request a GIF by an id that does not exist.\n    TooManyRequests:\n      description: |\n        Your API Key is making too many requests. Read about [requesting a Production Key](https://developers.giphy.com/docs/#access) to upgrade your API Key rate limits.\n  schemas:\n    Gif:\n      properties:\n        bitly_url:\n          description: The unique bit.ly URL for this GIF\n          example: http://gph.is/1gsWDcL\n          type: string\n        content_url:\n          description: Currently unused\n          type: string\n        create_datetime:\n          description: The date this GIF was added to the GIPHY database.\n          example: 2013-08-01 12:41:48\n          format: date-time\n          type: string\n        embded_url:\n          description: A URL used for embedding this GIF\n          example: http://giphy.com/embed/YsTs5ltWtEhnq\n          type: string\n        featured_tags:\n          description: |\n            An array of featured tags for this GIF (Note: Not available when using the Public Beta Key)\n          items:\n            description: Tag name\n            type: string\n          type: array\n        id:\n          description: This GIF's unique ID\n          example: YsTs5ltWtEhnq\n          type: string\n        images:\n          description: An object containing data for various available formats and sizes of this GIF.\n          properties:\n            downsized:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a version of this GIF downsized to be under 2mb.\n            downsized_large:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a version of this GIF downsized to be under 8mb.\n            downsized_medium:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a version of this GIF downsized to be under 5mb.\n            downsized_small:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a version of this GIF downsized to be under 200kb.\n            downsized_still:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a static preview image of the downsized version of this GIF.\n            fixed_height:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding versions of this GIF with a fixed height of 200 pixels. Good for mobile use.\n            fixed_height_downsampled:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding versions of this GIF with a fixed height of 200 pixels and the number of frames reduced to 6.\n            fixed_height_small:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding versions of this GIF with a fixed height of 100 pixels. Good for mobile keyboards.\n            fixed_height_small_still:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a static image of this GIF with a fixed height of 100 pixels.\n            fixed_height_still:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a static image of this GIF with a fixed height of 200 pixels.\n            fixed_width:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding versions of this GIF with a fixed width of 200 pixels. Good for mobile use.\n            fixed_width_downsampled:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding versions of this GIF with a fixed width of 200 pixels and the number of frames reduced to 6.\n            fixed_width_small:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding versions of this GIF with a fixed width of 100 pixels. Good for mobile keyboards.\n            fixed_width_small_still:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a static image of this GIF with a fixed width of 100 pixels.\n            fixed_width_still:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a static image of this GIF with a fixed width of 200 pixels.\n            looping:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a version of this GIF set to loop for 15 seconds.\n            original:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding the original version of this GIF. Good for desktop use.\n            original_still:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a static preview image of the original GIF.\n            preview:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a version of this GIF in .MP4 format limited to 50kb that displays the first 1-2 seconds of the GIF.\n            preview_gif:\n              allOf:\n                - $ref: \"#/components/schemas/Image\"\n                - description: Data surrounding a version of this GIF limited to 50kb that displays the first 1-2 seconds of the GIF.\n          type: object\n        import_datetime:\n          description: The creation or upload date from this GIF's source.\n          example: 2013-08-01 12:41:48\n          format: date-time\n          type: string\n        rating:\n          description: The MPAA-style rating for this content. Examples include Y, G, PG, PG-13 and R\n          example: g\n          type: string\n        slug:\n          description: The unique slug used in this GIF's URL\n          example: confused-flying-YsTs5ltWtEhnq\n          type: string\n        source:\n          description: The page on which this GIF was found\n          example: http://www.reddit.com/r/reactiongifs/comments/1xpyaa/superman_goes_to_hollywood/\n          type: string\n        source_post_url:\n          description: The URL of the webpage on which this GIF was found.\n          example: http://cheezburger.com/5282328320\n          type: string\n        source_tld:\n          description: The top level domain of the source URL.\n          example: cheezburger.com\n          type: string\n        tags:\n          description: |\n            An array of tags for this GIF (Note: Not available when using the Public Beta Key)\n          items:\n            description: Tag name\n            type: string\n          type: array\n        trending_datetime:\n          description: The date on which this gif was marked trending, if applicable.\n          example: 2013-08-01 12:41:48\n          format: date-time\n          type: string\n        type:\n          default: gif\n          description: Type of the gif. By default, this is almost always gif\n          enum:\n            - gif\n          type: string\n        update_datetime:\n          description: The date on which this GIF was last updated.\n          example: 2013-08-01 12:41:48\n          format: date-time\n          type: string\n        url:\n          description: The unique URL for this GIF\n          example: http://giphy.com/gifs/confused-flying-YsTs5ltWtEhnq\n          type: string\n        user:\n          $ref: \"#/components/schemas/User\"\n        username:\n          description: The username this GIF is attached to, if applicable\n          example: JoeCool4000\n          type: string\n      type: object\n    Image:\n      properties:\n        frames:\n          description: The number of frames in this GIF.\n          example: \"15\"\n          type: string\n        height:\n          description: The height of this GIF in pixels.\n          example: \"200\"\n          type: string\n        mp4:\n          description: The URL for this GIF in .MP4 format.\n          example: https://media1.giphy.com/media/cZ7rmKfFYOvYI/giphy.mp4\n          type: string\n        mp4_size:\n          description: The size in bytes of the .MP4 file corresponding to this GIF.\n          example: \"25123\"\n          type: string\n        size:\n          description: The size of this GIF in bytes.\n          example: \"32381\"\n          type: string\n        url:\n          description: The publicly-accessible direct URL for this GIF.\n          example: https://media1.giphy.com/media/cZ7rmKfFYOvYI/200.gif\n          type: string\n        webp:\n          description: The URL for this GIF in .webp format.\n          example: https://media1.giphy.com/media/cZ7rmKfFYOvYI/giphy.webp\n          type: string\n        webp_size:\n          description: The size in bytes of the .webp file corresponding to this GIF.\n          example: \"12321\"\n          type: string\n        width:\n          description: The width of this GIF in pixels.\n          example: \"320\"\n          type: string\n      type: object\n    Meta:\n      description: |\n        The Meta Object contains basic information regarding the request, whether it was successful, and the response given by the API.  Check `responses` to see a description of types of response codes the API might give you under different cirumstances.\n      properties:\n        msg:\n          description: HTTP Response Message\n          example: OK\n          type: string\n        response_id:\n          description: A unique ID paired with this response from the API.\n          example: 57eea03c72381f86e05c35d2\n          type: string\n        status:\n          description: HTTP Response Code\n          example: 200\n          format: int32\n          type: integer\n      type: object\n    Pagination:\n      description: |\n        The Pagination Object contains information relating to the number of total results available as well as the number of results fetched and their relative positions.\n      properties:\n        count:\n          description: Total number of items returned.\n          example: 25\n          format: int32\n          type: integer\n        offset:\n          description: Position in pagination.\n          example: 75\n          format: int32\n          type: integer\n        total_count:\n          description: Total number of items available.\n          example: 250\n          format: int32\n          type: integer\n      type: object\n    User:\n      description: The User Object contains information about the user associated with a GIF and URLs to assets such as that user's avatar image, profile, and more.\n      properties:\n        avatar_url:\n          description: The URL for this user's avatar image.\n          example: https://media1.giphy.com/avatars/election2016/XwYrZi5H87o6.gif\n          type: string\n        banner_url:\n          description: The URL for the banner image that appears atop this user's profile page.\n          example: https://media4.giphy.com/avatars/cheezburger/XkuejOhoGLE6.jpg\n          type: string\n        display_name:\n          description: The display name associated with this user (contains formatting the base username might not).\n          example: JoeCool4000\n          type: string\n        profile_url:\n          description: The URL for this user's profile.\n          example: https://giphy.com/cheezburger/\n          type: string\n        twitter:\n          description: The Twitter username associated with this user, if applicable.\n          example: \"@joecool4000\"\n          type: string\n        username:\n          description: The username associated with this user.\n          example: joecool4000\n          type: string\n      type: object\n  securitySchemes:\n    api_key:\n      in: query\n      name: api_key\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@cafd364eceab1026372ac69bd0ef670c5fe491bb/-/blob/APIs/giphy.com/1.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/cafd364eceab1026372ac69bd0ef670c5fe491bb/APIs/giphy.com/1.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/gifs\": get: responses: 200: contents: application/json: generate schema: field data: item: field images: field downsized: allOf: schema type mismatch: object and "
}