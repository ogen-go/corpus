{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mojaloop/sdk-scheme-adapter"
		},
		"file": {
			"name": "api_spec.yaml",
			"size": 0,
			"path": "test/func/config/ttk-ttksim3/spec_files/api_definitions/mojaloop_simulator_sim_1.4/api_spec.yaml",
			"byteSize": 60469,
			"content": "openapi: 3.0.1\r\ninfo:\r\n  title: Mojaloop SDK Backend API\r\n  description: |\r\n    API specification for the SDK Backend API.\r\n\r\n    To be implemented by the Digital Financial Service Provider (DFSP) to work in tandem with the Mojaloop SDK (`mojaloop/sdk-scheme-adapter`).\r\n\r\n    This API is not to be confused with the Mojaloop SDK's Inbound or Outbound API.\r\n\r\n    TODO: More explanation and links about the SDK adapter's Inbound and Outbound API.\r\n\r\n    **Note on terminology:** The term \"Switch\" is equal to the term \"Hub\", and the term \"FSP\" is equal to the term \"DFSP\".\r\n  license:\r\n    name: Apache License Version 2.0, January 2004\r\n    url: http://www.apache.org/licenses/\r\n  version: 1.1.0\r\n\r\npaths:\r\n  /:\r\n    get:\r\n      operationId: BackendHealthCheck\r\n      responses:\r\n        '200':\r\n          description: Returns empty body if the service is running.\r\n      summary: Health check endpoint.\r\n  /bulkQuotes:\r\n    post:\r\n      operationId: BackendBulkQuotesPost\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/bulkQuoteRequest'\r\n        description: Incoming request for a bulk quotation.\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/bulkQuoteResponse'\r\n          description: A response to the bulk quote request.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Requests a bulk quote.\r\n      tags:\r\n        - BulkQuotes\r\n  /bulkQuotes/{idValue}:\r\n    get:\r\n      operationId: BackendBulkQuotesGet\r\n      parameters:\r\n        - $ref: '#/components/parameters/idValue'\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/bulkQuoteResponse'\r\n          description: Response containing details of the requested bulk quote.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '404':\r\n          $ref: '#/components/responses/404'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Requests information relating to a bulk quote identified by the specified identifier value.\r\n      tags:\r\n        - BulkQuotes\r\n  /bulkTransactions/{bulkTransactionId}:\r\n    put:\r\n      description: The HTTP request `PUT /bulkTransactions/{bulkTransactionId}` is used to amend information regarding a bulk transaction, i.e. when autoAcceptParty or autoAcceptQuote  is false then the payer need to provide confirmation to proceed with further processing of the request. The `{bulkTransactionId}` in the URI should contain the `bulkTransactionId` that was used for the creation of the bulk transfer.\r\n      operationId: BackendBulkTransactionsPut\r\n      parameters:\r\n        - $ref: '#/components/parameters/bulkTransactionId'\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              properties:\r\n                bulkHomeTransactionID:\r\n                  description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.\r\n                  type: string\r\n                individualTransferResults:\r\n                  description: List of individual transfers in a bulk transfer with accept party information.\r\n                  items:\r\n                    description: Data model for the 'individualTransfer' while accepting party or quote.\r\n                    properties:\r\n                      homeTransactionId:\r\n                        description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.\r\n                        type: string\r\n                      transactionId:\r\n                        description: Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).\r\n                        example: b51ec534-ee48-4575-b6a9-ead2955b8069\r\n                        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\r\n                        title: CorrelationId\r\n                        type: string\r\n                    required:\r\n                      - homeTransactionId\r\n                    type: object\r\n                  minItems: 1\r\n                  type: array\r\n              required:\r\n                - bulkHomeTransactionID\r\n                - individualTransferResults\r\n              type: object\r\n        description: Bulk transaction request body.\r\n        required: true\r\n      responses:\r\n        '202':\r\n          description: Bulk transaction information successfully amended.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Callbacks for the bulk transaction request.\r\n      tags:\r\n        - BulkTransactionsPut\r\n  /bulkTransfers:\r\n    post:\r\n      operationId: BackendBulkTransfersPost\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/bulkTransferRequest'\r\n        description: An incoming bulk transfer request.\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/bulkTransferResponse'\r\n          description: The bulk transfer was accepted.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Execute bulk transfer of funds from an external account to internal accounts.\r\n      tags:\r\n        - BulkTransfers\r\n  /bulkTransfers/{idValue}:\r\n    get:\r\n      operationId: BackendBulkTransfersGet\r\n      parameters:\r\n        - $ref: '#/components/parameters/idValue'\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/bulkTransferResponse'\r\n          description: Response containing details of the requested bulk transfer.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '404':\r\n          $ref: '#/components/responses/404'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Requests information relating to a bulk transfer identified by the specified identifier value.\r\n      tags:\r\n        - BulkTransfers\r\n  /otp/{requestToPayId}:\r\n    get:\r\n      operationId: BackendOtpGet\r\n      parameters:\r\n        - $ref: '#/components/parameters/requestToPayId'\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/otpDetails'\r\n          description: Response containing details of the OTP.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '404':\r\n          $ref: '#/components/responses/404'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Requests OTP.\r\n      tags:\r\n        - OTP\r\n  /participants/{idType}/{idValue}:\r\n    get:\r\n      description: The HTTP request `GET /participants/{idType}/{idValue}` is used to find out in which FSP the requested party, defined by `{idType}` and `{idValue}`, is located.\r\n      operationId: BackendParticipantsGetByTypeAndID\r\n      parameters:\r\n        - $ref: '#/components/parameters/idType'\r\n        - $ref: '#/components/parameters/idValue'\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/participantsResponse'\r\n          description: Response containing details of the requested party.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '404':\r\n          $ref: '#/components/responses/404'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Asks for the identifier (fspId) of the scheme participant (FSP) that can handle transfers for the specified identifier type and value.\r\n      tags:\r\n        - Participants\r\n  /participants/{idType}/{idValue}/{idSubValue}:\r\n    get:\r\n      description: The HTTP request `GET /participants/{idType}/{idValue}/{idSubValue}` is used to find out in which FSP the requested party, defined by `{idType}`, `{idValue}` and `{idSubValue}` is located.\r\n      operationId: BackendParticipantsGetByTypeIDAndSubId\r\n      parameters:\r\n        - $ref: '#/components/parameters/idType'\r\n        - $ref: '#/components/parameters/idValue'\r\n        - $ref: '#/components/parameters/idSubValue'\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/participantsResponse'\r\n          description: Response containing details of the requested party.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '404':\r\n          $ref: '#/components/responses/404'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Asks for the identifier (fspId) of the scheme participant (FSP) that can handle transfers for the specified identifier type and value.\r\n      tags:\r\n        - Participants\r\n  /parties/{idType}/{idValue}:\r\n    get:\r\n      description: The HTTP request `GET /parties/{idType}/{idValue}` is used to look up information regarding the requested transfer party, identified by `{idType}` and `{idValue}`.\r\n      operationId: BackendPartiesGetByTypeAndID\r\n      parameters:\r\n        - $ref: '#/components/parameters/idType'\r\n        - $ref: '#/components/parameters/idValue'\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/transferParty'\r\n          description: Response containing details of the requested party.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '404':\r\n          $ref: '#/components/responses/404'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Requests information relating to a transfer party identified by the specified identifier type and value.\r\n      tags:\r\n        - Parties\r\n  /parties/{idType}/{idValue}/{idSubValue}:\r\n    get:\r\n      description: The HTTP request `GET /parties/{idType}/{idValue}/{idSubValue}` is used to look up information regarding the requested transfer party, identified by `{idType}`, `{idValue}` and `{idSubValue}`.\r\n      operationId: BackendPartiesGetByTypeIdAndSubId\r\n      parameters:\r\n        - $ref: '#/components/parameters/idType'\r\n        - $ref: '#/components/parameters/idValue'\r\n        - $ref: '#/components/parameters/idSubValue'\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/transferParty'\r\n          description: Response containing details of the requested party.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '404':\r\n          $ref: '#/components/responses/404'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Requests information relating to a transfer party identified by the specified identifier type, value and subId value.\r\n      tags:\r\n        - Parties\r\n  /quoterequests:\r\n    post:\r\n      description: The HTTP request `POST /quoterequests` is used to request the creation of a quote for the provided financial transaction.\r\n      operationId: BackendQuoteRequest\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/quoteRequest'\r\n        description: Request for a transfer quotation.\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/quoteResponse'\r\n          description: A response to the transfer quotation request.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Requests a quote for the specified transfer.\r\n      tags:\r\n        - Quotes\r\n  /transactionrequests:\r\n    post:\r\n      operationId: BackendTransactionRequest\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/transactionRequest'\r\n        description: Request for Transaction Request.\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/transactionRequestResponse'\r\n          description: A response to the transfer transaction request.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Transaction request that supports pull based transfers.\r\n      tags:\r\n        - TransactionRequest\r\n  /transfers:\r\n    post:\r\n      description: The HTTP request `POST /transfers` is used to request the creation of a transfer for the transfer party.\r\n      operationId: BackendTransfersPost\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/transferRequest'\r\n        description: An incoming transfer request.\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/transferResponse'\r\n          description: The transfer was accepted.\r\n        '400':\r\n          $ref: '#/components/responses/400'\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Transfers funds from an external account to an internal account.\r\n      tags:\r\n        - Transfers\r\n  /transfers/{transferId}:\r\n    get:\r\n      description: The HTTP request `GET /transfers/{transferId}` is used to get information regarding a transfer created or requested earlier. The `{transferId}` in the URI should contain the `transferId` that was used for the creation of the transfer.\r\n      operationId: BackendTransfersGet\r\n      parameters:\r\n        - $ref: '#/components/parameters/transferId'\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/transferDetailsResponse'\r\n          description: The transfer was accepted.\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Retrieves information for a specific transfer.\r\n      tags:\r\n        - Transfers\r\n    put:\r\n      description: The HTTP request `PUT /transfers/{transferId}` is used to receive notification for transfer being fulfiled when the FSP is a Payee.\r\n      operationId: BackendTransfersPut\r\n      parameters:\r\n        - $ref: '#/components/parameters/transferId'\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/fulfilNotification'\r\n        description: An incoming notification for fulfiled transfer.\r\n      responses:\r\n        '200':\r\n          description: The notification was accepted.\r\n        '500':\r\n          $ref: '#/components/responses/500'\r\n      summary: Receive notification for a specific transfer.\r\n      tags:\r\n        - Transfers\r\n\r\ncomponents:\r\n  parameters:\r\n    bulkTransactionId:\r\n      description: Identifier of the bulk transaction to continue as returned in.\r\n      in: path\r\n      name: bulkTransactionId\r\n      required: true\r\n      schema:\r\n        description: Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).\r\n        example: b51ec534-ee48-4575-b6a9-ead2955b8069\r\n        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\r\n        title: CorrelationId\r\n        type: string\r\n    idSubValue:\r\n      description: A sub-identifier of the party identifier, or a sub-type of the party identifier's type. For example, `PASSPORT`, `DRIVING_LICENSE`.\r\n      in: path\r\n      name: idSubValue\r\n      required: true\r\n      schema:\r\n        type: string\r\n    idType:\r\n      description: The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`.\r\n      in: path\r\n      name: idType\r\n      required: true\r\n      schema:\r\n        type: string\r\n    idValue:\r\n      description: The identifier value.\r\n      in: path\r\n      name: idValue\r\n      required: true\r\n      schema:\r\n        type: string\r\n    requestToPayId:\r\n      in: path\r\n      name: requestToPayId\r\n      required: true\r\n      schema:\r\n        maxLength: 128\r\n        minLength: 1\r\n        type: string\r\n    transferId:\r\n      in: path\r\n      name: transferId\r\n      required: true\r\n      schema:\r\n        type: string\r\n  responses:\r\n    '400':\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/errorResponse'\r\n      description: Malformed or missing required headers or parameters.\r\n    '404':\r\n      description: The party specified by the provided identifier type and value is not known to the server.\r\n    '500':\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/errorResponse'\r\n      description: An error occurred processing the request.\r\n  schemas:\r\n    DateOfBirth:\r\n      description: Date of Birth of the Party.\r\n      example: '1966-06-16'\r\n      pattern: ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\r\n      title: DateofBirth (type Date)\r\n      type: string\r\n    Extension:\r\n      description: Data model for the complex type Extension\r\n      properties:\r\n        key:\r\n          $ref: '#/components/schemas/ExtensionKey'\r\n          description: Extension key.\r\n        value:\r\n          $ref: '#/components/schemas/ExtensionValue'\r\n          description: Extension value.\r\n      required:\r\n        - key\r\n        - value\r\n      title: Extension\r\n      type: object\r\n    ExtensionKey:\r\n      description: Extension key.\r\n      maxLength: 32\r\n      minLength: 1\r\n      title: ExtensionKey\r\n      type: string\r\n    ExtensionList:\r\n      description: Data model for the complex type ExtensionList\r\n      properties:\r\n        extension:\r\n          description: Number of Extension elements\r\n          items:\r\n            $ref: '#/components/schemas/Extension'\r\n          maxItems: 16\r\n          minItems: 1\r\n          type: array\r\n      required:\r\n        - extension\r\n      title: ExtensionList\r\n      type: object\r\n    ExtensionValue:\r\n      description: Extension value.\r\n      maxLength: 128\r\n      minLength: 1\r\n      title: ExtensionValue\r\n      type: string\r\n    FirstName:\r\n      description: First name of the Party (Name Type).\r\n      example: Henrik\r\n      maxLength: 128\r\n      minLength: 1\r\n      pattern: ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$\r\n      title: FirstName\r\n      type: string\r\n    FspId:\r\n      description: FSP identifier.\r\n      maxLength: 32\r\n      minLength: 1\r\n      title: FspId\r\n      type: string\r\n    IndividualQuote:\r\n      description: Data model for individual quote in a bulk quote request.\r\n      properties:\r\n        amount:\r\n          $ref: '#/components/schemas/money'\r\n        amountType:\r\n          $ref: '#/components/schemas/amountType'\r\n        currency:\r\n          $ref: '#/components/schemas/currency'\r\n        feesAmount:\r\n          $ref: '#/components/schemas/money'\r\n        feesCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n        initiator:\r\n          $ref: '#/components/schemas/initiator'\r\n        initiatorType:\r\n          $ref: '#/components/schemas/initiatorType'\r\n        note:\r\n          description: An optional note associated with the quote.\r\n          maxLength: 128\r\n          minLength: 1\r\n          type: string\r\n        quoteId:\r\n          $ref: '#/components/schemas/quoteId'\r\n        to:\r\n          $ref: '#/components/schemas/transferParty'\r\n        transactionId:\r\n          $ref: '#/components/schemas/transactionId'\r\n        transactionType:\r\n          $ref: '#/components/schemas/transactionType'\r\n      required:\r\n        - quoteId\r\n        - transactionId\r\n        - to\r\n        - amountType\r\n        - amount\r\n        - currency\r\n        - transactionType\r\n        - initiator\r\n        - initiatorType\r\n      type: object\r\n    IndividualQuoteResultFailed:\r\n      description: Data model for failed individual quote in a bulk quote response.\r\n      properties:\r\n        errorResponse:\r\n          $ref: '#/components/schemas/errorResponse'\r\n        quoteId:\r\n          $ref: '#/components/schemas/quoteId'\r\n      required:\r\n        - quoteId\r\n        - errorResponse\r\n      type: object\r\n    IndividualQuoteResultSuccess:\r\n      description: Data model for successful individual quote in a bulk quote response.\r\n      properties:\r\n        payeeFspCommissionAmount:\r\n          $ref: '#/components/schemas/money'\r\n        payeeFspCommissionAmountCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n        payeeFspFeeAmount:\r\n          $ref: '#/components/schemas/money'\r\n        payeeFspFeeAmountCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n        payeeReceiveAmount:\r\n          $ref: '#/components/schemas/money'\r\n        payeeReceiveAmountCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n        quoteId:\r\n          $ref: '#/components/schemas/quoteId'\r\n        transferAmount:\r\n          $ref: '#/components/schemas/money'\r\n        transferAmountCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n      required:\r\n        - quoteId\r\n      type: object\r\n    IndividualTransfer:\r\n      description: Data model for individual transfer in a bulk transfer request.\r\n      properties:\r\n        amount:\r\n          $ref: '#/components/schemas/money'\r\n        amountType:\r\n          $ref: '#/components/schemas/amountType'\r\n        currency:\r\n          $ref: '#/components/schemas/currency'\r\n        feesAmount:\r\n          $ref: '#/components/schemas/money'\r\n        feesCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n        initiator:\r\n          $ref: '#/components/schemas/initiator'\r\n        initiatorType:\r\n          $ref: '#/components/schemas/initiatorType'\r\n        note:\r\n          description: An optional note associated with the quote.\r\n          maxLength: 128\r\n          minLength: 1\r\n          type: string\r\n        to:\r\n          $ref: '#/components/schemas/transferParty'\r\n        transactionType:\r\n          $ref: '#/components/schemas/transactionType'\r\n        transferId:\r\n          $ref: '#/components/schemas/transferId'\r\n      required:\r\n        - transferId\r\n        - amount\r\n        - currency\r\n      type: object\r\n    IndividualTransferResult:\r\n      description: Data model for individual transfer in a bulk transfer response.\r\n      properties:\r\n        errorResponse:\r\n          $ref: '#/components/schemas/errorResponse'\r\n        extensionList:\r\n          $ref: '#/components/schemas/extensionList'\r\n        transferId:\r\n          $ref: '#/components/schemas/transferId'\r\n      required:\r\n        - transferId\r\n      type: object\r\n    LastName:\r\n      description: Last name of the Party (Name Type).\r\n      example: Karlsson\r\n      maxLength: 128\r\n      minLength: 1\r\n      pattern: ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$\r\n      title: LastName\r\n      type: string\r\n    MerchantClassificationCode:\r\n      description: A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc.\r\n      pattern: ^[\\d]{1,4}$\r\n      title: MerchantClassificationCode\r\n      type: string\r\n    MiddleName:\r\n      description: Middle name of the Party (Name Type).\r\n      example: Johannes\r\n      maxLength: 128\r\n      minLength: 1\r\n      pattern: ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$\r\n      title: MiddleName\r\n      type: string\r\n    Party:\r\n      description: Data model for the complex type Party.\r\n      properties:\r\n        merchantClassificationCode:\r\n          $ref: '#/components/schemas/MerchantClassificationCode'\r\n        name:\r\n          $ref: '#/components/schemas/PartyName'\r\n        partyIdInfo:\r\n          $ref: '#/components/schemas/PartyIdInfo'\r\n        personalInfo:\r\n          $ref: '#/components/schemas/PartyPersonalInfo'\r\n      required:\r\n        - partyIdInfo\r\n      title: Party\r\n      type: object\r\n    PartyComplexName:\r\n      description: Data model for the complex type PartyComplexName.\r\n      properties:\r\n        displayName:\r\n          description: Display name of the sender if known\r\n          type: string\r\n        firstName:\r\n          $ref: '#/components/schemas/FirstName'\r\n        idSubValue:\r\n          description: The sub identifier string used to identify the sender\r\n          type: string\r\n        idType:\r\n          $ref: '#/components/schemas/idType'\r\n        idValue:\r\n          description: The identifier string used to identify the sender\r\n          type: string\r\n        lastName:\r\n          $ref: '#/components/schemas/LastName'\r\n        middleName:\r\n          $ref: '#/components/schemas/MiddleName'\r\n        type:\r\n          $ref: '#/components/schemas/payerType'\r\n      title: PartyComplexName\r\n      type: object\r\n    PartyIdInfo:\r\n      description: Data model for the complex type PartyIdInfo.\r\n      properties:\r\n        extensionList:\r\n          $ref: '#/components/schemas/ExtensionList'\r\n        fspId:\r\n          $ref: '#/components/schemas/FspId'\r\n        partyIdType:\r\n          $ref: '#/components/schemas/PartyIdType'\r\n        partyIdentifier:\r\n          $ref: '#/components/schemas/PartyIdentifier'\r\n        partySubIdOrType:\r\n          $ref: '#/components/schemas/PartySubIdOrType'\r\n      required:\r\n        - partyIdType\r\n        - partyIdentifier\r\n      title: PartyIdInfo\r\n      type: object\r\n    PartyIdType:\r\n      description: |\r\n        This is a variant based on FSPIOP `PartyIdType` specification.\r\n        Main difference being the CONSENT and THIRD_PARTY_LINK enums.\r\n\r\n        Below are the allowed values for the enumeration.\r\n        - MSISDN - An MSISDN (Mobile Station International Subscriber Directory\r\n        Number, that is, the phone number) is used as reference to a participant.\r\n        The MSISDN identifier should be in international format according to the\r\n        [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).\r\n        Optionally, the MSISDN may be prefixed by a single plus sign, indicating the\r\n        international prefix.\r\n        - EMAIL - An email is used as reference to a\r\n        participant. The format of the email should be according to the informational\r\n        [RFC 3696](https://tools.ietf.org/html/rfc3696).\r\n        - PERSONAL_ID - A personal identifier is used as reference to a participant.\r\n        Examples of personal identification are passport number, birth certificate\r\n        number, and national registration number. The identifier number is added in\r\n        the PartyIdentifier element. The personal identifier type is added in the\r\n        PartySubIdOrType element.\r\n        - BUSINESS - A specific Business (for example, an organization or a company)\r\n        is used as reference to a participant. The BUSINESS identifier can be in any\r\n        format. To make a transaction connected to a specific username or bill number\r\n        in a Business, the PartySubIdOrType element should be used.\r\n        - DEVICE - A specific device (for example, a POS or ATM) ID connected to a\r\n        specific business or organization is used as reference to a Party.\r\n        For referencing a specific device under a specific business or organization,\r\n        use the PartySubIdOrType element.\r\n        - ACCOUNT_ID - A bank account number or FSP account ID should be used as\r\n        reference to a participant. The ACCOUNT_ID identifier can be in any format,\r\n        as formats can greatly differ depending on country and FSP.\r\n        - IBAN - A bank account number or FSP account ID is used as reference to a\r\n        participant. The IBAN identifier can consist of up to 34 alphanumeric\r\n        characters and should be entered without whitespace.\r\n        - ALIAS An alias is used as reference to a participant. The alias should be\r\n        created in the FSP as an alternative reference to an account owner.\r\n        Another example of an alias is a username in the FSP system.\r\n        The ALIAS identifier can be in any format. It is also possible to use the\r\n        PartySubIdOrType element for identifying an account under an Alias defined\r\n        by the PartyIdentifier.\r\n        - CONSENT - TBD\r\n        - THIRD_PARTY_LINK - TBD\r\n      enum:\r\n        - MSISDN\r\n        - EMAIL\r\n        - PERSONAL_ID\r\n        - BUSINESS\r\n        - DEVICE\r\n        - ACCOUNT_ID\r\n        - IBAN\r\n        - ALIAS\r\n        - CONSENT\r\n        - THIRD_PARTY_LINK\r\n      example: PERSONAL_ID\r\n      title: PartyIdType\r\n      type: string\r\n    PartyIdentifier:\r\n      description: Identifier of the Party.\r\n      example: '16135551212'\r\n      maxLength: 128\r\n      minLength: 1\r\n      title: PartyIdentifier\r\n      type: string\r\n    PartyName:\r\n      description: Name of the Party. Could be a real name or a nickname.\r\n      maxLength: 128\r\n      minLength: 1\r\n      title: PartyName\r\n      type: string\r\n    PartyPersonalInfo:\r\n      description: Data model for the complex type PartyPersonalInfo.\r\n      properties:\r\n        complexName:\r\n          $ref: '#/components/schemas/PartyComplexName'\r\n        dateOfBirth:\r\n          $ref: '#/components/schemas/DateOfBirth'\r\n      title: PartyPersonalInfo\r\n      type: object\r\n    PartySubIdOrType:\r\n      description: Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType.\r\n      maxLength: 128\r\n      minLength: 1\r\n      title: PartySubIdOrType\r\n      type: string\r\n    amountCurrency:\r\n      description: Object containing Amount and Currency of the transfer.\r\n      properties:\r\n        amount:\r\n          $ref: '#/components/schemas/money'\r\n        currency:\r\n          $ref: '#/components/schemas/currency'\r\n      required:\r\n        - amount\r\n        - currency\r\n      type: object\r\n    amountType:\r\n      enum:\r\n        - SEND\r\n        - RECEIVE\r\n      type: string\r\n    bulkQuoteId:\r\n      description: A Mojaloop API bulk quote identifier (UUID).\r\n      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\r\n      type: string\r\n    bulkQuoteRequest:\r\n      description: A request for a bulk quote.\r\n      properties:\r\n        bulkQuoteId:\r\n          $ref: '#/components/schemas/bulkQuoteId'\r\n        expiration:\r\n          $ref: '#/components/schemas/timestamp'\r\n        from:\r\n          $ref: '#/components/schemas/transferParty'\r\n        geoCode:\r\n          $ref: '#/components/schemas/geoCode'\r\n        individualQuotes:\r\n          items:\r\n            $ref: '#/components/schemas/IndividualQuote'\r\n          maxItems: 1000\r\n          minItems: 1\r\n          type: array\r\n      required:\r\n        - bulkQuoteId\r\n        - from\r\n        - individualQuotes\r\n      type: object\r\n    bulkQuoteResponse:\r\n      description: A response to a request for a bulk quote.\r\n      properties:\r\n        bulkQuoteId:\r\n          $ref: '#/components/schemas/bulkQuoteId'\r\n        expiration:\r\n          $ref: '#/components/schemas/timestamp'\r\n        individualQuoteResults:\r\n          description: Fees for each individual transaction, if any of them are charged per transaction.\r\n          items:\r\n            oneOf:\r\n              - $ref: '#/components/schemas/IndividualQuoteResultSuccess'\r\n              - $ref: '#/components/schemas/IndividualQuoteResultFailed'\r\n          maxItems: 1000\r\n          minItems: 1\r\n          type: array\r\n      required:\r\n        - bulkQuoteId\r\n        - individualQuoteResults\r\n      type: object\r\n    bulkTransferId:\r\n      description: A Mojaloop API transfer identifier (UUID).\r\n      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\r\n      type: string\r\n    bulkTransferRequest:\r\n      properties:\r\n        bulkQuote:\r\n          $ref: '#/components/schemas/bulkQuoteResponse'\r\n        bulkTransferId:\r\n          $ref: '#/components/schemas/bulkTransferId'\r\n        from:\r\n          $ref: '#/components/schemas/transferParty'\r\n        individualTransfers:\r\n          items:\r\n            $ref: '#/components/schemas/IndividualTransfer'\r\n          maxItems: 1000\r\n          minItems: 1\r\n          type: array\r\n      required:\r\n        - bulkTransferId\r\n        - individualTransfers\r\n      type: object\r\n    bulkTransferResponse:\r\n      properties:\r\n        bulkTransferId:\r\n          $ref: '#/components/schemas/bulkTransferId'\r\n        homeTransactionId:\r\n          description: Transaction ID from the DFSP backend, used to reconcile transactions between the switch and DFSP backend systems.\r\n          type: string\r\n        individualTransferResults:\r\n          items:\r\n            $ref: '#/components/schemas/IndividualTransferResult'\r\n          maxItems: 1000\r\n          minItems: 1\r\n          type: array\r\n      required:\r\n        - homeTransactionId\r\n      type: object\r\n    currency:\r\n      enum:\r\n        - AED\r\n        - AFN\r\n        - ALL\r\n        - AMD\r\n        - ANG\r\n        - AOA\r\n        - ARS\r\n        - AUD\r\n        - AWG\r\n        - AZN\r\n        - BAM\r\n        - BBD\r\n        - BDT\r\n        - BGN\r\n        - BHD\r\n        - BIF\r\n        - BMD\r\n        - BND\r\n        - BOB\r\n        - BRL\r\n        - BSD\r\n        - BTN\r\n        - BWP\r\n        - BYN\r\n        - BZD\r\n        - CAD\r\n        - CDF\r\n        - CHF\r\n        - CLP\r\n        - CNY\r\n        - COP\r\n        - CRC\r\n        - CUC\r\n        - CUP\r\n        - CVE\r\n        - CZK\r\n        - DJF\r\n        - DKK\r\n        - DOP\r\n        - DZD\r\n        - EGP\r\n        - ERN\r\n        - ETB\r\n        - EUR\r\n        - FJD\r\n        - FKP\r\n        - GBP\r\n        - GEL\r\n        - GGP\r\n        - GHS\r\n        - GIP\r\n        - GMD\r\n        - GNF\r\n        - GTQ\r\n        - GYD\r\n        - HKD\r\n        - HNL\r\n        - HRK\r\n        - HTG\r\n        - HUF\r\n        - IDR\r\n        - ILS\r\n        - IMP\r\n        - INR\r\n        - IQD\r\n        - IRR\r\n        - ISK\r\n        - JEP\r\n        - JMD\r\n        - JOD\r\n        - JPY\r\n        - KES\r\n        - KGS\r\n        - KHR\r\n        - KMF\r\n        - KPW\r\n        - KRW\r\n        - KWD\r\n        - KYD\r\n        - KZT\r\n        - LAK\r\n        - LBP\r\n        - LKR\r\n        - LRD\r\n        - LSL\r\n        - LYD\r\n        - MAD\r\n        - MDL\r\n        - MGA\r\n        - MKD\r\n        - MMK\r\n        - MNT\r\n        - MOP\r\n        - MRO\r\n        - MUR\r\n        - MVR\r\n        - MWK\r\n        - MXN\r\n        - MYR\r\n        - MZN\r\n        - NAD\r\n        - NGN\r\n        - NIO\r\n        - NOK\r\n        - NPR\r\n        - NZD\r\n        - OMR\r\n        - PAB\r\n        - PEN\r\n        - PGK\r\n        - PHP\r\n        - PKR\r\n        - PLN\r\n        - PYG\r\n        - QAR\r\n        - RON\r\n        - RSD\r\n        - RUB\r\n        - RWF\r\n        - SAR\r\n        - SBD\r\n        - SCR\r\n        - SDG\r\n        - SEK\r\n        - SGD\r\n        - SHP\r\n        - SLL\r\n        - SOS\r\n        - SPL\r\n        - SRD\r\n        - STD\r\n        - SVC\r\n        - SYP\r\n        - SZL\r\n        - THB\r\n        - TJS\r\n        - TMT\r\n        - TND\r\n        - TOP\r\n        - TRY\r\n        - TTD\r\n        - TVD\r\n        - TWD\r\n        - TZS\r\n        - UAH\r\n        - UGX\r\n        - USD\r\n        - UYU\r\n        - UZS\r\n        - VEF\r\n        - VND\r\n        - VUV\r\n        - WST\r\n        - XAF\r\n        - XCD\r\n        - XDR\r\n        - XOF\r\n        - XPF\r\n        - XTS\r\n        - XXX\r\n        - YER\r\n        - ZAR\r\n        - ZMW\r\n        - ZWD\r\n      maxLength: 3\r\n      minLength: 3\r\n      type: string\r\n    dateOfBirth:\r\n      description: Date of birth in the form YYYY-MM-DD.\r\n      pattern: ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\r\n      type: string\r\n    errorCode:\r\n      description: |\r\n        The API data type errorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error.\r\n      pattern: ^[1-9]\\d{3}$\r\n      title: ErrorCode\r\n      type: string\r\n    errorDescription:\r\n      description: Error description string.\r\n      maxLength: 128\r\n      minLength: 1\r\n      title: ErrorDescription\r\n      type: string\r\n    errorInformation:\r\n      description: A Mojaloop API error information construct.\r\n      properties:\r\n        errorCode:\r\n          $ref: '#/components/schemas/errorCode'\r\n          description: Specific error number.\r\n        errorDescription:\r\n          $ref: '#/components/schemas/errorDescription'\r\n          description: Error description string.\r\n        extensionList:\r\n          $ref: '#/components/schemas/extensionListComplex'\r\n          description: Optional list of extensions, specific to deployment.\r\n      required:\r\n        - errorCode\r\n        - errorDescription\r\n      title: ErrorInformation\r\n      type: object\r\n    errorResponse:\r\n      properties:\r\n        message:\r\n          description: Error message text\r\n          type: string\r\n        statusCode:\r\n          description: |\r\n            Backend error code from FSP. Ideally, statusCode is FSPIOP conforming. SDK will use status code to retrieve an FSPIOP error with the same code.\r\n            Otherwise, a suitable generic FSPIOP will be used with the errorResponse in the FSPIOP error message.\r\n          type: string\r\n      type: object\r\n    extensionItem:\r\n      properties:\r\n        key:\r\n          maxLength: 32\r\n          minLength: 1\r\n          type: string\r\n        value:\r\n          maxLength: 128\r\n          minLength: 1\r\n          type: string\r\n      type: object\r\n    extensionList:\r\n      items:\r\n        $ref: '#/components/schemas/extensionItem'\r\n      maxItems: 16\r\n      minItems: 0\r\n      type: array\r\n    extensionListComplex:\r\n      description: Data model for the complex type ExtensionList.\r\n      properties:\r\n        extension:\r\n          description: Number of Extension elements.\r\n          items:\r\n            $ref: '#/components/schemas/extensionItem'\r\n          maxItems: 16\r\n          minItems: 1\r\n          type: array\r\n      required:\r\n        - extension\r\n      type: object\r\n    fspId:\r\n      description: FSP identifier.\r\n      maxLength: 32\r\n      minLength: 1\r\n      type: string\r\n    fulfilNotification:\r\n      description: PUT /transfers/{transferId} object.\r\n      properties:\r\n        currentState:\r\n          $ref: '#/components/schemas/transferStatus'\r\n        direction:\r\n          enum:\r\n            - INBOUND\r\n          type: string\r\n        finalNotification:\r\n          properties:\r\n            completedTimestamp:\r\n              $ref: '#/components/schemas/timestamp'\r\n              description: Time and date when the transaction was completed.\r\n              example: '2020-05-19T08:38:08.699-04:00'\r\n            extensionList:\r\n              $ref: '#/components/schemas/extensionList'\r\n              description: Optional extension, specific to deployment.\r\n            transferState:\r\n              $ref: '#/components/schemas/transferState'\r\n              description: State of the transfer.\r\n              example: COMMITTED\r\n          required:\r\n            - completedTimestamp\r\n            - transferState\r\n          type: object\r\n        fulfil:\r\n          properties:\r\n            body:\r\n              type: object\r\n            headers:\r\n              type: object\r\n          type: object\r\n        initiatedTimestamp:\r\n          $ref: '#/components/schemas/timestamp'\r\n        lastError:\r\n          $ref: '#/components/schemas/transferError'\r\n        prepare:\r\n          properties:\r\n            body:\r\n              type: object\r\n            headers:\r\n              type: object\r\n          type: object\r\n        quote:\r\n          properties:\r\n            fulfilment:\r\n              type: string\r\n            internalRequest:\r\n              type: object\r\n            mojaloopResponse:\r\n              type: object\r\n            request:\r\n              type: object\r\n            response:\r\n              type: object\r\n          type: object\r\n        quoteRequest:\r\n          properties:\r\n            body:\r\n              type: object\r\n            headers:\r\n              type: object\r\n          type: object\r\n        quoteResponse:\r\n          properties:\r\n            body:\r\n              type: object\r\n            headers:\r\n              type: object\r\n          type: object\r\n        transferId:\r\n          $ref: '#/components/schemas/transferId'\r\n      title: TransfersIDPatchResponse\r\n      type: object\r\n    generalError:\r\n      description: This object may represent a number of different error object types and so its properties may vary significantly.\r\n      type: object\r\n    geoCode:\r\n      description: Indicates the geographic location from where the transaction was initiated.\r\n      properties:\r\n        latitude:\r\n          $ref: '#/components/schemas/latitude'\r\n        longitude:\r\n          $ref: '#/components/schemas/longitude'\r\n      required:\r\n        - latitude\r\n        - longitude\r\n      type: object\r\n    idSubValue:\r\n      maxLength: 128\r\n      minLength: 1\r\n      type: string\r\n    idType:\r\n      enum:\r\n        - MSISDN\r\n        - ACCOUNT_NO\r\n        - EMAIL\r\n        - PERSONAL_ID\r\n        - BUSINESS\r\n        - DEVICE\r\n        - ACCOUNT_ID\r\n        - IBAN\r\n        - ALIAS\r\n      type: string\r\n    idValue:\r\n      description: Identifier of the party.\r\n      maxLength: 128\r\n      minLength: 1\r\n      type: string\r\n    ilpFulfilment:\r\n      description: Fulfilment that must be attached to the transfer by the Payee.\r\n      example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8\r\n      maxLength: 48\r\n      pattern: ^[A-Za-z0-9-_]{43}$\r\n      title: ilpFulfilment\r\n      type: string\r\n    ilpPacketData:\r\n      description: Object containing transfer object.\r\n      properties:\r\n        amount:\r\n          $ref: '#/components/schemas/amountCurrency'\r\n          description: Amount and currency of the transaction\r\n        payee:\r\n          $ref: '#/components/schemas/Party'\r\n          description: Information about the Payee in the proposed financial transaction.\r\n        payer:\r\n          $ref: '#/components/schemas/Party'\r\n          description: Information about the Payer in the proposed financial transaction.\r\n        quoteId:\r\n          $ref: '#/components/schemas/quoteId'\r\n        transactionId:\r\n          $ref: '#/components/schemas/transactionId'\r\n          description: Identifier for the transaction, decided by the Payer FSP during the creation of the quote.\r\n        transactionType:\r\n          $ref: '#/components/schemas/transactionTypeObject'\r\n          description: Information about type of transaction and initiator.\r\n      required:\r\n        - quoteId\r\n        - transactionId\r\n        - payer\r\n        - payee\r\n        - amount\r\n        - transactionType\r\n      type: object\r\n    initiator:\r\n      enum:\r\n        - PAYER\r\n        - PAYEE\r\n      type: string\r\n    initiatorType:\r\n      enum:\r\n        - CONSUMER\r\n        - AGENT\r\n        - BUSINESS\r\n        - DEVICE\r\n      type: string\r\n    latitude:\r\n      description: The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.\r\n      pattern: ^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$\r\n      type: string\r\n    longitude:\r\n      description: The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.\r\n      pattern: ^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$\r\n      type: string\r\n    mojaloopError:\r\n      properties:\r\n        errorInformation:\r\n          $ref: '#/components/schemas/errorInformation'\r\n      type: object\r\n    money:\r\n      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\r\n      type: string\r\n    otpDetails:\r\n      properties:\r\n        otpValue:\r\n          description: OTP value.\r\n          type: string\r\n      required:\r\n        - otpValue\r\n      type: object\r\n    participantsResponse:\r\n      properties:\r\n        fspId:\r\n          $ref: '#/components/schemas/fspId'\r\n      type: object\r\n    payerType:\r\n      enum:\r\n        - CONSUMER\r\n        - AGENT\r\n        - BUSINESS\r\n        - DEVICE\r\n      type: string\r\n    quoteId:\r\n      description: A Mojaloop API quote identifier (UUID).\r\n      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\r\n      type: string\r\n    quoteRequest:\r\n      description: A request for a quote for transfer from the DFSP backend.\r\n      properties:\r\n        amount:\r\n          $ref: '#/components/schemas/money'\r\n          description: Depending on `amountType`. If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive any fees. The amount is not updated by any of the participating entities.\r\n        amountType:\r\n          $ref: '#/components/schemas/amountType'\r\n          description: SEND for send amount, RECEIVE for receive amount.\r\n        currency:\r\n          $ref: '#/components/schemas/currency'\r\n        expiration:\r\n          $ref: '#/components/schemas/timestamp'\r\n          description: An optional deadline for responding to the quote request.\r\n        extensionList:\r\n          $ref: '#/components/schemas/extensionList'\r\n        feesAmount:\r\n          $ref: '#/components/schemas/money'\r\n          description: The fees in the transaction. The fees element should be empty if fees should be non-disclosed. The fees element should be non-empty if fees should be disclosed.\r\n        feesCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n        from:\r\n          $ref: '#/components/schemas/transferParty'\r\n          description: Information about the Payer in the proposed financial transaction.\r\n        geoCode:\r\n          $ref: '#/components/schemas/geoCode'\r\n          description: Longitude and Latitude of the initiating party. Can be used to detect fraud.\r\n        initiator:\r\n          $ref: '#/components/schemas/initiator'\r\n          description: Specifies if the initiator of the transfer is the Payer or Payee.\r\n        initiatorType:\r\n          $ref: '#/components/schemas/initiatorType'\r\n          description: Specifies the type of the transaction initiator.\r\n        note:\r\n          description: An optional note associated with the requested transfer.\r\n          maxLength: 128\r\n          minLength: 1\r\n          type: string\r\n        quoteId:\r\n          $ref: '#/components/schemas/quoteId'\r\n        to:\r\n          $ref: '#/components/schemas/transferParty'\r\n          description: Information about the Payee in the proposed financial transaction.\r\n        transactionId:\r\n          $ref: '#/components/schemas/transactionId'\r\n          description: Identifier for the transaction, decided by the Payer FSP during the creation of the quote.\r\n        transactionType:\r\n          $ref: '#/components/schemas/transactionType'\r\n          description: Type of transaction for which the quote is requested.\r\n      required:\r\n        - quoteId\r\n        - transactionId\r\n        - to\r\n        - from\r\n        - amountType\r\n        - amount\r\n        - currency\r\n        - transactionType\r\n        - initiator\r\n        - initiatorType\r\n      type: object\r\n    quoteResponse:\r\n      description: A response to a request for a quote.\r\n      properties:\r\n        expiration:\r\n          $ref: '#/components/schemas/timestamp'\r\n          description: Timestamp specifying the validity period of the quotation.\r\n        extensionList:\r\n          $ref: '#/components/schemas/extensionList'\r\n        geoCode:\r\n          $ref: '#/components/schemas/geoCode'\r\n          description: Longitude and Latitude of the Payee. Can be used to detect fraud.\r\n        payeeFspCommissionAmount:\r\n          $ref: '#/components/schemas/money'\r\n          description: Transaction commission from the Payee FSP.\r\n        payeeFspCommissionAmountCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n          description: Currency of the `payeeFspCommissionAmount`.\r\n        payeeFspFeeAmount:\r\n          $ref: '#/components/schemas/money'\r\n          description: Payee FSP’s part of the transaction fee.\r\n        payeeFspFeeAmountCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n          description: The currency of the `payeeFspFeeAmount`.\r\n        payeeReceiveAmount:\r\n          $ref: '#/components/schemas/money'\r\n          description: The amount that the Payee should receive in the end-to-end transaction. Optional as the Payee FSP might not want to disclose any optional Payee fees.\r\n        payeeReceiveAmountCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n          description: The currency of the `payeeReceiveAmount`.\r\n        quoteId:\r\n          $ref: '#/components/schemas/quoteId'\r\n          description: ID of the quote that this response relates to.\r\n        transactionId:\r\n          $ref: '#/components/schemas/transactionId'\r\n          description: Identifier for the transaction, decided by the Payer FSP during the creation of the quote.\r\n        transferAmount:\r\n          $ref: '#/components/schemas/money'\r\n          description: The amount of money that the Payer FSP should transfer to the Payee FSP.\r\n        transferAmountCurrency:\r\n          $ref: '#/components/schemas/currency'\r\n          description: The currency of the `transferAmount`.\r\n      required:\r\n        - quoteId\r\n        - transactionId\r\n        - transferAmount\r\n        - transferAmountCurrency\r\n      type: object\r\n    scenario:\r\n      enum:\r\n        - TRANSFER\r\n      type: string\r\n    timestamp:\r\n      description: An ISO-8601 formatted timestamp.\r\n      pattern: ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\r\n      type: string\r\n    transactionId:\r\n      description: ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.\r\n      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\r\n      type: string\r\n    transactionRequest:\r\n      description: A request for a pull based transfer.\r\n      properties:\r\n        amount:\r\n          $ref: '#/components/schemas/money'\r\n        currency:\r\n          $ref: '#/components/schemas/currency'\r\n        expiration:\r\n          $ref: '#/components/schemas/timestamp'\r\n        from:\r\n          $ref: '#/components/schemas/transferParty'\r\n        geoCode:\r\n          $ref: '#/components/schemas/geoCode'\r\n        initiator:\r\n          $ref: '#/components/schemas/initiator'\r\n        initiatorType:\r\n          $ref: '#/components/schemas/initiatorType'\r\n        note:\r\n          description: An optional note associated with the requested transfer.\r\n          maxLength: 128\r\n          minLength: 1\r\n          type: string\r\n        to:\r\n          $ref: '#/components/schemas/transferParty'\r\n        transactionRequestId:\r\n          $ref: '#/components/schemas/transactionRequestId'\r\n        transactionType:\r\n          $ref: '#/components/schemas/transactionType'\r\n      required:\r\n        - transactionRequestId\r\n        - to\r\n        - from\r\n        - amount\r\n        - currency\r\n        - transactionType\r\n        - initiator\r\n        - initiatorType\r\n      type: object\r\n    transactionRequestId:\r\n      description: A Mojaloop API transaction request identifier (UUID).\r\n      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\r\n      type: string\r\n    transactionRequestResponse:\r\n      description: A response to a request for a quote.\r\n      properties:\r\n        transactionId:\r\n          $ref: '#/components/schemas/transactionId'\r\n        transferAmount:\r\n          $ref: '#/components/schemas/transactionRequestState'\r\n      required:\r\n        - transactionId\r\n        - transactionRequestState\r\n      type: object\r\n    transactionRequestState:\r\n      enum:\r\n        - RECEIVED\r\n        - PENDING\r\n        - ACCEPTED\r\n        - REJECTED\r\n      type: string\r\n    transactionType:\r\n      enum:\r\n        - TRANSFER\r\n        - DEPOSIT\r\n        - PAYMENT\r\n      type: string\r\n    transactionTypeObject:\r\n      description: Object containing transfer object.\r\n      properties:\r\n        initiator:\r\n          $ref: '#/components/schemas/initiator'\r\n        initiatorType:\r\n          $ref: '#/components/schemas/initiatorType'\r\n          description: Specifies the type of the transaction initiator.\r\n        scenario:\r\n          $ref: '#/components/schemas/scenario'\r\n      required:\r\n        - scenario\r\n        - initiator\r\n        - initiatorType\r\n      type: object\r\n    transferDetailsResponse:\r\n      properties:\r\n        amount:\r\n          $ref: '#/components/schemas/money'\r\n        amountType:\r\n          $ref: '#/components/schemas/amountType'\r\n        currency:\r\n          $ref: '#/components/schemas/currency'\r\n        extensions:\r\n          $ref: '#/components/schemas/extensionList'\r\n        from:\r\n          $ref: '#/components/schemas/transferParty'\r\n        homeTransactionId:\r\n          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.\r\n          type: string\r\n        note:\r\n          maxLength: 128\r\n          type: string\r\n        timestamp:\r\n          $ref: '#/components/schemas/timestamp'\r\n        to:\r\n          $ref: '#/components/schemas/transferParty'\r\n        transactionType:\r\n          $ref: '#/components/schemas/transactionType'\r\n        transferState:\r\n          $ref: '#/components/schemas/transferState'\r\n      required:\r\n        - homeTransactionId\r\n        - from\r\n        - to\r\n        - amountType\r\n        - currency\r\n        - amount\r\n        - transferState\r\n        - transactionType\r\n        - timestamp\r\n      type: object\r\n    transferError:\r\n      description: This object represents a Mojaloop API error received at any time during the transfer process.\r\n      properties:\r\n        httpStatusCode:\r\n          description: The HTTP status code returned to the caller. This is the same as the actual HTTP status code returned with the response.\r\n          type: integer\r\n        mojaloopError:\r\n          $ref: '#/components/schemas/mojaloopError'\r\n          description: If a transfer process results in an error callback during the asynchronous Mojaloop API exchange, this property will contain the underlying Mojaloop API error object.\r\n      type: object\r\n    transferId:\r\n      description: A Mojaloop API transfer identifier (UUID).\r\n      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\r\n      type: string\r\n    transferParty:\r\n      properties:\r\n        dateOfBirth:\r\n          $ref: '#/components/schemas/dateOfBirth'\r\n        displayName:\r\n          description: Display name of the sender, if known.\r\n          type: string\r\n        extensionList:\r\n          $ref: '#/components/schemas/extensionList'\r\n        firstName:\r\n          description: Party first name.\r\n          type: string\r\n        fspId:\r\n          description: Mojaloop scheme FSPID of the DFSP which owns the party account.\r\n          type: string\r\n        idSubValue:\r\n          $ref: '#/components/schemas/idSubValue'\r\n        idType:\r\n          $ref: '#/components/schemas/idType'\r\n        idValue:\r\n          description: The identifier string used to identify the sender.\r\n          type: string\r\n        lastName:\r\n          description: Party last name.\r\n          type: string\r\n        merchantClassificationCode:\r\n          description: Up to 4 digits specifying the sender's merchant classification, if known and applicable.\r\n          type: string\r\n        middleName:\r\n          description: Party middle name.\r\n          type: string\r\n        type:\r\n          $ref: '#/components/schemas/payerType'\r\n      required:\r\n        - idType\r\n        - idValue\r\n      type: object\r\n    transferRequest:\r\n      properties:\r\n        amount:\r\n          $ref: '#/components/schemas/money'\r\n        amountType:\r\n          $ref: '#/components/schemas/amountType'\r\n        currency:\r\n          $ref: '#/components/schemas/currency'\r\n        from:\r\n          $ref: '#/components/schemas/transferParty'\r\n        ilpPacket:\r\n          properties:\r\n            data:\r\n              $ref: '#/components/schemas/ilpPacketData'\r\n          required:\r\n            - data\r\n          type: object\r\n        note:\r\n          maxLength: 128\r\n          type: string\r\n        quote:\r\n          $ref: '#/components/schemas/quoteResponse'\r\n        quoteRequestExtensions:\r\n          $ref: '#/components/schemas/extensionList'\r\n        to:\r\n          $ref: '#/components/schemas/transferParty'\r\n        transactionType:\r\n          $ref: '#/components/schemas/transactionType'\r\n        transferId:\r\n          $ref: '#/components/schemas/transferId'\r\n      required:\r\n        - transferId\r\n        - quote\r\n        - from\r\n        - to\r\n        - amountType\r\n        - currency\r\n        - amount\r\n        - transactionType\r\n        - ilpPacket\r\n      type: object\r\n    transferResponse:\r\n      properties:\r\n        completedTimestamp:\r\n          $ref: '#/components/schemas/timestamp'\r\n          description: Completed timestamp from the DFSP backend, used for testing purposes to inject a given completed timestamp via a rule.\r\n          example: '2020-05-19T08:38:08.699-04:00'\r\n        fulfilment:\r\n          $ref: '#/components/schemas/ilpFulfilment'\r\n          description: Fulfilment from the DFSP backend, used for testing purposes to inject an invalid fulfilment via a rule.\r\n        homeTransactionId:\r\n          description: Transaction ID from the DFSP backend, used to reconcile transactions between the Switch and DFSP backend systems.\r\n          type: string\r\n        transferState:\r\n          $ref: '#/components/schemas/transferState'\r\n          description: Transfer state from the DFSP backend, used for testing purposes to inject an desired transfer state via a rule.\r\n          example: ABORTED\r\n      required:\r\n        - homeTransactionId\r\n      type: object\r\n    transferState:\r\n      description: |\r\n        Below are the allowed values for the enumeration - RECEIVED DFSP has received the transfer. - RESERVED DFSP has reserved the transfer. - COMMITTED DFSP has successfully performed the transfer. - ABORTED DFSP has aborted the transfer due a rejection or failure to perform the transfer.\r\n      enum:\r\n        - RECEIVED\r\n        - RESERVED\r\n        - COMMITTED\r\n        - ABORTED\r\n      type: string\r\n    transferStatus:\r\n      enum:\r\n        - ERROR_OCCURRED\r\n        - WAITING_FOR_PARTY_ACCEPTANCE\r\n        - WAITING_FOR_QUOTE_ACCEPTANCE\r\n        - COMPLETED\r\n      type: string\r\n",
			"canonicalURL": "/github.com/mojaloop/sdk-scheme-adapter@933a6c338dc204e1c38dff0439c6086672f4d581/-/blob/test/func/config/ttk-ttksim3/spec_files/api_definitions/mojaloop_simulator_sim_1.4/api_spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mojaloop/sdk-scheme-adapter/blob/933a6c338dc204e1c38dff0439c6086672f4d581/test/func/config/ttk-ttksim3/spec_files/api_definitions/mojaloop_simulator_sim_1.4/api_spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/transfers\": post: requestBody: contents: media: \"application/json\": generate schema: field ilpPacket: field data: field payee: field personalInfo: field complexName: field firstName: string validator: pattern: regexp2: error parsing regexp: incomplete \\p{X} character escape in `^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$`"
}