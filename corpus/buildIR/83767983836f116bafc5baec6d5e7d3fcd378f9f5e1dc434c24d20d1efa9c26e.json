{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/readme/oas-examples"
		},
		"file": {
			"name": "discriminators.json",
			"size": 0,
			"path": "3.0/json/discriminators.json",
			"byteSize": 17749,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"info\": {\n    \"title\": \"Discriminator support\",\n    \"description\": \"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#discriminatorObject\",\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://httpbin.org/anything\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Quirks\"\n    }\n  ],\n  \"paths\": {\n    \"/discriminator-with-mapping\": {\n      \"patch\": {\n        \"operationId\": \"oneOfWithTopLevelDiscriminatorAndMapping\",\n        \"summary\": \"oneOf with discriminator and mapping\",\n        \"description\": \"Polymorphic `oneOf` schema with a top-level discriminator and a mapping definition.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/OptionOneNoDisc\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/OptionTwoNoDisc\"\n                  }\n                ],\n                \"discriminator\": {\n                  \"propertyName\": \"discrim\",\n                  \"mapping\": {\n                    \"Option One\": \"#/components/schemas/OptionOneNoDisc\",\n                    \"Option Two\": \"#/components/schemas/OptionTwoNoDisc\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Updated\"\n          }\n        }\n      }\n    },\n    \"/discriminator-with-no-mapping\": {\n      \"patch\": {\n        \"operationId\": \"oneOfWithTopLevelDiscriminatorNoMapping\",\n        \"summary\": \"oneOf with top-level discriminator (no mapping)\",\n        \"description\": \"Polymorphic `oneOf` schema with a top-level discriminator and **no** mapping definition.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/OptionOneNoDisc\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/OptionTwoNoDisc\"\n                  }\n                ],\n                \"discriminator\": {\n                  \"propertyName\": \"discrim\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Updated\"\n          }\n        }\n      }\n    },\n    \"/embedded-discriminator\": {\n      \"patch\": {\n        \"summary\": \"oneOf request with a nested allOf and embedded discriminator\",\n        \"description\": \"This operation contains a request schema of a `oneOf` that itself contains an `allOf` with a discriminator for the afformentioned `allOf`. This is considered an embedded discriminator.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Cat\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Dog\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Updated\"\n          }\n        }\n      }\n    },\n    \"/oneof-allof-top-level-disc\": {\n      \"patch\": {\n        \"summary\": \"oneOf request with a nested allOf and top level discriminator\",\n        \"description\": \"This operation has a `oneOf`, with a discriminator, but its `oneOf` contents contain an `allOf` where that discriminator `propertyName` is in reference to.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/CatNoDisc\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/DogNoDisc\"\n                  }\n                ],\n                \"discriminator\": {\n                  \"propertyName\": \"pet_type\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Updated\"\n          }\n        }\n      }\n    },\n    \"/nested-one-of-object-with-nested-one-of\": {\n      \"patch\": {\n        \"summary\": \"oneOf request with a nested oneOf, and embedded discriminator\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"config\": {\n                    \"oneOf\": [\n                      {\n                        \"$ref\": \"#/components/schemas/object1\"\n                      },\n                      {\n                        \"$ref\": \"#/components/schemas/object2\"\n                      },\n                      {\n                        \"oneOf\": [\n                          {\n                            \"$ref\": \"#/components/schemas/Cat\"\n                          },\n                          {\n                            \"$ref\": \"#/components/schemas/Dog\"\n                          }\n                        ]\n                      }\n                    ]\n                  }\n                },\n                \"additionalProperties\": false\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/mapping-with-duplicate-schemas\": {\n      \"patch\": {\n        \"summary\": \"Handle a schema with duplicate mapping schemas\",\n        \"description\": \"Render a schema with a discriminator, where the mapping reuses a schema more than once.\\n\u003e **Note:** the discriminator is `discrimValue`, not `discrim`.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"discrimValue\": {\n                    \"type\": \"string\",\n                    \"enum\": [\"oneA\", \"oneB\", \"oneC\", \"twoA\", \"twoB\", \"three\"]\n                  }\n                },\n                \"discriminator\": {\n                  \"propertyName\": \"discrimValue\",\n                  \"mapping\": {\n                    \"oneA\": \"#/components/schemas/OptionOneNoDisc\",\n                    \"oneB\": \"#/components/schemas/OptionOneNoDisc\",\n                    \"oneC\": \"#/components/schemas/OptionOneNoDisc\",\n                    \"twoA\": \"#/components/schemas/OptionTwoNoDisc\",\n                    \"twoB\": \"#/components/schemas/OptionTwoNoDisc\",\n                    \"three\": \"#/components/schemas/OptionThreeNoDisc\"\n                  }\n                },\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/OptionOneNoDisc\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/OptionTwoNoDisc\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/OptionThreeNoDisc\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/mapping-of-schema-names\": {\n      \"patch\": {\n        \"summary\": \"Discriminator with a schema name mapping\",\n        \"description\": \"Schema names, instead of `$ref` pointers, can be used in discriminator mappings.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/OptionOneNoDisc\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/OptionTwoNoDisc\"\n                  }\n                ],\n                \"discriminator\": {\n                  \"propertyName\": \"discrim\",\n                  \"mapping\": {\n                    \"Option One\": \"OptionOneNoDisc\",\n                    \"Option Two\": \"OptionTwoNoDisc\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Updated\"\n          }\n        }\n      }\n    },\n    \"/improper-discriminator-placement\": {\n      \"patch\": {\n        \"operationId\": \"oneOfWithImproperlyPlacedDiscriminator\",\n        \"summary\": \"oneOf with a discriminator that is referencing a property up a level\",\n        \"description\": \"This operation has a `discriminator` that's in reference to a property a level above it. **This is an improper use of discriminators.** Though this is improper, in this case we should ignore the discriminator instead of failing to render the operation.\",\n        \"tags\": [\"Quirks\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"connector_type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\"s3Import\", \"gcsImport\"]\n                  },\n                  \"connector_properties\": {\n                    \"type\": \"object\",\n                    \"oneOf\": [\n                      {\n                        \"$ref\": \"#/components/schemas/gcsImport\"\n                      },\n                      {\n                        \"$ref\": \"#/components/schemas/s3Import\"\n                      }\n                    ],\n                    \"discriminator\": {\n                      \"propertyName\": \"connector_type\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/potentially-undefined-formData\": {\n      \"post\": {\n        \"summary\": \"Handling for potentially undefined formData\",\n        \"description\": \"This operation contains a schema that at one point produced an edgecase within the form system where `formData` was `undefined`.\",\n        \"tags\": [\"Quirks\"],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/ApplicationApprovedEvent\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/ApplicationDeniedEvent\"\n                  }\n                ],\n                \"discriminator\": {\n                  \"propertyName\": \"event_type\",\n                  \"mapping\": {\n                    \"application_approved\": \"#/components/schemas/ApplicationApprovedEvent\",\n                    \"application_denied\": \"#/components/schemas/ApplicationDeniedEvent\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"requestBodies\": {\n      \"nested-one-of-ref\": {\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"config\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/string1\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/string2\"\n                    }\n                  ]\n                }\n              },\n              \"additionalProperties\": false\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"OptionOneNoDisc\": {\n        \"title\": \"Schema title option one\",\n        \"type\": \"object\",\n        \"required\": [\"discrim\"],\n        \"properties\": {\n          \"discrim\": {\n            \"type\": \"string\"\n          },\n          \"optionone\": {\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"OptionTwoNoDisc\": {\n        \"title\": \"Schema title option two\",\n        \"type\": \"object\",\n        \"required\": [\"discrim\"],\n        \"properties\": {\n          \"discrim\": {\n            \"type\": \"string\"\n          },\n          \"optiontwo\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"OptionThreeNoDisc\": {\n        \"title\": \"Schema title option three\",\n        \"type\": \"object\",\n        \"required\": [\"discrim\"],\n        \"properties\": {\n          \"discrim\": {\n            \"type\": \"string\"\n          },\n          \"optionthree\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Pet\": {\n        \"type\": \"object\",\n        \"required\": [\"pet_type\"],\n        \"properties\": {\n          \"pet_type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"discriminator\": {\n          \"propertyName\": \"pet_type\"\n        }\n      },\n      \"Dog\": {\n        \"title\": \"Woof\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Pet\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bark\": {\n                \"type\": \"boolean\"\n              },\n              \"breed\": {\n                \"type\": \"string\",\n                \"enum\": [\"Dingo\", \"Husky\", \"Retriever\", \"Shepherd\"]\n              }\n            }\n          }\n        ]\n      },\n      \"Cat\": {\n        \"title\": \"Meow\",\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Pet\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"hunts\": {\n                \"type\": \"boolean\"\n              },\n              \"age\": {\n                \"type\": \"integer\"\n              }\n            }\n          }\n        ]\n      },\n      \"object1\": {\n        \"title\": \"First type of object\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"a\": {\n            \"type\": \"string\"\n          },\n          \"b\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"object2\": {\n        \"title\": \"Second type of object\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"c\": {\n            \"type\": \"string\"\n          },\n          \"d\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"string1\": {\n        \"type\": \"string\"\n      },\n      \"string2\": {\n        \"type\": \"string\"\n      },\n      \"PetNoDisc\": {\n        \"type\": \"object\",\n        \"required\": [\"pet_type\"],\n        \"properties\": {\n          \"pet_type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"DogNoDisc\": {\n        \"title\": \"Woof\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/PetNoDisc\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bark\": {\n                \"type\": \"boolean\"\n              },\n              \"breed\": {\n                \"type\": \"string\",\n                \"enum\": [\"Dingo\", \"Husky\", \"Retriever\", \"Shepherd\"]\n              }\n            }\n          }\n        ]\n      },\n      \"CatNoDisc\": {\n        \"title\": \"Meow\",\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/PetNoDisc\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"hunts\": {\n                \"type\": \"boolean\"\n              },\n              \"age\": {\n                \"type\": \"integer\"\n              }\n            }\n          }\n        ]\n      },\n      \"gcsImport\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"gcs_bucket\": {\n            \"type\": \"string\"\n          },\n          \"gcs_prefix\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"s3Import\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"s3_bucket\": {\n            \"type\": \"string\"\n          },\n          \"s3_prefix\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ApplicationApprovedEvent\": {\n        \"title\": \"ApplicationApprovedEvent\",\n        \"description\": \"Emitted when an application is underwritten and approved.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BasePurchaseWebhookEvent\"\n          }\n        ]\n      },\n      \"ApplicationDeniedEvent\": {\n        \"title\": \"ApplicationDeniedEvent\",\n        \"description\": \"Emitted when an application is underwritten and denied.\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BasePurchaseWebhookEvent\"\n          }\n        ]\n      },\n      \"BasePurchaseWebhookEvent\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BaseBuyerWebhookEvent\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"order_id\": {\n                \"type\": \"string\",\n                \"description\": \"Provided Partner Order ID.\"\n              }\n            }\n          }\n        ]\n      },\n      \"BaseBuyerWebhookEvent\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/BaseWebhookEvent\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"buyer_id\": {\n                \"type\": \"string\",\n                \"description\": \"ID of the buyer the event corresponds to.\"\n              }\n            },\n            \"required\": [\"buyer_id\"]\n          }\n        ]\n      },\n      \"BaseWebhookEvent\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"event_type\": {\n            \"type\": \"string\",\n            \"description\": \"Type of the webhook event.\",\n            \"enum\": [\"application_approved\", \"application_denied\"]\n          },\n          \"event_id\": {\n            \"type\": \"string\",\n            \"description\": \"ID of the event.\"\n          }\n        },\n        \"required\": [\"event_type\", \"event_id\"]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/npm/readme/oas-examples@c1172d94f9ee52c3c1847b73f9ae1ad55945824b/-/blob/3.0/json/discriminators.json",
			"externalURLs": []
		}
	},
	"Error": "buildIR: make ir: path \"/potentially-undefined-formData\": post: requestBody: contents: media: \"application/json\": generate schema: oneOf: collect variants: oneOf[0]: allOf: allOf: schema type mismatch:  and object",
	"NotImplemented": [
		"discriminator inference"
	]
}