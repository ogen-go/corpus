{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SoftwareAG/c8y-docs"
		},
		"file": {
			"name": "lpwan-custom-codec-openapi.yaml",
			"size": 0,
			"path": "static/files/rest/lpwan-custom-codec-openapi.yaml",
			"byteSize": 13723,
			"content": "openapi: 3.0.1\ninfo:\n  title: LPWAN custom codec OpenAPI definition\n  version: v0\nservers:\n  - url: http://localhost:8080\n    description: Generated server url\npaths:\n  /decode:\n    post:\n      operationId: decode\n      tags:\n        - LPWAN Custom Codec Decode API\n      summary: \"Decodes the payload based on the inputs like deviceManufacturer, deviceModel, sourceDeviceEui and fport.\"\n      description: \"This API endpoint decodes the input payload based on inputs like deviceManufacturer, deviceModel, sourceDeviceEui and fport and returns the result populated with measurements, events, alarms and alarm types to update. Also flag whether the decoding payload is successful or not.\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            example:\n              sourceDeviceId: '1025'\n              value: '202355251812984589'\n              args:\n                deviceManufacturer: LANSITEC\n                deviceModel: Asset Tracker\n                sourceDeviceEui: AA02030405060708\n                updateTime: '1643121312'\n                fport: '123'\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/DecoderInputData'\n                - required:\n                    - sourceDeviceId\n                    - value\n                    - args\n      responses:\n        '200':\n          description: \"The decoder input is successfully decoded and returns the DecoderResult.\"\n          content:\n            application/json:\n              example:\n                alarms:\n                  - type: c8yDemoDecoderalarm\n                    text: I am an decoder alarm\n                    severity: MINOR\n                    status: ACTIVE\n                    time: '2020-03-03T12:03:23.845Z'\n                alarmTypesToUpdate:\n                  ACKNOWLEDGED:\n                  - c8y_Test\n                  - c8y_Temp\n                  CLEARED:\n                  - c8y_Ack\n                  - c8y_Unavailable\n                events:\n                  - type: c8y_LocationUpdate\n                    text: Location updated\n                    time: '2020-03-03T12:03:23.845Z'\n                measurements:\n                 - type: c8y_Battery\n                   series: c8y_Battery\n                   time: '2020-03-03T12:03:23.845Z'\n                   values:\n                    - type: c8y_Battery\n                      seriesName: level\n                      unit: c\n                      value: 35\n                dataFragments:\n                 - key: c8y_Position/lat,\n                   value: null\n                   valueAsObject: 9.609690346957522E-28\n                success: true or false\n                message: \"Description of decoding success or failure.\"\n              schema:\n                $ref: '#/components/schemas/DecoderResult'\n        '400':\n          description: \"The decoder input has missing fields or has `null` as its input data. The DecoderResult is returned with a failure message.\"\n          content:\n            application/json:\n              example:\n                message:\n                  - \"DecoderInputData is missing mandatory fields: 'sourceDeviceId', 'sourceDeviceEui', 'inputData', 'manufacturer and/or model'\"\n                  - \"Decoder is invoked with null input data.\"\n                success: false\n              schema:\n                $ref: '#/components/schemas/DecoderResult'\n        '501':\n          description:  \"There is no implementation for the DecoderService. The DecoderResult is returned with a failure message.\"\n          content:\n            application/json:\n              example:\n                message:\n                  - \"No implementation provided for the DecoderService\"\n                success: false\n              schema:\n                $ref: '#/components/schemas/DecoderResult'\n  /encode:\n    post:\n      tags:\n        - LPWAN Custom Codec Encode API\n      summary: \"Encodes the input command and returns the encoded command.\"\n      operationId: encode\n      requestBody:\n        content:\n          application/json:\n            example:\n              commandName: position request,\n              commandData : '{position request -latitude 10.25 -longitude -5.67}'\n              sourceDeviceId : 26413,\n              args:\n                deviceManufacturer: LANSITEC,\n                deviceModel: Asset Tracker,\n                sourceDeviceEui: AABB03AABB030000\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/EncoderInputData'\n                - required:\n                    - commandName\n                    - commandData\n                    - sourceDeviceId\n                    - args\n      responses:\n        '200':\n          description: default response\n          content:\n            application/json:\n              example:\n                encodedCommand: 9F5000\n                properties:\n                - fport: 20\n              schema:\n                $ref: '#/components/schemas/EncoderResult'\n        '400':\n          description:  \"The encoder input has missing fields or has `null`as its input data. The EncoderResult is returned with a failure message.\"\n          content:\n            application/json:\n              example:\n                message:\n                  - \"EncoderInputData is missing mandatory fields: 'sourceDeviceId', 'sourceDeviceEui', 'manufacturer, model and/or supportedCommands', 'commandName'\"\n                  - \"Encoder is invoked with null input data.\"\n                success: false\n              schema:\n                $ref: '#/components/schemas/EncoderResult'\n        '501':\n          description:  \"There is no implementation for the EncoderService. The EncoderResult is returned with a failure message.\"\n          content:\n            application/json:\n              example:\n                message:\n                  - \"No implementation provided for the EncoderService\"\n                success: false\n              schema:\n                $ref: '#/components/schemas/EncoderResult'\ncomponents:\n  schemas:\n    DecoderInputData:\n      type: object\n      description: \"Contains all the relevant information which is required to decode the payload for the selected device.\"\n      required:\n        - sourceDeviceId\n        - value\n        - args\n      properties:\n        sourceDeviceId:\n          type: string\n          description: \"Device managed object ID.\"\n        value:\n          type: string\n          description: \"Device payload to decode.\"\n        args:\n          type: object\n          description: \"Its a map object that contain required information used by the payload like deviceManufacturer, deviceModel, sourceDeviceEui, updateTime and fport.\"\n          additionalProperties:\n            $ref: '#/components/schemas/DecoderInputArgs'\n\n\n    DecoderResult:\n      type: object\n      description: \"Contains a list of alarms, alarm types to udpate, events, measurements and data fragments to be updated.\"\n      properties:\n        alarms:\n          type: array\n          description: \"List of alarms to be created.\"\n          items:\n            type : object\n            description: \"AlarmRepresentation\"\n        alarmTypesToUpdate:\n          type: object\n          description: \"Map of alarm types to be updated with a specific status\"\n          additionalProperties:\n            $ref: '#/components/schemas/AlarmTypesToUpdate'\n        events:\n          type: array\n          description: \"List of events to be created.\"\n          items:\n            type: object\n            description: \"EventRepresentation\"\n        measurements:\n          type: array\n          description: \"List of measurements to be created.\"\n          items:\n            $ref: '#/components/schemas/MeasurementDto'\n        dataFragments:\n          type: array\n          description: \"List of data fragments to be updated with a specified status.\"\n          items:\n            $ref: '#/components/schemas/DataFragmentUpdate'\n        message:\n          type: string\n          description: \"Message description regarding decode.\"\n        success:\n          type: boolean\n          description: \"Boolen value that indicates whether decoding was successful or not.\"\n\n    EncoderInputData:\n      type: object\n      description: \"Contains all of the information about the device operation for the selected device to encode the command for the selected device.\"\n      required:\n        - commandName\n        - commandData\n        - sourceDeviceId\n        - args\n      properties:\n        commandName:\n          type: string\n          description: \"Command name.\"\n        commandData:\n          type: string\n          description: \"Command data to be encoded.\"\n        sourceDeviceId:\n          type: string\n          description: \"Managed object ID of the device.\"\n        args:\n          type: object\n          description: \"This is a map object that contain required information used by the codec to decode the payload such as deviceModel, deviceManufacturer and sourceDeviceEui.\"\n          additionalProperties:\n            $ref: '#/components/schemas/EncoderInputArgs'\n        status:\n          type: string\n          description: \"This is an optional attribute provided for the LPWAN custom codec which is not used at present.\"\n\n    EncoderResult:\n      type: object\n      description: \"Contains encoded command and fport information for the selected device.\"\n      properties:\n        encodedCommand:\n          type: string\n          description: \"Encoded command Value.\"\n        properties:\n          type: object\n          description: \"This is a map object to send additional required information like fport.\"\n          additionalProperties:\n            $ref: '#/components/schemas/EncoderOutputArgs'\n        message:\n          type: string\n          description:  \"Message description regarding the encode operation.\"\n        success:\n          description: \"Boolen value that indicates whether encoding was successful or not.\"\n          type: boolean\n\n    DecoderInputArgs:\n      type: object\n      description: \"Required inputs for the decode API like deviceManufacturer, deviceModel, sourceDeviceEui, updateTime and fport.\"\n      required:\n        - deviceManufacturer\n        - deviceModel\n        - sourceDeviceEui\n      properties:\n        deviceManufacturer:\n          description: \"Device manufacturer of the LPWAN device.\"\n          type: string\n        deviceModel:\n          description: \"Device model of the LPWAN device.\"\n          type: string\n        sourceDeviceEui:\n          description: \"LPWAN device external identifier.\"\n          type: string\n        updateTime:\n          description: \"Time stamp.\"\n          type: string\n        fport:\n          description: \"fport value.\"\n          type: string\n\n    AlarmTypesToUpdate:\n      type: object\n      description: \"Map of alarm types to be updated.\"\n      properties:\n        ACKNOWLEDGED:\n          type: array\n          items:\n            type: string\n        CLEARED:\n          type: array\n          items:\n            type: string\n\n    EncoderInputArgs:\n      type: object\n      description: \"Required inputs for the encode API like deviceManufacturer, deviceModel, sourceDeviceEui.\"\n      required:\n        - deviceManufacturer\n        - deviceModel\n        - sourceDeviceEui\n      properties:\n        deviceManufacturer:\n          description: \"Device manufacturer of the LPWAN device.\"\n          type: string\n        deviceModel:\n          description: \"Device model of the LPWAN device.\"\n          type: string\n        sourceDeviceEui:\n          description: \"LPWAN device external identifier.\"\n          type: string\n\n    EncoderOutputArgs:\n      type: object\n      description: \"Map that contains information like fport.\"\n      required:\n        - fport\n      properties:\n        fport:\n          description: \"fport value.\"\n          type: string\n\n    DataFragmentUpdate:\n      type: object\n      description: \"DatafragmentUpdate\"\n      properties:\n        key:\n          type: string\n          description: \"Fragment key to be updated.\"\n        value:\n          type: string\n          description: \"Value of the fragment.\"\n        valueAsObject:\n          type: object\n          description: \"Value object.\"\n\n    MeasurementDto:\n      type: object\n      description: \"Measurement data transfert object.\"\n      properties:\n        type:\n          type: string\n          description: \"Measurement type.\"\n        series:\n          type: string\n          description: \"Measurement series.\"\n        time:\n          type: string\n          description: \"Date and time.\"\n          format: date-time\n        fragmentsToCopyFromSourceDevice:\n          type: array\n          description: \"Array fragments to copy from source device.\"\n          items:\n            type: string\n        deviceFragmentPrefix:\n          type: string\n          description: \"Device fragment prefix.\"\n        deviceNameFragment:\n          type: string\n          description: \"Device name fragment.\"\n        includeDeviceName:\n          type: boolean\n          description: \"Included device name or not.\"\n        additionalProperties:\n          type: object\n          description: \"Additonal properties map.\"\n          additionalProperties: {}\n        values:\n          type: array\n          description: \"List of MeasurementValueDtos.\"\n          items:\n            $ref: '#/components/schemas/MeasurementValueDto'\n    MeasurementValueDto:\n      type: object\n      properties:\n        seriesName:\n          type: string\n          description: \"Measurement series name.\"\n        unit:\n          type: string\n          description: \"Measurement unit.\"\n        value:\n          type: number\n          description: \"Measurement value.\"\n",
			"canonicalURL": "/github.com/SoftwareAG/c8y-docs@c968da4cc88dcf84b4bb44bf48e87d07aef3345f/-/blob/static/files/rest/lpwan-custom-codec-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/SoftwareAG/c8y-docs/blob/c968da4cc88dcf84b4bb44bf48e87d07aef3345f/static/files/rest/lpwan-custom-codec-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/decode\": post: requestBody: contents: application/json: generate schema: allOf: schema type mismatch: object and "
}