{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "avaza.com-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/avaza.com-v1-swagger.yaml",
			"byteSize": 135721,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: AvazaHq\n  description: \"Welcome to the autogenerated documentation \u0026 test tool for Avaza's API.\n    \u003cbr/\u003e\u003cbr/\u003e\u003cstrong\u003eAPI Security \u0026 Authentication\u003c/strong\u003e\u003cbr/\u003eAuthentication\n    options include OAuth2 Implicit and Authorization Code flows, and Personal\n    Access Token. All connections should be encrypted over SSL/TLS \u003cbr/\u003e\u003cbr/\u003eYou\n    can set up and manage your api authentication credentials from within your\n    Avaza account. (requires Administrator permissions on your Avaza\n    account).\u003cbr/\u003e\u003cbr/\u003e OAuth2 Authorization endpoint:\n    https://any.avaza.com/oauth2/authorize  \u003cbr/\u003eOAuth2 Token endpoint:\n    https://any.avaza.com/oauth2/token\u003cbr/\u003eBase URL for subsequent API Requests:\n    https://api.avaza.com/ \u003cbr/\u003e\u003cbr/\u003eBlogpost about authenticating with Avaza's\n    API:  https://www.avaza.com/avaza-api-oauth2-authentication/ \u003cbr/\u003eBlogpost\n    on using Avaza's webhooks:\n    https://www.avaza.com/avaza-api-webhook-notifications/\u003cbr/\u003eThe OAuth flow\n    currently issues Access Tokens that last 1 day, and Refresh tokens that last\n    180 days\u003cbr/\u003eThe Api respects the security Roles assigned to the\n    authenticating Avaza user and filters the data return appropriately.\n    \u003cbr/\u003e\u003cbr\u003e\u003cstrong\u003eSupport\u003c/strong\u003e\u003cbr/\u003eFor API Support, and to request access\n    please contact Avaza Support Team via our support chat.\n    \u003cbr/\u003e\u003cbr/\u003e\u003cstrong\u003eUser Contributed Libraries:\u003c/strong\u003e\u003cbr/\u003eGraciously\n    contributed by 3rd party users like you. \u003cbr/\u003eNote these are not tested or\n    endorsesd by Avaza. We encourage you to review before use, and use at own\n    risk.\u003cbr/\u003e \u003cul\u003e\u003cli\u003e - \u003ca target='blank'\n    href='https://packagist.org/packages/debiprasad/oauth2-avaza'\u003ePHP OAuth\n    Client Package for Azava API (by Debiprasad Sahoo)\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\"\n  title: Avaza\n  version: v1\n  x-apisguru-categories:\n    - collaboration\n  x-logo:\n    url: https://twitter.com/AvazaHq/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://api.avaza.com/swagger/docs/v1\n      version: \"2.0\"\n  x-providerName: avaza.com\npaths:\n  /api/Account:\n    get:\n      operationId: Account_Get\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AccountDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AccountDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AccountDetails\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_account\n      summary: Account Details\n      tags:\n        - Account\n  /api/Company:\n    get:\n      operationId: Company_Get\n      parameters:\n        - in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Number of results per page\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: 1 based page number to retrieve\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: Sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompanyList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CompanyList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CompanyList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CompanyList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_contacts\n      summary: Gets list of Companies\n      tags:\n        - Company\n    post:\n      operationId: Company_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewCompany\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NewCompany\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/NewCompany\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/NewCompany\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewCompany\"\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - write_contacts\n      summary: Create a Company\n      tags:\n        - Company\n    put:\n      description: Requires CompanyID and a list of field names to update. The\n        FieldsToUpdate field accepts a string array containing field names that\n        should be updated.\n      operationId: Company_Put\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateCompany\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateCompany\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/UpdateCompany\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/UpdateCompany\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/UpdateCompany\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n      security:\n        - oauth2:\n            - write_contacts\n      summary: Update a Company record.\n      tags:\n        - Company\n  \"/api/Company/{id}\":\n    get:\n      operationId: Company_GetByID\n      parameters:\n        - description: Company ID Number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Company\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_contacts\n      summary: Gets Company by Company ID\n      tags:\n        - Company\n  /api/Contact:\n    get:\n      operationId: Contact_Get\n      parameters:\n        - in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: Sort\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: CompanyIDFK\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContactList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ContactList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ContactList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ContactList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_contacts\n      summary: Gets list of Contacts\n      tags:\n        - Contact\n    post:\n      operationId: Contact_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewCompanyContact\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NewCompanyContact\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/NewCompanyContact\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/NewCompanyContact\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewCompanyContact\"\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompanyContact\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CompanyContact\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CompanyContact\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CompanyContact\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - write_contacts\n      summary: Create a Contact\n      tags:\n        - Contact\n  \"/api/Contact/{id}\":\n    get:\n      operationId: Contact_GetByID\n      parameters:\n        - description: Contact ID number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompanyContact\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CompanyContact\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CompanyContact\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CompanyContact\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_contacts\n      summary: Gets Contact by Contact ID\n      tags:\n        - Contact\n  /api/CreditNote:\n    get:\n      operationId: CreditNote_Get\n      parameters:\n        - in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreditNoteList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CreditNoteList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CreditNoteList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CreditNoteList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_financials\n      summary: Gets list of CreditNotes\n      tags:\n        - CreditNote\n  \"/api/CreditNote/{id}\":\n    get:\n      operationId: CreditNote_GetByID\n      parameters:\n        - description: Credit Note ID Number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreditNote\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CreditNote\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CreditNote\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CreditNote\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_financials\n      summary: Gets Credit Note by CreditNoteID\n      tags:\n        - CreditNote\n  /api/Currency:\n    get:\n      operationId: Currency_Get\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CurrencyList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CurrencyList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CurrencyList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CurrencyList\"\n      summary: Gets list of Currencies\n      tags:\n        - Currency\n  /api/Estimate:\n    get:\n      description: 'EstimateStatusCode values are: \"Draft\", \"Sent\", \"Late\", \"Paid\",\n        \"Partial\", \"Void\"'\n      operationId: Estimate_Get\n      parameters:\n        - in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: Sort\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: CompanyIDFK\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EstimateList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EstimateList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/EstimateList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/EstimateList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_financials\n      summary: Gets list of Estimates\n      tags:\n        - Estimate\n  \"/api/Estimate/{id}\":\n    get:\n      operationId: Estimate_GetByID\n      parameters:\n        - description: Estimate Estimate ID number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_financials\n      summary: Gets Estimate by Estimate ID\n      tags:\n        - Estimate\n  /api/Expense:\n    get:\n      operationId: Expense_Get\n      parameters:\n        - in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: ExpenseDateFrom\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: ExpenseDateTo\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: UserEmail\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: CategoryName\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: CustomerID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: ProjectID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: isChargeable\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: isInvoiced\n          required: false\n          schema:\n            type: boolean\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: Sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ExpenseList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ExpenseList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_expenses\n      summary: Gets list of Expenses\n      tags:\n        - Expense\n    post:\n      description: Create an Expense\n      operationId: Expense_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewExpense\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NewExpense\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/NewExpense\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/NewExpense\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewExpense\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ExpenseDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ExpenseDetails\"\n      security:\n        - oauth2:\n            - write_expenses\n      summary: Create an Expense\n      tags:\n        - Expense\n  \"/api/Expense/{id}\":\n    get:\n      operationId: Expense_GetByID\n      parameters:\n        - description: Expense ID number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExpenseDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ExpenseDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ExpenseDetails\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_expenses\n      summary: Gets an Expense Entry by Expense ID\n      tags:\n        - Expense\n  /api/Inventory:\n    get:\n      description: \"\"\n      operationId: Inventory_Get\n      parameters:\n        - in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InventoryList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/InventoryList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/InventoryList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InventoryList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_financials\n      summary: Gets list of Inventory\n      tags:\n        - Inventory\n  \"/api/Inventory/{id}\":\n    get:\n      operationId: Inventory_GetByID\n      parameters:\n        - description: InventoryItem ID number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_financials\n      summary: Gets InventoryItem by InventoryItem ID\n      tags:\n        - Inventory\n  /api/Invoice:\n    get:\n      description: 'TransactionStatusCode values are: \"Draft\", \"Sent\", \"Late\", \"Paid\",\n        \"Partial\", \"Void\"'\n      operationId: Invoice_Get\n      parameters:\n        - in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: Sort\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: CompanyIDFK\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvoiceList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/InvoiceList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/InvoiceList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvoiceList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_financials\n      summary: Gets list of Invoices\n      tags:\n        - Invoice\n    post:\n      operationId: Invoice_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewInvoice\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NewInvoice\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/NewInvoice\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/NewInvoice\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewInvoice\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n      security:\n        - oauth2:\n            - write_financials\n      summary: Create a new draft invoice\n      tags:\n        - Invoice\n  \"/api/Invoice/{id}\":\n    get:\n      operationId: Invoice_GetByID\n      parameters:\n        - description: Invoice Transaction ID number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_financials\n      summary: Gets Invoice by Invoice ID\n      tags:\n        - Invoice\n  /api/Payment:\n    get:\n      operationId: Payment_Get\n      parameters:\n        - in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PaymentList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PaymentList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_financials\n      summary: Gets list of Payments\n      tags:\n        - Payment\n    post:\n      operationId: Payment_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewPayment\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NewPayment\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/NewPayment\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/NewPayment\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewPayment\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n      security:\n        - oauth2:\n            - write_financials\n      summary: Create new Payment and optionally assign payment allocations to Invoices\n      tags:\n        - Payment\n  \"/api/Payment/{id}\":\n    get:\n      operationId: Payment_GetByID\n      parameters:\n        - description: Invoice Transaction ID Number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_financials\n      summary: Gets Payment by Payment Transaction ID\n      tags:\n        - Payment\n  /api/Project:\n    get:\n      operationId: Project_Get\n      parameters:\n        - description: Only show project records updated after a certain date (UTC)\n          in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: 'A column to sort on. Current possible values: \"DateUpdated\",\n            \"DateCreated\", \"DateUpdated desc\", \"DateCreated desc\"'\n          in: query\n          name: Sort\n          required: false\n          schema:\n            type: string\n        - description: Filter to the projects that the supplied UserID can add timesheets to\n          in: query\n          name: TimesheetUserID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Include Archived Projects in the results\n          in: query\n          name: includeArchived\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ProjectList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ProjectList\"\n      security:\n        - oauth2:\n            - read_projects\n      summary: Gets list of Projects\n      tags:\n        - Project\n    post:\n      operationId: Project_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewProjectModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NewProjectModel\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/NewProjectModel\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/NewProjectModel\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewProjectModel\"\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ProjectDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ProjectDetails\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - write_projects\n      summary: Create a Project\n      tags:\n        - Project\n  \"/api/Project/{id}\":\n    get:\n      operationId: Project_GetByID\n      parameters:\n        - description: Project ID number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ProjectDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ProjectDetails\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_projects\n      summary: Gets Project by Project ID\n      tags:\n        - Project\n  /api/ProjectTimesheetCategory:\n    get:\n      operationId: ProjectTimesheetCategory_Get\n      parameters:\n        - description: Get categories filtered by ProjectID\n          in: query\n          name: ProjectID\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectTimesheetCategoryList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectTimesheetCategoryList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ProjectTimesheetCategoryList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ProjectTimesheetCategoryList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_timesheets\n      summary: Gets list of Project Timesheet Categories\n      tags:\n        - ProjectTimesheetCategory\n  /api/ScheduleAssignment:\n    get:\n      description: Schedule assignments are per-day, and link to a parent Schedule Series.\n      operationId: ScheduleAssignment_Get\n      parameters:\n        - description: Limit results to records updated after the specified date\n          in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter for schedule assignement  that are  on or after a specific\n            date\n          in: query\n          name: ScheduleDateFrom\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter for schedules that are on or before a specific date\n          in: query\n          name: ScheduleDateTo\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter to records for a particular Schedule Series\n          in: query\n          name: ScheduleSeriesID\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: The UserID of a schedule user to filter assignments for. Only api\n            users with Admin role can see all schedules across all users. Users\n            with ScheduleUser role can access their own ScheduleSeries.\n          in: query\n          name: UserID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The email of the user who has been scheduled\n          in: query\n          name: UserEmail\n          required: false\n          schema:\n            type: string\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: 'Optional sorting instruction. Currently possible values:\n            \"DateUpdated\", \"DateCreated\", \"DateUpdated desc\", \"DateCreated\n            desc\"'\n          in: query\n          name: Sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduleAssignmentList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduleAssignmentList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ScheduleAssignmentList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ScheduleAssignmentList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_schedule\n      summary: Gets list of Schedule Assignments.\n      tags:\n        - ScheduleAssignment\n  /api/ScheduleSeries:\n    get:\n      description: Schedule Series represents a strip of time assigned to a user over a\n        date range, for a certain number of hours per day. They can be for Leave\n        or for project work Bookings.\n      operationId: ScheduleSeries_Get\n      parameters:\n        - description: Limit results to records updated after the specified date\n          in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter for schedules that start on or after a specific date\n          in: query\n          name: ScheduleStartDateFrom\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter for schedules that start on or before a specific date\n          in: query\n          name: ScheduleStartDateTo\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter for schedules that end on or after a specific date\n          in: query\n          name: ScheduleEndDateFrom\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter for schedules that end on or before a specific date\n          in: query\n          name: ScheduleEndDateTo\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The UserID of a schedule user to filter assignments for. Only api\n            users with Admin role can see all schedules across all users. Users\n            with ScheduleUser role can access their own ScheduleSeries.\n          in: query\n          name: UserID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The email of the user who has been scheduled\n          in: query\n          name: UserEmail\n          required: false\n          schema:\n            type: string\n        - description: Filter for schedule records linked to a specific timesheeet category\n          in: query\n          name: TimeSheetCategoryID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter for schedule records with a specific timesheeet category name\n            (exact string match)\n          in: query\n          name: TimeSheetCategoryName\n          required: false\n          schema:\n            type: string\n        - description: Filter to records of a particular leave type\n          in: query\n          name: LeaveTypeID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter to only include books linked to a specific project\n          in: query\n          name: ProjectID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter to only include records linked to projects, where that\n            project belongs to a specific customer company\n          in: query\n          name: CompanyID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: 'Optional sorting instruction. Currently possible values:\n            \"DateUpdated\", \"DateCreated\", \"DateUpdated desc\", \"DateCreated\n            desc\"'\n          in: query\n          name: Sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduleSeriesList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduleSeriesList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ScheduleSeriesList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ScheduleSeriesList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_schedule\n      summary: Gets list of Schedule Series\n      tags:\n        - ScheduleSeries\n  /api/Section:\n    get:\n      operationId: Section_Get\n      parameters:\n        - description: Get sections for Project with ProjectID\n          in: query\n          name: ProjectID\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SectionList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SectionList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SectionList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SectionList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_projects\n      summary: Gets list of Sections\n      tags:\n        - Section\n    post:\n      operationId: Section_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewSection\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NewSection\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/NewSection\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/NewSection\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewSection\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SectionDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SectionDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SectionDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SectionDetails\"\n      security:\n        - oauth2:\n            - write_projects\n      summary: Create a Section\n      tags:\n        - Section\n  /api/Task:\n    get:\n      operationId: Task_Get\n      parameters:\n        - description: Optional filter to records updated after a specific date.\n          in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Number of items per page. Defaults to 20.\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1. Defaults to 1\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: 'Optional sorting instruction. Currently possible values:\n            \"DateUpdated\", \"DateCreated\", \"DateUpdated desc\", \"DateCreated\n            desc\", \"SectionTitle\", \"Title\"'\n          in: query\n          name: Sort\n          required: false\n          schema:\n            type: string\n        - description: Optional filter to only display tasks linked to a Task Status where\n            isComplete=false, or where isComplete=true\n          in: query\n          name: isComplete\n          required: false\n          schema:\n            type: boolean\n        - description: Optional filter to only display tasks belonging to a specific\n            ProjectID\n          in: query\n          name: ProjectID\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TaskList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_projects\n      summary: Gets list of Tasks\n      tags:\n        - Task\n    post:\n      operationId: Task_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewTask\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NewTask\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/NewTask\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/NewTask\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewTask\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n      security:\n        - oauth2:\n            - write_projects\n      summary: Create a Task\n      tags:\n        - Task\n    put:\n      description: Requires TaskID and a list of field names to update. The FieldsToUpdate\n        field accepts a string array containing field names that should be\n        updated.\n      operationId: Task_Put\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateTask\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateTask\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/UpdateTask\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/UpdateTask\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/UpdateTask\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n      security:\n        - oauth2:\n            - write_projects\n      summary: Update a Task.\n      tags:\n        - Task\n  \"/api/Task/{id}\":\n    get:\n      operationId: Task_GetByID\n      parameters:\n        - description: Task ID number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskDetails\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_projects\n      summary: Gets Task by Task ID\n      tags:\n        - Task\n  /api/TaskStatus:\n    get:\n      operationId: TaskStatus_Get\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskStatusList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TaskStatusList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskStatusList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskStatusList\"\n      security:\n        - oauth2:\n            - read_projects\n      summary: Gets list of Task Statuses\n      tags:\n        - TaskStatus\n  /api/TaskType:\n    get:\n      operationId: TaskType_Get\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskTypeList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TaskTypeList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskTypeList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TaskTypeList\"\n      security:\n        - oauth2:\n            - read_projects\n      summary: Gets list of Task Types\n      tags:\n        - TaskType\n  /api/Tax:\n    get:\n      operationId: Tax_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TaxList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TaxList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TaxList\"\n      security:\n        - oauth2:\n            - read_financials\n      summary: Get List of Taxes configured in the Avaza account.\n      tags:\n        - Tax\n  /api/Timesheet:\n    get:\n      operationId: Timesheet_Get\n      parameters:\n        - in: query\n          name: UpdatedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: EntryDateFrom\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: EntryDateTo\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The UserID of a timesheet user to filter timesheets for. Only api\n            users with certain higher roles can see timesheets across multiple\n            users.\n          in: query\n          name: UserID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: UserEmail\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: CategoryName\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: ProjectID\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: isBillable\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: isInvoiced\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: isTimerRunning\n          required: false\n          schema:\n            type: boolean\n        - description: Number of items per page (max 1000)\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Page to display. Starts from 1.\n          in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: 'Optional sorting instruction. Currently possible values:\n            \"DateUpdated\", \"DateCreated\", \"DateUpdated desc\", \"DateCreated\n            desc\",\"EntryDate\", \"EntryDate desc\",\n            \"StartTimeLocal\",\"StartTimeLocal desc\", \"TimeSheetEntryID\",\n            \"TimeSheetEntryID desc\"'\n          in: query\n          name: Sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimesheetList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimesheetList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TimesheetList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TimesheetList\"\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - read_timesheets\n      summary: Gets list of Timsheets\n      tags:\n        - Timesheet\n    post:\n      operationId: Timesheet_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewTimesheet\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NewTimesheet\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/NewTimesheet\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/NewTimesheet\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewTimesheet\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n      security:\n        - oauth2:\n            - write_timesheets\n      summary: Create a new Timesheet Entry\n      tags:\n        - Timesheet\n    put:\n      description: The FieldsToUpdate field expects a string array collection of the field\n        names you would like updated. Valid fields to update inlcude\n        \"ProjectIDFK\", \"TimeSheetCategoryIDFK\", \"TaskIDFK\", \"Duration\",\n        \"EntryDate\", \"Notes\", \"hasStartEndTime\". If you intend to provide\n        start/end times on timesheets, this is achieved by including the start\n        time in the EntryDate field (Iso date format), along with a Duration\n        (decimal format).\n      operationId: Timesheet_Put\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateTimesheetModel\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateTimesheetModel\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/UpdateTimesheetModel\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/UpdateTimesheetModel\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/UpdateTimesheetModel\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n      security:\n        - oauth2:\n            - write_timesheets\n      summary: Update a Timesheet\n      tags:\n        - Timesheet\n  \"/api/Timesheet/{id}\":\n    delete:\n      operationId: Timesheet_Delete\n      parameters:\n        - description: The TimesheetEntryID of the Timesheet Entry\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n      security:\n        - oauth2:\n            - write_timesheets\n      summary: Delete a Timesheet Entry\n      tags:\n        - Timesheet\n    get:\n      operationId: Timesheet_GetByID\n      parameters:\n        - description: Timesheet ID number\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TimesheetDetails\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_timesheets\n      summary: Gets a Timesheet Entry by Timesheet ID\n      tags:\n        - Timesheet\n  /api/TimesheetSubmission:\n    post:\n      description: Either provide a a specific Day (WholeDayOf) or any day in a Week\n        (WholeWeekOf) to submit all draft timesheets in that day or week\n      operationId: TimesheetSubmission_Post\n      parameters:\n        - description: Send email alerts to timesheet approvers. Defaults to true\n          in: query\n          name: SendNotifications\n          required: false\n          schema:\n            type: boolean\n        - description: A date (yyyy-MM-dd) that falls within  a Week to have all timesheets\n            in that week submitted. Respects the First Day of Week setting in\n            your account Timesheet Settings to determine the week range.\n          in: query\n          name: WholeWeekOf\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: A date (yyyy-MM-dd) to submit all timesheets on this day\n          in: query\n          name: WholeDayOf\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The user to submit timesheets for. Defaults to current user. Only\n            allowed to be different from the current user when the current user\n            has rights to Impersonate other users.\n          in: query\n          name: UserID\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n      security:\n        - oauth2:\n            - write_timesheets\n      summary: Submit Timesheets for Approval.\n      tags:\n        - TimesheetSubmission\n  /api/TimesheetTimer:\n    get:\n      operationId: TimesheetTimer_GetRunningTimer\n      parameters:\n        - description: Optional - User ID number if impersonating a different user.\n            Otherwise assumes the current user. Only users with certain security\n            roles have permission to impersonate other users\n          in: query\n          name: UserID\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - read_timesheets\n      summary: Gets the  Running Timer if there is one for a user.\n      tags:\n        - TimesheetTimer\n  \"/api/TimesheetTimer/{id}\":\n    delete:\n      operationId: TimesheetTimer_StopTimer\n      parameters:\n        - description: The ID of the existing timesheet entry that needs its timer stopped\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Optional - User ID number if impersonating a different user.\n            Otherwise assumes the current user. Only users with certain security\n            roles have permission to impersonate other users\n          in: query\n          name: UserID\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - write_timesheets\n      summary: Stop the timer running on an existing Timesheet Entry\n      tags:\n        - TimesheetTimer\n    post:\n      operationId: TimesheetTimer_StartTimer\n      parameters:\n        - description: The ID of the existing timesheet entry on which to start a timer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Optional - User ID number if impersonating a different user.\n            Otherwise assumes the current user. Only users with certain security\n            roles have permission to impersonate other users\n          in: query\n          name: UserID\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      security:\n        - oauth2:\n            - write_timesheets\n      summary: Starts a Timer running on an existing Timesheet Entry\n      tags:\n        - TimesheetTimer\n  /api/UserProfile:\n    get:\n      description: Admin and Invoice Managers can see all. Other users are limited to\n        seeing their own profile.\n      operationId: UserProfile_Get\n      parameters:\n        - description: Optional list of comma separated role codes to filter users by (e.g.\n            \"TimesheetUser,Admin\")\n          in: query\n          name: Roles\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: Tags\n          required: false\n          schema:\n            type: string\n        - description: Optional boolean (true/false) to filter to only show current\n            authenticated user (always true for non Admin/InvoiceManager users)\n          in: query\n          name: CurrentUserOnly\n          required: false\n          schema:\n            type: boolean\n        - description: Optionally filter by Company ID\n          in: query\n          name: CompanyIDFK\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/UserList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/UserList\"\n      security:\n        - oauth2:\n            - read_users\n      summary: Get Collection of Users who have roles in the current Avaza account.\n      tags:\n        - UserProfile\n  /api/Webhook:\n    delete:\n      operationId: Webhook_DeleteByUrl\n      parameters:\n        - description: Target URL that should be used to delete subscriptions\n          in: query\n          name: target_url\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Subscription Deleted OK\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - webhook_notifications\n      summary: Delete webhook subscription by URL\n      tags:\n        - Webhook\n    get:\n      operationId: Webhook_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebhookList\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/WebhookList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/WebhookList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/WebhookList\"\n      security:\n        - oauth2:\n            - webhook_notifications\n      summary: Get list of Webhook Subscriptions\n      tags:\n        - Webhook\n    post:\n      description: 'When you receive a webhook, you should respond with Http 200 OK Status\n        Code, otherwise we will retry. To create a webhook, you need both the\n        webhook_notifications scope, as well as the scope for the required\n        entity being monitored.  Event values are: \"company_created\",\n        \"company_deleted\", \"company_updated\", \"contact_created\",\n        \"contact_deleted\", \"contact_updated\", \"invoice_created\",\n        \"invoice_sent\",\"invoice_updated\",\"invoice_deleted\", \"project_created\",\n        \"project_deleted\", \"project_updated\", \"task_created\",\n        \"task_updated\",\"task_deleted\", \"timesheet_created\", \"timesheet_deleted\",\n        \"timesheet_updated\".  You can subscribe to any webhook, but you will\n        only receive notifications for data appropriate to the roles of your\n        user account. There is an optional  Secret parameter (string 255 char\n        max). This allows for webhook authentication. If provided, the Secret\n        will be BASE 64 encoded and passed with notications as a basic\n        authentication http header. i.e. Authorization Basic [BASE64 of\n        Secret]\"'\n      operationId: Webhook_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateSubscription\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CreateSubscription\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/CreateSubscription\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/CreateSubscription\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/CreateSubscription\"\n        required: true\n      responses:\n        \"201\":\n          description: Subscription created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscribeResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SubscribeResult\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SubscribeResult\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SubscribeResult\"\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Duplicate subscription already exists\n      security:\n        - oauth2:\n            - webhook_notifications\n            - read_contacts\n            - read_account\n            - read_users\n            - read_financials\n            - read_projects\n            - read_schedule\n            - read_timesheets\n            - read_expenses\n            - write_contacts\n            - write_account\n            - write_users\n            - write_financials\n            - write_projects\n            - write_schedule\n            - write_timesheets\n            - write_expenses\n      summary: Subscribe to Webhook. On success, returns ID of webhook subscription.\n      tags:\n        - Webhook\n  \"/api/Webhook/{id}\":\n    delete:\n      operationId: Webhook_Delete\n      parameters:\n        - description: Subscription id to be deleted\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Subscription deleted ok\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n      security:\n        - oauth2:\n            - webhook_notifications\n      summary: Delete Webhook Subscription by ID\n      tags:\n        - Webhook\nservers:\n  - url: https://api.avaza.com\ncomponents:\n  securitySchemes:\n    oauth2:\n      description: OAuth2 Implicit Grant\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://any.avaza.com/oauth2/authorize\n          scopes:\n            read_account: Read access to Account metadata\n            read_contacts: Read access to Customers, Contacts\n            read_expenses: Read access to Expense Details\n            read_financials: Read access to Estimates, Invoices, Payments, Credit Notes\n            read_projects: Read access to Projects, Project Settings, Tasks\n            read_schedule: Read access to Schedule Details\n            read_timesheets: Read access to Timesheet Details\n            read_users: Read access to User Profiles\n            webhook_notifications: Read access to webhook notification events\n            write_account: Write access to Account metadata\n            write_contacts: Write access to Customers, Contacts\n            write_expenses: Write access to Expense module\n            write_financials: Write access to Estimates, Invoices, Payments, Credit Notes\n            write_projects: Write access to Projects, Project Settings, Tasks\n            write_schedule: Write access to Schedule module\n            write_timesheets: Write access to Timesheets module\n            write_users: Write access to User Profiles\n  schemas:\n    AccountDetails:\n      properties:\n        AccountID:\n          format: int32\n          type: integer\n        AllowHidingCompletedTasksOnTimesheet:\n          type: boolean\n        CompanyName:\n          type: string\n        CurrentServerTimeISO:\n          description: 'Format: ISO \"YYYY-MM-DD HH:mm:ss.SSS\"'\n          type: string\n        LockApprovedTimesheets:\n          type: boolean\n        Subdomain:\n          type: string\n        TimesheetDayOfWeek:\n          format: int32\n          type: integer\n        TimesheetDisplayFormatCode:\n          type: string\n        WeeklyTimesheetReminder:\n          type: boolean\n        has24HourTimesheetFormat:\n          type: boolean\n        hasStartEndTimesheets:\n          type: boolean\n      type: object\n    AccountTaskTypeDetails:\n      properties:\n        AccountTaskTypeID:\n          format: int32\n          type: integer\n        Icon:\n          type: string\n        IconType:\n          type: string\n        Name:\n          type: string\n        isDefault:\n          type: boolean\n      type: object\n    Company:\n      properties:\n        BillingAddress:\n          type: string\n        BillingAddressCity:\n          type: string\n        BillingAddressLine:\n          type: string\n        BillingAddressPostCode:\n          type: string\n        BillingAddressState:\n          type: string\n        BillingCountryCode:\n          type: string\n        Comments:\n          type: string\n        CompanyID:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        Contacts:\n          items:\n            $ref: \"#/components/schemas/CompanyContact\"\n          type: array\n        CurrencyCode:\n          type: string\n        DateCreated:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        DefaultTradingTermIDFK:\n          format: int32\n          type: integer\n        Fax:\n          type: string\n        Phone:\n          type: string\n        TaxNumber:\n          type: string\n        website:\n          type: string\n      type: object\n    CompanyContact:\n      properties:\n        CompanyIDFK:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        ContactID:\n          format: int32\n          type: integer\n        DateCreated:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        Email:\n          type: string\n        Firstname:\n          type: string\n        Lastname:\n          type: string\n        Mobile:\n          type: string\n        Phone:\n          type: string\n        PositionTitle:\n          type: string\n        TimeZone:\n          type: string\n      type: object\n    CompanyList:\n      properties:\n        Companies:\n          items:\n            $ref: \"#/components/schemas/Company\"\n          type: array\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    ContactList:\n      properties:\n        Contacts:\n          items:\n            $ref: \"#/components/schemas/CompanyContact\"\n          type: array\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    CreateSubscription:\n      description: New Subscription to be Created\n      properties:\n        event:\n          description: \"The event code to be notified about. Possible values:\n            company_created, contact_created, invoice_created, invoice_sent,\n            project_created, task_created\"\n          type: string\n        secret:\n          description: Optional Secret string (255 char max). If provided, the secret will\n            be BASE 64 encoded and used as a basic authentication http header\n            with webhook notifications. i.e. Authorization Basic [BASE64 of\n            Secret]\"\n          type: string\n        target_url:\n          description: The URL that should be notified of the event.\n          type: string\n      required:\n        - target_url\n        - event\n      type: object\n    CreditNote:\n      properties:\n        Balance:\n          format: double\n          type: number\n        CreditNoteAllocations:\n          items:\n            $ref: \"#/components/schemas/CreditNoteAllocation\"\n          type: array\n        CreditNoteLineItems:\n          items:\n            $ref: \"#/components/schemas/CreditNoteLineItem\"\n          type: array\n        CreditNoteNumber:\n          type: string\n        CurrencyCode:\n          type: string\n        CustomerIDFK:\n          format: int32\n          type: integer\n        DateCreated:\n          format: date-time\n          type: string\n        DateIssued:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        Notes:\n          type: string\n        TotalAmount:\n          format: double\n          type: number\n        TransactionID:\n          format: int64\n          type: integer\n        TransactionPrefix:\n          type: string\n        TransactionStatusCode:\n          type: string\n      type: object\n    CreditNoteAllocation:\n      properties:\n        AllocationAmount:\n          format: double\n          type: number\n        AllocationDate:\n          format: date-time\n          type: string\n        CreditNoteTransactionIDFK:\n          format: int64\n          type: integer\n        InvoiceTransactionIDFK:\n          format: int64\n          type: integer\n        TransactionAllocationID:\n          format: int64\n          type: integer\n      type: object\n    CreditNoteLineItem:\n      properties:\n        Amount:\n          format: double\n          type: number\n        Description:\n          type: string\n        Discount:\n          format: double\n          type: number\n        Quantity:\n          format: double\n          type: number\n        TaxAmount:\n          format: double\n          type: number\n        TaxIDFK:\n          format: int32\n          type: integer\n        TransactionLineItemID:\n          format: int64\n          type: integer\n        UnitPrice:\n          format: double\n          type: number\n      type: object\n    CreditNoteList:\n      properties:\n        CreditNotes:\n          items:\n            $ref: \"#/components/schemas/CreditNote\"\n          type: array\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    Currency:\n      properties:\n        CurrencyCode:\n          type: string\n        DecimalPlaces:\n          format: int32\n          type: integer\n      type: object\n    CurrencyList:\n      properties:\n        Currencies:\n          items:\n            $ref: \"#/components/schemas/Currency\"\n          type: array\n      type: object\n    EstimateDetails:\n      properties:\n        AccountIDFK:\n          format: int32\n          type: integer\n        Balance:\n          format: double\n          type: number\n        CompanyIDFK:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        CurrencyCode:\n          type: string\n        DateCreated:\n          format: date-time\n          type: string\n        DateIssued:\n          format: date-time\n          type: string\n        DateSent:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        DueDate:\n          format: date-time\n          type: string\n        EstimateID:\n          format: int64\n          type: integer\n        EstimateItemNumber:\n          type: string\n        EstimatePrefix:\n          type: string\n        EstimateStatusCode:\n          type: string\n        EstimateTaxConfigCode:\n          type: string\n        ExchangeRate:\n          format: double\n          type: number\n        Issuer:\n          $ref: \"#/components/schemas/IssuerDetails\"\n        LineItems:\n          items:\n            $ref: \"#/components/schemas/EstimateLineItemDetails\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/EstimateLinks\"\n        Notes:\n          type: string\n        Recipient:\n          $ref: \"#/components/schemas/RecipientDetails\"\n        Subject:\n          type: string\n        TaxAmount:\n          format: double\n          type: number\n        TotalAmount:\n          format: double\n          type: number\n      type: object\n    EstimateLineItemDetails:\n      properties:\n        Amount:\n          format: double\n          type: number\n        Description:\n          type: string\n        Discount:\n          format: double\n          type: number\n        EstimateLineItemID:\n          format: int64\n          type: integer\n        InventoryItemIDFK:\n          format: int64\n          type: integer\n        InventoryItemName:\n          type: string\n        InventoryItemSKU:\n          type: string\n        Quantity:\n          format: double\n          type: number\n        TaxAmount:\n          format: double\n          type: number\n        TaxCode:\n          type: string\n        TaxIDFK:\n          format: int32\n          type: integer\n        TaxName:\n          type: string\n        UnitPrice:\n          format: double\n          type: number\n      type: object\n    EstimateLinks:\n      properties:\n        ClientView:\n          type: string\n        Edit:\n          type: string\n        View:\n          type: string\n      type: object\n    EstimateList:\n      properties:\n        Estimates:\n          items:\n            $ref: \"#/components/schemas/EstimateDetails\"\n          type: array\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    ExpenseDetails:\n      properties:\n        Amount:\n          format: double\n          type: number\n        AttachmentURL:\n          type: string\n        ChargeableStatusCode:\n          type: string\n        CurrencyCode:\n          type: string\n        CustomerIDFK:\n          format: int32\n          type: integer\n        CustomerName:\n          type: string\n        DateCreated:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        Email:\n          type: string\n        ExchangeRate:\n          format: double\n          type: number\n        ExpenseApprovalStatusCode:\n          type: string\n        ExpenseCategoryHasUnitPrice:\n          type: boolean\n        ExpenseCategoryIDFK:\n          format: int32\n          type: integer\n        ExpenseCategoryName:\n          type: string\n        ExpenseCategoryUnitName:\n          type: string\n        ExpenseCategoryUnitPrice:\n          format: double\n          type: number\n        ExpenseDate:\n          format: date-time\n          type: string\n        ExpenseID:\n          format: int64\n          type: integer\n        ExpenseReimbursementStatusCode:\n          type: string\n        ExpenseReportIDFK:\n          format: int64\n          type: integer\n        ExpenseReportName:\n          type: string\n        Firstname:\n          type: string\n        Lastname:\n          type: string\n        Merchant:\n          type: string\n        MerchantTaxNumber:\n          type: string\n        Notes:\n          type: string\n        ProjectIDFK:\n          format: int32\n          type: integer\n        ProjectTitle:\n          type: string\n        Quantity:\n          format: double\n          type: number\n        TaxAmount:\n          format: double\n          type: number\n        TaxIDFK:\n          format: int32\n          type: integer\n        TransactionTaxConfigCode:\n          type: string\n        UserIDFK:\n          format: int32\n          type: integer\n        isChargeable:\n          type: boolean\n        isReimbursable:\n          type: boolean\n      type: object\n    ExpenseList:\n      properties:\n        Expenses:\n          items:\n            $ref: \"#/components/schemas/ExpenseDetails\"\n          type: array\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    InventoryItem:\n      properties:\n        CostPrice:\n          format: double\n          type: number\n        DateCreated:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        Description:\n          type: string\n        InventoryItemID:\n          format: int64\n          type: integer\n        Name:\n          type: string\n        SKU:\n          type: string\n        SalePrice:\n          format: double\n          type: number\n        SaleTaxIDFK:\n          format: int32\n          type: integer\n        isHidden:\n          type: boolean\n      type: object\n    InventoryList:\n      properties:\n        Inventory:\n          items:\n            $ref: \"#/components/schemas/InventoryItem\"\n          type: array\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    Invoice:\n      properties:\n        AccountIDFK:\n          format: int32\n          type: integer\n        Balance:\n          format: double\n          type: number\n        CompanyIDFK:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        CurrencyCode:\n          type: string\n        CustomerPONumber:\n          type: string\n        DateCreated:\n          format: date-time\n          type: string\n        DateIssued:\n          format: date-time\n          type: string\n        DateSent:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        DueDate:\n          format: date-time\n          type: string\n        ExchangeRate:\n          format: double\n          type: number\n        InvoiceNumber:\n          type: string\n        Issuer:\n          $ref: \"#/components/schemas/IssuerDetails\"\n        LineItems:\n          items:\n            $ref: \"#/components/schemas/InvoiceLineItem\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/InvoiceLinks\"\n        Notes:\n          type: string\n        Recipient:\n          $ref: \"#/components/schemas/RecipientDetails\"\n        Subject:\n          type: string\n        TaxAmount:\n          format: double\n          type: number\n        TotalAmount:\n          format: double\n          type: number\n        TransactionID:\n          format: int64\n          type: integer\n        TransactionPrefix:\n          type: string\n        TransactionStatusCode:\n          type: string\n        TransactionTaxConfigCode:\n          type: string\n      type: object\n    InvoiceLineItem:\n      properties:\n        Amount:\n          format: double\n          type: number\n        Description:\n          type: string\n        Discount:\n          format: double\n          type: number\n        InventoryItemIDFK:\n          format: int64\n          type: integer\n        InventoryItemName:\n          type: string\n        InventoryItemSKU:\n          type: string\n        ProjectIDFK:\n          format: int32\n          type: integer\n        ProjectTitle:\n          type: string\n        Quantity:\n          format: double\n          type: number\n        TaxAmount:\n          format: double\n          type: number\n        TaxCode:\n          type: string\n        TaxIDFK:\n          format: int32\n          type: integer\n        TaxName:\n          type: string\n        TransactionLineItemID:\n          format: int64\n          type: integer\n        UnitPrice:\n          format: double\n          type: number\n      type: object\n    InvoiceLinks:\n      properties:\n        ClientView:\n          type: string\n        Edit:\n          type: string\n        View:\n          type: string\n      type: object\n    InvoiceList:\n      properties:\n        Invoices:\n          items:\n            $ref: \"#/components/schemas/Invoice\"\n          type: array\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    IssuerDetails:\n      properties:\n        BillingAddress:\n          type: string\n        BillingAddressCity:\n          type: string\n        BillingAddressLine:\n          type: string\n        BillingAddressPostCode:\n          type: string\n        BillingAddressState:\n          type: string\n        BillingCountryCode:\n          type: string\n        TaxNumber:\n          type: string\n      type: object\n    NewCompany:\n      properties:\n        BillingAddress:\n          type: string\n        BillingAddressCity:\n          type: string\n        BillingAddressLine:\n          type: string\n        BillingAddressPostCode:\n          type: string\n        BillingAddressState:\n          type: string\n        BillingCountryCode:\n          type: string\n        Comments:\n          type: string\n        CompanyName:\n          type: string\n        CurrencyCode:\n          type: string\n        Fax:\n          type: string\n        Phone:\n          type: string\n        TaxNumber:\n          type: string\n        website:\n          type: string\n      required:\n        - CompanyName\n      type: object\n    NewCompanyContact:\n      properties:\n        CompanyBillingAddress:\n          type: string\n        CompanyBillingAddressCity:\n          type: string\n        CompanyBillingAddressCountryCode:\n          type: string\n        CompanyBillingAddressLine:\n          type: string\n        CompanyBillingAddressPostCode:\n          type: string\n        CompanyBillingAddressState:\n          type: string\n        CompanyIDFK:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        ContactEmail:\n          type: string\n        CurrencyCode:\n          type: string\n        Firstname:\n          type: string\n        Lastname:\n          type: string\n        Mobile:\n          type: string\n        Phone:\n          type: string\n        PositionTitle:\n          type: string\n        UpdateExisting:\n          type: boolean\n      required:\n        - ContactEmail\n        - Firstname\n        - Lastname\n      type: object\n    NewExpense:\n      properties:\n        Amount:\n          description: Expense Amount (Required). Must be \u0026gt;= 0\n          format: double\n          type: number\n        CurrencyCode:\n          description: A 3-letter ISO CurrencyCode for the expense currency. (e.g. USD). If\n            not provided, defaults to the Account base currency.\n          type: string\n        CustomerIDFK:\n          description: The Avaza Customer ID to associate the Expense with. Either this\n            field or CustomerName can be provided.\n          format: int32\n          type: integer\n        CustomerName:\n          description: The name of an existing customer in Avaza. Must be an exact (case\n            insensitive) match.\n          type: string\n        ExchangeRate:\n          description: Optional (Only relevant if the expense currency is different to your\n            account currency. If not provided we will look up the market\n            exchange rate for you based on the expense date.) Exchange Rate =\n            Expense Currency Amount / Base Currency Amount (e.g. if Expense\n            currency is in AUD, and Base Currency is in USD, Exchange Rate = AUD\n            $140 / USD $100 = 1.4)\n          format: double\n          type: number\n        ExpenseCategoryIDFK:\n          description: The expense category to link the Expense to. If not provided,\n            ExpenseCategoryName must be provided\n          format: int32\n          type: integer\n        ExpenseCategoryName:\n          description: Must match an existing expense category name otherwise a new\n            category will be created. If left blank Expense Category ID must be\n            provided.\n          type: string\n        ExpenseDate:\n          description: The date of the expense entry (Required)\n          format: date-time\n          type: string\n        GroupTripName:\n          description: Links the expense to a Grouping/Trip report. If no matching name\n            found, creates a new Group/Trip Report name.\n          type: string\n        Merchant:\n          description: The name of the merchant.\n          type: string\n        MerchantTaxNumer:\n          description: A Tax number identifier for the merchant.\n          type: string\n        Notes:\n          description: Expense Notes\n          type: string\n        ProjectIDFK:\n          description: The Avaza project ID to associate the Expense with.\n          format: int32\n          type: integer\n        ProjectName:\n          description: Can work for matching an expense to a project, but only if it's an\n            exact match for a single project under the customer.\n          type: string\n        TaxIDFK:\n          description: Avaza Tax ID the expense belongs to. If left blank then Tax Name\n            must be provided.\n          format: int32\n          type: integer\n        TaxName:\n          description: Must exactly match an existing Tax Name that you have configured in\n            Avaza Tax settings. If left blank then Tax ID must be provided.\n          type: string\n        TransactionTaxConfigCode:\n          description: Optional - Enter \"INC\" if the tax amount is included in the expense\n            amount otherwise enter \"EX\" when the amount exlcudes the tax.\n            Defaults to \"Ex\". The tax amount on the expense will be\n            autocalculated.\n          type: string\n        UserEmail:\n          description: The email address of a Timesheet/Expense user in Avaza. If not\n            provided, UserIDFK field must be provided.\n          type: string\n        UserIDFK:\n          description: UserID for a Timesheet/Expense user in Avaza. If not provided,\n            UserEmail field must be provided\n          format: int32\n          type: integer\n        isChargeable:\n          description: aka Billable. Defaults to false if not provided. If set to true, a\n            CustomerIDFK or CustomerName must be provided.\n          type: boolean\n        isReimbursable:\n          description: Defaults to false if not provided.\n          type: boolean\n      type: object\n    NewInvoice:\n      description: New invoice to be created\n      properties:\n        CompanyIDFK:\n          description: If left blank then you must specify Company Name.\n          format: int32\n          type: integer\n        CompanyName:\n          description: If left blank then you must specify Company ID. Specified Name will\n            be used to match existing customer record. If not matched then it\n            will be used to create a new customer. First Name, Last Name and\n            Email will only be used if it is a new company. If the Company name\n            appears multiple times we will check the email address to find a\n            matching company. If email address doesn't identify a matching\n            company then the invoice creation will be rejected.\n          type: string\n        CurrencyCode:\n          description: Expects ISO Standard 3 character currency code. If left blank the\n            currency will default to account's currency in general setting. For\n            existing companies this field will be ignored and the invoice will\n            use the currency of the customer. For new customers if the currency\n            is not specified then account currency will be used otherwise the\n            specified currency will be used.\n          type: string\n        CustomerPONumber:\n          description: Plain UTF8 text. 100 characters max\n          type: string\n        DateIssued:\n          description: If not specified it will use today's date. The date should be\n            specified as local date.\n          format: date-time\n          type: string\n        DueDate:\n          description: It will be auto calculated based on the payment term and issue date.\n            Due Date must be greater than or equal to Issue Date. If the Due\n            Date is specified then Payment Terms will be set to -1 (Custom)\n          format: date-time\n          type: string\n        Email:\n          type: string\n        ExchangeRate:\n          description: Exchange rate is only valid for invoices in currency other than\n            default account currency. If not specified it will get the market\n            rate based on the Date Issued.\n          format: double\n          type: number\n        Firstname:\n          description: Specified value will be used to create a new customer contact only\n            if a new customer is being created.\n          type: string\n        InvoiceNumber:\n          description: Pass any string. If left blank it will use the next number in the\n            auto incrementing sequence. If an integer is passed then the largest\n            integer will be use as the seed to auto generate the next invoice\n            number in the sequence.\n          type: string\n        InvoiceTemplateIDFK:\n          description: If left blank the account default invoice template will be used.\n          format: int32\n          type: integer\n        Lastname:\n          description: Specified value will be used to create a new customer contact only\n            if a new customer is being created.\n          type: string\n        LineItems:\n          items:\n            $ref: \"#/components/schemas/NewInvoiceLineItem\"\n          type: array\n        Notes:\n          description: Plain UTF8 text. (no HTML). Max 2000 characters\n          type: string\n        PaymentTerms:\n          description: \" \\\"If left blank we will set it to customer default. If specified\n            then it must match one of your existing pre configured payment term\n            periods. Your account starts with:\\r\n\n            (-1 --- Custom, 0 --- Upon Receipt, 7 --- 7 Days, 15 ---\n            15 Days, 30 --- 30 Days, 45 --- 45 Days, 60 --- 60 Days)\"\n          format: int32\n          type: integer\n        Subject:\n          description: Plain UTF8 text. (no HTML). 255 characters max\n          type: string\n        TransactionPrefix:\n          description: A prefix for the Invoice number. e.g. 'INV'. If left blank it will\n            be set to the account default. Max length 20 characters.\n          type: string\n        TransactionTaxConfigCode:\n          description: Possible values are (EX --- Tax Exclusive, INC --- Tax Inclusive).\n            If left empty it will use the account default.\n          type: string\n      type: object\n    NewInvoiceLineItem:\n      description: Line item to be added to new invoice\n      properties:\n        Description:\n          description: Plain UTF8 text. (no HTML)\n          type: string\n        Discount:\n          description: Enter 10.5 to give a 10.5% discount\n          format: double\n          type: number\n        InventoryItemIDFK:\n          description: If not specified then Inventory Item Name must be specified.\n          format: int32\n          type: integer\n        InventoryItemName:\n          description: If not specified then Inventory item ID must be specified. If\n            specified and not matched to any existing inventory items then a new\n            inventory item will be created. Max 200 characters.\n          type: string\n        ProjectIDFK:\n          description: Optional. Project ID of an Avaza Project that belongs to this\n            customer, so line item is attributed to that Project for reporting.\n          format: int32\n          type: integer\n        Quantity:\n          description: The quantity for the line item\n          format: double\n          type: number\n        TaxIDFK:\n          format: int32\n          type: integer\n        TaxName:\n          description: Must be specified if the Tax ID is blank. If the Tax Name is\n            specified it will be matched to an existing Tax Name or else a new\n            Tax will be created.\n          type: string\n        TaxPercent:\n          description: The Tax Percent will only be used if a new tax is being created.\n          format: double\n          type: number\n        UnitPrice:\n          description: The unit price for the lineitem.\n          format: double\n          type: number\n      required:\n        - Quantity\n        - UnitPrice\n      type: object\n    NewPayment:\n      properties:\n        Amount:\n          format: double\n          type: number\n        CustomerIDFK:\n          description: Only required if no invoice allocations specified.\n          format: int32\n          type: integer\n        DateIssued:\n          description: Date of Payment. If not specified, assumes today.\n          format: date-time\n          type: string\n        ExchangeRate:\n          description: Optional. Only used when the Customer's currecy is different from\n            the Avaza account's base currency. Specifies the exchange rate that\n            should apply between the customer currency and base currency. If not\n            provided we will obtain an up to date exchange rate for the Payment\n            Issue Date.\n          format: double\n          type: number\n        Notes:\n          type: string\n        PaymentAllocations:\n          description: List of amounts within this payment that are allocated to invoices.\n            The sum of these be less than or equal to the payment amount.\n          items:\n            $ref: \"#/components/schemas/NewPaymentAllocation\"\n          type: array\n        PaymentNumber:\n          description: Optional. If not specified will be automatically generated\n          type: string\n        PaymentProviderCode:\n          description: Optional for storing the payment provider who was the source of\n            funds.\n          type: string\n        TransactionPrefix:\n          description: Optional to override the default prefix added to Payment Numbers\n          type: string\n        TransactionReference:\n          description: \"Optional for storing the reference # of the payment method.\"\n          type: string\n      type: object\n    NewPaymentAllocation:\n      properties:\n        AllocationAmount:\n          description: The Amount being allocated to the invoice. Expects same currency as\n            invoice currency\n          format: double\n          type: number\n        AllocationDate:\n          description: Optional. Defaults to the current time in the Avaza account's\n            timezone. The date the allocation is applied to the invoice. Can be\n            difference from the Payment Date when doing prepayments etc.\n          format: date-time\n          type: string\n        InvoiceTransactionIDFK:\n          description: The Avaza Invoice TransactionID that is having a payment amount\n            allocated to it.\n          format: int64\n          type: integer\n      type: object\n    NewProjectModel:\n      properties:\n        BudgetAmount:\n          format: double\n          type: number\n        BudgetHours:\n          format: double\n          type: number\n        CompanyIDFK:\n          description: An ID of a company in Avaza to create the Project under. You must\n            provide either a CompanyID, or a CompanyName\n          format: int32\n          type: integer\n        CompanyName:\n          description: The name for a Company to create the project under. Will create\n            company unless it matches an existing company name\n          type: string\n        CurrencyCode:\n          description: The ISO 3 letter currency code to use when creating a new Company.\n            If not provided, the account's default currency will be used.\n          type: string\n        EndDate:\n          format: date-time\n          type: string\n        PopulateDefaultProjectMembers:\n          type: boolean\n        ProjectCategoryIDFK:\n          format: int32\n          type: integer\n        ProjectNotes:\n          description: Any descriptive notes about the project. (2000 characters max)\n          type: string\n        ProjectStatusCode:\n          type: string\n        ProjectTitle:\n          description: The title of the new project. (255 characters max)\n          type: string\n        StartDate:\n          format: date-time\n          type: string\n        TimesheetApprovalRequiredbyDefault:\n          type: boolean\n        isTaskRequiredOnTimesheet:\n          type: boolean\n      required:\n        - ProjectTitle\n      type: object\n    NewSection:\n      properties:\n        EndDateUTC:\n          format: date-time\n          type: string\n        ProjectIDFK:\n          format: int32\n          type: integer\n        StartDateUTC:\n          format: date-time\n          type: string\n        Title:\n          type: string\n      type: object\n    NewTag:\n      properties:\n        Color:\n          description: \"Hex color code in format #000000\"\n          type: string\n        Name:\n          type: string\n      type: object\n    NewTask:\n      properties:\n        AccountTaskTypeIDFK:\n          format: int32\n          type: integer\n        AssignedToUserIDFK:\n          format: int32\n          type: integer\n        DateDue:\n          format: date-time\n          type: string\n        DateDueUTC:\n          format: date-time\n          type: string\n        DateStart:\n          format: date-time\n          type: string\n        DateStartUTC:\n          format: date-time\n          type: string\n        Description:\n          type: string\n        EstimatedEffort:\n          description: Decimal hours\n          format: double\n          type: number\n        ProjectIDFK:\n          format: int32\n          type: integer\n        SectionIDFK:\n          format: int32\n          type: integer\n        Tags:\n          description: Collection of tags specifying Name and Color (Hex)\n          items:\n            $ref: \"#/components/schemas/NewTag\"\n          type: array\n        TaskPriorityCode:\n          type: string\n        Title:\n          type: string\n      required:\n        - ProjectIDFK\n        - SectionIDFK\n        - Title\n      type: object\n    NewTimesheet:\n      properties:\n        Duration:\n          description: The duration of the timesheet, in decimal hours. If null or 0, a\n            timer will be started.\n          format: double\n          type: number\n        EntryDate:\n          description: The date of the timesheet entry, with an optional start time\n            component.\n          format: date-time\n          type: string\n        Notes:\n          description: Timesheet Notes\n          type: string\n        ProjectIDFK:\n          description: The project to associate the timesheet with.\n          format: int32\n          type: integer\n        TaskIDFK:\n          description: Optional. Link the timesheet to a specific task\n          format: int32\n          type: integer\n        TimesheetCategoryIDFK:\n          description: The Project timesheet category to link the timesheet to\n          format: int32\n          type: integer\n        UserIDFK:\n          description: UserID for a Timesheet user in Avaza\n          format: int32\n          type: integer\n        hasStartEndTime:\n          description: If true, the start time will be take from the time component of the\n            Entry Date field, and the end time will be calculated by adding the\n            Duration to the StartDate\n          type: boolean\n        isInvoiced:\n          description: Optional. False by default. Allows you to mark the timesheet as\n            invoiced in an external system.\n          type: boolean\n      type: object\n    Payment:\n      properties:\n        AccountIDFK:\n          format: int32\n          type: integer\n        Balance:\n          format: double\n          type: number\n        CurrencyCode:\n          type: string\n        CustomerIDFK:\n          format: int32\n          type: integer\n        DateCreated:\n          format: date-time\n          type: string\n        DateIssued:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        ExchangeRate:\n          format: double\n          type: number\n        Notes:\n          type: string\n        PaymentAllocations:\n          items:\n            $ref: \"#/components/schemas/PaymentAllocation\"\n          type: array\n        PaymentNumber:\n          type: string\n        PaymentProviderCode:\n          type: string\n        TotalAmount:\n          format: double\n          type: number\n        TransactionID:\n          format: int64\n          type: integer\n        TransactionPrefix:\n          type: string\n        TransactionReference:\n          type: string\n        TransactionStatusCode:\n          type: string\n      type: object\n    PaymentAllocation:\n      properties:\n        AllocationAmount:\n          format: double\n          type: number\n        AllocationDate:\n          format: date-time\n          type: string\n        InvoiceTransactionIDFK:\n          format: int64\n          type: integer\n        PaymentTransactionIDFK:\n          format: int64\n          type: integer\n        TransactionAllocationID:\n          format: int64\n          type: integer\n      type: object\n    PaymentList:\n      properties:\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        Payments:\n          items:\n            $ref: \"#/components/schemas/Payment\"\n          type: array\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    ProjectDetails:\n      properties:\n        BudgetAmount:\n          format: double\n          type: number\n        BudgetHours:\n          format: double\n          type: number\n        CompanyIDFK:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        DateCreated:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        DefaultAccountTaskTypeIDFK:\n          format: int32\n          type: integer\n        DefaultAccountTaskTypeName:\n          type: string\n        EndDate:\n          format: date-time\n          type: string\n        Members:\n          items:\n            $ref: \"#/components/schemas/ProjectMemberDetails\"\n          type: array\n        Notes:\n          type: string\n        ProjectBillableTypeCode:\n          description: \"Possible values: CategoryHourly, NoRate, NotBillable, PersonHourly,\n            ProjectHourly\"\n          type: string\n        ProjectBudgetTypeCode:\n          description: \"Possible Values: CategoryHours, NoBudget, PersonHours, ProjectFees,\n            ProjectHours\"\n          type: string\n        ProjectCategoryColor:\n          description: \"Html Hex Color Code starting with #\"\n          type: string\n        ProjectCategoryIDFK:\n          format: int32\n          type: integer\n        ProjectCategoryName:\n          type: string\n        ProjectHourlyRate:\n          format: double\n          type: number\n        ProjectID:\n          format: int32\n          type: integer\n        ProjectStatusCode:\n          description: \"Possible values: NotStarted, InProgress, Complete\"\n          type: string\n        ProjectTags:\n          items:\n            $ref: \"#/components/schemas/ProjectTagItem\"\n          type: array\n        Sections:\n          items:\n            $ref: \"#/components/schemas/ProjectSectionDetails\"\n          type: array\n        StartDate:\n          format: date-time\n          type: string\n        Title:\n          type: string\n        isArchived:\n          type: boolean\n        isTaskRequiredOnTimesheet:\n          type: boolean\n      type: object\n    ProjectList:\n      properties:\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        Projects:\n          items:\n            $ref: \"#/components/schemas/ProjectListDetails\"\n          type: array\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    ProjectListDetails:\n      properties:\n        CompanyIDFK:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        DateCreated:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        DefaultAccountTaskTypeIDFK:\n          format: int32\n          type: integer\n        DefaultAccountTaskTypeName:\n          type: string\n        Notes:\n          type: string\n        ProjectID:\n          format: int32\n          type: integer\n        Title:\n          type: string\n        isArchived:\n          type: boolean\n        isTaskRequiredOnTimesheet:\n          type: boolean\n      type: object\n    ProjectMemberDetails:\n      properties:\n        BudgetAmount:\n          format: double\n          type: number\n        CostAmount:\n          format: double\n          type: number\n        Email:\n          type: string\n        Firstname:\n          type: string\n        Fullname:\n          type: string\n        Lastname:\n          type: string\n        RateAmount:\n          format: double\n          type: number\n        UserIDFK:\n          format: int32\n          type: integer\n        canCommentOnTasks:\n          type: boolean\n        canCreateTasks:\n          type: boolean\n        canDeleteTasks:\n          type: boolean\n        canUpdateTasks:\n          type: boolean\n        isMemberDisabled:\n          type: boolean\n        isProjectManager:\n          type: boolean\n        isTimesheetAllowed:\n          type: boolean\n        isTimesheetApprovalRequired:\n          type: boolean\n        isTimesheetApprover:\n          type: boolean\n      type: object\n    ProjectSectionDetails:\n      properties:\n        DisplayOrder:\n          format: int32\n          type: integer\n        EndDate:\n          format: date-time\n          type: string\n        SectionID:\n          format: int32\n          type: integer\n        StartDate:\n          format: date-time\n          type: string\n        Title:\n          type: string\n      type: object\n    ProjectTagItem:\n      properties:\n        Name:\n          type: string\n        ProjectTagID:\n          format: int32\n          type: integer\n      type: object\n    ProjectTimesheetCategoryDetails:\n      properties:\n        AccountIDFK:\n          format: int32\n          type: integer\n        BudgetHours:\n          format: double\n          type: number\n        CostAmount:\n          format: double\n          type: number\n        Name:\n          type: string\n        ProjectIDFK:\n          format: int32\n          type: integer\n        RateAmount:\n          format: double\n          type: number\n        TimeSheetCategoryIDFK:\n          format: int32\n          type: integer\n        isBillable:\n          type: boolean\n      type: object\n    ProjectTimesheetCategoryList:\n      properties:\n        Categories:\n          items:\n            $ref: \"#/components/schemas/ProjectTimesheetCategoryDetails\"\n          type: array\n      type: object\n    RecipientDetails:\n      properties:\n        CompanyIDFK:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        RecipientBillingAddressCity:\n          type: string\n        RecipientBillingAddressCountryCode:\n          type: string\n        RecipientBillingAddressLine:\n          type: string\n        RecipientBillingAddressPostCode:\n          type: string\n        RecipientBillingAddressState:\n          type: string\n        RecipientFormattedBillingAddress:\n          type: string\n      type: object\n    RoleDetails:\n      properties:\n        RoleCode:\n          type: string\n        RoleName:\n          type: string\n      type: object\n    ScheduleAssignmentDetails:\n      properties:\n        AccountIDFK:\n          format: int32\n          type: integer\n        DateCreated:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        Duration:\n          format: double\n          type: number\n        ScheduleAssignmentID:\n          format: int64\n          type: integer\n        ScheduleDate:\n          format: date-time\n          type: string\n        ScheduleSeriesIDFK:\n          format: int64\n          type: integer\n        UserIDFK:\n          format: int32\n          type: integer\n      type: object\n    ScheduleAssignmentList:\n      properties:\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        ScheduleAssignments:\n          items:\n            $ref: \"#/components/schemas/ScheduleAssignmentDetails\"\n          type: array\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    ScheduleSeriesDetails:\n      properties:\n        AccountIDFK:\n          format: int32\n          type: integer\n        CompanyIDFK:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        DateCreated:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        EndDate:\n          format: date-time\n          type: string\n        Firstname:\n          type: string\n        HoursPerDay:\n          format: double\n          type: number\n        Lastname:\n          type: string\n        LeaveTypeIDFK:\n          format: int32\n          type: integer\n        LeaveTypeName:\n          type: string\n        Notes:\n          type: string\n        ProjectIDFK:\n          format: int32\n          type: integer\n        ProjectTitle:\n          type: string\n        ScheduleOnDaysOff:\n          type: boolean\n        ScheduleSeriesID:\n          format: int64\n          type: integer\n        StartDate:\n          format: date-time\n          type: string\n        TaskIDFK:\n          format: int32\n          type: integer\n        TaskTitle:\n          type: string\n        TimeSheetCategoryIDFK:\n          format: int32\n          type: integer\n        TimeSheetCategoryName:\n          type: string\n        TotalDuration:\n          format: double\n          type: number\n        UpdatedByUserIDFK:\n          format: int32\n          type: integer\n        UserIDFK:\n          format: int32\n          type: integer\n      type: object\n    ScheduleSeriesList:\n      properties:\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        ScheduleSeries:\n          items:\n            $ref: \"#/components/schemas/ScheduleSeriesDetails\"\n          type: array\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    SectionDetails:\n      properties:\n        DisplayOrder:\n          format: int32\n          type: integer\n        EndDate:\n          format: date-time\n          type: string\n        EndDateUTC:\n          format: date-time\n          type: string\n        ProjectIDFK:\n          format: int32\n          type: integer\n        SectionID:\n          format: int32\n          type: integer\n        StartDate:\n          format: date-time\n          type: string\n        StartDateUTC:\n          format: date-time\n          type: string\n        Title:\n          type: string\n      type: object\n    SectionList:\n      properties:\n        Sections:\n          items:\n            $ref: \"#/components/schemas/SectionDetails\"\n          type: array\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    SubscribeResult:\n      properties:\n        ID:\n          format: int32\n          type: integer\n      type: object\n    TagItem:\n      properties:\n        Color:\n          type: string\n        Name:\n          type: string\n        TagID:\n          format: int64\n          type: integer\n      type: object\n    TaskDetails:\n      properties:\n        AccountTaskTypeIDFK:\n          format: int32\n          type: integer\n        ActualTime:\n          format: double\n          type: number\n        AssignedToEmail:\n          type: string\n        AssignedToFirstname:\n          type: string\n        AssignedToLastname:\n          type: string\n        AssignedToUserIDFK:\n          type: string\n        DateCreated:\n          format: date-time\n          type: string\n        DateDue:\n          format: date-time\n          type: string\n        DateDueUTC:\n          format: date-time\n          type: string\n        DateStart:\n          format: date-time\n          type: string\n        DateStartUTC:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        Description:\n          type: string\n        DescriptionNoHTML:\n          type: string\n        EstimatedEffort:\n          format: double\n          type: number\n        PercentComplete:\n          format: double\n          type: number\n        ProjectIDFK:\n          format: int32\n          type: integer\n        ProjectTitle:\n          type: string\n        SectionIDFK:\n          format: int32\n          type: integer\n        SectionTitle:\n          type: string\n        Tags:\n          items:\n            $ref: \"#/components/schemas/TagItem\"\n          type: array\n        TaskID:\n          format: int32\n          type: integer\n        TaskPriorityCode:\n          type: string\n        TaskPriorityName:\n          type: string\n        TaskStatusCode:\n          type: string\n        TaskStatusName:\n          type: string\n        Title:\n          type: string\n        isCompleteStatus:\n          type: boolean\n      type: object\n    TaskList:\n      properties:\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        Tasks:\n          items:\n            $ref: \"#/components/schemas/TaskDetails\"\n          type: array\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    TaskStatusDetails:\n      properties:\n        AccountTaskTypeIDFK:\n          format: int32\n          type: integer\n        Color:\n          type: string\n        DisplayOrder:\n          format: int32\n          type: integer\n        Name:\n          type: string\n        TaskStatusCode:\n          type: string\n        TaskTypeName:\n          type: string\n        isComplete:\n          type: boolean\n      type: object\n    TaskStatusList:\n      properties:\n        statuses:\n          items:\n            $ref: \"#/components/schemas/TaskStatusDetails\"\n          type: array\n      type: object\n    TaskTypeList:\n      properties:\n        tasktypes:\n          items:\n            $ref: \"#/components/schemas/AccountTaskTypeDetails\"\n          type: array\n      type: object\n    TaxComponent:\n      properties:\n        ComponentTaxCode:\n          type: string\n        Name:\n          type: string\n        Percentage:\n          format: double\n          type: number\n        TaxComponentID:\n          format: int32\n          type: integer\n        TaxIDFK:\n          format: int32\n          type: integer\n        isCompound:\n          type: boolean\n      type: object\n    TaxItem:\n      properties:\n        CalculatedPercent:\n          format: double\n          type: number\n        Name:\n          type: string\n        TaxCode:\n          type: string\n        TaxComponents:\n          items:\n            $ref: \"#/components/schemas/TaxComponent\"\n          type: array\n        TaxID:\n          format: int32\n          type: integer\n      type: object\n    TaxList:\n      properties:\n        Taxes:\n          items:\n            $ref: \"#/components/schemas/TaxItem\"\n          type: array\n      type: object\n    TimesheetDetails:\n      properties:\n        ApprovedBy:\n          type: string\n        CategoryName:\n          type: string\n        CustomerIDFK:\n          format: int32\n          type: integer\n        CustomerName:\n          type: string\n        DateApproved:\n          format: date-time\n          type: string\n        DateCreated:\n          format: date-time\n          type: string\n        DateUpdated:\n          format: date-time\n          type: string\n        Duration:\n          format: double\n          type: number\n        Email:\n          type: string\n        EndTimeLocal:\n          format: date-time\n          type: string\n        EndTimeUTC:\n          format: date-time\n          type: string\n        EntryDate:\n          format: date-time\n          type: string\n        Firstname:\n          type: string\n        HasTimer:\n          type: boolean\n        InvoiceIDFK:\n          format: int64\n          type: integer\n        InvoiceLineItemIDFK:\n          format: int64\n          type: integer\n        Lastname:\n          type: string\n        Notes:\n          type: string\n        ProjectIDFK:\n          format: int32\n          type: integer\n        ProjectTitle:\n          type: string\n        StartTimeLocal:\n          format: date-time\n          type: string\n        StartTimeUTC:\n          format: date-time\n          type: string\n        TaskIDFK:\n          format: int32\n          type: integer\n        TaskTitle:\n          type: string\n        TimerStartedAtUTC:\n          format: date-time\n          type: string\n        TimesheetCategoryIDFK:\n          format: int32\n          type: integer\n        TimesheetEntryApprovalStatusCode:\n          type: string\n        TimesheetEntryID:\n          format: int64\n          type: integer\n        TimesheetUserTimeZone:\n          type: string\n        UserIDFK:\n          format: int32\n          type: integer\n        isBillable:\n          type: boolean\n        isInvoiced:\n          type: boolean\n      type: object\n    TimesheetList:\n      properties:\n        PageNumber:\n          format: int32\n          type: integer\n        PageSize:\n          format: int32\n          type: integer\n        Timesheets:\n          items:\n            $ref: \"#/components/schemas/TimesheetDetails\"\n          type: array\n        TotalCount:\n          format: int32\n          type: integer\n      type: object\n    UpdateCompany:\n      properties:\n        BillingAddress:\n          type: string\n        BillingAddressCity:\n          type: string\n        BillingAddressLine:\n          type: string\n        BillingAddressPostCode:\n          type: string\n        BillingAddressState:\n          type: string\n        BillingCountryCode:\n          type: string\n        Comments:\n          type: string\n        CompanyID:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        Fax:\n          type: string\n        FieldsToUpdate:\n          items:\n            type: string\n          type: array\n        Phone:\n          type: string\n        TaxNumber:\n          type: string\n        website:\n          type: string\n      type: object\n    UpdateTask:\n      properties:\n        AssignedToUserIDFK:\n          format: int32\n          type: integer\n        DateDue:\n          format: date-time\n          type: string\n        DateDueUTC:\n          format: date-time\n          type: string\n        DateStart:\n          format: date-time\n          type: string\n        DateStartUTC:\n          format: date-time\n          type: string\n        Description:\n          type: string\n        EstimatedEffort:\n          description: Decimal hours\n          format: double\n          type: number\n        FieldsToUpdate:\n          items:\n            type: string\n          type: array\n        PercentComplete:\n          format: int32\n          type: integer\n        SectionIDFK:\n          format: int32\n          type: integer\n        Tags:\n          items:\n            $ref: \"#/components/schemas/NewTag\"\n          type: array\n        TaskID:\n          format: int32\n          type: integer\n        TaskPriorityCode:\n          type: string\n        TaskStatusCode:\n          type: string\n        Title:\n          type: string\n      required:\n        - TaskID\n        - FieldsToUpdate\n      type: object\n    UpdateTimesheetModel:\n      properties:\n        Duration:\n          format: double\n          type: number\n        EntryDate:\n          format: date-time\n          type: string\n        FieldsToUpdate:\n          items:\n            type: string\n          type: array\n        Notes:\n          type: string\n        ProjectIDFK:\n          format: int32\n          type: integer\n        TaskIDFK:\n          format: int32\n          type: integer\n        TimeSheetEntryID:\n          format: int64\n          type: integer\n        TimesheetCategoryIDFK:\n          format: int32\n          type: integer\n        hasStartEndTime:\n          type: boolean\n      required:\n        - TimeSheetEntryID\n        - FieldsToUpdate\n        - ProjectIDFK\n      type: object\n    UserDetails:\n      properties:\n        AccountIDFK:\n          format: int32\n          type: integer\n        CompanyIDFK:\n          format: int32\n          type: integer\n        CompanyName:\n          type: string\n        DefaultBillableRate:\n          format: double\n          type: number\n        DefaultCostRate:\n          format: double\n          type: number\n        Email:\n          type: string\n        Firstname:\n          type: string\n        FridayAvailableHours:\n          format: double\n          type: number\n        Lastname:\n          type: string\n        Mobile:\n          type: string\n        MondayAvailableHours:\n          format: double\n          type: number\n        Phone:\n          type: string\n        PositionTitle:\n          type: string\n        Roles:\n          items:\n            $ref: \"#/components/schemas/RoleDetails\"\n          type: array\n        SaturdayAvailableHours:\n          format: double\n          type: number\n        SundayAvailableHours:\n          format: double\n          type: number\n        Tags:\n          items:\n            $ref: \"#/components/schemas/UserTagDetails\"\n          type: array\n        ThursdayAvailableHours:\n          format: double\n          type: number\n        TimeZone:\n          type: string\n        TuesdayAvailableHours:\n          format: double\n          type: number\n        UserID:\n          format: int32\n          type: integer\n        WednesdayAvailableHours:\n          format: double\n          type: number\n        isTeamMember:\n          type: boolean\n      type: object\n    UserList:\n      properties:\n        Users:\n          items:\n            $ref: \"#/components/schemas/UserDetails\"\n          type: array\n      type: object\n    UserTagDetails:\n      properties:\n        UserTagID:\n          format: int32\n          type: integer\n        UserTagName:\n          type: string\n      type: object\n    WebhookDetails:\n      properties:\n        EventCode:\n          type: string\n        NotificationURL:\n          type: string\n        SubscriptionID:\n          format: int32\n          type: integer\n        UserIDFK:\n          format: int32\n          type: integer\n      type: object\n    WebhookList:\n      properties:\n        Webhooks:\n          items:\n            $ref: \"#/components/schemas/WebhookDetails\"\n          type: array\n      type: object\n"
		}
	},
	"Error": "buildIR: make ir: path \"/api/Task\": put: requestBody: contents: application/x-www-form-urlencoded: form parameter \"Tags\": nested objects not allowed",
	"NotImplemented": [
		"oauth2 security"
	]
}