{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ONDC-Official/ONDC-Protocol-Specs"
		},
		"file": {
			"name": "retail-hyperlocal.yaml",
			"size": 0,
			"path": "protocol-specifications/core/v0/api/retail-hyperlocal.yaml",
			"byteSize": 96848,
			"content": "openapi: 3.0.0\ninfo:\n  title: ONDC Protocol API for retail (grocery, f\u0026b)\n  description: ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food\n              This is an adaptation of Beckn Core version 0.9.3\n  version: 1.0.24\nsecurity:\n  - SubscriberAuth: []\n  - GatewaySubscriberAuth: []\n  - GatewaySubscriberAuthNew: []\nexternalDocs:\n  description: Contract between retail buyer and seller apps (change tracking here, details in spec)\n  url: https://docs.google.com/document/d/12oMC4A05jT5rjCbY-M7j4T2oekr9bqcvSOpTI0jFEgE/edit\npaths:\n  /search:\n    post:\n      tags:\n        - ONDC Seller App\n        - ONDC Gateway\n      description: Search for services by intent\n      requestBody:\n        description: Buyer searches for products and services\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    intent:\n                      $ref: '#/components/schemas/Intent'\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /select:\n    post:\n      tags:\n        - ONDC Seller App\n      description: Select items from the catalog and build your order\n      requestBody:\n        description: Buyer selects one or more catalog items\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /init:\n    post:\n      tags:\n        - ONDC Seller App\n      description: Initialize an order by providing billing and/or shipping details\n      requestBody:\n        description: Buyer initializes order checkout\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /confirm:\n    post:\n      tags:\n        - ONDC Seller App\n      description: Initialize an order by providing billing and/or shipping details\n      requestBody:\n        description: Buyer confirms an order\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /status:\n    post:\n      tags:\n        - ONDC Seller App\n      description: Fetch the latest order object\n      requestBody:\n        description: Buyer checks for status of order\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order_id:\n                      $ref: '#/components/schemas/Order/properties/id'\n                  required:\n                    - order_id\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /track:\n    post:\n      tags:\n        - ONDC Seller App\n      description: Track an active order\n      requestBody:\n        description: Buyer tracks fulfillment of an order\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order_id:\n                      $ref: '#/components/schemas/Order/properties/id'\n                    callback_url:\n                      type: string\n                      format: uri\n                  required:\n                    - order_id\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /cancel:\n    post:\n      tags:\n        - ONDC Seller App\n      description: Cancel an order\n      requestBody:\n        description: Buyer cancels an order\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order_id:\n                      $ref: '#/components/schemas/Order/properties/id'\n                    cancellation_reason_id:\n                      $ref: '#/components/schemas/Option/properties/id'\n                    descriptor:\n                      $ref: '#/components/schemas/Descriptor'\n                  required:\n                    - order_id\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /update:\n    post:\n      tags:\n        - ONDC Seller App\n      description: Update an order\n      requestBody:\n        description: Buyer updates an order\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    update_target:\n                      description: 'Comma separated values of order objects being updated. For example: ```\"update_target\":\"item,billing,fulfillment\"```'\n                      type: string\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - update_target\n                    - order\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /rating:\n    post:\n      tags:\n        - ONDC Seller App\n      description: Provide feedback on a service\n      requestBody:\n        description: Buyer rates for one or more rating categories\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  $ref: '#/components/schemas/Rating'\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /support:\n    post:\n      tags:\n        - ONDC Seller App\n      description: Contact support\n      requestBody:\n        description: Buyer searches for Support Contact details\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    ref_id:\n                      type: string\n                      description: ID of the element for which support is needed\n              required:\n                - context\n                - message\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_search:\n    post:\n      tags:\n        - ONDC Buyer App\n        - ONDC Gateway\n      description: Send catalog\n      requestBody:\n        description: Sellers provide their catalog in response to buyer search\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    catalog:\n                      $ref: '#/components/schemas/Catalog'\n                  required:\n                    - catalog\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - context\n  /on_select:\n    post:\n      tags:\n        - ONDC Buyer App\n      description: Send draft order object with quoted price for selected items\n      requestBody:\n        description: Seller provides quote for selected items\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      type: object\n                      properties:\n                        provider:\n                          $ref: '#/components/schemas/Provider'\n                        provider_location:\n                          $ref: '#/components/schemas/Location'\n                        items:\n                          type: array\n                          items:\n                            allOf:\n                              - $ref: '#/components/schemas/Item'\n                              - properties:\n                                  quantity:\n                                    $ref: '#/components/schemas/ItemQuantity'\n                        add_ons:\n                          type: array\n                          items:\n                            $ref: '#/components/schemas/AddOn'\n                        offers:\n                          type: array\n                          items:\n                            $ref: '#/components/schemas/Offer'\n                        quote:\n                          $ref: '#/components/schemas/Quotation'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_init:\n    post:\n      tags:\n        - ONDC Buyer App\n      description: Send order object with payment details updated\n      requestBody:\n        description: Seller provides terms and conditions for an order\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      type: object\n                      properties:\n                        provider:\n                          type: object\n                          properties:\n                            id:\n                              $ref: '#/components/schemas/Provider/properties/id'\n                        provider_location:\n                          type: object\n                          properties:\n                            id:\n                              $ref: '#/components/schemas/Location/properties/id'\n                        items:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                $ref: '#/components/schemas/Item/properties/id'\n                              quantity:\n                                $ref: '#/components/schemas/ItemQuantity/properties/selected'\n                        add_ons:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                $ref: '#/components/schemas/AddOn/properties/id'\n                        offers:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              id:\n                                $ref: '#/components/schemas/Offer/properties/id'\n                        billing:\n                          $ref: '#/components/schemas/Billing'\n                        fulfillment:\n                          $ref: '#/components/schemas/Fulfillment'\n                        quote:\n                          $ref: '#/components/schemas/Quotation'\n                        payment:\n                          $ref: '#/components/schemas/Payment'\n                      required:\n                        - provider.id\n                        - provider_location.id\n                        - items.id\n                        - items.quantity\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_confirm:\n    post:\n      tags:\n        - ONDC Buyer App\n      description: Send active order object\n      requestBody:\n        description: Seller confirms order\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_track:\n    post:\n      tags:\n        - ONDC Buyer App\n      description: Send tracking details of an active order\n      requestBody:\n        description: Seller provides tracking details for an order\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    tracking:\n                      $ref: '#/components/schemas/Tracking'\n                  required:\n                    - tracking\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_cancel:\n    post:\n      tags:\n        - ONDC Buyer App\n      description: Send cancellation request_id with reasons list in case of cancellation request. Else send cancelled order object\n      requestBody:\n        description: Seller provides response to cancellation request\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_update:\n    post:\n      tags:\n        - ONDC Buyer App\n      description: Returns updated service with updated runtime object\n      requestBody:\n        description: Seller provides response to order update\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_status:\n    post:\n      tags:\n        - ONDC Buyer App\n      description: Fetch the status of a Service\n      requestBody:\n        description: Seller provides status information for order\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    order:\n                      $ref: '#/components/schemas/Order'\n                  required:\n                    - order\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_rating:\n    post:\n      tags:\n        - ONDC Buyer App\n      description: Provide feedback on a service\n      requestBody:\n        description: Seller provides response to rating provided by buyer\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  $ref: '#/components/schemas/RatingAck'\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /on_support:\n    post:\n      tags:\n        - ONDC Buyer App\n      description: Contact Support\n      requestBody:\n        description: Seller provides Contact Support details\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    phone:\n                      type: string\n                      format: phone\n                    email:\n                      type: string\n                      format: email\n                    uri:\n                      type: string\n                      format: uri\n                error:\n                  $ref: '#/components/schemas/Error'\n              required:\n                - context\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /get_cancellation_reasons:\n    post:\n      tags:\n        - Seller App Meta APIs\n      description: Get cancellation reasons from the Seller App\n      requestBody:\n        description: Context header is sent as the request\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /cancellation_reasons:\n    post:\n      tags:\n        - Buyer App Meta APIs\n      description: Get cancellation reasons from the Seller App\n      requestBody:\n        description: List of cancellation reasons.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    cancellation_reasons:\n                      type: array\n                      items:\n                          $ref: '#/components/schemas/Option'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /get_return_reasons:\n    post:\n      tags:\n        - Seller App Meta APIs\n      description: Get return reasons from the Seller App\n      requestBody:\n        description: Context header is sent as the request\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /return_reasons:\n    post:\n      tags:\n        - Buyer App Meta APIs\n      description: Get return reasons from the Seller App\n      requestBody:\n        description: List of return reasons\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n                return_reasons:\n                  type: array\n                  items:\n                      $ref: '#/components/schemas/Option'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /get_rating_categories:\n    post:\n      tags:\n        - Seller App Meta APIs\n      description: Get a list of categories that can be rated by the Seller App\n      requestBody:\n        description: Context header is sent as the request\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /rating_categories:\n    post:\n      tags:\n        - Buyer App Meta APIs\n      description: Get a list of categories that can be rated by the Buyer App\n      requestBody:\n        description: Array of categories which can be rated\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n                rating_categories:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Rating/properties/rating_category'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /get_feedback_categories:\n    post:\n      tags:\n        - Seller Meta APIs\n      description: Get a list of categories for which feedback can be given by the Buyer App\n      requestBody:\n        description: Context header is sent as the request\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /feedback_categories:\n    post:\n      tags:\n        - Buyer App Meta APIs\n      description: Get a list of categories for which feedback can be given by the Buyer App\n      requestBody:\n        description: Array of categories for which feedback can be given by the Buyer App\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                    $ref: '#/components/schemas/Context'\n                feedback_categories:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Rating/properties/rating_category'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /get_feedback_form:\n    post:\n      tags:\n        - Seller App Meta APIs\n      description: Request a feedback form from the Seller App\n      requestBody:\n        description: The rating value and category is sent by the Buyer App\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                  type: object\n                  properties:\n                    rating_value:\n                      $ref: '#/components/schemas/Rating/properties/value'\n                    rating_category:\n                      $ref: '#/components/schemas/Rating/properties/rating_category'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\n  /feedback_form:\n    post:\n      tags:\n        - Buyer App Meta APIs\n      description: Get a feedback form from the Seller App\n      requestBody:\n        description: Feedback form sent by the Buyer App\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                context:\n                  $ref: '#/components/schemas/Context'\n                message:\n                    $ref: '#/components/schemas/Feedback'\n      responses:\n        '200':\n          description: Acknowledgement of message received\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      ack:\n                        $ref: '#/components/schemas/Ack'\n                    required:\n                      - ack\n                  error:\n                    $ref: '#/components/schemas/Error'\n                required:\n                  - message\ncomponents:\n  securitySchemes:\n    SubscriberAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: 'Signature of message body using Buyer App or Seller App subscriber''s signing public key. \u003cbr/\u003e\u003cbr/\u003eFormat:\u003cbr/\u003e\u003cbr/\u003e\u003ccode\u003eAuthorization : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires) digest\",signature=\"Base64(signing string)\"\u003c/code\u003e'\n    GatewaySubscriberAuth:\n      type: apiKey\n      in: header\n      name: Proxy-Authorization\n      description: 'Signature of message body + BuyerApp/SellerApp''s Authorization header using Gateway''s signing public key. Format:\u003cbr/\u003e\u003cbr/\u003e\u003ccode\u003eProxy-Authorization : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires) digest\",signature=\"Base64(signing string)\"\u003c/code\u003e\u003cp\u003e\u003cb\u003eNote:\u003c/b\u003eThis header will be deprecated soon and will no longer be supported in future releases. New implementors are requested to use the X-Gateway-Authorization header. Existing implementations are requested to migrate their header to the new header. The deprecation date will be set after discussion as per the standard specification governance process.\u003c/p\u003e'\n    GatewaySubscriberAuthNew:\n      type: apiKey\n      in: header\n      name: X-Gateway-Authorization\n      description: 'Signature of message body + BuyerApp/SellerApp''s Authorization header using Gateway''s signing public key. Format:\u003cbr/\u003e\u003cbr/\u003e\u003ccode\u003eX-Gateway-Authorization : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires) digest\",signature=\"Base64(signing string)\"\u003c/code\u003e'\n  schemas:\n    Ack:\n      description: Describes the ACK response\n      type: object\n      properties:\n        status:\n          type: string\n          description: 'Describe the status of the ACK response. If schema validation passes, status is ACK else it is NACK'\n          enum:\n            - ACK\n            - NACK\n      required:\n        - status\n    AddOn:\n      description: Describes an add-on\n      type: object\n      properties:\n        id:\n          type: string\n          description: 'ID of the add-on. This follows the syntax {item.id}/add-on/{add-on unique id} for item specific add-on OR '\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        price:\n          $ref: '#/components/schemas/Price'\n    Address:\n      description: Describes an address\n      type: object\n      properties:\n        door:\n          type: string\n          description: Door / Shop number of the address\n        name:\n          type: string\n          description: 'Name of address if applicable. Example, shop name'\n        building:\n          type: string\n          description: Name of the building or block\n        street:\n          type: string\n          description: Street name or number\n        locality:\n          type: string\n          description: 'Name of the locality, apartments'\n        ward:\n          type: string\n          description: Name or number of the ward if applicable\n        city:\n          type: string\n          description: City name\n        state:\n          type: string\n          description: State name\n        country:\n          type: string\n          description: Country name\n        area_code:\n          type: string\n          description: 'Area code. This can be Pincode, ZIP code or any equivalent'\n    Agent:\n      description: Describes an order executor\n      allOf:\n        - $ref: '#/components/schemas/Person'\n        - $ref: '#/components/schemas/Contact'\n        - type: object\n          properties:\n            rateable:\n              $ref: '#/components/schemas/Rateable'\n    Authorization:\n      description: Describes an authorization mechanism\n      type: object\n      properties:\n        type:\n          type: string\n          description: Type of authorization mechanism used\n        token:\n          type: string\n          description: Token used for authorization\n        valid_from:\n          type: string\n          format: date-time\n          description: Timestamp in RFC3339 format from which token is valid\n        valid_to:\n          type: string\n          format: date-time\n          description: Timestamp in RFC3339 format until which token is valid\n        status:\n          type: string\n          description: Status of the token\n    Billing:\n      description: Describes a billing event\n      type: object\n      properties:\n        name:\n          description: Personal details of the customer needed for billing.\n          type: string\n        organization:\n          $ref: '#/components/schemas/Organization'\n        address:\n          $ref: '#/components/schemas/Address'\n        email:\n          type: string\n          format: email\n        phone:\n          type: string\n        time:\n          $ref: '#/components/schemas/Time'\n        tax_number:\n          description: GST number\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n      required:\n        - name\n        - phone\n        - tax_number\n    Cancellation:\n      description: Describes a cancellation event\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - full\n            - partial\n        ref_id:\n          type: string\n        policies:\n          type: array\n          items:\n            $ref: '#/components/schemas/Policy'\n        time:\n          type: string\n          format: date-time\n        cancelled_by:\n          type: string\n        reasons:\n          $ref: '#/components/schemas/Option'\n        selected_reason:\n          type: object\n          properties:\n            id:\n              $ref: '#/components/schemas/Option/properties/id'\n        additional_description:\n          $ref: '#/components/schemas/Descriptor'\n    Catalog:\n      description: Describes a Seller App catalog\n      type: object\n      properties:\n        bpp/descriptor:\n          $ref: '#/components/schemas/Descriptor'\n          required:\n            - name\n            - symbol\n            - short_desc\n            - long_desc\n            - images\n        bpp/categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/Category'\n        bpp/fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n        bpp/payments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Payment'\n        bpp/offers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Offer'\n        bpp/providers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Provider'\n          required:\n            - Provider.fulfillments.id\n            - Provider.fulfillments.type\n            - Provider.locations.id\n            - Provider.locations.gps\n            - Provider.locations.address.street\n            - Provider.locations.address.city\n            - Provider.locations.address.area_code\n            - Provider.locations.address.state\n        exp:\n          type: string\n          description: Time after which catalog has to be refreshed\n          format: date-time\n      required:\n        - bpp/descriptor\n        - bpp/providers\n    Category:\n      description: Describes a category\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique id of the category\n          enum:\n            - Grocery\n            - Packaged Commodities\n            - Packaged Foods\n            - Fruits and Vegetables\n            - F\u0026B\n            - Home \u0026 Decor\n        parent_category_id:\n          type: string\n          description: Unique id of the parent category\n          enum:\n            - Grocery\n            - F\u0026B\n            - Home \u0026 Decor\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        time:\n          $ref: '#/components/schemas/Time'\n        tags:\n          $ref: '#/components/schemas/Tags'\n    Circle:\n      description: Describes a circular area on the map\n      type: object\n      properties:\n        gps:\n          $ref: '#/components/schemas/Gps'\n        radius:\n          $ref: '#/components/schemas/Scalar'\n      required:\n        - gps\n        - radius\n    City:\n      description: Describes a city\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the city\n        code:\n          type: string\n          description: Codification of city code will be using the std code of the city e.g. for Bengaluru, city code is 'std:080'\n    Contact:\n      type: object\n      properties:\n        phone:\n          type: string\n        email:\n          type: string\n        tags:\n          $ref: '#/components/schemas/Tags'\n    Context:\n      description: Describes a ONDC message context\n      type: object\n      properties:\n        domain:\n          $ref: '#/components/schemas/Domain'\n        country:\n          $ref: '#/components/schemas/Country/properties/code'\n        city:\n          $ref: '#/components/schemas/City/properties/code'\n        action:\n          type: string\n          description: Defines the ONDC API call. Any actions other than the enumerated actions are not supported by ONDC Protocol\n          enum:\n            - search\n            - select\n            - init\n            - confirm\n            - update\n            - status\n            - track\n            - cancel\n            - rating\n            - support\n            - on_search\n            - on_select\n            - on_init\n            - on_confirm\n            - on_update\n            - on_status\n            - on_track\n            - on_cancel\n            - on_rating\n            - on_support\n        core_version:\n          type: string\n          description: Version of ONDC core API specification being used\n        bap_id:\n          type: string\n          description: Unique id of the Buyer App. By default it is the fully qualified domain name of the Buyer App\n        bap_uri:\n          type: string\n          format: uri\n          description: URI of the Buyer App for accepting callbacks. Must have the same domain name as the bap_id\n        bpp_id:\n          type: string\n          description: Unique id of the Seller App. By default it is the fully qualified domain name of the Seller App,\n                       mandatory for all peer-to-peer API requests, i.e. except search and on_search\n        bpp_uri:\n          type: string\n          format: uri\n          description: URI of the Seller App. Must have the same domain name as the bap_id,\n                       mandatory for all peer-to-peer API requests, i.e. except search and on_search\n        transaction_id:\n          type: string\n          description: This is a unique value which persists across all API calls from search through confirm\n        message_id:\n          type: string\n          description: This is a unique value which persists during a request / callback cycle\n        timestamp:\n          type: string\n          format: date-time\n          description: Time of request generation in RFC3339 format\n        key:\n          type: string\n          description: The encryption public key of the sender\n        ttl:\n          type: string\n          description: Timestamp for which this message holds valid in ISO8601 durations format -\n                       Outer limit for ttl for search, select, init, confirm, status, track, cancel, update, rating, support is 'PT30S' which is 30 seconds,\n                       different buyer apps can change this to meet their UX requirements, but it shouldn't exceed this outer limit\n      required:\n        - domain\n        - action\n        - core_version\n        - bap_id\n        - bap_uri\n        - transaction_id\n        - message_id\n        - city\n        - country\n        - timestamp\n    Country:\n      description: Describes a country.\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the country\n        code:\n          type: string\n          description: Country code as per ISO 3166 Alpha-3 code format\n    DecimalValue:\n      description: Describes a decimal value\n      type: string\n      pattern: '[+-]?([0-9]*[.])?[0-9]+'\n    Descriptor:\n      description: Describes the description of a real-world object.\n      type: object\n      properties:\n        name:\n          type: string\n        code:\n          type: string\n        symbol:\n          type: string\n        short_desc:\n          type: string\n        long_desc:\n          type: string\n        images:\n          type: array\n          items:\n            $ref: '#/components/schemas/Image'\n        audio:\n          type: string\n          format: uri\n        3d_render:\n          type: string\n          format: uri\n    Dimensions:\n      description: Describes the dimensions of a real-world object\n      type: object\n      properties:\n        length:\n          $ref: '#/components/schemas/Scalar'\n        breadth:\n          $ref: '#/components/schemas/Scalar'\n        height:\n          $ref: '#/components/schemas/Scalar'\n    Document:\n      description: Describes a document which can be sent as a url\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        label:\n          type: string\n    Domain:\n      description: Codification of domain for ONDC\n      type: string\n      enum:\n        - nic2004:52110\n    Duration:\n      description: Describes duration as per ISO8601 format\n      type: string\n    Error:\n      description: Describes an error object\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - CONTEXT-ERROR\n            - CORE-ERROR\n            - DOMAIN-ERROR\n            - POLICY-ERROR\n            - JSON-SCHEMA-ERROR\n        code:\n          type: string\n          description: ONDC specific error code. For full list of error codes, refer to docs/drafts/Error Codes.md of this repo\n        path:\n          type: string\n          description: Path to json schema generating the error. Used only during json schema validation errors\n        message:\n          type: string\n          description: Human readable message describing the error\n      required:\n        - type\n        - code\n    Feedback:\n      description: Feedback for a service\n      type: object\n      properties:\n        feedback_form:\n          $ref: '#/components/schemas/FeedbackForm'\n        feedback_url:\n          $ref: '#/components/schemas/FeedbackUrl'\n    FeedbackForm:\n      description: Describes a feedback form that a Seller App can send to get feedback from the Buyer App\n      type: array\n      items:\n        $ref: '#/components/schemas/FeedbackFormElement'\n    FeedbackFormElement:\n      description: An element in the feedback form. It can be question or an answer to the question.\n      type: object\n      properties:\n        id:\n          type: string\n        parent_id:\n          $ref: '#/components/schemas/FeedbackFormElement/properties/id'\n        question:\n          description: Specifies the question to which the answer options will be contained in the child FeedbackFormElements\n          type: string\n        answer:\n          description: Specifies an answer option to which the question will be in the FeedbackFormElement specified in parent_id\n          type: string\n        answer_type:\n          description: Specifies how the answer option should be rendered.\n          type: string\n          enum :\n            - radio\n            - checkbox\n            - text\n    FeedbackUrl:\n      description: Describes how a feedback URL will be sent by the Seller App\n      type: object\n      properties:\n        url:\n          description: feedback URL sent by the Seller App\n          type: string\n          format: uri\n        tl_method:\n          type: string\n          enum:\n            - http/get\n            - http/post\n        params:\n          type: object\n          properties:\n            feedback_id:\n              type: string\n              description: This value will be placed in the the $feedback_id url param in case of http/get and in the requestBody http/post requests\n          additionalProperties:\n            type: string\n          required:\n            - feedback_id\n    Fulfillment:\n      description: Describes how a single product/service will be rendered/fulfilled to the end customer -\n                   State can have following values -\n                     \"Serviceable\",\n                     \"Non-serviceable\",\n                     \"At pickup location\",\n                     \"Order picked up\",\n                     \"At drop location\",\n                     \"Order delivered\",\n                     \"Cancelled\"\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique reference ID to the fulfillment of an order\n        type:\n          type: string\n          description: This describes the type of fulfillment (\"Pickup\" - Buyer picks up from store by themselves or through their logistics provider; \"Delivery\" - seller delivers to buyer)\n          enum:\n            - Delivery\n            - Pickup\n            - Delivery and Pickup\n            - Reverse QC\n        \"@ondc/org/category\":\n          type: string\n          description: Fulfillment Category\n        \"@ondc/org/TAT\":\n          description: fulfillment turnaround time in ISO8601 durations format e.g. 'PT24H' indicates 24 hour TAT\n          type: string\n        provider_id:\n          $ref: '#/components/schemas/Provider/properties/id'\n        \"@ondc/org/provider_name\":\n          type: string\n        rating:\n          $ref: '#/components/schemas/Rating/properties/value'\n        state:\n          $ref: '#/components/schemas/State'\n        tracking:\n          type: boolean\n          description: Indicates whether the fulfillment allows tracking\n          default: false\n        customer:\n          type: object\n          properties:\n            person:\n              $ref: '#/components/schemas/Person'\n            contact:\n              $ref: '#/components/schemas/Contact'\n        agent:\n          $ref: '#/components/schemas/Agent'\n        person:\n          $ref: '#/components/schemas/Person'\n        contact:\n          $ref: '#/components/schemas/Contact'\n        vehicle:\n          $ref: '#/components/schemas/Vehicle'\n        start:\n          description: Details on the start of fulfillment\n          type: object\n          properties:\n            location:\n              $ref: '#/components/schemas/Location'\n            time:\n              $ref: '#/components/schemas/Time'\n            instructions:\n              $ref: '#/components/schemas/Descriptor'\n            contact:\n              $ref: '#/components/schemas/Contact'\n            person:\n              $ref: '#/components/schemas/Person'\n            authorization:\n              $ref: '#/components/schemas/Authorization'\n        end:\n          description: Details on the end of fulfillment\n          type: object\n          properties:\n            location:\n              $ref: '#/components/schemas/Location'\n            time:\n              $ref: '#/components/schemas/Time'\n            instructions:\n              $ref: '#/components/schemas/Descriptor'\n            contact:\n              $ref: '#/components/schemas/Contact'\n            person:\n              $ref: '#/components/schemas/Person'\n            authorization:\n              $ref: '#/components/schemas/Authorization'\n        rateable:\n          $ref: '#/components/schemas/Rateable'\n        tags:\n          $ref: '#/components/schemas/Tags'\n      required:\n        - id\n        - type\n    Gps:\n      description: Describes a gps coordinate\n      type: string\n      pattern: '^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$'\n    Image:\n      description: 'Image of an object. \u003cbr/\u003e\u003cbr/\u003e A url based image will look like \u003cbr/\u003e\u003cbr/\u003e```uri:http://path/to/image``` \u003cbr/\u003e\u003cbr/\u003e An image can also be sent as a data string. For example : \u003cbr/\u003e\u003cbr/\u003e ```data:js87y34ilhriuho84r3i4```'\n      type: string\n    Intent:\n      description: Intent of a user. Used for searching for services. Buyer App can set finder fee type in payment.\"@ondc/org/buyer_app_finder_fee_type\" and amount in \"@ondc/org/buyer_app_finder_fee_amount\"\n      type: object\n      properties:\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        provider:\n          $ref: '#/components/schemas/Provider'\n        fulfillment:\n          $ref: '#/components/schemas/Fulfillment'\n        payment:\n          $ref: '#/components/schemas/Payment'\n        category:\n          $ref: '#/components/schemas/Category'\n        offer:\n          $ref: '#/components/schemas/Offer'\n        item:\n          $ref: '#/components/schemas/Item'\n        tags:\n          $ref: '#/components/schemas/Tags'\n    ItemQuantity:\n      description: Describes count or amount of an item\n      type: object\n      properties:\n        allocated:\n          type: object\n          properties:\n            count:\n              type: integer\n              minimum: 0\n            measure:\n              $ref: '#/components/schemas/Scalar'\n        available:\n          type: object\n          properties:\n            count:\n              type: integer\n              minimum: 0\n            measure:\n              $ref: '#/components/schemas/Scalar'\n        maximum:\n          type: object\n          properties:\n            count:\n              type: integer\n              minimum: 1\n            measure:\n              $ref: '#/components/schemas/Scalar'\n        minimum:\n          type: object\n          properties:\n            count:\n              type: integer\n              minimum: 0\n            measure:\n              $ref: '#/components/schemas/Scalar'\n        selected:\n          type: object\n          properties:\n            count:\n              type: integer\n              minimum: 0\n            measure:\n              $ref: '#/components/schemas/Scalar'\n    Item:\n      description: Describes a product or a service offered to the end consumer by the provider -\n                   Statutory requirements for category_id \"Packaged Commodities\" -\n                   descriptor.name (for item name),\n                   price.value (for declared price),\n                   price.maximum_value (for MRP);\n                   Statutory requirements for category_id \"Packaged Foods\" -\n                   descriptor.name (for item name),\n                   descriptor.symbol (for veg or non-veg),\n                   descriptor.short_desc (for food allergen),\n                   descriptor.long_desc (for instructions for use),\n                   price.value (for declared price);\n                   All other statutory attributes must be provided, as applicable, for the above;\n                   No statutory requirement for category_id \"F\u0026B\" or \"Fruits and Vegetables\"\n      type: object\n      properties:\n        id:\n          description: This is the most unique identifier of a service item. An example of an Item ID could be the SKU of a product.\n          type: string\n        parent_item_id:\n          $ref: '#/components/schemas/Item/properties/id'\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n          required:\n            - name\n            - symbol\n            - short_desc\n            - long_desc\n            - images\n        price:\n          $ref: '#/components/schemas/Price'\n          required:\n            - value\n            - maximum_value\n            - currency\n        quantity:\n          $ref: '#/components/schemas/ItemQuantity'\n        category_id:\n          $ref: '#/components/schemas/Category/properties/id'\n        fulfillment_id:\n          $ref: '#/components/schemas/Fulfillment/properties/id'\n        rating:\n          $ref: '#/components/schemas/Rating/properties/value'\n        location_id:\n          $ref: '#/components/schemas/Location/properties/id'\n        time:\n          $ref: '#/components/schemas/Time'\n        rateable:\n          $ref: '#/components/schemas/Rateable'\n        matched:\n          type: boolean\n        related:\n          type: boolean\n        recommended:\n          type: boolean\n        \"@ondc/org/returnable\":\n          description: whether the item is returnable\n          type: boolean\n        \"@ondc/org/seller_pickup_return\":\n          description: in case of return, whether the item should be picked up by seller\n          type: boolean\n        \"@ondc/org/return_window\":\n          description: return window for the item in ISO8601 durations format e.g. 'PT24H' indicates 24 hour return window. Mandatory if \"@ondc/org/returnable\" is \"true\"\n          type: string\n        \"@ondc/org/cancellable\":\n          description: whether the item is cancellable\n          type: boolean\n        \"@ondc/org/time_to_ship\":\n          description: time from order confirmation by which item ready to ship in ISO8601 durations format (e.g. 'PT30M' indicates item ready to ship in 30 mins). Mandatory for category_id \"F\u0026B\"\n          type: string\n        \"@ondc/org/available_on_cod\":\n          description: whether the catalog item is available on COD\n          type: boolean\n        \"@ondc/org/contact_details_consumer_care\":\n          description: contact details for consumer care\n          type: string\n        \"@ondc/org/statutory_reqs_packaged_commodities\":\n          type: object\n          description:\n            mandatory for category_id \"Packaged Commodities\" -\n            required attributes for all include the following -\n              manufacturer_or_packer_name,\n              manufacturer_or_packer_address,\n              common_or_generic_name_of_commodity,\n              net_quantity_or_measure_of_commodity_in_pkg,\n              month_year_of_manufacture_packing_import;\n            other attributes are required on case-by-case basis\n          properties:\n            manufacturer_or_packer_name:\n              description: name of manufacturer or packer (in case manufacturer is not the packer) or name of importer for imported goods\n              type: string\n            manufacturer_or_packer_address:\n              description: address of manufacturer or packer (in case manufacturer is not the packer) or address of importer for imported goods\n              type: string\n            common_or_generic_name_of_commodity:\n              description: common or generic name of commodity\n              type: string\n            multiple_products_name_number_or_qty:\n              description: for packages with multiple products, the name and number of quantity of each (can be shown as \"name1-number_or_quantity; name2-number_or_quantity..\")\n              type: string\n            net_quantity_or_measure_of_commodity_in_pkg:\n              description: net quantity of commodity in terms of standard unit of weight or measure of commodity contained in package\n              type: string\n            month_year_of_manufacture_packing_import:\n              description: month and year of manufacture or packing or import\n              type: string\n            imported_product_country_of_origin:\n              description: country of origin for imported products (ISO 3166 Alpha-3 code format)\n              type: string\n        \"@ondc/org/statutory_reqs_prepackaged_food\":\n          type: object\n          description:\n            mandatory for category_id \"Packaged food\" -\n            required attributes include the following -\n              nutritional_info,\n              additives_info,\n              net_quantity;\n            other attributes are required on case-by-case basis\n          properties:\n            ingredients_info:\n              description: list of ingredients (except single ingredient foods), can be shown as ingredient (with percentage); ingredient (with percentage);..)\n                           e.g. \"Puffed Rice (40%); Split Green Gram (20%); Ground Nuts (20%);..\"\n              type: string\n            nutritional_info:\n              description: nutritional info (can be shown as nutritional info (with unit, per standard unit, per serving);..)\n                           e.g. \"Energy(KCal) - (per 100kg) 420, (per serving 50g) 250; Protein(g) - (per 100kg) 12, (per serving 50g)6;..\"\n              type: string\n            additives_info:\n              description: food additives together with specific name or recognized International Numbering System (can be shown as additive1-name or number;additive2-name or number;..)\n              type: string\n            manufacturer_or_packer_name:\n              description: name of manufacturer or packer (for non-retail containers)\n              type: string\n            manufacturer_or_packer_address:\n              description: address of manufacturer or packer (for non-retail containers)\n              type: string\n            brand_owner_name:\n              description: name of brand owner\n              type: string\n            brand_owner_address:\n              description: address of brand owner\n              type: string\n            brand_owner_FSSAI_logo:\n              description: FSSAI logo of brand owner (url based image e.g. uri:http://path/to/image)\n              type: string\n            brand_owner_FSSAI_license_no:\n              description: FSSAI license no of brand owner\n              type: string\n            other_FSSAI_license_no:\n              description: FSSAI license no of manufacturer or marketer or packer or bottler if different from brand owner\n              type: string\n            net_quantity:\n              description: net quantity\n              type: string\n            importer_name:\n              description: name of importer\n              type: string\n            importer_address:\n              description: address of importer\n              type: string\n            importer_FSSAI_logo:\n              description: FSSAI logo of importer (url based image e.g. uri:http://path/to/image)\n              type: string\n            importer_FSSAI_license_no:\n              description: FSSAI license no of importer\n              type: string\n            imported_product_country_of_origin:\n              description: country of origin for imported products (ISO 3166 Alpha-3 code format)\n              type: string\n            other_importer_name:\n              description: name of importer for product manufactured outside but packaged or bottled in India\n              type: string\n            other_importer_address:\n              description: address of importer for product manufactured outside but packaged or bottled in India\n              type: string\n            other_premises:\n              description: premises where product manufactured outside are packaged or bottled in India\n              type: string\n            other_importer_country_of_origin:\n              description: country of origin for product manufactured outside but packaged or bottled in India (ISO 3166 Alpha-3 code format)\n              type: string\n        \"@ondc/org/mandatory_reqs_veggies_fruits\":\n          type: object\n          description:\n            mandatory for category_id \"Fruits and Vegetables\"\n            required attributes include the following -\n              net_quantity\n        tags:\n          $ref: '#/components/schemas/Tags'\n      required:\n        - id\n        - descriptor\n        - price\n        - category_id\n        - fulfillment_id\n        - location_id\n        - matched\n        - \"@ondc/org/returnable\"\n        - \"@ondc/org/cancellable\"\n        - \"@ondc/org/return_window\"\n        - \"@ondc/org/seller_pickup_return\"\n        - \"@ondc/org/time_to_ship\"\n        - \"@ondc/org/available_on_cod\"\n        - \"@ondc/org/contact_details_consumer_care\"\n        - \"@ondc/org/statutory_reqs_packaged_commodities\"\n        - \"@ondc/org/statutory_reqs_prepackaged_food\"\n        - \"@ondc/org/mandatory_reqs_veggies_fruits\"\n    Language:\n      description: indicates language code. ONDC supports language codes as per ISO 639.2 standard\n      type: object\n      properties:\n        code:\n          type: string\n    Location:\n      description: Describes the location of a runtime object.\n      type: object\n      properties:\n        id:\n          type: string\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        gps:\n          $ref: '#/components/schemas/Gps'\n        address:\n          $ref: '#/components/schemas/Address'\n        station_code:\n          type: string\n        city:\n          $ref: '#/components/schemas/City'\n        country:\n          $ref: '#/components/schemas/Country'\n        circle:\n          $ref: '#/components/schemas/Circle'\n        polygon:\n          type: string\n        3dspace:\n          type: string\n        time:\n          $ref: '#/components/schemas/Time'\n    Name:\n      type: string\n      description: 'Describes the name of a person in format: ./{given_name}/{honorific_prefix}/{first_name}/{middle_name}/{last_name}/{honorific_suffix}'\n      pattern: '^\\./[^/]+/[^/]*/[^/]*/[^/]*/[^/]*/[^/]*$'\n    Offer:\n      description: Describes an offer\n      type: object\n      properties:\n        id:\n          type: string\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        location_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/Location/properties/id'\n        category_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/Category/properties/id'\n        item_ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/Item/properties/id'\n        time:\n          $ref: '#/components/schemas/Time'\n    Operator:\n      description: Describes the agent of a service\n      allOf:\n        - $ref: \"#/components/schemas/Person\"\n        - properties:\n            experience:\n              type: object\n              properties:\n                label:\n                  type: string\n                value:\n                  type: string\n                unit:\n                  type: string\n\n    Option:\n      description: Describes a selectable option\n      type: object\n      properties:\n        id:\n          type: string\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n    Order:\n      description: Describes the details of an order -\n                   For \"@ondc/org/cancellation.cancelled_by\" use following values -\n                   buyer-app,\n                   seller-app,\n                   logistics-provider;\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique identifier for Order across the network,\n                       Will be created by buyer app in confirm API\n        state:\n          type: string\n          enum:\n            - Created\n            - Packed\n            - Shipped\n            - Out for Delivery\n            - Delivered\n            - RTO initiated\n            - RTO delivered\n            - Cancelled\n        provider:\n          type: object\n          properties:\n            id:\n              $ref: '#/components/schemas/Provider/properties/id'\n            locations:\n              type: array\n              maxItems: 1\n              items:\n                type: object\n                properties:\n                  id:\n                    $ref: '#/components/schemas/Location/properties/id'\n                required:\n                  - id\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                $ref: '#/components/schemas/Item/properties/id'\n              quantity:\n                $ref: '#/components/schemas/ItemQuantity/properties/selected'\n            required:\n              - id\n        add_ons:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                $ref: '#/components/schemas/AddOn/properties/id'\n            required:\n              - id\n        offers:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                $ref: '#/components/schemas/Offer/properties/id'\n            required:\n              - id\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Document'\n        billing:\n          $ref: '#/components/schemas/Billing'\n        fulfillments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Fulfillment\"\n        quote:\n          $ref: '#/components/schemas/Quotation'\n        payment:\n          $ref: '#/components/schemas/Payment'\n        \"@ondc/org/cancellation\":\n          $ref: '#/components/schemas/Cancellation'\n        \"@ondc/org/linked_orders\":\n          description: payload for cascaded orders e.g. order for logistics services linked to a retail order\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n    Organization:\n      description: Describes an organization\n      type: object\n      properties:\n        name:\n          type: string\n        cred:\n          type: string\n    Page:\n      description: Describes a page in a search result\n      type: object\n      properties:\n        id:\n          type: string\n        next_id:\n          type: string\n    Payment:\n      description: Describes a payment\n      type: object\n      properties:\n        uri:\n          type: string\n          description: 'A payment uri to be called by the Buyer App. If empty, then the payment is to be done offline. The details of payment should be present in the params object. If ```tl_method``` = http/get, then the payment details will be sent as url params. Two url param values, ```$transaction_id``` and ```$amount``` are mandatory. And example url would be : https://www.example.com/pay?txid=$transaction_id\u0026amount=$amount\u0026vpa=upiid\u0026payee=shopez\u0026billno=1234'\n          format: uri\n        tl_method:\n          type: string\n          enum:\n            - http/get\n            - http/post\n            - payto\n            - upi\n        params:\n          type: object\n          properties:\n            transaction_id:\n              type: string\n              description: This value will be placed in the the $transaction_id url param in case of http/get and in the requestBody http/post requests\n            transaction_status:\n              type: string\n            amount:\n              $ref: '#/components/schemas/Price/properties/value'\n            currency:\n              $ref: '#/components/schemas/Price/properties/currency'\n          additionalProperties:\n            type: string\n          required:\n            - currency\n        type:\n          type: string\n          enum:\n            - ON-ORDER\n            - PRE-FULFILLMENT\n            - ON-FULFILLMENT\n            - POST-FULFILLMENT\n        status:\n          type: string\n          enum:\n            - PAID\n            - NOT-PAID\n            - PENDING\n        time:\n          $ref: '#/components/schemas/Time'\n        collected_by:\n          type: string\n          enum:\n            - BAP\n            - BPP\n        \"@ondc/org/collected_by_status\":\n          type: string\n          enum:\n            - Assert\n            - Agree\n            - Disagree\n            - Terminate\n        \"@ondc/org/buyer_app_finder_fee_type\":\n          type: string\n          enum:\n            - Amount\n            - Percent\n        \"@ondc/org/buyer_app_finder_fee_amount\":\n          $ref: '#/components/schemas/DecimalValue'\n        \"@ondc/org/withholding_amount\":\n          $ref: '#/components/schemas/DecimalValue'\n        \"@ondc/org/withholding_amount_status\":\n          type: string\n          enum:\n            - Assert\n            - Agree\n            - Disagree\n            - Terminate\n        \"@ondc/org/return_window\":\n          description: return window for withholding amount in ISO8601 durations format e.g. 'PT24H' indicates 24 hour return window\n          type: string\n        \"@ondc/org/return_window_status\":\n          type: string\n          enum:\n            - Assert\n            - Agree\n            - Disagree\n            - Terminate\n        \"@ondc/org/settlement_basis\":\n          description: In case of prepaid payment, whether settlement between counterparties should be on the basis of collection, shipment or delivery\n          type: string\n          enum:\n            - Collection\n            - Shipment\n            - Delivery\n        \"@ondc/org/settlement_basis_status\":\n          type: string\n          enum:\n            - Assert\n            - Agree\n            - Disagree\n            - Terminate\n        \"@ondc/org/settlement_window\":\n          description: settlement window for the counterparty in ISO8601 durations format e.g. 'PT48H' indicates 48 hour return window\n          type: string\n        \"@ondc/org/settlement_window_status\":\n          type: string\n          enum:\n            - Assert\n            - Agree\n            - Disagree\n            - Terminate\n        \"@ondc/org/settlement_details\":\n          type: array\n          items:\n            type: object\n            properties:\n              settlement_counterparty:\n                type: string\n                enum:\n                  - buyer\n                  - buyer-app\n                  - seller-app\n                  - logistics-provider\n              settlement_phase:\n                type: string\n                enum:\n                  - sale-amount\n                  - withholding-amount\n                  - refund\n              settlement_amount:\n                type: integer\n              settlement_type:\n                type: string\n                enum:\n                  - neft\n                  - rtgs\n                  - upi\n              settlement_bank_account_no:\n                type: string\n              settlement_ifsc_code:\n                type: string\n              upi_address:\n                description: UPI payment address e.g. VPA\n                type: string\n              bank_name:\n                description: Bank name\n                type: string\n              branch_name:\n                description: Branch name\n                type: string\n              beneficiary_address:\n                description: Beneficiary Address\n                type: string\n              settlement_status:\n                type: string\n                enum:\n                  - PAID\n                  - NOT-PAID\n              settlement_reference:\n                description: Settlement transaction reference number\n                type: string\n              settlement_timestamp:\n                description: Settlement transaction timestamp\n                type: string\n                format: date-time\n    Person:\n      description: Describes a person.\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/Name'\n        image:\n          $ref: '#/components/schemas/Image'\n        dob:\n          type: string\n          format: date\n        gender:\n          type: string\n          description: 'Gender of something, typically a Person, but possibly also fictional characters, animals, etc. While Male and Female may be used, text strings are also acceptable for people who do not identify as a binary gender'\n        cred:\n          type: string\n        tags:\n          $ref: '#/components/schemas/Tags'\n    Policy:\n      description: Describes a policy. Allows for domain extension.\n      type: object\n      properties:\n        id:\n          type: string\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        parent_policy_id:\n          $ref: '#/components/schemas/Policy/properties/id'\n        time:\n          $ref: '#/components/schemas/Time'\n    Price:\n      description: Describes the price of an item. Allows for domain extension.\n      type: object\n      properties:\n        currency:\n          type: string\n          description: ISO 4217 alphabetic currency code e.g. 'INR'\n        value:\n          $ref: '#/components/schemas/DecimalValue'\n        estimated_value:\n          $ref: '#/components/schemas/DecimalValue'\n        computed_value:\n          $ref: '#/components/schemas/DecimalValue'\n        listed_value:\n          $ref: '#/components/schemas/DecimalValue'\n        offered_value:\n          $ref: '#/components/schemas/DecimalValue'\n        minimum_value:\n          $ref: '#/components/schemas/DecimalValue'\n        maximum_value:\n          $ref: '#/components/schemas/DecimalValue'\n      required:\n        - currency\n        - value\n    Provider:\n      description: Describes a service provider. This can be a restaurant, a hospital, a Store etc\n      type: object\n      properties:\n        id:\n          type: string\n          description: Id of the provider\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n          required:\n            - name\n            - symbol\n            - short_desc\n            - long_desc\n            - images\n        category_id:\n          type: string\n          description: Category Id of the provider\n        \"@ondc/org/fssai_license_no\":\n          type: string\n          description: FSSAI license no. Mandatory for category_id \"F\u0026B\"\n        rating:\n          $ref: '#/components/schemas/Rating/properties/value'\n        time:\n          $ref: '#/components/schemas/Time'\n        categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/Category'\n        fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n        payments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Payment'\n        locations:\n          type: array\n          items:\n            allOf:\n            - $ref: '#/components/schemas/Location'\n            - type: object\n              properties:\n                rateable:\n                  $ref: '#/components/schemas/Rateable'\n        offers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Offer'\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Item'\n        ttl:\n          type: string\n          description: Validity of catalog in ISO8601 durations format after which it has to be refreshed e.g. 'P7D' indicates validity of 7 days; value of 0 indicates catalog is not cacheable\n        exp:\n          type: string\n          description: Time after which catalog has to be refreshed\n          format: date-time\n        rateable:\n          $ref: '#/components/schemas/Rateable'\n        tags:\n          $ref: '#/components/schemas/Tags'\n      required:\n        - id\n        - \"@ondc/org/fssai_license_no\"\n        - ttl\n        - descriptor\n    Quotation:\n      description: Describes a quote\n      type: object\n      properties:\n        price:\n          $ref: '#/components/schemas/Price'\n        breakup:\n          type: array\n          items:\n            type: object\n            properties:\n              \"@ondc/org/item_id\":\n                $ref: '#/components/schemas/Item/properties/id'\n              \"@ondc/org/item_quantity\":\n                $ref: '#/components/schemas/ItemQuantity/properties/selected'\n              \"@ondc/org/title_type\":\n                type: string\n                enum:\n                  - item\n                  - delivery\n                  - packing\n                  - tax\n                  - convenience charge\n                  - discount\n              item:\n                $ref: '#/components/schemas/Item'\n              title:\n                type: string\n              price:\n                $ref: '#/components/schemas/Price'\n        ttl:\n          $ref: '#/components/schemas/Duration'\n      required:\n        - \"@ondc/org/item_id\"\n        - \"@ondc/org/item_quantity\"\n        - \"@ondc/org/title_type\"\n        - price\n    Rateable:\n      description: If the entity can be rated or not\n      type: boolean\n    Rating:\n      description: Describes the rating of a person or an object.\n      type: object\n      properties:\n        rating_category:\n          description: Category of the object being rated\n          type: string\n        id:\n          description: Id of the object being rated\n          type: string\n        value:\n          description: Rating value given to the object (1 - Poor; 2 - Needs improvement; 3 - Satisfactory; 4 - Good; 5 - Excellent)\n          type: number\n          minimum: 1\n          maximum: 5\n        feedback_form:\n          $ref: '#/components/schemas/FeedbackForm'\n        feedback_id:\n          $ref: '#/components/schemas/FeedbackUrl/properties/params/properties/feedback_id'\n    RatingAck:\n      type: object\n      properties:\n        feedback_ack:\n          description: If feedback has been recorded or not\n          type: boolean\n        rating_ack:\n          description: If rating has been recorded or not\n          type: boolean\n    Scalar:\n      description: An object representing a scalar quantity.\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - CONSTANT\n            - VARIABLE\n        value:\n          type: number\n        estimated_value:\n          type: number\n        computed_value:\n          type: number\n        range:\n          type: object\n          properties:\n            min:\n              type: number\n            max:\n              type: number\n        unit:\n          type: string\n      required:\n        - value\n        - unit\n    Schedule:\n      description: Describes a schedule\n      type: object\n      properties:\n        frequency:\n          $ref: '#/components/schemas/Duration'\n        holidays:\n          type: array\n          items:\n            type: string\n            format: date-time\n        times:\n          type: array\n          items:\n            type: string\n            format: date-time\n    State:\n      description: Describes a state\n      type: object\n      properties:\n        descriptor:\n          $ref: '#/components/schemas/Descriptor'\n        updated_at:\n          type: string\n          format: date-time\n        updated_by:\n          type: string\n          description: ID of entity which changed the state\n    Subscriber:\n      type: object\n      description: 'Any entity which wants to authenticate itself on a network. This can be a Buyer App, Seller App or Gateway.'\n      properties:\n        subscriber_id:\n          type: string\n          description: Registered domain name of the subscriber. Must have a valid SSL certificate issued by a Certificate Authority of the operating region\n        type:\n          type: string\n          enum:\n            - bap\n            - bpp\n            - bg\n        cb_url:\n          type: string\n          description: Callback URL of the subscriber. The Registry will call this URL's on_subscribe API to validate the subscriber\\'s credentials\n        domain:\n          $ref: '#/components/schemas/Domain'\n        city:\n          $ref: '#/components/schemas/City/properties/code'\n        country:\n          $ref: '#/components/schemas/Country/properties/code'\n        signing_public_key:\n          type: string\n          description: 'Signing Public key of the subscriber. \u003cbr/\u003e\u003cbr/\u003eAny subscriber platform (Buyer App, Seller App, Gateway) who wants to transact on the network must digitally sign the ```requestBody``` using the corresponding private key of this public key and send it in the transport layer header. In case of ```HTTP``` it is the ```Authorization``` header. \u003cbr\u003e\u003cbr/\u003eThe ```Authorization``` will be used to validate the signature of a Buyer App or Seller App.\u003cbr/\u003e\u003cbr/\u003eFurthermore, if an API call is being proxied or multicast by a ONDC Gateway, the Gateway must use it\\''s signing key to digitally sign the ```requestBody``` using the corresponding private key of this public key and send it in the ```X-Gateway-Authorization``` header.'\n        encryption_public_key:\n          type: string\n          description: Encryption public key of the Buyer App. Any Seller App must encrypt the ```requestBody.message``` value of the ```on_search``` API using this public key.\n        status:\n          type: string\n          enum:\n            - INITIATED\n            - UNDER_SUBSCRIPTION\n            - SUBSCRIBED\n            - INVALID_SSL\n            - UNSUBSCRIBED\n        created:\n          type: string\n          description: Timestamp when a subscriber was added to the registry with status = INITIATED\n          format: date-time\n        updated:\n          type: string\n          format: date-time\n        expires:\n          type: string\n          description: Expiry timestamp in UTC derived from the ```lease_time``` of the subscriber\n          format: date-time\n    Support:\n      description: Customer support\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - order\n            - billing\n            - fulfillment\n        ref_id:\n          type: string\n        channels:\n          $ref: '#/components/schemas/Tags'\n    Tags:\n      description: Describes a tag. This is a simple key-value store which is used to contain extended metadata\n      additionalProperties:\n        type: string\n    Time:\n      description: Describes time in its various forms. It can be a single point in time; duration; or a structured timetable of operations\n      type: object\n      properties:\n        label:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        duration:\n          $ref: '#/components/schemas/Duration'\n        range:\n          type: object\n          properties:\n            start:\n              type: string\n              format: date-time\n            end:\n              type: string\n              format: date-time\n        days:\n          type: string\n          description: comma separated values representing days of the week\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n    TrackingData:\n      description: Describes tracking data object during live tracking of an order\n      $ref: '#/components/schemas/Location/properties/gps'\n    Tracking:\n      description: Describes the tracking info of an object\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n    Vehicle:\n      description: Describes the properties of a vehicle used in a mobility service\n      type: object\n      properties:\n        category:\n          type: string\n        capacity:\n          type: integer\n        make:\n          type: string\n        model:\n          type: string\n        size:\n          type: string\n        variant:\n          type: string\n        color:\n          type: string\n        energy_type:\n          type: string\n        registration:\n          type: string\n",
			"canonicalURL": "/github.com/ONDC-Official/ONDC-Protocol-Specs@f7c7f4809ffeb8d43191f77029c83a92b8481538/-/blob/protocol-specifications/core/v0/api/retail-hyperlocal.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ONDC-Official/ONDC-Protocol-Specs/blob/f7c7f4809ffeb8d43191f77029c83a92b8481538/protocol-specifications/core/v0/api/retail-hyperlocal.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/cancel\": post: requestBody: contents: media: \"application/json\": generate schema: save schema types: save referenced type: reference \"#/components/schemas/Order/properties/id\" type name conflict: \"ID\""
}