{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/radixdlt/babylon-alphanet"
		},
		"file": {
			"name": "gateway-api-v0-schema.yaml",
			"size": 0,
			"path": "gateway-api-v0/gateway-api-v0-schema.yaml",
			"byteSize": 43465,
			"content": "openapi: 3.1.0\ninfo:\n  version: '0.1.0'\n  title: 'Babylon Alphanet v0 API'\n  license:\n    name: The Radix License, Version 1.0\n    url: https://www.radixfoundation.org/licenses/LICENSE-v1\nservers:\n  - url: 'https://alphanet.radixdlt.com/v0'\ntags:\n  - name: Status\n    x-displayName: Status\n    description: To query network configuration and status.\n  - name: Transaction\n    x-displayName: Transaction Endpoints\n    description: To submit transactions to the network, or read information about them.\n  - name: State\n    x-displayName: Ledger State Endpoints\n    description: To query the current ledger state.\npaths:\n####################\n# v0 API Responses #\n####################\n  \"/status/network-configuration\":\n    post:\n      summary: Get Network Configuration\n      description: Returns the network's configuration\n      tags:\n        - Status\n      responses:\n        '200':\n          description: Network Configuration\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V0NetworkConfigurationResponse\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/transaction/submit\":\n    post:\n      summary: Transaction Submit\n      tags:\n        - Transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/V0TransactionSubmitRequest\"\n      responses:\n        '200':\n          description: Transaction submit response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V0TransactionSubmitResponse\"\n        '400':\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/transaction/status\":\n    post:\n      summary: Read Transaction Status\n      tags:\n        - Transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/V0TransactionStatusRequest\"\n      responses:\n        '200':\n          description: Transaction status response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V0TransactionStatusResponse\"\n        '400':\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/transaction/receipt\":\n    post:\n      summary: Read Committed Transaction\n      tags:\n        - Transaction\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/V0CommittedTransactionRequest\"\n      responses:\n        '200':\n          description: Committed transaction found response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V0CommittedTransactionResponse\"\n        '400':\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '404':\n          description: Committed transaction not found response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/state/epoch\":\n    post:\n      summary: Read Current Epoch\n      tags:\n        - State\n      responses:\n        '200':\n          description: Current state response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V0StateEpochResponse\"\n        '400':\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/state/component\":\n    post:\n      summary: Read component data\n      tags:\n        - State\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/V0StateComponentRequest\"\n      responses:\n        '200':\n          description: Current state response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V0StateComponentResponse\"\n        '400':\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/state/resource\":\n    post:\n      summary: Read resource data\n      tags:\n        - State\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/V0StateResourceRequest\"\n      responses:\n        '200':\n          description: Current state response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V0StateResourceResponse\"\n        '400':\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/state/non-fungible\":\n    post:\n      summary: Read non-fungible data\n      tags:\n        - State\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/V0StateNonFungibleRequest\"\n      responses:\n        '200':\n          description: Current state response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V0StateNonFungibleResponse\"\n        '400':\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \"/state/package\":\n    post:\n      summary: Read package data\n      tags:\n        - State\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/V0StatePackageRequest\"\n      responses:\n        '200':\n          description: Current state response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V0StatePackageResponse\"\n        '400':\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n#############################################################################################\ncomponents:\n  schemas:\n###########################\n# GENERAL / SHARED MODELS #\n###########################\n    TransactionStatus:\n      type: string\n      enum:\n        - Succeeded\n        - Failed\n        - Rejected\n      description: The status of the transaction\n    TransactionReceipt:\n      type: object\n      description: The transaction execution receipt\n      required:\n        - status\n        - fee_summary\n        - state_updates\n      properties:\n        status:\n          $ref: \"#/components/schemas/TransactionStatus\"\n        fee_summary:\n          $ref: \"#/components/schemas/FeeSummary\"\n        state_updates:\n          $ref: \"#/components/schemas/StateUpdates\"\n        output:\n          type: array\n          description: The manifest line-by-line engine return data (only present if status is Succeeded)\n          items:\n            $ref: \"#/components/schemas/SborData\"\n        error_message:\n          type: string\n          description: Error message (only present if status is Failed or Rejected)\n    NotarizedTransaction:\n      type: object\n      required:\n        - hash\n        - payload_hex\n        - signed_intent\n        - notary_signature\n      properties:\n        hash:\n          type: string\n          description: The hex-encoded double-SHA256 hash of the notarized transaction payload. Also known as the payload_hash or the notarized_transaction_hash.\n        payload_hex:\n          type: string\n          description: The hex-encoded full notarized transaction payload\n        signed_intent:\n          $ref: \"#/components/schemas/SignedTransactionIntent\"\n        notary_signature:\n          $ref: \"#/components/schemas/Signature\"\n    SignedTransactionIntent:\n      type: object\n      required:\n        - hash\n        - intent\n        - intent_signatures\n      properties:\n        hash:\n          type: string\n          description: The hex-encoded double-SHA256 hash of the signed transaction intent. Also known as the signatures hash.\n        intent:\n          $ref: \"#/components/schemas/TransactionIntent\"\n        intent_signatures:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SignatureWithPublicKey\"\n    TransactionIntent:\n      type: object\n      required:\n        - hash\n        - header\n        - manifest\n        - blobs_hex\n      properties:\n        hash:\n          type: string\n          description: |\n            The hex-encoded double-SHA256 hash of the transaction intent.\n            Also known as the Transaction ID, Transaction Hash, or Intent Hash.\n        header:\n          $ref: \"#/components/schemas/TransactionHeader\"\n        manifest:\n          type: string\n          description: The decompiled transaction manifest\n        blobs_hex:\n          type: object\n          description: A map of the hex-encoded blob hash, to hex-encoded blob content\n          additionalProperties:\n            type: string\n            description: The hex-encoded blob content\n    TransactionHeader:\n      type: object\n      required:\n        - version\n        - network_id\n        - start_epoch_inclusive\n        - end_epoch_exclusive\n        - nonce\n        - notary_public_key\n        - notary_as_signatory\n        - cost_unit_limit\n        - tip_percentage\n      properties:\n        version:\n          type: integer\n          minimum: 0\n          maximum: 255\n        network_id:\n          type: integer\n          minimum: 0\n          maximum: 255\n        start_epoch_inclusive:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 10000000000\n          description: An integer between 0 and 10^10, marking the epoch from which the transaction can be submitted\n        end_epoch_exclusive:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 10000000000\n          description: An integer between 0 and 10^10, marking the epoch from which the transaction will no longer be valid, and be rejected\n        nonce:\n          type: string\n          description: A decimal-string-encoded integer between 0 and 2^64 - 1, chosen to be unique to allow replay of transaction intents\n        notary_public_key:\n          $ref: \"#/components/schemas/PublicKey\"\n        notary_as_signatory:\n          type: boolean\n          description: Specifies whether the notary's signature should be included in transaction signers list\n        cost_unit_limit:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          description: An integer between 0 and 2^32 - 1, giving the maximum number of cost units available for transaction execution.\n        tip_percentage:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          description: An integer between 0 and 2^32 - 1, giving the validator tip as a percentage amount. A value of \"1\" corresponds to 1% of the fee.\n    NetworkIdentifier:\n      description: The logical name of the network\n      type: string\n      example: mainnet\n    CommittedStateIdentifier:\n      type: object\n      required:\n        - state_version\n      properties:\n        state_version:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 100000000000000\n          description: An integer between 0 and 10^13, representing the state version. The state version increments with each transaction, starting at 0 pre-genesis.\n    CommittedTransaction:\n      type: object\n      required:\n        - state_version\n        - receipt\n      properties:\n        state_version:\n          type: integer\n          format: int64\n          minimum: 1\n          maximum: 100000000000000\n          description: An integer between 1 and 10^13, giving the resultant state version after the transaction has been committed\n        notarized_transaction:\n          $ref: \"#/components/schemas/NotarizedTransaction\"\n        receipt:\n          $ref: \"#/components/schemas/TransactionReceipt\"\n    TransactionIdentifiers:\n      type: object\n      required:\n        - intent_hash\n        - signatures_hash\n        - payload_hash\n      properties:\n        intent_hash:\n          type: string\n          minLength: 64\n          maxLength: 64\n          description: The hex-encoded transaction intent hash. This is also known as the Transaction Identifier hash for user transactions. This hash is SHA256(SHA256(compiled_intent))\n        signatures_hash:\n          type: string\n          minLength: 64\n          maxLength: 64\n          description: The hex-encoded signed transaction hash. This is the hash which is signed as part of notarization. This hash is SHA256(SHA256(compiled_signed_transaction))\n        payload_hash:\n          type: string\n          minLength: 64\n          maxLength: 64\n          description: The hex-encoded notarized transaction hash. This is also known as the payload hash. This hash is SHA256(SHA256(compiled_notarized_transaction))\n    ErrorResponse:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          description: A numeric code corresponding to the given HTTP error code.\n        message:\n          description: A human-readable error message.\n          type: string\n        trace_id:\n          description: A GUID to be used when reporting errors, to allow correlation with the Core API's error logs, in the case where the Core API details are hidden.\n          type: string\n#########################################\n# GENERAL / SHARED MODELS - Transaction #\n#########################################\n    FeeSummary:\n      description: Fees paid\n      type: object\n      required:\n        - loan_fully_repaid\n        - cost_unit_limit\n        - cost_unit_consumed\n        - cost_unit_price_attos\n        - tip_percentage\n        - xrd_burned_attos\n        - xrd_tipped_attos\n      properties:\n        loan_fully_repaid:\n          type: boolean\n          description: Specifies whether the transaction execution loan has been fully repaid.\n        cost_unit_limit:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          description: An integer between 0 and 2^32 - 1, representing the maximum amount of cost units available for the transaction execution.\n        cost_unit_consumed:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          description: An integer between 0 and 2^32 - 1, representing the amount of cost units consumed by the transaction execution.\n        cost_unit_price_attos:\n          type: string\n          description: |\n            A decimal-string-encoded integer between 0 and 2^255-1, which represents the total number of 10^(-18) subunits in\n            the XRD price of a single cost unit.\n        tip_percentage:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          description: An integer between 0 and 2^32 - 1, specifying the validator tip as a percentage amount. A value of \"1\" corresponds to 1% of the fee.\n        xrd_burned_attos:\n          type: string\n          description: |\n            A decimal-string-encoded integer between 0 and 2^255-1, which represents the total number of 10^(-18) subunits in\n            the total amount of XRD burned in the transaction.\n        xrd_tipped_attos:\n          type: string\n          description: |\n            A decimal-string-encoded integer between 0 and 2^255-1, which represents the total number of 10^(-18) subunits in\n            the total amount of XRD tipped to validators in the transaction.\n    StateUpdates:\n      type: object\n      description: Transaction state updates (only present if status is Succeeded or Failed)\n      required:\n        - down_virtual_substates\n        - up_substates\n        - down_substates\n        - new_global_entities\n      properties:\n        down_virtual_substates:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SubstateId\"\n        up_substates:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UpSubstate\"\n        down_substates:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DownSubstate\"\n        new_global_entities:\n          type: array\n          items:\n            $ref: \"#/components/schemas/GlobalEntityId\"\n    UpSubstate:\n      type: object\n      required:\n        - substate_id\n        - version\n        - substate_hex\n        - substate_data_hash\n        - substate_data\n      properties:\n        substate_id:\n          $ref: \"#/components/schemas/SubstateId\"\n        version:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 100000000000000\n          description: An integer between 0 and 10^13, counting the number of times the substate was updated\n        substate_hex:\n          type: string\n          description: The hex-encoded, SBOR-encoded substate data bytes\n        substate_data_hash:\n          type: string\n          description: The hex-encoded single-SHA256 hash of the substate data bytes\n        substate_data:\n          $ref: \"#/components/schemas/Substate\"\n    DownSubstate:\n      type: object\n      required:\n        - substate_id\n        - substate_data_hash\n        - version\n      properties:\n        substate_id:\n          $ref: \"#/components/schemas/SubstateId\"\n        substate_data_hash:\n          type: string\n          description: The hex-encoded single-SHA256 hash of the substate data bytes\n        version:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 100000000000000\n          description: An integer between 0 and 10^13, counting the number of times the substate was updated\n    GlobalEntityId:\n      type: object\n      required:\n        - entity_type\n        - entity_address_hex\n        - global_address_hex\n        - global_address\n      properties:\n        entity_type:\n          $ref: \"#/components/schemas/EntityType\"\n        entity_address_hex:\n          type: string\n          description: The hex-encoded bytes of the entity address\n        global_address_hex:\n          type: string\n          description: The hex-encoded bytes of the entity's global address. This is currently the same as entity_address, but may change in future.\n        global_address:\n          type: string\n          description: The Bech32m-encoded human readable version of the entity's global address\n    EntityId:\n      type: object\n      required:\n        - entity_type\n        - entity_address_hex\n      properties:\n        entity_type:\n          $ref: \"#/components/schemas/EntityType\"\n        entity_address_hex:\n          type: string\n          description: The hex-encoded bytes of the entity address\n    SubstateId:\n      type: object\n      required:\n        - entity_type\n        - entity_address_hex\n        - substate_type\n        - substate_key_hex\n      properties:\n        entity_type:\n          $ref: \"#/components/schemas/EntityType\"\n        entity_address_hex:\n          type: string\n          description: The hex-encoded bytes of the entity address\n        substate_type:\n          $ref: \"#/components/schemas/SubstateType\"\n        substate_key_hex:\n          type: string\n          description: The hex-encoded bytes of the substate key, under the entity\n    ResourceAddress:\n      type: string\n      description: The Bech32m-encoded human readable version of the resource address\n    ComponentAddress:\n      type: string\n      description: The Bech32m-encoded human readable version of the component address\n    PackageAddress:\n      type: string\n      description: The Bech32m-encoded human readable version of the package address\n    ResourceChange:\n      type: object\n      required:\n        - resource_address\n        - component_address\n        - vault_entity_id\n        - amount_attos\n      properties:\n        resource_address:\n          $ref: \"#/components/schemas/ResourceAddress\"\n        component_address:\n          $ref: \"#/components/schemas/ComponentAddress\"\n        vault_entity_id:\n          $ref: \"#/components/schemas/EntityId\"\n        amount_attos:\n          type: string\n          description: |\n            A decimal-string-encoded integer between 0 and 2^255-1, which represents the total number of 10^(-18) subunits in\n            the XRD amount put or taken from the vault\n#################################################\n# GENERAL / SHARED MODELS - keys and signatures #\n#################################################\n    PublicKeyType:\n      type: string\n      enum:\n        - EcdsaSecp256k1\n        - EddsaEd25519\n    PublicKey:\n      oneOf:\n        - $ref: '#/components/schemas/EcdsaSecp256k1PublicKey'\n        - $ref: '#/components/schemas/EddsaEd25519PublicKey'\n      discriminator:\n        propertyName: key_type\n        mapping:\n          # NOTE: These need to match PublicKeyType\n          EcdsaSecp256k1: '#/components/schemas/EcdsaSecp256k1PublicKey'\n          EddsaEd25519: '#/components/schemas/EddsaEd25519PublicKey'\n    EcdsaSecp256k1PublicKey:\n      type: object\n      required:\n        - key_type\n        - key_hex\n      properties:\n        key_type:\n          $ref: '#/components/schemas/PublicKeyType'\n        key_hex:\n          type: string\n          minLength: 66\n          maxLength: 66\n          description: The hex-encoded compressed ECDSA Secp256k1 public key (33 bytes)\n    EddsaEd25519PublicKey:\n      type: object\n      required:\n        - key_type\n        - key_hex\n      properties:\n        key_type:\n          $ref: '#/components/schemas/PublicKeyType'\n        key_hex:\n          type: string\n          minLength: 64\n          maxLength: 64\n          description: The hex-encoded compressed EdDSA Ed25519 public key (32 bytes)\n    Signature:\n      oneOf:\n        - $ref: '#/components/schemas/EcdsaSecp256k1Signature'\n        - $ref: '#/components/schemas/EddsaEd25519Signature'\n      discriminator:\n        propertyName: key_type\n        mapping:\n          # NOTE: These need to match PublicKeyType\n          EcdsaSecp256k1: '#/components/schemas/EcdsaSecp256k1Signature'\n          EddsaEd25519: '#/components/schemas/EddsaEd25519Signature'\n    EcdsaSecp256k1Signature:\n      type: object\n      required:\n        - key_type\n        - signature_hex\n      properties:\n        key_type:\n          $ref: '#/components/schemas/PublicKeyType'\n        signature_hex:\n          type: string\n          minLength: 130\n          maxLength: 130\n          description: A hex-encoded recoverable ECDSA Secp256k1 signature (65 bytes). The first byte is the recovery id, the remaining 64 bytes are the compact signature, ie CONCAT(R, s) where R and s are each 32-bytes in padded big-endian format.\n    EddsaEd25519Signature:\n      type: object\n      required:\n        - key_type\n        - signature_hex\n      properties:\n        key_type:\n          $ref: '#/components/schemas/PublicKeyType'\n        signature_hex:\n          type: string\n          minLength: 128\n          maxLength: 128\n          description: A hex-encoded EdDSA Ed25519 signature (64 bytes). This is CONCAT(R, s) where R and s are each 32-bytes in padded big-endian format.\n    SignatureWithPublicKey:\n      oneOf:\n        - $ref: '#/components/schemas/EcdsaSecp256k1SignatureWithPublicKey'\n        - $ref: '#/components/schemas/EddsaEd25519SignatureWithPublicKey'\n      discriminator:\n        propertyName: key_type\n        mapping:\n          # NOTE: These need to match PublicKeyType\n          EcdsaSecp256k1: '#/components/schemas/EcdsaSecp256k1SignatureWithPublicKey'\n          EddsaEd25519: '#/components/schemas/EddsaEd25519SignatureWithPublicKey'\n    EcdsaSecp256k1SignatureWithPublicKey:\n      type: object\n      required:\n        - key_type\n        - recoverable_signature\n      description: Because ECDSA has recoverable signatures, this only includes a signature\n      properties:\n        key_type:\n          $ref: '#/components/schemas/PublicKeyType'\n        recoverable_signature:\n          $ref: '#/components/schemas/EcdsaSecp256k1Signature'\n    EddsaEd25519SignatureWithPublicKey:\n      type: object\n      required:\n        - key_type\n        - public_key\n        - signature\n      description: The EDDSA public key and signature \n      properties:\n        key_type:\n          $ref: '#/components/schemas/PublicKeyType'\n        public_key:\n          $ref: '#/components/schemas/EddsaEd25519PublicKey'\n        signature:\n          $ref: '#/components/schemas/EddsaEd25519Signature'\n#######################################\n# GENERAL / SHARED MODELS - substates #\n#######################################\n    EntityType:\n      type: string\n      enum:\n        - System\n        - ResourceManager\n        - Component\n        - Package\n        - Vault\n        - KeyValueStore\n    Substate:\n      oneOf:\n        - $ref: '#/components/schemas/SystemSubstate'\n        - $ref: '#/components/schemas/ResourceManagerSubstate'\n        - $ref: '#/components/schemas/ComponentInfoSubstate'\n        - $ref: '#/components/schemas/ComponentStateSubstate'\n        - $ref: '#/components/schemas/PackageSubstate'\n        - $ref: '#/components/schemas/VaultSubstate'\n        - $ref: '#/components/schemas/NonFungibleSubstate'\n        - $ref: '#/components/schemas/KeyValueStoreEntrySubstate'\n      discriminator:\n        propertyName: substate_type\n        mapping:\n          # NOTE: These need to match SubstateType options below\n          System: '#/components/schemas/SystemSubstate'\n          ResourceManager: '#/components/schemas/ResourceManagerSubstate'\n          ComponentInfo: '#/components/schemas/ComponentInfoSubstate'\n          ComponentState: '#/components/schemas/ComponentStateSubstate'\n          Package: '#/components/schemas/PackageSubstate'\n          Vault: '#/components/schemas/VaultSubstate'\n          NonFungible: '#/components/schemas/NonFungibleSubstate'\n          KeyValueStoreEntry: '#/components/schemas/KeyValueStoreEntrySubstate'\n    SubstateType:\n      type: string\n      enum:\n        - System\n        - ResourceManager\n        - ComponentInfo\n        - ComponentState\n        - Package\n        - Vault\n        - NonFungible\n        - KeyValueStoreEntry\n    SubstateBase:\n      type: object\n      required:\n        - entity_type\n        - substate_type\n      properties:\n        entity_type:\n          $ref: '#/components/schemas/EntityType'\n        substate_type:\n          $ref: '#/components/schemas/SubstateType'\n    SystemSubstate:\n      allOf:\n        - $ref: '#/components/schemas/SubstateBase'\n        - type: object\n          required:\n            - epoch\n          properties:\n            epoch:\n              type: integer\n              format: int64\n              minimum: 0\n              maximum: 10000000000\n              description: An integer between 0 and 10^10, marking the current epoch\n    ResourceManagerSubstate:\n      allOf:\n        - $ref: '#/components/schemas/SubstateBase'\n        - type: object\n          required:\n            - resource_type\n            - metadata\n            - total_supply_attos\n          properties:\n            resource_type:\n              $ref: '#/components/schemas/ResourceType'\n            fungible_divisibility:\n              type: integer\n              minimum: 0\n              maximum: 18\n            metadata:\n              type: array\n              items:\n                type: object\n                required:\n                  - key\n                  - value\n                properties:\n                  key:\n                    type: string\n                  value:\n                    type: string\n            total_supply_attos:\n              type: string\n              description: |\n                A decimal-string-encoded integer between 0 and 2^255-1, which represents the total number of 10^(-18) subunits in\n                the total supply of this resource.\n    ResourceType:\n      type: string\n      enum:\n        - Fungible\n        - NonFungible\n    ComponentInfoSubstate:\n      allOf:\n        - $ref: '#/components/schemas/SubstateBase'\n        - type: object\n          required:\n            - package_address\n            - blueprint_name\n          properties:\n            package_address:\n              $ref: '#/components/schemas/PackageAddress'\n            blueprint_name:\n              type: string\n    ComponentStateSubstate:\n      allOf:\n        - $ref: '#/components/schemas/SubstateBase'\n        - type: object\n          required:\n            - data_struct\n          properties:\n            data_struct:\n              $ref: '#/components/schemas/DataStruct'\n    DataStruct:\n      type: object\n      required:\n        - struct_data\n        - owned_entities\n        - referenced_entities\n      properties:\n        struct_data:\n          $ref: '#/components/schemas/SborData'\n          description: The struct data\n        owned_entities:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityId'\n        referenced_entities:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityId'\n    SborData:\n      type: object\n      required:\n        - data_hex\n        - data_json\n      properties:\n        data_hex:\n          type: string\n          description: The hex-encoded, raw SBOR-encoded data\n        data_json:\n          description: An untyped JSON body representing the content of the SBOR data\n    PackageSubstate:\n      allOf:\n        - $ref: '#/components/schemas/SubstateBase'\n        - type: object\n          required:\n            - code_hex\n          properties:\n            code_hex:\n              type: string\n              description: The hex-encoded package code\n    VaultSubstate:\n      allOf:\n        - $ref: '#/components/schemas/SubstateBase'\n        - type: object\n          required:\n            - resource_amount\n          properties:\n            resource_amount:\n              $ref: '#/components/schemas/ResourceAmount'\n    ResourceAmount:\n      oneOf:\n        - $ref: '#/components/schemas/FungibleResourceAmount'\n        - $ref: '#/components/schemas/NonFungibleResourceAmount'\n      discriminator:\n        propertyName: resource_type\n        mapping:\n          # NOTE: These need to match ResourceType options\n          Fungible: '#/components/schemas/FungibleResourceAmount'\n          NonFungible: '#/components/schemas/NonFungibleResourceAmount'\n    ResourceAmountBase:\n      type: object\n      required:\n        - resource_type\n        - resource_address\n      properties:\n        resource_type:\n          $ref: '#/components/schemas/ResourceType'\n        resource_address:\n          $ref: '#/components/schemas/ResourceAddress'\n    FungibleResourceAmount:\n      allOf:\n        - $ref: '#/components/schemas/ResourceAmountBase'\n        - type: object\n          required:\n            - amount_attos\n          properties:\n            amount_attos:\n              type: string\n              description: |\n                The string-encoded decimal subunits of the amount (10^-18) in a signed 256-bit integer.\n                This is string-encoded as it doesn't fit well into common numeric types.\n    NonFungibleResourceAmount:\n      allOf:\n        - $ref: '#/components/schemas/ResourceAmountBase'\n        - type: object\n          required:\n            - nf_ids_hex\n          properties:\n            nf_ids_hex:\n              type: array\n              items:\n                type: string\n                description: The hex-encoded bytes of the non-fungible ids\n    NonFungibleSubstate:\n      allOf:\n        - $ref: '#/components/schemas/SubstateBase'\n        - type: object\n          required:\n            - nf_id_hex\n            - is_deleted\n          properties:\n            nf_id_hex:\n              type: string\n              description: The hex-encoded bytes of its non-fungible id\n            is_deleted:\n              type: boolean\n            non_fungible_data:\n              $ref: '#/components/schemas/NonFungibleData'\n    NonFungibleData:\n      type: object\n      description: Only present if the non fungible isn't deleted\n      required:\n        - immutable_data\n        - mutable_data\n      properties:\n        immutable_data:\n          $ref: '#/components/schemas/DataStruct'\n        mutable_data:\n          $ref: '#/components/schemas/DataStruct'\n    KeyValueStoreEntrySubstate:\n      allOf:\n        - $ref: '#/components/schemas/SubstateBase'\n        - type: object\n          required:\n            - key_hex\n            - is_deleted\n          properties:\n            key_hex:\n              type: string\n              description: The hex-encoded bytes of its key\n            is_deleted:\n              type: boolean\n            data_struct:\n              $ref: '#/components/schemas/DataStruct'\n############################################################################################################\n# V0\n##########################################\n# REQUEST: /status/network-configuration #\n##########################################\n    V0NetworkConfigurationResponse:\n      type: object\n      required:\n        - version\n        - network\n        - network_hrp_suffix\n        - well_known_addresses\n      properties:\n        version:\n          description: Different versions regarding the node, network and api.\n          type: object\n          required:\n            - core_version\n            - api_version\n          properties:\n            core_version:\n              type: string\n            api_version:\n              type: string\n        network:\n          $ref: \"#/components/schemas/NetworkIdentifier\"\n        network_hrp_suffix:\n          type: string\n          description: The network suffix used for Bech32m HRPs used for addressing.\n        well_known_addresses:\n          type: object\n          description: Key addresses for this network.\n          required:\n            - account_package\n            - faucet\n            - ecdsa_secp256k1\n            - eddsa_ed25519\n            - xrd\n          properties:\n            account_package:\n              type: string\n            faucet:\n              type: string\n            ecdsa_secp256k1:\n              type: string\n            eddsa_ed25519:\n              type: string\n            xrd:\n              type: string\n###################################\n# REQUEST: /transaction/submit #\n################################### \n    V0TransactionSubmitRequest:\n      type: object\n      required:\n        - notarized_transaction_hex\n      properties:\n        notarized_transaction_hex:\n          description: A hex-encoded, compiled notarized transaction.\n          type: string\n    V0TransactionSubmitResponse:\n      type: object\n      required:\n        - duplicate\n      properties:\n        duplicate:\n          description: Is true if the transaction is a duplicate of an existing transaction in the mempool.\n          type: boolean\n###################################\n# REQUEST: /transaction/status #\n###################################\n    V0TransactionStatusRequest:\n      type: object\n      required:\n        - intent_hash\n      properties:\n        intent_hash:\n          description: A hex-encoded transaction intent hash. SHA256(SHA256(compiled_transaction_intent))\n          minLength: 66\n          maxLength: 66\n          type: string\n    V0TransactionStatusResponse:\n      type: object\n      required:\n        - intent_status\n        - known_payloads\n      properties:\n        intent_status:\n          type: string\n          description: The status of the transaction intent\n          enum:\n            - CommittedSuccess\n            - CommittedFailure\n            - InMempool\n            - Rejected\n            - Unknown\n        known_payloads:\n          type: array\n          items:\n            $ref: \"#/components/schemas/V0TransactionPayloadStatus\"\n    V0TransactionPayloadStatus:\n      type: object\n      required:\n        - payload_hash\n        - status\n      properties:\n        payload_hash:\n          type: string\n        status:\n          type: string\n          description: The status of the transaction payload, as per this node\n          enum:\n            - CommittedSuccess\n            - CommittedFailure\n            - InMempool\n            - Rejected\n        error_message:\n          description: An explanation for the error, if failed or rejected\n          type: string\n####################################\n# REQUEST: /transaction/receipt #\n####################################\n    V0CommittedTransactionRequest:\n      type: object\n      required:\n        - intent_hash\n      properties:\n        intent_hash:\n          description: A hex-encoded transaction intent hash. SHA256(SHA256(compiled_transaction_intent))\n          minLength: 66\n          maxLength: 66\n          type: string\n    V0CommittedTransactionResponse:\n      type: object\n      required:\n        - committed\n      properties:\n        committed:\n          $ref: \"#/components/schemas/CommittedTransaction\"\n############################\n# REQUEST: /state/epoch #\n############################\n    # No request body required\n    V0StateEpochResponse:\n      type: object\n      required:\n        - epoch\n      properties:\n        epoch:\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 10000000000\n          description: An integer between 0 and 10^10, marking the current epoch\n################################\n# REQUEST: /state/component #\n################################\n    V0StateComponentRequest:\n      type: object\n      required:\n        - component_address\n      properties:\n        component_address:\n          type: string\n          description: The Bech32m-encoded human readable version of the component's global address\n    V0StateComponentResponse:\n      type: object\n      required:\n        - info\n        - state\n        - owned_vaults\n        - descendent_ids\n      properties:\n        info:\n          $ref: \"#/components/schemas/Substate\"\n        state:\n          $ref: \"#/components/schemas/Substate\"\n        owned_vaults:\n          type: array\n          description: Any vaults owned directly or indirectly by the component\n          items:\n            $ref: \"#/components/schemas/Substate\"\n        descendent_ids:\n          type: array\n          description: Any descendent nodes owned directly or indirectly by the component\n          items:\n            $ref: \"#/components/schemas/V0StateComponentDescendentId\"\n    V0StateComponentDescendentId:\n      type: object\n      required:\n        - parent\n        - entity_id\n        - depth\n      properties:\n        parent:\n          $ref: \"#/components/schemas/SubstateId\"\n        entity_id:\n          $ref: \"#/components/schemas/EntityId\"\n        depth:\n          description: Depth under component\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 100\n###############################\n# REQUEST: /state/resource #\n###############################\n    V0StateResourceRequest:\n      type: object\n      required:\n        - resource_address\n      properties:\n        resource_address:\n          type: string\n          description: The Bech32m-encoded human readable version of the resource's global address\n    V0StateResourceResponse:\n      type: object\n      required:\n        - manager\n      properties:\n        manager:\n          $ref: \"#/components/schemas/Substate\"\n###################################\n# REQUEST: /state/non-fungible #\n###################################\n    V0StateNonFungibleRequest:\n      type: object\n      required:\n        - resource_address\n        - non_fungible_id_hex\n      properties:\n        resource_address:\n          type: string\n          description: The Bech32m-encoded human readable version of the resource's global address\n        non_fungible_id_hex:\n          type: string\n          description: The hex-encoded non-fungible id\n    V0StateNonFungibleResponse:\n      type: object\n      required:\n        - non_fungible\n      properties:\n        non_fungible:\n          $ref: \"#/components/schemas/Substate\"\n##############################\n# REQUEST: /state/package #\n##############################\n    V0StatePackageRequest:\n      type: object\n      required:\n        - package_address\n      properties:\n        package_address:\n          type: string\n          description: The Bech32m-encoded human readable version of the package's global address\n    V0StatePackageResponse:\n      type: object\n      required:\n        - package\n      properties:\n        package:\n          $ref: \"#/components/schemas/Substate\"",
			"canonicalURL": "/github.com/radixdlt/babylon-alphanet@6fbd33e532ac2312abfd1c4d144b1e8c4eca7356/-/blob/gateway-api-v0/gateway-api-v0-schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/radixdlt/babylon-alphanet/blob/6fbd33e532ac2312abfd1c4d144b1e8c4eca7356/gateway-api-v0/gateway-api-v0-schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/state/component\": post: responses: code 200: contents: media: \"application/json\": generate schema: field info: oneOf: collect variants: oneOf[5]: allOf: field resource_amount: oneOf: discriminator: unable to map \"NonFungible\" to \"https://raw.githubusercontent.com/radixdlt/babylon-alphanet/6fbd33e532ac2312abfd1c4d144b1e8c4eca7356/gateway-api-v0/gateway-api-v0-schema.yaml#/components/schemas/NonFungibleResourceAmount\""
}