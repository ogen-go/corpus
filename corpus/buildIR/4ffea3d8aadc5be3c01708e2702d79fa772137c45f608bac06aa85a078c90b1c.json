{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bcgov/common-document-generation-service"
		},
		"file": {
			"name": "v1.api-spec.yaml",
			"size": 0,
			"path": "app/src/docs/v1.api-spec.yaml",
			"byteSize": 11291,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  version: 1.0.0\n  title: \"[DEPRECATED] Common Document Generation Service API\"\n  description: \u003e-\n    [DEPRECATED] CDOGS - A common hosted service (API) for generating documents from\n    templates, data documents, and assets\n  license:\n    name: Apache 2.0\n    url: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n  contact:\n    name: NR Common Service Showcase\n    email: NR.CommonServiceShowcase@gov.bc.ca\nservers:\n  - url: /api/v1\n    description: This Server\nsecurity:\n  - BearerAuth: []\n    OpenID: []\npaths:\n  /health:\n    get:\n      summary: Returns health checks of external service dependencies.\n      description: \u003e-\n        This endpoint returns the state and connectivity of any external\n        services CDOGS depends on.\n      operationId: getHealth\n      tags:\n        - Health\n      responses:\n        \"200\":\n          description: Returns the healthiness of the service dependencies\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - dependencies\n                properties:\n                  dependencies:\n                    type: array\n                    description: A list of Health states\n                    items:\n                      $ref: \"#/components/schemas/Health\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /fileTypes:\n    get:\n      summary: Returns a dictionary of supported input template file types and output file types.\n      description: \u003e-\n        This endpoint checks the supported file types defined by the Carbone JS library that CDOGS depends on.\n      operationId: getFileTypes\n      tags:\n        - FileTypes\n      responses:\n        \"200\":\n          description: Returns the supported combinations of input templates and output file types\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileTypes\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /docGen:\n    post:\n      summary: Generate a document\n      description: \u003e-\n        This endpoint accepts a document template and a set (or multiple sets)\n        of subsitution variables and merges them into the document.\n      operationId: postDocGen\n      tags:\n        - DocGen\n      security:\n        - OpenID:\n            - GENERATOR\n      requestBody:\n        description: Fields required to generate a document\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DocGenObject\"\n      responses:\n        \"201\":\n          description: Returns the supplied document with variables merged in\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                description: Raw binary-encoded response\n          headers:\n            Content-Disposition:\n              schema:\n                type: string\n              description: \u003e-\n                Indicates if a browser should render this resource inline or\n                treat as an attachment for download\n              example: attachment; filename=file.pdf\n            Content-Length:\n              schema:\n                type: integer\n              description: \u003e-\n                Length of content. This header is not always returned as it\n                depends on the Content-Type (i.e. text/plain, text/html will not\n                return anything)\n              example: 1234\n            Content-Type:\n              schema:\n                type: string\n              description: The MIME-type of the binary file payload\n              example: application/pdf\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    OpenID:\n      type: openIdConnect\n      openIdConnectUrl: \u003e-\n        https://oidc.gov.bc.ca/auth/realms/jbd6rnxw/.well-known/openid-configuration\n  schemas:\n    BadRequest:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 400\n            title:\n              example: Bad Request\n            type:\n              example: \"https://httpstatuses.com/400\"\n    ContextObject:\n      type: object\n      description: \u003e-\n        A freeform JSON object of key-value pairs.  All keys must be\n        alphanumeric or underscore.\n      example:\n        something:\n          greeting: Hello\n          target: World\n        someone: user\n    DocGenObject:\n      type: object\n      properties:\n        contexts:\n          type: array\n          description: An array of Context objects\n          items:\n            $ref: \"#/components/schemas/ContextObject\"\n        template:\n          allOf:\n            - $ref: \"#/components/schemas/TemplateObject\"\n            - type: object\n              description: An object containing the document template to merge into\n    Error:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 500\n            title:\n              example: Internal Server Error\n            type:\n              example: \"https://httpstatuses.com/500\"\n    Health:\n      type: object\n      required:\n        - name\n        - healthy\n        - info\n      properties:\n        name:\n          type: string\n          description: The name of the dependency\n          example: windward\n        healthy:\n          type: boolean\n          description: Is the dependency reachable/alive\n        info:\n          type: string\n          description: \u003e-\n            Any extra information, generally useful when dependency is\n            unreachable\n          example: Windward connected successfully.\n    FileTypes:\n      type: object\n      additionalProperties:\n        type: object\n        properties:\n          inputFileType:\n            type: string\n          outputFileTypes:\n            type: array\n            items:\n              type: string\n      example:\n        docx: [docx, pdf]\n        xlsx: [docx, pdf, xslx]\n    NotFound:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 404\n            title:\n              example: Not Found\n            type:\n              example: \"https://httpstatuses.com/404\"\n    Problem:\n      required:\n        - type\n        - title\n        - status\n        - detail\n      properties:\n        type:\n          type: string\n          description: \"What type of problem, link to explanation of problem\"\n        title:\n          type: string\n          description: \"Title of problem, generally the Http Status Code description\"\n        status:\n          type: string\n          description: The Http Status code\n        detail:\n          type: string\n          description: Short description of why this problem was raised.\n    TemplateObject:\n      required:\n        - content\n        - contentFileType\n      type: object\n      properties:\n        content:\n          type: string\n          description: \"String, Buffer or a Stream contents for the attachment\"\n          example: PGI+SGVsbG8gV29ybGRcITwvYj4=\n        contentEncodingType:\n          type: string\n          description: \u003e-\n            If set and content is string, then encodes the content to a Buffer\n            using the specified encoding. Example values: 'base64', 'hex',\n            'binary' etc. Useful if you want to use binary attachments in a JSON\n            formatted email object.\n          enum:\n            - base64\n            - binary\n            - hex\n          example: base64\n        contentFileType:\n          type: string\n          description: The file extension of the encoded content file.\n          example: docx\n        outputFileType:\n          type: string\n          description: \u003e-\n            The desired file extension of the generated document, used for\n            converting to other types of document. If not suppled, will just use\n            the original contentFileType.\n          example: pdf\n        outputFileName:\n          type: string\n          description: \u003e-\n            The desired file name of the generated document, can accept template\n            substitution fields from the contexts. If not suppled, will use a\n            random UUID.\n          example: \"abc_123_{d.firstName}_{d.lastName}\"\n    ValidationError:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          required:\n            - errors\n          properties:\n            errors:\n              type: array\n              items:\n                type: object\n                required:\n                  - message\n                properties:\n                  value:\n                    type: object\n                    description: Contents of the field that was in error.\n                    example: utf-8x\n                  message:\n                    type: string\n                    description: The error message for the field.\n                    example: Invalid value `encoding`.\n            status:\n              example: 422\n            title:\n              example: Unprocessable Entity\n            type:\n              example: \"https://httpstatuses.com/422\"\n  responses:\n    BadRequest:\n      description: Request is missing content or is malformed\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BadRequest\"\n    Error:\n      description: Unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Forbidden:\n      description: Lack required role to perform action\n    NoContent:\n      description: Accepted and no content\n    NotFound:\n      description: Not found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotFound\"\n    UnauthorizedError:\n      description: Access token is missing or invalid\n    UnprocessableEntity:\n      description: \u003e-\n        The server was unable to process the contained instructions. Generally\n        validation error(s).\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ValidationError\"\n"
		}
	},
	"Error": "buildIR: make ir: path \"/docGen\": post: responses: 400: contents: application/json: generate schema: allOf: merge properties: try to merge conflicting property schemas: schema type mismatch:  and string"
}