{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "ato.gov.au-0.0.6-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/ato.gov.au-0.0.6-swagger.yaml",
			"byteSize": 117061,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e\n    # Introduction\n\n    The Business Registries API is built on HTTP. The API is RESTful. It has predictable resource URIs.\n\n      The API is documented in \u003ca target=\"_blank\" href=\"https://github.com/OAI/OpenAPI-Specification\"\u003eOpenAPI\u003c/a\u003e format.\n      In addition to the standard OpenAPI syntax we use a few\n      \u003ca target=\"_blank\" href=\"https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md\"\u003evendor extensions\u003c/a\u003e.\n\n    # Overview\n\n    The following sections describe the resources that make up the Business Registries REST API.\n\n    ## Current Version\n\n    By default, all requests to https://api.abr.ato.gov.au receive the `v1` version of the REST API. We encourage you to explicitly request this version via the `Accept` header.\n\n        Accept: application/vnd.abr-ato.v1+json\n\n    ## Schema\n\n    All API access is over HTTPS, and accessed from https://api.abr.ato.gov.au. All data is sent and received as JSON. Blank fields are included.\n\n      All dates use the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:\n\n        YYYY-MM-DD\n\n      For example: `2017-07-01` (the 1st of July 2017)\n\n      All timestamps use the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:\n\n        YYYY-MM-DDTHH:MM:SSZ\n\n      For example: `2017-07-01T11:05:06+10:00`\n\n    ## Timezones\n\n    Some requests allow for specifying timestamps or generate timestamps with time zone information. We apply the following rules, in order of priority, to determine timezone information for API calls.\n\n    ### Explicitly provide an ISO 8601 timestamp with timezone information\n\n    For API calls that allow for a timestamp to be specified, we use that exact timestamp.\n\n      For example: `2017-07-01T11:05:06+10:00`\n\n    ## Pagination\n\n    Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n      For example:\n\n        Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n              \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n    `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n\n    ## Parameters\n\n    Many API methods take optional parameters:\n\n        GET /individuals/1234/addresses/?addressType='Mailing'\n\n    In this example, the '1234' value is provided for the `:partyId` parameter in the path while `:addressType` is passed in the query string.\n\n    For POST, PATCH, PUT, and DELETE requests, parameters not included in the URL should be encoded as JSON with a Content-Type of 'application/json'.\n\n    ## Metadata\n\n    The API provides **metadata services** that you can use to discover information about the classifcation schemes and values used by the Registry.\n\n      For example:\n\n        GET /classifications/roles\n\n      Sample response:\n\n        [\n          {\n            \"id\": \"123e4567-e89b-12d3-a456-426655440001\",\n            \"role\": \"Director\",\n            \"roleDescription\": \"An individual responsible for managing a company's ...\",\n            \"relationship\": \"Directorship\",\n            \"reciprocalRole\": \"Company\",\n            \"reciprocalRoleDescription\": \"An incorporated legal entity.\"\n          },\n          {\n            ...\n          }\n        ]\n\n    ## Root Endpoint\n\n    You can issue a GET request to the root endpoint (also known as the service root) to get all the endpoint categories that the REST API supports:\n\n        curl https://api.abr.ato.gov.au\n\n    ## Authentication\n\n    The Business Registries API supports API Key authentication.\n\n      When you sign up for an account, you are given your first API key. You can generate additional API keys, and delete\n      API keys (as you may need to rotate your keys in the future). You authenticate to the Business Registries API by\n      providing your secret key in the request header.\n\n      **Note:** Some requests will return `404 Not Found`, instead of `403 Permission Denied`. This is to prevent the\n      accidental leakage of information to unauthorised users.\n  license:\n    name: Creative Commons Attribution 3.0 Australia\n    url: https://creativecommons.org/licenses/by/3.0/au/\n  termsOfService: https://ato.gov.au/terms-of-service/\n  title: Business Registries\n  version: 0.0.6\n  x-apisguru-categories:\n    - financial\n  x-logo:\n    backgroundColor: \"#D3D3D3\"\n    url: https://www.ato.gov.au/uploadedImages/Content/_DEM/Images/logo-ato.png\n  x-origin:\n    - format: swagger\n      url: https://ato-team.github.io/business-registries-rest-api-specification/swagger.yaml\n      version: \"2.0\"\n  x-providerName: ato.gov.au\ntags:\n  - description: \u003e\n      An individual is a person about whom the registry wishes to maintain\n      information.\n\n        For example, the individual's date and place of birth (for the purposes of identification) and the individual's\n        residential address (which is used for administrative purposes).\n    name: Individuals\n  - description: \u003e\n      A role defines the characteristics of a relationship between parties.\n\n      An Individual can participate in a relationship with other individuals and organisations.\n\n\n      For example:\n\n\n      | Party         | Role           | Relationship     | Role          | Party                           |\n\n      | ------------- | -------------- | ---------------- | ------------- | ------------------------------- |\n\n      | Homer Simpson | Husband        | Marriage         | Wife          | Marge Simpson                   |\n\n      | Homer Simpson | Employee       | Employment       | Employer      | Springfield Nuclear Power Plant |\n\n      | Homer Simpson | Safety Officer | Colleague        | Supervisor    | Carl Carlson                    |\n\n      | Homer Simpson | Director       | Directorship     | Company       | Compu Global Hyper Mega Net     |\n\n      | Homer Simpson | Employee       | Employment       | Employer      | Compu Global Hyper Mega Net     |\n\n      | Homer Simpson | Member         | Membership       | Organisation  | The Stonecutters                |\n\n      | Homer Simpson | Partner        | Partnership      | Partnership   | The Be Sharps                   |\n\n      | Homer Simpson | Trustee        | Trusteeship      | Trust         | The Simpson Family Trust        |\n\n      | Homer Simpson | Member         | Membership       | Association   | Mensa International             |\n\n\n      You can use the API's **metadata services** to retrieve information about the classifcation schemes and\n\n      values used by the Registry.\n    name: Individuals Roles\n  - description: \u003e\n      The registry maintains information about an individual's contact details\n      for administrative purposes.\n\n        Including:\n        - an address for the service of documents\n        - a principal place of business address\n    name: Individuals Addresses\n  - description: \u003e\n      The registry maintains information about an individual's contact details\n      for administrative purposes.\n\n        Including:\n        - an email address\n        - a mobile number\n    name: Individuals Electronic Addresses\n  - description: \u003e\n      A business name is a name or title under which a person conducts a\n      business.\n    name: Individuals Business Names\n  - description: \u003e\n      If you carry on a business you may need to hold a licence.\n\n        For example, if you provide financial services, you are required to hold an Australian Financial\n        Services (AFS) licence.\n    name: Individuals Licenses\n  - description: \u003e\n      An organisation usually consists of a number of individuals or groups\n      bound by a common purpose about whom the\n\n      registry wishes to maintain information.\n\n        For example, the organisation's legal entity type (e.g., Incorporated Entity, Unincorporated Entity,\n        Partnership or Joint Venture).\n    name: Organisations\n  - description: \u003e\n      A role defines the characteristics of a relationship between parties.\n\n      An Organisation can participate in a relationship with other organisations and indiviuals.\n\n\n      For example:\n\n\n      | Party                           | Role     | Relationship | Role         | Party             |\n\n      | ------------------------------- | -------- | -------------| ------------ | ----------------- |\n\n      | Springfield Nuclear Power Plant | Employer | Employment   | Employee     | Homer Simpson     |\n\n      | Springfield Nuclear Power Plant | Company  | Directorship | Director     | Mr Burns          |\n\n      | Springfield Nuclear Power Plant | Employer | Employment   | Employee     | Mr Burns          |\n\n      | Springfield Nuclear Power Plant | Sponsor  | Sponsorship  | Organisation | The Stonecutters  |\n\n\n      You can use the API's **metadata services** to retrieve information about the classifcation schemes and\n\n      values used by the Registry.\n    name: Organisations Roles\n  - description: \u003e\n      The registry maintains information about an organisation's contact details\n      for administrative purposes.\n\n        Including:\n        - an address for the service of documents\n        - a principal place of business address\n    name: Organisations Addresses\n  - description: \u003e\n      The registry maintains information about an organisation's contact details\n      for administrative purposes.\n\n        Including:\n        - an email address\n        - a mobile number\n    name: Organisations Electronic Addresses\n  - description: \u003e\n      A business name is a name or title under which an organisation conducts a\n      business.\n    name: Organisations Business Names\n  - description: \u003e\n      If you carry on a business you may need to hold a licence.\n\n        For example, if you provide financial services, you are required to hold an Australian Financial\n        Services (AFS) licence.\n    name: Organisations Licenses\n  - description: \u003e\n      A business name is a name or title under which a person or organisation\n      conducts a business.\n    name: Business Names\n  - description: \u003e\n      If you carry on a business you may need to hold a licence.\n\n        For example, if you provide financial services, you are required to hold an Australian Financial\n        Services (AFS) licence.\n    name: Licenses\n  - description: |\n      A classification scheme for business names.\n    name: Business Name Lifecycle States\n  - description: |\n      A classification scheme for names.\n    name: Name Directions\n  - description: |\n      A classification scheme for names.\n    name: Name Prefixes\n  - description: |\n      A classification scheme for names.\n    name: Name Types\n  - description: |\n      A classification scheme for addresses.\n    name: Address Types\n  - description: |\n      A classification scheme for electronic addresses.\n    name: Electronic Address Types\n  - description: |\n      A classification scheme for the representation of human sexes.\n    name: Genders\n  - description: |\n      A classification scheme for parties (individuals and organisations).\n    name: Legal Entity Types\n  - description: |\n      A classification scheme for licenses.\n    name: License Lifecycle States\n  - description: |\n      A classification scheme for licenses.\n    name: License Types\n  - description: |\n      A classification scheme for registered identifiers.\n    name: Registered Identifier Types\n  - description: \u003e\n      A classification scheme for the characteristics of relationships between\n      parties (individuals and organisations).\n    name: Roles\npaths:\n  /business-names:\n    get:\n      description: |\n        Retrieve a list of business names\n      parameters:\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: A list of business names was retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/business-name\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of business names\n      tags:\n        - Business Names\n  /classifications/address-types:\n    get:\n      responses:\n        \"200\":\n          description: Address types were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - description: The address at which an individual or organisation\n                      receives letters or packages.\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                    name: Mailing\n                  - description: The main location where work is conducted.\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                    name: Principal Place of Business\n                items:\n                  $ref: \"#/components/schemas/address-type\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of address types\n      tags:\n        - Address Types\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/business-name-lifecycle-states:\n    get:\n      responses:\n        \"200\":\n          description: Business name lifecycle states were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - description: The Business Name has been approved.\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                    name: Approved\n                  - description: The Business Name has expired.\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                    name: Expired\n                  - description: The Business Name has been issued.\n                    id: 123e4567-e89b-12d3-a456-426655440003\n                    name: Issued\n                  - description: The Business Name is pending approval.\n                    id: 123e4567-e89b-12d3-a456-426655440004\n                    name: Pending Approval\n                  - description: The Business Name has been suspended.\n                    id: 123e4567-e89b-12d3-a456-426655440005\n                    name: Suspended\n                items:\n                  $ref: \"#/components/schemas/business-name-lifecycle-state\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of business name lifecycle states\n      tags:\n        - Business Name Lifecycle States\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/electronic-address-types:\n    get:\n      responses:\n        \"200\":\n          description: Electronic address types were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - description: An address used to send and receive emails.\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                    name: Email\n                  - description: A number used to send and receive faxes.\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                    name: Fax\n                items:\n                  $ref: \"#/components/schemas/electronic-address-type\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of electronic address types\n      tags:\n        - Electronic Address Types\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/genders:\n    get:\n      responses:\n        \"200\":\n          description: Genders were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - gender: Not Known\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                  - gender: Male\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                  - gender: Female\n                    id: 123e4567-e89b-12d3-a456-426655440003\n                  - gender: Not Applicable\n                    id: 123e4567-e89b-12d3-a456-426655440004\n                items:\n                  $ref: \"#/components/schemas/gender\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of genders\n      tags:\n        - Genders\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/legal-entity-types:\n    get:\n      responses:\n        \"200\":\n          description: Legal entity types were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - description: If you operate as a sole trader, you're responsible for\n                      all aspects of the business, including any debts the\n                      business incurs.\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                    name: Sole Trader\n                  - description: A partnership is two or more individuals or organisations\n                      who do business as partners or receive income jointly.\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                    name: Partnership\n                  - description: A joint venture is two or more people or entities who join\n                      to do business together for a particular purpose, usually\n                      a single project, rather than as an ongoing business.\n                    id: 123e4567-e89b-12d3-a456-426655440003\n                    name: Joint Venture\n                  - description: A company is a separate legal entity. This means it has\n                      the same rights as a natural person and can incur debt,\n                      sue and be sued.\n                    id: 123e4567-e89b-12d3-a456-426655440004\n                    name: Company\n                  - description: A trust is an obligation imposed on a person – the trustee\n                      – to hold property or assets (e.g. business assets) for\n                      the benefit of others (known as beneficiaries).\n                    id: 123e4567-e89b-12d3-a456-426655440005\n                    name: Trust\n                items:\n                  $ref: \"#/components/schemas/legal-entity-type\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of legal entity types\n      tags:\n        - Legal Entity Types\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/license-lifecycle-states:\n    get:\n      responses:\n        \"200\":\n          description: License lifecycle states were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - description: The License has been approved.\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                    name: Approved\n                  - description: The License has expired.\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                    name: Expired\n                  - description: The License has been issued.\n                    id: 123e4567-e89b-12d3-a456-426655440003\n                    name: Issued\n                  - description: The License is pending approval.\n                    id: 123e4567-e89b-12d3-a456-426655440004\n                    name: Pending Approval\n                  - description: The License has been suspended.\n                    id: 123e4567-e89b-12d3-a456-426655440005\n                    name: Suspended\n                items:\n                  $ref: \"#/components/schemas/license-lifecycle-state\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of license lifecycle states\n      tags:\n        - License Lifecycle States\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/license-types:\n    get:\n      responses:\n        \"200\":\n          description: License types were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - description: To conduct a financial services business in Australia, you\n                      must have an Australian Financial Services (AFS) licence.\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                    name: Australian Financial Services License\n                  - description: To conduct a \u003cinsert-name-here\u003e business you must have a\n                      2B licence.\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                    name: 2B License\n                items:\n                  $ref: \"#/components/schemas/license-type\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of license types\n      tags:\n        - License Types\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/name-directions:\n    get:\n      responses:\n        \"200\":\n          description: Name directions were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - description: The full name or formal salutation is rendered left to\n                      right.\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                    name: left-to-right\n                  - description: The full name or formal salutation is rendered right to\n                      left.\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                    name: right-to-left\n                items:\n                  $ref: \"#/components/schemas/name-direction\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of name directions\n      tags:\n        - Name Directions\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/name-prefixes:\n    get:\n      responses:\n        \"200\":\n          description: Name prefixes were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - description: A title used before a family name or formal salutation to\n                      address a man.\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                    name: Mr\n                  - description: A title used before a family name or formal salutation to\n                      address a woman.\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                    name: Ms\n                items:\n                  $ref: \"#/components/schemas/name-prefix\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of name prefixes\n      tags:\n        - Name Prefixes\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/name-types:\n    get:\n      responses:\n        \"200\":\n          description: Name types were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - description: An alternate name used by a party.\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                    name: Alias\n                  - description: The primary name used by a party.\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                    name: Principal Name\n                items:\n                  $ref: \"#/components/schemas/name-type\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of name types\n      tags:\n        - Name Types\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/registered-identifier-types:\n    get:\n      responses:\n        \"200\":\n          description: Registered identifier types were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - description: An Australian Business Number (ABN) is a unique\n                      eleven-character number issued by the Australian Business\n                      Register (ABR).\n                    id: 123e4567-e89b-12d3-a456-426655440001\n                    name: ABN\n                  - description: An Australian Company Number (ACN) is a unique\n                      nine-character number issued by the Australian Securities\n                      and Investments Commission (ASIC).\n                    id: 123e4567-e89b-12d3-a456-426655440002\n                    name: ACN\n                items:\n                  $ref: \"#/components/schemas/registered-identifier-type\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of registered identifier types\n      tags:\n        - Registered Identifier Types\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /classifications/roles:\n    get:\n      responses:\n        \"200\":\n          description: Roles were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                example:\n                  - id: 123e4567-e89b-12d3-a456-426655440001\n                    reciprocalRole: Company\n                    reciprocalRoleDescription: An incorporated legal entity.\n                    relationship: Directorship\n                    role: Director\n                    roleDescription: An individual responsible for managing a company's\n                      business activities.\n                  - id: 123e4567-e89b-12d3-a456-426655440002\n                    reciprocalRole: Employer\n                    reciprocalRoleDescription: An individual or organisation that employs people.\n                    relationship: Employment\n                    role: Employee\n                    roleDescription: An individual employed for wages or salary.\n                items:\n                  $ref: \"#/components/schemas/role\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of roles\n      tags:\n        - Roles\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n  /individuals:\n    get:\n      description: |\n        Retrieve a list of individuals\n      parameters:\n        - $ref: \"#/components/parameters/apiKey\"\n        - $ref: \"#/components/parameters/dateOfBirth\"\n        - $ref: \"#/components/parameters/placeOfBirth\"\n      responses:\n        \"200\":\n          description: A list of individuals was retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/individual\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of individuals\n      tags:\n        - Individuals\n    post:\n      description: |\n        Create an individual\n      parameters:\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/individual\"\n      responses:\n        \"201\":\n          description: Individual was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/individual\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create an individual\n      tags:\n        - Individuals\n  \"/individuals/{partyId}\":\n    delete:\n      description: |\n        Delete an individual with the specified identifier\n      responses:\n        \"204\":\n          description: Individual was deleted\n        \"400\":\n          $ref: \"#/components/responses/FailedPrecondition\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete an individual\n      tags:\n        - Individuals\n    get:\n      description: |\n        Retrieve an individual with the specified identifier\n      responses:\n        \"200\":\n          description: Individual was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/individual\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an individual\n      tags:\n        - Individuals\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    put:\n      description: |\n        Update an individual\n      requestBody:\n        $ref: \"#/components/requestBodies/individual\"\n      responses:\n        \"200\":\n          description: Individual was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/individual\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update an individual\n      tags:\n        - Individuals\n  \"/individuals/{partyId}/addresses\":\n    get:\n      responses:\n        \"200\":\n          description: Addresses were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/address\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of addresses\n      tags:\n        - Individuals Addresses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    post:\n      description: |\n        Create an address\n      requestBody:\n        $ref: \"#/components/requestBodies/address\"\n      responses:\n        \"201\":\n          description: Address was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/address\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create an address\n      tags:\n        - Individuals Addresses\n  \"/individuals/{partyId}/addresses/{addressId}\":\n    delete:\n      description: |\n        Delete an address\n      responses:\n        \"204\":\n          description: Address was deleted\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete an address\n      tags:\n        - Individuals Addresses\n    get:\n      description: |\n        Retrieve an address\n      responses:\n        \"200\":\n          description: Address was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/address\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an address\n      tags:\n        - Individuals Addresses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n      - $ref: \"#/components/parameters/addressId\"\n    put:\n      description: |\n        Update an address\n      requestBody:\n        $ref: \"#/components/requestBodies/address\"\n      responses:\n        \"200\":\n          description: Address was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/address\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update an address\n      tags:\n        - Individuals Addresses\n  \"/individuals/{partyId}/business-names\":\n    get:\n      responses:\n        \"200\":\n          description: Business Names were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/business-name\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of business names\n      tags:\n        - Individuals Business Names\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    post:\n      description: |\n        Create a business name\n      requestBody:\n        $ref: \"#/components/requestBodies/business-name\"\n      responses:\n        \"201\":\n          description: Business Name was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/business-name\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create a business name\n      tags:\n        - Individuals Business Names\n  \"/individuals/{partyId}/business-names/{productId}\":\n    delete:\n      description: |\n        Delete a business name\n      responses:\n        \"204\":\n          description: Address was deleted\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a business name\n      tags:\n        - Individuals Business Names\n    get:\n      description: |\n        Retrieve a business name\n      responses:\n        \"200\":\n          description: Business Name was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/business-name\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a business name\n      tags:\n        - Individuals Business Names\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n      - $ref: \"#/components/parameters/productId\"\n    put:\n      description: |\n        Update a business name\n      requestBody:\n        $ref: \"#/components/requestBodies/business-name\"\n      responses:\n        \"200\":\n          description: Address was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/business-name\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update a business name\n      tags:\n        - Individuals Business Names\n  \"/individuals/{partyId}/electronic-addresses\":\n    get:\n      responses:\n        \"200\":\n          description: Electronic addresses were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/electronic-address\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of electronic addresses\n      tags:\n        - Individuals Electronic Addresses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    post:\n      description: |\n        Create an electronic address\n      requestBody:\n        $ref: \"#/components/requestBodies/electronic-address\"\n      responses:\n        \"201\":\n          description: Electronic Address was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/electronic-address\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create an electronic address\n      tags:\n        - Individuals Electronic Addresses\n  \"/individuals/{partyId}/electronic-addresses/{addressId}\":\n    delete:\n      description: |\n        Delete an electronic address\n      responses:\n        \"204\":\n          description: Electronic Address was deleted\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete an electronic address\n      tags:\n        - Individuals Electronic Addresses\n    get:\n      description: |\n        Retrieve an electronic address\n      responses:\n        \"200\":\n          description: Electronic Address was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/electronic-address\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an electronic address\n      tags:\n        - Individuals Electronic Addresses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n      - $ref: \"#/components/parameters/addressId\"\n    put:\n      description: |\n        Update an electronic address\n      requestBody:\n        $ref: \"#/components/requestBodies/electronic-address\"\n      responses:\n        \"200\":\n          description: Electronic Address was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/electronic-address\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update an electronic address\n      tags:\n        - Individuals Electronic Addresses\n  \"/individuals/{partyId}/licenses\":\n    get:\n      responses:\n        \"200\":\n          description: Licenses were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/license\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of licenses\n      tags:\n        - Individuals Licenses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    post:\n      description: |\n        Create a license\n      requestBody:\n        $ref: \"#/components/requestBodies/license\"\n      responses:\n        \"201\":\n          description: License was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/license\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create a license\n      tags:\n        - Individuals Licenses\n  \"/individuals/{partyId}/licenses/{productId}\":\n    delete:\n      description: |\n        Delete a license\n      responses:\n        \"204\":\n          description: License was deleted\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a license\n      tags:\n        - Individuals Licenses\n    get:\n      description: |\n        Retrieve a license\n      responses:\n        \"200\":\n          description: License was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/license\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a license\n      tags:\n        - Individuals Licenses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n      - $ref: \"#/components/parameters/productId\"\n    put:\n      description: |\n        Update a license\n      requestBody:\n        $ref: \"#/components/requestBodies/license\"\n      responses:\n        \"200\":\n          description: License was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/license\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update a license\n      tags:\n        - Individuals Licenses\n  \"/individuals/{partyId}/roles\":\n    get:\n      responses:\n        \"200\":\n          description: Roles were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/party-role\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of roles\n      tags:\n        - Individuals Roles\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    post:\n      description: |\n        Create a role\n      requestBody:\n        $ref: \"#/components/requestBodies/party-role\"\n      responses:\n        \"201\":\n          description: Role was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/party-role\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create a role\n      tags:\n        - Individuals Roles\n  \"/individuals/{partyId}/roles/{roleId}\":\n    delete:\n      description: |\n        Delete a role\n      responses:\n        \"204\":\n          description: Role was deleted\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a role\n      tags:\n        - Individuals Roles\n    get:\n      description: |\n        Retrieve a role\n      responses:\n        \"200\":\n          description: Role was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/party-role\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a role\n      tags:\n        - Individuals Roles\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n      - $ref: \"#/components/parameters/roleId\"\n    put:\n      description: |\n        Update a role\n      requestBody:\n        $ref: \"#/components/requestBodies/party-role\"\n      responses:\n        \"200\":\n          description: Role was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/party-role\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update a role\n      tags:\n        - Individuals Roles\n  /licenses:\n    get:\n      description: |\n        Retrieve a list of licenses\n      parameters:\n        - $ref: \"#/components/parameters/apiKey\"\n      responses:\n        \"200\":\n          description: A list of licenses was retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/license\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of licenses\n      tags:\n        - Licenses\n  /organisations:\n    get:\n      description: |\n        Retrieve a list of organisations\n      parameters:\n        - $ref: \"#/components/parameters/apiKey\"\n        - $ref: \"#/components/parameters/registeredIdentifier\"\n        - $ref: \"#/components/parameters/identifier\"\n      responses:\n        \"200\":\n          description: A list of organisations was retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/organisation\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of organisations\n      tags:\n        - Organisations\n    post:\n      description: |\n        Create an organisation\n      parameters:\n        - $ref: \"#/components/parameters/apiKey\"\n      requestBody:\n        $ref: \"#/components/requestBodies/organisation\"\n      responses:\n        \"201\":\n          description: Organisation was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/organisation\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create an organisation\n      tags:\n        - Organisations\n  \"/organisations/{partyId}\":\n    delete:\n      description: |\n        Delete an organisation with the specified identifier\n      responses:\n        \"204\":\n          description: Organisation was deleted\n        \"400\":\n          $ref: \"#/components/responses/FailedPrecondition\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete an organisation\n      tags:\n        - Organisations\n    get:\n      description: |\n        Retrieve an organisation with the specified identifier\n      responses:\n        \"200\":\n          description: Individual was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/organisation\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an organisation\n      tags:\n        - Organisations\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    put:\n      description: |\n        Update an organisation\n      requestBody:\n        $ref: \"#/components/requestBodies/organisation\"\n      responses:\n        \"200\":\n          description: Organisation was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/organisation\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update an organisation\n      tags:\n        - Organisations\n  \"/organisations/{partyId}/addresses\":\n    get:\n      responses:\n        \"200\":\n          description: Addresses were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/address\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of addresses\n      tags:\n        - Organisations Addresses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    post:\n      description: |\n        Create an address\n      requestBody:\n        $ref: \"#/components/requestBodies/address\"\n      responses:\n        \"201\":\n          description: Address was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/address\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create an address\n      tags:\n        - Organisations Addresses\n  \"/organisations/{partyId}/addresses/{addressId}\":\n    delete:\n      description: |\n        Delete an address\n      responses:\n        \"204\":\n          description: Address was deleted\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete an address\n      tags:\n        - Organisations Addresses\n    get:\n      description: |\n        Retrieve an address\n      responses:\n        \"200\":\n          description: Address was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/address\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an address\n      tags:\n        - Organisations Addresses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n      - $ref: \"#/components/parameters/addressId\"\n    put:\n      description: |\n        Update an address\n      requestBody:\n        $ref: \"#/components/requestBodies/address\"\n      responses:\n        \"200\":\n          description: Address was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/address\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update an address\n      tags:\n        - Organisations Addresses\n  \"/organisations/{partyId}/business-names\":\n    get:\n      responses:\n        \"200\":\n          description: Business Names were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/business-name\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of business names\n      tags:\n        - Organisations Business Names\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    post:\n      description: |\n        Create a business name\n      requestBody:\n        $ref: \"#/components/requestBodies/business-name\"\n      responses:\n        \"201\":\n          description: Business Name was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/business-name\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create a business name\n      tags:\n        - Organisations Business Names\n  \"/organisations/{partyId}/business-names/{productId}\":\n    delete:\n      description: |\n        Delete a business name\n      responses:\n        \"204\":\n          description: Address was deleted\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a business name\n      tags:\n        - Organisations Business Names\n    get:\n      description: |\n        Retrieve a business name\n      responses:\n        \"200\":\n          description: Business Name was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/business-name\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a business name\n      tags:\n        - Organisations Business Names\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n      - $ref: \"#/components/parameters/productId\"\n    put:\n      description: |\n        Update a business name\n      requestBody:\n        $ref: \"#/components/requestBodies/business-name\"\n      responses:\n        \"200\":\n          description: Address was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/business-name\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update a business name\n      tags:\n        - Organisations Business Names\n  \"/organisations/{partyId}/electronic-addresses\":\n    get:\n      responses:\n        \"200\":\n          description: Electronic addresses were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/electronic-address\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of electronic addresses\n      tags:\n        - Organisations Electronic Addresses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    post:\n      description: |\n        Create an electronic address\n      requestBody:\n        $ref: \"#/components/requestBodies/electronic-address\"\n      responses:\n        \"201\":\n          description: Electronic Address was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/electronic-address\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create an electronic address\n      tags:\n        - Organisations Electronic Addresses\n  \"/organisations/{partyId}/electronic-addresses/{addressId}\":\n    delete:\n      description: |\n        Delete an electronic address\n      responses:\n        \"204\":\n          description: Electronic Address was deleted\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete an electronic address\n      tags:\n        - Organisations Electronic Addresses\n    get:\n      description: |\n        Retrieve an electronic address\n      responses:\n        \"200\":\n          description: Electronic address was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/electronic-address\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an electronic address\n      tags:\n        - Organisations Electronic Addresses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n      - $ref: \"#/components/parameters/addressId\"\n    put:\n      description: |\n        Update an electronic address\n      requestBody:\n        $ref: \"#/components/requestBodies/electronic-address\"\n      responses:\n        \"200\":\n          description: Electronic Address was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/electronic-address\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update an electronic address\n      tags:\n        - Organisations Electronic Addresses\n  \"/organisations/{partyId}/licenses\":\n    get:\n      responses:\n        \"200\":\n          description: Licenses were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/license\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of licenses\n      tags:\n        - Organisations Licenses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    post:\n      description: |\n        Create a license\n      requestBody:\n        $ref: \"#/components/requestBodies/license\"\n      responses:\n        \"201\":\n          description: License was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/license\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create a license\n      tags:\n        - Organisations Licenses\n  \"/organisations/{partyId}/licenses/{productId}\":\n    delete:\n      description: |\n        Delete a license\n      responses:\n        \"204\":\n          description: License was deleted\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a license\n      tags:\n        - Organisations Licenses\n    get:\n      description: |\n        Retrieve a license\n      responses:\n        \"200\":\n          description: License was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/license\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a license\n      tags:\n        - Organisations Licenses\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n      - $ref: \"#/components/parameters/productId\"\n    put:\n      description: |\n        Update a license\n      requestBody:\n        $ref: \"#/components/requestBodies/license\"\n      responses:\n        \"200\":\n          description: License was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/license\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update a license\n      tags:\n        - Organisations Licenses\n  \"/organisations/{partyId}/roles\":\n    get:\n      responses:\n        \"200\":\n          description: Roles were retrieved successfully\n          headers:\n            Link:\n              description: \u003e\n                Information about pagination is provided in the\n                [Link](https://tools.ietf.org/html/rfc5988#page-6) header.\n\n                For example:\n\n                    Link: \u003chttps://api.abr.ato.gov.au/individuals?page=2\u003e; rel=\"next\",\n                          \u003chttps://api.abr.ato.gov.au/individuals?page=34\u003e; rel=\"last\"\n\n                `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/party-role\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a list of roles\n      tags:\n        - Organisations Roles\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n    post:\n      description: |\n        Create a role\n      requestBody:\n        $ref: \"#/components/requestBodies/party-role\"\n      responses:\n        \"201\":\n          description: Role was created\n          headers:\n            Location:\n              description: \u003e\n                A\n                [Location](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30)\n                header pointing to the location of the new resource.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/party-role\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n      summary: Create a role\n      tags:\n        - Organisations Roles\n  \"/organisations/{partyId}/roles/{roleId}\":\n    delete:\n      description: |\n        Delete a role\n      responses:\n        \"204\":\n          description: Role was deleted\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a role\n      tags:\n        - Organisations Roles\n    get:\n      description: |\n        Retrieve a role\n      responses:\n        \"200\":\n          description: Role was retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/party-role\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a role\n      tags:\n        - Organisations Roles\n    parameters:\n      - $ref: \"#/components/parameters/apiKey\"\n      - $ref: \"#/components/parameters/partyId\"\n      - $ref: \"#/components/parameters/roleId\"\n    put:\n      description: |\n        Update a role\n      requestBody:\n        $ref: \"#/components/requestBodies/party-role\"\n      responses:\n        \"200\":\n          description: Role was updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/party-role\"\n        \"400\":\n          $ref: \"#/components/responses/InvalidArgument\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update a role\n      tags:\n        - Organisations Roles\nx-tagGroups:\n  - name: Individuals Details\n    tags:\n      - Individuals\n      - Individuals Roles\n  - name: Individuals Contact Details\n    tags:\n      - Individuals Addresses\n      - Individuals Electronic Addresses\n  - name: Individuals Products\n    tags:\n      - Individuals Business Names\n      - Individuals Licenses\n  - name: Organisations Details\n    tags:\n      - Organisations\n      - Organisations Roles\n  - name: Organisations Contact Details\n    tags:\n      - Organisations Addresses\n      - Organisations Electronic Addresses\n  - name: Organisations Products\n    tags:\n      - Organisations Business Names\n      - Organisations Licenses\n  - name: Products \u0026 Services\n    tags:\n      - Business Names\n      - Licenses\n  - name: Metadata\n    tags:\n      - Business Name Lifecycle States\n      - Name Directions\n      - Name Prefixes\n      - Name Types\n      - Address Types\n      - Electronic Address Types\n      - Genders\n      - Legal Entity Types\n      - License Lifecycle States\n      - License Types\n      - Registered Identifier Types\n      - Roles\nservers:\n  - description: Production API Server\n    url: //api.abr.ato.gov.au/\n  - description: Sandbox API Server\n    url: //api.sandbox.abr.ato.gov.au/\ncomponents:\n  parameters:\n    addressId:\n      description: The address identifier.\n      in: path\n      name: addressId\n      required: true\n      schema:\n        type: string\n    apiKey:\n      description: The API key.\n      in: header\n      name: apiKey\n      required: true\n      schema:\n        type: string\n    dateOfBirth:\n      description: The individual's date of birth, for example, `1979-01-13` (in [ISO\n        8601](https://en.wikipedia.org/wiki/ISO_8601) format).\n      in: query\n      name: dateOfBirth\n      required: false\n      schema:\n        type: string\n    identifier:\n      description: The identifier, for example, `123456789`.\n      in: query\n      name: identifier\n      required: false\n      schema:\n        type: string\n    partyId:\n      description: The party identifier.\n      in: path\n      name: partyId\n      required: true\n      schema:\n        type: string\n    placeOfBirth:\n      description: The individual's place of birth, for example, `Tamworth`.\n      in: query\n      name: placeOfBirth\n      required: false\n      schema:\n        type: string\n    productId:\n      description: The product identifier.\n      in: path\n      name: productId\n      required: true\n      schema:\n        type: string\n    registeredIdentifier:\n      description: The registered identifier, for example, `ACN` or `ABN`.\n      in: query\n      name: registeredIdentifier\n      required: false\n      schema:\n        type: string\n    roleId:\n      description: The role identifier.\n      in: path\n      name: roleId\n      required: true\n      schema:\n        type: string\n  responses:\n    FailedPrecondition:\n      description: Request can not be executed in the current system state\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/failed-precondition\"\n    InvalidArgument:\n      description: The client specified an invalid argument\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/invalid-argument\"\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/not-found\"\n    PermissionDenied:\n      description: The client does not have sufficient permission\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/permission-denied\"\n    Unauthenticated:\n      description: Request not authenticated due to missing, invalid, or expired token\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/unauthenticated\"\n  requestBodies:\n    license:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/license\"\n      description: License resource\n      required: true\n    individual:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/individual\"\n      description: Individual resource\n      required: true\n    address:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/address\"\n      description: Address resource\n      required: true\n    business-name:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/business-name\"\n      description: Business Name resource\n      required: true\n    electronic-address:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/electronic-address\"\n      description: Electronic Address resource\n      required: true\n    party-role:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/party-role\"\n      description: Role resource\n      required: true\n    organisation:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/organisation\"\n      description: Organisation resource\n      required: true\n  schemas:\n    address:\n      description: The Address resource.\n      properties:\n        city:\n          description: The city.\n          example: Canberra\n          type: string\n        country:\n          description: The country.\n          example: Australia\n          type: string\n        fromDate:\n          description: The date and time the resource became active in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: 1979-01-13T09:05:06+10:00\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/addressId\"\n          description: The resource's unique identifier.\n          readOnly: true\n        line1:\n          description: The address line 1.\n          example: Level 7\n          type: string\n        line2:\n          description: The address line 2.\n          example: 21 Genge Street\n          type: string\n        line3:\n          description: The address line 3.\n          example: \"\"\n          type: string\n        name:\n          description: The address name.\n          example: Kembery Building\n          type: string\n        postalCode:\n          description: The postal code.\n          example: \"2601\"\n          type: string\n        suburb:\n          description: The suburb.\n          example: Civic\n          type: string\n        toDate:\n          description: The date and time the resource became inactive in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: \"\"\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    address-type:\n      allOf:\n        - $ref: \"#/components/schemas/type\"\n        - type: object\n    addressId:\n      allOf:\n        - $ref: \"#/components/schemas/resourceId\"\n        - type: string\n    business-name:\n      description: The Business Name resource.\n      properties:\n        fromDate:\n          description: The date and time the resource became active in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: 1979-01-13T09:05:06+10:00\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/resourceId\"\n          description: The resource's unique identifier.\n          readOnly: true\n        lifecycleState:\n          default: Pending Approval\n          description: The business name's lifecycle state.\n          enum:\n            - Approved\n            - Expired\n            - Issued\n            - Pending Approval\n            - Suspended\n          type: string\n        name:\n          description: The business name.\n          example: XYZ Technology Ventures\n          type: string\n        toDate:\n          description: The date and time the resource became inactive in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: \"\"\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    business-name-lifecycle-state:\n      allOf:\n        - $ref: \"#/components/schemas/type\"\n        - type: object\n    electronic-address:\n      description: The Electronic Address resource.\n      properties:\n        areaCode:\n          description: The area code, for example, \"02\".\n          example: \"02\"\n          type: string\n        countryPrefix:\n          description: The country prefix, for example, \"61\".\n          example: \"61\"\n          type: string\n        electronicAddressType:\n          default: Landline\n          description: The electronic address type.\n          enum:\n            - Email\n            - Fax\n            - Landline\n            - Mobile\n            - Website\n          type: string\n        email:\n          description: The email address, for example, \"robert.ferguson@ato.gov.au\".\n          example: \"\"\n          type: string\n        extension:\n          description: The extension number, for example, \"4453\".\n          example: \"\"\n          type: string\n        fromDate:\n          description: The date and time the resource became active in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: 1979-01-13T09:05:06+10:00\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/addressId\"\n          description: The resource's unique identifier.\n          readOnly: true\n        number:\n          description: The number, for example, \"62164453\".\n          example: \"62164453\"\n          type: string\n        toDate:\n          description: The date and time the resource became inactive in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: \"\"\n          format: date-time\n          readOnly: true\n          type: string\n        url:\n          description: The website address, for example, \"https://ato.gov.au\".\n          example: \"\"\n          type: string\n      type: object\n    electronic-address-type:\n      allOf:\n        - $ref: \"#/components/schemas/type\"\n        - type: object\n    error-details:\n      properties:\n        code:\n          description: The error code.\n          example: NullValue\n          type: string\n        message:\n          description: The error message.\n          example: Family name must not be null\n          type: string\n        target:\n          description: The error target.\n          example: familyName\n          type: string\n      type: object\n    failed-precondition:\n      properties:\n        code:\n          description: The error code.\n          example: \"400\"\n          type: string\n        details:\n          items:\n            $ref: \"#/components/schemas/error-details\"\n          type: array\n        message:\n          description: The error message.\n          example: Request can not be executed in the current system state\n          type: string\n        status:\n          description: The error status.\n          example: FAILED_PRECONDITION\n          type: string\n      type: object\n    gender:\n      description: The Gender resource.\n      properties:\n        gender:\n          description: The gender.\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/resourceId\"\n          description: The resource's unique identifier.\n          readOnly: true\n      type: object\n    individual:\n      description: The Individual resource.\n      properties:\n        addresses:\n          items:\n            $ref: \"#/components/schemas/individual-address\"\n          type: array\n        dateOfBirth:\n          description: The individual's date of birth, for example, `1979-01-13` (in [ISO\n            8601](https://en.wikipedia.org/wiki/ISO_8601) format).\n          example: 1979-01-13\n          format: date\n          type: string\n        electronicAddresses:\n          items:\n            $ref: \"#/components/schemas/electronic-address\"\n          type: array\n        fromDate:\n          description: The date and time the resource became active in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: 1979-01-13T09:05:06+10:00\n          format: date-time\n          readOnly: true\n          type: string\n        gender:\n          default: Male\n          description: The individual's gender.\n          enum:\n            - Female\n            - Male\n            - Not Applicable\n            - Not Known\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/partyId\"\n          description: The party's unique identifier.\n          readOnly: true\n        names:\n          items:\n            $ref: \"#/components/schemas/individual-name\"\n          type: array\n        placeOfBirth:\n          description: The individual's place of birth, for example, `Tamworth`.\n          example: Tamworth\n          type: string\n        toDate:\n          description: The date and time the resource became inactive in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: \"\"\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n        - dateOfBirth\n        - placeOfBirth\n      type: object\n    individual-address:\n      allOf:\n        - $ref: \"#/components/schemas/address\"\n        - properties:\n            addressType:\n              default: Principal Place of Residence\n              description: The address type.\n              enum:\n                - Mailing\n                - Principal Place of Business\n                - Principal Place of Residence\n              type: string\n            fromDate:\n              description: The date and time the resource became active in the format\n                defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n              example: 1979-01-13T09:05:06+10:00\n              format: date-time\n              readOnly: true\n              type: string\n            toDate:\n              description: The date and time the resource became inactive in the format\n                defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n              example: \"\"\n              format: date-time\n              readOnly: true\n              type: string\n          type: object\n    individual-name:\n      description: The Individual Name resource.\n      properties:\n        direction:\n          default: left-to-right\n          description: The direction used to render the individual's name.\n          enum:\n            - left-to-right\n            - right-to-left\n          type: string\n        familyName:\n          description: The individual's family name.\n          example: Ferguson\n          type: string\n        formalSalutation:\n          description: The individual's formal salutation, for example, \"Mr William Smith\".\n          example: Mr Robert Ferguson\n          type: string\n        fromDate:\n          description: The date and time the resource became active in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: 1979-01-13T09:05:06+10:00\n          format: date-time\n          readOnly: true\n          type: string\n        givenName:\n          description: The individual's given name.\n          example: Robert\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/resourceId\"\n          description: The resource's unique identifier.\n          readOnly: true\n        informalSalutation:\n          description: The individual's informal salutation, for example, \"Bill\".\n          example: Rob\n          type: string\n        middleName:\n          description: The individual's middle name.\n          example: James\n          type: string\n        namePrefix:\n          default: Mr\n          description: The individual's name prefix.\n          enum:\n            - Mr\n            - Ms\n          type: string\n        nameSuffix:\n          description: The individual's name suffix, for example, \"Jr\" or \"Sr\".\n          example: \"\"\n          type: string\n        nameType:\n          default: Principal Name\n          description: The name type.\n          enum:\n            - Alias\n            - Principal Name\n          type: string\n        toDate:\n          description: The date and time the resource became inactive in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: \"\"\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    invalid-argument:\n      properties:\n        code:\n          description: The error code.\n          example: \"400\"\n          type: string\n        details:\n          items:\n            $ref: \"#/components/schemas/error-details\"\n          type: array\n        message:\n          description: The error message.\n          example: The client specified an invalid argument\n          type: string\n        status:\n          description: The error status.\n          example: INVALID_ARGUMENT\n          type: string\n      type: object\n    legal-entity-type:\n      allOf:\n        - $ref: \"#/components/schemas/type\"\n        - type: object\n    license:\n      description: The License resource.\n      properties:\n        fromDate:\n          description: The date and time the resource became active in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: 1979-01-13T09:05:06+10:00\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/resourceId\"\n          description: The resource's unique identifier.\n          readOnly: true\n        licenseType:\n          default: Australian Financial Services License\n          description: The license type.\n          enum:\n            - Australian Financial Services License\n            - License 2B\n          type: string\n        lifecycleState:\n          default: Pending Approval\n          description: The business name's lifecycle state.\n          enum:\n            - Approved\n            - Expired\n            - Issued\n            - Pending Approval\n            - Suspended\n          type: string\n        toDate:\n          description: The date and time the resource became inactive in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: \"\"\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    license-lifecycle-state:\n      allOf:\n        - $ref: \"#/components/schemas/type\"\n        - type: object\n    license-type:\n      allOf:\n        - $ref: \"#/components/schemas/type\"\n        - type: object\n    name-direction:\n      allOf:\n        - $ref: \"#/components/schemas/type\"\n        - type: object\n    name-prefix:\n      allOf:\n        - $ref: \"#/components/schemas/type\"\n        - type: object\n    name-type:\n      allOf:\n        - $ref: \"#/components/schemas/type\"\n        - type: object\n    not-found:\n      properties:\n        code:\n          description: The error code.\n          example: \"404\"\n          type: string\n        details:\n          items:\n            $ref: \"#/components/schemas/error-details\"\n          type: array\n        message:\n          description: The error message.\n          example: The specified resource was not found\n          type: string\n        status:\n          description: The error status.\n          example: NOT_FOUND\n          type: string\n      type: object\n    organisation:\n      description: The Organisation resource.\n      properties:\n        addresses:\n          items:\n            $ref: \"#/components/schemas/organisation-address\"\n          type: array\n        electronicAddresses:\n          items:\n            $ref: \"#/components/schemas/electronic-address\"\n          type: array\n        establishmentDate:\n          description: The organisation's establishment date, for example, `1928-03-03` (in\n            [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).\n          example: 1928-03-03\n          format: date\n          type: string\n        fromDate:\n          description: The date and time the resource became active in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: 1979-01-13T09:05:06+10:00\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/partyId\"\n          description: The party's unique identifier.\n          readOnly: true\n        legalEntityType:\n          default: Company\n          description: The organisation's legal entity type.\n          enum:\n            - Company\n            - Partnership\n            - Trust\n            - Joint Venture\n          type: string\n        names:\n          items:\n            $ref: \"#/components/schemas/organisation-name\"\n          type: array\n        registeredIdentifiers:\n          items:\n            $ref: \"#/components/schemas/registered-identifier\"\n          type: array\n        toDate:\n          description: The date and time the resource became inactive in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: \"\"\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n        - legalEntityType\n        - establishmentDate\n      type: object\n    organisation-address:\n      allOf:\n        - $ref: \"#/components/schemas/address\"\n        - properties:\n            addressType:\n              default: Principal Place of Business\n              description: The address type.\n              enum:\n                - Mailing\n                - Principal Place of Business\n              type: string\n            fromDate:\n              description: The date and time the resource became active in the format\n                defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n              example: 1979-01-13T09:05:06+10:00\n              format: date-time\n              readOnly: true\n              type: string\n            toDate:\n              description: The date and time the resource became inactive in the format\n                defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n              example: \"\"\n              format: date-time\n              readOnly: true\n              type: string\n          type: object\n    organisation-name:\n      description: The Organisation Name resource.\n      properties:\n        fromDate:\n          description: The date and time the resource became active in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: 1928-03-03T09:05:06+10:00\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/resourceId\"\n          description: The resource's unique identifier.\n          readOnly: true\n        name:\n          description: The organisation's name.\n          example: 321 Technology Ventures\n          type: string\n        toDate:\n          description: The date and time the resource became inactive in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: \"\"\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    party-role:\n      description: The Party Role resource.\n      properties:\n        fromDate:\n          description: The date and time the resource became active in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: 2016-01-13T09:05:06+10:00\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/roleId\"\n          description: The resource's unique identifier.\n          readOnly: true\n        partyRoleType:\n          default: Employee\n          description: The party's role type.\n          enum:\n            - Director\n            - Employee\n            - Member\n            - Partner\n            - Trustee\n          type: string\n        relatedPartyId:\n          allOf:\n            - $ref: \"#/components/schemas/partyId\"\n          description: The related party's unique identifier.\n        relatedPartyRoleType:\n          default: Employer\n          description: The related party's role type.\n          enum:\n            - Association\n            - Company\n            - Employer\n            - Organisation\n            - Partnership\n            - Trust\n          type: string\n        relationshipType:\n          default: Employment\n          description: The relationship type.\n          enum:\n            - Directorship\n            - Employment\n            - Membership\n            - Partnership\n            - Trusteeship\n          type: string\n        toDate:\n          description: The date and time the resource became inactive in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: \"\"\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n        - relatedPartyId\n        - relationshipType\n      type: object\n    partyId:\n      allOf:\n        - $ref: \"#/components/schemas/resourceId\"\n        - type: string\n    permission-denied:\n      properties:\n        code:\n          description: The error code.\n          example: \"403\"\n          type: string\n        details:\n          items:\n            $ref: \"#/components/schemas/error-details\"\n          type: array\n        message:\n          description: The error message.\n          example: The client does not have sufficient permission\n          type: string\n        status:\n          description: The error status.\n          example: PERMISSION_DENIED\n          type: string\n      type: object\n    registered-identifier:\n      description: The Registered Identifier resource.\n      properties:\n        fromDate:\n          description: The date and time the resource became active in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: 1979-01-13T09:05:06+10:00\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/resourceId\"\n          description: The resource's unique identifier.\n          readOnly: true\n        identifier:\n          description: The registered identifier.\n          example: \"123456789\"\n          type: string\n        identifierType:\n          default: ACN\n          description: The registered identifier type.\n          enum:\n            - ACN\n            - ABN\n          type: string\n        toDate:\n          description: The date and time the resource became inactive in the format defined\n            by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n          example: \"\"\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    registered-identifier-type:\n      allOf:\n        - $ref: \"#/components/schemas/type\"\n        - type: object\n    resourceId:\n      description: The resource ID. Defaults to UUID v4\n      example: 123e4567-e89b-12d3-a456-426655440000\n      maxLength: 36\n      type: string\n    role:\n      description: The Role Type resource.\n      properties:\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/resourceId\"\n          description: The resource's unique identifier.\n          readOnly: true\n        reciprocalRole:\n          description: The reciprocal role name.\n          type: string\n        reciprocalRoleDescription:\n          description: The reciprocal role description.\n          type: string\n        relationship:\n          description: The relationship name.\n          type: string\n        role:\n          description: The role name.\n          type: string\n        roleDescription:\n          description: The role description.\n          type: string\n      type: object\n    roleId:\n      allOf:\n        - $ref: \"#/components/schemas/resourceId\"\n        - type: string\n    type:\n      description: The Type resource.\n      properties:\n        description:\n          description: The scheme value description.\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/resourceId\"\n          description: The resource's unique identifier.\n          readOnly: true\n        name:\n          description: The scheme value.\n          type: string\n      type: object\n    unauthenticated:\n      properties:\n        code:\n          description: The error code.\n          example: \"401\"\n          type: string\n        details:\n          $ref: \"#/components/schemas/error-details\"\n        message:\n          description: The error message.\n          example: Request not authenticated due to missing, invalid, or expired token\n          type: string\n        status:\n          description: The error status.\n          example: UNAUTHENTICATED\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/ato.gov.au-0.0.6-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/ato.gov.au-0.0.6-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: reference type \"#/components/schemas/license-lifecycle-state\" name conflict: \"LicenseLifecycleState\""
}