{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-cognitiveservices-ContentModerator-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-cognitiveservices-ContentModerator-1.0-swagger.yaml",
			"byteSize": 106769,
			"content": "openapi: 3.0.0\ninfo:\n  description: \"You use the API to scan your content as it is generated. Content Moderator\n    then processes your content and sends the results along with relevant\n    information either back to your systems or to the built-in review tool. You\n    can use this information to take decisions e.g. take it down, send to human\n    judge, etc.\\r\n\n    \\r\n\n    When using the API, images need to have a minimum of 128 pixels and a\n    maximum file size of 4MB. \\r\n\n    Text can be at most 1024 characters long. \\r\n\n    If the content passed to the text API or the image API exceeds the size\n    limits, the API will return an error code that informs about the issue.\"\n  title: Content Moderator Client\n  version: \"1.0\"\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/ContentModerator/stable/v1.0/ContentModerator.json\n      version: \"2.0\"\n  x-providerName: azure.com\n  x-serviceName: cognitiveservices-ContentModerator\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - apim_key: []\npaths:\n  /contentmoderator/lists/v1.0/imagelists:\n    get:\n      description: Gets all the Image Lists.\n      operationId: ListManagementImageLists_GetAllImageLists\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageLists\"\n              examples:\n                Get All Imagelists request:\n                  $ref: \"#/components/examples/Get_All_Imagelists_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImageLists\n    post:\n      description: Creates an image list.\n      operationId: ListManagementImageLists_Create\n      parameters:\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Create Imagelist request:\n              value: application/json\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImageLists_CreateBody\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageList\"\n              examples:\n                Create Imagelist request:\n                  $ref: \"#/components/examples/Create_Imagelist_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImageLists\n  \"/contentmoderator/lists/v1.0/imagelists/{listId}\":\n    delete:\n      description: Deletes image list with the list Id equal to list Id passed.\n      operationId: ListManagementImageLists_Delete\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImageLists\n    get:\n      description: Returns the details of the image list with list Id equal to list Id\n        passed.\n      operationId: ListManagementImageLists_GetDetails\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageList\"\n              examples:\n                Get List Id Details request:\n                  $ref: \"#/components/examples/Get_List_Id_Details_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImageLists\n    put:\n      description: Updates an image list with list Id equal to list Id passed.\n      operationId: ListManagementImageLists_Update\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Update Imagelist request:\n              value: application/json\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImageLists_CreateBody\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageList\"\n              examples:\n                Update Imagelist request:\n                  $ref: \"#/components/examples/Update_Imagelist_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImageLists\n  \"/contentmoderator/lists/v1.0/imagelists/{listId}/RefreshIndex\":\n    post:\n      description: Refreshes the index of the list with list Id equal to list Id passed.\n      operationId: ListManagementImageLists_RefreshIndex\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefreshIndex\"\n              examples:\n                Refresh Image Index request:\n                  $ref: \"#/components/examples/Refresh_Image_Index_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImageLists\n  \"/contentmoderator/lists/v1.0/imagelists/{listId}/images\":\n    delete:\n      description: Deletes all images from the list with list Id equal to list Id passed.\n      operationId: ListManagementImage_DeleteAllImages\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImage\n    get:\n      description: Gets all image Ids from the list with list Id equal to list Id passed.\n      operationId: ListManagementImage_GetAllImageIds\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageIds\"\n              examples:\n                Get All Image Ids request:\n                  $ref: \"#/components/examples/Get_All_Image_Ids_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImage\n    post:\n      description: Add an image to the list with list Id equal to list Id passed.\n      operationId: ListManagementImage_AddImage\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/tag\"\n        - $ref: \"#/components/parameters/label\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Image\"\n              examples:\n                Add Image request:\n                  $ref: \"#/components/examples/Add_Image_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImage\n  \"/contentmoderator/lists/v1.0/imagelists/{listId}/images/{ImageId}\":\n    delete:\n      description: Deletes an image from the list with list Id and image Id passed.\n      operationId: ListManagementImage_DeleteImage\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/ImageId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImage\n  /contentmoderator/lists/v1.0/termlists:\n    get:\n      description: gets all the Term Lists\n      operationId: ListManagementTermLists_GetAllTermLists\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TermLists\"\n              examples:\n                Get All Termlists request:\n                  $ref: \"#/components/examples/Get_All_Termlists_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementTermLists\n    post:\n      description: Creates a Term List\n      operationId: ListManagementTermLists_Create\n      parameters:\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Create Termlist request:\n              value: application/json\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImageLists_CreateBody\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TermList\"\n              examples:\n                Create Termlist request:\n                  $ref: \"#/components/examples/Create_Termlist_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementTermLists\n  \"/contentmoderator/lists/v1.0/termlists/{listId}\":\n    delete:\n      description: Deletes term list with the list Id equal to list Id passed.\n      operationId: ListManagementTermLists_Delete\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementTermLists\n    get:\n      description: Returns list Id details of the term list with list Id equal to list Id\n        passed.\n      operationId: ListManagementTermLists_GetDetails\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TermList\"\n              examples:\n                Get Term ListId Details request:\n                  $ref: \"#/components/examples/Get_Term_ListId_Details_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementTermLists\n    put:\n      description: Updates an Term List.\n      operationId: ListManagementTermLists_Update\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Update Termlist request:\n              value: application/json\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImageLists_CreateBody\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TermList\"\n              examples:\n                Update Termlist request:\n                  $ref: \"#/components/examples/Update_Termlist_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementTermLists\n  \"/contentmoderator/lists/v1.0/termlists/{listId}/RefreshIndex\":\n    post:\n      description: Refreshes the index of the list with list Id equal to list ID passed.\n      operationId: ListManagementTermLists_RefreshIndex\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/language\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefreshIndex\"\n              examples:\n                Refresh Term Index request:\n                  $ref: \"#/components/examples/Refresh_Term_Index_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementTermLists\n  \"/contentmoderator/lists/v1.0/termlists/{listId}/terms\":\n    delete:\n      description: Deletes all terms from the list with list Id equal to the list Id passed.\n      operationId: ListManagementTerm_DeleteAllTerms\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/language\"\n      responses:\n        \"204\":\n          description: No Content\n          content:\n            application/json:\n              schema:\n                type: string\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementTerm\n    get:\n      description: Gets all terms from the list with list Id equal to the list Id passed.\n      operationId: ListManagementTerm_GetAllTerms\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/language\"\n        - description: The pagination start index.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: The max limit.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Terms\"\n              examples:\n                Get All Terms request:\n                  $ref: \"#/components/examples/Get_All_Terms_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementTerm\n  \"/contentmoderator/lists/v1.0/termlists/{listId}/terms/{term}\":\n    delete:\n      description: Deletes a term from the list with list Id equal to the list Id passed.\n      operationId: ListManagementTerm_DeleteTerm\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/term\"\n        - $ref: \"#/components/parameters/language\"\n      responses:\n        \"204\":\n          description: No Content\n          content:\n            application/json:\n              schema:\n                type: string\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementTerm\n    post:\n      description: Add a term to the term list with list Id equal to list Id passed.\n      operationId: ListManagementTerm_AddTerm\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/term\"\n        - $ref: \"#/components/parameters/language\"\n      responses:\n        \"201\":\n          description: Created\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementTerm\n  /contentmoderator/moderate/v1.0/ProcessImage/Evaluate:\n    post:\n      description: Returns probabilities of the image containing racy or adult content.\n      operationId: ImageModeration_Evaluate\n      parameters:\n        - $ref: \"#/components/parameters/CacheImage\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Evaluate\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessImage/FindFaces:\n    post:\n      description: Returns the list of faces found.\n      operationId: ImageModeration_FindFaces\n      parameters:\n        - $ref: \"#/components/parameters/CacheImage\"\n      responses:\n        \"200\":\n          description: The list of faces found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FoundFaces\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessImage/Match:\n    post:\n      description: \"Fuzzily match an image against one of your custom Image Lists. You can\n        create and manage your custom image lists using \u003ca\n        href=\\\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b127037\\\n        41568569abe\\\"\u003ethis\u003c/a\u003e API. \\r\n\n        \\r\n\n        Returns ID and tags of matching image.\u003cbr/\u003e\\r\n\n        \u003cbr/\u003e\\r\n\n        Note: Refresh Index must be run on the corresponding Image List\n        before additions and removals are reflected in the response.\"\n      operationId: ImageModeration_Match\n      parameters:\n        - $ref: \"#/components/parameters/listIdQueryParameter\"\n        - $ref: \"#/components/parameters/CacheImage\"\n      responses:\n        \"200\":\n          description: \"Supported values for tags are:\\r\n\n            \u003cul\u003e\\r\n\n            \u003cli\u003e101: Nudity\u003c/li\u003e\\r\n\n            \u003cli\u003e102: Sexual Content\u003c/li\u003e\\r\n\n            \u003cli\u003e201: Alcohol\u003c/li\u003e\\r\n\n            \u003cli\u003e202: Tobacco\u003c/li\u003e\\r\n\n            \u003cli\u003e203: Drugs\u003c/li\u003e\\r\n\n            \u003cli\u003e301: Child Exploitation\u003c/li\u003e\\r\n\n            \u003cli\u003e401: Violence\u003c/li\u003e\\r\n\n            \u003cli\u003e402: Weapons\u003c/li\u003e\\r\n\n            \u003cli\u003e403: Gore\u003c/li\u003e\\r\n\n            \u003cli\u003e501: Profanity\u003c/li\u003e\\r\n\n            \u003cli\u003e502: Vulgarity\u003c/li\u003e\\r\n\n            \u003c/ul\u003e.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MatchResponse\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessImage/OCR:\n    post:\n      description: Returns any text found in the image for the language specified. If no\n        language is specified in input then the detection defaults to English.\n      operationId: ImageModeration_OCR\n      parameters:\n        - $ref: \"#/components/parameters/language\"\n        - $ref: \"#/components/parameters/CacheImage\"\n        - $ref: \"#/components/parameters/enhanced\"\n      responses:\n        \"200\":\n          description: The text found and list of candidate text details.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OCR\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessText/DetectLanguage:\n    post:\n      description: This operation will detect the language of given input content. Returns\n        the \u003ca href=\"http://www-01.sil.org/iso639-3/codes.asp\"\u003eISO 639-3\n        code\u003c/a\u003e for the predominant language comprising the submitted text.\n        Over 110 languages supported.\n      operationId: TextModeration_DetectLanguage\n      parameters:\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          x-ms-client-name: textContentType\n          schema:\n            type: string\n            enum:\n              - text/plain\n              - text/html\n              - text/xml\n              - text/markdown\n          examples:\n            Detect Language request:\n              value: text/plain\n      requestBody:\n        $ref: \"#/components/requestBodies/TextModeration_DetectLanguageTextContent\"\n      responses:\n        \"200\":\n          description: The detected language result.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DetectedLanguage\"\n              examples:\n                Detect Language request:\n                  $ref: \"#/components/examples/Detect_Language_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - TextModeration\n  /contentmoderator/moderate/v1.0/ProcessText/Screen/:\n    post:\n      description: Detects profanity in more than 100 languages and match against custom\n        and shared blacklists.\n      operationId: TextModeration_ScreenText\n      parameters:\n        - $ref: \"#/components/parameters/textLanguage\"\n        - $ref: \"#/components/parameters/autocorrect\"\n        - $ref: \"#/components/parameters/PII\"\n        - $ref: \"#/components/parameters/listIdQueryParameter\"\n        - $ref: \"#/components/parameters/classify\"\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          x-ms-client-name: textContentType\n          schema:\n            type: string\n            enum:\n              - text/plain\n              - text/html\n              - text/xml\n              - text/markdown\n          examples:\n            Detect Language request:\n              value: text/plain\n      requestBody:\n        $ref: \"#/components/requestBodies/TextModeration_DetectLanguageTextContent\"\n      responses:\n        \"200\":\n          description: Status 200\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Screen\"\n              examples:\n                Detect Language request:\n                  $ref: \"#/components/examples/Detect_Language_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      summary: Detect profanity and match against custom and shared blacklists\n      tags:\n        - TextModeration\n  \"/contentmoderator/review/v1.0/teams/{teamName}/jobs\":\n    post:\n      description: \"A job Id will be returned for the content posted on this endpoint. \\r\n\n        \\r\n\n        Once the content is evaluated against the Workflow provided the\n        review will be created or ignored based on the workflow expression.\\r\n\n        \\r\n\n        \u003ch3\u003eCallBack Schemas \u003c/h3\u003e\\r\n\n        \\r\n\n        \u003cp\u003e\\r\n\n        \u003ch4\u003eJob Completion CallBack Sample\u003c/h4\u003e\u003cbr/\u003e\\r\n\n        \\r\n\n        {\u003cbr/\u003e\\r\n\n        \\  \\\"JobId\\\": \\\"\u003cJob Id\u003e,\u003cbr/\u003e\\r\n\n        \\  \\\"ReviewId\\\": \\\"\u003cReview Id, if the Job resulted in a Review\n        to be created\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"WorkFlowId\\\": \\\"default\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"Status\\\": \\\"\u003cThis will be one of Complete, InProgress,\n        Error\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ContentType\\\": \\\"Image\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ContentId\\\": \\\"\u003cThis is the ContentId that was specified on\n        input\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"CallBackType\\\": \\\"Job\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"Metadata\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"adultscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"racyscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  }\u003cbr/\u003e\\r\n\n        }\u003cbr/\u003e\\r\n\n        \\r\n\n        \u003c/p\u003e\\r\n\n        \u003cp\u003e\\r\n\n        \u003ch4\u003eReview Completion CallBack Sample\u003c/h4\u003e\u003cbr/\u003e\\r\n\n        \\r\n\n        {\\r\n\n        \\  \\\"ReviewId\\\": \\\"\u003cReview Id\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ModifiedOn\\\": \\\"2016-10-11T22:36:32.9934851Z\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ModifiedBy\\\": \\\"\u003cName of the Reviewer\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"CallBackType\\\": \\\"Review\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ContentId\\\": \\\"\u003cThe ContentId that was specified\n        input\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"Metadata\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"adultscore\\\": \\\"0.xxx\\\",\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"racyscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  },\u003cbr/\u003e\\r\n\n        \\  \\\"ReviewerResultTags\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  }\u003cbr/\u003e\\r\n\n        }\u003cbr/\u003e\\r\n\n        \\r\n\n        \u003c/p\u003e.\"\n      operationId: Reviews_CreateJob\n      parameters:\n        - $ref: \"#/components/parameters/teamName\"\n        - $ref: \"#/components/parameters/ContentType\"\n        - $ref: \"#/components/parameters/ContentId\"\n        - $ref: \"#/components/parameters/WorkflowName\"\n        - $ref: \"#/components/parameters/CallBackEndpoint\"\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          x-ms-client-name: jobContentType\n          schema:\n            type: string\n            enum:\n              - application/json\n              - image/jpeg\n          examples:\n            Create Job request:\n              value: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ContentValue:\n                  description: Content to evaluate for a job.\n                  type: string\n              required:\n                - ContentValue\n              type: object\n          image/jpeg:\n            schema:\n              properties:\n                ContentValue:\n                  description: Content to evaluate for a job.\n                  type: string\n              required:\n                - ContentValue\n              type: object\n        description: Content to evaluate.\n        required: true\n        x-examples:\n          application/json: |-\n            {\n              \"ContentValue\": \"\u003cReplace with you Image Url\u003e\"\n            }\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobId\"\n              examples:\n                Create Job request:\n                  $ref: \"#/components/examples/Create_Job_request\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/JobId\"\n              examples:\n                Create Job request:\n                  $ref: \"#/components/examples/Create_Job_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\n  \"/contentmoderator/review/v1.0/teams/{teamName}/jobs/{JobId}\":\n    get:\n      description: Get the Job Details for a Job Id.\n      operationId: Reviews_GetJobDetails\n      parameters:\n        - description: Your Team Name.\n          in: path\n          name: teamName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get Job Details request:\n              value: ModeratorTeam\n        - description: Id of the job.\n          in: path\n          name: JobId\n          required: true\n          schema:\n            type: string\n          examples:\n            Get Job Details request:\n              value: 201709i96f295aa5748101436064c42ddf\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Job\"\n              examples:\n                Get Job Details request:\n                  $ref: \"#/components/examples/Get_Job_Details_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\n  \"/contentmoderator/review/v1.0/teams/{teamName}/reviews\":\n    post:\n      description: \"The reviews created would show up for Reviewers on your team. As\n        Reviewers complete reviewing, results of the Review would be POSTED\n        (i.e. HTTP POST) on the specified CallBackEndpoint.\\r\n\n        \\r\n\n        \u003ch3\u003eCallBack Schemas \u003c/h3\u003e\\r\n\n        \u003ch4\u003eReview Completion CallBack Sample\u003c/h4\u003e\\r\n\n        \u003cp\u003e\\r\n\n        {\u003cbr/\u003e\\r\n\n        \\  \\\"ReviewId\\\": \\\"\u003cReview Id\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ModifiedOn\\\": \\\"2016-10-11T22:36:32.9934851Z\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ModifiedBy\\\": \\\"\u003cName of the Reviewer\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"CallBackType\\\": \\\"Review\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ContentId\\\": \\\"\u003cThe ContentId that was specified\n        input\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"Metadata\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"adultscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"racyscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  },\u003cbr/\u003e\\r\n\n        \\  \\\"ReviewerResultTags\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  }\u003cbr/\u003e\\r\n\n        }\u003cbr/\u003e\\r\n\n        \\r\n\n        \u003c/p\u003e.\"\n      operationId: Reviews_CreateReviews\n      parameters:\n        - description: The content type.\n          in: header\n          name: UrlContentType\n          required: true\n          schema:\n            type: string\n          examples:\n            Create Review request:\n              value: application/json\n        - $ref: \"#/components/parameters/teamName\"\n        - $ref: \"#/components/parameters/subTeam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: Schema of the body.\n              items:\n                description: Schema items of the body.\n                properties:\n                  CallbackEndpoint:\n                    description: Optional CallbackEndpoint.\n                    type: string\n                  Content:\n                    description: Content to review.\n                    type: string\n                  ContentId:\n                    description: Content Identifier.\n                    type: string\n                  Metadata:\n                    description: Optional metadata details.\n                    items:\n                      properties:\n                        Key:\n                          description: Your key parameter.\n                          type: string\n                        Value:\n                          description: Your value parameter.\n                          type: string\n                      required:\n                        - Key\n                        - Value\n                      type: object\n                    type: array\n                  Type:\n                    description: Type of the content.\n                    enum:\n                      - Image\n                      - Text\n                    type: string\n                required:\n                  - Content\n                  - ContentId\n                  - Type\n                type: object\n              type: array\n        description: Body for create reviews API\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReviewList\"\n              examples:\n                Create Review request:\n                  $ref: \"#/components/examples/Create_Review_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\n  \"/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}\":\n    get:\n      description: Returns review details for the review Id passed.\n      operationId: Reviews_GetReview\n      parameters:\n        - description: Your Team Name.\n          in: path\n          name: teamName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get Review request:\n              value: ModeratorTeam\n        - description: Id of the review.\n          in: path\n          name: reviewId\n          required: true\n          schema:\n            type: string\n          examples:\n            Get Review request:\n              value: 201709i96f295aa5748101436064c42ddf\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Review\"\n              examples:\n                Get Review request:\n                  $ref: \"#/components/examples/Get_Review_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\n  \"/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames\":\n    get:\n      description: \"The reviews created would show up for Reviewers on your team. As\n        Reviewers complete reviewing, results of the Review would be POSTED\n        (i.e. HTTP POST) on the specified CallBackEndpoint.\\r\n\n        \\r\n\n        \u003ch3\u003eCallBack Schemas \u003c/h3\u003e\\r\n\n        \u003ch4\u003eReview Completion CallBack Sample\u003c/h4\u003e\\r\n\n        \u003cp\u003e\\r\n\n        {\u003cbr/\u003e\\r\n\n        \\  \\\"ReviewId\\\": \\\"\u003cReview Id\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ModifiedOn\\\": \\\"2016-10-11T22:36:32.9934851Z\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ModifiedBy\\\": \\\"\u003cName of the Reviewer\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"CallBackType\\\": \\\"Review\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ContentId\\\": \\\"\u003cThe ContentId that was specified\n        input\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"Metadata\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"adultscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"racyscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  },\u003cbr/\u003e\\r\n\n        \\  \\\"ReviewerResultTags\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  }\u003cbr/\u003e\\r\n\n        }\u003cbr/\u003e\\r\n\n        \\r\n\n        \u003c/p\u003e.\"\n      operationId: Reviews_GetVideoFrames\n      parameters:\n        - $ref: \"#/components/parameters/teamName\"\n        - $ref: \"#/components/parameters/reviewId\"\n        - description: Time stamp of the frame from where you want to start fetching the\n            frames.\n          in: query\n          name: startSeed\n          schema:\n            type: integer\n        - description: Number of frames to fetch.\n          in: query\n          name: noOfRecords\n          schema:\n            type: integer\n        - description: Get frames filtered by tags.\n          in: query\n          name: filter\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Frames\"\n              examples:\n                Get Frames Request:\n                  $ref: \"#/components/examples/Get_Frames_Request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\n    post:\n      description: \"The reviews created would show up for Reviewers on your team. As\n        Reviewers complete reviewing, results of the Review would be POSTED\n        (i.e. HTTP POST) on the specified CallBackEndpoint.\\r\n\n        \\r\n\n        \u003ch3\u003eCallBack Schemas \u003c/h3\u003e\\r\n\n        \u003ch4\u003eReview Completion CallBack Sample\u003c/h4\u003e\\r\n\n        \u003cp\u003e\\r\n\n        {\u003cbr/\u003e\\r\n\n        \\  \\\"ReviewId\\\": \\\"\u003cReview Id\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ModifiedOn\\\": \\\"2016-10-11T22:36:32.9934851Z\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ModifiedBy\\\": \\\"\u003cName of the Reviewer\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"CallBackType\\\": \\\"Review\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ContentId\\\": \\\"\u003cThe ContentId that was specified\n        input\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"Metadata\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"adultscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"racyscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  },\u003cbr/\u003e\\r\n\n        \\  \\\"ReviewerResultTags\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  }\u003cbr/\u003e\\r\n\n        }\u003cbr/\u003e\\r\n\n        \\r\n\n        \u003c/p\u003e.\"\n      operationId: Reviews_AddVideoFrame\n      parameters:\n        - $ref: \"#/components/parameters/teamName\"\n        - description: Id of the review.\n          in: path\n          name: reviewId\n          required: true\n          schema:\n            type: string\n        - description: Timescale of the video you are adding frames to.\n          in: query\n          name: timescale\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\n  \"/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/publish\":\n    post:\n      description: Publish video review to make it available for review.\n      operationId: Reviews_PublishVideoReview\n      parameters:\n        - $ref: \"#/components/parameters/teamName\"\n        - $ref: \"#/components/parameters/reviewId\"\n      responses:\n        \"204\":\n          description: No Content\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\n  \"/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/transcript\":\n    put:\n      description: This API adds a transcript file (text version of all the words spoken in\n        a video) to a video review. The file should be a valid WebVTT format.\n      operationId: Reviews_AddVideoTranscript\n      parameters:\n        - $ref: \"#/components/parameters/teamName\"\n        - $ref: \"#/components/parameters/reviewId\"\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          x-ms-client-name: ContentType\n          schema:\n            type: string\n            enum:\n              - text/plain\n          examples:\n            Add transcript request:\n              value: text/plain\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              format: file\n              type: object\n        description: Transcript file of the video.\n        required: true\n        x-ms-parameter-location: method\n      responses:\n        \"204\":\n          description: No Content\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\n  \"/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/transcriptmoderationresult\":\n    put:\n      description: This API adds a transcript screen text result file for a video review.\n        Transcript screen text result file is a result of Screen Text API . In\n        order to generate transcript screen text result file , a transcript file\n        has to be screened for profanity using Screen Text API.\n      operationId: Reviews_AddVideoTranscriptModerationResult\n      parameters:\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          x-ms-client-name: ContentType\n          schema:\n            type: string\n          examples:\n            Transcript moderation result request:\n              value: application/json\n        - $ref: \"#/components/parameters/teamName\"\n        - $ref: \"#/components/parameters/reviewId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: Schema of the body.\n              items:\n                description: Schema items of the body.\n                properties:\n                  Terms:\n                    description: Optional metadata details.\n                    items:\n                      properties:\n                        Index:\n                          description: Index of the word\n                          type: integer\n                        Term:\n                          description: Detected word.\n                          type: string\n                      required:\n                        - Index\n                        - Term\n                      type: object\n                    type: array\n                  Timestamp:\n                    description: Timestamp of the image.\n                    type: string\n                required:\n                  - Timestamp\n                  - Terms\n                type: object\n              type: array\n        description: Body for add video transcript moderation result API\n        required: true\n        x-ms-parameter-location: method\n      responses:\n        \"204\":\n          description: No Content\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\nx-ms-paths:\n  \"/contentmoderator/lists/v1.0/imagelists/{listId}/images?overload=stream\":\n    post:\n      description: Add an image to the list with list Id equal to list Id passed.\n      operationId: ListManagementImage_AddImageFileInput\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/tag\"\n        - $ref: \"#/components/parameters/label\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImage_AddImageFileInputImag\\\n          estream\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Image\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImage\n  \"/contentmoderator/lists/v1.0/imagelists/{listId}/images?overload=url\":\n    post:\n      description: Add an image to the list with list Id equal to list Id passed.\n      operationId: ListManagementImage_AddImageUrlInput\n      parameters:\n        - $ref: \"#/components/parameters/listId\"\n        - $ref: \"#/components/parameters/tag\"\n        - $ref: \"#/components/parameters/label\"\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Add Image request:\n              value: application/json\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImage_AddImageUrlInputImage\\\n          url\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Image\"\n              examples:\n                Add Image request:\n                  $ref: \"#/components/examples/Add_Image_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ListManagementImage\n  /contentmoderator/moderate/v1.0/ProcessImage/Evaluate?overload=stream:\n    post:\n      description: Returns probabilities of the image containing racy or adult content.\n      operationId: ImageModeration_EvaluateFileInput\n      parameters:\n        - $ref: \"#/components/parameters/CacheImage\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImage_AddImageFileInputImag\\\n          estream\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Evaluate\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessImage/Evaluate?overload=url:\n    post:\n      description: Returns probabilities of the image containing racy or adult content.\n      operationId: ImageModeration_EvaluateUrlInput\n      parameters:\n        - $ref: \"#/components/parameters/CacheImage\"\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Evaluate Image request:\n              value: application/json\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImage_AddImageUrlInputImage\\\n          url\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Evaluate\"\n              examples:\n                Evaluate Image request:\n                  $ref: \"#/components/examples/Evaluate_Image_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessImage/FindFaces?overload=stream:\n    post:\n      description: Returns the list of faces found.\n      operationId: ImageModeration_FindFacesFileInput\n      parameters:\n        - $ref: \"#/components/parameters/CacheImage\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImage_AddImageFileInputImag\\\n          estream\"\n      responses:\n        \"200\":\n          description: The list of faces found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FoundFaces\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessImage/FindFaces?overload=url:\n    post:\n      description: Returns the list of faces found.\n      operationId: ImageModeration_FindFacesUrlInput\n      parameters:\n        - $ref: \"#/components/parameters/CacheImage\"\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Find Faces request:\n              value: application/json\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImage_AddImageUrlInputImage\\\n          url\"\n      responses:\n        \"200\":\n          description: The list of faces found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FoundFaces\"\n              examples:\n                Find Faces request:\n                  $ref: \"#/components/examples/Find_Faces_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessImage/Match?overload=stream:\n    post:\n      description: \"Fuzzily match an image against one of your custom Image Lists. You can\n        create and manage your custom image lists using \u003ca\n        href=\\\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b127037\\\n        41568569abe\\\"\u003ethis\u003c/a\u003e API. \\r\n\n        \\r\n\n        Returns ID and tags of matching image.\u003cbr/\u003e\\r\n\n        \u003cbr/\u003e\\r\n\n        Note: Refresh Index must be run on the corresponding Image List\n        before additions and removals are reflected in the response.\"\n      operationId: ImageModeration_MatchFileInput\n      parameters:\n        - $ref: \"#/components/parameters/listIdQueryParameter\"\n        - $ref: \"#/components/parameters/CacheImage\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImage_AddImageFileInputImag\\\n          estream\"\n      responses:\n        \"200\":\n          description: \"Supported values for tags are:\\r\n\n            \u003cul\u003e\\r\n\n            \u003cli\u003e101: Nudity\u003c/li\u003e\\r\n\n            \u003cli\u003e102: Sexual Content\u003c/li\u003e\\r\n\n            \u003cli\u003e201: Alcohol\u003c/li\u003e\\r\n\n            \u003cli\u003e202: Tobacco\u003c/li\u003e\\r\n\n            \u003cli\u003e203: Drugs\u003c/li\u003e\\r\n\n            \u003cli\u003e301: Child Exploitation\u003c/li\u003e\\r\n\n            \u003cli\u003e401: Violence\u003c/li\u003e\\r\n\n            \u003cli\u003e402: Weapons\u003c/li\u003e\\r\n\n            \u003cli\u003e403: Gore\u003c/li\u003e\\r\n\n            \u003cli\u003e501: Profanity\u003c/li\u003e\\r\n\n            \u003cli\u003e502: Vulgarity\u003c/li\u003e\\r\n\n            \u003c/ul\u003e.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MatchResponse\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessImage/Match?overload=url:\n    post:\n      description: \"Fuzzily match an image against one of your custom Image Lists. You can\n        create and manage your custom image lists using \u003ca\n        href=\\\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b127037\\\n        41568569abe\\\"\u003ethis\u003c/a\u003e API. \\r\n\n        \\r\n\n        Returns ID and tags of matching image.\u003cbr/\u003e\\r\n\n        \u003cbr/\u003e\\r\n\n        Note: Refresh Index must be run on the corresponding Image List\n        before additions and removals are reflected in the response.\"\n      operationId: ImageModeration_MatchUrlInput\n      parameters:\n        - $ref: \"#/components/parameters/listIdQueryParameter\"\n        - $ref: \"#/components/parameters/CacheImage\"\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Match Image request:\n              value: application/json\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImage_AddImageUrlInputImage\\\n          url\"\n      responses:\n        \"200\":\n          description: \"Supported values for tags are:\\r\n\n            \u003cul\u003e\\r\n\n            \u003cli\u003e101: Nudity\u003c/li\u003e\\r\n\n            \u003cli\u003e102: Sexual Content\u003c/li\u003e\\r\n\n            \u003cli\u003e201: Alcohol\u003c/li\u003e\\r\n\n            \u003cli\u003e202: Tobacco\u003c/li\u003e\\r\n\n            \u003cli\u003e203: Drugs\u003c/li\u003e\\r\n\n            \u003cli\u003e301: Child Exploitation\u003c/li\u003e\\r\n\n            \u003cli\u003e401: Violence\u003c/li\u003e\\r\n\n            \u003cli\u003e402: Weapons\u003c/li\u003e\\r\n\n            \u003cli\u003e403: Gore\u003c/li\u003e\\r\n\n            \u003cli\u003e501: Profanity\u003c/li\u003e\\r\n\n            \u003cli\u003e502: Vulgarity\u003c/li\u003e\\r\n\n            \u003c/ul\u003e.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MatchResponse\"\n              examples:\n                Match Image request:\n                  $ref: \"#/components/examples/Match_Image_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessImage/OCR?overload=stream:\n    post:\n      description: Returns any text found in the image for the language specified. If no\n        language is specified in input then the detection defaults to English.\n      operationId: ImageModeration_OCRFileInput\n      parameters:\n        - $ref: \"#/components/parameters/language\"\n        - $ref: \"#/components/parameters/CacheImage\"\n        - $ref: \"#/components/parameters/enhanced\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImage_AddImageFileInputImag\\\n          estream\"\n      responses:\n        \"200\":\n          description: The found text and list of candidate text.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OCR\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  /contentmoderator/moderate/v1.0/ProcessImage/OCR?overload=url:\n    post:\n      description: Returns any text found in the image for the language specified. If no\n        language is specified in input then the detection defaults to English.\n      operationId: ImageModeration_OCRUrlInput\n      parameters:\n        - $ref: \"#/components/parameters/language\"\n        - $ref: \"#/components/parameters/CacheImage\"\n        - $ref: \"#/components/parameters/enhanced\"\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Image OCR request:\n              value: application/json\n      requestBody:\n        $ref: \"#/components/requestBodies/ListManagementImage_AddImageUrlInputImage\\\n          url\"\n      responses:\n        \"200\":\n          description: The found text and list of candidate text.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OCR\"\n              examples:\n                Image OCR request:\n                  $ref: \"#/components/examples/Image_OCR_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - ImageModeration\n  \"/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames?overload=stream\":\n    post:\n      description: \"Use this method to add frames for a video review.Timescale: This\n        parameter is a factor which is used to convert the timestamp on a frame\n        into milliseconds. Timescale is provided in the output of the Content\n        Moderator video media processor on the Azure Media Services\n        platform.Timescale in the Video Moderation output is Ticks/Second.\"\n      operationId: Reviews_AddVideoFrameStream\n      parameters:\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n        - description: Your team name.\n          in: path\n          name: teamName\n          required: true\n          schema:\n            type: string\n        - description: Id of the review.\n          in: path\n          name: reviewId\n          required: true\n          schema:\n            type: string\n        - description: Timescale of the video .\n          in: query\n          name: timescale\n          required: false\n          schema:\n            type: integer\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                frameImageZip:\n                  description: Zip file containing frame images.\n                  type: string\n                  format: binary\n                frameMetadata:\n                  description: Metadata of the frame.\n                  type: string\n              required:\n                - frameImageZip\n                - frameMetadata\n      responses:\n        \"204\":\n          description: No Content\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\n  \"/contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames?overload=url\":\n    post:\n      description: \"Use this method to add frames for a video review.Timescale: This\n        parameter is a factor which is used to convert the timestamp on a frame\n        into milliseconds. Timescale is provided in the output of the Content\n        Moderator video media processor on the Azure Media Services\n        platform.Timescale in the Video Moderation output is Ticks/Second.\"\n      operationId: Reviews_AddVideoFrameUrl\n      parameters:\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Add video frame url input request:\n              value: application/json\n        - $ref: \"#/components/parameters/teamName\"\n        - $ref: \"#/components/parameters/reviewId\"\n        - $ref: \"#/components/parameters/timescale\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: Schema of the body.\n              items:\n                description: Schema items of the body.\n                properties:\n                  FrameImage:\n                    description: Content to review.\n                    type: string\n                  Metadata:\n                    description: Optional metadata details.\n                    items:\n                      properties:\n                        Key:\n                          description: Your key parameter.\n                          type: string\n                        Value:\n                          description: Your value parameter.\n                          type: string\n                      required:\n                        - Key\n                        - Value\n                      type: object\n                    type: array\n                  ReviewerResultTags:\n                    items:\n                      properties:\n                        Key:\n                          description: Your key parameter.\n                          type: string\n                        Value:\n                          description: Your value parameter.\n                          type: string\n                      required:\n                        - Key\n                        - Value\n                      type: object\n                    type: array\n                  Timestamp:\n                    description: Timestamp of the frame.\n                    type: string\n                required:\n                  - Timestamp\n                  - FrameImage\n                type: object\n              type: array\n        description: Body for add video frames API\n        required: true\n        x-ms-parameter-location: method\n      responses:\n        \"204\":\n          description: No Content\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\n  \"/contentmoderator/review/v1.0/teams/{teamName}/reviews?overload=video\":\n    post:\n      description: \"The reviews created would show up for Reviewers on your team. As\n        Reviewers complete reviewing, results of the Review would be POSTED\n        (i.e. HTTP POST) on the specified CallBackEndpoint.\\r\n\n        \\r\n\n        \u003ch3\u003eCallBack Schemas \u003c/h3\u003e\\r\n\n        \u003ch4\u003eReview Completion CallBack Sample\u003c/h4\u003e\\r\n\n        \u003cp\u003e\\r\n\n        {\u003cbr/\u003e\\r\n\n        \\  \\\"ReviewId\\\": \\\"\u003cReview Id\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ModifiedOn\\\": \\\"2016-10-11T22:36:32.9934851Z\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ModifiedBy\\\": \\\"\u003cName of the Reviewer\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"CallBackType\\\": \\\"Review\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"ContentId\\\": \\\"\u003cThe ContentId that was specified\n        input\u003e\\\",\u003cbr/\u003e\\r\n\n        \\  \\\"Metadata\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"adultscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"racyscore\\\": \\\"0.xxx\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  },\u003cbr/\u003e\\r\n\n        \\  \\\"ReviewerResultTags\\\": {\u003cbr/\u003e\\r\n\n        \\    \\\"a\\\": \\\"False\\\",\u003cbr/\u003e\\r\n\n        \\    \\\"r\\\": \\\"True\\\"\u003cbr/\u003e\\r\n\n        \\  }\u003cbr/\u003e\\r\n\n        }\u003cbr/\u003e\\r\n\n        \\r\n\n        \u003c/p\u003e.\"\n      operationId: Reviews_CreateVideoReviews\n      parameters:\n        - description: The content type.\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n          examples:\n            Create video review request:\n              value: application/json\n        - $ref: \"#/components/parameters/teamName\"\n        - $ref: \"#/components/parameters/subTeam\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: Schema of the body.\n              items:\n                description: Schema items of the body.\n                properties:\n                  CallbackEndpoint:\n                    description: Optional CallbackEndpoint.\n                    type: string\n                  Content:\n                    description: Video content url to review.\n                    type: string\n                  ContentId:\n                    description: Content Identifier.\n                    type: string\n                  Metadata:\n                    description: Optional metadata details.\n                    items:\n                      properties:\n                        Key:\n                          description: Your key parameter.\n                          type: string\n                        Value:\n                          description: Your value parameter.\n                          type: string\n                      required:\n                        - Key\n                        - Value\n                      type: object\n                    type: array\n                  Status:\n                    description: Status of the video(Complete,Unpublished,Pending)\n                    enum:\n                      - Complete\n                      - Unpublished\n                      - Pending\n                    type: string\n                  Timescale:\n                    description: Timescale of the video.\n                    type: integer\n                  Type:\n                    description: Type of the content.\n                    enum:\n                      - Video\n                    type: string\n                  VideoFrames:\n                    description: Optional metadata details.\n                    items:\n                      properties:\n                        FrameImage:\n                          description: Frame image Url.\n                          type: string\n                        Id:\n                          description: Id of the frame.\n                          type: string\n                        Metadata:\n                          description: Optional metadata details.\n                          items:\n                            properties:\n                              Key:\n                                description: Your key parameter.\n                                type: string\n                              Value:\n                                description: Your value parameter.\n                                type: string\n                            required:\n                              - Key\n                              - Value\n                            type: object\n                          type: array\n                        ReviewerResultTags:\n                          items:\n                            properties:\n                              Key:\n                                description: Your key parameter.\n                                type: string\n                              Value:\n                                description: Your value parameter.\n                                type: string\n                            required:\n                              - Key\n                              - Value\n                            type: object\n                          type: array\n                        Timestamp:\n                          description: Timestamp of the frame.\n                          type: integer\n                      required:\n                        - Id\n                        - Timestamp\n                        - FrameImage\n                      type: object\n                    type: array\n                required:\n                  - Content\n                  - ContentId\n                  - Type\n                  - Status\n                type: object\n              type: array\n        description: Body for create reviews API\n        required: true\n        x-ms-parameter-location: method\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReviewList\"\n              examples:\n                Create video review request:\n                  $ref: \"#/components/examples/Create_video_review_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n      tags:\n        - Reviews\nservers:\n  - url: https://azure.local\n  - url: \"{Endpoint}\"\n    variables:\n      Endpoint:\n        description: \"Supported Cognitive Services endpoints (protocol and hostname, for\n          example: https://westus.api.cognitive.microsoft.com).\"\n        x-ms-parameter-location: client\n        x-ms-skip-url-encoding: true\n        default: \"\"\ncomponents:\n  examples:\n    Get_All_Imagelists_request:\n      value:\n        - Description: List of images with racy content.\n          Id: 99083\n          Metadata:\n            Contentsource: content source A\n            Purpose: task A\n          Name: RacyContentList\n        - Description: List of images with abuse content.\n          Id: 89117\n          Metadata:\n            Contentsource: content source B\n            TaggedAs: abuse\n          Name: AbuseContentList\n    Create_Imagelist_request:\n      value:\n        Description: List of images with racy content\n        Id: 89023\n        Metadata:\n          ContentSource: Content Source A\n          TaggedAs: Racy\n        Name: ImageList B\n    Get_List_Id_Details_request:\n      value:\n        Description: sample string 3\n        Id: 94557\n        Metadata:\n          Sample string 1: sample string 2\n          Sample string 3: sample string 4\n        Name: ImageList A\n    Update_Imagelist_request:\n      value:\n        Description: List of images.\n        Id: 89023\n        Metadata:\n          ContentSource: Content Source A\n          TaggedAs: Racy\n        Name: ImageList B\n    Refresh_Image_Index_request:\n      value:\n        AdvancedInfo: []\n        ContentSourceId: \"89003\"\n        IsUpdateSuccess: true\n        Status:\n          Code: 3000\n          Description: RefreshIndex successfully completed.\n          Exception: \"\"\n        TrackingId: WE_7be12265b82742749e6b6b1b0_ContentModerator.Preview_e220d7be-49d0-4553-94f6-fa5ad4ae488e\n    Get_All_Image_Ids_request:\n      value:\n        ContentIds:\n          - 89207\n          - 89209\n          - 94162\n        ContentSource: \"79017\"\n        Status:\n          Code: 3000\n          Description: OK\n          Exception: \"\"\n        TrackingId: WE_7be12265b8014274baea9219e6cg6b1b0_ContentModerator.Preview_5614wrl328-ba52-40b2-a220-16e55uha78a\n    Add_Image_request:\n      value:\n        AdditionalInfo:\n          - Key: Source\n            Value: \"81117\"\n        ContentId: \"90102\"\n        Status:\n          Code: 3000\n          Description: OK\n          Exception: \"\"\n        TrackingId: WE_7be12265b8274274baea18e6b6b1b0_ContentModerator.Preview_e7dfcfe4-af54-2b1c-8a43-e1400c10893b9\n    Get_All_Termlists_request:\n      value:\n        - Description: List of racy terms.\n          Id: 99083\n          Metadata:\n            Contentsource: content source A\n            Purpose: task A\n          Name: RacyContentList\n        - Description: List of abusive terms.\n          Id: 89117\n          Metadata:\n            Contentsource: content source B\n            TaggedAs: abuse\n          Name: AbuseContentList\n    Create_Termlist_request:\n      value:\n        Description: List of racy terms.\n        Id: 89023\n        Metadata:\n          ContentSource: Content Source A\n          TaggedAs: Racy\n        Name: TermList B\n    Get_Term_ListId_Details_request:\n      value:\n        Description: sample string 3\n        Id: 89003\n        Metadata:\n          Sample string 1: sample string 2\n          Sample string 3: sample string 4\n        Name: TermList A\n    Update_Termlist_request:\n      value:\n        Description: List of offensive terms.\n        Id: 89023\n        Metadata:\n          ContentSource: Content Source A\n          TaggedAs: Offensive\n        Name: TermList B\n    Refresh_Term_Index_request:\n      value:\n        AdvancedInfo: []\n        ContentSourceId: \"89003\"\n        IsUpdateSuccess: true\n        Status:\n          Code: 3000\n          Description: RefreshIndex successfully completed.\n          Exception: \"\"\n        TrackingId: WE_7be12265b82742749e6b6b1b0_ContentModerator.Preview_e220d7be-49d0-4553-94f6-fa5ad4ae488e\n    Get_All_Terms_request:\n      value:\n        Data:\n          Language: eng\n          Status:\n            Code: 3000\n            Description: OK\n            Exception: \"\"\n          Terms:\n            - Term: testA\n            - Term: testB\n          TrackingId: 1239cc41a-b123-4983-8446-ef1df9a6768\n        Paging:\n          Limit: 50\n          Offset: 0\n          Returned: 2\n          Total: 2\n    Detect_Language_request:\n      value:\n        Classification:\n          Category1:\n            Score: 0.00040505084325559437\n          Category2:\n            Score: 0.2234508991241455\n          Category3:\n            Score: 0.9879999756813049\n          ReviewRecommended: true\n        Language: eng\n        Misrepresentation: []\n        NormalizedText: \"Is this a crap email abcdef@ abcd. com, phone: 6657789887, IP: 255.\n          255. 255. 255, 1 Microsoft Way, Redmond, WA 98052\"\n        OriginalText: \"Is this a crap email abcdef@abcd.com, phone: 6657789887, IP:\n          255.255.255.255, 1 Microsoft Way, Redmond, WA 98052\"\n        PII:\n          Address:\n            - Index: 78\n              Text: 1 Microsoft Way, Redmond, WA 98052\n          Email:\n            - Detected: abcdef@abcd.com\n              Index: 21\n              SubType: Regular\n              Text: abcdef@abcd.com\n          IPA:\n            - Index: 61\n              SubType: IPV4\n              Text: 255.255.255.255\n          Phone:\n            - CountryCode: US\n              Index: 45\n              Text: \"6657789887\"\n          SSN:\n            - Index: 45\n              Text: \"665778988\"\n        Status:\n          Code: 3000\n          Description: OK\n          Exception: \"\"\n        Terms:\n          - Index: 10\n            ListId: 0\n            OriginalIndex: 10\n            Term: crap\n        TrackingId: 9fdfef70-6ed8-4a88-99a0-5b6d0b8d7108\n    Create_Job_request:\n      value:\n        JobId: \"234\"\n    Get_Job_Details_request:\n      value:\n        CallBackEndpoint: \"\"\n        Id: 2017213fee37b184345gu9606e5d14e3\n        JobExecutionReport:\n          - Msg: Job marked completed and job content has been removed\n            Ts: 2017-09-21T22:00:47.4920565\n          - Msg: Execution Complete\n            Ts: 2017-09-21T22:00:47.420048\n          - Msg: Successfully got isadult response from Moderator\n            Ts: 2017-09-21T22:00:47.3900424\n          - Msg: Getting isadult from Moderator\n            Ts: 2017-09-21T22:00:46.3538907\n          - Msg: Starting Execution - Try 1\n            Ts: 2017-09-21T22:00:46.1098543\n        ResultMetaData:\n          - Key: adultScore\n            Value: \"0.007\"\n          - Key: isAdult\n            Value: \"False\"\n          - Key: racyScore\n            Value: \"0.022\"\n          - Key: isRacy\n            Value: \"False\"\n        ReviewId: \"\"\n        Status: Complete\n        TeamName: teamA\n        Type: Image\n        WorkflowId: default\n    Create_Review_request:\n      value:\n        - 201709i9srfj128775481f9955033096ddf\n    Get_Review_request:\n      value:\n        CallbackEndpoint: \"\"\n        Content: https://reviewcontentstoragesea.blob.core.windows.net/ModeratorTeam/IMG_201709i96f295987701f9955036064c42ddf\n        ContentId: contentIdA\n        CreatedBy: ModeratorTeam\n        Metadata:\n          - Key: string\n            Value: string\n        ReviewId: 201709i96f295aa5748101436064c42ddf\n        ReviewerResultTags: []\n        Status: Pending\n        SubTeam: public\n        Type: Image\n    Get_Frames_Request:\n      value:\n        ReviewId: 201711v18ea829372b14f9e9d382621e62429a9\n        VideoFrames:\n          - FrameImage: https://rtsvccontentwu.blob.core.windows.net/580040/FRM_201711v18ea829372b14f9e9d382621e62429a9_1122.jpg\n            Metadata:\n              - Key: apiScoreVal\n                Value: \"0.206\"\n              - Key: a\n                Value: \"False\"\n            ReviewerResultTags: []\n            Timestamp: \"1122\"\n    Evaluate_Image_request:\n      value:\n        AdultClassificationScore: 0.021854378283023834\n        AdvancedInfo:\n          - Key: ImageDownloadTimeInMs\n            Value: \"2328\"\n        CacheID: c660dfa6-eba9-4950-aa58-a6967de57ea8_636422189473647994\n        IsImageAdultClassified: false\n        IsImageRacyClassified: false\n        RacyClassificationScore: 0.045791395008563995\n        Result: false\n        Status:\n          Code: 3000\n          Description: OK\n          Exception: \"\"\n        TrackingId: SEA_ad975eeae1f24f81bebb40be0c3ba4fd_ContentModerator.Preview_c6ca58fc-dc30-4961-9526-e8bdfb3b3bf5\n    Find_Faces_request:\n      value:\n        AdvancedInfo: []\n        Count: 1\n        Faces:\n          - Bottom: 82\n            Left: 80\n            Right: 118\n            Top: 44\n        Result: true\n        Status:\n          Code: 3000\n          Description: OK\n          Exception: \"\"\n        TrackingId: SEA_ad975eeae1f24f81bebb40be0c3ba4fd_ContentModerator.Preview_01158625-4fea-4dd5-8f21-5e2657ea2eee\n    Match_Image_request:\n      value:\n        CacheID: c660dfa6-eba9-4950-aa58-a6967de57ea8_636422189473647994\n        IsMatch: true\n        Matches:\n          - Label: ImageA\n            MatchId: 89203\n            Score: 1\n            Source: \"89117\"\n            Tags: []\n          - Label: ImageB\n            MatchId: 92708\n            Score: 1\n            Source: \"89083\"\n            Tags: []\n        Status:\n          Code: 3000\n          Description: OK\n          Exception: \"\"\n        TrackingId: WE_7be19175b8274274baea9219e6b6b1b0_ContentModerator.Preview_44b1f691-35ee-4d49-a981-0d01d07f18d6\n    Image_OCR_request:\n      value:\n        Candidates: []\n        Language: eng\n        Metadata:\n          - Key: ImageDownloadTimeInMs\n            Value: \"2239\"\n          - Key: ImageSizeInBytes\n            Value: \"273405\"\n        Status:\n          Code: 3000\n          Description: OK\n          Exception: \"\"\n        Text: \"IF WE DID \\r\n\n          ALL \\r\n\n          THE THINGS \\r\n\n          WE ARE \\r\n\n          CAPABLE \\r\n\n          OF DOING, \\r\n\n          WE WOULD \\r\n\n          LITERALLY \\r\n\n          ASTOUND \\r\n\n          OURSELVE \\r\\n\"\n        TrackingId: SEA_ad975eeae1f24f81bebb40be0c3ba4fd_ContentModerator.Preview_e68fa0d1-6c83-499d-958c-9abd96263e10\n    Create_video_review_request:\n      value:\n        - 201709i9srfj128775481f9955033096ddf\n  parameters:\n    CacheImage:\n      description: Whether to retain the submitted image for future use; defaults to false\n        if omitted.\n      in: query\n      name: CacheImage\n      x-ms-parameter-location: method\n      schema:\n        type: boolean\n      examples:\n        Image OCR request:\n          value: false\n    CallBackEndpoint:\n      description: Callback endpoint for posting the create job result.\n      in: query\n      name: CallBackEndpoint\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Create Job request:\n          value: \"\"\n    ContentId:\n      description: Id/Name to identify the content submitted.\n      in: query\n      name: ContentId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Create Job request:\n          value: ContentID A\n    ContentType:\n      description: Image, Text or Video.\n      in: query\n      name: ContentType\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - Image\n          - Text\n          - Video\n      examples:\n        Create Job request:\n          value: Image\n    Endpoint:\n      description: \"Supported Cognitive Services endpoints (protocol and hostname, for\n        example: https://westus.api.cognitive.microsoft.com).\"\n      in: path\n      name: Endpoint\n      required: true\n      x-ms-parameter-location: client\n      x-ms-skip-url-encoding: true\n      schema:\n        type: string\n    ImageId:\n      description: Id of the image.\n      in: path\n      name: ImageId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Delete Image request:\n          value: \"34562\"\n    PII:\n      description: Detect personal identifiable information.\n      in: query\n      name: PII\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: boolean\n        default: false\n      examples:\n        Detect Language request:\n          value: false\n    WorkflowName:\n      description: Workflow Name that you want to invoke.\n      in: query\n      name: WorkflowName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Create Job request:\n          value: TestWorkflow\n    autocorrect:\n      description: Autocorrect text.\n      in: query\n      name: autocorrect\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: boolean\n        default: false\n      examples:\n        Detect Language request:\n          value: false\n    classify:\n      description: Classify input.\n      in: query\n      name: classify\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: boolean\n        default: false\n      examples:\n        Detect Language request:\n          value: false\n    enhanced:\n      description: \u003e-\n        When set to True, the image goes through additional processing to come\n        with additional candidates.\n\n\n        image/tiff is not supported when enhanced is set to true\n\n\n        Note: This impacts the response time.\n      in: query\n      name: enhanced\n      x-ms-parameter-location: method\n      schema:\n        type: boolean\n        default: false\n      examples:\n        Image OCR request:\n          value: false\n    label:\n      description: The image label.\n      in: query\n      name: label\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Add Image request:\n          value: test\n    language:\n      description: Language of the terms.\n      in: query\n      name: language\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Refresh Term Index request:\n          value: eng\n        Delete AllTerms request:\n          value: eng\n        Get All Terms request:\n          value: eng\n        Delete Term request:\n          value: eng\n        Add Term request:\n          value: eng\n        Image OCR request:\n          value: eng\n    listId:\n      description: List Id of the image list.\n      in: path\n      name: listId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Delete Imagelist request:\n          value: \"89003\"\n        Get List Id Details request:\n          value: \"123\"\n        Update Imagelist request:\n          value: \"89003\"\n        Refresh Image Index request:\n          value: \"89003\"\n        Delete All Images request:\n          value: \"89003\"\n        Get All Image Ids request:\n          value: \"89003\"\n        Add Image request:\n          value: \"89003\"\n        Delete Image request:\n          value: \"89003\"\n        Delete Termlist request:\n          value: \"89003\"\n        Get Term ListId Details request:\n          value: \"89003\"\n        Update Termlist request:\n          value: \"89003\"\n        Refresh Term Index request:\n          value: \"89003\"\n        Delete AllTerms request:\n          value: \"89003\"\n        Get All Terms request:\n          value: \"89003\"\n        Delete Term request:\n          value: \"89003\"\n        Add Term request:\n          value: \"89003\"\n    listIdQueryParameter:\n      description: The list Id.\n      in: query\n      name: listId\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Detect Language request:\n          value: \"\"\n        Match Image request:\n          value: \"12345\"\n    reviewId:\n      description: Id of the review.\n      in: path\n      name: reviewId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Get Frames Request:\n          value: 201711v18ea829372b14f9e9d382621e62429a9\n        publish video request:\n          value: 201711v18ea829372b14f9e9d382621e62429a9\n        Add transcript request:\n          value: 201711v18ea829372b14f9e9d382621e62429a9\n        Transcript moderation result request:\n          value: 201711v627c579149ec4220bc674214d93f5fe5\n        Add video frame url input request:\n          value: 201711v18ea829372b14f9e9d382621e62429a9\n    subTeam:\n      description: SubTeam of your team, you want to assign the created review to.\n      in: query\n      name: subTeam\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Create Review request:\n          value: SubteamA\n        Create video review request:\n          value: SubteamA\n    tag:\n      description: Tag for the image.\n      in: query\n      name: tag\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: integer\n    teamName:\n      description: Your team name.\n      in: path\n      name: teamName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Create Job request:\n          value: sonaliProdTeam\n        Create Review request:\n          value: ModeratorTeam\n        Get Frames Request:\n          value: Content moderator\n        publish video request:\n          value: Content moderator\n        Add transcript request:\n          value: Content moderator\n        Transcript moderation result request:\n          value: ModeratorTeam\n        Add video frame url input request:\n          value: ModeratorTeam\n        Create video review request:\n          value: ModeratorTeam\n    term:\n      description: Term to be deleted\n      in: path\n      name: term\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Delete Term request:\n          value: hell\n        Add Term request:\n          value: hell\n    textLanguage:\n      description: Language of the text.\n      in: query\n      name: language\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Detect Language request:\n          value: eng\n    timescale:\n      description: Timescale of the video.\n      in: query\n      name: timescale\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: integer\n  requestBodies:\n    TextModeration_DetectLanguageTextContent:\n      content:\n        text/plain:\n          schema:\n            format: file\n            type: object\n        text/html:\n          schema:\n            format: file\n            type: object\n        text/xml:\n          schema:\n            format: file\n            type: object\n        text/markdown:\n          schema:\n            format: file\n            type: object\n      description: Content to screen.\n      required: true\n      x-ms-parameter-location: method\n    ListManagementImage_AddImageFileInputImagestream:\n      content:\n        image/gif:\n          schema:\n            format: file\n            type: object\n        image/jpeg:\n          schema:\n            format: file\n            type: object\n        image/png:\n          schema:\n            format: file\n            type: object\n        image/bmp:\n          schema:\n            format: file\n            type: object\n        image/tiff:\n          schema:\n            format: file\n            type: object\n      description: The image file.\n      required: true\n      x-ms-parameter-location: method\n    ListManagementImageLists_CreateBody:\n      content:\n        application/json:\n          schema:\n            properties:\n              Description:\n                description: Description of the list.\n                type: string\n              Metadata:\n                additionalProperties:\n                  type: string\n                description: Metadata of the list.\n                type: object\n              Name:\n                description: Name of the list.\n                type: string\n            type: object\n      description: Schema of the body.\n      required: true\n      x-ms-parameter-location: method\n    ListManagementImage_AddImageUrlInputImageurl:\n      content:\n        application/json:\n          schema:\n            properties:\n              DataRepresentation:\n                default: URL\n                type: string\n              Value:\n                type: string\n            type: object\n      description: The image url.\n      required: true\n      x-ms-parameter-location: method\n  securitySchemes:\n    apim_key:\n      in: header\n      name: Ocp-Apim-Subscription-Key\n      type: apiKey\n  schemas:\n    APIError:\n      description: Error information returned by the API\n      properties:\n        Error:\n          $ref: \"#/components/schemas/Error\"\n      type: object\n    Address:\n      description: Address details.\n      properties:\n        Index:\n          description: Index(Location) of the Address in the input text content.\n          type: integer\n        Text:\n          description: Detected Address.\n          type: string\n    Candidate:\n      description: OCR candidate text.\n      properties:\n        Confidence:\n          description: The confidence level.\n          type: number\n        Text:\n          description: The text found.\n          type: string\n    Classification:\n      description: The classification details of the text.\n      properties:\n        Category1:\n          description: The category1 score details of the text. \u003ca\n            href=\"https://aka.ms/textClassifyCategories\"\u003eClick here\u003c/a\u003e for more\n            details on category classification.\n          properties:\n            Score:\n              description: The category1 score.\n              type: number\n        Category2:\n          description: The category2 score details of the text. \u003ca\n            href=\"https://aka.ms/textClassifyCategories\"\u003eClick here\u003c/a\u003e for more\n            details on category classification.\n          properties:\n            Score:\n              description: The category2 score.\n              type: number\n        Category3:\n          description: The category3 score details of the text. \u003ca\n            href=\"https://aka.ms/textClassifyCategories\"\u003eClick here\u003c/a\u003e for more\n            details on category classification.\n          properties:\n            Score:\n              description: The category3 score.\n              type: number\n        ReviewRecommended:\n          description: The review recommended flag.\n          type: boolean\n    DetectedLanguage:\n      description: Detect language result.\n      properties:\n        DetectedLanguage:\n          description: The detected language.\n          type: string\n        Status:\n          $ref: \"#/components/schemas/Status\"\n        TrackingId:\n          description: The tracking id.\n          type: string\n    DetectedTerms:\n      description: Detected Terms details.\n      properties:\n        Index:\n          description: Index(Location) of the detected profanity term in the input text\n            content.\n          type: integer\n        ListId:\n          description: Matched Terms list Id.\n          type: integer\n        OriginalIndex:\n          description: Original Index(Location) of the detected profanity term in the input\n            text content.\n          type: integer\n        Term:\n          description: Detected profanity term.\n          type: string\n    Email:\n      description: Email Address details.\n      properties:\n        Detected:\n          description: Detected Email Address from the input text content.\n          type: string\n        Index:\n          description: Index(Location) of the Email address in the input text content.\n          type: integer\n        SubType:\n          description: Subtype of the detected Email Address.\n          type: string\n        Text:\n          description: Email Address in the input text content.\n          type: string\n    Error:\n      description: Error body.\n      properties:\n        Code:\n          type: string\n        Message:\n          type: string\n      type: object\n    Evaluate:\n      description: Evaluate response object.\n      properties:\n        AdultClassificationScore:\n          description: The adult classification score.\n          type: number\n        AdvancedInfo:\n          description: The advanced info.\n          items:\n            $ref: \"#/components/schemas/KeyValuePair\"\n          type: array\n        CacheID:\n          description: The cache id.\n          type: string\n        IsImageAdultClassified:\n          description: Indicates if an image is classified as adult.\n          type: boolean\n        IsImageRacyClassified:\n          description: Indicates if the image is classified as racy.\n          type: boolean\n        RacyClassificationScore:\n          description: The racy classification score.\n          type: number\n        Result:\n          description: Evaluate result.\n          type: boolean\n        Status:\n          $ref: \"#/components/schemas/Status\"\n        TrackingId:\n          description: The tracking id.\n          type: string\n    Face:\n      description: Coordinates to the found face.\n      properties:\n        Bottom:\n          description: The bottom coordinate.\n          type: integer\n        Left:\n          description: The left coordinate.\n          type: integer\n        Right:\n          description: The right coordinate.\n          type: integer\n        Top:\n          description: The top coordinate.\n          type: integer\n    FoundFaces:\n      description: Request object the contains found faces.\n      properties:\n        AdvancedInfo:\n          description: The advanced info.\n          items:\n            $ref: \"#/components/schemas/KeyValuePair\"\n          type: array\n        CacheId:\n          description: The cache id.\n          type: string\n        Count:\n          description: Number of faces found.\n          type: integer\n        Faces:\n          description: The list of faces.\n          items:\n            $ref: \"#/components/schemas/Face\"\n          type: array\n        Result:\n          description: True if result was found.\n          type: boolean\n        Status:\n          $ref: \"#/components/schemas/Status\"\n        TrackingId:\n          description: The tracking id.\n          type: string\n    Frame:\n      description: Video frame property details.\n      properties:\n        FrameImage:\n          description: Frame image.\n          type: string\n        Metadata:\n          description: Array of KeyValue.\n          items:\n            $ref: \"#/components/schemas/KeyValuePair\"\n          type: array\n        ReviewerResultTags:\n          description: Reviewer result tags.\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n        Timestamp:\n          description: Timestamp of the frame.\n          type: string\n    Frames:\n      description: The response for a Get Frames request.\n      properties:\n        ReviewId:\n          description: Id of the review.\n          type: string\n        VideoFrames:\n          items:\n            $ref: \"#/components/schemas/Frame\"\n          type: array\n    IPA:\n      description: IP Address details.\n      properties:\n        Index:\n          description: Index(Location) of the IP Address in the input text content.\n          type: integer\n        SubType:\n          description: Subtype of the detected IP Address.\n          type: string\n        Text:\n          description: Detected IP Address.\n          type: string\n    Image:\n      description: Image Properties.\n      properties:\n        AdditionalInfo:\n          description: Advanced info list.\n          items:\n            properties:\n              Key:\n                description: Key parameter.\n                type: string\n              Value:\n                description: Value parameter.\n                type: string\n            type: object\n          type: array\n        ContentId:\n          description: Content Id.\n          type: string\n        Status:\n          $ref: \"#/components/schemas/Status\"\n        TrackingId:\n          description: Tracking Id.\n          type: string\n    ImageIds:\n      description: Image Id properties.\n      properties:\n        ContentIds:\n          description: Id of the contents.\n          items:\n            type: integer\n          type: array\n        ContentSource:\n          description: Source of the content.\n          type: string\n        Status:\n          $ref: \"#/components/schemas/Status\"\n        TrackingId:\n          description: Tracking Id.\n          type: string\n    ImageList:\n      description: Image List Properties.\n      properties:\n        Description:\n          description: Description for image list.\n          type: string\n        Id:\n          description: Image List Id.\n          type: integer\n        Metadata:\n          additionalProperties:\n            type: string\n          description: Image List Metadata.\n          type: object\n        Name:\n          description: Image List Name.\n          type: string\n    ImageLists:\n      items:\n        $ref: \"#/components/schemas/ImageList\"\n      type: array\n    Job:\n      description: The Job object.\n      properties:\n        CallBackEndpoint:\n          description: The callback endpoint.\n          type: string\n        Id:\n          description: The job id.\n          type: string\n        JobExecutionReport:\n          description: Job execution report- Array of KeyValue pairs object.\n          items:\n            $ref: \"#/components/schemas/JobExecutionReportDetails\"\n          type: array\n        ResultMetaData:\n          description: Array of KeyValue pairs.\n          items:\n            $ref: \"#/components/schemas/KeyValuePair\"\n          type: array\n        ReviewId:\n          description: Review Id if one is created.\n          type: string\n        Status:\n          description: The status string (\u003cPending, Failed, Completed\u003e).\n          type: string\n        TeamName:\n          description: The team name associated with the job.\n          type: string\n        Type:\n          description: Type of the content.\n          type: string\n        WorkflowId:\n          description: The Id of the workflow.\n          type: string\n    JobExecutionReportDetails:\n      description: Job Execution Report Values.\n      properties:\n        Msg:\n          description: Message details.\n          type: string\n        Ts:\n          description: Time details.\n          type: string\n    JobId:\n      properties:\n        JobId:\n          description: Id of the created job.\n          type: string\n    JobListResult:\n      description: The list of job ids.\n      properties:\n        Value:\n          description: The job id.\n          items:\n            type: string\n          type: array\n    KeyValuePair:\n      description: The key value pair object properties.\n      properties:\n        Key:\n          description: The key parameter.\n          type: string\n        Value:\n          description: The value parameter.\n          type: string\n    Match:\n      description: The match details.\n      properties:\n        Label:\n          description: The label.\n          type: string\n        MatchId:\n          description: The match id.\n          type: integer\n        Score:\n          description: Confidence score of the image match.\n          type: number\n        Source:\n          description: The source.\n          type: string\n        Tags:\n          description: The tags for match details.\n          items:\n            type: integer\n          type: array\n    MatchResponse:\n      description: The response for a Match request.\n      properties:\n        CacheID:\n          description: The cache id.\n          type: string\n        IsMatch:\n          description: Indicates if there is a match.\n          type: boolean\n        Matches:\n          description: The match details.\n          items:\n            $ref: \"#/components/schemas/Match\"\n          type: array\n        Status:\n          $ref: \"#/components/schemas/Status\"\n        TrackingId:\n          description: The tracking id.\n          type: string\n    OCR:\n      description: Contains the text found in image for the language specified.\n      properties:\n        CacheId:\n          description: The cache id.\n          type: string\n        Candidates:\n          description: The list of candidate text.\n          items:\n            $ref: \"#/components/schemas/Candidate\"\n          type: array\n        Language:\n          description: The ISO 639-3 code.\n          type: string\n        Metadata:\n          description: Array of KeyValue.\n          items:\n            $ref: \"#/components/schemas/KeyValuePair\"\n          type: array\n        Status:\n          $ref: \"#/components/schemas/Status\"\n        Text:\n          description: The found text.\n          type: string\n        TrackingId:\n          description: The tracking id.\n          type: string\n    PII:\n      description: Personal Identifier Information details.\n      properties:\n        Address:\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        Email:\n          items:\n            $ref: \"#/components/schemas/Email\"\n          type: array\n        IPA:\n          items:\n            $ref: \"#/components/schemas/IPA\"\n          type: array\n        Phone:\n          items:\n            $ref: \"#/components/schemas/Phone\"\n          type: array\n        SSN:\n          items:\n            $ref: \"#/components/schemas/SSN\"\n          type: array\n    Phone:\n      description: Phone Property details.\n      properties:\n        CountryCode:\n          description: CountryCode of the detected Phone number.\n          type: string\n        Index:\n          description: Index(Location) of the Phone number in the input text content.\n          type: integer\n        Text:\n          description: Detected Phone number.\n          type: string\n    RefreshIndex:\n      description: Refresh Index Response.\n      properties:\n        AdvancedInfo:\n          description: Advanced info list.\n          items:\n            additionalProperties:\n              type: string\n            type: object\n          type: array\n        ContentSourceId:\n          description: Content source Id.\n          type: string\n        IsUpdateSuccess:\n          description: Update success status.\n          type: boolean\n        Status:\n          $ref: \"#/components/schemas/Status\"\n        TrackingId:\n          description: Tracking Id.\n          type: string\n    Review:\n      description: The Review object.\n      properties:\n        CallbackEndpoint:\n          description: The callback endpoint.\n          type: string\n        Content:\n          description: The content value.\n          type: string\n        ContentId:\n          description: Id of the content.\n          type: string\n        CreatedBy:\n          description: The reviewer name.\n          type: string\n        Metadata:\n          description: Array of KeyValue.\n          items:\n            $ref: \"#/components/schemas/KeyValuePair\"\n          type: array\n        ReviewId:\n          description: Id of the review.\n          type: string\n        ReviewerResultTags:\n          description: Array of KeyValue with Reviewer set Tags.\n          items:\n            $ref: \"#/components/schemas/KeyValuePair\"\n          type: array\n        Status:\n          description: The status string (\u003cPending, Complete\u003e).\n          type: string\n        SubTeam:\n          description: Name of the subteam.\n          type: string\n        Type:\n          description: The type of content.\n          type: string\n    ReviewList:\n      description: The list of review ids.\n      items:\n        type: string\n      type: array\n    SSN:\n      description: Detected SSN details.\n      properties:\n        Index:\n          description: Index(Location) of the SSN in the input text content.\n          type: integer\n        Text:\n          description: Detected SSN in the input text content.\n          type: string\n    Screen:\n      description: The response for a Screen text request.\n      properties:\n        AutoCorrectedText:\n          description: The autocorrected text\n          type: string\n        Classification:\n          $ref: \"#/components/schemas/Classification\"\n        Language:\n          description: Language of the input text content.\n          type: string\n        Misrepresentation:\n          description: The misrepresentation text.\n          items:\n            type: string\n          type: array\n        NormalizedText:\n          description: The normalized text.\n          type: string\n        OriginalText:\n          description: The original text.\n          type: string\n        PII:\n          $ref: \"#/components/schemas/PII\"\n        Status:\n          $ref: \"#/components/schemas/Status\"\n        Terms:\n          items:\n            $ref: \"#/components/schemas/DetectedTerms\"\n          type: array\n        TrackingId:\n          description: Unique Content Moderator transaction Id.\n          type: string\n    Status:\n      description: Status properties.\n      properties:\n        Code:\n          description: Status code.\n          type: integer\n        Description:\n          description: Status description.\n          type: string\n        Exception:\n          description: Exception status.\n          type: string\n    Tag:\n      description: Tag details.\n      properties:\n        Key:\n          description: The key parameter.\n          type: string\n        Value:\n          description: The value parameter.\n          type: string\n    TermList:\n      description: Term List  Properties.\n      properties:\n        Description:\n          description: Description for term list.\n          type: string\n        Id:\n          description: Term list Id.\n          type: integer\n        Metadata:\n          additionalProperties:\n            type: string\n          description: Term list metadata.\n          type: object\n        Name:\n          description: Term list name.\n          type: string\n    TermLists:\n      items:\n        $ref: \"#/components/schemas/TermList\"\n      type: array\n    Terms:\n      description: Terms properties.\n      properties:\n        Data:\n          $ref: \"#/components/schemas/TermsData\"\n        Paging:\n          description: Paging details.\n          properties:\n            Limit:\n              description: Limit details.\n              type: integer\n            Offset:\n              description: Offset details.\n              type: integer\n            Returned:\n              description: Returned text details.\n              type: integer\n            Total:\n              description: Total details.\n              type: integer\n    TermsData:\n      description: All term Id response properties.\n      properties:\n        Language:\n          description: Language of the terms.\n          type: string\n        Status:\n          $ref: \"#/components/schemas/Status\"\n        Terms:\n          description: List of terms.\n          items:\n            $ref: \"#/components/schemas/TermsInList\"\n          type: array\n        TrackingId:\n          description: Tracking Id.\n          type: string\n    TermsInList:\n      description: Terms in list Id passed.\n      properties:\n        Term:\n          description: Added term details.\n          type: string\n"
		}
	},
	"Error": "buildIR: make ir: path \"/contentmoderator/review/v1.0/teams/{teamName}/jobs\": post: parameters: fail: \"Content-Type\": save schema types: save inlined type: schema name conflict: \"ReviewsCreateJobContentType\""
}