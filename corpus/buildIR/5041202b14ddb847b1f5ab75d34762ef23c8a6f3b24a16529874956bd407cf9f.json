{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NL-AMS-LOCGOV/zaakafhandelcomponent"
		},
		"file": {
			"name": "objects-openapi.yaml",
			"size": 0,
			"path": "api-specs/or/objects-openapi.yaml",
			"byteSize": 36581,
			"content": "openapi: 3.0.3\ninfo:\n  title: Objects API\n  version: 2.1.1 (v2)\n  description: |\n    An API to manage Objects.\n\n    # Introduction\n\n    An OBJECT is of a certain OBJECTTYPE (defined in the Objecttypes API). An\n    OBJECT has a few core attributes that every OBJECT (technically a RECORD,\n    see below) has, although these attributes can sometimes be empty. They are\n    attributes like `geometry` and some administrative attributes. The data that\n    describes the actual object is stored in the `data` attribute and follows\n    the JSON schema as given by the OBJECTTYPE.\n\n    ## Validation\n\n    When an OBJECT is created or changed the `OBJECT.type` attribute refers to the\n    matching OBJECTTYPE in the Objecttypes API. The RECORD always indicates which\n    OBJECTTYPE-VERSION is used, shown in the `RECORD.typeVersion` attribute.\n\n    Using these 2 attributes, the appropriate JSON schema is retrieved from the\n    Objecttypes API and the OBJECT data is validated against this JSON schema.\n\n    ## History\n\n    Each OBJECT has 1 or more RECORDs. A RECORD contains the data of an OBJECT\n    at a certain time. An OBJECT can have multiple RECORDS that describe the\n    history of that OBJECT. Changes to an OBJECT actually create a new RECORD\n    under the OBJECT and leaves the old RECORD as is.\n\n    ### Material and formal history\n\n    History can be seen from 2 perspectives: formal and material history. The\n    formal history describes the history as it should be (stored in the\n    `startAt` and `endAt` attributes). The material history describes the\n    history as it was administratively processed (stored in the `registeredAt`\n    attribute).\n\n    The difference is that an object could be created or updated in the real\n    world at a certain point in time but the administrative change (ie. save or\n    update the object in the Objects API) can be done at a later time. The\n    query parameters `?date=2021-01-01` (formal history) and\n    `?registrationDate=2021-01-01` (material history) allow for querying the\n    RECORDS as seen from both perspectives, and can yield different results.\n\n    ### Corrections\n\n    RECORDs cannot be deleted or changed once saved. If an error was made to\n    a RECORD, the RECORD can be \"corrected\" by saving a new RECORD and indicate\n    that it corrects a previous RECORD. This is done via the attribute\n    `correctionFor`.\n\n    ### Deletion\n\n    Although OBJECTs can be deleted, it is sometimes better to set the\n    `endDate` of an OBJECT. Deleting an OBJECT also deletes all RECORDs in\n    accordance with privacy laws.\n\n    # Authorizations\n\n    The API uses API-tokens that grant certain permissions. The API-token is\n    passed via a header, like this: `Authorization: Token \u003ctoken\u003e`\n\n    # Notifications\n\n    When OBJECTs are created, updated or deleted via the API, notifications of\n    these operations are published to the configured Notifications API in the\n    `objecten` channel.\n  contact:\n    url: https://github.com/maykinmedia/objects-api\n  license:\n    name: EUPL-1.2\npaths:\n  /objects:\n    get:\n      operationId: object_list\n      description: Retrieve a list of OBJECTs and their actual RECORD. The actual\n        record is defined as if the query parameter `date=\u003ctoday\u003e` was given.\n      parameters:\n        - in: header\n          name: Accept-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The desired ''Coordinate Reference System'' (CRS) of the response\n          data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is\n          the same as WGS84).'\n        - in: query\n          name: data_attrs\n          schema:\n            type: string\n          description: |\n            Only include objects that have attributes with certain values.\n            Data filtering expressions are comma-separated and are structured as follows:\n            A valid parameter value has the form `key__operator__value`.\n            `key` is the attribute name, `operator` is the comparison operator to be used and `value` is the attribute value.\n            Note: Values can be string, numeric, or dates (ISO format; YYYY-MM-DD).\n\n            Valid operator values are:\n            * `exact` - equal to\n            * `gt` - greater than\n            * `gte` - greater than or equal to\n            * `lt` - lower than\n            * `lte` - lower than or equal to\n            * `icontains` - case-insensitive partial match\n\n            `value` may not contain double underscore or comma characters.\n            `key` may not contain comma characters and includes double underscore only if it indicates nested attributes.\n\n            Example: in order to display only objects with `height` equal to 100, query `data_attrs=height__exact__100`\n            should be used. If `height` is nested inside `dimensions` attribute, query should look like\n            `data_attrs=dimensions__height__exact__100`\n        - in: query\n          name: data_icontains\n          schema:\n            type: string\n          description: Search in all `data` values of string properties.\n        - in: query\n          name: date\n          schema:\n            type: string\n            format: date\n          description: Display record data for the specified material date, i.e. the\n            specified date would be between `startAt` and `endAt` attributes. The default\n            value is today\n        - in: query\n          name: fields\n          schema:\n            type: string\n          description: 'Comma-separated fields, which should be displayed in the response.\n          For example: ''url, uuid, record__geometry''.'\n        - name: ordering\n          required: false\n          in: query\n          description: 'Comma-separated fields, which are used to order results. For\n          descending order user ''-'' as prefix. Nested fileds are also supported.\n          For example: ''-record__data__length,record__index''.'\n          schema:\n            type: string\n        - name: page\n          required: false\n          in: query\n          description: A page number within the paginated result set.\n          schema:\n            type: integer\n        - name: pageSize\n          required: false\n          in: query\n          description: Number of results to return per page.\n          schema:\n            type: integer\n        - in: query\n          name: registrationDate\n          schema:\n            type: string\n            format: date\n          description: Display record data for the specified registration date, i.e.\n            the specified date would be between `registrationAt` attributes of different\n            records\n        - in: query\n          name: type\n          schema:\n            type: string\n            format: uri\n            maxLength: 1000\n            minLength: 1\n          description: Url reference to OBJECTTYPE in Objecttypes API\n      tags:\n        - objects\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          headers:\n            Content-Crs:\n              schema:\n                type: string\n                enum:\n                  - EPSG:4326\n              description: 'The ''Coordinate Reference System'' (CRS) of the request\n                data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326\n                is the same as WGS84).'\n            X-Unauthorized-Fields:\n              schema:\n                type: string\n              description: 'List of fields that are not allowed to display if the\n                field-based authorization is turned on. The value has the following\n                format: `objectType1:fieldA,fieldB; objectType2:fieldC,fieldD`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedObjectList'\n          description: OK\n    post:\n      operationId: object_create\n      description: Create an OBJECT and its initial RECORD.\n      parameters:\n        - in: header\n          name: Accept-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The desired ''Coordinate Reference System'' (CRS) of the response\n          data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is\n          the same as WGS84).'\n        - in: header\n          name: Content-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The ''Coordinate Reference System'' (CRS) of the request data.\n          According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same\n          as WGS84).'\n          required: true\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/json\n          description: Content type of the request body.\n          required: true\n      tags:\n        - objects\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Object'\n        required: true\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '201':\n          headers:\n            Content-Crs:\n              schema:\n                type: string\n                enum:\n                  - EPSG:4326\n              description: 'The ''Coordinate Reference System'' (CRS) of the request\n                data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326\n                is the same as WGS84).'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n          description: Created\n  /objects/{uuid}:\n    get:\n      operationId: object_read\n      description: Retrieve a single OBJECT and its actual RECORD. The actual record\n        is defined as if the query parameter `date=\u003ctoday\u003e` was given.\n      parameters:\n        - in: header\n          name: Accept-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The desired ''Coordinate Reference System'' (CRS) of the response\n          data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is\n          the same as WGS84).'\n        - in: query\n          name: fields\n          schema:\n            type: string\n          description: 'Comma-separated fields, which should be displayed in the response.\n          For example: ''url, uuid, record__geometry''.'\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n            description: Unique identifier (UUID4)\n          required: true\n      tags:\n        - objects\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          headers:\n            Content-Crs:\n              schema:\n                type: string\n                enum:\n                  - EPSG:4326\n              description: 'The ''Coordinate Reference System'' (CRS) of the request\n                data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326\n                is the same as WGS84).'\n            X-Unauthorized-Fields:\n              schema:\n                type: string\n              description: 'List of fields that are not allowed to display if the\n                field-based authorization is turned on. The value has the following\n                format: `objectType1:fieldA,fieldB; objectType2:fieldC,fieldD`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n          description: OK\n    put:\n      operationId: object_update\n      description: Update the OBJECT by creating a new RECORD with the updates values.\n      parameters:\n        - in: header\n          name: Accept-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The desired ''Coordinate Reference System'' (CRS) of the response\n          data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is\n          the same as WGS84).'\n        - in: header\n          name: Content-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The ''Coordinate Reference System'' (CRS) of the request data.\n          According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same\n          as WGS84).'\n          required: true\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/json\n          description: Content type of the request body.\n          required: true\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n            description: Unique identifier (UUID4)\n          required: true\n      tags:\n        - objects\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Object'\n        required: true\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          headers:\n            Content-Crs:\n              schema:\n                type: string\n                enum:\n                  - EPSG:4326\n              description: 'The ''Coordinate Reference System'' (CRS) of the request\n                data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326\n                is the same as WGS84).'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n          description: OK\n    patch:\n      operationId: object_partial_update\n      description: Update the OBJECT by creating a new RECORD with the updates values.\n      parameters:\n        - in: header\n          name: Accept-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The desired ''Coordinate Reference System'' (CRS) of the response\n          data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is\n          the same as WGS84).'\n        - in: header\n          name: Content-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The ''Coordinate Reference System'' (CRS) of the request data.\n          According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same\n          as WGS84).'\n          required: true\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/json\n          description: Content type of the request body.\n          required: true\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n            description: Unique identifier (UUID4)\n          required: true\n      tags:\n        - objects\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedObject'\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          headers:\n            Content-Crs:\n              schema:\n                type: string\n                enum:\n                  - EPSG:4326\n              description: 'The ''Coordinate Reference System'' (CRS) of the request\n                data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326\n                is the same as WGS84).'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n          description: OK\n    delete:\n      operationId: object_delete\n      description: Delete an OBJECT and all RECORDs belonging to it.\n      parameters:\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n            description: Unique identifier (UUID4)\n          required: true\n      tags:\n        - objects\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '204':\n          description: No response body\n  /objects/{uuid}/history:\n    get:\n      operationId: object_history\n      description: Retrieve all RECORDs of an OBJECT.\n      parameters:\n        - in: header\n          name: Accept-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The desired ''Coordinate Reference System'' (CRS) of the response\n          data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is\n          the same as WGS84).'\n        - name: page\n          required: false\n          in: query\n          description: A page number within the paginated result set.\n          schema:\n            type: integer\n        - name: pageSize\n          required: false\n          in: query\n          description: Number of results to return per page.\n          schema:\n            type: integer\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n            description: Unique identifier (UUID4)\n          required: true\n      tags:\n        - objects\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          headers:\n            Content-Crs:\n              schema:\n                type: string\n                enum:\n                  - EPSG:4326\n              description: 'The ''Coordinate Reference System'' (CRS) of the request\n                data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326\n                is the same as WGS84).'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedHistoryRecordList'\n          description: OK\n  /objects/search:\n    post:\n      operationId: object_search\n      description: Perform a (geo) search on OBJECTs.\n      parameters:\n        - in: header\n          name: Accept-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The desired ''Coordinate Reference System'' (CRS) of the response\n          data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is\n          the same as WGS84).'\n        - in: header\n          name: Content-Crs\n          schema:\n            type: string\n            enum:\n              - EPSG:4326\n          description: 'The ''Coordinate Reference System'' (CRS) of the request data.\n          According to the GeoJSON spec, WGS84 is the default (EPSG: 4326 is the same\n          as WGS84).'\n          required: true\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            enum:\n              - application/json\n          description: Content type of the request body.\n          required: true\n        - name: page\n          required: false\n          in: query\n          description: A page number within the paginated result set.\n          schema:\n            type: integer\n        - name: pageSize\n          required: false\n          in: query\n          description: Number of results to return per page.\n          schema:\n            type: integer\n      tags:\n        - objects\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              allOf:\n                - $ref: '#/components/schemas/ObjectSearch'\n                - type: object\n                  properties:\n                    type:\n                      type: string\n                      format: uri\n                      maxLength: 1000\n                      minLength: 1\n                      description: Url reference to OBJECTTYPE in Objecttypes API\n                    data_attrs:\n                      type: string\n                      description: |\n                        Only include objects that have attributes with certain values.\n                        Data filtering expressions are comma-separated and are structured as follows:\n                        A valid parameter value has the form `key__operator__value`.\n                        `key` is the attribute name, `operator` is the comparison operator to be used and `value` is the attribute value.\n                        Note: Values can be string, numeric, or dates (ISO format; YYYY-MM-DD).\n\n                        Valid operator values are:\n                        * `exact` - equal to\n                        * `gt` - greater than\n                        * `gte` - greater than or equal to\n                        * `lt` - lower than\n                        * `lte` - lower than or equal to\n                        * `icontains` - case-insensitive partial match\n\n                        `value` may not contain double underscore or comma characters.\n                        `key` may not contain comma characters and includes double underscore only if it indicates nested attributes.\n\n                        Example: in order to display only objects with `height` equal to 100, query `data_attrs=height__exact__100`\n                        should be used. If `height` is nested inside `dimensions` attribute, query should look like\n                        `data_attrs=dimensions__height__exact__100`\n                    date:\n                      type: string\n                      format: date\n                      description: Display record data for the specified material date,\n                        i.e. the specified date would be between `startAt` and `endAt`\n                        attributes. The default value is today\n                    registrationDate:\n                      type: string\n                      format: date\n                      description: Display record data for the specified registration\n                        date, i.e. the specified date would be between `registrationAt`\n                        attributes of different records\n                    data_icontains:\n                      type: string\n                      description: Search in all `data` values of string properties.\n                    ordering:\n                      type: string\n                      description: 'Comma-separated fields, which are used to order\n                      results. For descending order user ''-'' as prefix. Nested fileds\n                      are also supported. For example: ''-record__data__length,record__index''.'\n      security:\n        - tokenAuth: [ ]\n      responses:\n        '200':\n          headers:\n            Content-Crs:\n              schema:\n                type: string\n                enum:\n                  - EPSG:4326\n              description: 'The ''Coordinate Reference System'' (CRS) of the request\n                data. According to the GeoJSON spec, WGS84 is the default (EPSG: 4326\n                is the same as WGS84).'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedObjectList'\n          description: OK\n  /permissions:\n    get:\n      operationId: permission_list\n      description: Retrieve a list of permissions available for the user\n      parameters:\n        - name: page\n          required: false\n          in: query\n          description: A page number within the paginated result set.\n          schema:\n            type: integer\n        - name: pageSize\n          required: false\n          in: query\n          description: Number of results to return per page.\n          schema:\n            type: integer\n      tags:\n        - permissions\n      security:\n        - tokenAuth: [ ]\n        - { }\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPermissionList'\n          description: OK\ncomponents:\n  schemas:\n    GeoJSONGeometry:\n      oneOf:\n        - $ref: '#/components/schemas/Point'\n        - $ref: '#/components/schemas/MultiPoint'\n        - $ref: '#/components/schemas/LineString'\n        - $ref: '#/components/schemas/MultiLineString'\n        - $ref: '#/components/schemas/Polygon'\n        - $ref: '#/components/schemas/MultiPolygon'\n        - $ref: '#/components/schemas/GeometryCollection'\n      discriminator:\n        propertyName: type\n        mapping:\n          Point: '#/components/schemas/Point'\n          MultiPoint: '#/components/schemas/MultiPoint'\n          LineString: '#/components/schemas/LineString'\n          MultiLineString: '#/components/schemas/MultiLineString'\n          Polygon: '#/components/schemas/Polygon'\n          MultiPolygon: '#/components/schemas/MultiPolygon'\n          GeometryCollection: '#/components/schemas/GeometryCollection'\n    GeoWithin:\n      type: object\n      properties:\n        within:\n          $ref: '#/components/schemas/GeoJSONGeometry'\n    Geometry:\n      type: object\n      title: Geometry\n      description: GeoJSON geometry\n      required:\n        - type\n      externalDocs:\n        url: https://tools.ietf.org/html/rfc7946#section-3.1\n      properties:\n        type:\n          type: string\n          description: The geometry type\n    GeometryCollection:\n      type: object\n      description: GeoJSON geometry collection\n      externalDocs:\n        url: https://tools.ietf.org/html/rfc7946#section-3.1.8\n      allOf:\n        - $ref: '#/components/schemas/Geometry'\n        - type: object\n          required:\n            - geometries\n          properties:\n            geometries:\n              type: array\n              items:\n                $ref: '#/components/schemas/Geometry'\n    HistoryRecord:\n      type: object\n      properties:\n        index:\n          type: integer\n          readOnly: true\n          description: Incremental index number of the object record.\n        typeVersion:\n          type: integer\n          maximum: 32767\n          description: Version of the OBJECTTYPE for data in the object record\n          minimum: 0\n        data:\n          type: object\n          additionalProperties: { }\n          description: Object data, based on OBJECTTYPE\n        geometry:\n          allOf:\n            - $ref: '#/components/schemas/GeoJSONGeometry'\n          nullable: true\n          description: Point, linestring or polygon object which represents the coordinates\n            of the object. Geometry can be added only if the related OBJECTTYPE allows\n            this (`OBJECTTYPE.allowGeometry = true` or `OBJECTTYPE.allowGeometry`\n            doesn't exist)\n        startAt:\n          type: string\n          format: date\n          description: Legal start date of the object record\n        endAt:\n          type: string\n          format: date\n          readOnly: true\n          description: Legal end date of the object record\n        registrationAt:\n          type: string\n          format: date\n          readOnly: true\n          description: The date when the record was registered in the system\n        correctionFor:\n          type: string\n          readOnly: true\n          description: Index of the record corrected by the current record\n        correctedBy:\n          type: string\n          readOnly: true\n          description: Index of the record, which corrects the current record\n      required:\n        - startAt\n        - typeVersion\n    LineString:\n      type: object\n      description: GeoJSON line-string geometry\n      externalDocs:\n        url: https://tools.ietf.org/html/rfc7946#section-3.1.4\n      allOf:\n        - $ref: '#/components/schemas/Geometry'\n        - type: object\n          required:\n            - coordinates\n          properties:\n            coordinates:\n              type: array\n              items:\n                $ref: '#/components/schemas/Point2D'\n              minItems: 2\n    ModeEnum:\n      enum:\n        - read_only\n        - read_and_write\n      type: string\n    MultiLineString:\n      type: object\n      description: GeoJSON multi-line-string geometry\n      externalDocs:\n        url: https://tools.ietf.org/html/rfc7946#section-3.1.5\n      allOf:\n        - $ref: '#/components/schemas/Geometry'\n        - type: object\n          required:\n            - coordinates\n          properties:\n            coordinates:\n              type: array\n              items:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Point2D'\n    MultiPoint:\n      type: object\n      description: GeoJSON multi-point geometry\n      externalDocs:\n        url: https://tools.ietf.org/html/rfc7946#section-3.1.3\n      allOf:\n        - $ref: '#/components/schemas/Geometry'\n        - type: object\n          required:\n            - coordinates\n          properties:\n            coordinates:\n              type: array\n              items:\n                $ref: '#/components/schemas/Point2D'\n    MultiPolygon:\n      type: object\n      description: GeoJSON multi-polygon geometry\n      externalDocs:\n        url: https://tools.ietf.org/html/rfc7946#section-3.1.7\n      allOf:\n        - $ref: '#/components/schemas/Geometry'\n        - type: object\n          required:\n            - coordinates\n          properties:\n            coordinates:\n              type: array\n              items:\n                type: array\n                items:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Point2D'\n    Object:\n      type: object\n      description: |-\n        this mixin allows selecting fields for serializer in the query param\n        It also supports nested fields.\n      properties:\n        url:\n          type: string\n          format: uri\n          minLength: 1\n          maxLength: 1000\n          description: URL reference to this object. This is the unique identification\n            and location of this object.\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          description: Unique identifier (UUID4)\n        type:\n          type: string\n          format: uri\n          minLength: 1\n          maxLength: 1000\n          description: Url reference to OBJECTTYPE in Objecttypes API\n        record:\n          allOf:\n            - $ref: '#/components/schemas/ObjectRecord'\n          description: State of the OBJECT at a certain time\n      required:\n        - record\n        - type\n    ObjectRecord:\n      type: object\n      properties:\n        index:\n          type: integer\n          readOnly: true\n          description: Incremental index number of the object record.\n        typeVersion:\n          type: integer\n          maximum: 32767\n          description: Version of the OBJECTTYPE for data in the object record\n          minimum: 0\n        data:\n          type: object\n          additionalProperties: { }\n          description: Object data, based on OBJECTTYPE\n        geometry:\n          allOf:\n            - $ref: '#/components/schemas/GeoJSONGeometry'\n          nullable: true\n          description: Point, linestring or polygon object which represents the coordinates\n            of the object. Geometry can be added only if the related OBJECTTYPE allows\n            this (`OBJECTTYPE.allowGeometry = true` or `OBJECTTYPE.allowGeometry`\n            doesn't exist)\n        startAt:\n          type: string\n          format: date\n          description: Legal start date of the object record\n        endAt:\n          type: string\n          format: date\n          readOnly: true\n          description: Legal end date of the object record\n        registrationAt:\n          type: string\n          format: date\n          readOnly: true\n          description: The date when the record was registered in the system\n        correctionFor:\n          type: string\n          description: Index of the record corrected by the current record\n        correctedBy:\n          type: string\n          readOnly: true\n          description: Index of the record, which corrects the current record\n      required:\n        - startAt\n        - typeVersion\n    ObjectSearch:\n      type: object\n      properties:\n        geometry:\n          $ref: '#/components/schemas/GeoWithin'\n    PaginatedHistoryRecordList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/HistoryRecord'\n    PaginatedObjectList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Object'\n    PaginatedPermissionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'\n    PatchedObject:\n      type: object\n      description: |-\n        this mixin allows selecting fields for serializer in the query param\n        It also supports nested fields.\n      properties:\n        url:\n          type: string\n          format: uri\n          minLength: 1\n          maxLength: 1000\n          description: URL reference to this object. This is the unique identification\n            and location of this object.\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          description: Unique identifier (UUID4)\n        type:\n          type: string\n          format: uri\n          minLength: 1\n          maxLength: 1000\n          description: Url reference to OBJECTTYPE in Objecttypes API\n        record:\n          allOf:\n            - $ref: '#/components/schemas/ObjectRecord'\n          description: State of the OBJECT at a certain time\n    Permission:\n      type: object\n      properties:\n        type:\n          type: string\n          format: uri\n          minLength: 1\n          maxLength: 1000\n          description: Url reference to OBJECTTYPE in Objecttypes API\n        mode:\n          allOf:\n            - $ref: '#/components/schemas/ModeEnum'\n          description: Permission mode\n        use_fields:\n          type: boolean\n          description: Use field-based authorization\n        fields:\n          type: object\n          additionalProperties: { }\n          nullable: true\n          title: Mode\n          description: Fields allowed for this token in relation to objecttype versions.\n            Supports only first level of the `record.data` properties\n      required:\n        - mode\n        - type\n    Point:\n      type: object\n      description: GeoJSON point geometry\n      externalDocs:\n        url: https://tools.ietf.org/html/rfc7946#section-3.1.2\n      allOf:\n        - $ref: '#/components/schemas/Geometry'\n        - type: object\n          required:\n            - coordinates\n          properties:\n            coordinates:\n              $ref: '#/components/schemas/Point2D'\n    Point2D:\n      type: array\n      title: Point2D\n      description: A 2D point\n      items:\n        type: number\n      maxItems: 2\n      minItems: 2\n    Polygon:\n      type: object\n      description: GeoJSON polygon geometry\n      externalDocs:\n        url: https://tools.ietf.org/html/rfc7946#section-3.1.6\n      allOf:\n        - $ref: '#/components/schemas/Geometry'\n        - type: object\n          required:\n            - coordinates\n          properties:\n            coordinates:\n              type: array\n              items:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Point2D'\n  securitySchemes:\n    tokenAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Token-based authentication with required prefix \"Token\"\ntags:\n  - name: objects\n  - name: permissions\nexternalDocs:\n  url: https://objects-and-objecttypes-api.readthedocs.io/\nservers:\n  - url: /api/v2\n",
			"canonicalURL": "/github.com/NL-AMS-LOCGOV/zaakafhandelcomponent@369de61f61bd7084dd54808f8977b2c1d9030a5a/-/blob/api-specs/or/objects-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NL-AMS-LOCGOV/zaakafhandelcomponent/blob/369de61f61bd7084dd54808f8977b2c1d9030a5a/api-specs/or/objects-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/objects\": get: responses: code 200: contents: media: \"application/json\": generate schema: field results: item: field record: allOf: field geometry: allOf: oneOf: discriminator: unable to map \"Point\" to \"https://raw.githubusercontent.com/NL-AMS-LOCGOV/zaakafhandelcomponent/369de61f61bd7084dd54808f8977b2c1d9030a5a/api-specs/or/objects-openapi.yaml#/components/schemas/Point\""
}