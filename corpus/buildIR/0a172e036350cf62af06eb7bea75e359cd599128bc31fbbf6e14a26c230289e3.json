{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/blockchain/lib-exchange-client"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "kotlin/api/openapi.yaml",
			"byteSize": 31327,
			"content": "openapi: 3.0.0\ninfo:\n  description: Blockchain.com Exchange REST API\n  title: Blockchain.com Exchange REST API\n  version: 1.0.0\nservers:\n- url: https://api.exchange.blockchain.com\nsecurity:\n- ApiKeyAuth: []\npaths:\n  /l2/{pair}:\n    get:\n      parameters:\n      - description: Pair\n        explode: false\n        in: path\n        name: pair\n        required: true\n        schema:\n          $ref: '#/components/schemas/symbol'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderBook'\n          description: Success\n      security:\n      - ApiKeyAuth: []\n      - {}\n      summary: L2 Order Book\n      x-accepts: application/json\n  /l3/{pair}:\n    get:\n      parameters:\n      - description: Pair\n        explode: false\n        in: path\n        name: pair\n        required: true\n        schema:\n          $ref: '#/components/schemas/symbol'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderBook'\n          description: Success\n      security:\n      - ApiKeyAuth: []\n      - {}\n      summary: L3 Order Book\n      x-accepts: application/json\n  /tickers:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PriceEvent'\n                type: array\n          description: Success\n      security:\n      - ApiKeyAuth: []\n      - {}\n      summary: Price\n      x-accepts: application/json\n  /tickers/{pair}:\n    get:\n      parameters:\n      - description: Pair\n        explode: false\n        in: path\n        name: pair\n        required: true\n        schema:\n          $ref: '#/components/schemas/symbol'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PriceEvent'\n          description: Success\n      security:\n      - ApiKeyAuth: []\n      - {}\n      summary: Price\n      x-accepts: application/json\n  /symbols:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  $ref: '#/components/schemas/SymbolStatus'\n                type: object\n          description: Success\n      security:\n      - ApiKeyAuth: []\n      - {}\n      summary: Symbols\n      x-accepts: application/json\n  /symbols/{pair}:\n    get:\n      parameters:\n      - description: Pair\n        explode: false\n        in: path\n        name: pair\n        required: true\n        schema:\n          $ref: '#/components/schemas/symbol'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SymbolStatus'\n          description: Success\n      security:\n      - ApiKeyAuth: []\n      - {}\n      summary: Symbols\n      x-accepts: application/json\n  /trades:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/OrderSummary'\n                type: array\n          description: Success\n      summary: List historical trades\n      x-accepts: application/json\n  /accounts:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BalanceMap'\n          description: Success\n      summary: Receive current account balances\n      x-accepts: application/json\n  /accounts/{account}/{currency}:\n    get:\n      parameters:\n      - description: Account\n        explode: false\n        in: path\n        name: account\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Currency\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          $ref: '#/components/schemas/currency'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balance'\n          description: Success\n      summary: Receive current account balances\n      x-accepts: application/json\n  /fees:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fees'\n          description: Success\n      summary: Get current fee level\n      x-accepts: application/json\n  /orders:\n    delete:\n      parameters:\n      - explode: true\n        in: query\n        name: symbol\n        required: false\n        schema:\n          $ref: '#/components/schemas/symbol'\n        style: form\n      responses:\n        \"200\":\n          description: Success\n      summary: Delete all open orders (of a symbol, if specified)\n      x-accepts: application/json\n    get:\n      parameters:\n      - description: Order Status\n        explode: true\n        in: query\n        name: status\n        required: false\n        schema:\n          $ref: '#/components/schemas/OrderStatus'\n        style: form\n      - description: Time From\n        explode: true\n        in: query\n        name: from\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: Time To\n        explode: true\n        in: query\n        name: to\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: Offset\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/OrderSummary'\n                type: array\n          description: Success\n      summary: Get a list of orders\n      x-accepts: application/json\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrderRequest'\n        description: Trade\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderSummary'\n          description: Success\n      summary: Add an order\n      x-contentType: application/json\n      x-accepts: application/json\n  /orders/{orderId}:\n    delete:\n      parameters:\n      - description: Order ID\n        explode: false\n        in: path\n        name: orderId\n        required: true\n        schema:\n          $ref: '#/components/schemas/ExchangeOrderId'\n        style: simple\n      responses:\n        \"200\":\n          description: Success\n      summary: Cancel a trade\n      x-accepts: application/json\n    get:\n      parameters:\n      - description: Order ID\n        explode: false\n        in: path\n        name: orderId\n        required: true\n        schema:\n          $ref: '#/components/schemas/ExchangeOrderId'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderSummary'\n          description: Success\n        \"404\":\n          description: Not found\n      summary: Get a specific order\n      x-accepts: application/json\n  /whitelist:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/WhitelistEntry'\n                type: array\n          description: Success\n      summary: Get a list of all whitelisted withdrawal accounts\n      x-accepts: application/json\n  /whitelist/{currency}:\n    get:\n      parameters:\n      - description: Currency\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          $ref: '#/components/schemas/currency'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/WhitelistEntry'\n                type: array\n          description: Success\n      summary: Get a list of all whitelisted withdrawal accounts\n      x-accepts: application/json\n  /withdrawals:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateWithdrawalRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateWithdrawalResponse'\n          description: Success\n      summary: Request a withdrawal\n      x-contentType: application/json\n      x-accepts: application/json\n  /withdrawals/{withdrawalId}:\n    get:\n      parameters:\n      - description: Withdrawal ID\n        explode: false\n        in: path\n        name: withdrawalId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWithdrawalResponse'\n          description: Success\n        \"404\":\n          description: Not found\n      summary: Get status about a withdrawal\n      x-accepts: application/json\n  /deposit-addresses/{currency}:\n    get:\n      parameters:\n      - description: Currency\n        explode: false\n        in: path\n        name: currency\n        required: true\n        schema:\n          $ref: '#/components/schemas/currency'\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DepositAddress'\n          description: Success\n      summary: Get a deposit address\n      x-accepts: application/json\ncomponents:\n  parameters:\n    pairParam:\n      description: Pair\n      explode: false\n      in: path\n      name: pair\n      required: true\n      schema:\n        $ref: '#/components/schemas/symbol'\n      style: simple\n    currencyParam:\n      description: Currency\n      explode: false\n      in: path\n      name: currency\n      required: true\n      schema:\n        $ref: '#/components/schemas/currency'\n      style: simple\n    timeFromParam:\n      description: Pair\n      explode: false\n      in: path\n      name: pair\n      required: true\n      schema:\n        $ref: '#/components/schemas/symbol'\n      style: simple\n    orderIdParam:\n      description: Order ID\n      explode: false\n      in: path\n      name: orderId\n      required: true\n      schema:\n        $ref: '#/components/schemas/ExchangeOrderId'\n      style: simple\n    orderStatusFilter:\n      description: Order Status\n      explode: true\n      in: query\n      name: status\n      required: false\n      schema:\n        $ref: '#/components/schemas/OrderStatus'\n      style: form\n    timeFromFilter:\n      description: Time From\n      explode: true\n      in: query\n      name: from\n      required: false\n      schema:\n        format: int64\n        type: integer\n      style: form\n    timeToFilter:\n      description: Time To\n      explode: true\n      in: query\n      name: to\n      required: false\n      schema:\n        format: int64\n        type: integer\n      style: form\n    offsetFilter:\n      description: Offset\n      explode: true\n      in: query\n      name: offset\n      required: false\n      schema:\n        format: int64\n        type: integer\n      style: form\n  schemas:\n    symbol:\n      description: Blockchain symbol identifier\n      example: BTC-USD\n      pattern: ^[A-Z]{3,5}-[A-Z]{3,5}$\n      type: string\n    currency:\n      example: BTC\n      pattern: ^[A-Z]{3,5}$\n      type: string\n    ExchangeOrderId:\n      description: The unique order id assigned by the exchange\n      example: 11111111\n      format: int64\n      type: integer\n    ClientOrderId:\n      description: Reference field provided by client and cannot exceed 20 characters\n      example: ABC\n      maxLength: 20\n      type: string\n    WithdrawalId:\n      description: Unique ID for this withdrawal\n      type: string\n    WithdrawalStatus:\n      enum:\n      - PENDING\n      - COMPLETED\n      type: string\n    OrderStatus:\n      enum:\n      - pending\n      - open\n      - rejected\n      - cancelled\n      - filled\n      - partial\n      - expired\n      example: filled\n      type: string\n    timeInForceLimit:\n      description: '\"GTC\" for Good Till Cancel, \"IOC\" for Immediate or Cancel, \"FOK\"\n        for Fill or Kill, \"GTD\" Good Till Date'\n      enum:\n      - GTC\n      - IOC\n      - FOK\n      - GTD\n      example: GTC\n      type: string\n    timeInForceStop:\n      description: '\"GTC\" for Good Till Cancel, \"GTD\" Good Till Date'\n      enum:\n      - GTC\n      - GTD\n      example: GTC\n      type: string\n    side:\n      description: '\"buy\" for Buy, \"sell\" for Sell'\n      enum:\n      - buy\n      - sell\n      example: buy\n      type: string\n    orderQty:\n      description: The order size in the terms of the base currency\n      example: 10.23\n      format: double\n      type: number\n    price:\n      description: The limit price for the order\n      example: 0.12345\n      format: double\n      type: number\n    expireDate:\n      description: expiry date in the format YYYYMMDD\n      example: 20190318\n      maximum: 20501231\n      minimum: 20200101\n      type: integer\n    stopPx:\n      description: Price to trigger the stop order\n      example: 3500.12\n      format: double\n      type: number\n    minQty:\n      description: The minimum quantity required for an IOC fill\n      example: 10.0\n      format: double\n      type: number\n    execInst:\n      description: 'The order is placed with Add Liquidity Only (aka Post Only): it\n        will not match liquidity immediately. It will be rejected instead of matching\n        liquidity in the market.'\n      example: ALO\n      type: string\n    BaseOrder:\n      properties:\n        ordType:\n          enum:\n          - market\n          - limit\n          - stop\n          - stopLimit\n          title: Order type\n          type: string\n        clOrdId:\n          description: Reference field provided by client and cannot exceed 20 characters\n          example: ABC\n          maxLength: 20\n          type: string\n        symbol:\n          description: Blockchain symbol identifier\n          example: BTC-USD\n          pattern: ^[A-Z]{3,5}-[A-Z]{3,5}$\n          type: string\n        side:\n          $ref: '#/components/schemas/side'\n        orderQty:\n          description: The order size in the terms of the base currency\n          example: 10.23\n          format: double\n          type: number\n      required:\n      - clOrdId\n      - orderQty\n      - side\n      - symbol\n      type: object\n    MarketOrder:\n      allOf:\n      - $ref: '#/components/schemas/BaseOrder'\n      - $ref: '#/components/schemas/MarketOrder_allOf'\n      type: object\n    LimitOrder:\n      allOf:\n      - $ref: '#/components/schemas/BaseOrder'\n      - $ref: '#/components/schemas/LimitOrder_allOf'\n      type: object\n    StopOrder:\n      allOf:\n      - $ref: '#/components/schemas/BaseOrder'\n      - $ref: '#/components/schemas/StopOrder_allOf'\n      type: object\n    StopLimitOrder:\n      allOf:\n      - $ref: '#/components/schemas/BaseOrder'\n      - $ref: '#/components/schemas/StopLimitOrder_allOf'\n      type: object\n    CreateOrderRequest:\n      discriminator:\n        mapping:\n          market: '#/components/schemas/MarketOrder'\n          limit: '#/components/schemas/LimitOrder'\n          stopLimit: '#/components/schemas/StopLimitOrder'\n          stop: '#/components/schemas/StopOrder'\n        propertyName: ordType\n      oneOf:\n      - $ref: '#/components/schemas/MarketOrder'\n      - $ref: '#/components/schemas/LimitOrder'\n      - $ref: '#/components/schemas/StopLimitOrder'\n      - $ref: '#/components/schemas/StopOrder'\n      type: object\n      x-one-of-name: CreateOrderRequest\n    OrderSummary:\n      example:\n        exOrdId: 11111111\n        ordStatus: filled\n        clOrdId: ABC\n        avgPx: 345.33\n        lastPx: 3500.12\n        lastShares: 0.5678\n        leavesQty: 10.0\n        cumQty: 0.123345\n        transactTime: 2019-08-13T13:15:35.000955868Z\n      properties:\n        exOrdId:\n          description: The unique order id assigned by the exchange\n          example: 11111111\n          format: int64\n          type: integer\n        clOrdId:\n          description: Reference field provided by client and cannot exceed 20 characters\n          example: ABC\n          maxLength: 20\n          type: string\n        ordStatus:\n          $ref: '#/components/schemas/OrderStatus'\n        lastShares:\n          description: The executed quantity for the order's last fill\n          example: 0.5678\n          format: double\n          type: number\n        lastPx:\n          description: The executed price for the last fill\n          example: 3500.12\n          format: double\n          type: number\n        leavesQty:\n          description: For Open and Partially Filled orders this is the remaining\n            quantity open for execution. For Cancelled and Expired orders this is\n            the quantity than was still open before cancellation/expiration. For Rejected\n            order this is equal to orderQty. For other states this is always zero.\n          example: 10.0\n          format: double\n          type: number\n        cumQty:\n          description: The quantity of the order which has been filled\n          example: 0.123345\n          format: double\n          type: number\n        transactTime:\n          description: The time the transaction occurred\n          example: 2019-08-13T13:15:35.000955868Z\n          format: date-time\n          type: string\n        avgPx:\n          description: Calculated the Volume Weighted Average Price of all fills for\n            this order\n          example: 345.33\n          format: double\n          type: number\n      type: object\n    CancelOrderRequest:\n      properties:\n        action:\n          enum:\n          - CancelOrderRequest\n          type: string\n        orderID:\n          description: The unique order id assigned by the exchange\n          example: 11111111\n          format: int64\n          type: integer\n      required:\n      - action\n      - orderID\n      type: object\n    BalanceMap:\n      additionalProperties:\n        $ref: '#/components/schemas/BalanceList'\n      example:\n        primary:\n        - balance_local: 38.746779155\n          balance: 0.00366963\n          rate: 10558.77\n          available: 0.00266963\n          currency: BTC\n          available_local: 28.188009155\n        - balance_local: 38.746779155\n          balance: 0.00366963\n          rate: 10558.77\n          available: 0.00266963\n          currency: BTC\n          available_local: 28.188009155\n      properties:\n        primary:\n          items:\n            $ref: '#/components/schemas/Balance'\n          type: array\n      required:\n      - primary\n      type: object\n    BalanceList:\n      items:\n        $ref: '#/components/schemas/Balance'\n      type: array\n    Balance:\n      example:\n        balance_local: 38.746779155\n        balance: 0.00366963\n        rate: 10558.77\n        available: 0.00266963\n        currency: BTC\n        available_local: 28.188009155\n      properties:\n        currency:\n          example: BTC\n          pattern: ^[A-Z]{3,5}$\n          type: string\n        balance:\n          example: 0.00366963\n          format: double\n          type: number\n        available:\n          example: 0.00266963\n          format: double\n          type: number\n        balance_local:\n          example: 38.746779155\n          format: double\n          type: number\n        available_local:\n          example: 28.188009155\n          format: double\n          type: number\n        rate:\n          example: 10558.77\n          format: double\n          type: number\n      required:\n      - available\n      - available_local\n      - balance\n      - balance_local\n      - currency\n      - rate\n      type: object\n    Fees:\n      example:\n        makerRate: 0.0014\n        tier: 1\n        volumeInUSD: 1500.00\n        takerRate: 0.0024\n      properties:\n        tier:\n          example: 1\n          type: integer\n        makerRate:\n          example: 0.0014\n          format: double\n          type: number\n        takerRate:\n          example: 0.0024\n          format: double\n          type: number\n        volumeInUSD:\n          example: 1500.00\n          format: double\n          type: number\n      required:\n      - makerRate\n      - takerRate\n      - tier\n      - volumeInUSD\n      type: object\n    WhitelistEntry:\n      example:\n        name: name\n        currency: BTC\n        whitelistId: whitelistId\n      properties:\n        whitelistId:\n          description: Unique ID for each whitelist entry\n          type: string\n        name:\n          description: User specified name for this entry\n          type: string\n        currency:\n          example: BTC\n          pattern: ^[A-Z]{3,5}$\n          type: string\n      type: object\n    CreateWithdrawalRequest:\n      example:\n        amount: 12.23\n        beneficiary: beneficiary\n        currency: BTC\n      properties:\n        amount:\n          description: The amount to withdraw in the currency specified\n          example: 12.23\n          format: double\n          type: number\n        currency:\n          example: BTC\n          pattern: ^[A-Z]{3,5}$\n          type: string\n        beneficiary:\n          type: string\n      required:\n      - amount\n      - beneficiary\n      - currency\n      type: object\n    CreateWithdrawalResponse:\n      example:\n        withdrawalId: withdrawalId\n      properties:\n        withdrawalId:\n          description: Unique ID for this withdrawal\n          type: string\n        state:\n          $ref: '#/components/schemas/WithdrawalStatus'\n      required:\n      - state\n      - withdrawalId\n      type: object\n    GetWithdrawalResponse:\n      example:\n        withdrawalId: withdrawalId\n        updatedAt: 2020-03-28T15:48:05.898Z\n      properties:\n        withdrawalId:\n          description: Unique ID for this withdrawal\n          type: string\n        state:\n          $ref: '#/components/schemas/WithdrawalStatus'\n        updatedAt:\n          description: Timestamp of the last update to this withdrawal\n          example: 2020-03-28T15:48:05.898Z\n          type: string\n      required:\n      - state\n      - withdrawalId\n      type: object\n    DepositAddress:\n      discriminator:\n        mapping:\n          crypto: '#/components/schemas/DepositAddressCrypto'\n        propertyName: type\n      oneOf:\n      - $ref: '#/components/schemas/DepositAddressCrypto'\n      x-one-of-name: DepositAddress\n    DepositAddressCrypto:\n      properties:\n        type:\n          type: string\n        address:\n          description: Address to deposit to\n          type: string\n        memo:\n          description: Memo to be used with this deposit, if applicable\n          type: string\n      required:\n      - address\n      - type\n      type: object\n    BalanceResponse:\n      properties:\n        balances:\n          items:\n            $ref: '#/components/schemas/Balance'\n          type: array\n        total_available_local:\n          example: 65.477864168\n          format: double\n          type: number\n        total_balance_local:\n          example: 87.696634168\n          format: double\n          type: number\n      required:\n      - balances\n      - total_available_local\n      - total_balance_local\n      type: object\n    PriceEvent:\n      example:\n        symbol: BTC-USD\n        last_trade_price: 5000.0\n        price:\n        - 0.8008281904610115\n        - 0.8008281904610115\n        - 0.8008281904610115\n        - 0.8008281904610115\n        - 0.8008281904610115\n        volume_24h: 0.3015\n        price_24h: 4998.0\n      properties:\n        symbol:\n          description: Blockchain symbol identifier\n          example: BTC-USD\n          pattern: ^[A-Z]{3,5}-[A-Z]{3,5}$\n          type: string\n        price_24h:\n          example: 4998.0\n          format: double\n          type: number\n        volume_24h:\n          example: 0.3015\n          format: double\n          type: number\n        last_trade_price:\n          example: 5000.0\n          format: double\n          type: number\n        price:\n          items:\n            format: double\n            type: number\n          maxItems: 6\n          minItems: 6\n          type: array\n      type: object\n    PriceEventList:\n      properties:\n        orders:\n          items:\n            $ref: '#/components/schemas/PriceEvent'\n          type: array\n      type: object\n    SymbolStatus:\n      example:\n        base_currency: BTC-USD\n        counter_currency: BTC-USD\n        max_order_size: 0\n        max_order_size_scale: 8\n        imbalance: 0.0\n        base_currency_scale: 8\n        auction_price: 0.0\n        counter_currency_scale: 2\n        min_order_size: 10\n        lot_size_scale: 2\n        min_price_increment_scale: 0\n        auction_size: 0.0\n        min_order_size_scale: 2\n        min_price_increment: 10\n        lot_size: 5\n        auction_time: 1530\n        id: 1\n        status: open\n      properties:\n        base_currency:\n          description: Blockchain symbol identifier\n          example: BTC-USD\n          pattern: ^[A-Z]{3,5}-[A-Z]{3,5}$\n          type: string\n        base_currency_scale:\n          description: The number of decimals the currency can be split in\n          example: 8\n          type: integer\n        counter_currency:\n          description: Blockchain symbol identifier\n          example: BTC-USD\n          pattern: ^[A-Z]{3,5}-[A-Z]{3,5}$\n          type: string\n        counter_currency_scale:\n          description: The number of decimals the currency can be split in\n          example: 2\n          type: integer\n        min_price_increment:\n          description: The price of the instrument must be a multiple of min_price_increment\n            * (10^-min_price_increment_scale)\n          example: 10\n          format: int64\n          type: integer\n        min_price_increment_scale:\n          example: 0\n          type: integer\n        min_order_size:\n          description: The minimum quantity for an order for this instrument must\n            be min_order_size*(10^-min_order_size_scale)\n          example: 10\n          format: int64\n          type: integer\n        min_order_size_scale:\n          example: 2\n          type: integer\n        max_order_size:\n          description: The maximum quantity for an order for this instrument is max_order_size*(10^-max_order_size_scale).\n            If this equal to zero, there is no limit\n          example: 0\n          format: int64\n          type: integer\n        max_order_size_scale:\n          example: 8\n          type: integer\n        lot_size:\n          example: 5\n          format: int64\n          type: integer\n        lot_size_scale:\n          example: 2\n          type: integer\n        status:\n          description: Symbol status; open, close, suspend, halt, halt-freeze.\n          enum:\n          - open\n          - close\n          - suspend\n          - halt\n          - halt-freeze\n          type: string\n        id:\n          example: 1\n          format: int64\n          type: integer\n        auction_price:\n          description: If the symbol is halted and will open on an auction, this will\n            be the opening price.\n          example: 0.0\n          format: double\n          type: number\n        auction_size:\n          description: Opening size\n          example: 0.0\n          format: double\n          type: number\n        auction_time:\n          description: Opening time in HHMM format\n          example: 1530\n          type: integer\n        imbalance:\n          description: Auction imbalance. If \u003e 0 then there will be buy orders left\n            over at the auction price. If \u003c 0 then there will be sell orders left\n            over at the auction price.\n          example: 0.0\n          format: double\n          type: number\n      type: object\n    OrderBookEntry:\n      example:\n        qty: 1.45\n        num: 1\n        px: 8723.45\n      properties:\n        px:\n          example: 8723.45\n          format: double\n          type: number\n        qty:\n          example: 1.45\n          format: double\n          type: number\n        num:\n          example: 1\n          type: integer\n      type: object\n    OrderBook:\n      example:\n        symbol: BTC-USD\n        asks:\n        - qty: 1.45\n          num: 1\n          px: 8723.45\n        - qty: 1.45\n          num: 1\n          px: 8723.45\n        bids:\n        - qty: 1.45\n          num: 1\n          px: 8723.45\n        - qty: 1.45\n          num: 1\n          px: 8723.45\n      properties:\n        symbol:\n          description: Blockchain symbol identifier\n          example: BTC-USD\n          pattern: ^[A-Z]{3,5}-[A-Z]{3,5}$\n          type: string\n        bids:\n          items:\n            $ref: '#/components/schemas/OrderBookEntry'\n          type: array\n        asks:\n          items:\n            $ref: '#/components/schemas/OrderBookEntry'\n          type: array\n      type: object\n    UnauthorizedError:\n      description: API key is missing or invalid\n      properties:\n        error:\n          type: string\n    MarketOrder_allOf:\n      properties:\n        timeInForce:\n          $ref: '#/components/schemas/timeInForceLimit'\n      required:\n      - ordType\n    LimitOrder_allOf:\n      properties:\n        timeInForce:\n          $ref: '#/components/schemas/timeInForceLimit'\n        price:\n          description: The limit price for the order\n          example: 0.12345\n          format: double\n          type: number\n        expireDate:\n          description: expiry date in the format YYYYMMDD\n          example: 20190318\n          maximum: 20501231\n          minimum: 20200101\n          type: integer\n        minQty:\n          description: The minimum quantity required for an IOC fill\n          example: 10.0\n          format: double\n          type: number\n      required:\n      - ordType\n      - price\n      - timeInForce\n    StopOrder_allOf:\n      properties:\n        timeInForce:\n          $ref: '#/components/schemas/timeInForceStop'\n        stopPx:\n          description: The limit price for the order\n          example: 0.12345\n          format: double\n          type: number\n      required:\n      - ordType\n      - stopPx\n      - timeInForce\n    StopLimitOrder_allOf:\n      properties:\n        timeInForce:\n          $ref: '#/components/schemas/timeInForceStop'\n        price:\n          description: The limit price for the order\n          example: 0.12345\n          format: double\n          type: number\n        stopPx:\n          description: The limit price for the order\n          example: 0.12345\n          format: double\n          type: number\n      required:\n      - ordType\n      - price\n      - stopPx\n      - timeInForce\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Token\n      type: apiKey\n\n"
		}
	},
	"Error": "buildIR: make ir: path \"/deposit-addresses/{currency}\": get: responses: 200: contents: application/json: schema: oneOf: discriminator: unable to map crypto to #/components/schemas/DepositAddressCrypto"
}