{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/outline/openapi"
		},
		"file": {
			"name": "spec3.json",
			"size": 0,
			"path": "spec3.json",
			"byteSize": 158778,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Outline API\",\n    \"description\": \"# Introduction\\n\\nThe Outline API is structured in an RPC style. It enables you to\\nprogramatically interact with all aspects of Outline’s data – in fact, the\\nmain application is built on exactly the same API.\\n\\nThe API structure is available as an \\n[openapi specification](https://github.com/outline/openapi) if that’s your \\njam – it can be used to generate clients for most programming languages.\\n\\n# Making requests\\n\\nOutline’s API follows simple RPC style conventions where each API endpoint is\\na method on `https://app.getoutline.com/api/method`. Both `GET` and `POST` \\nmethods are supported but it’s recommended that you make all call using POST.\\nOnly HTTPS is supported and all response payloads are JSON.\\n\\nWhen making `POST` requests, request parameters are parsed depending on\\nContent-Type header. To make a call using JSON payload, you must pass\\nContent-Type: application/json header, here’s an example using CURL:\\n\\n```\\ncurl https://app.getoutline.com/api/documents.info\\n-X POST\\n-H 'authorization: Bearer MY_API_KEY'\\n-H 'content-type: application/json'\\n-H 'accept: application/json'\\n-d '{\\\"id\\\": \\\"outline-api-NTpezNwhUP\\\"}'\\n```\\n\\nOr, with JavaScript:\\n\\n```javascript\\nconst response = await fetch(\\\"https://app.getoutline.com/api/documents.info\\\", {\\n  method: \\\"POST\\\",\\n  headers: {\\n    Accept: \\\"application/json\\\",\\n    \\\"Content-Type\\\": \\\"application/json\\\",\\n    Authorization: 'Bearer MY_API_KEY'\\n  }\\n})\\n\\nconst body = await response.json();\\nconst document = body.data;\\n```\\n\\n# Authentication\\n\\nTo access API endpoints, you must provide a valid API key. You can create new\\nAPI keys in your [account settings](https://app.getoutline.com/settings). Be\\ncareful when handling your keys as they give access to all of your documents,\\nyou should treat them like passwords and they should never be committed to\\nsource control.\\n\\nTo authenticate with API, you can supply the API key as a header\\n(`Authorization: Bearer YOUR_API_KEY`) or as part of the payload using `token` \\nparameter. Header based authentication is highly recommended so that your keys\\ndon’t accidentally leak into logs.\\n\\nSome API endpoints allow unauthenticated requests for public resources and\\nthey can be called without an API key.\\n\\n# Errors\\n\\nAll successful API requests will be returned with a 200 or 201 status code\\nand `ok: true` in the response payload. If there’s an error while making the\\nrequest, the appropriate status code is returned with the error message:\\n\\n```\\n{\\n  \\\"ok\\\": false,\\n  \\\"error: \\\"Not Found\\\"\\n}\\n```\\n\\n# Pagination\\n\\nMost top-level API resources have support for \\\"list\\\" API methods. For instance,\\nyou can list users, documents, and collections. These list methods share\\ncommon parameters, taking both `limit` and `offset`.\\n\\nResponses will echo these parameters in the root `pagination` key, and also\\ninclude a `nextPath` key which can be used as a handy shortcut to fetch the\\nnext page of results. For example:\\n\\n```\\n{\\n  ok: true,\\n  status: 200,\\n  data: […],\\n  pagination: {\\n    limit: 25,\\n    offset: 0,\\n    nextPath: \\\"/api/documents.list?limit=25\u0026offset=25\\\"\\n  }\\n}\\n```\\n\\n# Policies\\n\\nMany API resources have associated \\\"policies\\\", these objects describe the\\ncurrent API keys authorized actions related to an individual resource. It\\nshould be noted that the policy \\\"id\\\" is identical to the resource it is\\nrelated to, policies themselves do not have unique identifiers.\\n\\nFor most usecases of the API, policies can be safely ignored. Calling\\nunauthorized methods will result in the appropriate response code – these are\\nused in the main Outline UI to adjust which elements are visible.\\n\",\n    \"version\": \"0.1.0\",\n    \"contact\": {\n      \"email\": \"hello@getoutline.com\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://app.getoutline.com/api\",\n      \"description\": \"Production\"\n    }\n  ],\n  \"security\": [\n    {\n      \"http\": []\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Attachments\",\n      \"description\": \"`Attachments` represent a file uploaded to cloud storage. They are created \\nbefore the upload happens from the client and store all the meta information\\nsuch as file type, size, and location.\\n\"\n    },\n    {\n      \"name\": \"Auth\",\n      \"description\": \"`Auth` represents the current API Keys authentication details. It can be \\nused to check that a token is still valid and load the IDs for the current\\nuser and team.\\n\"\n    },\n    {\n      \"name\": \"Collections\",\n      \"description\": \"`Collections` represent grouping of documents in the knowledge base, they \\noffer a way to structure information in a nested hierarchy and a level\\nat which read and write permissions can be granted to individual users or\\ngroups of users.\\n\"\n    },\n    {\n      \"name\": \"Documents\",\n      \"description\": \"`Documents` are what everything else revolves around. A document represents\\na single page of information and always returns the latest version of the\\ncontent. Documents are stored in [Markdown](https://spec.commonmark.org/)\\nformatting.\\n\"\n    },\n    {\n      \"name\": \"Events\",\n      \"description\": \"`Events` represent an artifact of an action. Whether it is creating a user,\\nediting a document, changing permissions, or any other action – an event\\nis created that can be used as an audit trail or activity stream.\\n\"\n    },\n    {\n      \"name\": \"FileOperations\",\n      \"description\": \"`FileOperations` represent background jobs for importing or exporting files.\\nYou can query the file operation to find the state of progress and any\\nresulting output.\\n\"\n    },\n    {\n      \"name\": \"Groups\",\n      \"description\": \"`Groups` represent a list of users that logically belong together, for \\nexample there might be groups for each department in your organization.\\nGroups can be granted access to collections with read or write permissions.\\n\"\n    },\n    {\n      \"name\": \"Revisions\",\n      \"description\": \"`Revisions` represent a snapshop of a document at a point in time. They \\nare used to keep tracking of editing and collaboration history – a document\\ncan also be restored to a previous revision if neccessary.\\n\"\n    },\n    {\n      \"name\": \"Shares\",\n      \"description\": \"`Shares` represent authorization to view a document without being a member\\nof the team. Shares are created in order to give access to documents publicly.\\nEach user that shares a document will have a unique share object.\\n\"\n    },\n    {\n      \"name\": \"Users\",\n      \"description\": \"`Users` represent an individual with access to the knowledge base. Users\\nare created automatically when signing in with SSO or when a user is\\ninvited via guest access.\\n\"\n    },\n    {\n      \"name\": \"Views\",\n      \"description\": \"`Views` represent a compressed record of an individual users views of a\\ndocument. Individual views are not recorded but a first, last and total \\nis kept per user.\\n\"\n    }\n  ],\n  \"paths\": {\n    \"/attachments.create\": {\n      \"post\": {\n        \"tags\": [\n          \"Attachments\"\n        ],\n        \"summary\": \"Create an attachment\",\n        \"description\": \"Creating an attachment object creates a database record and returns the inputs needed to generate a signed url and upload the file from the client to cloud storage.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"image.png\"\n                  },\n                  \"documentId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Identifier for the associated document, if any.\",\n                    \"format\": \"uuid\"\n                  },\n                  \"contentType\": {\n                    \"type\": \"string\",\n                    \"example\": \"image/png\"\n                  },\n                  \"size\": {\n                    \"type\": \"number\",\n                    \"description\": \"Size of the file attachment in bytes.\"\n                  }\n                },\n                \"required\": [\n                  \"name\",\n                  \"contentType\",\n                  \"size\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"maxUploadSize\": {\n                          \"type\": \"number\"\n                        },\n                        \"uploadUrl\": {\n                          \"type\": \"string\",\n                          \"format\": \"uri\"\n                        },\n                        \"form\": {\n                          \"type\": \"object\"\n                        },\n                        \"attachment\": {\n                          \"$ref\": \"#/components/schemas/Attachment\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/attachments.redirect\": {\n      \"post\": {\n        \"tags\": [\n          \"Attachments\"\n        ],\n        \"summary\": \"Retrieve an attachment\",\n        \"description\": \"Load an attachment from where it is stored based on the id. If the attachment is private then a temporary, signed url with embedded credentials is generated on demand.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the attachment.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"302\": {\n            \"description\": \"The url for the attachment\"\n          }\n        }\n      }\n    },\n    \"/attachments.delete\": {\n      \"post\": {\n        \"tags\": [\n          \"Attachments\"\n        ],\n        \"summary\": \"Delete an attachment\",\n        \"description\": \"Deleting an attachment is permanant. It will not delete references or links to the attachment that may exist in your documents.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\",\n                    \"description\": \"Unique identifier for the attachment.\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/auth.info\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Retrieve auth\",\n        \"description\": \"Retrieve authentication details for the current API key\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Auth\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          }\n        }\n      }\n    },\n    \"/auth.config\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Retrieve auth config\",\n        \"description\": \"Retrieve authentication options\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\",\n                          \"example\": \"Acme Inc\"\n                        },\n                        \"hostname\": {\n                          \"type\": \"string\",\n                          \"example\": \"acme-inc.getoutline.com\"\n                        },\n                        \"services\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\",\n                                \"example\": \"slack\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\",\n                                \"example\": \"Slack\"\n                              },\n                              \"authUrl\": {\n                                \"type\": \"string\",\n                                \"example\": \"https://acme-inc.getoutline.com/auth/slack\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/collections.info\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"Retrieve a collection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the collection.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Collection\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/collections.list\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"List all collections\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pagination\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Collection\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/collections.create\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"Create a collection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"Human Resources\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"example\": \"\"\n                  },\n                  \"color\": {\n                    \"type\": \"string\",\n                    \"example\": \"#123123\"\n                  },\n                  \"private\": {\n                    \"type\": \"boolean\",\n                    \"example\": false\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Collection\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/collections.update\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"Update a collection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"Human Resources\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"example\": \"\"\n                  },\n                  \"color\": {\n                    \"type\": \"string\",\n                    \"example\": \"#123123\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Collection\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/collections.add_user\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"Add a collection user\",\n        \"description\": \"This method allows you to add a user membership to the specified collection.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"userId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"userId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"users\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/User\"\n                          }\n                        },\n                        \"memberships\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Membership\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/collections.remove_user\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"Remove a collection user\",\n        \"description\": \"This method allows you to remove a user from the specified collection.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Identifier for the collection\",\n                    \"format\": \"uuid\"\n                  },\n                  \"userId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"userId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/collections.memberships\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"List all collection memberships\",\n        \"description\": \"This method allows you to list a collections individual memberships. It's important to note that memberships returned from this endpoint do not include group memberships.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"Identifier for the collection\",\n                        \"format\": \"uuid\"\n                      },\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Filter memberships by user names\",\n                        \"example\": \"jenny\"\n                      },\n                      \"permission\": {\n                        \"type\": \"string\",\n                        \"description\": \"Filter memberships by permissions\",\n                        \"enum\": [\n                          \"read\",\n                          \"read_write\",\n                          \"maintainer\"\n                        ]\n                      }\n                    },\n                    \"required\": [\n                      \"id\"\n                    ]\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"users\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/User\"\n                          }\n                        },\n                        \"memberships\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Membership\"\n                          }\n                        }\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/collections.add_group\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"Add a group to a collection\",\n        \"description\": \"This method allows you to give all members in a group access to a collection.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"groupId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"groupId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"collectionGroupMemberships\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/CollectionGroupMembership\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/collections.remove_group\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"Remove a collection group\",\n        \"description\": \"This method allows you to revoke all members in a group access to a collection. Note that members of the group may still retain access through other groups or individual memberships.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Identifier for the collection\",\n                    \"format\": \"uuid\"\n                  },\n                  \"groupId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"groupId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/collections.group_memberships\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"List all collection group members\",\n        \"description\": \"This method allows you to list a collections group memberships. This is the list of groups that have been given access to the collection.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"Identifier for the collection\",\n                        \"format\": \"uuid\"\n                      },\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Filter memberships by group names\",\n                        \"example\": \"developers\"\n                      },\n                      \"permission\": {\n                        \"type\": \"string\",\n                        \"description\": \"Filter memberships by permissions\",\n                        \"enum\": [\n                          \"read\",\n                          \"read_write\",\n                          \"maintainer\"\n                        ]\n                      }\n                    },\n                    \"required\": [\n                      \"id\"\n                    ]\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"groups\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Group\"\n                          }\n                        },\n                        \"collectionGroupMemberships\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/CollectionGroupMembership\"\n                          }\n                        }\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/collections.delete\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"Delete a collection\",\n        \"description\": \"Delete a collection and all of its documents. This action can’t be undone so please be careful.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/collections.export\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"Export a collection\",\n        \"description\": \"Triggers a bulk export of the collection in markdown format and their attachments. If documents are nested then they will be nested in folders inside the zip file. The endpoint returns a `FileOperation` that can be queried to track the progress of the export and get the url for the final file.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"fileOperation\": {\n                          \"$ref\": \"#/components/schemas/FileOperation\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/collections.export_all\": {\n      \"post\": {\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"summary\": \"Export all collections\",\n        \"description\": \"Triggers a bulk export of all documents in markdown format and their attachments. If documents are nested then they will be nested in folders inside the zip file. The endpoint returns a `FileOperation` that can be queried to track the progress of the export and get the url for the final file.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"fileOperation\": {\n                          \"$ref\": \"#/components/schemas/FileOperation\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.info\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Retrieve a document\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  },\n                  \"shareId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\",\n                    \"description\": \"Unique identifier for a document share, a shareId may be used in place of a document UUID\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Document\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.import\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Import a file as a document\",\n        \"description\": \"This method allows you to create a new document by importing an existing file. By default a document is set to the collection root. If you want to create a nested/child document, you should pass parentDocumentId to set the parent document.\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"object\",\n                    \"description\": \"Only plain text, markdown, docx, and html format are supported.\"\n                  },\n                  \"collectionId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"parentDocumentId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"template\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"publish\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Document\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.export\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Export a document as markdown\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  },\n                  \"shareId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\",\n                    \"description\": \"Unique identifier for a document share, a shareId may be used in place of a document UUID\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"string\",\n                      \"description\": \"The document content in Markdown formatting\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.list\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"List all documents\",\n        \"description\": \"This method will list all published documents and draft documents belonging to the current user.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"collectionId\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\",\n                        \"description\": \"Optionally filter to a specific collection\"\n                      },\n                      \"userId\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"backlinkDocumentId\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"parentDocumentId\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      },\n                      \"template\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Optionally filter to only templates\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Document\"\n                      }\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/documents.drafts\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"List all draft documents\",\n        \"description\": \"This method will list all draft documents belonging to the current user.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"collectionId\": {\n                        \"type\": \"string\",\n                        \"description\": \"A collection to search within\",\n                        \"format\": \"uuid\"\n                      },\n                      \"dateFilter\": {\n                        \"type\": \"string\",\n                        \"description\": \"Any documents that have not been updated within the specified period will be filtered out\",\n                        \"example\": \"month\",\n                        \"enum\": [\n                          \"day\",\n                          \"week\",\n                          \"month\",\n                          \"year\"\n                        ]\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Document\"\n                      }\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/documents.viewed\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"List all recently viewed documents\",\n        \"description\": \"This method will list all documents recently viewed by the current user.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Document\"\n                      }\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/documents.starred\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"List all starred documents\",\n        \"description\": \"This method will list all documents starred by the current user.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Document\"\n                      }\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/documents.pinned\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"List all pinned documents\",\n        \"description\": \"This method will list all documents pinned in a collection.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"collectionId\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                      }\n                    },\n                    \"required\": [\n                      \"collectionId\"\n                    ]\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Document\"\n                      }\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/documents.search\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Search all documents\",\n        \"description\": \"This methods allows you to search your teams documents with keywords. Note that search results will be restricted to those accessible by the current access token.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"example\": \"hiring\"\n                      },\n                      \"userId\": {\n                        \"type\": \"string\",\n                        \"description\": \"Any documents that have not been edited by the user identifier will be filtered out\",\n                        \"format\": \"uuid\"\n                      },\n                      \"collectionId\": {\n                        \"type\": \"string\",\n                        \"description\": \"A collection to search within\",\n                        \"format\": \"uuid\"\n                      },\n                      \"includeArchived\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"includeDrafts\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"dateFilter\": {\n                        \"type\": \"string\",\n                        \"description\": \"Any documents that have not been updated within the specified period will be filtered out\",\n                        \"example\": \"month\",\n                        \"enum\": [\n                          \"day\",\n                          \"week\",\n                          \"month\",\n                          \"year\"\n                        ]\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"context\": {\n                            \"type\": \"string\",\n                            \"description\": \"A short snippet of context from the document that includes the search query.\",\n                            \"example\": \"At Acme Inc our hiring practices are inclusive\"\n                          },\n                          \"ranking\": {\n                            \"type\": \"number\",\n                            \"description\": \"The ranking used to order search results based on relevance.\",\n                            \"format\": \"float\",\n                            \"example\": 1.1844109\n                          },\n                          \"document\": {\n                            \"$ref\": \"#/components/schemas/Document\"\n                          }\n                        }\n                      }\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/documents.create\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Create a document\",\n        \"description\": \"This method allows you to create or publish a new document. By default a document is set to the collection root. If you want to create a nested/child document, you should pass parentDocumentId to set the parent document.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"example\": \"Welcome to Acme Inc\"\n                  },\n                  \"text\": {\n                    \"type\": \"string\",\n                    \"description\": \"The body of the document, may contain markdown formatting.\",\n                    \"example\": \"…\"\n                  },\n                  \"collectionId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"parentDocumentId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"templateId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"template\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Whether this document should be considered to be a template.\"\n                  },\n                  \"publish\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Whether this document should be immediately published and made visible to other team members.\"\n                  }\n                },\n                \"required\": [\n                  \"title\",\n                  \"collectionId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Document\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/documents.update\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Update a document\",\n        \"description\": \"This method allows you to modify an already created document\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"example\": \"hDYep1TPAM\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  },\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"description\": \"The title of the document.\"\n                  },\n                  \"text\": {\n                    \"type\": \"string\",\n                    \"description\": \"The body of the document, may contain markdown formatting.\",\n                    \"example\": \"…\"\n                  },\n                  \"append\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"If true the text field will be appended to the end of the existing document, rather than the default behavior of replacing it. This is potentially useful for things like logging into a document.\"\n                  },\n                  \"publish\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Whether this document should be published and made visible to other team members, if a draft\"\n                  },\n                  \"done\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Whether the editing session has finished, this will trigger any notifications. This property will soon be deprecated.\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Document\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.templatize\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Create a template from a document\",\n        \"description\": \"This method allows you to createa new template using an existing document as the basis\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Document\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/documents.star\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Star a document\",\n        \"description\": \"Starring a document gives it extra priority in the UI and makes it easier to find important information later.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"example\": \"hDYep1TPAM\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.unstar\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Unstar a document\",\n        \"description\": \"Starring a document gives it extra priority in the UI and makes it easier to find important information later.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"example\": \"hDYep1TPAM\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.pin\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Pin a document\",\n        \"description\": \"Pinning a document highlights it on the collection page for everyone on the team.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"example\": \"hDYep1TPAM\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Document\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.unpin\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Unpin a document\",\n        \"description\": \"Pinning a document highlights it on the collection page for everyone on the team.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"example\": \"hDYep1TPAM\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Document\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.unpublish\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Unpublish a document\",\n        \"description\": \"Unpublishing a document moves it back to a draft status and out of the collection.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"example\": \"hDYep1TPAM\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Document\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.move\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Move a document\",\n        \"description\": \"Move a document to a new location or collection. If no parent document is provided, the document will be moved to the collection root.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"example\": \"hDYep1TPAM\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  },\n                  \"collectionId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"parentDocumentId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"documents\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Document\"\n                          }\n                        },\n                        \"collections\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Collection\"\n                          }\n                        }\n                      }\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.archive\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Archive a document\",\n        \"description\": \"Archiving a document allows outdated information to be moved out of sight whilst retaining the ability to optionally search and restore it later.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"example\": \"hDYep1TPAM\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Document\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.restore\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Restore a document\",\n        \"description\": \"If a document has been archived or deleted, it can be restored. Optionally a revision can be passed to restore the document to a previous point in time.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"example\": \"hDYep1TPAM\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  },\n                  \"revisionId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\",\n                    \"description\": \"Identifier for the revision to restore to.\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Document\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/documents.delete\": {\n      \"post\": {\n        \"tags\": [\n          \"Documents\"\n        ],\n        \"summary\": \"Delete a document\",\n        \"description\": \"Deleting a document moves it to the trash. If not restored within 30 days it is permenantly deleted.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"example\": \"hDYep1TPAM\",\n                    \"description\": \"Unique identifier for the document. Either the UUID or the urlId is acceptable.\"\n                  },\n                  \"permanent\": {\n                    \"type\": \"boolean\",\n                    \"example\": false,\n                    \"description\": \"If set to true the document will be destroyed with no way to recover rather than moved to the trash.\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/events.list\": {\n      \"post\": {\n        \"tags\": [\n          \"Events\"\n        ],\n        \"summary\": \"List all events\",\n        \"description\": \"Events are an audit trail of important events that happen in the knowledge base.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"Filter to a specific event, e.g. \\\"collections.create\\\". Event names are in the format \\\"objects.verb\\\"\"\n                      },\n                      \"actorId\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\",\n                        \"description\": \"Filter to events performed by the selected user\"\n                      },\n                      \"documentId\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\",\n                        \"description\": \"Filter to events performed in the selected document\"\n                      },\n                      \"collectionId\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\",\n                        \"description\": \"Filter to events performed in the selected collection\"\n                      },\n                      \"auditLog\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Whether to return detailed events suitable for an audit log. Without this flag less detailed event types will be returned.\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Event\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/fileOperations.info\": {\n      \"post\": {\n        \"tags\": [\n          \"FileOperations\"\n        ],\n        \"summary\": \"Retrieve a file operation\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the file operation.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/FileOperation\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/fileOperations.redirect\": {\n      \"post\": {\n        \"tags\": [\n          \"FileOperations\"\n        ],\n        \"summary\": \"Retrieve the file\",\n        \"description\": \"Load the resulting file from where it is stored based on the id. A temporary, signed url with embedded credentials is generated on demand.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the file operation.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/fileOperations.list\": {\n      \"post\": {\n        \"tags\": [\n          \"FileOperations\"\n        ],\n        \"summary\": \"List all file operations\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"The type of fileOperation\",\n                        \"example\": \"export\",\n                        \"enum\": [\n                          \"export\",\n                          \"import\"\n                        ]\n                      }\n                    },\n                    \"required\": [\n                      \"type\"\n                    ]\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/FileOperation\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/groups.info\": {\n      \"post\": {\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"summary\": \"Retrieve a group\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the group.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Group\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/groups.list\": {\n      \"post\": {\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"summary\": \"List all groups\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Group\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/groups.create\": {\n      \"post\": {\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"summary\": \"Create a group\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"Designers\"\n                  }\n                },\n                \"required\": [\n                  \"name\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Group\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/groups.update\": {\n      \"post\": {\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"summary\": \"Update a group\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"Designers\"\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"name\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Group\"\n                    },\n                    \"policies\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Policy\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/groups.delete\": {\n      \"post\": {\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"summary\": \"Delete a group\",\n        \"description\": \"Deleting a group will cause all of its members to lose access to any collections the group has previously been added to. This action can’t be undone so please be careful.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/groups.memberships\": {\n      \"post\": {\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"summary\": \"List all group members\",\n        \"description\": \"List and filter all the members in a group.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Filter memberships by user names\",\n                        \"example\": \"jenny\"\n                      }\n                    },\n                    \"required\": [\n                      \"id\"\n                    ]\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"users\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/User\"\n                          }\n                        },\n                        \"groupMemberships\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/GroupMembership\"\n                          }\n                        }\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/groups.add_user\": {\n      \"post\": {\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"summary\": \"Add a group member\",\n        \"description\": \"This method allows you to add a user to the specified group.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"userId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"userId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"users\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/User\"\n                          }\n                        },\n                        \"groups\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Group\"\n                          }\n                        },\n                        \"groupMemberships\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Membership\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/groups.remove_user\": {\n      \"post\": {\n        \"tags\": [\n          \"Groups\"\n        ],\n        \"summary\": \"Remove a group member\",\n        \"description\": \"This method allows you to remove a user from the group.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Identifier for the collection\",\n                    \"format\": \"uuid\"\n                  },\n                  \"userId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"userId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"groups\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Group\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/revisions.info\": {\n      \"post\": {\n        \"tags\": [\n          \"Revisions\"\n        ],\n        \"summary\": \"Retrieve a revision\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the revision.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Revision\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/revisions.list\": {\n      \"post\": {\n        \"tags\": [\n          \"Revisions\"\n        ],\n        \"summary\": \"List all revisions\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Revision\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/shares.info\": {\n      \"post\": {\n        \"tags\": [\n          \"Shares\"\n        ],\n        \"summary\": \"Retrieve a share object\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the share.\",\n                    \"format\": \"uuid\"\n                  },\n                  \"documentId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for a document. One of id or documentId must be provided.\",\n                    \"format\": \"uuid\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Share\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/shares.list\": {\n      \"post\": {\n        \"tags\": [\n          \"Shares\"\n        ],\n        \"summary\": \"List all shares\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Share\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/shares.create\": {\n      \"post\": {\n        \"tags\": [\n          \"Shares\"\n        ],\n        \"summary\": \"Create a share\",\n        \"description\": \"Creates a new share link that can be used by to access a document. If you request multiple shares for the same the ocument with the same API key the same share object will be returned. By default all shares are unpublished.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"documentId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"documentId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Share\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/shares.update\": {\n      \"post\": {\n        \"tags\": [\n          \"Shares\"\n        ],\n        \"summary\": \"Update a share\",\n        \"description\": \"Allows changing an existing shares published status, which removes authentication and makes it available to anyone with the link.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  },\n                  \"published\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"required\": [\n                  \"id\",\n                  \"published\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Share\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/shares.revoke\": {\n      \"post\": {\n        \"tags\": [\n          \"Shares\"\n        ],\n        \"summary\": \"Revoke a share\",\n        \"description\": \"Makes the share link inactive so that it can no longer be used to access the document.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/Validation\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/users.info\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Retrieve a user\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the user.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/users.list\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"List all users\",\n        \"description\": \"List and filter all the users in the team\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Pagination\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/Sorting\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"example\": \"jane\"\n                      },\n                      \"filter\": {\n                        \"type\": \"string\",\n                        \"example\": \"all\",\n                        \"enum\": [\n                          \"invited\",\n                          \"viewers\",\n                          \"admins\",\n                          \"active\",\n                          \"all\",\n                          \"suspended\"\n                        ]\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/User\"\n                      }\n                    },\n                    \"pagination\": {\n                      \"$ref\": \"#/components/schemas/Pagination\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/users.update\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Update a user\",\n        \"description\": \"Update a users name or avatar. No `id` is required as it is only possible to update the current user at this time.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"avatarUrl\": {\n                    \"type\": \"string\",\n                    \"format\": \"uri\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/users.promote\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Promote a user\",\n        \"description\": \"Promote a user to be a team admin. This endpoint is only available for admin users.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the user.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/users.demote\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Demote a user\",\n        \"description\": \"Demote a team admin to regular user permissions. This endpoint is only available for admin users.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the user.\",\n                    \"format\": \"uuid\"\n                  },\n                  \"to\": {\n                    \"type\": \"string\",\n                    \"description\": \"Which role to demote to\",\n                    \"enum\": [\n                      \"viewer\",\n                      \"member\"\n                    ]\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/users.suspend\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Suspend a user\",\n        \"description\": \"Suspending a user prevents the user from signing in. Users that are suspended are also not counted against billing totals in the hosted version.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the user.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/users.activate\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Activate a user\",\n        \"description\": \"Activating a previously suspended user allows them to signin again. Users that are activated will cause billing totals to be re-calculated in the hosted version.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the user.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/users.delete\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Delete a user\",\n        \"description\": \"Deleting a user removes the object entirely. In almost every circumstance it is preferable to suspend a user, as a deleted user can be recreated by signing in with SSO again.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique identifier for the user.\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"id\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/views.list\": {\n      \"post\": {\n        \"tags\": [\n          \"Views\"\n        ],\n        \"summary\": \"List all views\",\n        \"description\": \"List all users that have viewed a document and the overall view count.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"documentId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"documentId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/View\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/views.create\": {\n      \"post\": {\n        \"tags\": [\n          \"Views\"\n        ],\n        \"summary\": \"Create a view\",\n        \"description\": \"Creates a new view for a document. This is documented in the interests of thoroughness however it is recommended that views are not created from outside of the Outline UI.\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"documentId\": {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                  }\n                },\n                \"required\": [\n                  \"documentId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/View\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthenticated\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Attachment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contentType\": {\n            \"type\": \"string\",\n            \"example\": \"image/png\"\n          },\n          \"size\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          },\n          \"documentId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the associated document, if any.\",\n            \"format\": \"uuid\"\n          }\n        }\n      },\n      \"Pagination\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"offset\": {\n            \"type\": \"number\"\n          },\n          \"limit\": {\n            \"type\": \"number\",\n            \"example\": 25\n          }\n        }\n      },\n      \"Sorting\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"sort\": {\n            \"type\": \"string\",\n            \"example\": \"updatedAt\"\n          },\n          \"direction\": {\n            \"type\": \"string\",\n            \"example\": \"DESC\",\n            \"enum\": [\n              \"ASC\",\n              \"DESC\"\n            ]\n          }\n        }\n      },\n      \"NavigationNode\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the document.\",\n            \"format\": \"uuid\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"children\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NavigationNode\"\n            }\n          }\n        }\n      },\n      \"Auth\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"team\": {\n            \"$ref\": \"#/components/schemas/Team\"\n          }\n        }\n      },\n      \"Collection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the collection.\",\n            \"example\": \"Human Resources\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A description of the collection, may contain markdown formatting\",\n            \"example\": \"\"\n          },\n          \"documents\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NavigationNode\"\n            },\n            \"example\": []\n          },\n          \"color\": {\n            \"type\": \"string\",\n            \"description\": \"A color representing the collection, this is used to help make collections more identifiable in the UI. It should be in HEX format including the #\",\n            \"example\": \"#123123\"\n          },\n          \"private\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether this collection is considered to be private. Private collections are only visible to those with a user or group membership.\",\n            \"example\": false\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this object was created\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this object was last changed\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          },\n          \"deletedAt\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"The date and time that this object was deleted\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Document\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"collectionId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the associated collection.\",\n            \"format\": \"uuid\"\n          },\n          \"parentDocumentId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the document this is a child of, if any.\",\n            \"format\": \"uuid\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"The title of the document.\",\n            \"example\": \"🎉 Welcome to Acme Inc\"\n          },\n          \"emoji\": {\n            \"type\": \"string\",\n            \"description\": \"An emoji associated with the document.\",\n            \"example\": \"🎉\",\n            \"readOnly\": true\n          },\n          \"text\": {\n            \"type\": \"string\",\n            \"description\": \"The text content of the document, contains markdown formatting\",\n            \"example\": \"…\"\n          },\n          \"urlId\": {\n            \"type\": \"string\",\n            \"description\": \"A short unique ID that can be used to identify the document as an alternative to the UUID\",\n            \"example\": \"hDYep1TPAM\"\n          },\n          \"collaborators\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            }\n          },\n          \"pinned\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether this document is pinned in the collection\"\n          },\n          \"template\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether this document is a template\"\n          },\n          \"templateId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the template this document was created from, if any\",\n            \"format\": \"uuid\"\n          },\n          \"starred\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether this document is starred by the current user\"\n          },\n          \"revision\": {\n            \"type\": \"number\",\n            \"description\": \"A number that is auto incrementing with every revision of the document that is saved\",\n            \"readOnly\": true\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this object was created\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this object was last changed\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          },\n          \"updatedBy\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"publishedAt\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"The date and time that this object was published\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          },\n          \"archivedAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this object was archived\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          },\n          \"deletedAt\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"description\": \"The date and time that this object was deleted\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Event\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"documents.create\",\n            \"readOnly\": true\n          },\n          \"modelId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the object this event is associated with when it is not one of document or collection\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"actorId\": {\n            \"type\": \"string\",\n            \"description\": \"The user that performed the action.\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"actorIpAddress\": {\n            \"type\": \"string\",\n            \"description\": \"The ip address the action was performed from. This field is only returned when the `auditLog` boolean is true.\",\n            \"example\": \"60.169.88.100\",\n            \"readOnly\": true\n          },\n          \"collectionId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"Identifier for the associated collection, if any\",\n            \"readOnly\": true\n          },\n          \"documentId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"description\": \"Identifier for the associated document, if any\",\n            \"readOnly\": true\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this event was created\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          },\n          \"data\": {\n            \"type\": \"object\",\n            \"example\": {\n              \"name\": \"Equipment list\"\n            },\n            \"description\": \"Additional unstructured data associated with the event\",\n            \"readOnly\": true\n          },\n          \"actor\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ok\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          },\n          \"error\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"FileOperation\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"example\": \"export\",\n            \"description\": \"The type of file operation.\",\n            \"readOnly\": true,\n            \"enum\": [\n              \"import\",\n              \"export\"\n            ]\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"description\": \"The state of the file operation.\",\n            \"example\": \"complete\",\n            \"readOnly\": true,\n            \"enum\": [\n              \"creating\",\n              \"uploading\",\n              \"complete\",\n              \"error\",\n              \"expired\"\n            ]\n          },\n          \"collection\": {\n            \"allOf\": [\n              {\n                \"nullable\": true\n              },\n              {\n                \"$ref\": \"#/components/schemas/Collection\"\n              }\n            ]\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"size\": {\n            \"type\": \"number\",\n            \"description\": \"The size of the resulting file in bytes\",\n            \"readOnly\": true,\n            \"example\": 2048\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this object was created\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Group\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of this group.\",\n            \"example\": \"Engineering\"\n          },\n          \"memberCount\": {\n            \"type\": \"number\",\n            \"description\": \"The number of users that are members of the group\",\n            \"example\": 11,\n            \"readOnly\": true\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this object was created\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this object was last changed\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Share\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"documentTitle\": {\n            \"type\": \"string\",\n            \"description\": \"Title of the shared document.\",\n            \"example\": \"React best practices\",\n            \"readOnly\": true\n          },\n          \"documentUrl\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"description\": \"URL of the original document.\",\n            \"readOnly\": true\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"description\": \"URL of the publicly shared document.\",\n            \"readOnly\": true\n          },\n          \"published\": {\n            \"type\": \"boolean\",\n            \"example\": false,\n            \"description\": \"If true the share can be loaded without a user account.\"\n          },\n          \"includeChildDocuments\": {\n            \"type\": \"boolean\",\n            \"example\": true,\n            \"description\": \"If to also give permission to view documents nested beneath this one.\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Date and time when this share was created\",\n            \"readOnly\": true\n          },\n          \"createdBy\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Date and time when this share was edited\",\n            \"readOnly\": true\n          },\n          \"lastAccessedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Date and time when this share was last viewed\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"Revision\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"documentId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the associated document.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"Title of the document.\",\n            \"readOnly\": true\n          },\n          \"text\": {\n            \"type\": \"string\",\n            \"description\": \"Body of the document, may contain markdown formatting\",\n            \"readOnly\": true\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Date and time when this revision was created\",\n            \"readOnly\": true\n          },\n          \"createdBy\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        }\n      },\n      \"Team\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of this team, it is usually auto-generated when the first SSO connection is made but can be changed if neccessary.\"\n          },\n          \"avatarUrl\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"description\": \"The URL for the image associated with this team, it will be displayed in the team switcher and in the top left of the knowledge base along with the name.\"\n          },\n          \"slackConnected\": {\n            \"type\": \"boolean\",\n            \"readOnly\": true,\n            \"description\": \"Whether this team has authentication with Slack enabled.\"\n          },\n          \"googleConnected\": {\n            \"type\": \"boolean\",\n            \"readOnly\": true,\n            \"description\": \"Whether this team has authentication with Google Workspace enabled.\"\n          },\n          \"sharing\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether this team has share links globally enabled. If this value is false then all sharing UI and APIs are disabled.\"\n          },\n          \"documentEmbeds\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether this team has embeds in documents globally enabled. It can be disabled to reduce potential data leakage to third parties.\"\n          },\n          \"guestSignin\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether this team has guest signin enabled. Guests can signin with an email address and are not required to have a Google Workspace/Slack SSO account once invited.\"\n          },\n          \"subdomain\": {\n            \"type\": \"string\",\n            \"description\": \"Represents the subdomain at which this team's knowledge base can be accessed.\"\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"description\": \"The fully qualified URL at which this team's knowledge base can be accessed.\",\n            \"readOnly\": true,\n            \"format\": \"uri\"\n          }\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of this user, it is migrated from Slack or Google Workspace when the SSO connection is made but can be changed if neccessary.\",\n            \"example\": \"Jane Doe\"\n          },\n          \"avatarUrl\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"description\": \"The URL for the image associated with this user, it will be displayed in the application UI and email notifications.\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"The email associated with this user, it is migrated from Slack or Google Workspace when the SSO connection is made but can be changed if neccessary.\",\n            \"format\": \"email\"\n          },\n          \"isAdmin\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether this user has admin permissions.\"\n          },\n          \"isSuspended\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether this user has been suspended.\"\n          },\n          \"lastActiveAt\": {\n            \"type\": \"string\",\n            \"description\": \"The last time this user made an API request, this value is updated at most every 5 minutes.\",\n            \"readOnly\": true,\n            \"format\": \"date\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"description\": \"The date and time that this user first signed in or was invited as a guest.\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Membership\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true\n          },\n          \"userId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the associated user.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"collectionId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the associated collection.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"permission\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"read\",\n              \"read_write\",\n              \"maintainer\"\n            ],\n            \"description\": \"The permissions that this membership grants the user\",\n            \"example\": \"read_write\"\n          }\n        }\n      },\n      \"Policy\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object this policy references.\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"abilities\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"create\": {\n                \"type\": \"boolean\"\n              },\n              \"read\": {\n                \"type\": \"boolean\"\n              },\n              \"update\": {\n                \"type\": \"boolean\"\n              },\n              \"delete\": {\n                \"type\": \"boolean\"\n              },\n              \"restore\": {\n                \"type\": \"boolean\"\n              },\n              \"star\": {\n                \"type\": \"boolean\"\n              },\n              \"unstar\": {\n                \"type\": \"boolean\"\n              },\n              \"share\": {\n                \"type\": \"boolean\"\n              },\n              \"download\": {\n                \"type\": \"boolean\"\n              },\n              \"pin\": {\n                \"type\": \"boolean\"\n              },\n              \"unpin\": {\n                \"type\": \"boolean\"\n              },\n              \"move\": {\n                \"type\": \"boolean\"\n              },\n              \"archive\": {\n                \"type\": \"boolean\"\n              },\n              \"unarchive\": {\n                \"type\": \"boolean\"\n              },\n              \"createChildDocument\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        }\n      },\n      \"GroupMembership\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true\n          },\n          \"groupId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the associated group.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"userId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the associated user.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        }\n      },\n      \"CollectionGroupMembership\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true\n          },\n          \"groupId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the associated group.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"collectionId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the associated collection.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"permission\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"read\",\n              \"read_write\",\n              \"maintainer\"\n            ],\n            \"description\": \"The permissions that this membership grants the users in the group\",\n            \"example\": \"read_write\"\n          }\n        }\n      },\n      \"View\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the object.\",\n            \"readOnly\": true\n          },\n          \"documentId\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the associated document.\",\n            \"readOnly\": true,\n            \"format\": \"uuid\"\n          },\n          \"firstViewedAt\": {\n            \"type\": \"string\",\n            \"description\": \"When the document was first viewed by the user\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          },\n          \"lastViewedAt\": {\n            \"type\": \"string\",\n            \"description\": \"When the document was last viewed by the user\",\n            \"readOnly\": true,\n            \"format\": \"date-time\"\n          },\n          \"count\": {\n            \"type\": \"number\",\n            \"description\": \"The number of times the user has viewed the document.\",\n            \"example\": 22,\n            \"readOnly\": true\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        }\n      }\n    },\n    \"responses\": {\n      \"NotFound\": {\n        \"description\": \"The specified resource was not found.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Error\"\n            }\n          }\n        }\n      },\n      \"Validation\": {\n        \"description\": \"The request failed one or more validations.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Error\"\n            }\n          }\n        }\n      },\n      \"Unauthorized\": {\n        \"description\": \"The current API key is not authorized to perform this action.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Error\"\n            }\n          }\n        }\n      },\n      \"Unauthenticated\": {\n        \"description\": \"The API key is missing or otherwise invalid.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Error\"\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"http\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/outline/openapi@ec4fa38b9fdceb994cd86d92ac52f5f1ad3af4fc/-/blob/spec3.json",
			"externalURLs": [
				{
					"url": "https://github.com/outline/openapi/blob/ec4fa38b9fdceb994cd86d92ac52f5f1ad3af4fc/spec3.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/fileOperations.info\": post: responses: 200: contents: application/json: generate schema: field data: field collection: allOf: schema type mismatch:  and object"
}