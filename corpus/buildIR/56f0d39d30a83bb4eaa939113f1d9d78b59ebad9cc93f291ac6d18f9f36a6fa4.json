{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ahmadnassri/node-oas-request"
		},
		"file": {
			"name": "httpbin.json",
			"size": 0,
			"path": "test/fixtures/httpbin.json",
			"byteSize": 28833,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"version\": \"1.0-oas3\",\n    \"title\": \"httpbin\",\n    \"description\": \"An unofficial OpenAPI definition for [httpbin.org](https://httpbin.org).\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://httpbin.org\"\n    },\n    {\n      \"url\": \"http://httpbin.org\"\n    },\n    {\n      \"url\": \"https://eu.httpbin.org\"\n    },\n    {\n      \"url\": \"http://eu.httpbin.org\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"auth\",\n      \"description\": \"Operations for testing various authentication types\"\n    },\n    {\n      \"name\": \"HTTP methods\",\n      \"description\": \"Operations for testing different HTTP methods\"\n    },\n    {\n      \"name\": \"Status codes\",\n      \"description\": \"Return the specified HTTP status code, or a random status code if more than one are given\"\n    }\n  ],\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"operationId\": \"getTime\",\n        \"summary\": \"The current time, in a variety of formats\",\n        \"tags\": [\n          \"time\"\n        ],\n        \"servers\": [\n          {\n            \"url\": \"https://now.httpbin.org\"\n          },\n          {\n            \"url\": \"http://now.httpbin.org\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"now\": {\n                      \"$ref\": \"#/components/schemas/Timestamp\"\n                    },\n                    \"urls\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"/\",\n                        \"/docs\",\n                        \"/when/:human-timestamp\",\n                        \"/parse/:machine-timestamp\"\n                      ]\n                    }\n                  },\n                  \"required\": [\n                    \"now\",\n                    \"urls\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/when/{human-timestamp}\": {\n      \"get\": {\n        \"operationId\": \"whenTime\",\n        \"tags\": [\n          \"time\"\n        ],\n        \"servers\": [\n          {\n            \"url\": \"http://now.httpbin.org\"\n          },\n          {\n            \"url\": \"https://now.httpbin.org\"\n          }\n        ],\n        \"parameters\": [{\n          \"in\": \"path\",\n          \"name\": \"human-timestamp\",\n          \"required\": true,\n          \"schema\": {\n            \"anyOf\": [{\n              \"type\": \"string\"\n            }]\n          }\n        }],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/TimestampResponse\"\n          },\n          \"500\": {\n            \"description\": \"oops\"\n          }\n        }\n      }\n    },\n    \"/parse/{machine-timestamp}\": {\n      \"get\": {\n        \"operationId\": \"parseTime\",\n        \"tags\": [\n          \"time\"\n        ],\n        \"servers\": [{\n            \"url\": \"http://now.httpbin.org\"\n          },\n          {\n            \"url\": \"https://now.httpbin.org\"\n          }\n        ],\n        \"parameters\": [{\n          \"in\": \"path\",\n          \"name\": \"machine-timestamp\",\n          \"required\": true,\n          \"schema\": {\n            \"anyOf\": [{\n                \"type\": \"string\"\n              },\n              {\n                \"type\": \"number\"\n              }\n            ]\n          }\n        }],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/TimestampResponse\"\n          },\n          \"500\": {\n            \"description\": \"oops\"\n          }\n        }\n      }\n    },\n    \"/get\": {\n      \"get\": {\n        \"operationId\": \"httpGet\",\n        \"tags\": [\n          \"HTTP methods\"\n        ],\n        \"summary\": \"Returns the GET request's data. Accepts any query parameters and any headers.\\n\",\n        \"parameters\": [{\n          \"$ref\": \"#/components/parameters/freeFormQuery\"\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/delete\": {\n      \"delete\": {\n        \"operationId\": \"httpDelete\",\n        \"tags\": [\n          \"HTTP methods\"\n        ],\n        \"summary\": \"Returns the DELETE request's data. Accepts any query parameters and any headers.\\n\",\n        \"parameters\": [{\n          \"$ref\": \"#/components/parameters/freeFormQuery\"\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/post\": {\n      \"post\": {\n        \"operationId\": \"httpPost\",\n        \"tags\": [\n          \"HTTP methods\"\n        ],\n        \"summary\": \"Returns the POSTed data\",\n        \"parameters\": [{\n          \"$ref\": \"#/components/parameters/freeFormQuery\"\n        }],\n        \"requestBody\": {\n          \"description\": \"Data provided in the request body will be returned in the response.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {},\n              \"example\": {\n                \"message\": \"Hello, world!\"\n              }\n            },\n            \"application/vnd+json\": {\n              \"schema\": {},\n              \"examples\": {\n                \"pizzaOrder\": {\n                  \"summary\": \"Pizza order data\",\n                  \"description\": \"Longer description ...\",\n                  \"value\": {\n                    \"custname\": \"Alice\",\n                    \"custtel\": \"+1-202-555-0100\",\n                    \"custemail\": \"alice@wonderland.net\",\n                    \"size\": \"medium\",\n                    \"topping\": [\n                      \"cheese\",\n                      \"mushroom\"\n                    ],\n                    \"delivery\": \"19:00\",\n                    \"comments\": \"Ring the door bell three times\"\n                  }\n                },\n                \"simpleObject\": {\n                  \"summary\": \"sample object\",\n                  \"value\": {\n                    \"foo\": \"bar\"\n                  }\n                }\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"example\": \"\u003cmessage\u003eHello, world!\u003c/message\u003e\\n\"\n              },\n              \"examples\": {\n                \"xml\": {\n                  \"summary\": \"XML payload example\",\n                  \"value\": \"\u003cmessage\u003eHello, world!\u003c/message\u003e\\n\"\n                }\n              }\n            },\n            \"text/plain\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"example\": \"Hi there\"\n              },\n              \"examples\": {\n                \"text\": {\n                  \"value\": \"Hi there\"\n                }\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"custname\": {\n                    \"type\": \"string\",\n                    \"example\": \"Alice\",\n                    \"description\": \"Customer name\"\n                  },\n                  \"custtel\": {\n                    \"type\": \"string\",\n                    \"example\": \"+1-202-555-0100\",\n                    \"description\": \"Customer phone number\"\n                  },\n                  \"custemail\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\",\n                    \"example\": \"alice@wonderland.net\",\n                    \"description\": \"Customer email address\"\n                  },\n                  \"size\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"small\",\n                      \"medium\",\n                      \"large\"\n                    ],\n                    \"description\": \"Pizza size\"\n                  },\n                  \"topping\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"bacon\",\n                        \"cheese\",\n                        \"mushroom\",\n                        \"onion\"\n                      ]\n                    },\n                    \"description\": \"Pizza toppings\"\n                  },\n                  \"delivery\": {\n                    \"type\": \"string\",\n                    \"example\": \"13:30\",\n                    \"description\": \"Delivery time\"\n                  },\n                  \"comments\": {\n                    \"type\": \"string\",\n                    \"example\": \"ASAP\",\n                    \"description\": \"Comments\"\n                  }\n                }\n              },\n              \"examples\": {\n                \"pizzaOrder\": {\n                  \"summary\": \"Pizza order data\",\n                  \"description\": \"Longer description ...\",\n                  \"value\": {\n                    \"custname\": \"Alice\",\n                    \"custtel\": \"+1-202-555-0100\",\n                    \"custemail\": \"alice@wonderland.net\",\n                    \"size\": \"medium\",\n                    \"topping\": [\n                      \"cheese\",\n                      \"mushroom\"\n                    ],\n                    \"delivery\": \"19:00\",\n                    \"comments\": \"Ring the door bell three times\"\n                  }\n                },\n                \"simpleObject\": {\n                  \"summary\": \"sample object\",\n                  \"value\": {\n                    \"foo\": \"bar\"\n                  }\n                }\n              }\n            },\n            \"*/*\": {\n              \"schema\": {}\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CommonResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/ip\": {\n      \"get\": {\n        \"operationId\": \"getIP\",\n        \"summary\": \"Returns Origin IP.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"origin\": {\n                      \"type\": \"string\",\n                      \"description\": \"The IP address, or a comma-separated list of IP addresses. For example, \\\"10.100.10.10, 10.100.20.254, 52.91.14.13\\\"'\\n\",\n                      \"example\": \"10.100.10.10\"\n                    }\n                  },\n                  \"required\": [\n                    \"origin\"\n                  ]\n                },\n                \"examples\": {\n                  \"oneIp\": {\n                    \"description\": \"Example of a single IP\",\n                    \"value\": {\n                      \"origin\": \"10.100.10.10\"\n                    }\n                  },\n                  \"multipleIps\": {\n                    \"description\": \"Example of multiple IPs\",\n                    \"value\": {\n                      \"origin\": \"10.100.10.10, 10.100.20.254, 52.91.14.13\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user-agent\": {\n      \"get\": {\n        \"summary\": \"Returns the user agent.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"user-agent\": {\n                      \"type\": \"string\",\n                      \"example\": \"curl/7.37.0\"\n                    }\n                  },\n                  \"required\": [\n                    \"user-agent\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/headers\": {\n      \"get\": {\n        \"summary\": \"Returns the request headers.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"headers\": {\n                      \"type\": \"object\",\n                      \"additionalProperties\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"headers\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/delay/{n}\": {\n      \"get\": {\n        \"summary\": \"Delays responding for min(n, 10) seconds.\",\n        \"parameters\": [{\n          \"name\": \"n\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"Response delay, in seconds.\",\n          \"schema\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 10\n          }\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        }\n      }\n    },\n    \"/basic-auth/{user}/{password}\": {\n      \"get\": {\n        \"summary\": \"Challenges HTTPBasic Auth.\",\n        \"tags\": [\n          \"auth\"\n        ],\n        \"security\": [{\n          \"basicAuth\": []\n        }],\n        \"parameters\": [{\n            \"$ref\": \"#/components/parameters/user\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/password\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/200BasicAuth\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized (The username and password used for Basic auth do not match those in the URL path.)\",\n            \"headers\": {\n              \"Www-Authenticate\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"example\": \"Basic realm=\\\"Fake Realm\\\"\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/hidden-basic-auth/{user}/{password}\": {\n      \"get\": {\n        \"summary\": \"Hidden Basic authentication\",\n        \"tags\": [\n          \"auth\"\n        ],\n        \"description\": \"Returns 404 Not Found unless the request is authenticated.\",\n        \"security\": [{\n          \"basicAuth\": []\n        }],\n        \"parameters\": [{\n            \"$ref\": \"#/components/parameters/user\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/password\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/200BasicAuth\"\n          },\n          \"404\": {\n            \"description\": \"Unautorized (the username and password used for Basic auth do not match those in the URL path.)\"\n          }\n        }\n      }\n    },\n    \"/bearer\": {\n      \"get\": {\n        \"summary\": \"Tests Bearer authentication\",\n        \"tags\": [\n          \"auth\"\n        ],\n        \"security\": [{\n          \"bearerAuth\": []\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Authorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"authenticated\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"Bearer token specified in the request\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/status/{statusCode}\": {\n      \"summary\": \"Returns the specified HTTP status code, or a random status code if more than one are given\",\n      \"parameters\": [{\n        \"name\": \"statusCode\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"description\": \"The status code to return, or a weighted list of statuses to pick from, such as `200:4,500:0.3,418`.\",\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"description\": \"HTTP status code. May include optional weight, e.g. `200:0.9`\",\n            \"oneOf\": [{\n                \"type\": \"string\"\n              },\n              {\n                \"type\": \"integer\"\n              }\n            ]\n          },\n          \"minItems\": 1,\n          \"example\": [\n            \"200:5\",\n            \"500:0.3\",\n            418\n          ]\n        },\n        \"style\": \"simple\"\n      }],\n      \"get\": {\n        \"tags\": [\n          \"Status codes\"\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"A response with the requested status code.\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Status codes\"\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"A response with the requested status code.\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Status codes\"\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"A response with the requested status code.\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Status codes\"\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"A response with the requested status code.\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Status codes\"\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"A response with the requested status code.\"\n          }\n        }\n      }\n    },\n    \"/xml\": {\n      \"get\": {\n        \"summary\": \"Returns some XML.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/xml\": {}\n            }\n          }\n        }\n      }\n    },\n    \"/html\": {\n      \"get\": {\n        \"summary\": \"Returns an HTML page\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/html\": {}\n            }\n          }\n        }\n      }\n    },\n    \"/image/{format}\": {\n      \"get\": {\n        \"summary\": \"Returns an image with the specified format.\",\n        \"tags\": [\n          \"images\"\n        ],\n        \"parameters\": [{\n          \"in\": \"path\",\n          \"name\": \"format\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"png\",\n              \"jpeg\",\n              \"webp\",\n              \"svg\"\n            ]\n          }\n        }],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Image\"\n          }\n        }\n      }\n    },\n    \"/image\": {\n      \"get\": {\n        \"summary\": \"Returns an image based on the Accept header.\",\n        \"tags\": [\n          \"images\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Image\"\n          },\n          \"406\": {\n            \"description\": \"Client did not request a supported media type.\"\n          }\n        }\n      }\n    },\n    \"/cache\": {\n      \"get\": {\n        \"summary\": \"Returns 200 unless an If-Modified-Since or If-None-Match header is provided, when it returns a 304.\",\n        \"parameters\": [{\n            \"in\": \"header\",\n            \"name\": \"If-Modified-Since\",\n            \"required\": false,\n            \"description\": \"For testing purposes this header accepts any value. (???) See also https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\\n\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Wed, 21 Oct 2015 07:28:00 GMT\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"If-None-Match\",\n            \"required\": false,\n            \"description\": \"For testing purposes this header accepts any value. (???) See also https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match\\n\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"examples\": {\n              \"etag\": {\n                \"value\": \"\\\"bfc13a64729c4290ef5b2c2730249c88ca92d82d\\\"\"\n              },\n              \"etags\": {\n                \"value\": \"W/\\\"67ab43\\\", \\\"54ed21\\\", \\\"7892dd\\\"\"\n              },\n              \"asterisk\": {\n                \"value\": \"*\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Neigher If-Modified-Since nor If-None-Match header is provided\"\n          },\n          \"304\": {\n            \"description\": \"If-Modified-Since or If-None-Match header is provided\"\n          }\n        }\n      }\n    },\n    \"/cookies\": {\n      \"get\": {\n        \"tags\": [\n          \"Cookies\"\n        ],\n        \"summary\": \"Returns cookie data\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/cookies/set\": {\n      \"get\": {\n        \"tags\": [\n          \"Cookies\"\n        ],\n        \"summary\": \"Sets one or more simple cookies\",\n        \"parameters\": [{\n          \"$ref\": \"#/components/parameters/freeFormQuery\"\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/cookies/delete\": {\n      \"get\": {\n        \"tags\": [\n          \"Cookies\"\n        ],\n        \"summary\": \"Delete one or more simple cookies\",\n        \"parameters\": [{\n          \"$ref\": \"#/components/parameters/freeFormQuery\"\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"CommonResponse\": {\n        \"description\": \"Response returned by `/get`\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"args\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Query string parameters specified in the request URL.\"\n          },\n          \"headers\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Headers (standard or custom) used in the request. Some typical headers are:  - Accept\\n  - Accept-Encoding\\n  - Content-Length\\n  - Content-Type\\n  - Host\\n  - Origin\\n  - Referred\\n  - User-Agent\\n\"\n          },\n          \"origin\": {\n            \"type\": \"string\",\n            \"description\": \"The origin IP from which the request was made.\",\n            \"example\": \"10.100.10.10, 10.100.10.44, 52.91.14.13\"\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"description\": \"The endpoint URL to which the request was made.\",\n            \"example\": \"https://httpbin.org/post\"\n          }\n        },\n        \"required\": [\n          \"args\",\n          \"headers\",\n          \"origin\",\n          \"url\"\n        ]\n      },\n      \"PostResponse\": {\n        \"description\": \"Response returned by /post, /put, /patch and /delete\",\n        \"allOf\": [{\n            \"$ref\": \"#/components/schemas/CommonResponse\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"data\": {},\n              \"files\": {},\n              \"form\": {\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"Form parameters specified in \\\"application/x-www-form-urlencoded\\\" and `multipart/form-data` requests.\\n\"\n              },\n              \"json\": {\n                \"description\": \"JSON value sent in the payload. Can be object, array, string, number, boolean or `null`.\\n\",\n                \"nullable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"TimestampWrapper\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"timestamp\": {\n            \"$ref\": \"#/components/schemas/Timestamp\"\n          }\n        },\n        \"required\": [\n          \"timestamp\"\n        ]\n      },\n      \"Timestamp\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"epoch\": {\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"example\": 1498229228.0671656\n          },\n          \"slang_date\": {\n            \"type\": \"string\",\n            \"example\": \"today\"\n          },\n          \"slang_time\": {\n            \"type\": \"string\",\n            \"example\": \"now\"\n          },\n          \"iso8601\": {\n            \"type\": \"string\",\n            \"example\": \"2017-06-23T14:47:08.067166Z\"\n          },\n          \"rfc2822\": {\n            \"type\": \"string\",\n            \"example\": \"Fri, 23 Jun 2017 14:47:08 GMT\"\n          },\n          \"rfc3339\": {\n            \"type\": \"string\",\n            \"example\": \"2017-06-23T14:47:08.06Z\"\n          }\n        },\n        \"required\": [\n          \"epoch\",\n          \"slang_date\",\n          \"slang_time\",\n          \"iso8601\",\n          \"rfc2822\",\n          \"rfc3339\"\n        ],\n        \"example\": {\n          \"epoch\": 1485183550.84644,\n          \"slang_date\": \"Jan 23\",\n          \"slang_time\": \"4 months ago\",\n          \"iso8601\": \"2017-01-23T14:59:10.846440Z\",\n          \"rfc2822\": \"Mon, 23 Jan 2017 14:59:10 GMT\",\n          \"rfc3339\": \"2017-01-23T14:59:10.84Z\"\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"basicAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"basic\",\n        \"description\": \"Use the same username and password as you will provide in path parameters.\"\n      },\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\"\n      }\n    },\n    \"parameters\": {\n      \"user\": {\n        \"name\": \"user\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"description\": \"Username. Use the same username in the path AND for authorization.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"password\": {\n        \"name\": \"password\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"description\": \"Password. Use the same password in the path AND for authorization.\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"freeFormQuery\": {\n        \"name\": \"freeform\",\n        \"in\": \"query\",\n        \"schema\": {\n          \"type\": \"object\",\n          \"additionalProperties\": true\n        },\n        \"style\": \"form\",\n        \"explode\": true,\n        \"description\": \"Enter free-form query parameters in the JSON format `{ \\\"param1\\\": \\\"value1\\\", \\\"param2\\\": \\\"value2\\\", ... }`.\\n\\nNote that the parameters will be actually sent as `?param1=value1\u0026param2=value2\u0026...`\\n\"\n      }\n    },\n    \"responses\": {\n      \"200BasicAuth\": {\n        \"description\": \"OK\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"authenticated\": {\n                  \"type\": \"boolean\",\n                  \"example\": true\n                },\n                \"user\": {\n                  \"type\": \"string\",\n                  \"description\": \"The user name specified in the request.\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Image\": {\n        \"description\": \"OK\",\n        \"content\": {\n          \"image/png, image/jpeg, image/webp\": {\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"binary\"\n            }\n          },\n          \"image/svg+xml\": {},\n          \"image/svg\": {}\n        }\n      },\n      \"TimestampResponse\": {\n        \"description\": \"OK\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/TimestampWrapper\"\n            }\n          }\n        }\n      }\n    },\n    \"examples\": {\n      \"headers\": {\n        \"value\": {\n          \"Accept\": \"*/*\",\n          \"Connection\": \"close\",\n          \"Host\": \"httpbin.org\",\n          \"User-Agent\": \"curl/7.37.0\"\n        }\n      },\n      \"Now\": {\n        \"value\": {\n          \"epoch\": 1498229228.0671656,\n          \"slang_date\": \"today\",\n          \"slang_time\": \"now\",\n          \"iso8601\": \"2017-06-23T14:47:08.067166Z\",\n          \"rfc2822\": \"Fri, 23 Jun 2017 14:47:08 GMT\",\n          \"rfc3339\": \"2017-06-23T14:47:08.06Z\"\n        }\n      },\n      \"DateInPast\": {\n        \"description\": \"Example of a date in the past\",\n        \"value\": {\n          \"epoch\": \"1485183550.84644,\",\n          \"slang_date\\\"\": \"Jan 23\",\n          \"slang_time\\\"\": \"4 months ago\",\n          \"iso8601\": \"2017-01-23T14:59:10.846440Z\",\n          \"rfc2822\": \"Mon, 23 Jan 2017 14:59:10 GMT\",\n          \"rfc3339\": \"2017-01-23T14:59:10.84Z\"\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "buildIR: make ir: path \"/image/{format}\": get: responses: 200: contents: filter most specific: parse content type \"image/png, image/jpeg, image/webp\": mime: unexpected content after media subtype",
	"NotImplemented": [
		"empty schema",
		"object with additionalProperties",
		"unsupported content types"
	]
}