{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mlrepa/mlpanel"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger.yaml",
			"byteSize": 47406,
			"content": "openapi: 3.0.1\ninfo:\n  title: mlpanel\n  description: \"\"\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nsecurity:\n  - bearerAuth: []\nservers:\n  - url: http://localhost:8089/\n  - url: https://localhost:8089/\n\npaths:\n  /token:\n    post:\n      summary: Get access token\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - client_id\n                - client_secret\n              properties:\n                client_id:\n                  type: string\n                  description: Client id\n                client_secret:\n                  type: string\n                  description: Client secret\n        required: true\n      responses:\n        200:\n          description: Access token\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  access_token:\n                    description: Access token\n                    type: string\n        401:\n          description: Access denied\n        403:\n          description: Forbidden\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /projects:\n    get:\n      tags:\n        - projects\n      summary: List projects\n      parameters:\n        - name: _sort\n          in: query\n          description: Sort key\n          required: false\n          schema:\n            type: string\n        - name: _order\n          in: query\n          description: Sorting order\n          required: false\n          schema:\n            type: string\n            default: ASC\n            enum:\n              - ASC\n              - DESC\n        - name: _start\n          in: query\n          description: Start index\n          required: false\n          schema:\n            type: integer\n        - name: _end\n          in: query\n          description: End index\n          required: false\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Return projects list (dictionary)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectsList'\n          # content:\n          #   application/json:\n          #     schema:\n          #       type: array\n          #       items:\n          #         $ref: '#/components/schemas/Projects'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      tags:\n        - projects\n      summary: Create project\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - name\n              properties:\n                name:\n                  description: project name\n                  type: string\n                description:\n                  description: project description\n                  type: string\n                  default: \"\"\n        required: true\n      responses:\n        201:\n          description: Project successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        400:\n          description: Bad project name OR project already exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /projects/{project_id}:\n    get:\n      tags:\n        - projects\n      summary: Get project\n      parameters:\n        - name: project_id\n          in: path\n          description: project id\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n    put:\n      tags:\n        - projects\n      summary: Update project\n      parameters:\n        - name: project_id\n          in: path\n          description: project id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                name:\n                  type: string\n                  description: new project name\n                description:\n                  type: string\n                  description: new project description\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n    delete:\n      tags:\n        - projects\n      summary: Delete project\n      parameters:\n        - name: project_id\n          in: path\n          description: project id\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Project successfully deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        400:\n          description: Only admin users can delete projects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /projects/{project_id}/healthcheck:\n    get:\n      tags:\n        - projects\n      summary: Check health of project\n      parameters:\n        - name: project_id\n          in: path\n          description: project id\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        400:\n          description: Project's tracking server was not started\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /projects/{project_id}/run:\n    put:\n      tags:\n        - projects\n      summary: Run project\n      description: Run project's tracking server\n      parameters:\n        - name: project_id\n          in: path\n          description: project id\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Project's tracking server is running\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        404:\n          $ref: '#/components/responses/NotFound'\n        409:\n          description: Project is already running\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /projects/{project_id}/terminate:\n    put:\n      tags:\n        - projects\n      summary: Terminate project\n      description: Terminate project's tracking server\n      parameters:\n        - name: project_id\n          in: path\n          description: project id\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Project's tracking server has terminated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /projects/{project_id}/archive:\n    put:\n      tags:\n        - projects\n      summary: Archive projects\n      parameters:\n        - name: project_id\n          in: path\n          description: project id\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Project archived\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /projects/{project_id}/restore:\n    put:\n      tags:\n        - projects\n      summary: Restore project\n      parameters:\n        - name: project_id\n          in: path\n          description: project id\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Project restored\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /projects/{project_id}/ping:\n    get:\n      tags:\n        - projects\n      summary: Ping project's tracking server\n      parameters:\n        - name: project_id\n          in: path\n          description: project id\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        400:\n          description: Tracking server is not started yet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /experiments:\n    get:\n      tags:\n        - experiments\n      summary: List of experiments\n      parameters:\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: _sort\n          in: query\n          description: Sort key\n          required: false\n          schema:\n            type: string\n        - name: _order\n          in: query\n          description: Sorting order\n          required: false\n          schema:\n            type: string\n            default: ASC\n            enum:\n              - ASC\n              - DESC\n        - name: _start\n          in: query\n          description: Start index\n          required: false\n          schema:\n            type: integer\n        - name: _end\n          in: query\n          description: End index\n          required: false\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Experiment'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n    post:\n      tags:\n        - experiments\n      summary: Create experiment\n      parameters:\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - name\n                - description\n              properties:\n                name:\n                  type: string\n                  description: Experiment name\n                description:\n                  type: string\n                  description: Description of experiment\n                user_id:\n                  type: string\n\n        required: true\n      responses:\n        201:\n          description: Experiment successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Experiment'\n        400:\n          description: Experiment already exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /experiments/{experiment_id}:\n    get:\n      tags:\n        - experiments\n      summary: Get experiment\n      parameters:\n        - name: experiment_id\n          in: path\n          description: Experiment ID\n          required: true\n          schema:\n            type: string\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Experiment'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - experiments\n      summary: Delete experiment\n      parameters:\n        - name: experiment_id\n          in: path\n          description: Experiment ID\n          required: true\n          schema:\n            type: string\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  experiment_id:\n                    type: integer\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /runs:\n    get:\n      tags:\n        - runs\n      summary: List runs\n      parameters:\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n        - name: experiment_id\n          in: query\n          description: Experiment ID\n          required: true\n          schema:\n            type: string\n        - name: _sort\n          in: query\n          description: Sort key\n          required: false\n          schema:\n            type: string\n        - name: _order\n          in: query\n          description: Sorting order\n          required: false\n          schema:\n            type: string\n            default: ASC\n            enum:\n              - ASC\n              - DESC\n        - name: _start\n          in: query\n          description: Start index\n          required: false\n          schema:\n            type: integer\n        - name: _end\n          in: query\n          description: End index\n          required: false\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Run'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /runs/{run_id}:\n    get:\n      tags:\n        - runs\n      summary: Get run\n      parameters:\n        - name: run_id\n          in: path\n          description: Run ID\n          required: true\n          schema:\n            type: string\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Run'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - runs\n      summary: Delete run\n      parameters:\n        - name: run_id\n          in: path\n          description: run id\n          required: true\n          schema:\n            type: string\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  run_id:\n                    type: string\n        400:\n          description: Run already marked as deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /registered-models:\n    get:\n      tags:\n        - registered models\n      summary: List models from Model Registry\n      parameters:\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n        - name: _sort\n          in: query\n          description: Sort key\n          required: false\n          schema:\n            type: string\n        - name: _order\n          in: query\n          description: Sorting order\n          required: false\n          schema:\n            type: string\n            default: ASC\n            enum:\n              - ASC\n              - DESC\n        - name: _start\n          in: query\n          description: Start index\n          required: false\n          schema:\n            type: integer\n        - name: _end\n          in: query\n          description: End index\n          required: false\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RegisteredModel'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n        500:\n          $ref: '#/components/responses/InternalServerError'\n    post:\n      tags:\n        - registered models\n      summary: Register model\n      description: Create new model if does't exist or create new version otherwise\n      parameters:\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - name\n                - source\n                - run_id\n              properties:\n                name:\n                  description: model name\n                  type: string\n                source:\n                  description: path (URI) to the model artifact\n                  type: string\n                run_id:\n                  type: string\n        required: true\n      responses:\n        201:\n          description: Model successfully registred\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisteredModel'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /registered-models/{model_id}:\n    get:\n      tags:\n        - registered models\n      summary: Get model from Model Registry\n      parameters:\n        - name: model_id\n          in: path\n          description: Model ID\n          required: true\n          schema:\n            type: string\n        - name: project_id\n          in: query\n          description: project id\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisteredModel'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - registered models\n      summary: Delete model\n      parameters:\n        - name: model_id\n          in: path\n          description: model id\n          required: true\n          schema:\n            type: string\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  model_id:\n                    type: string\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /model-versions:\n    get:\n      tags:\n        - model-versions\n      summary: Get model versions\n      parameters:\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n        - name: model_id\n          in: query\n          description: Model ID\n          required: false\n          schema:\n            type: string\n        - name: _sort\n          in: query\n          description: Sort key\n          required: false\n          schema:\n            type: string\n        - name: _order\n          in: query\n          description: Sorting order\n          required: false\n          schema:\n            type: string\n            default: ASC\n            enum:\n              - ASC\n              - DESC\n        - name: _start\n          in: query\n          description: Start index\n          required: false\n          schema:\n            type: integer\n        - name: _end\n          in: query\n          description: End index\n          required: false\n          schema:\n              type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ModelVersion'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /model-versions/{version}:\n    get:\n      tags:\n        - model-versions\n      summary: Get model version\n      parameters:\n        - name: version\n          in: path\n          description: Version number\n          required: true\n          schema:\n            type: string\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n        - name: model_id\n          in: query\n          description: Model ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModelVersion'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /deployments:\n    get:\n      tags:\n        - deployments\n      summary: List deployments\n      parameters:\n        - name: _sort\n          in: query\n          description: Sort key\n          required: false\n          schema:\n            type: string\n        - name: _order\n          in: query\n          description: Sorting order\n          required: false\n          schema:\n            type: string\n            default: ASC\n            enum:\n              - ASC\n              - DESC\n        - name: _start\n          in: query\n          description: Start index\n          required: false\n          schema:\n            type: integer\n        - name: _end\n          in: query\n          description: End index\n          required: false\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Deployment'\n    post:\n      tags:\n        - deployments\n      summary: Create deployments\n      parameters:\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n        - name: model_id\n          in: query\n          description: Model ID\n          required: true\n          schema:\n            type: string\n        - name: version\n          in: query\n          description: Model version\n          required: true\n          schema:\n            type: string\n            default: '1'\n        - name: type\n          in: query\n          description: Deployment type\n          required: true\n          schema:\n            type: string\n            enum:\n              - local\n              - gcp\n      responses:\n        202:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deployment_id:\n                    description: Deployment ID\n                    type: string\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /deployments/{deployment_id}:\n    get:\n      tags:\n        - deployments\n      summary: Get deployment\n      parameters:\n        - name: deployment_id\n          in: path\n          description: Deployment ID\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deployment'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n    delete:\n      tags:\n        - deployments\n      summary: Delete deployment (mark as deleted)\n      parameters:\n        - name: deployment_id\n          in: path\n          description: Deployment ID\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deployment_id:\n                    type: string\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /deployments/{deployment_id}/run:\n    put:\n      tags:\n        - deployments\n      summary: Run deployment\n      parameters:\n        - name: deployment_id\n          in: path\n          description: Deployment ID\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n               type: object\n               properties:\n                 deployment_id:\n                   type: string\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /deployments/{deployment_id}/stop:\n    put:\n      tags:\n        - deployments\n      summary: Stop deployment\n      parameters:\n        - name: deployment_id\n          in: path\n          description: Deployment ID\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deployment_id:\n                    type: string\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /deployments/{deployment_id}/predict:\n    post:\n      tags:\n        - deployments\n      summary: Predict\n      parameters:\n        - name: deployment_id\n          in: path\n          description: Deployment ID\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - data\n              properties:\n                data:\n                  type: object\n                  properties:\n                    schema:\n                      type: object\n                      properties:\n                        fields:\n                          type: array\n                          items:\n                            description: Column names and types\n                            type: object\n                            properties:\n                              name:\n                                description: Column name\n                                type: string\n                              type:\n                                description: Column type\n                                type: string\n                    data:\n                      type: array\n                      items:\n                        type: object\n            example:\n              {\n                'data':\n                  {\n                    'schema': {\n                      'fields': [\n                      {'name': 'sepal_length', 'type': 'number'},\n                      {'name': 'sepal_width', 'type': 'number'},\n                      {'name': 'petal_length', 'type': 'number'},\n                      {'name': 'petal_width', 'type': 'number'}\n                      ]\n                    },\n                    'data': [\n                    {\n                      'sepal_length': 6.1,\n                      'sepal_width': 2.8,\n                      'petal_length': 4.7,\n                      'petal_width': 1.2\n                    }\n                    ]\n                  }\n              }\n\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  prediction:\n                    description: Prediction result\n                    type: string\n        400:\n          description: Bad schema\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  anomalies:\n                    $ref: '#/components/schemas/DataAnomalies'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /deployments/{deployment_id}/ping:\n    get:\n      tags:\n        - deployments\n      summary: Get deployment\n      parameters:\n        - name: deployment_id\n          in: path\n          description: Deployment ID\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n        400:\n          description: Deployment's model is not loaded yet\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /deployments/{deployment_id}/schema:\n    get:\n      tags:\n        - deployments\n      summary: Get deployment schema\n      parameters:\n        - name: deployment_id\n          in: path\n          description: Deployment ID\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Tensorflow data validation statistics converted to dictionary\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /deployments/{deployment_id}/validation-report:\n    get:\n      tags:\n        - deployments\n      summary: Get validation reports for specified period\n      parameters:\n        - name: deployment_id\n          in: path\n          description: Deployment ID\n          required: true\n          schema:\n            type: integer\n        - name: timestamp_from\n          in: query\n          description: Timestamp of period start\n          required: true\n          schema:\n            type: number\n            format: float\n        - name: timestamp_to\n          in: query\n          description: Timestamp of period end\n          required: true\n          schema:\n            type: number\n            format: float\n      responses:\n        200:\n          description: Validation report\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  timestamp_from:\n                    description: Timestamp of period start\n                    type: number\n                    format: float\n                  timestamp_to:\n                    description: Timestamp of period end\n                    type: number\n                    format: float\n                  model_statistics:\n                    description: TFDV statistics for model train data\n                    type: object\n                  incoming_data_statistics:\n                    description: TFDV statistics for data incoming to predict for specified period\n                    type: object\n                  anomalies_detected:\n                    description: Anomalies detected flag\n                    type: boolean\n                  anomalies_info:\n                    $ref: '#/components/schemas/DataAnomalies'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n  /artifacts:\n    get:\n      tags:\n        - artifacts\n      summary: List artifacts\n      parameters:\n        - name: project_id\n          in: query\n          description: Project ID\n          required: true\n          schema:\n            type: integer\n        - name: run_id\n          in: query\n          description: Run ID\n          required: true\n          schema:\n            type: string\n        - name: _sort\n          in: query\n          description: Sort key\n          required: false\n          schema:\n            type: string\n        - name: _order\n          in: query\n          description: Sorting order\n          required: false\n          schema:\n            type: string\n            default: ASC\n            enum:\n              - ASC\n              - DESC\n        - name: _start\n          in: query\n          description: Start index\n          required: false\n          schema:\n            type: integer\n        - name: _end\n          in: query\n          description: End index\n          required: false\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Artifact'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n\n\n  /stat:\n    get:\n      tags:\n        - miscellaneous\n      summary: \"Resourses statistics\"\n      description: \"\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Statistics\"\n\ncomponents:\n\n  securitySchemes:\n    bearerAuth:            # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  responses:\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n\n  schemas:\n    Project:\n      type: object\n      properties:\n        id:\n          type: integer\n        description:\n          type: string\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/ProjectStatus'\n        mlflowUri:\n          type: string\n        createdBy:\n          type: integer\n        createdAt:\n          type: string\n          format: date-time\n\n    ProjectStatus:\n      type: string\n      enum:\n        - running\n        - terminated\n        - archived\n\n    ProjectsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Project'\n\n    Experiment:\n      description: Experiment object\n      type: object\n      properties:\n        id:\n          type: string\n        user_id:\n          type: string\n        name:\n          type: string\n        artifact_location:\n          type: string\n        lifecycle_stage:\n          type: string\n          enum:\n            - active\n            - deleted\n        last_update_time:\n          type: string\n          format: date-time\n        creation_time:\n          type: string\n          format: date-time\n        description:\n          description: Description of experiment\n          type: string\n        project_id:\n          type: integer\n\n    Run:\n      type: object\n      properties:\n        id:\n          description: Run id\n          type: string\n        info:\n          $ref: '#/components/schemas/RunInfo'\n        data:\n          $ref: '#/components/schemas/RunData'\n\n    RunInfo:\n      type: object\n      properties:\n        run_id:\n          type: string\n        experiment_id:\n          type: integer\n        user_id:\n          type: string\n        status:\n          type: string\n          enum:\n            - running\n            - scheduled\n            - finished\n            - failed\n            - killed\n        start_time:\n          type: string\n          format: timestamp\n        end_time:\n          type: string\n          format: timestamp\n        artifact_uri:\n          type: string\n        lifecycle_stage:\n          type: string\n          enum:\n            - active\n            - deleted\n        project_id:\n          type: integer\n\n    RunData:\n      type: object\n      properties:\n        metrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/Metric'\n        params:\n          type: array\n          items:\n            $ref: '#/components/schemas/Param'\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/RunTag'\n\n    Metric:\n      type: object\n      properties:\n        key:\n          description: Metric name\n          type: string\n        value:\n          type: number\n          format: float\n        timestamp:\n          type: string\n          format: timestamp\n        step:\n          type: string\n          format: int32\n\n    Param:\n      type: object\n      properties:\n        key:\n          description: Parameter name\n          type: string\n        value:\n          type: string\n\n    RunTag:\n      type: object\n      properties:\n        key:\n          description: Tag name\n          type: string\n        value:\n          type: string\n\n#    VersionedArtifact:\n#      type: object\n#      properties:\n#        artifact:\n#          $ref: '#/components/schemas/Artifact'\n#        latest_version:\n#          type: object\n#          properties:\n#            version:\n#              type: integer\n#              format: int32\n#        versions:\n#          type: array\n#          items:\n#            $ref: '#/components/schemas/ArtifactVersion'\n#\n    Artifact:\n      type: object\n      properties:\n        id:\n          description: Artifact id\n        project_id:\n          type: integer\n        experiment_id:\n          type: string\n        run_id:\n          type: string\n        type:\n          type: string\n          enum:\n            - File\n            - Folder\n            - Model\n        creation_timestamp:\n          type: string\n          format: date-time\n        root_uri:\n          description: absolute path to artifact location\n          type: string\n        path:\n          description: relative path artifact\n          type: string\n#\n#    ArtifactVersion:\n#      type: object\n#      properties:\n#        version:\n#          type: object\n#          properties:\n#            artifact:\n#              $ref: '#/components/schemas/Artifact'\n#            version:\n#              type: integer\n#              format: int32\n\n\n\n    RegisteredModel:\n      type: object\n      properties:\n        id:\n          description: Model ID (name)\n          type: string\n        project_id:\n          description: Project ID\n          type: integer\n        creation_timestamp:\n          type: string\n          format: date-time\n        last_updated_timestamp:\n          type: string\n          format: date-time\n\n    ModelVersion:\n      type: object\n      properties:\n        id:\n          description: Model Version id (version number)\n          type: string\n        model_id:\n          description: Model ID (name)\n          type: string\n        project_id:\n          description: Project ID\n          type: integer\n        version:\n          description: Version number\n          type: string\n          format: int32\n        creation_timestamp:\n          type: string\n          format: date-time\n        last_updated_timestamp:\n          type: string\n          format: date-time\n        run_id:\n          type: string\n        model_uri:\n          description: Path to model artifact\n          type: string\n\n    Deployment:\n      type: object\n      properties:\n        id:\n          description: Deployment ID\n          type: string\n        project_id:\n          description: Project ID\n          type: integer\n        model_id:\n          description: Model ID\n          type: string\n        version:\n          description: Model version\n          type: string\n        model_uri:\n          description: Model URI\n          type: string\n        type:\n          description: Deployment type\n          type: string\n          enum:\n            - local\n            - gcp\n        created_at:\n          description: Creation time\n          type: string\n          format: date-time\n        host:\n          description: Host address\n          type: string\n        port:\n          description: Port number\n          type: string\n\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\n\n    DataAnomalies:\n      type: object\n      properties:\n        \u003ccolumn_name\u003e:\n          type: object\n          properties:\n            description:\n              description: Anomaly description\n              type: string\n            severity:\n              description: Anomaly severity\n              type: string\n            shortDescription:\n              description: Anomaly short description\n              type: string\n            reason:\n              type: array\n              items:\n                type: object\n                properties:\n                  type:\n                    description: Error type\n                    type: string\n                  shortDescription:\n                    description: Anomaly short description\n                    type: string\n                  description:\n                    description: Anomaly description\n                    type: string\n            path:\n              type: object\n              properties:\n                step:\n                  type: string\n                  example: \u003ccolumn_name\u003e\n\n\n\n\n    CPU:\n      type: \"object\"\n      properties:\n        usage:\n          type: \"number\"\n          format: \"float\"\n        units:\n          type: \"string\"\n          default: \"percentage\"\n\n    ProjectStatistics:\n      type: \"object\"\n      properties:\n        id:\n          type: \"integer\"\n        name:\n          type: \"string\"\n        stat:\n          type: \"object\"\n          properties:\n            cpu:\n              $ref: \"#/components/schemas/CPU\"\n            memory:\n              type: \"object\"\n              properties:\n                usage:\n                  type: \"object\"\n                  properties:\n                    data:\n                      type: \"number\"\n                      format: \"float\"\n                    dirty:\n                      type: \"number\"\n                      format: \"float\"\n                    lib:\n                      type: \"number\"\n                      format: \"float\"\n                    pss:\n                      type: \"number\"\n                      format: \"float\"\n                    rss:\n                      type: \"number\"\n                      format: \"float\"\n                    shared:\n                      type: \"number\"\n                      format: \"float\"\n                    swap:\n                      type: \"number\"\n                      format: \"float\"\n                    text:\n                      type: \"number\"\n                      format: \"float\"\n                    uss:\n                      type: \"number\"\n                      format: \"float\"\n                    vms:\n                      type: \"number\"\n                      format: \"float\"\n                units:\n                  type: \"string\"\n                  default: \"mb\"\n                percentage:\n                  type: \"number\"\n                  format: \"double\"\n\n    Statistics:\n      type: \"object\"\n      properties:\n        projects:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/ProjectStatistics\"\n        systme:\n          type: \"object\"\n          properties:\n            cpu:\n              $ref: \"#/components/schemas/CPU\"\n\n            memory:\n              type: \"object\"\n              properties:\n                usage:\n                  type: \"object\"\n                  properties:\n                    active:\n                      type: \"number\"\n                      format: \"float\"\n                    available:\n                      type: \"number\"\n                      format: \"float\"\n                    buffers:\n                      type: \"number\"\n                      format: \"float\"\n                    cached:\n                      type: \"number\"\n                      format: \"float\"\n                    free:\n                      type: \"number\"\n                      format: \"float\"\n                    inactive:\n                      type: \"number\"\n                      format: \"float\"\n                    shared:\n                      type: \"number\"\n                      format: \"float\"\n                    slab:\n                      type: \"number\"\n                      format: \"float\"\n                    total:\n                      type: \"number\"\n                      format: \"float\"\n                    used:\n                      type: \"number\"\n                      format: \"float\"\n                units:\n                  type: \"string\"\n                  default: \"mb\"\n                percentage:\n                  type: \"number\"\n                  format: \"double\"\n"
		}
	},
	"Error": "buildIR: make ir: path \"/deployments/{deployment_id}/predict\": post: requestBody: contents: multipart/form-data: form parameter \"data\": field \"Data\": nested arrays not allowed"
}