{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Nexmo/oas_parser"
		},
		"file": {
			"name": "petstore-recursive-allof.yml",
			"size": 0,
			"path": "spec/fixtures/petstore-recursive-allof.yml",
			"byteSize": 1290,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: Swagger API Team\n    email: foo@example.com\n    url: http://madskristensen.net\n  license:\n    name: MIT\n    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\nservers:\n  - url: http://petstore.swagger.io/api\npaths:\n  /pet:\n    post:\n      description: Create pet\n      operationId: makePet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AllPets'\n                - type: object\n                  properties:\n                    age:\n                      type: integer\n      responses:\n        '200':\n          description: Success\n\ncomponents:\n  schemas:\n    BasicPet:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n    ExpensivePet:\n      type: object\n      required:\n        - price\n      properties:\n        price:\n          type: integer\n    AllPets:\n      allOf:\n        - $ref: '#/components/schemas/BasicPet'\n        - $ref: '#/components/schemas/ExpensivePet'\n",
			"canonicalURL": "/github.com/Nexmo/oas_parser@2d3f445a16daf42ff5c27566406de10794808893/-/blob/spec/fixtures/petstore-recursive-allof.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Nexmo/oas_parser/blob/2d3f445a16daf42ff5c27566406de10794808893/spec/fixtures/petstore-recursive-allof.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/pet\": post: requestBody: contents: application/json: generate schema: allOf: schema type mismatch:  and object"
}