{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "vocadb.net-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/vocadb.net-v1-swagger.yaml",
			"byteSize": 287729,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: vocadb\n  title: VocaDB\n  version: v1\n  x-apisguru-categories:\n    - media\n  x-logo:\n    url: https://twitter.com/vocadb/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: http://vocadb.net/swagger/docs/v1\n      version: \"2.0\"\n  x-providerName: vocadb.net\npaths:\n  /api/activityEntries:\n    get:\n      deprecated: false\n      description: \"Entries are always returned sorted from newest to oldest.\\r\n\n        \\            Activity for deleted entries is not returned.\"\n      operationId: ActivityEntryApi_GetList\n      parameters:\n        - description: Filter to return activity entries only before this date. Optional,\n            by default no filter.\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter to return activity entries only after this date. Optional, by\n            default no filter.\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter by user Id. Optional, by default no filter.\n          in: query\n          name: userId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by entry edit event (either Created or Updated). Optional, by\n            default no filter.\n          in: query\n          name: editEvent\n          required: false\n          schema:\n            type: string\n            enum:\n              - Created\n              - Updated\n              - Deleted\n              - Restored\n        - description: Maximum number of results to return. Default 50. Maximum value 500.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Optional fields.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - ArchivedVersion\n              - Entry\n        - description: Optional fields for entries.\n          in: query\n          name: entryFields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Description\n              - MainPicture\n              - Names\n              - PVs\n              - Tags\n              - WebLinks\n        - description: Content language preference.\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ActivityEntryForApiCo\\\n                  ntract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ActivityEntryForApiCo\\\n                  ntract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ActivityEntryForApiCo\\\n                  ntract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ActivityEntryForApiCo\\\n                  ntract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ActivityEntryForApiCo\\\n                  ntract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ActivityEntryForApiCo\\\n                  ntract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ActivityEntryForApiCo\\\n                  ntract_\"\n      summary: Gets a list of recent activity entries.\n      tags:\n        - ActivityEntryApi\n  /api/albums:\n    get:\n      deprecated: false\n      operationId: AlbumApi_GetList\n      parameters:\n        - description: Album name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: \"Disc type. By default nothing. Possible values are Album, Single,\n            EP, SplitAlbum, Compilation, Video, Other. Note: only one type\n            supported for now.\"\n          in: query\n          name: discTypes\n          required: false\n          schema:\n            type: string\n            enum:\n              - Unknown\n              - Album\n              - Single\n              - EP\n              - SplitAlbum\n              - Compilation\n              - Video\n              - Artbook\n              - Game\n              - Fanmade\n              - Instrumental\n              - Other\n        - description: Filter by tag name (optional). This filter can be specified multiple\n            times.\n          in: query\n          name: tagName\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by tag Id (optional). This filter can be specified multiple\n            times.\n          in: query\n          name: tagId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: Include child tags, if the tags being filtered by have any.\n          in: query\n          name: childTags\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by artist Id (optional).\n          in: query\n          name: artistId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: \"Filter by artist participation status. Only valid if artistId is\n            specified.\\r\n\n            \\            Everything (default): Show all albums by\n            that artist (no filter).\\r\n\n            \\            OnlyMainAlbums: Show only main albums by\n            that artist.\\r\n\n            \\            OnlyCollaborations: Show only\n            collaborations by that artist.\"\n          in: query\n          name: artistParticipationStatus\n          required: false\n          schema:\n            type: string\n            enum:\n              - Everything\n              - OnlyMainAlbums\n              - OnlyCollaborations\n        - description: Include child voicebanks, if the artist being filtered by has any.\n          in: query\n          name: childVoicebanks\n          required: false\n          schema:\n            type: boolean\n        - description: Include members of groups. This applies if {artistId} is a group.\n          in: query\n          name: includeMembers\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by album barcode (optional).\n          in: query\n          name: barcode\n          required: false\n          schema:\n            type: string\n        - description: Filter by entry status (optional).\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - Draft\n              - Finished\n              - Approved\n              - Locked\n        - description: Filter by albums whose release date is after this date (inclusive).\n          in: query\n          name: releaseDateAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter by albums whose release date is before this date (exclusive).\n          in: query\n          name: releaseDateBefore\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: List of advanced filters (optional).\n          in: query\n          name: advancedFilters\n          required: false\n          explode: true\n          schema:\n            type: array\n            items: {}\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 50).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: \"Sort rule (optional, defaults to Name). \\r\n\n            \\            Possible values are None, Name,\n            ReleaseDate, ReleaseDateWithNulls, AdditionDate, RatingAverage,\n            RatingTotal, NameThenReleaseDate.\"\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - ReleaseDate\n              - ReleaseDateWithNulls\n              - AdditionDate\n              - RatingAverage\n              - RatingTotal\n              - NameThenReleaseDate\n              - CollectionCount\n        - description: \"Whether the search should prefer accurate matches. \\r\n\n            \\            If this is true, entries that match by\n            prefix will be moved first, instead of being sorted\n            alphabetically.\\r\n\n            \\            Requires a text query. Does not support\n            pagination.\\r\n\n            \\            This is mostly useful for autocomplete\n            boxes.\"\n          in: query\n          name: preferAccurateMatches\n          required: false\n          schema:\n            type: boolean\n        - description: \"Whether to search for deleted entries.\\r\n\n            \\            If this is true, only deleted entries will\n            be returned.\\r\n\n            \\            If this is false (default), deleted entries\n            are not returned.\"\n          in: query\n          name: deleted\n          required: false\n          schema:\n            type: boolean\n        - description: Match mode for artist name (optional, defaults to Exact).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Optional fields (optional). Possible values are artists, names, pvs,\n            tags, tracks, webLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Artists\n              - Description\n              - Discs\n              - Identifiers\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - Tracks\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForApiContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForApiContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForApiContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForApiContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForApiContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForApiContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForApiContract_\"\n      summary: Gets a page of albums.\n      tags:\n        - AlbumApi\n  \"/api/albums/comments/{commentId}\":\n    delete:\n      deprecated: false\n      description: \"Normal users can delete their own comments, moderators can delete all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: AlbumApi_DeleteComment\n      parameters:\n        - description: ID of the comment to be deleted.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes a comment.\n      tags:\n        - AlbumApi\n    post:\n      deprecated: false\n      description: \"Normal users can edit their own comments, moderators can edit all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: AlbumApi_PostEditComment\n      parameters:\n        - description: ID of the comment to be edited.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract3\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Updates a comment.\n      tags:\n        - AlbumApi\n  /api/albums/names:\n    get:\n      deprecated: false\n      operationId: AlbumApi_GetNames\n      parameters:\n        - description: Text query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Name match mode.\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Maximum number of results.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Gets a list of album names. Ideal for autocomplete boxes.\n      tags:\n        - AlbumApi\n  /api/albums/new:\n    get:\n      deprecated: false\n      description: Output is cached for 1 hour.\n      operationId: AlbumApi_GetNewAlbums\n      parameters:\n        - in: query\n          name: languagePreference\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n        - in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Artists\n              - Description\n              - Discs\n              - Identifiers\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - Tracks\n              - WebLinks\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n      summary: Gets list of upcoming or recent albums, same as front page.\n      tags:\n        - AlbumApi\n  /api/albums/top:\n    get:\n      deprecated: false\n      description: Output is cached for 1 hour.\n      operationId: AlbumApi_GetTopAlbums\n      parameters:\n        - in: query\n          name: languagePreference\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n        - in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Artists\n              - Description\n              - Discs\n              - Identifiers\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - Tracks\n              - WebLinks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                format: int32\n                type: integer\n              type: array\n          text/json:\n            schema:\n              items:\n                format: int32\n                type: integer\n              type: array\n          application/xml:\n            schema:\n              items:\n                format: int32\n                type: integer\n              type: array\n          text/xml:\n            schema:\n              items:\n                format: int32\n                type: integer\n              type: array\n          application/x-www-form-urlencoded:\n            schema:\n              items:\n                format: int32\n                type: integer\n              type: array\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n      summary: Gets list of top rated albums, same as front page.\n      tags:\n        - AlbumApi\n  \"/api/albums/{id}\":\n    delete:\n      deprecated: false\n      operationId: AlbumApi_Delete\n      parameters:\n        - description: ID of the album to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Notes.\n          in: query\n          name: notes\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes an album.\n      tags:\n        - AlbumApi\n    get:\n      deprecated: false\n      operationId: AlbumApi_GetOne\n      parameters:\n        - description: Album Id (required).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Optional fields (optional). Possible values are artists, names, pvs,\n            tags, tracks, webLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Artists\n              - Description\n              - Discs\n              - Identifiers\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - Tracks\n              - WebLinks\n        - description: Optional fields for tracks, if included (optional).\n          in: query\n          name: songFields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlbumForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AlbumForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AlbumForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AlbumForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/AlbumForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/AlbumForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/AlbumForApiContract\"\n      summary: Gets an album by Id.\n      tags:\n        - AlbumApi\n  \"/api/albums/{id}/comments\":\n    get:\n      deprecated: false\n      description: Pagination and sorting might be added later.\n      operationId: AlbumApi_GetComments\n      parameters:\n        - description: ID of the album whose comments to load.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n      summary: Gets a list of comments for an album.\n      tags:\n        - AlbumApi\n    post:\n      deprecated: false\n      operationId: AlbumApi_PostNewComment\n      parameters:\n        - description: ID of the album for which to create the comment.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n      summary: Posts a new comment.\n      tags:\n        - AlbumApi\n  \"/api/albums/{id}/reviews\":\n    get:\n      deprecated: false\n      operationId: AlbumApi_GetReviews\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: languageCode\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumReviewContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumReviewContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumReviewContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumReviewContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumReviewContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumReviewContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumReviewContract\"\n                type: array\n      tags:\n        - AlbumApi\n    post:\n      deprecated: false\n      operationId: AlbumApi_PostReview\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AlbumReviewContract\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AlbumReviewContract\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/AlbumReviewContract\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/AlbumReviewContract\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/AlbumReviewContract\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlbumReviewContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AlbumReviewContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AlbumReviewContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AlbumReviewContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/AlbumReviewContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/AlbumReviewContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/AlbumReviewContract\"\n      tags:\n        - AlbumApi\n  \"/api/albums/{id}/reviews/{reviewId}\":\n    delete:\n      deprecated: false\n      operationId: AlbumApi_DeleteReview\n      parameters:\n        - in: path\n          name: reviewId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      tags:\n        - AlbumApi\n  \"/api/albums/{id}/tracks\":\n    get:\n      deprecated: false\n      operationId: AlbumApi_GetTracks\n      parameters:\n        - description: Album ID (required).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: List of optional fields (optional). Possible values are Albums,\n            Artists, Names, PVs, Tags, ThumbUrl, WebLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongInAlbumForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongInAlbumForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongInAlbumForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongInAlbumForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongInAlbumForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongInAlbumForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongInAlbumForApiContract\"\n                type: array\n      summary: Gets tracks for an album.\n      tags:\n        - AlbumApi\n  \"/api/albums/{id}/tracks/fields\":\n    get:\n      deprecated: false\n      operationId: AlbumApi_GetTracksFormatted\n      parameters:\n        - description: Album ID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Field to be included, for example \"featvocalists\" or \"url\". Can be\n            specified multiple times.\n          in: query\n          name: field\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Language preference.\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: array\n            text/json:\n              schema:\n                items:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: array\n            application/xml:\n              schema:\n                items:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: array\n            text/xml:\n              schema:\n                items:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: array\n            text/csv:\n              schema:\n                items:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: array\n      summary: Gets tracks for an album formatted using the CSV format string.\n      tags:\n        - AlbumApi\n  \"/api/albums/{id}/user-collections\":\n    get:\n      deprecated: false\n      operationId: AlbumApi_GetUserCollections\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: languagePreference\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForUserForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForUserForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForUserForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForUserForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForUserForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForUserForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForUserForApiContract\"\n                type: array\n      tags:\n        - AlbumApi\n  /api/artists:\n    get:\n      deprecated: false\n      operationId: ArtistApi_GetList\n      parameters:\n        - description: Artist name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Filtered artist type (optional).\n          in: query\n          name: artistTypes\n          required: false\n          schema:\n            type: string\n        - description: Allow base voicebanks. If false, only root voicebanks will be\n            allowed. Only affects voice synthesizers that can have base\n            voicebanks.\n          in: query\n          name: allowBaseVoicebanks\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by tag name (optional).\n          in: query\n          name: tagName\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by tag Id (optional). This filter can be specified multiple\n            times.\n          in: query\n          name: tagId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: Include child tags, if the tags being filtered by have any.\n          in: query\n          name: childTags\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by user following the artists. By default there is no\n            filtering.\n          in: query\n          name: followedByUserId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by entry status (optional).\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - Draft\n              - Finished\n              - Approved\n              - Locked\n        - description: List of advanced filters (optional).\n          in: query\n          name: advancedFilters\n          required: false\n          explode: true\n          schema:\n            type: array\n            items: {}\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 100).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Sort rule (optional, defaults to Name). Possible values are None,\n            Name, AdditionDate, AdditionDateAsc.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - AdditionDate\n              - AdditionDateAsc\n              - ReleaseDate\n              - SongCount\n              - SongRating\n              - FollowerCount\n        - description: \"Whether the search should prefer accurate matches. \\r\n\n            \\            If this is true, entries that match by\n            prefix will be moved first, instead of being sorted\n            alphabetically.\\r\n\n            \\            Requires a text query. Does not support\n            pagination.\\r\n\n            \\            This is mostly useful for autocomplete\n            boxes.\"\n          in: query\n          name: preferAccurateMatches\n          required: false\n          schema:\n            type: boolean\n        - description: Match mode for artist name (optional, defaults to Exact).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: List of optional fields (optional). Possible values are Description,\n            Groups, Members, Names, Tags, WebLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - ArtistLinks\n              - ArtistLinksReverse\n              - BaseVoicebank\n              - Description\n              - MainPicture\n              - Names\n              - Tags\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForApiContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForApiContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForApiContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForApiContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForApiContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForApiContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForApiContract_\"\n      summary: Find artists.\n      tags:\n        - ArtistApi\n  \"/api/artists/comments/{commentId}\":\n    delete:\n      deprecated: false\n      description: \"Normal users can delete their own comments, moderators can delete all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: ArtistApi_DeleteComment\n      parameters:\n        - description: ID of the comment to be deleted.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes a comment.\n      tags:\n        - ArtistApi\n    post:\n      deprecated: false\n      description: \"Normal users can edit their own comments, moderators can edit all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: ArtistApi_PostEditComment\n      parameters:\n        - description: ID of the comment to be edited.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract3\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Updates a comment.\n      tags:\n        - ArtistApi\n  /api/artists/names:\n    get:\n      deprecated: false\n      operationId: ArtistApi_GetNames\n      parameters:\n        - description: Text query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Name match mode.\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Maximum number of results.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Gets a list of artist names. Ideal for autocomplete boxes.\n      tags:\n        - ArtistApi\n  \"/api/artists/{id}\":\n    delete:\n      deprecated: false\n      operationId: ArtistApi_Delete\n      parameters:\n        - description: ID of the artist to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Notes.\n          in: query\n          name: notes\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes an artist.\n      tags:\n        - ArtistApi\n    get:\n      deprecated: false\n      operationId: ArtistApi_GetOne\n      parameters:\n        - description: Artist ID (required).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: List of optional fields (optional). Possible values are Description,\n            Groups, Members, Names, Tags, WebLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - ArtistLinks\n              - ArtistLinksReverse\n              - BaseVoicebank\n              - Description\n              - MainPicture\n              - Names\n              - Tags\n              - WebLinks\n        - description: List of artist relations (optional). Possible values are\n            LatestAlbums, PopularAlbums, LatestSongs, PopularSongs, All\n          in: query\n          name: relations\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - LatestAlbums\n              - LatestEvents\n              - LatestSongs\n              - PopularAlbums\n              - PopularSongs\n              - All\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArtistForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ArtistForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ArtistForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ArtistForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/ArtistForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/ArtistForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/ArtistForApiContract\"\n      summary: Gets an artist by Id.\n      tags:\n        - ArtistApi\n  \"/api/artists/{id}/comments\":\n    get:\n      deprecated: false\n      description: Pagination and sorting might be added later.\n      operationId: ArtistApi_GetComments\n      parameters:\n        - description: ID of the artist whose comments to load.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n      summary: Gets a list of comments for an artist.\n      tags:\n        - ArtistApi\n    post:\n      deprecated: false\n      operationId: ArtistApi_PostNewComment\n      parameters:\n        - description: ID of the artist for which to create the comment.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n      summary: Posts a new comment.\n      tags:\n        - ArtistApi\n  \"/api/comments/{entryType}-comments\":\n    get:\n      deprecated: false\n      operationId: CommentApi_GetComments\n      parameters:\n        - description: Entry type.\n          in: path\n          name: entryType\n          required: true\n          schema:\n            type: string\n            enum:\n              - Undefined\n              - Album\n              - Artist\n              - DiscussionTopic\n              - PV\n              - ReleaseEvent\n              - ReleaseEventSeries\n              - Song\n              - SongList\n              - Tag\n              - User\n        - description: ID of the entry whose comments to load.\n          in: query\n          name: entryId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n      summary: Gets a list of comments for an entry.\n      tags:\n        - CommentApi\n    post:\n      deprecated: false\n      operationId: CommentApi_PostNewComment\n      parameters:\n        - description: Entry type.\n          in: path\n          name: entryType\n          required: true\n          schema:\n            type: string\n            enum:\n              - Undefined\n              - Album\n              - Artist\n              - DiscussionTopic\n              - PV\n              - ReleaseEvent\n              - ReleaseEventSeries\n              - Song\n              - SongList\n              - Tag\n              - User\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CommentForApiContract\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CommentForApiContract\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/CommentForApiContract\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/CommentForApiContract\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/CommentForApiContract\"\n        description: Comment data. Message, entry and author must be specified. Author must\n          match the logged in user.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n      summary: Posts a new comment.\n      tags:\n        - CommentApi\n  \"/api/comments/{entryType}-comments/{commentId}\":\n    delete:\n      deprecated: false\n      description: \"Normal users can delete their own comments, moderators can delete all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: CommentApi_DeleteComment\n      parameters:\n        - description: Entry type.\n          in: path\n          name: entryType\n          required: true\n          schema:\n            type: string\n            enum:\n              - Undefined\n              - Album\n              - Artist\n              - DiscussionTopic\n              - PV\n              - ReleaseEvent\n              - ReleaseEventSeries\n              - Song\n              - SongList\n              - Tag\n              - User\n        - description: ID of the comment to be deleted.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes a comment.\n      tags:\n        - CommentApi\n    post:\n      deprecated: false\n      description: \"Normal users can edit their own comments, moderators can edit all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: CommentApi_PostEditComment\n      parameters:\n        - description: Entry type.\n          in: path\n          name: entryType\n          required: true\n          schema:\n            type: string\n            enum:\n              - Undefined\n              - Album\n              - Artist\n              - DiscussionTopic\n              - PV\n              - ReleaseEvent\n              - ReleaseEventSeries\n              - Song\n              - SongList\n              - Tag\n              - User\n        - description: ID of the comment to be edited.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract3\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Updates a comment.\n      tags:\n        - CommentApi\n  \"/api/discussions/comments/{commentId}\":\n    delete:\n      deprecated: false\n      operationId: DiscussionApi_DeleteComment\n      parameters:\n        - in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      tags:\n        - DiscussionApi\n    post:\n      deprecated: false\n      operationId: DiscussionApi_PostEditComment\n      parameters:\n        - in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract2\"\n      responses:\n        \"204\":\n          description: No Content\n      tags:\n        - DiscussionApi\n  /api/discussions/folders:\n    get:\n      deprecated: false\n      operationId: DiscussionApi_GetFolders\n      parameters:\n        - in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - LastTopic\n              - TopicCount\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionFolderContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionFolderContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionFolderContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionFolderContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionFolderContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionFolderContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionFolderContract\"\n                type: array\n      tags:\n        - DiscussionApi\n    post:\n      deprecated: false\n      operationId: DiscussionApi_PostNewFolder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DiscussionFolderContract\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DiscussionFolderContract\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/DiscussionFolderContract\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/DiscussionFolderContract\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/DiscussionFolderContract\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiscussionFolderContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiscussionFolderContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiscussionFolderContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiscussionFolderContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/DiscussionFolderContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/DiscussionFolderContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/DiscussionFolderContract\"\n      tags:\n        - DiscussionApi\n  \"/api/discussions/folders/{folderId}/topics\":\n    get:\n      deprecated: true\n      operationId: DiscussionApi_GetTopicsForFolder\n      parameters:\n        - in: path\n          name: folderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Comments\n              - CommentCount\n              - Content\n              - LastComment\n              - All\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionTopicContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionTopicContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionTopicContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionTopicContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionTopicContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionTopicContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DiscussionTopicContract\"\n                type: array\n      tags:\n        - DiscussionApi\n    post:\n      deprecated: false\n      operationId: DiscussionApi_PostNewTopic\n      parameters:\n        - in: path\n          name: folderId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/DiscussionTopicContract\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n      tags:\n        - DiscussionApi\n  /api/discussions/topics:\n    get:\n      deprecated: false\n      operationId: DiscussionApi_GetTopics\n      parameters:\n        - in: query\n          name: folderId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - DateCreated\n              - LastCommentDate\n        - in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Comments\n              - CommentCount\n              - Content\n              - LastComment\n              - All\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_DiscussionTopicContra\\\n                  ct_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_DiscussionTopicContra\\\n                  ct_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_DiscussionTopicContra\\\n                  ct_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_DiscussionTopicContra\\\n                  ct_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_DiscussionTopicContra\\\n                  ct_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_DiscussionTopicContra\\\n                  ct_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_DiscussionTopicContra\\\n                  ct_\"\n      tags:\n        - DiscussionApi\n  \"/api/discussions/topics/{topicId}\":\n    delete:\n      deprecated: false\n      operationId: DiscussionApi_DeleteTopic\n      parameters:\n        - in: path\n          name: topicId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      tags:\n        - DiscussionApi\n    get:\n      deprecated: false\n      operationId: DiscussionApi_GetTopic\n      parameters:\n        - in: path\n          name: topicId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Comments\n              - CommentCount\n              - Content\n              - LastComment\n              - All\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/DiscussionTopicContract\"\n      tags:\n        - DiscussionApi\n    post:\n      deprecated: false\n      operationId: DiscussionApi_PostEditTopic\n      parameters:\n        - in: path\n          name: topicId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/DiscussionTopicContract\"\n      responses:\n        \"204\":\n          description: No Content\n      tags:\n        - DiscussionApi\n  \"/api/discussions/topics/{topicId}/comments\":\n    post:\n      deprecated: false\n      operationId: DiscussionApi_PostNewComment\n      parameters:\n        - in: path\n          name: topicId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract2\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n      tags:\n        - DiscussionApi\n  /api/entries:\n    get:\n      deprecated: false\n      operationId: EntryApi_GetList\n      parameters:\n        - description: Entry name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Filter by tag name (optional).\n          in: query\n          name: tagName\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by tag Id (optional).\n          in: query\n          name: tagId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: Include child tags, if the tags being filtered by have any.\n          in: query\n          name: childTags\n          required: false\n          schema:\n            type: boolean\n        - description: Included entry types (optional).\n          in: query\n          name: entryTypes\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Album\n              - Artist\n              - DiscussionTopic\n              - PV\n              - ReleaseEvent\n              - ReleaseEventSeries\n              - Song\n              - SongList\n              - Tag\n              - User\n        - description: Filter by entry status (optional).\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - Draft\n              - Finished\n              - Approved\n              - Locked\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 30).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Sort rule (optional, defaults to Name). Possible values are None,\n            Name, AdditionDate.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - AdditionDate\n              - ActivityDate\n        - description: Match mode for entry name (optional, defaults to Exact).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: List of optional fields (optional). Possible values are Description,\n            MainPicture, Names, Tags, WebLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Description\n              - MainPicture\n              - Names\n              - PVs\n              - Tags\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_EntryForApiContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_EntryForApiContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_EntryForApiContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_EntryForApiContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_EntryForApiContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_EntryForApiContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_EntryForApiContract_\"\n      summary: Find entries.\n      tags:\n        - EntryApi\n  /api/entries/names:\n    get:\n      deprecated: false\n      operationId: EntryApi_GetNames\n      parameters:\n        - description: Text query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Name match mode.\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Maximum number of results.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Gets a list of entry names. Ideal for autocomplete boxes.\n      tags:\n        - EntryApi\n  /api/pvs/for-songs:\n    get:\n      deprecated: false\n      operationId: PVApi_GetList\n      parameters:\n        - description: Uploader name (optional).\n          in: query\n          name: author\n          required: false\n          schema:\n            type: string\n        - description: Maximum number of results.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_PVForSongContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_PVForSongContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_PVForSongContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_PVForSongContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_PVForSongContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_PVForSongContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_PVForSongContract_\"\n      summary: Gets a list of PVs for songs.\n      tags:\n        - PVApi\n  /api/releaseEventSeries:\n    get:\n      deprecated: false\n      operationId: ReleaseEventSeriesApi_GetList\n      parameters:\n        - description: Text query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: First item to be retrieved (optional).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Match mode for event name (optional).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\\\n                  tract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\\\n                  tract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\\\n                  tract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\\\n                  tract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\\\n                  tract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\\\n                  tract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventSeriesCon\\\n                  tract_\"\n      summary: Gets a page of event series.\n      tags:\n        - ReleaseEventSeriesApi\n  \"/api/releaseEventSeries/{id}\":\n    delete:\n      deprecated: false\n      operationId: ReleaseEventSeriesApi_Delete\n      parameters:\n        - description: ID of the series to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Notes.\n          in: query\n          name: notes\n          required: false\n          schema:\n            type: string\n        - description: \"If true, the entry is hard deleted. Hard deleted entries cannot be\n            restored normally, but they will be moved to trash.\\r\n\n            \\            If false, the entry is soft deleted,\n            meaning it can still be restored.\"\n          in: query\n          name: hardDelete\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes an event series.\n      tags:\n        - ReleaseEventSeriesApi\n  /api/releaseEvents:\n    get:\n      deprecated: false\n      operationId: ReleaseEventApi_GetList\n      parameters:\n        - description: Event name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Match mode for event name (optional, defaults to Auto).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Filter by series Id.\n          in: query\n          name: seriesId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by events after this date (inclusive).\n          in: query\n          name: afterDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter by events before this date (exclusive).\n          in: query\n          name: beforeDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter by event category.\n          in: query\n          name: category\n          required: false\n          schema:\n            type: string\n            enum:\n              - Unspecified\n              - AlbumRelease\n              - Anniversary\n              - Club\n              - Concert\n              - Contest\n              - Convention\n              - Other\n        - description: Filter to include only events in user's events (interested or\n            attending).\n          in: query\n          name: userCollectionId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by one or more tag Ids (optional).\n          in: query\n          name: tagId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: Include child tags, if the tags being filtered by have any.\n          in: query\n          name: childTags\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by artist Id.\n          in: query\n          name: artistId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: Include child voicebanks, if the artist being filtered by has any.\n          in: query\n          name: childVoicebanks\n          required: false\n          schema:\n            type: boolean\n        - description: Include members of groups. This applies if {artistId} is a group.\n          in: query\n          name: includeMembers\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by entry status.\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - Draft\n              - Finished\n              - Approved\n              - Locked\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: \"Sort rule (optional, defaults to Name). \\r\n\n            \\            Possible values are None, Name, Date,\n            SeriesName.\"\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - Date\n              - AdditionDate\n              - SeriesName\n        - description: Optional fields (optional). Possible values are Description, Series.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Artists\n              - Description\n              - MainPicture\n              - Names\n              - Series\n              - SongList\n              - WebLinks\n        - description: Content language preference.\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventForApiCon\\\n                  tract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventForApiCon\\\n                  tract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventForApiCon\\\n                  tract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventForApiCon\\\n                  tract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventForApiCon\\\n                  tract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventForApiCon\\\n                  tract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ReleaseEventForApiCon\\\n                  tract_\"\n      summary: Gets a page of events.\n      tags:\n        - ReleaseEventApi\n  /api/releaseEvents/names:\n    get:\n      deprecated: false\n      operationId: ReleaseEventApi_GetNames\n      parameters:\n        - description: Event name query, for example \"Voc@loid\".\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Maximum number of search results.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: \"Find event names by a part of name.\\r\n\n        \\            \\r\n\n        \\            Matching is done anywhere from the name.\"\n      tags:\n        - ReleaseEventApi\n  \"/api/releaseEvents/{eventId}/albums\":\n    get:\n      deprecated: false\n      operationId: ReleaseEventApi_GetAlbums\n      parameters:\n        - description: Release event ID.\n          in: path\n          name: eventId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: List of optional album fields.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Artists\n              - Description\n              - Discs\n              - Identifiers\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - Tracks\n              - WebLinks\n        - description: Content language preference.\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AlbumForApiContract\"\n                type: array\n      summary: Gets a list of albums for a specific event.\n      tags:\n        - ReleaseEventApi\n  \"/api/releaseEvents/{eventId}/published-songs\":\n    get:\n      deprecated: false\n      operationId: ReleaseEventApi_GetPublishedSongs\n      parameters:\n        - description: Event ID.\n          in: path\n          name: eventId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: List of optional song fields.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Content language preference.\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n      summary: Gets a list of songs for a specific event.\n      tags:\n        - ReleaseEventApi\n  \"/api/releaseEvents/{eventId}/reports\":\n    post:\n      deprecated: false\n      operationId: ReleaseEventApi_PostReport\n      parameters:\n        - description: Event to be reported.\n          in: path\n          name: eventId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Report type.\n          in: query\n          name: reportType\n          required: true\n          schema:\n            type: string\n            enum:\n              - InvalidInfo\n              - Duplicate\n              - Inappropriate\n              - Other\n        - description: Notes. Optional.\n          in: query\n          name: notes\n          required: true\n          schema:\n            type: string\n        - description: Version to be reported. Optional.\n          in: query\n          name: versionNumber\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      summary: Creates a new report.\n      tags:\n        - ReleaseEventApi\n  \"/api/releaseEvents/{id}\":\n    delete:\n      deprecated: false\n      operationId: ReleaseEventApi_Delete\n      parameters:\n        - description: ID of the event to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Notes.\n          in: query\n          name: notes\n          required: false\n          schema:\n            type: string\n        - description: \"If true, the entry is hard deleted. Hard deleted entries cannot be\n            restored normally, but they will be moved to trash.\\r\n\n            \\            If false, the entry is soft deleted,\n            meaning it can still be restored.\"\n          in: query\n          name: hardDelete\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes an event.\n      tags:\n        - ReleaseEventApi\n    get:\n      deprecated: false\n      operationId: ReleaseEventApi_GetOne\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Artists\n              - Description\n              - MainPicture\n              - Names\n              - Series\n              - SongList\n              - WebLinks\n        - in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n      tags:\n        - ReleaseEventApi\n  \"/api/resources/{cultureCode}\":\n    get:\n      deprecated: false\n      operationId: ResourcesApi_GetList\n      parameters:\n        - description: Culture code, for example \"en-US\" or \"fi-FI\".\n          in: path\n          name: cultureCode\n          required: true\n          schema:\n            type: string\n        - description: Names of resource sets to be returned. More than one value can be\n            specified. For example \"artistTypeNames\"\n          in: query\n          name: setNames\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: object\n            text/json:\n              schema:\n                additionalProperties:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: object\n      summary: Gets a number of resource sets for a specific culture.\n      tags:\n        - ResourcesApi\n  /api/songLists:\n    post:\n      deprecated: false\n      operationId: SongListApi_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SongListForEditContract\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SongListForEditContract\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/SongListForEditContract\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/SongListForEditContract\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/SongListForEditContract\"\n        description: Song list properties.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                format: int32\n                type: integer\n            text/json:\n              schema:\n                format: int32\n                type: integer\n            application/xml:\n              schema:\n                format: int32\n                type: integer\n            text/xml:\n              schema:\n                format: int32\n                type: integer\n            text/javascript:\n              schema:\n                format: int32\n                type: integer\n            application/javascript:\n              schema:\n                format: int32\n                type: integer\n            application/json-p:\n              schema:\n                format: int32\n                type: integer\n      summary: Creates a song list.\n      tags:\n        - SongListApi\n  \"/api/songLists/comments/{commentId}\":\n    delete:\n      deprecated: false\n      description: \"Normal users can delete their own comments, moderators can delete all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: SongListApi_DeleteComment\n      parameters:\n        - description: ID of the comment to be deleted.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes a comment.\n      tags:\n        - SongListApi\n    post:\n      deprecated: false\n      description: \"Normal users can edit their own comments, moderators can edit all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: SongListApi_PostEditComment\n      parameters:\n        - description: ID of the comment to be edited.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract3\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Updates a comment.\n      tags:\n        - SongListApi\n  /api/songLists/featured:\n    get:\n      deprecated: false\n      operationId: SongListApi_GetFeaturedLists\n      parameters:\n        - description: Song list name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Match mode for list name (optional, defaults to Auto).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Filter by a specific featured category. If empty, all categories are\n            returned.\n          in: query\n          name: featuredCategory\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Concerts\n              - VocaloidRanking\n              - Pools\n              - Other\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 50).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: List sort rule. Possible values are Nothing, Date, CreateDate, Name.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - Date\n              - CreateDate\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n      summary: Gets a list of featured song lists.\n      tags:\n        - SongListApi\n  /api/songLists/featured/names:\n    get:\n      deprecated: false\n      operationId: SongListApi_GetFeaturedListNames\n      parameters:\n        - description: Text query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Name match mode. Words is treated the same as Partial.\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Filter by a specific featured category. If empty, all categories are\n            returned.\n          in: query\n          name: featuredCategory\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Concerts\n              - VocaloidRanking\n              - Pools\n              - Other\n        - description: Maximum number of results.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Gets a list of featuedd list names. Ideal for autocomplete boxes.\n      tags:\n        - SongListApi\n  \"/api/songLists/{id}\":\n    delete:\n      deprecated: false\n      operationId: SongListApi_Delete\n      parameters:\n        - description: ID of the list to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Notes.\n          in: query\n          name: notes\n          required: false\n          schema:\n            type: string\n        - description: \"If true, the entry is hard deleted. Hard deleted entries cannot be\n            restored normally, but they will be moved to trash.\\r\n\n            \\            If false, the entry is soft deleted,\n            meaning it can still be restored.\"\n          in: query\n          name: hardDelete\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes a song list.\n      tags:\n        - SongListApi\n  \"/api/songLists/{listId}/comments\":\n    get:\n      deprecated: false\n      operationId: SongListApi_GetComments\n      parameters:\n        - description: ID of the list whose comments to load.\n          in: path\n          name: listId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n      summary: Gets a list of comments for a song list.\n      tags:\n        - SongListApi\n    post:\n      deprecated: false\n      operationId: SongListApi_PostNewComment\n      parameters:\n        - description: ID of the song list for which to create the comment.\n          in: path\n          name: listId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n      summary: Posts a new comment.\n      tags:\n        - SongListApi\n  \"/api/songLists/{listId}/songs\":\n    get:\n      deprecated: false\n      operationId: SongListApi_GetSongs\n      parameters:\n        - description: ID of the song list.\n          in: path\n          name: listId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Song name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Filtered song types (optional).\n          in: query\n          name: songTypes\n          required: false\n          schema:\n            type: string\n        - description: Filter by one or more PV services (separated by commas). The song\n            will pass the filter if it has a PV for any of the matched services.\n          in: query\n          name: pvServices\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - NicoNicoDouga\n              - Youtube\n              - SoundCloud\n              - Vimeo\n              - Piapro\n              - Bilibili\n              - File\n              - LocalFile\n              - Creofuga\n              - Bandcamp\n        - description: Filter by one or more tag Ids (optional).\n          in: query\n          name: tagId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: Filter by artist Id.\n          in: query\n          name: artistId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: Include child voicebanks, if the artist being filtered by has any.\n          in: query\n          name: childVoicebanks\n          required: false\n          schema:\n            type: boolean\n        - description: List of advanced filters (optional).\n          in: query\n          name: advancedFilters\n          required: false\n          explode: true\n          schema:\n            type: array\n            items: {}\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 50).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Song sort rule (optional, by default songs are sorted by song list\n            order).\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - AdditionDate\n              - PublishDate\n              - FavoritedTimes\n              - RatingScore\n        - description: Match mode for song name (optional, defaults to Auto).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: List of optional fields (optional). Possible values are Albums,\n            Artists, Names, PVs, Tags, ThumbUrl, WebLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongInListForApiContr\\\n                  act_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongInListForApiContr\\\n                  act_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongInListForApiContr\\\n                  act_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongInListForApiContr\\\n                  act_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongInListForApiContr\\\n                  act_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongInListForApiContr\\\n                  act_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongInListForApiContr\\\n                  act_\"\n      summary: Gets a list of songs in a song list.\n      tags:\n        - SongListApi\n  /api/songs:\n    get:\n      deprecated: false\n      operationId: SongApi_GetList\n      parameters:\n        - description: Song name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: \"Filtered song types (optional). \\r\n\n            \\            Possible values are Original, Remaster,\n            Remix, Cover, Instrumental, Mashup, MusicPV, DramaPV, Other.\"\n          in: query\n          name: songTypes\n          required: false\n          schema:\n            type: string\n        - description: Filter by songs published after this date (inclusive).\n          in: query\n          name: afterDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter by songs published before this date (exclusive).\n          in: query\n          name: beforeDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter by one or more tag names (optional).\n          in: query\n          name: tagName\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filter by one or more tag Ids (optional).\n          in: query\n          name: tagId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: Include child tags, if the tags being filtered by have any.\n          in: query\n          name: childTags\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by artist Id.\n          in: query\n          name: artistId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: \"Filter by artist participation status. Only valid if artistId is\n            specified.\\r\n\n            \\            Everything (default): Show all songs by\n            that artist (no filter).\\r\n\n            \\            OnlyMainAlbums: Show only main songs by\n            that artist.\\r\n\n            \\            OnlyCollaborations: Show only\n            collaborations by that artist.\"\n          in: query\n          name: artistParticipationStatus\n          required: false\n          schema:\n            type: string\n            enum:\n              - Everything\n              - OnlyMainAlbums\n              - OnlyCollaborations\n        - description: Include child voicebanks, if the artist being filtered by has any.\n          in: query\n          name: childVoicebanks\n          required: false\n          schema:\n            type: boolean\n        - description: Include members of groups. This applies if {artistId} is a group.\n          in: query\n          name: includeMembers\n          required: false\n          schema:\n            type: boolean\n        - description: Whether to only include songs with at least one PV.\n          in: query\n          name: onlyWithPvs\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by one or more PV services (separated by commas). The song\n            will pass the filter if it has a PV for any of the matched services.\n          in: query\n          name: pvServices\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - NicoNicoDouga\n              - Youtube\n              - SoundCloud\n              - Vimeo\n              - Piapro\n              - Bilibili\n              - File\n              - LocalFile\n              - Creofuga\n              - Bandcamp\n        - description: Allow only entries that have been created at most this many hours\n            ago. By default there is no filtering.\n          in: query\n          name: since\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Minimum rating score. Optional.\n          in: query\n          name: minScore\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by user's rated songs. By default there is no filtering.\n          in: query\n          name: userCollectionId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by release event. By default there is no filtering.\n          in: query\n          name: releaseEventId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by entry status (optional).\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - Draft\n              - Finished\n              - Approved\n              - Locked\n        - description: List of advanced filters (optional).\n          in: query\n          name: advancedFilters\n          required: false\n          explode: true\n          schema:\n            type: array\n            items: {}\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 50).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Sort rule (optional, defaults to Name). Possible values are None,\n            Name, AdditionDate, FavoritedTimes, RatingScore.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - AdditionDate\n              - PublishDate\n              - FavoritedTimes\n              - RatingScore\n        - description: \"Whether the search should prefer accurate matches. \\r\n\n            \\            If this is true, entries that match by\n            prefix will be moved first, instead of being sorted\n            alphabetically.\\r\n\n            \\            Requires a text query. Does not support\n            pagination.\\r\n\n            \\            This is mostly useful for autocomplete\n            boxes.\"\n          in: query\n          name: preferAccurateMatches\n          required: false\n          schema:\n            type: boolean\n        - description: Match mode for song name (optional, defaults to Exact).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: List of optional fields (optional). Possible values are Albums,\n            Artists, Names, PVs, Tags, ThumbUrl, WebLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongForApiContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongForApiContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongForApiContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongForApiContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongForApiContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongForApiContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongForApiContract_\"\n      summary: Find songs.\n      tags:\n        - SongApi\n  /api/songs/byPv:\n    get:\n      deprecated: false\n      operationId: SongApi_GetByPV\n      parameters:\n        - description: PV service (required). Possible values are NicoNicoDouga, Youtube,\n            SoundCloud, Vimeo, Piapro, Bilibili.\n          in: query\n          name: pvService\n          required: true\n          schema:\n            type: string\n            enum:\n              - NicoNicoDouga\n              - Youtube\n              - SoundCloud\n              - Vimeo\n              - Piapro\n              - Bilibili\n              - File\n              - LocalFile\n              - Creofuga\n              - Bandcamp\n        - description: PV Id (required). For example sm123456.\n          in: query\n          name: pvId\n          required: true\n          schema:\n            type: string\n        - description: List of optional fields (optional). Possible values are Albums,\n            Artists, Names, PVs, Tags, ThumbUrl, WebLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n      summary: Gets a song by PV.\n      tags:\n        - SongApi\n  \"/api/songs/comments/{commentId}\":\n    delete:\n      deprecated: false\n      description: \"Normal users can delete their own comments, moderators can delete all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: SongApi_DeleteComment\n      parameters:\n        - description: ID of the comment to be deleted.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes a comment.\n      tags:\n        - SongApi\n    post:\n      deprecated: false\n      description: \"Normal users can edit their own comments, moderators can edit all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: SongApi_PostEditComment\n      parameters:\n        - description: ID of the comment to be edited.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract3\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Updates a comment.\n      tags:\n        - SongApi\n  /api/songs/highlighted:\n    get:\n      deprecated: false\n      description: Output is cached for 1 hour.\n      operationId: SongApi_GetHighlightedSongs\n      parameters:\n        - in: query\n          name: languagePreference\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n        - in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n      summary: Gets list of highlighted songs, same as front page.\n      tags:\n        - SongApi\n  \"/api/songs/lyrics/{lyricsId}\":\n    get:\n      deprecated: false\n      description: Output is cached. Specify song version as parameter to refresh.\n      operationId: SongApi_GetLyrics\n      parameters:\n        - description: Lyrics ID.\n          in: path\n          name: lyricsId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LyricsForSongContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/LyricsForSongContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/LyricsForSongContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/LyricsForSongContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/LyricsForSongContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/LyricsForSongContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/LyricsForSongContract\"\n      summary: Gets lyrics by ID.\n      tags:\n        - SongApi\n  /api/songs/names:\n    get:\n      deprecated: false\n      operationId: SongApi_GetNames\n      parameters:\n        - description: Text query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Name match mode.\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Maximum number of results.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Gets a list of song names. Ideal for autocomplete boxes.\n      tags:\n        - SongApi\n  /api/songs/top-rated:\n    get:\n      deprecated: false\n      operationId: SongApi_GetTopSongs\n      parameters:\n        - description: Duration in hours from which to get songs.\n          in: query\n          name: durationHours\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Lower bound of the date. Optional.\n          in: query\n          name: startDate\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filtering mode.\n          in: query\n          name: filterBy\n          required: false\n          schema:\n            type: string\n            enum:\n              - CreateDate\n              - PublishDate\n              - Popularity\n        - description: Vocalist selection.\n          in: query\n          name: vocalist\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Vocaloid\n              - UTAU\n              - CeVIO\n        - description: Maximum number of results to be loaded (optional).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Optional song fields to load.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Language preference.\n          in: query\n          name: languagePreference\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n      summary: Gets top rated songs.\n      tags:\n        - SongApi\n  \"/api/songs/{id}\":\n    delete:\n      deprecated: false\n      operationId: SongApi_Delete\n      parameters:\n        - description: ID of the song to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Notes.\n          in: query\n          name: notes\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes a song.\n      tags:\n        - SongApi\n    get:\n      deprecated: false\n      operationId: SongApi_GetById\n      parameters:\n        - description: Song Id (required).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: \"List of optional fields (optional). \\r\n\n            \\            Possible values are Albums, Artists, Names,\n            PVs, Tags, ThumbUrl, WebLinks.\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/SongForApiContract\"\n      summary: Gets a song by Id.\n      tags:\n        - SongApi\n  \"/api/songs/{id}/comments\":\n    get:\n      deprecated: false\n      description: Pagination and sorting might be added later.\n      operationId: SongApi_GetComments\n      parameters:\n        - description: ID of the song whose comments to load.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommentForApiContract\"\n                type: array\n      summary: Gets a list of comments for a song.\n      tags:\n        - SongApi\n    post:\n      deprecated: false\n      operationId: SongApi_PostNewComment\n      parameters:\n        - description: ID of the song for which to create the comment.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n      summary: Posts a new comment.\n      tags:\n        - SongApi\n  \"/api/songs/{id}/derived\":\n    get:\n      deprecated: false\n      description: Pagination and sorting might be added later.\n      operationId: SongApi_GetDerived\n      parameters:\n        - description: Song Id (required).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: \"List of optional fields (optional). \\r\n\n            \\            Possible values are Albums, Artists, Names,\n            PVs, Tags, ThumbUrl, WebLinks.\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SongForApiContract\"\n                type: array\n      summary: Gets derived (alternate versions) of a song.\n      tags:\n        - SongApi\n  \"/api/songs/{id}/ratings\":\n    get:\n      deprecated: false\n      description: \"The result includes ratings and user information.\\r\n\n        \\            For users who have requested not to make their\n        ratings public, the user will be empty.\"\n      operationId: SongApi_GetRatings\n      parameters:\n        - description: Song ID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Optional fields for the users.\n          in: query\n          name: userFields\n          required: true\n          schema:\n            type: string\n            enum:\n              - None\n              - KnownLanguages\n              - MainPicture\n              - OldUsernames\n        - description: Content language preference.\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RatedSongForUserForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RatedSongForUserForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RatedSongForUserForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RatedSongForUserForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RatedSongForUserForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RatedSongForUserForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RatedSongForUserForApiContract\"\n                type: array\n      summary: Get ratings for a song.\n      tags:\n        - SongApi\n    post:\n      deprecated: false\n      description: \"If the user has already rated the song, any previous rating is\n        replaced.\\r\n\n        \\            Authorization cookie must be included.\\r\n\n        \\            This API supports CORS.\"\n      operationId: SongApi_PostRating\n      parameters:\n        - description: ID of the song to be rated.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SongRatingContract\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SongRatingContract\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/SongRatingContract\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/SongRatingContract\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/SongRatingContract\"\n        description: Rating to be given. Possible values are Nothing, Like, Favorite.\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      summary: Add or update rating for a specific song, for the currently logged in\n        user.\n      tags:\n        - SongApi\n  \"/api/songs/{id}/related\":\n    get:\n      deprecated: false\n      operationId: SongApi_GetRelated\n      parameters:\n        - description: Song whose related songs are to be queried.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Optional song fields.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Content language preference.\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RelatedSongsContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/RelatedSongsContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/RelatedSongsContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RelatedSongsContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/RelatedSongsContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/RelatedSongsContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/RelatedSongsContract\"\n      summary: Gets related songs.\n      tags:\n        - SongApi\n  /api/tags:\n    get:\n      deprecated: false\n      operationId: TagApi_GetList\n      parameters:\n        - description: Tag name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Whether to allow child tags. If this is false, only root tags (that\n            aren't children of any other tag) will be included.\n          in: query\n          name: allowChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Filter tags by category (optional). If specified, this must be an\n            exact match (case insensitive).\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 30).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Match mode for song name (optional, defaults to Exact).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Sort rule (optional, by default tags are sorted by name).Possible\n            values are Name and UsageCount.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Name\n              - AdditionDate\n              - UsageCount\n        - description: \"Whether the search should prefer accurate matches. \\r\n\n            \\            If this is true, entries that match by\n            prefix will be moved first, instead of being sorted\n            alphabetically.\\r\n\n            \\            Requires a text query. Does not support\n            pagination.\\r\n\n            \\            This is mostly useful for autocomplete\n            boxes.\"\n          in: query\n          name: preferAccurateMatches\n          required: false\n          schema:\n            type: boolean\n        - description: List of optional fields (optional).\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - AliasedTo\n              - Description\n              - MainPicture\n              - Names\n              - Parent\n              - RelatedTags\n              - TranslatedDescription\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n        - in: query\n          name: target\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Album\n              - Artist\n              - AlbumArtist\n              - Event\n              - Song\n              - AlbumSong\n              - ArtistSong\n              - All\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_TagForApiContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_TagForApiContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_TagForApiContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_TagForApiContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_TagForApiContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_TagForApiContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_TagForApiContract_\"\n      summary: Find tags.\n      tags:\n        - TagApi\n    post:\n      deprecated: false\n      operationId: TagApi_PostNewTag\n      parameters:\n        - description: Tag English name. Tag names must be unique.\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagBaseContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TagBaseContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TagBaseContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TagBaseContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/TagBaseContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/TagBaseContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/TagBaseContract\"\n        \"400\":\n          description: If tag name is already in use\n      summary: Creates a new tag.\n      tags:\n        - TagApi\n  \"/api/tags/byName/{name}\":\n    get:\n      deprecated: true\n      operationId: TagApi_GetByName\n      parameters:\n        - description: Tag name (required).\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: List of optional fields (optional).\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - AliasedTo\n              - Description\n              - MainPicture\n              - Names\n              - Parent\n              - RelatedTags\n              - TranslatedDescription\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n      summary: DEPRECATED. Gets a tag by name.\n      tags:\n        - TagApi\n  /api/tags/categoryNames:\n    get:\n      deprecated: false\n      operationId: TagApi_GetCategoryNamesList\n      parameters:\n        - in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Gets a list of tag category names.\n      tags:\n        - TagApi\n  \"/api/tags/comments/{commentId}\":\n    delete:\n      deprecated: false\n      operationId: TagApi_DeleteComment\n      parameters:\n        - description: ID of the comment to be deleted.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      summary: \"Deletes a comment.\\r\n\n        \\            Normal users can delete their own comments,\n        moderators can delete all comments.\\r\n\n        \\            Requires login.\"\n      tags:\n        - TagApi\n    post:\n      deprecated: false\n      operationId: TagApi_PostEditComment\n      parameters:\n        - description: ID of the comment to be edited.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract3\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: \"Updates a comment.\\r\n\n        \\            Normal users can edit their own comments,\n        moderators can edit all comments.\\r\n\n        \\            Requires login.\"\n      tags:\n        - TagApi\n  /api/tags/names:\n    get:\n      deprecated: false\n      operationId: TagApi_GetNames\n      parameters:\n        - description: Tag name query, for example \"rock\".\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: \"Whether to find tags that are aliases of other tags as well. \\r\n\n            \\            If false, only tags that are not aliases\n            will be listed.\"\n          in: query\n          name: allowAliases\n          required: false\n          schema:\n            type: boolean\n        - description: Maximum number of search results.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: \"Find tag names by a part of name.\\r\n\n        \\            \\r\n\n        \\            Matching is done anywhere from the name.\"\n      tags:\n        - TagApi\n  /api/tags/top:\n    get:\n      deprecated: false\n      operationId: TagApi_GetTopTags\n      parameters:\n        - description: Tag category, for example \"Genres\". Optional - if not specified, no\n            filtering is done.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: Maximum number of tags to return.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagBaseContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagBaseContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagBaseContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagBaseContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagBaseContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagBaseContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagBaseContract\"\n                type: array\n      summary: Gets the most common tags in a category.\n      tags:\n        - TagApi\n  \"/api/tags/{id}\":\n    delete:\n      deprecated: false\n      operationId: TagApi_Delete\n      parameters:\n        - description: ID of the tag to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Notes (optional).\n          in: query\n          name: notes\n          required: false\n          schema:\n            type: string\n        - description: \"If true, the entry is hard deleted. Hard deleted entries cannot be\n            restored normally, but they will be moved to trash.\\r\n\n            \\            If false, the entry is soft deleted,\n            meaning it can still be restored.\"\n          in: query\n          name: hardDelete\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes a tag.\n      tags:\n        - TagApi\n    get:\n      deprecated: false\n      operationId: TagApi_GetById\n      parameters:\n        - description: Tag ID (required).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: List of optional fields (optional).\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - AliasedTo\n              - Description\n              - MainPicture\n              - Names\n              - Parent\n              - RelatedTags\n              - TranslatedDescription\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/TagForApiContract\"\n      summary: Gets a tag by ID.\n      tags:\n        - TagApi\n  \"/api/tags/{tagId}/children\":\n    get:\n      deprecated: false\n      operationId: TagApi_GetChildTags\n      parameters:\n        - description: ID of the tag whose children to load.\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: List of optional fields (optional).\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - AliasedTo\n              - Description\n              - MainPicture\n              - Names\n              - Parent\n              - RelatedTags\n              - TranslatedDescription\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagForApiContract\"\n                type: array\n      summary: \"Gets a list of child tags for a tag.\\r\n\n        \\            Only direct children will be included.\"\n      tags:\n        - TagApi\n  \"/api/tags/{tagId}/comments\":\n    get:\n      deprecated: false\n      operationId: TagApi_GetComments\n      parameters:\n        - description: ID of the tag whose comments to load.\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n      summary: \"Gets a list of comments for a tag.\\r\n\n        \\            Note: pagination and sorting might be added later.\"\n      tags:\n        - TagApi\n    post:\n      deprecated: false\n      operationId: TagApi_PostNewComment\n      parameters:\n        - description: ID of the tag for which to create the comment.\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n      summary: Posts a new comment.\n      tags:\n        - TagApi\n  \"/api/tags/{tagId}/reports\":\n    post:\n      deprecated: false\n      operationId: TagApi_PostReport\n      parameters:\n        - description: Tag to be reported.\n          in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Report type.\n          in: query\n          name: reportType\n          required: true\n          schema:\n            type: string\n            enum:\n              - InvalidInfo\n              - Duplicate\n              - Inappropriate\n              - Other\n        - description: Notes. Optional.\n          in: query\n          name: notes\n          required: true\n          schema:\n            type: string\n        - description: Version to be reported. Optional.\n          in: query\n          name: versionNumber\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      summary: Creates a new report.\n      tags:\n        - TagApi\n  /api/users:\n    get:\n      deprecated: false\n      operationId: UserApi_GetList\n      parameters:\n        - description: User name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Filter by user group. Only one value supported for now. Optional.\n          in: query\n          name: groups\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Limited\n              - Regular\n              - Trusted\n              - Moderator\n              - Admin\n        - description: Filter by users who joined after this date (inclusive).\n          in: query\n          name: joinDateAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Filter by users who joined before this date (exclusive).\n          in: query\n          name: joinDateBefore\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Name match mode.\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Index of the first entry to be loaded.\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to get total number of results.\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Sort rule.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - RegisterDate\n              - Name\n              - Group\n        - description: Whether to include disabled user accounts.\n          in: query\n          name: includeDisabled\n          required: false\n          schema:\n            type: boolean\n        - description: Whether to only include verified artists.\n          in: query\n          name: onlyVerified\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by known language (optional). This is the ISO 639-1 language\n            code, for example \"en\" or \"zh\".\n          in: query\n          name: knowsLanguage\n          required: false\n          schema:\n            type: string\n        - description: Optional fields. Possible values are None and MainPicture. Optional.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - KnownLanguages\n              - MainPicture\n              - OldUsernames\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserForApiContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserForApiContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserForApiContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserForApiContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserForApiContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserForApiContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserForApiContract_\"\n      summary: Gets a list of users.\n      tags:\n        - UserApi\n  /api/users/current:\n    get:\n      deprecated: false\n      description: \"Requires login information.\\r\n\n        \\            This API supports CORS, and is restricted to\n        specific origins.\"\n      operationId: UserApi_GetCurrent\n      parameters:\n        - description: Optional fields.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - KnownLanguages\n              - MainPicture\n              - OldUsernames\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n      summary: Gets information about the currently logged in user.\n      tags:\n        - UserApi\n  \"/api/users/current/albums/{albumId}\":\n    post:\n      deprecated: false\n      description: \"If the user has already rated the album, any previous rating is\n        replaced.\\r\n\n        \\            Authorization cookie must be included.\"\n      operationId: UserApi_PostAlbumStatus\n      parameters:\n        - description: ID of the album to be rated.\n          in: path\n          name: albumId\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Collection status. Possible values are Nothing, Wishlisted, Ordered\n            and Owned.\n          in: query\n          name: collectionStatus\n          required: true\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Wishlisted\n              - Ordered\n              - Owned\n        - description: Album media type. Possible values are PhysicalDisc, DigitalDownload\n            and Other.\n          in: query\n          name: mediaType\n          required: true\n          schema:\n            type: string\n            enum:\n              - PhysicalDisc\n              - DigitalDownload\n              - Other\n        - description: Rating to be given. Possible values are between 0 and 5.\n          in: query\n          name: rating\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/xml:\n              schema:\n                type: string\n            text/javascript:\n              schema:\n                type: string\n            application/javascript:\n              schema:\n                type: string\n            application/json-p:\n              schema:\n                type: string\n      summary: Add or update collection status, media type and rating for a specific\n        album, for the currently logged in user.\n      tags:\n        - UserApi\n  \"/api/users/current/followedTags/{tagId}\":\n    delete:\n      deprecated: false\n      operationId: UserApi_DeleteFollowedTag\n      parameters:\n        - in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      tags:\n        - UserApi\n    post:\n      deprecated: false\n      operationId: UserApi_PostFollowedTag\n      parameters:\n        - in: path\n          name: tagId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      tags:\n        - UserApi\n  \"/api/users/current/ratedSongs/{songId}\":\n    get:\n      deprecated: false\n      description: Requires authentication.\n      operationId: UserApi_GetSongRatingForCurrent\n      parameters:\n        - description: ID of the song whose rating is to be checked.\n          in: path\n          name: songId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            text/json:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            application/xml:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            text/xml:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            text/javascript:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            application/javascript:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            application/json-p:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n      summary: Gets currently logged in user's rating for a song.\n      tags:\n        - UserApi\n  /api/users/current/refreshEntryEdit:\n    post:\n      deprecated: false\n      operationId: UserApi_PostRefreshEntryEdit\n      parameters:\n        - description: Type of entry.\n          in: query\n          name: entryType\n          required: true\n          schema:\n            type: string\n            enum:\n              - Undefined\n              - Album\n              - Artist\n              - DiscussionTopic\n              - PV\n              - ReleaseEvent\n              - ReleaseEventSeries\n              - Song\n              - SongList\n              - Tag\n              - User\n        - description: Entry ID.\n          in: query\n          name: entryId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      summary: Refresh entry edit status, indicating that the current user is still\n        editing that entry.\n      tags:\n        - UserApi\n  \"/api/users/current/songTags/{songId}\":\n    post:\n      deprecated: false\n      description: \"This can only be used to add tags - existing tags will not be removed.\n        \\r\n\n        \\            Nothing will be done for tags that are already\n        applied by the current user for the song.\\r\n\n        \\            Authorization cookie is required.\"\n      operationId: UserApi_PostSongTags\n      parameters:\n        - description: ID of the song to be tagged.\n          in: path\n          name: songId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/TagBaseContract\"\n              type: array\n          text/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/TagBaseContract\"\n              type: array\n          application/xml:\n            schema:\n              items:\n                $ref: \"#/components/schemas/TagBaseContract\"\n              type: array\n          text/xml:\n            schema:\n              items:\n                $ref: \"#/components/schemas/TagBaseContract\"\n              type: array\n          application/x-www-form-urlencoded:\n            schema:\n              items:\n                $ref: \"#/components/schemas/TagBaseContract\"\n              type: array\n        description: List of tags to be appended.\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      summary: Appends tags for a song, by the currently logged in user.\n      tags:\n        - UserApi\n  \"/api/users/messages/{messageId}\":\n    get:\n      deprecated: false\n      description: \"The message will be marked as read.\\r\n\n        \\            User can only load messages from their own inbox.\"\n      operationId: UserApi_GetMessage\n      parameters:\n        - description: ID of the message.\n          in: path\n          name: messageId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n      summary: Gets a user message.\n      tags:\n        - UserApi\n  /api/users/names:\n    get:\n      deprecated: false\n      operationId: UserApi_GetNames\n      parameters:\n        - description: Text query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Name match mode. Words is treated the same as Partial.\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: Maximum number of results.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to include disabled user accounts. If false, disabled\n            accounts are excluded.\n          in: query\n          name: includeDisabled\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/json:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/xml:\n              schema:\n                items:\n                  type: string\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  type: string\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Gets a list of user names. Ideal for autocomplete boxes.\n      tags:\n        - UserApi\n  \"/api/users/profileComments/{commentId}\":\n    delete:\n      deprecated: false\n      description: \"Normal users can delete their own comments, moderators can delete all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: UserApi_DeleteProfileComment\n      parameters:\n        - description: ID of the comment to be deleted.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes a comment.\n      tags:\n        - UserApi\n    post:\n      deprecated: false\n      description: \"Normal users can edit their own comments, moderators can edit all\n        comments.\\r\n\n        \\            Requires login.\"\n      operationId: UserApi_PostEditComment\n      parameters:\n        - description: ID of the comment to be edited.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract3\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Updates a comment.\n      tags:\n        - UserApi\n  \"/api/users/{id}\":\n    get:\n      deprecated: false\n      operationId: UserApi_GetOne\n      parameters:\n        - description: User ID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Optional fields.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - KnownLanguages\n              - MainPicture\n              - OldUsernames\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/UserForApiContract\"\n      summary: Gets user by ID.\n      tags:\n        - UserApi\n  \"/api/users/{id}/albums\":\n    get:\n      deprecated: false\n      description: \"This includes albums that have been rated by the user as well as albums\n        that the user has bought or wishlisted.\\r\n\n        \\            Note that the user might have set his album\n        ownership status and media type as private, in which case those\n        properties are not included.\"\n      operationId: UserApi_GetAlbumCollection\n      parameters:\n        - description: ID of the user whose albums are to be browsed.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Album name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Filter by tag Id (optional).\n          in: query\n          name: tagId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by tag (optional).\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n        - description: Filter by album artist (optional).\n          in: query\n          name: artistId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by a comma-separated list of purchase statuses (optional).\n            Possible values are Nothing, Wishlisted, Ordered, Owned, and all\n            combinations of these.\n          in: query\n          name: purchaseStatuses\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Wishlisted\n              - Ordered\n              - Owned\n              - All\n        - description: Filter by release event. Optional.\n          in: query\n          name: releaseEventId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Filter by album type (optional).\n          in: query\n          name: albumTypes\n          required: false\n          schema:\n            type: string\n            enum:\n              - Unknown\n              - Album\n              - Single\n              - EP\n              - SplitAlbum\n              - Compilation\n              - Video\n              - Artbook\n              - Game\n              - Fanmade\n              - Instrumental\n              - Other\n        - description: List of advanced filters (optional).\n          in: query\n          name: advancedFilters\n          required: false\n          explode: true\n          schema:\n            type: array\n            items: {}\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 50).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Sort rule (optional, defaults to Name). Possible values are None,\n            Name, ReleaseDate, AdditionDate, RatingAverage, RatingTotal,\n            CollectionCount.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - ReleaseDate\n              - ReleaseDateWithNulls\n              - AdditionDate\n              - RatingAverage\n              - RatingTotal\n              - NameThenReleaseDate\n              - CollectionCount\n        - description: Match mode for album name (optional, defaults to Auto).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: List of optional fields (optional). Possible values are Artists,\n            MainPicture, Names, PVs, Tags, WebLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Artists\n              - Description\n              - Discs\n              - Identifiers\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - Tracks\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForUserForApiCon\\\n                  tract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForUserForApiCon\\\n                  tract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForUserForApiCon\\\n                  tract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForUserForApiCon\\\n                  tract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForUserForApiCon\\\n                  tract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForUserForApiCon\\\n                  tract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_AlbumForUserForApiCon\\\n                  tract_\"\n      summary: Gets a list of albums in a user's collection.\n      tags:\n        - UserApi\n  \"/api/users/{id}/events\":\n    get:\n      deprecated: false\n      operationId: UserApi_GetEvents\n      parameters:\n        - description: User ID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Type of event subscription.\n          in: query\n          name: relationshipType\n          required: true\n          schema:\n            type: string\n            enum:\n              - Interested\n              - Attending\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n                type: array\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n                type: array\n            application/json-p:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n                type: array\n      summary: Gets a list of events a user has subscribed to.\n      tags:\n        - UserApi\n  \"/api/users/{id}/followedArtists\":\n    get:\n      deprecated: false\n      operationId: UserApi_GetFollowedArtists\n      parameters:\n        - description: ID of the user whose followed artists are to be browsed.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Artist name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Filter by artist type.\n          in: query\n          name: artistType\n          required: false\n          schema:\n            type: string\n            enum:\n              - Unknown\n              - Circle\n              - Label\n              - Producer\n              - Animator\n              - Illustrator\n              - Lyricist\n              - Vocaloid\n              - UTAU\n              - CeVIO\n              - OtherVoiceSynthesizer\n              - OtherVocalist\n              - OtherGroup\n              - OtherIndividual\n              - Utaite\n              - Band\n              - Vocalist\n              - Character\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 50).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Sort rule (optional, defaults to Name). Possible values are None,\n            Name, AdditionDate, AdditionDateAsc.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - AdditionDate\n              - AdditionDateAsc\n              - ReleaseDate\n              - SongCount\n              - SongRating\n              - FollowerCount\n        - description: Match mode for artist name (optional, defaults to Auto).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: List of optional fields (optional). Possible values are Description,\n            Groups, Members, Names, Tags, WebLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - ArtistLinks\n              - ArtistLinksReverse\n              - BaseVoicebank\n              - Description\n              - MainPicture\n              - Names\n              - Tags\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForUserForApiCo\\\n                  ntract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForUserForApiCo\\\n                  ntract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForUserForApiCo\\\n                  ntract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForUserForApiCo\\\n                  ntract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForUserForApiCo\\\n                  ntract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForUserForApiCo\\\n                  ntract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_ArtistForUserForApiCo\\\n                  ntract_\"\n      summary: Gets a list of artists followed by a user.\n      tags:\n        - UserApi\n  \"/api/users/{id}/messages\":\n    delete:\n      deprecated: false\n      operationId: UserApi_DeleteMessages\n      parameters:\n        - description: ID of the user whose messages to delete.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: IDs of messages.\n          in: query\n          name: messageId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n      responses:\n        \"204\":\n          description: No Content\n      summary: Deletes a list of user messages.\n      tags:\n        - UserApi\n    get:\n      deprecated: false\n      operationId: UserApi_GetMessages\n      parameters:\n        - description: User ID. Must be the currently logged in user (loading messages for\n            another user is not allowed).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Type of inbox. Possible values are Nothing (load all, default),\n            Received, Sent, Notifications.\n          in: query\n          name: inbox\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Received\n              - Sent\n              - Notifications\n        - description: Whether to only load unread messages. Loading unread messages is\n            only possible for received messages and notifications (not sent\n            messages).\n          in: query\n          name: unread\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by id of the other user (either sender or receiver).\n          in: query\n          name: anotherUserId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Index of the first entry to be loaded.\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to get total number of results.\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserMessageContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserMessageContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserMessageContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserMessageContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserMessageContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserMessageContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_UserMessageContract_\"\n      summary: Gets a list of messages.\n      tags:\n        - UserApi\n    post:\n      deprecated: false\n      operationId: UserApi_PostNewMessage\n      parameters:\n        - description: User ID. Must be logged in user.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserMessageContract\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UserMessageContract\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/UserMessageContract\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/UserMessageContract\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/UserMessageContract\"\n        description: Message data.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/UserMessageContract\"\n      summary: Creates a new message.\n      tags:\n        - UserApi\n  \"/api/users/{id}/profileComments\":\n    get:\n      deprecated: false\n      operationId: UserApi_GetProfileComments\n      parameters:\n        - description: ID of the user whose comments are to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Index of the first comment to be loaded.\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of comments to load.\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load the total number of comments.\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_CommentForApiContract_\"\n      summary: Gets a list of comments posted on user's profile.\n      tags:\n        - UserApi\n    post:\n      deprecated: false\n      operationId: UserApi_PostNewComment\n      parameters:\n        - description: ID of the user for whom to create the comment.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        $ref: \"#/components/requestBodies/CommentForApiContract\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/CommentForApiContract\"\n      summary: Posts a new comment.\n      tags:\n        - UserApi\n  \"/api/users/{id}/ratedSongs\":\n    get:\n      deprecated: false\n      operationId: UserApi_GetRatedSongs\n      parameters:\n        - description: ID of the user whose songs are to be browsed.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Song name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Filter by tag name (optional).\n          in: query\n          name: tagName\n          required: false\n          schema:\n            type: string\n        - description: Filter by tag Id (optional). This filter can be specified multiple\n            times.\n          in: query\n          name: tagId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: Filter by song artist (optional).\n          in: query\n          name: artistId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              format: int32\n              type: integer\n        - description: Include child voicebanks, if the artist being filtered by has any.\n          in: query\n          name: childVoicebanks\n          required: false\n          schema:\n            type: boolean\n        - description: Logical grouping for artists.\n          in: query\n          name: artistGrouping\n          required: false\n          schema:\n            type: string\n            enum:\n              - And\n              - Or\n        - description: Filter songs by given rating (optional).\n          in: query\n          name: rating\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - Dislike\n              - Like\n              - Favorite\n        - description: Filter songs by song list (optional).\n          in: query\n          name: songListId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Group results by rating so that highest rated are first.\n          in: query\n          name: groupByRating\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by one or more PV services (separated by commas). The song\n            will pass the filter if it has a PV for any of the matched services.\n          in: query\n          name: pvServices\n          required: false\n          schema:\n            type: string\n            enum:\n              - Nothing\n              - NicoNicoDouga\n              - Youtube\n              - SoundCloud\n              - Vimeo\n              - Piapro\n              - Bilibili\n              - File\n              - LocalFile\n              - Creofuga\n              - Bandcamp\n        - description: List of advanced filters (optional).\n          in: query\n          name: advancedFilters\n          required: false\n          explode: true\n          schema:\n            type: array\n            items: {}\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 50).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Sort rule (optional, defaults to Name). Possible values are None,\n            Name, AdditionDate, FavoritedTimes, RatingScore.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - AdditionDate\n              - PublishDate\n              - FavoritedTimes\n              - RatingScore\n              - RatingDate\n        - description: Match mode for song name (optional, defaults to Auto).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: List of optional fields (optional). Possible values are Albums,\n            Artists, Names, PVs, Tags, ThumbUrl, WebLinks.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - AdditionalNames\n              - Albums\n              - Artists\n              - Lyrics\n              - MainPicture\n              - Names\n              - PVs\n              - ReleaseEvent\n              - Tags\n              - ThumbUrl\n              - WebLinks\n        - description: Content language preference (optional).\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n            enum:\n              - Default\n              - Japanese\n              - Romaji\n              - English\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_RatedSongForUserForAp\\\n                  iContract_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_RatedSongForUserForAp\\\n                  iContract_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_RatedSongForUserForAp\\\n                  iContract_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_RatedSongForUserForAp\\\n                  iContract_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_RatedSongForUserForAp\\\n                  iContract_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_RatedSongForUserForAp\\\n                  iContract_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_RatedSongForUserForAp\\\n                  iContract_\"\n      summary: Gets a list of songs rated by a user.\n      tags:\n        - UserApi\n  \"/api/users/{id}/ratedSongs/{songId}\":\n    get:\n      deprecated: false\n      operationId: UserApi_GetSongRating\n      parameters:\n        - description: User whose rating is to be checked.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: ID of the song whose rating is to be checked.\n          in: path\n          name: songId\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            text/json:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            application/xml:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            text/xml:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            text/javascript:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            application/javascript:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n            application/json-p:\n              schema:\n                enum:\n                  - Nothing\n                  - Dislike\n                  - Like\n                  - Favorite\n                type: string\n      summary: Gets a specific user's rating for a song.\n      tags:\n        - UserApi\n  \"/api/users/{id}/settings/{settingName}\":\n    post:\n      deprecated: false\n      operationId: UserApi_PostSetting\n      parameters:\n        - description: ID of the user to be updated. This must match the current user OR be\n            unspecified (or 0) if the user is not logged in.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Name of the setting to be updated, for example 'showChatBox'.\n          in: path\n          name: settingName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n          application/xml:\n            schema:\n              type: string\n          text/xml:\n            schema:\n              type: string\n          application/x-www-form-urlencoded:\n            schema:\n              type: string\n        description: Setting value, for example 'false'.\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      summary: Updates user setting.\n      tags:\n        - UserApi\n  \"/api/users/{id}/songLists\":\n    get:\n      deprecated: false\n      operationId: UserApi_GetSongLists\n      parameters:\n        - description: User whose song lists are to be loaded.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Song list name query (optional).\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Match mode for song name (optional, defaults to Auto).\n          in: query\n          name: nameMatchMode\n          required: false\n          schema:\n            type: string\n            enum:\n              - Auto\n              - Partial\n              - StartsWith\n              - Exact\n              - Words\n        - description: First item to be retrieved (optional, defaults to 0).\n          in: query\n          name: start\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Maximum number of results to be loaded (optional, defaults to 10,\n            maximum of 50).\n          in: query\n          name: maxResults\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Whether to load total number of items (optional, default to false).\n          in: query\n          name: getTotalCount\n          required: false\n          schema:\n            type: boolean\n        - description: Sort option for the song lists. Possible values are None, Name,\n            Date, CreateDate. Default is Name.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Name\n              - Date\n              - CreateDate\n        - description: List of optional fields.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            enum:\n              - None\n              - Description\n              - MainPicture\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n            application/json-p:\n              schema:\n                $ref: \"#/components/schemas/PartialFindResult_SongListForApiContrac\\\n                  t_\"\n      summary: Gets a list of song lists for a user.\n      tags:\n        - UserApi\nservers:\n  - url: https://vocadb.net\ncomponents:\n  requestBodies:\n    CommentForApiContract:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n      description: Comment data. Message and author must be specified. Author must match\n        the logged in user.\n      required: true\n    CommentForApiContract2:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n      required: true\n    CommentForApiContract3:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n      description: New comment data. Only message can be edited.\n      required: true\n    DiscussionTopicContract:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DiscussionTopicContract\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/DiscussionTopicContract\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/DiscussionTopicContract\"\n        text/xml:\n          schema:\n            $ref: \"#/components/schemas/DiscussionTopicContract\"\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: \"#/components/schemas/DiscussionTopicContract\"\n      required: true\n  schemas:\n    ActivityEntryForApiContract:\n      properties:\n        archivedVersion:\n          $ref: \"#/components/schemas/ArchivedObjectVersionForApiContract\"\n        author:\n          $ref: \"#/components/schemas/UserForApiContract\"\n        createDate:\n          format: date-time\n          type: string\n        editEvent:\n          enum:\n            - Created\n            - Updated\n            - Deleted\n            - Restored\n          type: string\n        entry:\n          $ref: \"#/components/schemas/EntryForApiContract\"\n      type: object\n    AdvancedSearchFilter:\n      properties:\n        filterType:\n          enum:\n            - Nothing\n            - ArtistType\n            - WebLink\n            - HasUserAccount\n            - RootVoicebank\n            - VoiceProvider\n            - HasStoreLink\n            - HasTracks\n            - NoCoverPicture\n            - HasAlbum\n            - HasOriginalMedia\n            - HasMedia\n            - HasMultipleVoicebanks\n            - HasPublishDate\n            - Lyrics\n            - LyricsContent\n          type: string\n        negate:\n          type: boolean\n        param:\n          type: string\n      type: object\n    AlbumContract:\n      properties:\n        additionalNames:\n          type: string\n        artistString:\n          type: string\n        coverPictureMime:\n          type: string\n        createDate:\n          format: date-time\n          type: string\n        deleted:\n          type: boolean\n        discType:\n          enum:\n            - Unknown\n            - Album\n            - Single\n            - EP\n            - SplitAlbum\n            - Compilation\n            - Video\n            - Artbook\n            - Game\n            - Fanmade\n            - Instrumental\n            - Other\n          type: string\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n        ratingAverage:\n          format: double\n          type: number\n        ratingCount:\n          format: int32\n          type: integer\n        releaseDate:\n          $ref: \"#/components/schemas/OptionalDateTimeContract\"\n        releaseEvent:\n          $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        version:\n          format: int32\n          type: integer\n      type: object\n    AlbumDiscPropertiesContract:\n      properties:\n        discNumber:\n          format: int32\n          type: integer\n        id:\n          format: int32\n          type: integer\n        mediaType:\n          enum:\n            - Audio\n            - Video\n          type: string\n        name:\n          type: string\n      type: object\n    AlbumForApiContract:\n      properties:\n        additionalNames:\n          type: string\n        artistString:\n          type: string\n        artists:\n          items:\n            $ref: \"#/components/schemas/ArtistForAlbumForApiContract\"\n          type: array\n        barcode:\n          type: string\n        catalogNumber:\n          type: string\n        createDate:\n          format: date-time\n          type: string\n        defaultName:\n          type: string\n        defaultNameLanguage:\n          enum:\n            - Unspecified\n            - Japanese\n            - Romaji\n            - English\n          type: string\n        deleted:\n          type: boolean\n        description:\n          type: string\n        discType:\n          enum:\n            - Unknown\n            - Album\n            - Single\n            - EP\n            - SplitAlbum\n            - Compilation\n            - Video\n            - Artbook\n            - Game\n            - Fanmade\n            - Instrumental\n            - Other\n          type: string\n        discs:\n          items:\n            $ref: \"#/components/schemas/AlbumDiscPropertiesContract\"\n          type: array\n        id:\n          format: int32\n          type: integer\n        identifiers:\n          items:\n            $ref: \"#/components/schemas/AlbumIdentifierContract\"\n          type: array\n        mainPicture:\n          $ref: \"#/components/schemas/EntryThumbForApiContract\"\n        mergedTo:\n          format: int32\n          type: integer\n        name:\n          type: string\n        names:\n          items:\n            $ref: \"#/components/schemas/LocalizedStringContract\"\n          type: array\n        pvs:\n          items:\n            $ref: \"#/components/schemas/PVContract\"\n          type: array\n        ratingAverage:\n          format: double\n          type: number\n        ratingCount:\n          format: int32\n          type: integer\n        releaseDate:\n          $ref: \"#/components/schemas/OptionalDateTimeContract\"\n        releaseEvent:\n          $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        tags:\n          items:\n            $ref: \"#/components/schemas/TagUsageForApiContract\"\n          type: array\n        tracks:\n          items:\n            $ref: \"#/components/schemas/SongInAlbumForApiContract\"\n          type: array\n        version:\n          format: int32\n          type: integer\n        webLinks:\n          items:\n            $ref: \"#/components/schemas/WebLinkForApiContract\"\n          type: array\n      type: object\n    AlbumForUserForApiContract:\n      properties:\n        album:\n          $ref: \"#/components/schemas/AlbumForApiContract\"\n        mediaType:\n          enum:\n            - PhysicalDisc\n            - DigitalDownload\n            - Other\n          type: string\n        purchaseStatus:\n          enum:\n            - Nothing\n            - Wishlisted\n            - Ordered\n            - Owned\n          type: string\n        rating:\n          format: int32\n          type: integer\n        user:\n          $ref: \"#/components/schemas/UserForApiContract\"\n      type: object\n    AlbumIdentifierContract:\n      properties:\n        value:\n          type: string\n      type: object\n    AlbumReviewContract:\n      properties:\n        albumId:\n          format: int32\n          type: integer\n        date:\n          format: date-time\n          type: string\n        id:\n          format: int32\n          type: integer\n        languageCode:\n          type: string\n        text:\n          type: string\n        title:\n          type: string\n        user:\n          $ref: \"#/components/schemas/UserForApiContract\"\n      type: object\n    ArchivedObjectVersionForApiContract:\n      properties:\n        changedFields:\n          items:\n            type: string\n          type: array\n        id:\n          format: int32\n          type: integer\n        notes:\n          type: string\n        version:\n          format: int32\n          type: integer\n      type: object\n    ArchivedWebLinkContract:\n      properties:\n        category:\n          enum:\n            - Official\n            - Commercial\n            - Reference\n            - Other\n          type: string\n        description:\n          type: string\n        url:\n          type: string\n      type: object\n    ArtistContract:\n      properties:\n        additionalNames:\n          type: string\n        artistType:\n          enum:\n            - Unknown\n            - Circle\n            - Label\n            - Producer\n            - Animator\n            - Illustrator\n            - Lyricist\n            - Vocaloid\n            - UTAU\n            - CeVIO\n            - OtherVoiceSynthesizer\n            - OtherVocalist\n            - OtherGroup\n            - OtherIndividual\n            - Utaite\n            - Band\n            - Vocalist\n            - Character\n          type: string\n        deleted:\n          type: boolean\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n        pictureMime:\n          type: string\n        releaseDate:\n          format: date-time\n          type: string\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        version:\n          format: int32\n          type: integer\n      type: object\n    ArtistForAlbumForApiContract:\n      properties:\n        artist:\n          $ref: \"#/components/schemas/ArtistContract\"\n        categories:\n          enum:\n            - Nothing\n            - Vocalist\n            - Producer\n            - Animator\n            - Label\n            - Circle\n            - Other\n            - Band\n            - Illustrator\n            - Subject\n          type: string\n        effectiveRoles:\n          enum:\n            - Default\n            - Animator\n            - Arranger\n            - Composer\n            - Distributor\n            - Illustrator\n            - Instrumentalist\n            - Lyricist\n            - Mastering\n            - Publisher\n            - Vocalist\n            - VoiceManipulator\n            - Other\n            - Mixer\n            - Chorus\n            - Encoder\n            - VocalDataProvider\n          type: string\n        isSupport:\n          type: boolean\n        name:\n          type: string\n        roles:\n          enum:\n            - Default\n            - Animator\n            - Arranger\n            - Composer\n            - Distributor\n            - Illustrator\n            - Instrumentalist\n            - Lyricist\n            - Mastering\n            - Publisher\n            - Vocalist\n            - VoiceManipulator\n            - Other\n            - Mixer\n            - Chorus\n            - Encoder\n            - VocalDataProvider\n          type: string\n      type: object\n    ArtistForApiContract:\n      properties:\n        additionalNames:\n          type: string\n        artistLinks:\n          items:\n            $ref: \"#/components/schemas/ArtistForArtistForApiContract\"\n          type: array\n        artistLinksReverse:\n          items:\n            $ref: \"#/components/schemas/ArtistForArtistForApiContract\"\n          type: array\n        artistType:\n          enum:\n            - Unknown\n            - Circle\n            - Label\n            - Producer\n            - Animator\n            - Illustrator\n            - Lyricist\n            - Vocaloid\n            - UTAU\n            - CeVIO\n            - OtherVoiceSynthesizer\n            - OtherVocalist\n            - OtherGroup\n            - OtherIndividual\n            - Utaite\n            - Band\n            - Vocalist\n            - Character\n          type: string\n        baseVoicebank:\n          $ref: \"#/components/schemas/ArtistContract\"\n        createDate:\n          format: date-time\n          type: string\n        defaultName:\n          type: string\n        defaultNameLanguage:\n          enum:\n            - Unspecified\n            - Japanese\n            - Romaji\n            - English\n          type: string\n        deleted:\n          type: boolean\n        description:\n          type: string\n        id:\n          format: int32\n          type: integer\n        mainPicture:\n          $ref: \"#/components/schemas/EntryThumbForApiContract\"\n        mergedTo:\n          format: int32\n          type: integer\n        name:\n          type: string\n        names:\n          items:\n            $ref: \"#/components/schemas/LocalizedStringContract\"\n          type: array\n        pictureMime:\n          type: string\n        relations:\n          $ref: \"#/components/schemas/ArtistRelationsForApi\"\n        releaseDate:\n          format: date-time\n          type: string\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        tags:\n          items:\n            $ref: \"#/components/schemas/TagUsageForApiContract\"\n          type: array\n        version:\n          format: int32\n          type: integer\n        webLinks:\n          items:\n            $ref: \"#/components/schemas/WebLinkForApiContract\"\n          type: array\n      type: object\n    ArtistForArtistForApiContract:\n      properties:\n        artist:\n          $ref: \"#/components/schemas/ArtistContract\"\n        linkType:\n          enum:\n            - CharacterDesigner\n            - Group\n            - Illustrator\n            - Manager\n            - VoiceProvider\n          type: string\n      type: object\n    ArtistForEventContract:\n      properties:\n        artist:\n          $ref: \"#/components/schemas/ArtistContract\"\n        effectiveRoles:\n          enum:\n            - Default\n            - Dancer\n            - DJ\n            - Instrumentalist\n            - Organizer\n            - Promoter\n            - VJ\n            - Vocalist\n            - VoiceManipulator\n            - OtherPerformer\n            - Other\n          type: string\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n        roles:\n          enum:\n            - Default\n            - Dancer\n            - DJ\n            - Instrumentalist\n            - Organizer\n            - Promoter\n            - VJ\n            - Vocalist\n            - VoiceManipulator\n            - OtherPerformer\n            - Other\n          type: string\n      type: object\n    ArtistForSongContract:\n      properties:\n        artist:\n          $ref: \"#/components/schemas/ArtistContract\"\n        categories:\n          enum:\n            - Nothing\n            - Vocalist\n            - Producer\n            - Animator\n            - Label\n            - Circle\n            - Other\n            - Band\n            - Illustrator\n            - Subject\n          type: string\n        effectiveRoles:\n          enum:\n            - Default\n            - Animator\n            - Arranger\n            - Composer\n            - Distributor\n            - Illustrator\n            - Instrumentalist\n            - Lyricist\n            - Mastering\n            - Publisher\n            - Vocalist\n            - VoiceManipulator\n            - Other\n            - Mixer\n            - Chorus\n            - Encoder\n            - VocalDataProvider\n          type: string\n        id:\n          format: int32\n          type: integer\n        isCustomName:\n          type: boolean\n        isSupport:\n          type: boolean\n        name:\n          type: string\n        roles:\n          enum:\n            - Default\n            - Animator\n            - Arranger\n            - Composer\n            - Distributor\n            - Illustrator\n            - Instrumentalist\n            - Lyricist\n            - Mastering\n            - Publisher\n            - Vocalist\n            - VoiceManipulator\n            - Other\n            - Mixer\n            - Chorus\n            - Encoder\n            - VocalDataProvider\n          type: string\n      type: object\n    ArtistForUserForApiContract:\n      properties:\n        artist:\n          $ref: \"#/components/schemas/ArtistForApiContract\"\n      type: object\n    ArtistRelationsForApi:\n      properties:\n        latestAlbums:\n          items:\n            $ref: \"#/components/schemas/AlbumForApiContract\"\n          type: array\n        latestEvents:\n          items:\n            $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n          type: array\n        latestSongs:\n          items:\n            $ref: \"#/components/schemas/SongForApiContract\"\n          type: array\n        popularAlbums:\n          items:\n            $ref: \"#/components/schemas/AlbumForApiContract\"\n          type: array\n        popularSongs:\n          items:\n            $ref: \"#/components/schemas/SongForApiContract\"\n          type: array\n      type: object\n    CommentForApiContract:\n      properties:\n        author:\n          $ref: \"#/components/schemas/UserForApiContract\"\n        authorName:\n          type: string\n        created:\n          format: date-time\n          type: string\n        entry:\n          $ref: \"#/components/schemas/EntryRefContract\"\n        id:\n          format: int32\n          type: integer\n        message:\n          type: string\n      type: object\n    DiscussionFolderContract:\n      properties:\n        description:\n          type: string\n        id:\n          format: int32\n          type: integer\n        lastTopicAuthor:\n          $ref: \"#/components/schemas/UserForApiContract\"\n        lastTopicDate:\n          format: date-time\n          type: string\n        name:\n          type: string\n        topicCount:\n          format: int32\n          type: integer\n      type: object\n    DiscussionTopicContract:\n      properties:\n        author:\n          $ref: \"#/components/schemas/UserForApiContract\"\n        commentCount:\n          format: int32\n          type: integer\n        comments:\n          items:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n          type: array\n        content:\n          type: string\n        created:\n          format: date-time\n          type: string\n        folderId:\n          format: int32\n          type: integer\n        id:\n          format: int32\n          type: integer\n        lastComment:\n          $ref: \"#/components/schemas/CommentForApiContract\"\n        locked:\n          type: boolean\n        name:\n          type: string\n      type: object\n    EnglishTranslatedStringContract:\n      properties:\n        english:\n          type: string\n        original:\n          type: string\n      type: object\n    EntryForApiContract:\n      properties:\n        activityDate:\n          format: date-time\n          type: string\n        additionalNames:\n          type: string\n        artistString:\n          type: string\n        artistType:\n          enum:\n            - Unknown\n            - Circle\n            - Label\n            - Producer\n            - Animator\n            - Illustrator\n            - Lyricist\n            - Vocaloid\n            - UTAU\n            - CeVIO\n            - OtherVoiceSynthesizer\n            - OtherVocalist\n            - OtherGroup\n            - OtherIndividual\n            - Utaite\n            - Band\n            - Vocalist\n            - Character\n          type: string\n        createDate:\n          format: date-time\n          type: string\n        defaultName:\n          type: string\n        defaultNameLanguage:\n          enum:\n            - Unspecified\n            - Japanese\n            - Romaji\n            - English\n          type: string\n        description:\n          type: string\n        discType:\n          enum:\n            - Unknown\n            - Album\n            - Single\n            - EP\n            - SplitAlbum\n            - Compilation\n            - Video\n            - Artbook\n            - Game\n            - Fanmade\n            - Instrumental\n            - Other\n          type: string\n        entryType:\n          enum:\n            - Undefined\n            - Album\n            - Artist\n            - DiscussionTopic\n            - PV\n            - ReleaseEvent\n            - ReleaseEventSeries\n            - Song\n            - SongList\n            - Tag\n            - User\n          type: string\n        eventCategory:\n          enum:\n            - Unspecified\n            - AlbumRelease\n            - Anniversary\n            - Club\n            - Concert\n            - Contest\n            - Convention\n            - Other\n          type: string\n        id:\n          format: int32\n          type: integer\n        mainPicture:\n          $ref: \"#/components/schemas/EntryThumbForApiContract\"\n        name:\n          type: string\n        names:\n          items:\n            $ref: \"#/components/schemas/LocalizedStringContract\"\n          type: array\n        pVs:\n          items:\n            $ref: \"#/components/schemas/PVContract\"\n          type: array\n        releaseEventSeriesName:\n          type: string\n        songListFeaturedCategory:\n          enum:\n            - Nothing\n            - Concerts\n            - VocaloidRanking\n            - Pools\n            - Other\n          type: string\n        songType:\n          enum:\n            - Unspecified\n            - Original\n            - Remaster\n            - Remix\n            - Cover\n            - Arrangement\n            - Instrumental\n            - Mashup\n            - MusicPV\n            - DramaPV\n            - Live\n            - Illustration\n            - Other\n          type: string\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        tagCategoryName:\n          type: string\n        tags:\n          items:\n            $ref: \"#/components/schemas/TagUsageForApiContract\"\n          type: array\n        urlSlug:\n          type: string\n        version:\n          format: int32\n          type: integer\n        webLinks:\n          items:\n            $ref: \"#/components/schemas/ArchivedWebLinkContract\"\n          type: array\n      type: object\n    EntryRefContract:\n      properties:\n        entryType:\n          enum:\n            - Undefined\n            - Album\n            - Artist\n            - DiscussionTopic\n            - PV\n            - ReleaseEvent\n            - ReleaseEventSeries\n            - Song\n            - SongList\n            - Tag\n            - User\n          type: string\n        id:\n          format: int32\n          type: integer\n      type: object\n    EntryThumbContract:\n      properties:\n        entryType:\n          enum:\n            - Undefined\n            - Album\n            - Artist\n            - DiscussionTopic\n            - PV\n            - ReleaseEvent\n            - ReleaseEventSeries\n            - Song\n            - SongList\n            - Tag\n            - User\n          type: string\n        id:\n          format: int32\n          type: integer\n        mime:\n          type: string\n        version:\n          format: int32\n          type: integer\n      type: object\n    EntryThumbForApiContract:\n      properties:\n        mime:\n          type: string\n        urlSmallThumb:\n          type: string\n        urlThumb:\n          type: string\n        urlTinyThumb:\n          type: string\n      type: object\n    LocalizedStringContract:\n      properties:\n        language:\n          enum:\n            - Unspecified\n            - Japanese\n            - Romaji\n            - English\n          type: string\n        value:\n          type: string\n      type: object\n    LocalizedStringWithIdContract:\n      properties:\n        id:\n          format: int32\n          type: integer\n        language:\n          enum:\n            - Unspecified\n            - Japanese\n            - Romaji\n            - English\n          type: string\n        value:\n          type: string\n      type: object\n    LyricsForSongContract:\n      properties:\n        cultureCode:\n          type: string\n        id:\n          format: int32\n          type: integer\n        source:\n          type: string\n        translationType:\n          enum:\n            - Original\n            - Romanized\n            - Translation\n          type: string\n        url:\n          type: string\n        value:\n          type: string\n      type: object\n    OldUsernameContract:\n      properties:\n        date:\n          format: date-time\n          type: string\n        oldName:\n          type: string\n      type: object\n    OptionalDateTimeContract:\n      properties:\n        day:\n          format: int32\n          type: integer\n        formatted:\n          type: string\n        isEmpty:\n          type: boolean\n        month:\n          format: int32\n          type: integer\n        year:\n          format: int32\n          type: integer\n      type: object\n    PVContract:\n      properties:\n        author:\n          type: string\n        createdBy:\n          format: int32\n          type: integer\n        disabled:\n          type: boolean\n        extendedMetadata:\n          $ref: \"#/components/schemas/PVExtendedMetadata\"\n        id:\n          format: int32\n          type: integer\n        length:\n          format: int32\n          type: integer\n        name:\n          type: string\n        publishDate:\n          format: date-time\n          type: string\n        pvId:\n          type: string\n        pvType:\n          enum:\n            - Original\n            - Reprint\n            - Other\n          type: string\n        service:\n          enum:\n            - NicoNicoDouga\n            - Youtube\n            - SoundCloud\n            - Vimeo\n            - Piapro\n            - Bilibili\n            - File\n            - LocalFile\n            - Creofuga\n            - Bandcamp\n          type: string\n        thumbUrl:\n          type: string\n        url:\n          type: string\n      type: object\n    PVExtendedMetadata:\n      properties:\n        json:\n          type: string\n      type: object\n    PVForSongContract:\n      properties:\n        author:\n          type: string\n        createdBy:\n          format: int32\n          type: integer\n        disabled:\n          type: boolean\n        extendedMetadata:\n          $ref: \"#/components/schemas/PVExtendedMetadata\"\n        id:\n          format: int32\n          type: integer\n        length:\n          format: int32\n          type: integer\n        name:\n          type: string\n        publishDate:\n          format: date-time\n          type: string\n        pvId:\n          type: string\n        pvType:\n          enum:\n            - Original\n            - Reprint\n            - Other\n          type: string\n        service:\n          enum:\n            - NicoNicoDouga\n            - Youtube\n            - SoundCloud\n            - Vimeo\n            - Piapro\n            - Bilibili\n            - File\n            - LocalFile\n            - Creofuga\n            - Bandcamp\n          type: string\n        song:\n          $ref: \"#/components/schemas/SongContract\"\n        thumbUrl:\n          type: string\n        url:\n          type: string\n      type: object\n    RatedSongForUserForApiContract:\n      properties:\n        date:\n          format: date-time\n          type: string\n        rating:\n          enum:\n            - Nothing\n            - Dislike\n            - Like\n            - Favorite\n          type: string\n        song:\n          $ref: \"#/components/schemas/SongForApiContract\"\n        user:\n          $ref: \"#/components/schemas/UserForApiContract\"\n      type: object\n    RelatedSongsContract:\n      properties:\n        artistMatches:\n          items:\n            $ref: \"#/components/schemas/SongForApiContract\"\n          type: array\n        likeMatches:\n          items:\n            $ref: \"#/components/schemas/SongForApiContract\"\n          type: array\n        tagMatches:\n          items:\n            $ref: \"#/components/schemas/SongForApiContract\"\n          type: array\n      type: object\n    ReleaseEventForApiContract:\n      properties:\n        additionalNames:\n          type: string\n        artists:\n          items:\n            $ref: \"#/components/schemas/ArtistForEventContract\"\n          type: array\n        category:\n          enum:\n            - Unspecified\n            - AlbumRelease\n            - Anniversary\n            - Club\n            - Concert\n            - Contest\n            - Convention\n            - Other\n          type: string\n        date:\n          format: date-time\n          type: string\n        description:\n          type: string\n        endDate:\n          format: date-time\n          type: string\n        id:\n          format: int32\n          type: integer\n        mainPicture:\n          $ref: \"#/components/schemas/EntryThumbForApiContract\"\n        name:\n          type: string\n        names:\n          items:\n            $ref: \"#/components/schemas/LocalizedStringContract\"\n          type: array\n        series:\n          $ref: \"#/components/schemas/ReleaseEventSeriesContract\"\n        seriesId:\n          format: int32\n          type: integer\n        seriesNumber:\n          format: int32\n          type: integer\n        seriesSuffix:\n          type: string\n        songList:\n          $ref: \"#/components/schemas/SongListBaseContract\"\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        urlSlug:\n          type: string\n        venueName:\n          type: string\n        version:\n          format: int32\n          type: integer\n        webLinks:\n          items:\n            $ref: \"#/components/schemas/WebLinkForApiContract\"\n          type: array\n      type: object\n    ReleaseEventSeriesContract:\n      properties:\n        additionalNames:\n          type: string\n        category:\n          enum:\n            - Unspecified\n            - AlbumRelease\n            - Anniversary\n            - Club\n            - Concert\n            - Contest\n            - Convention\n            - Other\n          type: string\n        deleted:\n          type: boolean\n        description:\n          type: string\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n        pictureMime:\n          type: string\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        urlSlug:\n          type: string\n        version:\n          format: int32\n          type: integer\n        webLinks:\n          items:\n            $ref: \"#/components/schemas/WebLinkContract\"\n          type: array\n      type: object\n    SongContract:\n      properties:\n        additionalNames:\n          type: string\n        artistString:\n          type: string\n        createDate:\n          format: date-time\n          type: string\n        deleted:\n          type: boolean\n        favoritedTimes:\n          format: int32\n          type: integer\n        id:\n          format: int32\n          type: integer\n        lengthSeconds:\n          format: int32\n          type: integer\n        name:\n          type: string\n        nicoId:\n          type: string\n        publishDate:\n          format: date-time\n          type: string\n        pvServices:\n          enum:\n            - Nothing\n            - NicoNicoDouga\n            - Youtube\n            - SoundCloud\n            - Vimeo\n            - Piapro\n            - Bilibili\n            - File\n            - LocalFile\n            - Creofuga\n            - Bandcamp\n          type: string\n        ratingScore:\n          format: int32\n          type: integer\n        songType:\n          enum:\n            - Unspecified\n            - Original\n            - Remaster\n            - Remix\n            - Cover\n            - Arrangement\n            - Instrumental\n            - Mashup\n            - MusicPV\n            - DramaPV\n            - Live\n            - Illustration\n            - Other\n          type: string\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        thumbUrl:\n          type: string\n        version:\n          format: int32\n          type: integer\n      type: object\n    SongForApiContract:\n      properties:\n        additionalNames:\n          type: string\n        albums:\n          items:\n            $ref: \"#/components/schemas/AlbumContract\"\n          type: array\n        artistString:\n          type: string\n        artists:\n          items:\n            $ref: \"#/components/schemas/ArtistForSongContract\"\n          type: array\n        createDate:\n          format: date-time\n          type: string\n        defaultName:\n          type: string\n        defaultNameLanguage:\n          enum:\n            - Unspecified\n            - Japanese\n            - Romaji\n            - English\n          type: string\n        deleted:\n          type: boolean\n        favoritedTimes:\n          format: int32\n          type: integer\n        id:\n          format: int32\n          type: integer\n        lengthSeconds:\n          format: int32\n          type: integer\n        lyrics:\n          items:\n            $ref: \"#/components/schemas/LyricsForSongContract\"\n          type: array\n        mainPicture:\n          $ref: \"#/components/schemas/EntryThumbForApiContract\"\n        mergedTo:\n          format: int32\n          type: integer\n        name:\n          type: string\n        names:\n          items:\n            $ref: \"#/components/schemas/LocalizedStringContract\"\n          type: array\n        originalVersionId:\n          format: int32\n          type: integer\n        publishDate:\n          format: date-time\n          type: string\n        pvServices:\n          enum:\n            - Nothing\n            - NicoNicoDouga\n            - Youtube\n            - SoundCloud\n            - Vimeo\n            - Piapro\n            - Bilibili\n            - File\n            - LocalFile\n            - Creofuga\n            - Bandcamp\n          type: string\n        pvs:\n          items:\n            $ref: \"#/components/schemas/PVContract\"\n          type: array\n        ratingScore:\n          format: int32\n          type: integer\n        releaseEvent:\n          $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n        songType:\n          enum:\n            - Unspecified\n            - Original\n            - Remaster\n            - Remix\n            - Cover\n            - Arrangement\n            - Instrumental\n            - Mashup\n            - MusicPV\n            - DramaPV\n            - Live\n            - Illustration\n            - Other\n          type: string\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        tags:\n          items:\n            $ref: \"#/components/schemas/TagUsageForApiContract\"\n          type: array\n        thumbUrl:\n          type: string\n        version:\n          format: int32\n          type: integer\n        webLinks:\n          items:\n            $ref: \"#/components/schemas/WebLinkForApiContract\"\n          type: array\n      type: object\n    SongInAlbumForApiContract:\n      properties:\n        discNumber:\n          format: int32\n          type: integer\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n        song:\n          $ref: \"#/components/schemas/SongForApiContract\"\n        trackNumber:\n          format: int32\n          type: integer\n      type: object\n    SongInListEditContract:\n      properties:\n        notes:\n          type: string\n        order:\n          format: int32\n          type: integer\n        song:\n          $ref: \"#/components/schemas/SongForApiContract\"\n        songInListId:\n          format: int32\n          type: integer\n      type: object\n    SongInListForApiContract:\n      properties:\n        notes:\n          type: string\n        order:\n          format: int32\n          type: integer\n        song:\n          $ref: \"#/components/schemas/SongForApiContract\"\n      type: object\n    SongListBaseContract:\n      properties:\n        featuredCategory:\n          enum:\n            - Nothing\n            - Concerts\n            - VocaloidRanking\n            - Pools\n            - Other\n          type: string\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n      type: object\n    SongListForApiContract:\n      properties:\n        author:\n          $ref: \"#/components/schemas/UserForApiContract\"\n        eventDate:\n          format: date-time\n          type: string\n        featuredCategory:\n          enum:\n            - Nothing\n            - Concerts\n            - VocaloidRanking\n            - Pools\n            - Other\n          type: string\n        id:\n          format: int32\n          type: integer\n        mainPicture:\n          $ref: \"#/components/schemas/EntryThumbForApiContract\"\n        name:\n          type: string\n      type: object\n    SongListForEditContract:\n      properties:\n        author:\n          $ref: \"#/components/schemas/UserWithEmailContract\"\n        canEdit:\n          type: boolean\n        deleted:\n          type: boolean\n        description:\n          type: string\n        eventDate:\n          format: date-time\n          type: string\n        featuredCategory:\n          enum:\n            - Nothing\n            - Concerts\n            - VocaloidRanking\n            - Pools\n            - Other\n          type: string\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n        songLinks:\n          items:\n            $ref: \"#/components/schemas/SongInListEditContract\"\n          type: array\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        thumb:\n          $ref: \"#/components/schemas/EntryThumbContract\"\n        updateNotes:\n          type: string\n        version:\n          format: int32\n          type: integer\n      type: object\n    SongRatingContract:\n      properties:\n        rating:\n          enum:\n            - Nothing\n            - Dislike\n            - Like\n            - Favorite\n          type: string\n      type: object\n    TagBaseContract:\n      properties:\n        additionalNames:\n          type: string\n        categoryName:\n          type: string\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n        urlSlug:\n          type: string\n      type: object\n    TagForApiContract:\n      properties:\n        additionalNames:\n          type: string\n        aliasedTo:\n          $ref: \"#/components/schemas/TagBaseContract\"\n        categoryName:\n          type: string\n        createDate:\n          format: date-time\n          type: string\n        defaultNameLanguage:\n          enum:\n            - Unspecified\n            - Japanese\n            - Romaji\n            - English\n          type: string\n        description:\n          type: string\n        id:\n          format: int32\n          type: integer\n        mainPicture:\n          $ref: \"#/components/schemas/EntryThumbForApiContract\"\n        name:\n          type: string\n        names:\n          items:\n            $ref: \"#/components/schemas/LocalizedStringWithIdContract\"\n          type: array\n        parent:\n          $ref: \"#/components/schemas/TagBaseContract\"\n        relatedTags:\n          items:\n            $ref: \"#/components/schemas/TagBaseContract\"\n          type: array\n        status:\n          enum:\n            - Draft\n            - Finished\n            - Approved\n            - Locked\n          type: string\n        targets:\n          format: int32\n          type: integer\n        translatedDescription:\n          $ref: \"#/components/schemas/EnglishTranslatedStringContract\"\n        urlSlug:\n          type: string\n        usageCount:\n          format: int32\n          type: integer\n        version:\n          format: int32\n          type: integer\n        webLinks:\n          items:\n            $ref: \"#/components/schemas/WebLinkForApiContract\"\n          type: array\n      type: object\n    TagUsageForApiContract:\n      properties:\n        count:\n          format: int32\n          type: integer\n        tag:\n          $ref: \"#/components/schemas/TagBaseContract\"\n      type: object\n    UserForApiContract:\n      properties:\n        active:\n          type: boolean\n        groupId:\n          enum:\n            - Nothing\n            - Limited\n            - Regular\n            - Trusted\n            - Moderator\n            - Admin\n          type: string\n        id:\n          format: int32\n          type: integer\n        knownLanguages:\n          items:\n            $ref: \"#/components/schemas/UserKnownLanguageContract\"\n          type: array\n        mainPicture:\n          $ref: \"#/components/schemas/EntryThumbForApiContract\"\n        memberSince:\n          format: date-time\n          type: string\n        name:\n          type: string\n        oldUsernames:\n          items:\n            $ref: \"#/components/schemas/OldUsernameContract\"\n          type: array\n        verifiedArtist:\n          type: boolean\n      type: object\n    UserKnownLanguageContract:\n      properties:\n        cultureCode:\n          type: string\n        proficiency:\n          enum:\n            - Nothing\n            - Basics\n            - Intermediate\n            - Advanced\n            - Native\n          type: string\n      type: object\n    UserMessageContract:\n      properties:\n        body:\n          type: string\n        createdFormatted:\n          type: string\n        highPriority:\n          type: boolean\n        id:\n          format: int32\n          type: integer\n        inbox:\n          enum:\n            - Nothing\n            - Received\n            - Sent\n            - Notifications\n          type: string\n        read:\n          type: boolean\n        receiver:\n          $ref: \"#/components/schemas/UserForApiContract\"\n        sender:\n          $ref: \"#/components/schemas/UserForApiContract\"\n        subject:\n          type: string\n      type: object\n    UserWithEmailContract:\n      properties:\n        email:\n          type: string\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n      type: object\n    WebLinkContract:\n      properties:\n        category:\n          enum:\n            - Official\n            - Commercial\n            - Reference\n            - Other\n          type: string\n        description:\n          type: string\n        descriptionOrUrl:\n          type: string\n        id:\n          format: int32\n          type: integer\n        url:\n          type: string\n      type: object\n    WebLinkForApiContract:\n      properties:\n        category:\n          enum:\n            - Official\n            - Commercial\n            - Reference\n            - Other\n          type: string\n        description:\n          type: string\n        id:\n          format: int32\n          type: integer\n        url:\n          type: string\n      type: object\n    PartialFindResult_ActivityEntryForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/ActivityEntryForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_AlbumForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/AlbumForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_AlbumForUserForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/AlbumForUserForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_ArtistForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/ArtistForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_ArtistForUserForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/ArtistForUserForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_CommentForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/CommentForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_DiscussionTopicContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/DiscussionTopicContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_EntryForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/EntryForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_PVForSongContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/PVForSongContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_RatedSongForUserForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/RatedSongForUserForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_ReleaseEventForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/ReleaseEventForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_ReleaseEventSeriesContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/ReleaseEventSeriesContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_SongForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/SongForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_SongInListForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/SongInListForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_SongListForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/SongListForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_TagForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/TagForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_UserForApiContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/UserForApiContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n    PartialFindResult_UserMessageContract_:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/UserMessageContract\"\n          type: array\n        term:\n          type: string\n        totalCount:\n          format: int32\n          type: integer\n      type: object\n"
		}
	},
	"Error": "buildIR: make ir: path \"/api/discussions/topics/{topicId}/comments\": post: requestBody: contents: application/x-www-form-urlencoded: form parameter \"author\": field \"KnownLanguages\": nested arrays not allowed"
}