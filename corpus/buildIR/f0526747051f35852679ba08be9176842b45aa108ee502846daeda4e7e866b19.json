{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tagbase/tagbase-server"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 4581,
			"content": "openapi: 3.0.3\ncomponents:\n  schemas:\n    HTTPStatusCode:\n      description: 'HTTP status code'\n      example: '200'\n      type: string\n    HTTPMessage:\n      description: 'A string detailing specifics of an HTTP operation'\n      example: 'Data file eTUFF-sailfish-117259.txt successfully ingested into Tagbase DB.'\n      type: string\n    Response200:\n      description: 'HTTP 200 success response'\n      example:\n        code: '200'\n        elapsed: '0:00:58.506691'\n        message: 'Data file eTUFF-sailfish-117259.txt successfully ingested into Tagbase DB.'\n      properties:\n        code:\n          $ref: '#/components/schemas/HTTPStatusCode'\n        elapsed:\n          description: 'Elapsed time for the operation'\n          type: string\n        message:\n          $ref: '#/components/schemas/HTTPMessage'\n      type: object\n    Response500:\n      description: '500 Internal Server Error'\n      example:\n        detail: 'Unable to connect to the Tagbase database'\n        status: 500\n        title: 'Internal Server Error'\n        type: 'about:blank'\n      properties:\n        code:\n          $ref: '#/components/schemas/HTTPStatusCode'\n        message:\n          $ref: '#/components/schemas/HTTPMessage'\n        more_info:\n          description: 'Additional details (if available) to diagnose the 500 response.'\n          example: 'https://httpwg.org/specs/rfc7231.html#status.500'\n          type: string\n        trace:\n          description: 'Trace diagnostic information related to the response'\n          format: uuid\n          type: string\n      type: object\ninfo:\n  contact:\n    email: tagtuna@gmail.com\n    name: Tagbase Dev Team\n    url: https://github.com/tagbase/tagbase-server/issues\n  description: 'tagbse-server provides HTTP endpoints for ingestion of various files into the Tagbase SQL database. Input file support includes eTUFF (see [here](https://doi.org/10.6084/m9.figshare.10032848.v4) and [here](https://doi.org/10.6084/m9.figshare.10159820.v1)) and [nc-eTAG](https://github.com/oceandatainterop/nc-eTAG/) files; a metadata and data interoperability standard for (non-acoustic) electronic tagging datasets. The REST API complies with [OpenAPI v3.0.3](https://spec.openapis.org/oas/v3.0.3.html) until the tooling for OpenAPI v3.1.0 improves.'\n  license:\n    name: Apache License v2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  termsOfService: TODO\n  title: tagbase-server API\n  version: v0.3.0\npaths:\n  /ingest/etuff:\n    get:\n      description: 'The etuff endpoint associates an eTUFF file with a given unique identifier before splitting the file, populating mappings to the Tagbase DB structure and executing ingestion.'\n      operationId: ingest_etuff_get\n      parameters:\n      - description: \"Unique identifier for the eTUFF file e.g. '888'\"\n        explode: true\n        in: query\n        name: granule_id\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: \"Location of a network accessible (file, ftp, http, https) eTUFF\n          file e.g. 'file:///usr/src/app/data/eTUFF-sailfish-117259.txt'\"\n        explode: true\n        in: query\n        name: file\n        required: true\n        schema:\n          maxLength: 100\n          minLength: 10\n          pattern: '^(?!\\s*$).+'\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response200'\n          description: 'A success message confirming ingestion.'\n        500:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response500'\n          description: 'Internal tagbase-server error. Contact admin detailed in openapi.yaml.'\n      summary: 'Get eTUFF file and execute ingestion'\n      tags:\n      - ingest\n      x-openapi-router-controller: tagbase_server.controllers.ingest_controller\nservers:\n- description: Local development tagbase-server\n  # See https://github.com/tagbase/tagbase-server/issues/51\n  # variables:\n  #   basePath:\n  #     default: v0.3.0\n  #     description: this value should be synchronized with the API version above\n  #   port:\n  #     default: '5433'\n  #     enum:\n  #       - '5433'\n  #   hostname:\n  #     default: '0.0.0.0'\n  #     description: this value is assigned by the service provider\n  # url: https://{hostname}:{port}/{basePath}\n  url: 'https://0.0.0.0:5433/v0.3.0'\ntags:\n- description: Operations relating to the ingestion of data into tagbase-server.\n  name: ingest\n"
		}
	},
	"Error": "buildIR: make ir: path \"/ingest/etuff\": get: parameters: \"file\": string validator: pattern: error parsing regexp: invalid or unsupported Perl syntax: `(?!`"
}