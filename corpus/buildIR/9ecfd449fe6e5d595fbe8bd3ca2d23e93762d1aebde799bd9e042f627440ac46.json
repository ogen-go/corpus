{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/designapis/openapi"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "ch17/openapi.yaml",
			"byteSize": 11044,
			"content": "openapi: 3.0.0\ninfo:\n  title: PetSitter API\n  version: \"0.1\"\ntags:\n  - name: Users\n    description: User-related operations\n  - name: Jobs\n    description: Job-related operations\npaths:\n  /users:\n    post:\n      tags:\n      - Users\n      summary: Register User\n      operationId: registerUser\n      responses:\n        '201':\n          description: Created\n          headers:\n            Location:\n              schema:\n                type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      security: []\n  /users/{id}:\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      tags:\n      - Users\n      summary: View User\n      operationId: viewUserWithId\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n    put:\n      tags:\n      - Users\n      summary: Modify User\n      operationId: modifyUserWithId\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n    delete:\n      tags:\n      - Users\n      summary: Delete User\n      operationId: deleteUserWithId\n      responses:\n        '204':\n          description: No Content\n  /jobs:\n    post:\n      tags:\n      - Jobs\n      summary: Create Job\n      operationId: createJob\n      responses:\n        '201':\n          description: Created\n          headers:\n            Location:\n              schema:\n                type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Job'\n    get:\n      tags:\n      - Jobs\n      summary: List/Search Available Jobs\n      operationId: listOrSearchAvailableJobs\n      parameters:\n      - name: start_time_before\n        in: query\n        description: Search jobs starting before this date and time.\n        schema:\n          type: string\n          format: date-time\n      - name: start_time_after\n        in: query\n        description: Search jobs starting after this date and time.\n        schema:\n          type: string\n          format: date-time\n      - name: end_time_before\n        in: query\n        description: Search jobs ending before this date and time.\n        schema:\n          type: string\n          format: date-time\n      - name: end_time_after\n        in: query\n        description: Search jobs ending after this date and time.\n        schema:\n          type: string\n          format: date-time\n      - name: activity\n        in: query\n        description: Performs a full-text search for the phrase entered in job activities.\n        schema:\n          type: string\n      - name: pets\n        in: query\n        description: Searches for pets matching specific criteria.\n        style: deepObject\n        schema:\n          type: object\n          properties:\n            age_below:\n              type: integer\n              description: Return only pets with this age or younger.\n            age_above:\n              type: integer\n              description: Return only pets with this age or older.\n            species:\n              type: string\n              description: Return only pets with this species. Provide multiple species as comma-separated values.\n      - name: limit\n        in: query\n        description: The maximum number of results to return.\n        schema:\n          type: integer\n          default: 20\n          maximum: 100\n      - name: cursor\n        in: query\n        description: Use the cursor from the response to access more results.\n        schema:\n          type: string\n      - name: sort\n        in: query\n        description: |\n          Indicate the sorting key and direction for the results.\n          Use the field name, suffixed with \":asc\" for ascending\n          or \":desc\" for descending order.\n          Valid fields: start_time, end_time\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Job'\n                  cursor:\n                    type: string\n                    description: Cursor for the next result page.\n                    nullable: true\n  /jobs/{id}:\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      tags:\n      - Jobs\n      summary: View Job\n      operationId: viewJobWithId\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Job'\n    put:\n      tags:\n      - Jobs\n      summary: Modify Job\n      operationId: modifyJobWithId\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Job'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Job'\n    delete:\n      tags:\n      - Jobs\n      summary: Delete Job\n      operationId: deleteJobWithId\n      responses:\n        '204':\n          description: No Content\n  /jobs/{id}/job-applications:\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      tags:\n      - Jobs\n      summary: List Applications For Job\n      operationId: viewApplicationsForJob\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/JobApplication'\n    post:\n      tags:\n      - Jobs\n      summary: Create Job Application\n      operationId: createJobApplication\n      responses:\n        '201':\n          description: Created\n          headers:\n            Location:\n              schema:\n                type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JobApplication'\n  /users/{id}/jobs:\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      tags:\n      - Users\n      summary: List Jobs For User\n      operationId: listJobsForUser\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Job'\n  /users/{id}/job-applications:\n    parameters:\n    - name: id\n      in: path\n      required: true\n      schema:\n        type: integer\n    get:\n      tags:\n      - Users\n      summary: List Applications For User\n      operationId: viewApplicationsForUser\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/JobApplication'\n  /job-applications/{id}:\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    put:\n      tags:\n      - Jobs\n      summary: Modify Job Application\n      operationId: modifyJobApplicationWithId\n      requestBody:\n        description: Update the application details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JobApplication'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JobApplication'\n  /sessions:\n    post:\n      tags:\n      - Users\n      summary: Start Session (Login)\n      operationId: startSession\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Session'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n      security: []\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        full_name:\n          type: string\n        roles:\n          type: array\n          items:\n            type: string\n    Job:\n      type: object\n      properties:\n        id:\n          type: string\n        creator_user_id:\n          type: string\n        start_time:\n          type: string\n        end_time:\n          type: string\n        activity:\n          type: string\n        pets:\n          type: array\n          items:\n            $ref: '#/components/schemas/Pet'\n    Dog:\n      type: object\n      properties:\n        species:\n          type: string\n        breed:\n          type: string\n        size:\n          type: string\n      required:\n        - species\n    Cat:\n      type: object\n      properties:\n        species:\n          type: string\n        breed:\n          type: string\n      required:\n        - species\n    Pet:\n      allOf:\n        - type: object\n          properties:\n            name:\n              type: string\n            age:\n              type: integer\n        - oneOf:\n            - $ref: '#/components/schemas/Cat'\n            - $ref: '#/components/schemas/Dog'\n          discriminator:\n            propertyName: species\n            mapping:\n              Cat: '#/components/schemas/Cat'\n              Dog: '#/components/schemas/Dog'\n    JobApplication:\n      type: object\n      properties:\n        id:\n          type: string\n        status:\n          type: string\n        user_id:\n          type: string\n        job_id:\n          type: string\n    Session:\n      type: object\n      properties:\n        user_id:\n          type: string\n        auth_header:\n          type: string\n  securitySchemes:\n    SessionToken:\n      type: apiKey\n      in: header\n      name: Authorization\nsecurity:\n  - SessionToken: []\n",
			"canonicalURL": "/github.com/designapis/openapi@4b0cc3d98e9682a81bc00163f3acedd7b3cfdd3c/-/blob/ch17/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/designapis/openapi/blob/4b0cc3d98e9682a81bc00163f3acedd7b3cfdd3c/ch17/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/jobs\": get: responses: code 200: contents: media: \"application/json\": generate schema: field items: item: field pets: item: allOf: schema type mismatch: object and "
}