{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/googleapis.com/displayvideo/v1dev/openapi.yaml",
			"byteSize": 12611,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://displayvideo.googleapis.com/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: Display \u0026 Video 360 API allows users to automate complex Display \u0026 Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Display \u0026 Video 360 API\n  version: v1dev\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - analytics\n    - media\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - format: openapi\n      url: https://displayvideo.googleapis.com/$discovery/rest?version=v1dev\n      version: \"3.0\"\n  x-preferred: false\n  x-providerName: googleapis.com\n  x-serviceName: displayvideo\nexternalDocs:\n  url: https://developers.google.com/display-video/\ntags:\n  - name: media\n  - name: sdfdownloadtasks\npaths:\n  \"/download/{resourceName}\":\n    get:\n      description: \"Downloads media. Download is supported on the URI `/download/{resource_name=**}?alt=media.` **Note**: Download requests will not be successful without including `alt=media` query string.\"\n      operationId: displayvideo.media.download\n      parameters:\n        - description: Name of the media that is being downloaded. See ReadRequest.resource_name.\n          in: path\n          name: resourceName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GoogleBytestreamMedia\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/display-video\n          Oauth2c:\n            - https://www.googleapis.com/auth/display-video\n        - Oauth2:\n            - https://www.googleapis.com/auth/doubleclickbidmanager\n          Oauth2c:\n            - https://www.googleapis.com/auth/doubleclickbidmanager\n      tags:\n        - media\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/media/{resourceName}\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      description: \"Uploads media. Upload is supported on the URI `/upload/media/{resource_name=**}?upload_type=media.` **Note**: Upload requests will not be successful without including `upload_type=media` query string.\"\n      operationId: displayvideo.media.upload\n      parameters:\n        - description: Name of the media that is being downloaded. See ReadRequest.resource_name.\n          in: path\n          name: resourceName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              $ref: \"#/components/schemas/GoogleBytestreamMedia\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GoogleBytestreamMedia\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/display-video\n          Oauth2c:\n            - https://www.googleapis.com/auth/display-video\n        - Oauth2:\n            - https://www.googleapis.com/auth/doubleclickbidmanager\n          Oauth2c:\n            - https://www.googleapis.com/auth/doubleclickbidmanager\n      tags:\n        - media\n  \"/v1dev/{name}\":\n    get:\n      description: Gets the latest state of an asynchronous SDF download task operation. Clients should poll this method at intervals of 30 seconds.\n      operationId: displayvideo.sdfdownloadtasks.operations.get\n      parameters:\n        - description: The name of the operation resource.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/display-video\n          Oauth2c:\n            - https://www.googleapis.com/auth/display-video\n        - Oauth2:\n            - https://www.googleapis.com/auth/doubleclickbidmanager\n          Oauth2c:\n            - https://www.googleapis.com/auth/doubleclickbidmanager\n      tags:\n        - sdfdownloadtasks\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\ncomponents:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n          - \"1\"\n          - \"2\"\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n          - json\n          - media\n          - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    GoogleBytestreamMedia:\n      description: Media resource.\n      properties:\n        resourceName:\n          description: Name of the media resource.\n          type: string\n      type: object\n    Operation:\n      description: This resource represents a long-running operation that is the result of a network API call.\n      properties:\n        done:\n          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.\n          type: boolean\n        error:\n          $ref: \"#/components/schemas/Status\"\n          description: The error result of the operation in case of failure or cancellation.\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.\n          type: object\n      type: object\n    Status:\n      description: \"The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).\"\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/display-video: Create, see, edit, and permanently delete your Display \u0026 Video 360 entities and reports\n            https://www.googleapis.com/auth/doubleclickbidmanager: View and manage your reports in DoubleClick Bid Manager\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/display-video: Create, see, edit, and permanently delete your Display \u0026 Video 360 entities and reports\n            https://www.googleapis.com/auth/doubleclickbidmanager: View and manage your reports in DoubleClick Bid Manager\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\nsource:\n  url: {}\n"
		}
	},
	"Error": "buildIR: make ir: path \"/media/{resourceName}\": post: requestBody: contents: application/octet-stream: octet stream with schema not supported"
}