{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse/tractusx"
		},
		"file": {
			"name": "mock_data_openapi.yaml",
			"size": 0,
			"path": "documentation/architecture/mock_data_openapi.yaml",
			"byteSize": 7465,
			"content": "openapi: 3.0.0\ninfo:\n  title: \"Tractus-X PoC Mock Data API\"\n  description: Tractus-X PoC Mock Data API\n  version: 0.0.1 PoC\n  termsOfService: https://projects.eclipse.org/proposals/eclipse-tractus-x\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Felix Gerbig\n    email: felix.gerbig@bmw.de\n\nservers:\n  - url: https://data.catenax-poc-dsc.bmw.cloud\n\npaths:\n  /cdh-ids/get-data:\n    get:\n      summary: Retrieve Existing Mock Data\n      description: Retrieve existing mock data according to information model\n      operationId: getData\n      tags:\n        - \"Mock  Data\"\n      parameters:\n        - name: company\n          in: query\n          description: OneID of the company that you want to retrieve mock data for. Must be one of [BMW, MB, BOSCH, ZF, TIER1, GRIES, BILSTEIN, ERROR_CP]\n          required: true\n          schema:\n            $ref: \"#/components/schemas/OneIDBusinessPartner\"\n        - name: fromDate\n          in: query\n          description: Starting date to include data in the query.\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Date\"\n        - name: toDate\n          in: query\n          description: End date to include data in the query.\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Date\"\n        - in: header\n          name: x-api-key\n          required: true\n          description: API Key needed to access the API. Contact felix.gerbig@bmw.de.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Mock Data\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PartMasterData'\n        '400':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /cdh-ids/generate-new-data:\n    get:\n      summary: Generate New Mock Data\n      description: Generates New Mock Data\n      operationId: generateData\n      tags:\n        - \"Mock Data\"\n      parameters:\n        - name: company\n          in: query\n          description: OneID of the company that you want to retrieve mock data for. Must be one of [BMW, MB, BOSCH, ZF, TIER1, GRIES, BILSTEIN, ERROR_CP]\n          required: true\n          schema:\n            $ref: \"#/components/schemas/PartMasterData\"\n        - in: header\n          name: x-api-key\n          required: true\n          description: API Key needed to access the API. Contact felix.gerbig@bmw.de.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: New Mock Data\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PartMasterData'\n        '400':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    OneIDBusinessPartner:\n      description: Business Partner OneID\n      example: \"Partner_00001_BOSCH\"\n      type: string\n      minLength: 8\n      maxLength: 20\n      enum:\n        - Partner_ERROR_CP\n        - Partner_00001_BOSCH\n        - Partner_00002_BILSTEIN\n        - Partner_00003_GRIS\n        - Partner_00004_ZF\n        - Partner_00005_TIER1\n        - Partner_00006_Mercedes\n        - Partner_00007_BMW\n        - Partner_00008_BASF\n\n    PartMasterData:\n      required:\n        - staticData\n      properties:\n        staticData:\n          $ref: \"#/components/schemas/PartStaticData\"\n        uniqueData:\n          $ref: \"#/components/schemas/PartUniqueData\"\n        individualData:\n          $ref: \"#/components/schemas/PartIndividualData\"\n\n        supplyTree:\n          $ref: \"#/components/schemas/SupplyTreeParent\"\n        partTree:\n          $ref: \"#/components/schemas/PartTreeParent\"\n        qualityAlert:\n          $ref: \"#/components/schemas/QualityAlert\"\n\n    PartStaticData:\n      required:\n        - manufacturerOneId\n        - manufactureContractOneId\n        - partNameManufacturer\n        - partNumberManufacturer\n        - customerOneID\n        - customerContractOneID\n        - partNameCustomer\n        - partNumberCustomer\n      properties:\n        manufacturerOneId:\n          description: OneID of manufacture partner\n          allOf:\n            - $ref: \"#/components/schemas/OneIDBusinessPartner\"\n        manufactureContractOneId:\n          description: OneID of manufacture contract partner\n          allOf:\n            - $ref: \"#/components/schemas/OneIDBusinessPartner\"\n        partNameManufacturer:\n          type: string\n          description: Name of the part family of manufacture\n          example: KLEBER1\n        partNumberManufacturer:\n          type: string\n          description: Number of part family of manufacture\n          example: 101.15V\n        customerOneID:\n          description: OneID of customer plant\n          allOf:\n            - $ref: \"#/components/schemas/OneIDBusinessPartner\"\n        customerContractOneID:\n          description: OneID of customer contract partner\n          allOf:\n            - $ref: \"#/components/schemas/OneIDBusinessPartner\"\n        partNameCustomer:\n          type: string\n          description: Name of the customer product\n          example: MIRROR_1\n        partNumberCustomer:\n          type: string\n          description: Type/Part No. of customer product\n          example: \"1122334455\"\n\n    PartUniqueData:\n      required:\n        - uniqueID\n        - manufacturerUniqueID\n        - customerUniqueID\n      properties:\n        uniqueID:\n          type: string\n          description: this is a local unique ID to identiy the part\n          example:  1AB\n        manufacturerUniqueID:\n          type: string\n          description: SerialNo. Of manufacture\n          example: Xxx\n        customerUniqueID:\n          type: string\n          description: SerialNo. Of customer\n          example: \"333\"\n\n    PartIndividualData:\n      required:\n        - productionCountryCode\n        - productionDateGMT\n      properties:\n        productionCountryCode:\n          type: string\n          description: Country of production\n          minLength: 3\n          maxLength: 3\n          example: \"HUR\"\n        productionDateGMT:\n          type: string\n          description: Production Date without timestamp\n          format: date\n\n    QualityAlert:\n      description: Quality Alert\n      properties:\n        QualityAlert:\n          type: boolean\n        QualityType:\n          type: string\n          enum:\n            - CRITICAL\n            - MAJOR\n            - MINOR\n\n\n    SupplyTreeParent:\n      properties:\n        isParentOf:\n          type: array\n          items:\n            type: string\n            example: 0000003_ZF\n          description: pNM*, pNM\n\n    PartTreeParent:\n      properties:\n        isParentOf:\n          type: array\n          items:\n            type: string\n            example: G05\n          description: UID, UID\n\n\n    Date:\n      description: ISO Conform Date without time\n      example: \"2020-03-31\"\n      type: string\n      minLength: 10\n      maxLength: 10\n\n    Error:\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n        fields:\n          type: string\n"
		}
	},
	"Error": "buildIR: make ir: path \"/cdh-ids/generate-new-data\": get: parameters: fail: \"company\": field \"IndividualData\": nested objects not allowed"
}