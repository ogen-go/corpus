{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opctl/opctl"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi.yaml",
			"byteSize": 15813,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'localhost:42224'\n    variables: {}\n    description: Local opctl node bound to default port\ninfo:\n  version: 0.1.26\n  title: Opctl ReST API\npaths:\n  /auths/adds:\n    post:\n      summary: Adds auth for an OCI image registry\n      tags:\n        - auths\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/addAuthReq\"\n        required: true\n      responses:\n        \"204\":\n          description: HTTP/1.1 [\"No Content\" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.5)\n        \"400\":\n          $ref: \"#/components/responses/badRequest\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerError\"\n  /events/stream:\n    get:\n      summary: Get an event stream\n      description: The connection will be upgraded to use the websocket protocol.\n      parameters:\n        - name: ack\n          in: query\n          required: false\n          description:\n            When specified, client MUST ack (empty reply) each message before server will send another.\n            This enables the client to apply back pressure to the stream\n          schema:\n            type: boolean\n          allowEmptyValue: true\n        - name: since\n          in: query\n          description: Filters events to those occurring on/after the provided instant\n          required: false\n          schema:\n            type: string\n            format: date-time\n          explode: false\n        - name: roots\n          in: query\n          description: Filters events to those w/ the provided root op ids\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n          explode: false\n      tags:\n        - events\n      responses:\n        \"101\":\n          description: HTTP/1.1 [\"Switching Protocols\" response status code](https://tools.ietf.org/html/rfc7231#section-6.2.2)\n          headers:\n            Upgrade:\n              schema:\n                type: string\n                enum:\n                  - websocket\n            Connection:\n              schema:\n                type: string\n                enum:\n                  - Upgrade\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/event\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerError\"\n        \"400\":\n          $ref: \"#/components/responses/badRequest\"\n  /liveness:\n    get:\n      summary: Get liveness of node\n      tags:\n        - liveness\n      responses:\n        \"200\":\n          description: HTTP/1.1 [\"OK\" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)\n        \"500\":\n          $ref: \"#/components/responses/internalServerError\"\n  /ops/starts:\n    post:\n      summary: Starts an op\n      tags:\n        - ops\n      responses:\n        \"201\":\n          description: HTTP/1.1 [\"Created\" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.2)\n          content:\n            text/plain:\n              schema:\n                description: \"The id of the [started] op\"\n                type: string\n        \"400\":\n          $ref: \"#/components/responses/badRequest\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerError\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/startOpReq\"\n        required: true\n  /ops/kills:\n    post:\n      summary: Kills an op\n      tags:\n        - ops\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/killOpReq\"\n        required: true\n      responses:\n        \"204\":\n          description: HTTP/1.1 [\"No Content\" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.5)\n        \"400\":\n          $ref: \"#/components/responses/badRequest\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerError\"\n  \"/data/{ref}\":\n    get:\n      summary: Gets data\n      tags:\n        - data\n      parameters:\n        - name: ref\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: path\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: Range\n          description: HTTP/1.1 [\"Range\" header field](https://tools.ietf.org/html/rfc7233#section-3.1)\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: HTTP/1.1 [\"OK\" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)\n          headers:\n            Accept-Ranges:\n              description: HTTP/1.1 [\"Accept-Ranges\" header field](https://tools.ietf.org/html/rfc7233#section-2.3)\n              schema:\n                type: string\n                enum:\n                  - bytes\n            Content-Length:\n              description: HTTP/1.1 [\"Content-Length\" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)\n              schema:\n                type: integer\n          content:\n            application/octet-stream: {}\n            multipart/byteranges: {}\n            text/plain: {}\n            application/json: {}\n            application/vnd.opspec.0.1.6.dir+json:\n              schema:\n                items:\n                  properties:\n                    path:\n                      description: absolute path within dir\n                      type: string\n                    size:\n                      type: integer\n                    mode:\n                      description: golang [FileMode](https://golang.org/pkg/os/#FileMode)\n                      type: integer\n                type: array\n        \"206\":\n          description: HTTP/1.1 [\"Partial Content\" response status code](https://tools.ietf.org/html/rfc7233#section-4.1)\n          headers:\n            Content-Length:\n              description: HTTP/1.1 [\"Content-Length\" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)\n              schema:\n                type: integer\n            Content-Range:\n              description: HTTP/1.1 [\"Content-Range\" header field](https://tools.ietf.org/html/rfc7233#section-4.2)\n              schema:\n                type: string\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n            multipart/byteranges:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/notFound\"\n        \"416\":\n          $ref: \"#/components/responses/rangeNotSatisfiable\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerError\"\n    head:\n      summary: Same as GET operation but only returns headers\n      tags:\n        - data\n      parameters:\n        - name: ref\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: path\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: Range\n          description: HTTP/1.1 [\"Range\" header field](https://tools.ietf.org/html/rfc7233#section-3.1)\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: HTTP/1.1 [\"OK\" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)\n          headers:\n            Accept-Ranges:\n              description: HTTP/1.1 [\"Accept-Ranges\" header field](https://tools.ietf.org/html/rfc7233#section-2.3)\n              schema:\n                type: string\n                enum:\n                  - bytes\n            Content-Length:\n              description: HTTP/1.1 [\"Content-Length\" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)\n              schema:\n                type: integer\n        \"206\":\n          description: HTTP/1.1 [\"Partial Content\" response status code](https://tools.ietf.org/html/rfc7233#section-4.1)\n          headers:\n            Content-Length:\n              description: HTTP/1.1 [\"Content-Length\" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)\n              schema:\n                type: integer\n            Content-Range:\n              description: HTTP/1.1 [\"Content-Range\" header field](https://tools.ietf.org/html/rfc7233#section-4.2)\n              schema:\n                type: string\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n            multipart/byteranges:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/notFound\"\n        \"416\":\n          $ref: \"#/components/responses/rangeNotSatisfiable\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerError\"\n\ncomponents:\n  responses:\n    unauthorized:\n      description: HTTP/1.1 [\"Unauthorized\" response status code](https://tools.ietf.org/html/rfc7235#section-3.1)\n      headers:\n        WWW-Authenticate:\n          description: HTTP/1.1 [\"WWW-Authenticate\" header](https://tools.ietf.org/html/rfc7235#section-4.1)\n          schema:\n            type: string\n    forbidden:\n      description: HTTP/1.1 [\"Forbidden\" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.3)\n    internalServerError:\n      description: HTTP/1.1 [\"Internal Server Error\" response status code](https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    badRequest:\n      description: HTTP/1.1 [\"Bad Request\" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.1)\n    notFound:\n      description: HTTP/1.1 [\"Not Found\" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.4)\n    rangeNotSatisfiable:\n      description: HTTP/1.1 [\"Range Not Satisfiable\" response status code](https://tools.ietf.org/html/rfc7233#section-4.4)\n  schemas:\n    auth:\n      properties:\n        password:\n          type: string\n        resources:\n          type: string\n        username:\n          type: string\n      type: object\n    addAuthReq:\n      $ref: \"#/components/schemas/auth\"\n    authAdded:\n      properties:\n        auth:\n          $ref: \"#/components/schemas/auth\"\n      type: object\n    call:\n      type: object\n      oneOf:\n        - properties:\n            container:\n              properties:\n                image:\n                  properties:\n                    ref:\n                      type: string\n                  type: object\n              type: object\n        - properties:\n            op:\n              type: object\n        - properties:\n            parallel:\n              type: object\n        - properties:\n            parallelLoop:\n              type: object\n        - properties:\n            serial:\n              type: object\n        - properties:\n            serialLoop:\n              type: object\n      properties:\n        id:\n          type: string\n        if:\n          type: boolean\n        isKilled:\n          type: boolean\n        name:\n          type: string\n        needs:\n          items:\n            type: string\n          type: array\n        parentId:\n          type: string\n        rootId:\n          type: string\n    pullCreds:\n      description: credentials used during authentication with the source of the op\n      required:\n        - username\n        - password\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n      type: object\n    startOpReqArgs:\n      type: object\n      description: arguments passed to the op to satisfy inputs\n      additionalProperties:\n        $ref: \"#/components/schemas/value\"\n    startOpReqOp:\n      required:\n        - ref\n      properties:\n        ref:\n          type: string\n          format: uri-reference\n          description: reference to an op\n        pullCreds:\n          $ref: \"#/components/schemas/pullCreds\"\n      type: object\n    startOpReq:\n      type: object\n      properties:\n        args:\n          $ref: \"#/components/schemas/startOpReqArgs\"\n        op:\n          $ref: \"#/components/schemas/startOpReqOp\"\n    value:\n      description: a typed value\n      oneOf:\n        - properties:\n            array:\n              type: array\n              items: {}\n        - properties:\n            dir:\n              description: path\n              type: string\n        - properties:\n            file:\n              description: path\n              type: string\n        - properties:\n            number:\n              type: number\n        - properties:\n            object:\n              type: object\n        - properties:\n            socket:\n              description: socket address\n              type: string\n        - properties:\n            string:\n              type: string\n      type: object\n    event:\n      properties:\n        timestamp:\n          type: string\n          format: dateTime\n      oneOf:\n        - properties:\n            authAdded:\n              $ref: \"#/components/schemas/authAdded\"\n        - properties:\n            callEnded:\n              $ref: \"#/components/schemas/callEnded\"\n        - properties:\n            callStarted:\n              $ref: \"#/components/schemas/callStarted\"\n        - properties:\n            containerStdErrWrittenTo:\n              $ref: \"#/components/schemas/containerStdErrWrittenTo\"\n        - properties:\n            containerStdOutWrittenTo:\n              $ref: \"#/components/schemas/containerStdOutWrittenTo\"\n        - properties:\n            callKillRequested:\n              $ref: \"#/components/schemas/callKillRequested\"\n      type: object\n    callEnded:\n      properties:\n        call:\n          $ref: \"#/components/schemas/call\"\n        error:\n          $ref: \"#/components/schemas/callEndedError\"\n        ref:\n          type: string\n        rootCallId:\n          type: string\n        outcome:\n          enum:\n            - SUCCEEDED\n            - FAILED\n            - KILLED\n        outputs:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/value\"\n      type: object\n    callEndedError:\n      properties:\n        message:\n          type: string\n      type: object\n    callStarted:\n      properties:\n        call:\n          $ref: \"#/components/schemas/call\"\n        ref:\n          type: string\n        rootCallId:\n          type: string\n      type: object\n    containerStdErrWrittenTo:\n      properties:\n        imageRef:\n          type: string\n        data:\n          type: string\n          format: binary\n        rootOpId:\n          type: string\n        containerId:\n          type: string\n        opRef:\n          type: string\n      type: object\n    containerStdOutWrittenTo:\n      properties:\n        imageRef:\n          type: string\n        data:\n          type: string\n          format: binary\n        rootOpId:\n          type: string\n        containerId:\n          type: string\n        opRef:\n          type: string\n      type: object\n    killOpReq:\n      properties:\n        opId:\n          type: string\n        rootOpId:\n          type: string\n      type: object\n    callKillRequested:\n      properties:\n        request:\n          $ref: \"#/components/schemas/killOpReq\"\n      type: object\n"
		}
	},
	"Error": "buildIR: make ir: path \"/data/{ref}\": head: responses: 206: contents: application/octet-stream: octet stream with \"string\" schema not supported",
	"NotImplemented": [
		"empty schema"
	]
}