{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/quackmore/esp_thermostat"
		},
		"file": {
			"name": "thermostat_api.yaml",
			"size": 0,
			"path": "api/thermostat_api.yaml",
			"byteSize": 82789,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: ESP_thermostat APIs\n  version: 2.2.0\n  description: \u003e\n    These APIs are for reading, setting and controlling ESP_thermostat APP.\n    Based on ESPBOT API \n\nservers:\n  - url: http://{host}:{port}/{basePath}\n    description: The generic ESPBOT device\n    variables:\n      host:\n        enum:\n        - '192.168.10.1'\n        - '192.168.1.176'\n        - '192.168.1.187'\n        default: '192.168.10.1'\n      port:\n        enum:\n        - '80'\n        default: '80'\n      basePath:\n        enum:\n        - api\n        default: api\n\npaths:\n# espbot APIs\n  /cron:\n    get:\n      description: Returns cron settings (enabled or disabled)\n      summary: Find cron status\n      operationId: getCron\n      responses:\n        '200':\n          description: the cron status (enabled/disabled)\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/cron_status'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets cron status (enabled or disabled)\n      summary: Enable/Disable cron\n      operationId: setCron\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/cron_status'\n      responses:\n        '200':\n          description: Successful, return current cron status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cron_status'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /debug/lastReset:\n    get:\n      description: Returns information about last time the device rebooted.\n      summary: Find last reset info\n      operationId: getLastReset\n      responses:\n        '200':\n          description: Last reset info\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/lastReset'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /debug/hexMemDump:\n    post:\n      description: Returns the content of a selected RAM memory interval as hexadecimal\n      summary: Find memory content (hex)\n      operationId: getHexMemDump\n      requestBody:\n        description: The memory interval range\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/memInterval'\n      responses:\n        '200':\n          description: The memory interval content\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/memIntervalHexContent'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /debug/memDump:\n    post:\n      description: Returns the content of a selected RAM memory interval as text\n      summary: Find memory content (text)\n      operationId: getMemDump\n      requestBody:\n        description: The memory interval range\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/memInterval'\n      responses:\n        '200':\n          description: The memory interval content\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/memIntervalContent'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /debug/memInfo:\n    get:\n      description: Returns a summary of RAM memory usage\n      summary: Find RAM memory usage\n      operationId: getMemInfo\n      responses:\n        '200':\n          description: The current RAM memory usage\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/memInfo'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /deviceName:\n    get:\n      description: Returns the device name\n      summary: Find device name\n      operationId: getDeviceName\n      responses:\n        '200':\n          description: The current device name\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/deviceName'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets device name\n      summary: Set device name\n      operationId: setDeviceName\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deviceName'\n      responses:\n        '200':\n          description: Successful, returns current device name\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deviceName'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /diagnostic:\n    get:\n      description: Returns the last diagnostic events recorded by the device\n      summary: Find device diagnostic\n      operationId: getDiagnosticEvents\n      responses:\n        '200':\n          description: The last diagnostic events\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/diagnosticEvents'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Acknowledges the diagnostic events.\n      summary: Acknowledge diagnostic.\n      operationId: ackDiagnosticEvents\n      responses:\n        '200':\n          description: The diagnostic events were acknowledged. \n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/success'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /diagnostic/cfg:\n    get:\n      description: Returns the diagnostic config (which events are reported to the LED and to the serial log).\n      summary: Find current diagnostic config\n      operationId: getDiagnosticCfg\n      responses:\n        '200':\n          description: The current diagnostic config\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/diagnosticCfg'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets diagnostic config\n      summary: Set diagnostic config\n      operationId: setDiagnosticCfg\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/diagnosticCfg'\n      responses:\n        '200':\n          description: Successful, returns current diagnostic config\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/diagnosticCfg'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /file:\n    get:\n      description: Returns a list of the files on the device.\n      summary: File list\n      operationId: getFileList\n      responses:\n        '200':\n          description: The file list\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/fileList'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /file/{filename}:\n    get:\n      description: Returns the content of a file\n      summary: Find file\n      operationId: getFile\n      parameters:\n      - name: filename\n        in: path\n        description: The file name\n        required: true\n        schema:\n          type: string\n          pattern: '[ -~]{1,31}'\n          minLength: 1\n          maxLength: 31\n        style: simple\n      responses:\n        '200':\n          description: The file content\n          content:\n            'application/octet-stream':\n              schema:\n                type: string\n                format: binary\n                minLength: 0\n                maxLength: 4194304\n                pattern: '[\\x00-\\xFF]{0,4194304}'\n            'text/css':\n              schema:\n                type: string\n                format: binary\n                minLength: 0\n                maxLength: 4194304\n                pattern: '[\\x00-\\xFF]{0,4194304}'\n            'text/html':\n              schema:\n                type: string\n                format: binary\n                minLength: 0\n                maxLength: 4194304\n                pattern: '[\\x00-\\xFF]{0,4194304}'\n            'text/js':\n              schema:\n                type: string\n                format: binary\n                minLength: 0\n                maxLength: 4194304\n                pattern: '[\\x00-\\xFF]{0,4194304}'\n            'text/plain':\n              schema:\n                type: string\n                format: binary\n                minLength: 0\n                maxLength: 4194304\n                pattern: '[\\x00-\\xFF]{0,4194304}'\n            'image/jpeg':\n              schema:\n                type: string\n                format: binary\n                minLength: 0\n                maxLength: 4194304\n                pattern: '[\\x00-\\xFF]{0,4194304}'\n            'image/png':\n              schema:\n                type: string\n                format: binary\n                minLength: 0\n                maxLength: 4194304\n                pattern: '[\\x00-\\xFF]{0,4194304}'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '404':\n          description: Not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Create a new file (to create files bigger than 2048 bytes, first create then modify, appending new content)\n      summary: Create a file\n      operationId: createFile\n      parameters:\n      - name: filename\n        in: path\n        description: The file name\n        required: true\n        schema:\n          type: string\n          pattern: '[ -~]{1,31}'\n          minLength: 1\n          maxLength: 31\n        style: simple\n      requestBody:\n        required: true\n        description: The file content\n        content:\n          'application/octet-stream':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'text/css':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'text/html':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'text/js':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'text/plain':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'image/jpeg':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'image/png':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n      responses:\n        '201':\n          description: File successfully created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/success'\n        '400':\n          description: Bad request, no filename provided or file already exists.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    put:\n      description: Append content to the specified file\n      summary: Modify a file\n      operationId: appendToFile\n      parameters:\n      - name: filename\n        in: path\n        description: The file name\n        required: true\n        schema:\n          type: string\n          pattern: '[ -~]{1,31}'\n          minLength: 1\n          maxLength: 31\n        style: simple\n      requestBody:\n        required: true\n        description: The file content\n        content:\n          'application/octet-stream':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'text/css':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'text/html':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'text/js':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'text/plain':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'image/jpeg':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n          'image/png':\n            schema:\n              type: string\n              format: binary\n              minLength: 0\n              maxLength: 2048\n              pattern: '[\\x00-\\xFF]{0,2048}'\n      responses:\n        '200':\n          description: File successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/success'\n        '400':\n          description: Bad request, no filename provided.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '404':\n          description: Not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    delete:\n      description: Delete the specified file\n      summary: Delete a file\n      operationId: deleteFile\n      parameters:\n      - name: filename\n        in: path\n        description: The file name\n        required: true\n        schema:\n          type: string\n          pattern: '[ -~]{1,31}'\n          minLength: 1\n          maxLength: 31\n        style: simple\n      responses:\n        '200':\n          description: File successfully deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/success'\n        '400':\n          description: Bad request, no filename provided.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '404':\n          description: Not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /fs:\n    get:\n      description: Returns SPIFFS file system information\n      summary: Find SPIFFS informations\n      operationId: getFs\n      responses:\n        '200':\n          description: SPIFFS informations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/fsInfo'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /fs/format:\n    post:\n      description: Formats the file system (will take a long time)\n      summary: Format File System\n      operationId: formatFs\n      responses:\n        '202':\n          description: Command accepted, the file system is being formatted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/success'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /gpio/{gpio_id}:\n    get:\n      description: Returns the level (low/high) for gpio with the specified id\n      summary: Find gpio level\n      operationId: getGpioLevel\n      parameters:\n      - name: gpio_id\n        in: path\n        description: The gpio id\n        required: true\n        schema:\n          type: integer\n          format: int32\n          description: WEMOX D1 D1-D8\n          minimum: 1      \n          maximum: 8      \n        style: simple\n      responses:\n        '200':\n          description: The current level for gpio \"gpio_id\"\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/gpioInfo'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets the specified gpio to the level in the request body (will work only on gpio configured as output)\n      summary: Set gpio level\n      operationId: setGpioLevel\n      parameters:\n      - name: gpio_id\n        in: path\n        description: The gpio id\n        required: true\n        schema:\n          type: integer\n          format: int32\n          description: WEMOX D1 D1-D8\n          minimum: 1      \n          maximum: 8      \n        style: simple\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/gpioInfo'\n      responses:\n        '200':\n          description: Successful, returns the current gpio level\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gpioInfo'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /gpio/cfg/{gpio_id}:\n    get:\n      description: Returns the specified gpio config (unprovisioned or input or output)\n      summary: Find gpio config\n      operationId: getGpioCfg\n      parameters:\n      - name: gpio_id\n        in: path\n        description: The gpio id\n        required: true\n        schema:\n          type: integer\n          format: int32\n          description: WEMOX D1 D1-D8\n          minimum: 1      \n          maximum: 8      \n        style: simple\n      responses:\n        '200':\n          description: The gpio config\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/gpioCfg'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets the specified gpio as unprovisioned or input or output\n      summary: Set gpio config\n      operationId: setGpioCfg\n      parameters:\n      - name: gpio_id\n        in: path\n        description: The gpio id\n        required: true\n        schema:\n          type: integer\n          format: int32\n          description: WEMOX D1 D1-D8\n          minimum: 1      \n          maximum: 8      \n        style: simple\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/gpioCfg'\n      responses:\n        '200':\n          description: Successful, returns the current gpio config\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gpioCfg'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /info:\n    get:\n      description: Returns informations about the device (device name, chip id, fw versions)\n      summary: Find device info\n      operationId: getInfo\n      responses:\n        '200':\n          description: The device information\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/deviceInfo'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /mdns:\n    get:\n      description: Returns mDNS status (enabled or disabled)\n      summary: Find mDNS status\n      operationId: getMdns\n      responses:\n        '200':\n          description: The mDNS status (enabled/disabled)\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/mdnsStatus'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets mDNS status (enabled or disabled)\n      summary: Enable/Disable mDNS\n      operationId: setMdns\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/mdnsStatus'\n      responses:\n        '200':\n          description: Successful, returns current mDNS status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/mdnsStatus'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ota:\n    post:\n      description: Start OTA (in case that version check is enabled and the device binary is up-to-date OTA won't be started)\n      summary: Start OTA\n      operationId: startOTA\n      responses:\n        '200':\n          description: OTA completed or not required\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/success'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ota/cfg:\n    get:\n      description: Returns the config used for OTA\n      summary: Find OTA config\n      operationId: getOtaCfg\n      responses:\n        '200':\n          description: The current OTA config\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/otaCfg'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets OTA config\n      summary: Set OTA config\n      operationId: setOtaCfg\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/otaCfg'\n      responses:\n        '200':\n          description: Successful, return current OTA config\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/otaCfg'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ota/reboot:\n    post:\n      description: Reboot the device after OTA completion\n      summary: Reboot after OTA\n      operationId: setOtaReboot\n      responses:\n        '202':\n          description: Successful, device is rebooting...\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/success'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /reboot:\n    post:\n      description: Reboots the device\n      summary: Reboot\n      operationId: setReboot\n      responses:\n        '202':\n          description: Successful, device is rebooting...\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/success'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /timedate:\n    get:\n      description: Returns the device current time and date\n      summary: Find time and date\n      operationId: getTimedate\n      responses:\n        '200':\n          description: The current time and date\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/timedateFull'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets the device timedate (will only work when SNTP is disabled)\n      summary: Set timedate\n      operationId: setTimedate\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/timedate'\n      responses:\n        '200':\n          description: Successful message, returns the current timestamp\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/timedate'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /timedate/cfg:\n    get:\n      description: Returns the device time and date config (SNTP enabled/disabled and timezone)\n      summary: Find timedate config\n      operationId: getTimedateCfg\n      responses:\n        '200':\n          description: The current timedate config\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/timedateCfg'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets timedate config (SNTP enabled/disabled and timezone)\n      summary: Set timedate config\n      operationId: setTimedateCfg\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/timedateCfg'\n      responses:\n        '200':\n          description: Successful, returns current timedate config\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/timedateCfg'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /wifi:\n    get:\n      description: Get wifi information (working mode, AP SSID and IP address)\n      summary: Get wifi info\n      operationId: getWifi\n      responses:\n        '200':\n          description: Successful message\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/wifiInfo'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /wifi/station/cfg:\n    get:\n      description: Returns the wifi station config (SSID and password)\n      summary: Find wifi station config\n      operationId: getWifiStationCfg\n      responses:\n        '200':\n          description: The current wifi station config\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/wifiStationCfg'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets wifi station config and connects to the AP\n      summary: Set wifi station config\n      operationId: setWifiStationCfg\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/wifiStationCfg'\n      responses:\n        '200':\n          description: Successful, returns current wifi station config\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/wifiStationCfg'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /wifi/ap/cfg:\n    get:\n      description: Returns the wifi AP config (password and channel)\n      summary: Find wifi ap config\n      operationId: getWifiApCfg\n      responses:\n        '200':\n          description: The current wifi AP config\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/wifiApCfg'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets wifi AP config\n      summary: Set wifi AP config\n      operationId: setWifiApCfg\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/wifiApCfg'\n      responses:\n        '200':\n          description: Successful, returns current wifi config\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/wifiApCfg'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /wifi/scan:\n    get:\n      description: Gets the AP list as seen by the device in station mode\n      summary: Get AP list\n      operationId: getAPlist\n      responses:\n        '200':\n          description: The list of the APs retrieved by the device\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/wifiScanResult'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n# specific app APIs\n  /ctrl/advSettings:\n    get:\n      description: Returns temperature control advanced settings\n      summary: Find temperature advanced control settings\n      operationId: getCtrlAdvSettings\n      responses:\n        '200':\n          description: the temperature advanced control settings\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/ctrlAdvSettings'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets temperature control advanced settings\n      summary: Sets temperature control advanced settings\n      operationId: setCtrlAdvSettings\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ctrlAdvSettings'\n      responses:\n        '200':\n          description: Successful, return current temperature advanced control settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/success'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ctrl/log:\n    get:\n      description: Returns the last events recorded by the control device\n                   The event list includes\n                   + temperature changes\n                   + relative humidity changes\n                   + control mode changes\n                   + control set-point changes\n                   + heater (ON/OFF)\n      summary: Find control events log\n      operationId: getCtrlEvents\n      responses:\n        '200':\n          description: The last control events\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/ctrlLog'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ctrl/program:\n    get:\n      description: Returns the list of the programs on the device.\n      summary: Program list\n      operationId: getProgramList\n      responses:\n        '200':\n          description: The programs list\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/ctrlProgramList'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Create a new program\n      summary: Create a program\n      operationId: createProgram\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ctrlProgram'\n      responses:\n        '200':\n          description: Program created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ctrlProgram'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ctrl/program/{program_id}:\n    get:\n      description: Returns the details of the specified program\n      summary: Find program\n      operationId: getProgram\n      parameters:\n      - name: program_id\n        in: path\n        description: The program id\n        required: true\n        schema:\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 49\n        style: simple\n      responses:\n        '200':\n          description: The program details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ctrlProgram'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '404':\n          description: Not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    put:\n      description: Update the details of the specified program\n      summary: Update a program\n      operationId: updateProgram\n      parameters:\n      - name: program_id\n        in: path\n        description: The program id\n        required: true\n        schema:\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 49\n        style: simple\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ctrlProgram'\n      responses:\n        '200':\n          description: Program successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ctrlProgram'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '404':\n          description: Not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    delete:\n      description: Delete specified program\n      summary: Delete a program\n      operationId: deleteProgram\n      parameters:\n      - name: program_id\n        in: path\n        description: The program id\n        required: true\n        schema:\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 49\n        style: simple\n      responses:\n        '200':\n          description: Program successfully deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/success'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '404':\n          description: Not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ctrl/reading_cal:\n    get:\n      description: Returns the calibration offsets for reading temperature and relative humidity\n      summary: Find the calibration offsets\n      operationId: getReadingCal\n      responses:\n        '200':\n          description: the calibration offsets\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/ctrlReadingCal'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets the calibration offsets for reading temperature and relative humidity\n      summary: Sets the calibration offsets\n      operationId: setReadingCal\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ctrlReadingCal'\n      responses:\n        '200':\n          description: Successful, return current calibration offsets\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ctrlReadingCal'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ctrl/remoteLog:\n    get:\n      description: Returns remote host (log host) settings\n      summary: Find remote host settings\n      operationId: getRemoteLog\n      responses:\n        '200':\n          description: the remote host settings\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/ctrlRemoteLog'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets remote host (log host) settings\n      summary: Sets remote host settings\n      operationId: setRemoteLog\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ctrlRemoteLog'\n      responses:\n        '200':\n          description: Successful, return current remote host settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ctrlRemoteLog'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ctrl/settings:\n    get:\n      description: Returns temperature control settings\n      summary: Find temperature control settings\n      operationId: getCtrlSettings\n      responses:\n        '200':\n          description: the temperature control settings\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/ctrlSettings'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets temperature control settings\n      summary: Sets temperature control settings\n      operationId: setCtrlSettings\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ctrlSettings'\n      responses:\n        '200':\n          description: Successful, return current temperature control settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ctrlSettings'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ctrl/pause:\n    get:\n      description: Returns heater control pause status\n      summary: Find heater control pause status\n      operationId: getCtrlPause\n      responses:\n        '200':\n          description: the heater control pause status\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/ctrlPause'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: Sets heater control pause status\n      summary: Sets heater control pause status\n      operationId: setCtrlPause\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ctrlPause'\n      responses:\n        '200':\n          description: Successful, return current heater control pause status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ctrlPause'\n        '400':\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n  /ctrl/vars:\n    get:\n      description: Returns the current ctrl variables, including\n                   + timedate\n                   + timezone\n                   + temperature\n                   + relative humidity\n                   + control mode\n                   + control program\n                   + set-point\n                   + power off timer\n                   + timedate when power off timer started\n                   + heater status\n      summary: Find current control variables\n      operationId: getCtrlVars\n      responses:\n        '200':\n          description: The current control variables\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/ctrlVars'\n        'default':\n          description: Unexpected error\n          content:\n            application/json:      \n              schema:\n                $ref: '#/components/schemas/error'\n\ncomponents:\n  schemas:\n    cron_status:\n      type: object\n      required:\n      - cron_enabled\n      properties:\n        cron_enabled:\n          type: integer\n          format: int32\n          description: enabled=1, disabled=0\n          default: 0\n          minimum: 0      \n          maximum: 1      \n      additionalProperties: false\n    ctrlAdvSettings:\n      type: object\n      required:\n      - kp\n      - kd\n      - ki\n      - kd_dt\n      - u_max\n      - heater_on_min\n      - heater_on_max\n      - heater_on_off\n      - heater_cold\n      - warm_up_period\n      - wup_heater_on\n      - wup_heater_off\n      properties:\n        kp:\n          type: integer\n          format: int32\n          description: PID proportional coefficient\n          default: 1\n          minimum: -1000      \n          maximum: 1000  \n        kd:\n          type: integer\n          format: int32\n          description: PID derivative coefficient\n          default: -5\n          minimum: -1000      \n          maximum: 1000  \n        ki:\n          type: integer\n          format: int32\n          description: PID integral coefficient\n          default: 5\n          minimum: -1000      \n          maximum: 1000  \n        kd_dt:\n          type: integer\n          format: int32\n          description: Delta T for calculating the PID derivative coefficient\n          default: 1\n          minimum: 1      \n          maximum: 60  \n        u_max:\n          type: integer\n          format: int32\n          description: max value for u(t) (for normalizing u) where u(t) = Kp * e(t) + Kd * (d e(t)/dt) + Ki * Integral(0,t)(e(x)dx)\n          default: 46\n          minimum: 1      \n          maximum: 1000      \n        heater_on_min:\n          type: integer\n          format: int32\n          description: the minimum time the heater can be on (minutes)\n          default: 2\n          minimum: 0      \n          maximum: 1000      \n        heater_on_max:\n          type: integer\n          format: int32\n          description: the maximum time the heater can be on (minutes)\n          default: 13\n          minimum: 0      \n          maximum: 1000\n        heater_on_off:\n          type: integer\n          format: int32\n          description: the heater on/off period length (minutes)\n          default: 15\n          minimum: 0      \n          maximum: 1000\n        heater_cold:\n          type: integer\n          format: int32\n          description: when the heater was off for 'heater_cold' period, then a warm-up period is started when it is switched on\n          default: 120\n          minimum: 0      \n          maximum: 1000    \n        warm_up_period:\n          type: integer\n          format: int32\n          description: the heater warm up period\n          default: 21\n          minimum: 0      \n          maximum: 1000      \n        wup_heater_on:\n          type: integer\n          format: int32\n          description: the time the heater will be on during the warm up period (during the warm up period the heater will be repeatedly switched on for 'wup_heater_on' and switched off for 'wup_heater_off')\n          default: 3\n          minimum: 0      \n          maximum: 1000   \n        wup_heater_off:\n          type: integer\n          format: int32\n          description: the time the heater will be off during the warm up period (during the warm up period the heater will be repeatedly switched on for 'wup_heater_on' and switched off for 'wup_heater_off')\n          default: 4\n          minimum: 0      \n          maximum: 1000\n      additionalProperties: false\n    ctrlLog:\n      type: object\n      required:\n      - ctrl_events\n      properties:\n        ctrl_events:\n          type: array\n          maxItems: 65535\n          items:\n            type: object\n            required:\n            - ts\n            - tp\n            - vl\n            properties:\n              ts:\n                type: integer\n                format: int32\n                description: timestamp\n                default: 0\n                minimum: 0\n                maximum: 4294967295\n              tp:\n                type: integer\n                format: int32\n                description: 1 - temp_change\n                             2 - heater_change\n                             2 - mode_change\n                             4 - setpoint_change\n                             5 - humi_change\n                default: 1\n                minimum: 1  \n                maximum: 5\n              vl:\n                type: integer\n                format: int32\n                description: an additional numerical value, depending on the event code\n                default: 0\n                minimum: 0    \n                maximum: 4294967295\n            additionalProperties: false\n      additionalProperties: false\n    ctrlPause:\n      type: object\n      required:\n      - ctrl_paused\n      properties:\n        ctrl_paused:\n          type: integer\n          format: int32\n          description: 0 -\u003e heater control active; 1 -\u003e heater control paused;  \n          default: 0\n          minimum: 0      \n          maximum: 1  \n      additionalProperties: false\n    ctrlProgram:\n      type: object\n      required:\n      - id\n      - name\n      - min_temp\n      - periods\n      properties:\n        id:\n          type: integer\n          format: int32\n          description: program id\n          default: 0\n          minimum: 0\n          maximum: 19\n        name:\n          type: string\n          description: program description\n          pattern: '[ -~]{0,31}'\n          minLength: 0\n          maxLength: 31\n        min_temp:\n          type: integer\n          format: int32\n          description: the default temperature set-point * 10\n          default: 0\n          minimum: -1000\n          maximum: 1000\n        periods:\n          type: array\n          maxItems: 50\n          items:\n            type: object\n            required:\n            - wd\n            - b\n            - e\n            - sp\n            properties:\n              wd:\n                type: integer\n                format: int32\n                description: the day of the week (1-\u003eMon, 7-\u003eSun, 8-\u003eEveryday)\n                default: 1\n                minimum: 1\n                maximum: 8\n              b:\n                type: integer\n                format: int32\n                description: period starting minute on a day range [0..1339]\n                default: 0\n                minimum: 0\n                maximum: 1339\n              e:\n                type: integer\n                format: int32\n                description: period ending minute on a day range [0..1339]\n                default: 1\n                minimum: 1\n                maximum: 1339\n              sp:\n                type: integer\n                format: int32\n                description: the temperature set-point * 10\n                default: 0\n                minimum: -1000\n                maximum: 1000\n            additionalProperties: false\n      additionalProperties: false\n    ctrlProgramList:\n      type: object\n      required:\n      - prg_headings\n      properties:\n        prg_headings:\n          type: array\n          maxItems: 20\n          items:\n            type: object\n            required:\n            - id\n            - desc\n            properties:\n              id:\n                type: integer\n                format: int32\n                description: program id\n                default: 0\n                minimum: 0\n                maximum: 19\n              desc:\n                type: string\n                description: program description\n                pattern: '[ -~]{0,31}'\n                minLength: 0\n                maxLength: 31\n            additionalProperties: false\n      additionalProperties: false\n    ctrlReadingCal:\n      type: object\n      required:\n      - temp_cal_offset\n      - humi_cal_offset\n      properties:\n        temp_cal_offset:\n          type: integer\n          format: int32\n          description: says if the log to the remote host in enabled (1) or not (0)\n          default: 0\n          minimum: -1000   \n          maximum: 1000  \n        humi_cal_offset:\n          type: integer\n          format: int32\n          default: 0\n          minimum: -1000\n          maximum: 1000\n      additionalProperties: false\n    ctrlRemoteLog:\n      type: object\n      required:\n      - enabled\n      - host\n      - port\n      - path\n      properties:\n        enabled:\n          type: integer\n          format: int32\n          description: says if the log to the remote host in enabled (1) or not (0)\n          default: 0\n          minimum: 0      \n          maximum: 1  \n        host:\n          type: string\n          pattern: '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}'\n          minLength: 7\n          maxLength: 15\n        port:\n          type: integer\n          format: int32\n          default: 80\n          minimum: 1\n          maximum: 65535\n        path:\n          type: string\n          pattern: '/[ -~]{0,4095}'\n          minLength: 1\n          maxLength: 4096\n      additionalProperties: false\n    ctrlSettings:\n      type: object\n      required:\n      - ctrl_mode\n      - manual_pulse_on\n      - manual_pulse_off\n      - auto_setpoint\n      - program_id\n      - program_name\n      - power_off_timer\n      properties:\n        ctrl_mode:\n          type: integer\n          format: int32\n          description: the control working modes\n                       + OFF 0\n                       + MANUAL 1\n                       + AUTO 2\n                       + PROGRAM 3\n          default: 0\n          minimum: 0      \n          maximum: 3\n        manual_pulse_on:\n          type: integer\n          format: int32\n          description: in manual working mode the minutes the heater will be on\n          default: 0\n          minimum: 0      \n          maximum: 32767\n        manual_pulse_off:\n          type: integer\n          format: int32\n          description: in manual working mode the minutes the heater will be off\n          default: 0\n          minimum: 0     \n          maximum: 32767  \n        auto_setpoint:\n          type: integer\n          format: int32\n          description: in auto working mode the temperature set-point\n          default: 0\n          minimum: -1000   \n          maximum: 1000      \n        program_id:\n          type: integer\n          format: int32\n          description: in program working mode the id of the running program\n          default: 0\n          minimum: 0      \n          maximum: 9      \n        program_name:\n          type: string\n          description: program description\n          pattern: '[ -~]{0,31}'\n          minLength: 0\n          maxLength: 31\n        power_off_timer:\n          type: integer\n          format: int32\n          description: the value (minutes) of the power off timer\n          default: 0\n          minimum: 0      \n          maximum: 32767\n      additionalProperties: false\n    ctrlVars:\n      type: object\n      required:\n      - timestamp\n      - timezone\n      - current_temp\n      - current_humi\n      - heater_status\n      - auto_setpoint\n      - ctrl_mode\n      - program_name\n      - pwr_off_timer_started_on\n      - pwr_off_timer\n      - ctrl_paused\n      properties:\n        timestamp:\n          type: integer\n          format: int32\n          description: timestamp\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        timezone:\n          type: integer\n          format: int32\n          description: timezone\n          default: 0\n          minimum: -14\n          maximum: 14\n        current_temp:\n          type: integer\n          format: int32\n          description: current temperature reading * 10.0\n          default: 0\n          minimum: -1000   \n          maximum: 1000      \n        current_humi:\n          type: integer\n          format: int32\n          description: current relative humidity reading * 10.0\n          default: 0\n          minimum: 0    \n          maximum: 1000      \n        heater_status:\n          type: integer\n          format: int32\n          description: current heater status (on-\u003e1/off-\u003e0)\n          default: 0\n          minimum: 0    \n          maximum: 1\n        auto_setpoint:\n          type: integer\n          format: int32\n          description: the temperature control set-point\n          default: 0\n          minimum: -1000   \n          maximum: 1000      \n        ctrl_mode:\n          type: integer\n          format: int32\n          description: the control working mode\n          default: 0\n          minimum: 0      \n          maximum: 3\n        program_name:\n          type: integer\n          format: int32\n          description: the name of the running program\n          default: 0\n          minimum: 0      \n          maximum: 9      \n        pwr_off_timer_started_on:\n          type: integer\n          format: int32\n          description: timestamp\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        pwr_off_timer:\n          type: integer\n          format: int32\n          description: the value (minutes) of the power off timer\n          default: 0\n          minimum: 0      \n          maximum: 32767\n        ctrl_paused:\n          type: integer\n          format: int32\n          description: 0 -\u003e heater ctrl active; 1 -\u003e heater ctrl paused\n          default: 0\n          minimum: 0      \n          maximum: 1\n      additionalProperties: false\n    deviceInfo:\n      type: object\n      required:\n      - device_name\n      - chip_id\n      - app_name\n      - app_version\n      - espbot_version\n      - api_version\n      - drivers_version\n      - sdk_version\n      - boot_version\n      properties:\n        device_name:\n          type: string\n          pattern: '[ -~]{1,31}'\n          minLength: 1\n          maxLength: 31\n        chip_id:\n          type: string\n          pattern: '[0-9]{1,10}'\n          minLength: 1\n          maxLength: 10\n        app_name:\n          type: string\n          pattern: '[ -~]{1,63}'\n          minLength: 1\n          maxLength: 64\n        app_version:\n          type: string\n          pattern: '[ -~]{1,63}'\n          minLength: 1\n          maxLength: 64\n        espbot_version:\n          type: string\n          pattern: '[ -~]{1,63}'\n          minLength: 1\n          maxLength: 64\n        api_version:\n          type: string\n          pattern: '[ -~]{1,10}'\n          minLength: 1\n          maxLength: 10\n        drivers_version:\n          type: string\n          pattern: '[ -~]{1,63}'\n          minLength: 1\n          maxLength: 64\n        sdk_version:\n          type: string\n          pattern: '[ -~]{1,63}'\n          minLength: 1\n          maxLength: 64\n        boot_version:\n          type: string\n          pattern: '[ -~]{1,63}'\n          minLength: 1\n          maxLength: 64\n      additionalProperties: false\n    deviceName:\n      type: object\n      required:\n      - device_name\n      properties:\n        device_name:\n          type: string\n          description: the device name\n          pattern: '[ -~]{1,31}'\n          minLength: 1\n          maxLength: 31\n      additionalProperties: false\n    diagnosticEvents:\n      type: object\n      required:\n      - diag_events\n      properties:\n        diag_events:\n          type: array\n          maxItems: 65535\n          items:\n            type: object\n            required:\n            - ts\n            - ack\n            - type\n            - code\n            - val\n            properties:\n              ts:\n                type: integer\n                format: int32\n                description: timestamp\n                default: 0\n                minimum: 0\n                maximum: 4294967295\n              ack:\n                type: integer\n                format: int32\n                description: 0 -\u003e the event wasn't acknowledge yet, 1 -\u003e the event was acknowledged\n                default: 0\n                minimum: 0    \n                maximum: 1\n              type:\n                type: string\n                description: the event type (hex format) (FATAL, ERROR, WARNING, INFO, DEBUG, TRACE, ALL) \n                pattern: '(0x|0X)?[0-9a-zA-Z]{1,4}'\n                minLength: 1\n                maxLength: 4\n              code:\n                type: string\n                description: the event numerical code (hex format)\n                pattern: '(0x|0X)?[0-9a-zA-Z]{1,6}'\n                minLength: 1\n                maxLength: 6\n              val:\n                type: integer\n                format: int32\n                description: an additional numerical value, depending on the event code\n                default: 0\n                minimum: 0    \n                maximum: 4294967295\n            additionalProperties: false\n      additionalProperties: false\n    diagnosticCfg:\n      type: object\n      required:\n      - diag_led_mask\n      - serial_log_mask\n      - uart_0_bitrate\n      - sdk_print_enabled\n      properties:\n        diag_led_mask:\n          type: integer\n          format: int32\n          description: bitmask 0??? ????\n                       .        ||| ||||_ 1 -\u003e show FATAL events on led\n                       .        ||| |||__ 1 -\u003e show ERROR events on led\n                       .        ||| ||___ 1 -\u003e show WARNING events on led\n                       .        ||| |____ 1 -\u003e show INFO events on led\n                       .        |||______ 1 -\u003e show DEBUG events on led\n                       .        ||_______ 1 -\u003e show TRACE events on led\n                       .        |________ 1 -\u003e show ALL events on led\n          default: 3\n          minimum: 0\n          maximum: 127\n        serial_log_mask:\n          type: integer\n          format: int32\n          description: bitmask 0??? ????\n                       .        ||| ||||_ 1 -\u003e show FATAL events on serial log\n                       .        ||| |||__ 1 -\u003e show ERROR events on serial log\n                       .        ||| ||___ 1 -\u003e show WARNING events on serial log\n                       .        ||| |____ 1 -\u003e show INFO events on serial log\n                       .        |||______ 1 -\u003e show DEBUG events on serial log\n                       .        ||_______ 1 -\u003e show TRACE events on serial log\n                       .        |________ 1 -\u003e show ALL events on serial log\n          default: 0\n          minimum: 0\n          maximum: 127\n        uart_0_bitrate:\n          type: integer\n          format: int32\n          description: The UART 0 bitrate\n          default: 74880\n          minimum: 300\n          maximum: 3686400\n        sdk_print_enabled:\n          type: integer\n          format: int32\n          description: If printing to UART 0 is enabled (1) or not (0)\n          default: 1\n          minimum: 0\n          maximum: 1\n      additionalProperties: false\n    error:\n      type: object\n      required:\n      - error\n      properties:\n        error:\n          type: object\n          required:\n          - code\n          - message\n          - reason\n          properties:\n            code:\n              type: integer\n              format: int32\n              default: 500\n              minimum: 400      \n              maximum: 511    \n              description: http error code\n            message:\n              type: string\n              description: the standard http error message\n              pattern: '[ -~]{1,128}'\n              minLength: 0\n              maxLength: 128\n            reason:\n              type: string\n              description: a short message describing what went wrong\n              pattern: '.{0,128}'\n              minLength: 0\n              maxLength: 128\n          additionalProperties: false\n      additionalProperties: false\n    fsInfo:\n      type: object\n      required:\n      - file_system_size\n      - file_system_used_size\n      properties:\n        file_system_size:\n          type: integer\n          format: int32\n          description: the file system size (bytes)\n          default: 1897811\n          minimum: 0    \n          maximum: 4194304\n        file_system_used_size:\n          type: integer\n          format: int32\n          description: the amount (bytes) of file system that is being used\n          default: 0\n          minimum: 0    \n          maximum: 4194304\n      additionalProperties: false\n    fileList:\n      type: object\n      required:\n      - files\n      properties:\n        files:\n          type: array\n          maxItems: 65535\n          items:\n            type: object\n            required:\n            - name\n            - size\n            properties:\n              name:\n                type: string\n                pattern: '[ -~]{1,31}'\n                minLength: 1\n                maxLength: 31\n              size:\n                type: integer\n                format: int32\n                default: 0\n                minimum: 0    \n                maximum: 4194304\n            additionalProperties: false\n      additionalProperties: false\n    gpioCfg:\n      type: object\n      required:\n      - gpio_type\n      properties:\n        gpio_id:\n          type: integer\n          format: int32\n          description: WEMOX D1 D1-D8\n          default: 1\n          minimum: 1      \n          maximum: 8      \n        gpio_type:\n          type: string\n          pattern: 'unprovisioned|input|output'\n          minLength: 5\n          maxLength: 13\n      additionalProperties: false\n    gpioInfo:\n      type: object\n      required:\n      - gpio_level\n      properties:\n        gpio_id:\n          type: integer\n          format: int32\n          description: WEMOX D1 D1-D8\n          default: 1\n          minimum: 1      \n          maximum: 8      \n        gpio_level:\n          type: string\n          pattern: 'unprovisioned|high|low'\n          minLength: 3\n          maxLength: 13\n      additionalProperties: false\n    lastReset:\n      type: object\n      required:\n      - date\n      - reason\n      - exccause\n      - epc1\n      - epc2\n      - epc3\n      - evcvaddr\n      - depc\n      - sp\n      - spDump\n      properties:\n        date:\n          type: string\n          description: the timestamp when last reboot occurred\n          pattern: \"[A-Za-z]{3} [A-Za-z]{3} [0-9]{1,2} [0-9]{2}:[0-9]{2}:[0-9]{2} [0-9]{4}\"\n          minLength: 23\n          maxLength: 24\n        reason:\n          type: string\n          description: the reason for last reboot\n          pattern: \"[0-6]\"\n          minLength: 1\n          maxLength: 1\n        exccause:\n          type: string\n          description: exception type\n          pattern: '[0-9a-fA-F]{1,2}'\n          minLength: 1\n          maxLength: 2\n        epc1:\n          type: string\n          description: program counter\n          pattern: '[0-9a-fA-F]{1,8}'\n          minLength: 1\n          maxLength: 8\n        epc2:\n          type: string\n          pattern: '[0-9a-fA-F]{1,8}'\n          minLength: 1\n          maxLength: 8\n        epc3:\n          type: string\n          pattern: '[0-9a-fA-F]{1,8}'\n          minLength: 1\n          maxLength: 8\n        evcvaddr:\n          type: string\n          description: exception address\n          pattern: '[0-9a-fA-F]{1,8}'\n          minLength: 1\n          maxLength: 8\n        depc:\n          type: string\n          pattern: '[0-9a-fA-F]{1,8}'\n          minLength: 1\n          maxLength: 8\n        sp:\n          type: string\n          description: stack pointer\n          pattern: '[0-9a-fA-F]{1,8}'\n          minLength: 1\n          maxLength: 8\n        spDump:\n          type: array\n          description: stack dump, only addresses that possibly are\n                       return addresses are reported\n          minItems: 19\n          maxItems: 19\n          items:\n            type: string\n            description: address\n            pattern: '[0-9a-fA-F]{1,8}'\n            minLength: 1\n            maxLength: 8\n      additionalProperties: false\n    mdnsStatus:\n      type: object\n      required:\n      - mdns_enabled\n      properties:\n        mdns_enabled:\n          type: integer\n          format: int32\n          description: enabled=1, disabled=0\n          default: 0\n          minimum: 0      \n          maximum: 1      \n      additionalProperties: false\n    memInterval:\n      type: object\n      required:\n      - address\n      - length\n      properties:\n        address:\n          type: string\n          description: the memory interval starting address\n          pattern: '(0x|0X)?[0-9a-fA-F]{8}'\n          minLength: 8\n          maxLength: 10\n        length:\n          type: integer\n          format: int32\n          description: the memory interval length\n          default: 4\n          minimum: 4    \n          maximum: 1024\n      additionalProperties: false\n    memIntervalContent:\n      type: object\n      required:\n      - address\n      - length\n      - content\n      properties:\n        address:\n          type: string\n          description: the memory interval starting address\n          pattern: '(0x|0X)?[0-9a-fA-F]{8}'\n          minLength: 8\n          maxLength: 10\n        length:\n          type: integer\n          format: int32\n          description: the memory interval length\n          default: 4\n          minimum: 4    \n          maximum: 1024\n        content:\n          type: string\n          description: the memory interval content (example 'string')\n          pattern: '[\\x00-\\x7F]{4,1024}'\n          minLength: 0\n          maxLength: 1024\n      additionalProperties: false\n    memIntervalHexContent:\n      type: object\n      required:\n      - address\n      - length\n      - content\n      properties:\n        address:\n          type: string\n          description: the memory interval starting address\n          pattern: '(0x|0X)?[0-9a-fA-F]{8}'\n          minLength: 8\n          maxLength: 10\n        length:\n          type: integer\n          format: int32\n          description: the memory interval length\n          default: 4\n          minimum: 4    \n          maximum: 1024\n        content:\n          type: string\n          description: the memory interval content (example ' 0 A0 33 3F')\n          pattern: '( [0-9a-fA-F][0-9a-fA-F])+'\n          minLength: 0\n          maxLength: 1024\n      additionalProperties: false\n    memInfo:\n      type: object\n      required:\n      - stack_max_addr\n      - stack_min_addr\n      - heap_start_addr\n      - heap_free_size\n      - heap_max_size\n      - heap_min_size\n      - heap_objs\n      - heap_max_objs\n      properties:\n        stack_max_addr:\n          type: string\n          description: the highest (estimated) memory address reached by the stack\n          pattern: '(0x|0X)?[0-9a-fA-F]{8,10}'\n          minLength: 8\n          maxLength: 10\n        stack_min_addr:\n          type: string\n          description: the lowest (estimated) memory address reached by the stack\n          pattern: '(0x|0X)?[0-9a-fA-F]{8,10}'\n          minLength: 8\n          maxLength: 10\n        heap_start_addr:\n          type: string\n          description: the starting heap memory address (SDK excluded)\n          pattern: '(0x|0X)?[0-9a-fA-F]{8,10}'\n          minLength: 8\n          maxLength: 10\n        heap_free_size:\n          type: integer\n          format: int32\n          description: the size of currently free heap memory\n          default: 42000\n          minimum: 0\n          maximum: 65536\n        heap_max_size:\n          type: integer\n          format: int32\n          description: the maximum size of free heap memory\n          default: 42000\n          minimum: 0\n          maximum: 65536\n        heap_min_size:\n          type: integer\n          format: int32\n          description: the minimum size of free heap memory\n          default: 42000\n          minimum: 0\n          maximum: 65536\n        heap_objs:\n          type: integer\n          format: int32\n          description: the amount of objects currently allocated to the heap memory\n          default: 26\n          minimum: 0\n          maximum: 65536\n        heap_max_objs:\n          type: integer\n          format: int32\n          description: the maximum number of objects allocated to the heap memory\n          default: 30\n          minimum: 0\n          maximum: 65536\n      additionalProperties: false\n    otaCfg:\n      type: object\n      required:\n      - host\n      - port\n      - path\n      - check_version\n      - reboot_on_completion\n      properties:\n        host:\n          type: string\n          pattern: '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}'\n          minLength: 7\n          maxLength: 15\n        port:\n          type: integer\n          format: int32\n          default: 80\n          minimum: 1\n          maximum: 65535\n        path:\n          type: string\n          pattern: '/[ -~]{0,4095}'\n          minLength: 1\n          maxLength: 4096\n        check_version:\n          type: integer\n          format: int32\n          description: 0 -\u003e don't check the binary version, 1- check the binary version\n          default: 0\n          minimum: 0\n          maximum: 1\n        reboot_on_completion:\n          type: integer\n          format: int32\n          description: 0 -\u003e don't reboot on completion, 1 -\u003e reboot on completion\n          default: 1\n          minimum: 0\n          maximum: 1\n      additionalProperties: false\n    success:\n      type: object\n      required:\n      - msg\n      properties:\n        msg:\n          type: string\n          description: a short message describing what was accomplished\n          pattern: '.{0,128}'\n          minLength: 0\n          maxLength: 128\n      additionalProperties: false\n    timedate:\n      type: object\n      required:\n      - timestamp\n      properties:\n        timestamp:\n          type: integer\n          format: int32\n          description: timestamp\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n      additionalProperties: false\n    timedateFull:\n      type: object\n      required:\n      - timestamp\n      - date\n      - sntp_enabled\n      - timezone\n      properties:\n        timestamp:\n          type: integer\n          format: int32\n          description: timestamp\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        date:\n          type: string\n          description: the timestamp when last reboot occurred\n          pattern: '[A-Za-z]{3} [A-Za-z]{3} [0-9]{1,2} [0-9]{2}:[0-9]{2}:[0-9]{2} [0-9]{4}'\n          minLength: 23\n          maxLength: 24\n        sntp_enabled:\n          type: integer\n          format: int32\n          description: 0 -\u003e disabled, 1 -\u003e enabled\n          default: 0\n          minimum: 0\n          maximum: 1\n        timezone:\n          type: integer\n          format: int32\n          description: timezone\n          default: 0\n          minimum: -14\n          maximum: 14\n      additionalProperties: false\n    timedateCfg:\n      type: object\n      required:\n      - sntp_enabled\n      - timezone\n      properties:\n        sntp_enabled:\n          type: integer\n          format: int32\n          description: 0 -\u003e disabled, 1 -\u003e enabled\n          default: 0\n          minimum: 0\n          maximum: 1\n        timezone:\n          type: integer\n          format: int32\n          description: timezone\n          default: 0\n          minimum: -14\n          maximum: 14\n      additionalProperties: false\n    wifiApCfg:\n      type: object\n      required:\n      - ap_channel\n      - ap_pwd\n      properties:\n        ap_channel:\n          type: integer\n          format: int32\n          description: AP channel\n          default: 1\n          minimum: 1\n          maximum: 11\n        ap_pwd:\n          type: string\n          pattern: '[ -~]{1,63}'\n          minLength: 1\n          maxLength: 63\n      additionalProperties: false\n    wifiStationCfg:\n      type: object\n      required:\n      - station_ssid\n      - station_pwd\n      properties:\n        station_ssid:\n          type: string\n          pattern: '[ -~]{1,31}'\n          minLength: 1\n          maxLength: 31\n        station_pwd:\n          type: string\n          pattern: '[ -~]{1,63}'\n          minLength: 1\n          maxLength: 63\n      additionalProperties: false\n    wifiInfo:\n      type: object\n      required:\n      - op_mode\n      - ip_address\n      properties:\n        op_mode:\n          type: string\n          pattern: 'STATION|AP'\n          description: STATION or AP\n          minLength: 2\n          maxLength: 7\n        SSID:\n          type: string\n          pattern: '[ -~]{1,31}'\n          minLength: 1\n          maxLength: 31\n        ip_address:\n          type: string\n          pattern: '[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}'\n          minLength: 7\n          maxLength: 15\n      additionalProperties: false\n    wifiScanResult:\n      type: object\n      required:\n      - AP_count\n      - AP_SSIDs\n      properties:\n        AP_count:\n          type: integer\n          format: int32\n          default: 0\n          minimum: 0    \n          maximum: 65535\n        AP_SSIDs:\n          type: array\n          maxItems: 65535\n          items:\n            type: string\n            pattern: '[ -~]{1,31}'\n            minLength: 1\n            maxLength: 31\n      additionalProperties: false\n"
		}
	},
	"Error": "buildIR: make ir: path \"/ctrl/remoteLog\": get: responses: 200: contents: application/json: generate schema: field path: string validator: pattern: error parsing regexp: invalid repeat count: `{0,4095}`"
}