{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cortezaproject/corteza"
		},
		"file": {
			"name": "system.yaml",
			"size": 0,
			"path": "server/docs/system.yaml",
			"byteSize": 99170,
			"content": "openapi: 3.0.0\ninfo:\n  title: Corteza system API\n  description: Corteza system REST API definition\n  version: '2022.9'\n  contact:\n    email: info@cortezaproject.org\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\npaths:\n  /system/auth/impersonate:\n    post:\n      tags:\n        - Authentication\n      summary: Impersonate a user\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_0\n                userID:\n                  type: string\n                  description: ID of the impersonated user\n              required:\n                - userID\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_0\n  /system/auth/clients/:\n    get:\n      tags:\n        - Authentication clients\n      summary: List clients\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: handle\n          description: Client handle\n          required: false\n          schema: \u0026ref_1\n            type: string\n        - in: query\n          name: deleted\n          description: Exclude (0, default), include (1) or return only (2) deleted clients\n          required: false\n          schema: \u0026ref_2\n            type: string\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: \u0026ref_8\n            type: boolean\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Authentication clients\n      summary: Create client\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_3\n                handle:\n                  type: string\n                  description: Client handle\n                meta:\n                  type: string\n                  description: Additional info\n                validGrant:\n                  type: string\n                  description: Valid grants (authorization_code\n                redirectURI:\n                  type: string\n                  description: Space delimited list of redirect URIs\n                scope:\n                  type: string\n                  description: Space delimited list of scopes\n                trusted:\n                  type: boolean\n                  description: Is client trusted (skip authorization)\n                enabled:\n                  type: boolean\n                  description: Is client enabled\n                validFrom:\n                  type: string\n                  format: date-time\n                  description: Date and time from when client becomes valid\n                expiresAt:\n                  type: string\n                  format: date-time\n                  description: Date and time from client is no logner valid\n                security:\n                  type: string\n                  description: Security settings\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_3\n  /system/auth/clients/{clientID}:\n    put:\n      tags:\n        - Authentication clients\n      summary: Update user details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: \u0026ref_5\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_4\n                handle:\n                  type: string\n                  description: Client handle\n                meta:\n                  type: string\n                  description: Additional info\n                validGrant:\n                  type: string\n                  description: Valid grants (authorization_code\n                redirectURI:\n                  type: string\n                  description: Space delimited list of redirect URIs\n                scope:\n                  type: string\n                  description: Space delimited list of scopes\n                trusted:\n                  type: boolean\n                  description: Is client trusted (skip authorization)\n                enabled:\n                  type: boolean\n                  description: Is client enabled\n                validFrom:\n                  type: string\n                  format: date-time\n                  description: Date and time from when client becomes valid\n                expiresAt:\n                  type: string\n                  format: date-time\n                  description: Date and time from client is no logner valid\n                security:\n                  type: string\n                  description: Security settings\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_4\n    get:\n      tags:\n        - Authentication clients\n      summary: Read client details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Authentication clients\n      summary: Remove client\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: *ref_5\n  /system/auth/clients/{clientID}/undelete:\n    post:\n      tags:\n        - Authentication clients\n      summary: Undelete client\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: *ref_5\n  /system/auth/clients/{clientID}/secret:\n    post:\n      tags:\n        - Authentication clients\n      summary: Regenerate client's secret\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: *ref_5\n    get:\n      tags:\n        - Authentication clients\n      summary: Exposes client's secret\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: clientID\n          description: Client ID\n          required: true\n          schema: *ref_5\n  /system/settings/:\n    get:\n      tags:\n        - Settings\n      summary: List settings\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: prefix\n          description: Key prefix\n          required: false\n          schema: *ref_1\n    patch:\n      tags:\n        - Settings\n      summary: Update settings\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_6\n                values:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      value:\n                        type: string\n                  description: \u003e-\n                    Array of new settings: `[{ name: ..., value: ... }]`. Omit\n                    value to remove setting\n              required:\n                - values\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_6\n  /system/settings/{key}:\n    get:\n      tags:\n        - Settings\n      summary: Get a value for a key\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: key\n          description: Setting key\n          required: true\n          schema: *ref_1\n        - in: query\n          name: ownerID\n          description: Owner ID\n          required: false\n          schema: *ref_5\n    post:\n      tags:\n        - Settings\n      summary: Set value for specific setting\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: key\n          description: Key\n          required: true\n          schema: *ref_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_7\n                upload:\n                  type: string\n                  format: binary\n                  description: File to upload\n                ownerID:\n                  type: string\n                  description: Owner ID\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_7\n  /system/settings/current:\n    get:\n      tags:\n        - Settings\n      summary: Current compose settings\n      responses:\n        '200':\n          description: OK\n  /system/roles/:\n    get:\n      tags:\n        - Roles\n      summary: List roles\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: query\n          description: Search query\n          required: false\n          schema: *ref_1\n        - in: query\n          name: memberID\n          description: Search roles for member\n          required: false\n          schema: *ref_5\n        - in: query\n          name: deleted\n          description: Exclude (0, default), include (1) or return only (2) deleted roles\n          required: false\n          schema: *ref_2\n        - in: query\n          name: archived\n          description: Exclude (0, default), include (1) or return only (2) archived roles\n          required: false\n          schema: *ref_2\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: *ref_8\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Roles\n      summary: Update role details\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_9\n                name:\n                  type: string\n                  description: Name of role\n                handle:\n                  type: string\n                  description: Handle for role\n                members:\n                  type: array\n                  items: *ref_1\n                  description: role member IDs\n                meta:\n                  type: string\n                  description: Meta\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - name\n                - handle\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_9\n  /system/roles/{roleID}:\n    put:\n      tags:\n        - Roles\n      summary: Update role details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_10\n                name:\n                  type: string\n                  description: Name of role\n                handle:\n                  type: string\n                  description: Handle for role\n                members:\n                  type: array\n                  items: *ref_1\n                  description: role member IDs\n                meta:\n                  type: string\n                  description: Meta\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_10\n    get:\n      tags:\n        - Roles\n      summary: Read role details and memberships\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Roles\n      summary: Remove role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n  /system/roles/{roleID}/archive:\n    post:\n      tags:\n        - Roles\n      summary: Archive role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n  /system/roles/{roleID}/unarchive:\n    post:\n      tags:\n        - Roles\n      summary: Unarchive role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n  /system/roles/{roleID}/undelete:\n    post:\n      tags:\n        - Roles\n      summary: Undelete role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n  /system/roles/{roleID}/move:\n    post:\n      tags:\n        - Roles\n      summary: Move role to different organisation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_11\n                organisationID:\n                  type: string\n                  description: Role ID\n              required:\n                - organisationID\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_11\n  /system/roles/{roleID}/merge:\n    post:\n      tags:\n        - Roles\n      summary: Merge one role into another\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Source Role ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_12\n                destination:\n                  type: string\n                  description: Destination Role ID\n              required:\n                - destination\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_12\n  /system/roles/{roleID}/members:\n    get:\n      tags:\n        - Roles\n      summary: Returns all role members\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Source Role ID\n          required: true\n          schema: *ref_5\n  /system/roles/{roleID}/member/{userID}:\n    post:\n      tags:\n        - Roles\n      summary: Add member to a role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Source Role ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Roles\n      summary: Remove member from a role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Source Role ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  /system/roles/{roleID}/trigger:\n    post:\n      tags:\n        - Roles\n      summary: Fire system:role trigger\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_13\n                script:\n                  type: string\n                  description: Script to execute\n                args:\n                  type: string\n                  description: Arguments to pass to the script\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_13\n  /system/roles/{roleID}/rules/clone:\n    post:\n      tags:\n        - Roles\n      summary: Clone permission settings to a role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n        - in: query\n          name: cloneToRoleID\n          description: Clone set of rules to roleID\n          required: true\n          schema:\n            type: array\n            items: *ref_1\n  /system/users/:\n    get:\n      tags:\n        - Users\n      summary: Search users (Directory)\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: userID\n          description: Filter by user ID\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: roleID\n          description: Filter by role membership\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: query\n          description: Search query to match against users\n          required: false\n          schema: *ref_1\n        - in: query\n          name: username\n          description: Search username to match against users\n          required: false\n          schema: *ref_1\n        - in: query\n          name: email\n          description: Search email to match against users\n          required: false\n          schema: *ref_1\n        - in: query\n          name: handle\n          description: Search handle to match against users\n          required: false\n          schema: *ref_1\n        - in: query\n          name: kind\n          description: Kind (normal, bot)\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: incDeleted\n          description: '[Deprecated] Include deleted users (requires ''access'' permission)'\n          required: false\n          schema: *ref_8\n        - in: query\n          name: incSuspended\n          description: '[Deprecated] Include suspended users'\n          required: false\n          schema: *ref_8\n        - in: query\n          name: deleted\n          description: Exclude (0, default), include (1) or return only (2) deleted users\n          required: false\n          schema: *ref_2\n        - in: query\n          name: suspended\n          description: Exclude (0, default), include (1) or return only (2) suspended users\n          required: false\n          schema: *ref_2\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: *ref_8\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Users\n      summary: Create user\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_14\n                email:\n                  type: string\n                  description: Email\n                name:\n                  type: string\n                  description: Name\n                handle:\n                  type: string\n                  description: Handle\n                kind:\n                  type: string\n                  description: Kind (normal, bot)\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - email\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_14\n  /system/users/{userID}:\n    put:\n      tags:\n        - Users\n      summary: Update user details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_15\n                email:\n                  type: string\n                  description: Email\n                name:\n                  type: string\n                  description: Name\n                handle:\n                  type: string\n                  description: Handle\n                kind:\n                  type: string\n                  description: Kind (normal, bot)\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - email\n                - name\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_15\n    patch:\n      tags:\n        - Users\n      summary: Patch user (experimental)\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n    get:\n      tags:\n        - Users\n      summary: Read user details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Users\n      summary: Remove user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  /system/users/{userID}/suspend:\n    post:\n      tags:\n        - Users\n      summary: Suspend user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  /system/users/{userID}/unsuspend:\n    post:\n      tags:\n        - Users\n      summary: Unsuspend user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  /system/users/{userID}/undelete:\n    post:\n      tags:\n        - Users\n      summary: Undelete user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  /system/users/{userID}/password:\n    post:\n      tags:\n        - Users\n      summary: Set's or changes user's password\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_16\n                password:\n                  type: string\n                  format: password\n                  description: New password or empty to unset\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_16\n  /system/users/{userID}/membership:\n    get:\n      tags:\n        - Users\n      summary: Add member to a role\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  /system/users/{userID}/membership/{roleID}:\n    post:\n      tags:\n        - Users\n      summary: Add role to a user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Users\n      summary: Remove role from a user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: userID\n          description: User ID\n          required: true\n          schema: *ref_5\n  /system/users/{userID}/trigger:\n    post:\n      tags:\n        - Users\n      summary: Fire system:user trigger\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_17\n                script:\n                  type: string\n                  description: Script to execute\n                args:\n                  type: string\n                  description: Arguments to pass to the script\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_17\n  /system/users/{userID}/sessions:\n    delete:\n      tags:\n        - Users\n      summary: Remove all auth sessions of user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: ID\n          required: true\n          schema: *ref_5\n  /system/users/{userID}/credentials:\n    get:\n      tags:\n        - Users\n      summary: List user's credentials\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: ID\n          required: true\n          schema: *ref_5\n  /system/users/{userID}/credentials/{credentialsID}:\n    delete:\n      tags:\n        - Users\n      summary: List user's credentials\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: userID\n          description: ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: credentialsID\n          description: Credentials ID\n          required: true\n          schema: *ref_5\n  /system/users/export/{filename}.zip:\n    get:\n      tags:\n        - Users\n      summary: Export users\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: filename\n          description: Output filename\n          required: true\n          schema: *ref_1\n        - in: query\n          name: inclRoleMembership\n          description: Include role membership\n          required: false\n          schema: *ref_8\n        - in: query\n          name: inclRoles\n          description: Include roles\n          required: false\n          schema: *ref_8\n  /system/users/import:\n    post:\n      tags:\n        - Users\n      summary: Import users\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_18\n                upload:\n                  type: string\n                  format: binary\n                  description: File import\n              required:\n                - upload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_18\n  /system/dal/drivers/:\n    get:\n      tags:\n        - Data access layer drivers\n      summary: Search drivers\n      responses:\n        '200':\n          description: OK\n  /system/dal/sensitivity-levels/:\n    get:\n      tags:\n        - Data access layer sensitivity levels\n      summary: Search sensitivity levels\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: sensitivityLevelID\n          description: Filter by sensitivity level ID\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: deleted\n          description: \u003e-\n            Exclude (0, default), include (1) or return only (2) deleted\n            sensitivity levels\n          required: false\n          schema: *ref_2\n    post:\n      tags:\n        - Data access layer sensitivity levels\n      summary: Create sensitivity level\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_19\n                handle:\n                  type: string\n                level:\n                  type: integer\n                meta:\n                  type: string\n              required:\n                - handle\n                - level\n                - meta\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_19\n  /system/dal/sensitivity-levels/{sensitivityLevelID}:\n    put:\n      tags:\n        - Data access layer sensitivity levels\n      summary: Update sensitivity details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: sensitivityLevelID\n          description: Connection ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_20\n                handle:\n                  type: string\n                level:\n                  type: integer\n                meta:\n                  type: string\n              required:\n                - handle\n                - level\n                - meta\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_20\n    get:\n      tags:\n        - Data access layer sensitivity levels\n      summary: Read connection details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: sensitivityLevelID\n          description: Connection ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Data access layer sensitivity levels\n      summary: Remove sensitivity level\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: sensitivityLevelID\n          description: Connection ID\n          required: true\n          schema: *ref_5\n  /system/dal/sensitivity-levels/{sensitivityLevelID}/undelete:\n    post:\n      tags:\n        - Data access layer sensitivity levels\n      summary: Undelete sensitivity level\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: sensitivityLevelID\n          description: Connection ID\n          required: true\n          schema: *ref_5\n  /system/dal/connections/:\n    get:\n      tags:\n        - Data access layer connections\n      summary: Search connections (Directory)\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: connectionID\n          description: Filter by connection ID\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: handle\n          description: Search handle to match against connections\n          required: false\n          schema: *ref_1\n        - in: query\n          name: type\n          description: Search type to match against connections\n          required: false\n          schema: *ref_1\n        - in: query\n          name: deleted\n          description: \u003e-\n            Exclude (0, default), include (1) or return only (2) deleted\n            connections\n          required: false\n          schema: *ref_2\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: *ref_8\n    post:\n      tags:\n        - Data access layer connections\n      summary: Create connection\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_21\n                handle:\n                  type: string\n                type:\n                  type: string\n                meta:\n                  type: string\n                config:\n                  type: string\n              required:\n                - handle\n                - type\n                - meta\n                - config\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_21\n  /system/dal/connections/{connectionID}:\n    put:\n      tags:\n        - Data access layer connections\n      summary: Update connection details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: connectionID\n          description: Connection ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_22\n                handle:\n                  type: string\n                type:\n                  type: string\n                meta:\n                  type: string\n                config:\n                  type: string\n              required:\n                - handle\n                - type\n                - meta\n                - config\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_22\n    get:\n      tags:\n        - Data access layer connections\n      summary: Read connection details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: connectionID\n          description: Connection ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Data access layer connections\n      summary: Remove connection\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: connectionID\n          description: Connection ID\n          required: true\n          schema: *ref_5\n  /system/dal/connections/{connectionID}/undelete:\n    post:\n      tags:\n        - Data access layer connections\n      summary: Undelete connection\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: connectionID\n          description: Connection ID\n          required: true\n          schema: *ref_5\n  /system/application/:\n    get:\n      tags:\n        - Applications\n      summary: List applications\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: name\n          description: Application name\n          required: false\n          schema: *ref_1\n        - in: query\n          name: query\n          description: Filter applications\n          required: false\n          schema: *ref_1\n        - in: query\n          name: deleted\n          description: Exclude (0, default), include (1) or return only (2) deleted roles\n          required: false\n          schema: *ref_2\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: flags\n          description: Flags\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: incFlags\n          description: Calculated (0, default), global (1) or return only (2) own flags\n          required: false\n          schema: *ref_2\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: *ref_8\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Applications\n      summary: Create application\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_23\n                name:\n                  type: string\n                  description: Application name\n                enabled:\n                  type: boolean\n                  description: Enabled\n                weight:\n                  type: integer\n                  description: Weight for sorting\n                unify:\n                  type: string\n                  format: json\n                  description: Unify properties\n                config:\n                  type: string\n                  format: json\n                  description: Arbitrary JSON holding application configuration\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - name\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_23\n  /system/application/{applicationID}:\n    put:\n      tags:\n        - Applications\n      summary: Update user details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: Application ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_24\n                name:\n                  type: string\n                  description: Email\n                enabled:\n                  type: boolean\n                  description: Enabled\n                weight:\n                  type: integer\n                  description: Weight for sorting\n                unify:\n                  type: string\n                  format: json\n                  description: Unify properties\n                config:\n                  type: string\n                  format: json\n                  description: Arbitrary JSON holding application configuration\n                labels:\n                  type: string\n                  description: Labels\n              required:\n                - name\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_24\n    get:\n      tags:\n        - Applications\n      summary: Read application details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: Application ID\n          required: true\n          schema: *ref_5\n        - in: query\n          name: incFlags\n          description: Calculated (0, default), global (1) or return only (2) own flags\n          required: false\n          schema: *ref_2\n    delete:\n      tags:\n        - Applications\n      summary: Remove application\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: Application ID\n          required: true\n          schema: *ref_5\n  /system/application/upload:\n    post:\n      tags:\n        - Applications\n      summary: Upload application assets\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_25\n                upload:\n                  type: string\n                  format: binary\n                  description: File to upload\n              required:\n                - upload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_25\n  /system/application/{applicationID}/flag/{ownedBy}/{flag}:\n    post:\n      tags:\n        - Applications\n      summary: Flag application\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: Application ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: flag\n          description: Flag\n          required: true\n          schema: *ref_1\n        - in: path\n          name: ownedBy\n          description: Owner; 0 = everyone\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Applications\n      summary: Unflag application\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: Application ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: flag\n          description: Flag\n          required: true\n          schema: *ref_1\n        - in: path\n          name: ownedBy\n          description: Owner; 0 = everyone\n          required: true\n          schema: *ref_5\n  /system/application/{applicationID}/undelete:\n    post:\n      tags:\n        - Applications\n      summary: Undelete application\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: Application ID\n          required: true\n          schema: *ref_5\n  /system/application/{applicationID}/trigger:\n    post:\n      tags:\n        - Applications\n      summary: Fire system:application trigger\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: applicationID\n          description: ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_26\n                script:\n                  type: string\n                  description: Script to execute\n                args:\n                  type: string\n                  description: Arguments to pass to the script\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_26\n  /system/application/reorder:\n    post:\n      tags:\n        - Applications\n      summary: Reorder applications\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_27\n                applicationIDs:\n                  type: array\n                  items: *ref_1\n                  description: Application order\n              required:\n                - applicationIDs\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_27\n  /system/permissions/:\n    get:\n      tags:\n        - Permissions\n      summary: Retrieve defined permissions\n      responses:\n        '200':\n          description: OK\n  /system/permissions/effective:\n    get:\n      tags:\n        - Permissions\n      summary: Effective rules for current user\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: resource\n          description: Show only rules for a specific resource\n          required: false\n          schema: *ref_1\n  /system/permissions/trace:\n    get:\n      tags:\n        - Permissions\n      summary: Evaluate rules for given user/role combo\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: resource\n          description: Show only rules for a specific resource\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: userID\n          required: false\n          schema: *ref_5\n        - in: query\n          name: roleID\n          required: false\n          schema:\n            type: array\n            items: *ref_5\n  /system/permissions/{roleID}/rules:\n    get:\n      tags:\n        - Permissions\n      summary: Retrieve role permissions\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n        - in: query\n          name: resource\n          description: Show only rules for a specific resource\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n    delete:\n      tags:\n        - Permissions\n      summary: Remove all defined role permissions\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n    patch:\n      tags:\n        - Permissions\n      summary: Update permission settings\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: roleID\n          description: Role ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_28\n                rules:\n                  type: string\n                  description: List of permission rules to set\n              required:\n                - rules\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_28\n  /system/reminder/:\n    get:\n      tags:\n        - Reminders\n      summary: List/read reminders\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: reminderID\n          description: Filter by reminder ID\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: resource\n          description: Only reminders of a specific resource\n          required: false\n          schema: *ref_1\n        - in: query\n          name: assignedTo\n          description: Only reminders for a given user\n          required: false\n          schema: *ref_5\n        - in: query\n          name: scheduledFrom\n          description: Only reminders from this time (included)\n          required: false\n          schema: \u0026ref_29\n            type: string\n            format: date-time\n        - in: query\n          name: scheduledUntil\n          description: Only reminders up to this time (included)\n          required: false\n          schema: *ref_29\n        - in: query\n          name: scheduledOnly\n          description: Only scheduled reminders\n          required: false\n          schema: *ref_8\n        - in: query\n          name: excludeDismissed\n          description: Filter out dismissed reminders\n          required: false\n          schema: *ref_8\n        - in: query\n          name: includeDeleted\n          description: Includes deleted reminders\n          required: false\n          schema: *ref_8\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Reminders\n      summary: Add new reminder\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_30\n                resource:\n                  type: string\n                  description: Resource\n                assignedTo:\n                  type: string\n                  description: Assigned To\n                payload:\n                  type: string\n                  format: json\n                  description: Payload\n                remindAt:\n                  type: string\n                  format: date-time\n                  description: Remind At\n              required:\n                - resource\n                - assignedTo\n                - payload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_30\n  /system/reminder/{reminderID}:\n    put:\n      tags:\n        - Reminders\n      summary: Update reminder\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reminderID\n          description: Reminder ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_31\n                resource:\n                  type: string\n                  description: Resource\n                assignedTo:\n                  type: string\n                  description: Assigned To\n                payload:\n                  type: string\n                  format: json\n                  description: Payload\n                remindAt:\n                  type: string\n                  format: date-time\n                  description: Remind At\n              required:\n                - resource\n                - assignedTo\n                - payload\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_31\n    get:\n      tags:\n        - Reminders\n      summary: Read reminder by ID\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reminderID\n          description: Reminder ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Reminders\n      summary: Delete reminder\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reminderID\n          description: Reminder ID\n          required: true\n          schema: *ref_5\n  /system/reminder/{reminderID}/dismiss:\n    patch:\n      tags:\n        - Reminders\n      summary: Dismiss reminder\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reminderID\n          description: reminder ID\n          required: true\n          schema: *ref_5\n  /system/reminder/{reminderID}/snooze:\n    patch:\n      tags:\n        - Reminders\n      summary: Snooze reminder\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reminderID\n          description: reminder ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_32\n                remindAt:\n                  type: string\n                  format: date-time\n                  description: New Remind At Time\n              required:\n                - remindAt\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_32\n  /system/attachment/{kind}/{attachmentID}:\n    get:\n      tags:\n        - Attachments\n      summary: Attachment details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Kind\n          required: true\n          schema: *ref_1\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_5\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_1\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_5\n    delete:\n      tags:\n        - Attachments\n      summary: Delete attachment\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Kind\n          required: true\n          schema: *ref_1\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_5\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_1\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_5\n  /system/attachment/{kind}/{attachmentID}/original/{name}:\n    get:\n      tags:\n        - Attachments\n      summary: Serves attached file\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Kind\n          required: true\n          schema: *ref_1\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: name\n          description: File name\n          required: true\n          schema: *ref_1\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_1\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_5\n        - in: query\n          name: download\n          description: Force file download\n          required: false\n          schema: *ref_8\n  /system/attachment/{kind}/{attachmentID}/preview.{ext}:\n    get:\n      tags:\n        - Attachments\n      summary: Serves preview of an attached file\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: kind\n          description: Kind\n          required: true\n          schema: *ref_1\n        - in: path\n          name: attachmentID\n          description: Attachment ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: ext\n          description: Preview extension/format\n          required: true\n          schema: *ref_1\n        - in: query\n          name: sign\n          description: Signature\n          required: false\n          schema: *ref_1\n        - in: query\n          name: userID\n          description: User ID\n          required: false\n          schema: *ref_5\n  /system/template/:\n    get:\n      tags:\n        - Template\n      summary: List templates\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: query\n          description: Query\n          required: false\n          schema: *ref_1\n        - in: query\n          name: handle\n          description: Handle\n          required: false\n          schema: *ref_1\n        - in: query\n          name: type\n          description: Type\n          required: false\n          schema: *ref_1\n        - in: query\n          name: ownerID\n          description: OwnerID\n          required: false\n          schema: *ref_5\n        - in: query\n          name: partial\n          description: Show partial templates\n          required: false\n          schema: *ref_8\n        - in: query\n          name: deleted\n          description: \u003e-\n            Exclude (0, default), include (1) or return only (2) deleted\n            templates\n          required: false\n          schema: *ref_2\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: *ref_8\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Template\n      summary: Create template\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_33\n                handle:\n                  type: string\n                  description: Handle\n                language:\n                  type: string\n                  description: Language\n                type:\n                  type: string\n                  description: Type\n                partial:\n                  type: boolean\n                  description: Partial\n                meta:\n                  type: string\n                  description: Meta\n                template:\n                  type: string\n                  description: Template\n                ownerID:\n                  type: string\n                  description: OwnerID\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_33\n  /system/template/{templateID}:\n    get:\n      tags:\n        - Template\n      summary: Read template\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: templateID\n          description: ID\n          required: true\n          schema: *ref_5\n    put:\n      tags:\n        - Template\n      summary: Update template\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: templateID\n          description: ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_34\n                handle:\n                  type: string\n                  description: Handle\n                language:\n                  type: string\n                  description: Language\n                type:\n                  type: string\n                  description: Type\n                partial:\n                  type: boolean\n                  description: Partial\n                meta:\n                  type: string\n                  description: Meta\n                template:\n                  type: string\n                  description: Template\n                ownerID:\n                  type: string\n                  description: OwnerID\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_34\n    delete:\n      tags:\n        - Template\n      summary: Delete template\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: templateID\n          description: ID\n          required: true\n          schema: *ref_5\n  /system/template/{templateID}/undelete:\n    post:\n      tags:\n        - Template\n      summary: Undelete template\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: templateID\n          description: Template ID\n          required: true\n          schema: *ref_5\n  /system/template/render/drivers:\n    get:\n      tags:\n        - Template\n      summary: Render drivers\n      responses:\n        '200':\n          description: OK\n  /system/template/{templateID}/render/{filename}.{ext}:\n    post:\n      tags:\n        - Template\n      summary: Render template\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: templateID\n          description: Render template to use\n          required: true\n          schema: *ref_5\n        - in: path\n          name: filename\n          description: Filename to use\n          required: true\n          schema: *ref_1\n        - in: path\n          name: ext\n          description: Export format\n          required: true\n          schema: *ref_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_35\n                variables:\n                  type: string\n                  format: json\n                  description: Variables defined by import file\n                options:\n                  type: string\n                  format: json\n                  description: Rendering options\n              required:\n                - variables\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_35\n  /system/reports/:\n    get:\n      tags:\n        - Reports\n      summary: List reports\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: handle\n          description: Report handle\n          required: false\n          schema: *ref_1\n        - in: query\n          name: deleted\n          description: Exclude (0, default), include (1) or return only (2) deleted reports\n          required: false\n          schema: *ref_2\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: *ref_8\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Reports\n      summary: Create report\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_36\n                handle:\n                  type: string\n                  description: Client handle\n                meta:\n                  type: string\n                  description: Additional info\n                scenarios:\n                  type: string\n                  description: Report scenarios\n                sources:\n                  type: string\n                  description: Report source definitions\n                blocks:\n                  type: string\n                  description: Report blocks definition\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_36\n  /system/reports/{reportID}:\n    put:\n      tags:\n        - Reports\n      summary: Update report\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reportID\n          description: Report ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_37\n                handle:\n                  type: string\n                  description: Client handle\n                meta:\n                  type: string\n                  description: Additional info\n                scenarios:\n                  type: string\n                  description: Report scenarios\n                sources:\n                  type: string\n                  description: Report sources definition\n                blocks:\n                  type: string\n                  description: Report blocks definition\n                labels:\n                  type: string\n                  description: Labels\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_37\n    get:\n      tags:\n        - Reports\n      summary: Read report details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reportID\n          description: Report ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Reports\n      summary: Remove report\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reportID\n          description: Report ID\n          required: true\n          schema: *ref_5\n  /system/reports/{reportID}/undelete:\n    post:\n      tags:\n        - Reports\n      summary: Undelete report\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reportID\n          description: Report ID\n          required: true\n          schema: *ref_5\n  /system/reports/describe:\n    post:\n      tags:\n        - Reports\n      summary: Describe report\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_38\n                sources:\n                  type: string\n                  description: Report steps definition\n                steps:\n                  type: string\n                  description: Report steps definition\n                describe:\n                  type: array\n                  items: *ref_1\n                  description: The source descriptions to generate\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_38\n  /system/reports/{reportID}/run:\n    post:\n      tags:\n        - Reports\n      summary: Run report\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: reportID\n          description: Report ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_39\n                frames:\n                  type: string\n                  description: Report data frame definitions\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_39\n  /system/stats/:\n    get:\n      tags:\n        - Statistics\n      summary: List system statistics\n      responses:\n        '200':\n          description: OK\n  /system/automation/:\n    get:\n      tags:\n        - System automation scripts\n      summary: List all available automation scripts for system resources\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: resourceTypePrefixes\n          description: Filter by resource prefix\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: resourceTypes\n          description: Filter by resource type\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: eventTypes\n          description: Filter by event type\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: excludeInvalid\n          description: Exclude scripts that cannot be used (errors)\n          required: false\n          schema: *ref_8\n        - in: query\n          name: excludeClientScripts\n          description: Do not include client scripts\n          required: false\n          schema: *ref_8\n        - in: query\n          name: excludeServerScripts\n          description: Do not include server scripts\n          required: false\n          schema: *ref_8\n  /system/automation/{bundle}-{type}.{ext}:\n    get:\n      tags:\n        - System automation scripts\n      summary: Serves client scripts bundle\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: bundle\n          description: Name of the bundle\n          required: true\n          schema: *ref_1\n        - in: path\n          name: type\n          description: Bundle type\n          required: true\n          schema: *ref_1\n        - in: path\n          name: ext\n          description: Bundle extension\n          required: true\n          schema: *ref_1\n  /system/automation/trigger:\n    post:\n      tags:\n        - System automation scripts\n      summary: Triggers execution of a specific script on a system service level\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_40\n                script:\n                  type: string\n                  description: Script to execute\n                args:\n                  type: string\n                  description: Arguments to pass to the script\n              required:\n                - script\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_40\n  /system/actionlog/:\n    get:\n      tags:\n        - Action log\n      summary: Action log events\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: from\n          description: From\n          required: false\n          schema: *ref_29\n        - in: query\n          name: to\n          description: To\n          required: false\n          schema: *ref_29\n        - in: query\n          name: beforeActionID\n          description: Entries before specified action ID\n          required: false\n          schema: *ref_5\n        - in: query\n          name: resource\n          description: Resource\n          required: false\n          schema: *ref_1\n        - in: query\n          name: action\n          description: Action\n          required: false\n          schema: *ref_1\n        - in: query\n          name: actorID\n          description: Filter by one or more actors\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n  /system/queues/:\n    get:\n      tags:\n        - Messaging queues\n      summary: Messaging queues\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: query\n          description: Search query\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: *ref_8\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n        - in: query\n          name: deleted\n          description: Exclude (0\n          required: false\n          schema: *ref_2\n  /system/queues:\n    post:\n      tags:\n        - Messaging queues\n      summary: Create messaging queue\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_41\n                queue:\n                  type: string\n                  description: Name of queue\n                consumer:\n                  type: string\n                  description: Queue consumer\n                meta:\n                  type: string\n                  description: Meta data for queue\n              required:\n                - queue\n                - consumer\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_41\n  /system/queues/{queueID}:\n    get:\n      tags:\n        - Messaging queues\n      summary: Messaging queue details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: queueID\n          description: Queue ID\n          required: true\n          schema: *ref_5\n    put:\n      tags:\n        - Messaging queues\n      summary: Update queue details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: queueID\n          description: Queue ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_42\n                queue:\n                  type: string\n                  description: Name of queue\n                consumer:\n                  type: string\n                  description: Queue consumer\n                meta:\n                  type: string\n                  description: Meta data for queue\n              required:\n                - queue\n                - consumer\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_42\n    delete:\n      tags:\n        - Messaging queues\n      summary: Messaging queue delete\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: queueID\n          description: Queue ID\n          required: true\n          schema: *ref_5\n  /system/queues/{queueID}/undelete:\n    post:\n      tags:\n        - Messaging queues\n      summary: Messaging queue undelete\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: queueID\n          description: Queue ID\n          required: true\n          schema: *ref_5\n  /system/apigw/route/:\n    get:\n      tags:\n        - Integration gateway routes\n      summary: List routes\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: routeID\n          description: Filter by route ID\n          required: false\n          schema:\n            type: array\n            items: *ref_5\n        - in: query\n          name: query\n          description: Filter routes\n          required: false\n          schema: *ref_1\n        - in: query\n          name: deleted\n          description: Exclude (0, default), include (1) or return only (2) deleted routes\n          required: false\n          schema: *ref_5\n        - in: query\n          name: disabled\n          description: Exclude (0, default), include (1) or return only (2) disabled routes\n          required: false\n          schema: *ref_5\n        - in: query\n          name: labels\n          description: Labels\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: incTotal\n          description: Include total counter\n          required: false\n          schema: *ref_8\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n  /system/apigw/route:\n    post:\n      tags:\n        - Integration gateway routes\n      summary: Create route\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_43\n                endpoint:\n                  type: string\n                  description: Route endpoint\n                method:\n                  type: string\n                  description: Route method\n                enabled:\n                  type: boolean\n                  description: Is route enabled\n                group:\n                  type: string\n                  description: Route group\n                meta:\n                  type: string\n                  description: Route meta\n              required:\n                - endpoint\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_43\n  /system/apigw/route/{routeID}:\n    put:\n      tags:\n        - Integration gateway routes\n      summary: Update route details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: routeID\n          description: Route ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_44\n                endpoint:\n                  type: string\n                  description: Route endpoint\n                method:\n                  type: string\n                  description: Route method\n                enabled:\n                  type: boolean\n                  description: Is route enabled\n                group:\n                  type: string\n                  description: Route group\n                meta:\n                  type: string\n                  description: Route meta\n              required:\n                - endpoint\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_44\n    get:\n      tags:\n        - Integration gateway routes\n      summary: Read route details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: routeID\n          description: Route ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Integration gateway routes\n      summary: Remove route\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: routeID\n          description: Route ID\n          required: true\n          schema: *ref_5\n  /system/apigw/route/{routeID}/undelete:\n    post:\n      tags:\n        - Integration gateway routes\n      summary: Undelete route\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: routeID\n          description: Route ID\n          required: true\n          schema: *ref_5\n  /system/apigw/filter/:\n    get:\n      tags:\n        - Integration gateway filters\n      summary: List filters\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: routeID\n          description: Filter by route ID\n          required: true\n          schema: *ref_5\n        - in: query\n          name: deleted\n          description: Exclude (0, default), include (1) or return only (2) deleted filters\n          required: false\n          schema: *ref_5\n        - in: query\n          name: disabled\n          description: \u003e-\n            Exclude (0, default), include (1) or return only (2) disabled\n            filters\n          required: false\n          schema: *ref_5\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n  /system/apigw/filter:\n    put:\n      tags:\n        - Integration gateway filters\n      summary: Create filter\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_45\n                routeID:\n                  type: string\n                  description: Route\n                weight:\n                  type: string\n                  description: Filter priority\n                kind:\n                  type: string\n                  description: Filter kind\n                ref:\n                  type: string\n                  description: Filter ref\n                enabled:\n                  type: boolean\n                  description: Is Filter enabled\n                params:\n                  type: string\n                  description: Filter parameters\n              required:\n                - routeID\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_45\n  /system/apigw/filter/{filterID}:\n    post:\n      tags:\n        - Integration gateway filters\n      summary: Update filter details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: filterID\n          description: Filter ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_46\n                routeID:\n                  type: string\n                  description: Route\n                weight:\n                  type: string\n                  description: Filter priority\n                kind:\n                  type: string\n                  description: Filter kind\n                ref:\n                  type: string\n                  description: Filter ref\n                enabled:\n                  type: boolean\n                  description: Is Filter enabled\n                params:\n                  type: string\n                  description: Filter parameters\n              required:\n                - routeID\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_46\n    get:\n      tags:\n        - Integration gateway filters\n      summary: Read filter details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: filterID\n          description: Filter ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Integration gateway filters\n      summary: Remove filter\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: filterID\n          description: Filter ID\n          required: true\n          schema: *ref_5\n  /system/apigw/filter/{filterID}/undelete:\n    post:\n      tags:\n        - Integration gateway filters\n      summary: Undelete filter\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: filterID\n          description: Filter ID\n          required: true\n          schema: *ref_5\n  /system/apigw/filter/def:\n    get:\n      tags:\n        - Integration gateway filters\n      summary: Filter definitions\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: kind\n          description: Filter filters by kind\n          required: false\n          schema: *ref_1\n  /system/apigw/filter/proxy_auth/def:\n    get:\n      tags:\n        - Integration gateway filters\n      summary: Proxy auth definitions\n      responses:\n        '200':\n          description: OK\n  /system/apigw/profiler/:\n    get:\n      tags:\n        - Integration gateway profiler\n      summary: List aggregated list of routes\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: path\n          description: Filter by request path\n          required: false\n          schema: *ref_1\n        - in: query\n          name: before\n          description: Entries before specified route\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n  /system/apigw/profiler/route/{routeID}:\n    get:\n      tags:\n        - Integration gateway profiler\n      summary: List hits per route\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: routeID\n          description: Route ID\n          required: true\n          schema: *ref_1\n        - in: query\n          name: path\n          description: Filter by request path\n          required: false\n          schema: *ref_1\n        - in: query\n          name: before\n          description: Entries before specified hit ID\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n  /system/apigw/profiler/hit/{hitID}:\n    get:\n      tags:\n        - Integration gateway profiler\n      summary: Hit details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: hitID\n          description: Hit ID\n          required: true\n          schema: *ref_1\n  /system/locale/resource:\n    get:\n      tags:\n        - Locale\n      summary: List resources translations\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: lang\n          description: Language\n          required: false\n          schema: *ref_1\n        - in: query\n          name: resource\n          description: Resource\n          required: false\n          schema: *ref_1\n        - in: query\n          name: resourceType\n          description: Resource type\n          required: false\n          schema: *ref_1\n        - in: query\n          name: ownerID\n          description: OwnerID\n          required: false\n          schema: *ref_5\n        - in: query\n          name: deleted\n          description: \u003e-\n            Exclude (0, default), include (1) or return only (2) deleted\n            resource translations\n          required: false\n          schema: *ref_5\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Locale\n      summary: Create resource translation\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_47\n                lang:\n                  type: string\n                  description: Lang\n                resource:\n                  type: string\n                  description: Resource\n                key:\n                  type: string\n                  description: Key\n                place:\n                  type: integer\n                  description: place\n                message:\n                  type: string\n                  description: Message\n                ownerID:\n                  type: string\n                  description: OwnerID\n              required:\n                - lang\n                - resource\n                - key\n                - message\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_47\n  /system/locale/resource/{translationID}:\n    put:\n      tags:\n        - Locale\n      summary: Update resource translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: translationID\n          description: ID\n          required: true\n          schema: *ref_5\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_48\n                lang:\n                  type: string\n                  description: Lang\n                resource:\n                  type: string\n                  description: Resource\n                key:\n                  type: string\n                  description: Key\n                place:\n                  type: integer\n                  description: place\n                message:\n                  type: string\n                  description: Message\n                ownerID:\n                  type: string\n                  description: OwnerID\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_48\n    get:\n      tags:\n        - Locale\n      summary: Read resource translation details\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: translationID\n          description: ID\n          required: true\n          schema: *ref_5\n    delete:\n      tags:\n        - Locale\n      summary: Remove resource translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: translationID\n          description: ID\n          required: true\n          schema: *ref_5\n  /system/locale/resource/{translationID}/undelete:\n    post:\n      tags:\n        - Locale\n      summary: Undelete resource translation\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: translationID\n          description: ID\n          required: true\n          schema: *ref_5\n  /system/locale/:\n    get:\n      tags:\n        - Locale\n      summary: List all available languages\n      responses:\n        '200':\n          description: OK\n  /system/locale/{lang}/{application}:\n    get:\n      tags:\n        - Locale\n      summary: List all available translation in a language for a specific webapp\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: lang\n          description: Language\n          required: true\n          schema: *ref_1\n        - in: path\n          name: application\n          description: Application name\n          required: true\n          schema: *ref_1\n  /system/data-privacy/requests/:\n    get:\n      tags:\n        - Data Privacy Request\n      summary: List data privacy requests\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: requestedBy\n          description: Filter by user ID\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: query\n          description: Filter requests\n          required: false\n          schema: *ref_1\n        - in: query\n          name: kind\n          description: 'Filter by kind: correct, delete, export'\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: status\n          description: 'Filter by status: pending, cancel, approve, reject'\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n    post:\n      tags:\n        - Data Privacy Request\n      summary: Create data privacy request\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_49\n                kind:\n                  type: string\n                  description: Request Kind\n                payload:\n                  type: string\n                  description: Request\n              required:\n                - kind\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_49\n  /system/data-privacy/requests/{requestID}/status/{status}:\n    patch:\n      tags:\n        - Data Privacy Request\n      summary: Update data privacy request status\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: requestID\n          description: ID\n          required: true\n          schema: *ref_5\n        - in: path\n          name: status\n          description: Request Status\n          required: true\n          schema: *ref_1\n  /system/data-privacy/requests/{requestID}:\n    get:\n      tags:\n        - Data Privacy Request\n      summary: Get details about specific request\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: path\n          name: requestID\n          description: Request ID\n          required: true\n          schema: *ref_5\n  /system/data-privacy/requests/{requestID}/comments/:\n    get:\n      tags:\n        - Data Privacy Request Comment\n      summary: List data privacy request comments\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: limit\n          description: Limit\n          required: false\n          schema: *ref_2\n        - in: query\n          name: pageCursor\n          description: Page cursor\n          required: false\n          schema: *ref_1\n        - in: query\n          name: sort\n          description: Sort items\n          required: false\n          schema: *ref_1\n        - in: path\n          name: requestID\n          description: Request ID\n          required: true\n          schema: *ref_5\n    post:\n      tags:\n        - Data Privacy Request Comment\n      summary: Create data privacy request comment\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026ref_50\n                comment:\n                  type: string\n                  description: Comment description\n              required:\n                - comment\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties: *ref_50\n      parameters:\n        - in: path\n          name: requestID\n          description: Request ID\n          required: true\n          schema: *ref_5\n  /system/data-privacy/connection/:\n    get:\n      tags:\n        - Data Privacy\n      summary: List connections for data privacy\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - in: query\n          name: connectionID\n          description: Filter by connection ID\n          required: false\n          schema:\n            type: array\n            items: *ref_1\n        - in: query\n          name: handle\n          description: Search handle to match against connections\n          required: false\n          schema: *ref_1\n        - in: query\n          name: type\n          description: Search type to match against connections\n          required: false\n          schema: *ref_1\n        - in: query\n          name: deleted\n          description: \u003e-\n            Exclude (0, default), include (1) or return only (2) deleted\n            connections\n          required: false\n          schema: *ref_1\n",
			"canonicalURL": "/github.com/cortezaproject/corteza@ea4a6f5f8070f2a12b21271cc327a6ca9d77f093/-/blob/server/docs/system.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cortezaproject/corteza/blob/ea4a6f5f8070f2a12b21271cc327a6ca9d77f093/server/docs/system.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/system/settings/\": patch: requestBody: contents: media: \"application/x-www-form-urlencoded\": form parameter \"values\": nested objects not allowed"
}