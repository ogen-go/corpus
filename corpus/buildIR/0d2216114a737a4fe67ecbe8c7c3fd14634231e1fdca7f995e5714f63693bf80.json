{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaystackOSS/openapi"
		},
		"file": {
			"name": "wallet.yaml",
			"size": 0,
			"path": "dist/wallet.yaml",
			"byteSize": 11532,
			"content": "openapi: 3.0.1\ninfo:\n  title: Create a wallet app\n  description: The OpenAPI specification for creating a wallet application using the Paystack API\n  version: 1.0.0\nservers:\n  - url: 'https://api.paystack.co'\n    description: Base API endpoint\npaths:\n  /customer:\n    post:\n      tags:\n        - Customer\n      summary: Create Customer\n      operationId: customer_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/Customer/allOf/0'\n                - $ref: '#/components/schemas/Customer/allOf/1'\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/Customer/allOf/0'\n                - $ref: '#/components/schemas/Customer/allOf/1'\n      responses:\n        '200':\n          description: Request successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n        '401':\n          description: Unauthorized operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: boolean\n                  message:\n                    type: string\n        default:\n          description: Server error\n  '/customer/{code}/identification':\n    parameters:\n      - name: code\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Customer\n      summary: Validate Customer\n      operationId: customer_validatte\n      description: Validate a customer's identity\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Customer/allOf/4'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Customer/allOf/4'\n      responses:\n        '202':\n          description: Request accepted for processing\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: boolean\n                  message:\n                    type: string\n        '401':\n          $ref: '#/paths/~1customer/post/responses/401'\n        default:\n          description: Server error\n  /dedicated_account:\n    post:\n      tags:\n        - Dedicated Virtual Account\n      summary: Create Dedicated Account\n      operationId: dedicatedAccount_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1dedicated_account/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - customer\n              properties:\n                customer:\n                  description: Customer ID or code\n                  type: string\n                preferred_bank:\n                  description: 'The bank slug for preferred bank. To get a list of available banks, use the List Providers endpoint'\n                  type: string\n                subaccount:\n                  description: Subaccount code of the account you want to split the transaction with\n                  type: string\n                split_code:\n                  description: Split code consisting of the lists of accounts you want to split the transaction with\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1customer/post/responses/200'\n        '401':\n          $ref: '#/paths/~1customer/post/responses/401'\n        default:\n          description: Server error\n  /transferrecipient:\n    post:\n      tags:\n        - Transfer Recipient\n      summary: Create Transfer Recipient\n      operationId: transferrecipient_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transferrecipient/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - type\n                - name\n                - account_number\n                - bank_code\n              properties:\n                type:\n                  description: Recipient Type (Only nuban at this time)\n                  type: string\n                name:\n                  description: Recipient's name\n                  type: string\n                account_number:\n                  description: Recipient's bank account number\n                  type: string\n                bank_code:\n                  description: Recipient's bank code. You can get the list of Bank Codes by calling the List Banks endpoint\n                  type: string\n                description:\n                  description: A description for this recipient\n                  type: string\n                currency:\n                  description: Currency for the account receiving the transfer\n                  type: string\n                authorization_code:\n                  description: An authorization code from a previous transaction\n                  type: string\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: string\n      responses:\n        '201':\n          description: Resource created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n        '401':\n          $ref: '#/paths/~1customer/post/responses/401'\n        default:\n          description: Server error\n  /transfer:\n    post:\n      tags:\n        - Transfer\n      summary: Initiate Transfer\n      operationId: transfer_initiate\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transfer/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - source\n                - amount\n                - recipient\n              properties:\n                source:\n                  description: Where should we transfer from? Only balance is allowed for now\n                  type: string\n                amount:\n                  description: Amount to transfer in kobo if currency is NGN and pesewas if currency is GHS.\n                  type: string\n                recipient:\n                  description: The transfer recipient's code\n                  type: string\n                reason:\n                  description: The reason or narration for the transfer.\n                  type: string\n                currency:\n                  description: Specify the currency of the transfer. Defaults to NGN.\n                  type: string\n                reference:\n                  description: |-\n                    If specified, the field should be a unique identifier (in lowercase) for the object. \n                    Only -,_ and alphanumeric characters are allowed.\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1customer/post/responses/200'\n        '401':\n          $ref: '#/paths/~1customer/post/responses/401'\n        default:\n          description: Server error\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    Customer:\n      allOf:\n        - type: object\n          required:\n            - email\n          properties:\n            email:\n              description: Customer's email address\n              type: string\n        - type: object\n          properties:\n            first_name:\n              description: Customer's first name\n              type: string\n            last_name:\n              description: Customer's last name\n              type: string\n            phone:\n              description: Customer's phone number\n              type: string\n            metadata:\n              description: Stringified JSON object of custom data\n              type: string\n        - type: object\n          required:\n            - authorization_code\n          properties:\n            authorization_code:\n              description: Customer's authorization code to be deactivated\n              type: string\n        - type: object\n          required:\n            - customer\n          properties:\n            customer:\n              description: 'Customer''s code, or email address'\n              type: string\n            risk_action:\n              description: |\n                One of the possible risk actions [ default, allow, deny ]. allow to whitelist. \n                deny to blacklist. Customers start with a default risk action.\n              type: string\n              enum:\n                - default\n                - allow\n                - deny\n        - type: object\n          required:\n            - type\n            - country\n            - bvn\n            - bank_code\n            - account_number\n          properties:\n            type:\n              description: Predefined types of identification.\n              type: string\n              enum:\n                - bvn\n                - bank_account\n            country:\n              description: Two-letter country code of identification issuer\n              type: string\n            bvn:\n              description: Customer's Bank Verification Number\n              type: string\n            bank_code:\n              description: 'You can get the list of bank codes by calling the List Banks endpoint (https://api.paystack.co/bank).'\n              type: string\n            account_number:\n              description: Customer's bank account number.\n              type: string\n            value:\n              description: Customer's identification number. Required if type is bvn\n              type: string\n    Error:\n      type: object\n      properties:\n        status:\n          type: boolean\n        message:\n          type: string\n    Response:\n      type: object\n      properties:\n        status:\n          type: boolean\n        message:\n          type: string\n        data:\n          type: object\n  responses:\n    Ok:\n      description: Successful operation\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              status:\n                type: boolean\n              message:\n                type: string\n              data:\n                type: object\n    Created:\n      description: Resource created\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response'\n    NotFound:\n      description: Entity not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            status: false\n            message: Entity not found\n    Unauthorized:\n      description: Unauthorized operation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            status: false\n            message: Invalid key\n    GeneralError:\n      description: General Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\nsecurity:\n  - bearerAuth: []\n",
			"canonicalURL": "/github.com/PaystackOSS/openapi@eef55f43da8b1f342efb3edc5506cd942e580492/-/blob/dist/wallet.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaystackOSS/openapi/blob/eef55f43da8b1f342efb3edc5506cd942e580492/dist/wallet.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: reference type \"#/paths/~1dedicated_account/post/requestBody/content/application~1json/schema\" name conflict: \"Schema\""
}