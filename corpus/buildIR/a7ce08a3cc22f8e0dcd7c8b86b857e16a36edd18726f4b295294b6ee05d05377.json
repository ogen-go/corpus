{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainjet/platform"
		},
		"file": {
			"name": "aws-api-ecr-2015-09-21.json",
			"size": 0,
			"path": "schemas/openapi3/aws-api-ecr-2015-09-21.json",
			"byteSize": 222094,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"2015-09-21\",\n    \"x-release\": \"v4\",\n    \"title\": \"Amazon EC2 Container Registry\",\n    \"description\": \"Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports private repositories with resource-based permissions using IAM so that specific users or Amazon EC2 instances can access repositories and images.\",\n    \"x-logo\": {\n      \"url\": \"https://raw.githubusercontent.com/chainjet/assets/master/integrations/aws/Arch_Amazon-Elastic-Container-Registry_64.svg\"\n    },\n    \"termsOfService\": \"https://aws.amazon.com/service-terms/\",\n    \"contact\": {\n      \"name\": \"Mike Ralphson\",\n      \"email\": \"mike.ralphson@gmail.com\",\n      \"url\": \"https://github.com/mermade/aws2openapi\",\n      \"x-twitter\": \"PermittedSoc\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0 License\",\n      \"url\": \"http://www.apache.org/licenses/\"\n    },\n    \"x-providerName\": \"amazonaws.com\",\n    \"x-serviceName\": \"ecr\",\n    \"x-origin\": [\n      {\n        \"contentType\": \"application/json\",\n        \"url\": \"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ecr-2015-09-21.normal.json\",\n        \"converter\": {\n          \"url\": \"https://github.com/mermade/aws2openapi\",\n          \"version\": \"1.0.0\"\n        },\n        \"x-apisguru-driver\": \"external\"\n      }\n    ],\n    \"x-apiClientRegistration\": {\n      \"url\": \"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\"\n    },\n    \"x-apisguru-categories\": [\"cloud\"],\n    \"x-preferred\": true\n  },\n  \"externalDocs\": {\n    \"description\": \"Amazon Web Services documentation\",\n    \"url\": \"https://docs.aws.amazon.com/ecr/\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://api.ecr.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The Amazon ECR multi-region endpoint\"\n    },\n    {\n      \"url\": \"https://api.ecr.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The Amazon ECR multi-region endpoint\"\n    },\n    {\n      \"url\": \"http://api.ecr.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The Amazon ECR endpoint for China (Beijing) and China (Ningxia)\"\n    },\n    {\n      \"url\": \"https://api.ecr.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The Amazon ECR endpoint for China (Beijing) and China (Ningxia)\"\n    }\n  ],\n  \"x-hasEquivalentPaths\": true,\n  \"paths\": {\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.BatchCheckLayerAvailability\": {\n      \"post\": {\n        \"operationId\": \"BatchCheckLayerAvailability\",\n        \"description\": \"\u003cp\u003eChecks the availability of one or more image layers in a repository.\u003c/p\u003e \u003cp\u003eWhen an image is pushed to a repository, each image layer is checked to verify if it has been uploaded before. If it has been uploaded, then the image layer is skipped.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the \u003ccode\u003edocker\u003c/code\u003e CLI to pull, tag, and push images.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BatchCheckLayerAvailabilityResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BatchCheckLayerAvailabilityRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.BatchCheckLayerAvailability\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Batch Check Layer Availability\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.BatchDeleteImage\": {\n      \"post\": {\n        \"operationId\": \"BatchDeleteImage\",\n        \"description\": \"\u003cp\u003eDeletes a list of specified images within a repository. Images are specified with either an \u003ccode\u003eimageTag\u003c/code\u003e or \u003ccode\u003eimageDigest\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eYou can remove a tag from an image by specifying the image's tag in your request. When you remove the last tag from an image, the image is deleted from your repository.\u003c/p\u003e \u003cp\u003eYou can completely delete an image (and all of its tags) by specifying the image's digest in your request.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BatchDeleteImageResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/BatchDeleteImageRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.BatchDeleteImage\"]\n            }\n          }\n        ],\n        \"summary\": \"Batch Delete Image\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.BatchGetImage\": {\n      \"post\": {\n        \"operationId\": \"BatchGetImage\",\n        \"description\": \"\u003cp\u003eGets detailed information for an image. Images are specified with either an \u003ccode\u003eimageTag\u003c/code\u003e or \u003ccode\u003eimageDigest\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eWhen an image is pulled, the BatchGetImage API is called once to retrieve the image manifest.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BatchGetImageResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/BatchGetImageRequest\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.BatchGetImage\"]\n            }\n          }\n        ],\n        \"summary\": \"Batch Get Image\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.CompleteLayerUpload\": {\n      \"post\": {\n        \"operationId\": \"CompleteLayerUpload\",\n        \"description\": \"\u003cp\u003eInforms Amazon ECR that the image layer upload has completed for a specified registry, repository name, and upload ID. You can optionally provide a \u003ccode\u003esha256\u003c/code\u003e digest of the image layer for data validation purposes.\u003c/p\u003e \u003cp\u003eWhen an image is pushed, the CompleteLayerUpload API is called once per each new image layer to verify that the upload has completed.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the \u003ccode\u003edocker\u003c/code\u003e CLI to pull, tag, and push images.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CompleteLayerUploadResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"UploadNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UploadNotFoundException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"InvalidLayerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidLayerException\"\n                }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"LayerPartTooSmallException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LayerPartTooSmallException\"\n                }\n              }\n            }\n          },\n          \"486\": {\n            \"description\": \"LayerAlreadyExistsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LayerAlreadyExistsException\"\n                }\n              }\n            }\n          },\n          \"487\": {\n            \"description\": \"EmptyUploadException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmptyUploadException\"\n                }\n              }\n            }\n          },\n          \"488\": {\n            \"description\": \"KmsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/KmsException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CompleteLayerUploadRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.CompleteLayerUpload\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Complete Layer Upload\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.CreateRepository\": {\n      \"post\": {\n        \"operationId\": \"CreateRepository\",\n        \"description\": \"Creates a repository. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html\\\"\u003eAmazon ECR Repositories\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Registry User Guide\u003c/i\u003e.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateRepositoryResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InvalidTagParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidTagParameterException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"TooManyTagsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TooManyTagsException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"RepositoryAlreadyExistsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryAlreadyExistsException\"\n                }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"486\": {\n            \"description\": \"KmsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/KmsException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateRepositoryRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.CreateRepository\"]\n            }\n          }\n        ],\n        \"summary\": \"Create Repository\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.DeleteLifecyclePolicy\": {\n      \"post\": {\n        \"operationId\": \"DeleteLifecyclePolicy\",\n        \"description\": \"Deletes the lifecycle policy associated with the specified repository.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DeleteLifecyclePolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"LifecyclePolicyNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LifecyclePolicyNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteLifecyclePolicyRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.DeleteLifecyclePolicy\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Delete Lifecycle Policy\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.DeleteRepository\": {\n      \"post\": {\n        \"operationId\": \"DeleteRepository\",\n        \"description\": \"Deletes a repository. If the repository contains images, you must either delete all images in the repository or use the \u003ccode\u003eforce\u003c/code\u003e option to delete the repository.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DeleteRepositoryResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"RepositoryNotEmptyException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotEmptyException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"KmsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/KmsException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteRepositoryRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.DeleteRepository\"]\n            }\n          }\n        ],\n        \"summary\": \"Delete Repository\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.DeleteRepositoryPolicy\": {\n      \"post\": {\n        \"operationId\": \"DeleteRepositoryPolicy\",\n        \"description\": \"Deletes the repository policy associated with the specified repository.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DeleteRepositoryPolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"RepositoryPolicyNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryPolicyNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteRepositoryPolicyRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.DeleteRepositoryPolicy\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Delete Repository Policy\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.DescribeImageScanFindings\": {\n      \"post\": {\n        \"operationId\": \"DescribeImageScanFindings\",\n        \"description\": \"Returns the scan findings for the specified image.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DescribeImageScanFindingsResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ImageNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImageNotFoundException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ScanNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ScanNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DescribeImageScanFindingsRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination limit\",\n            \"required\": false\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination token\",\n            \"required\": false\n          },\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.DescribeImageScanFindings\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Describe Image Scan Findings\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.DescribeImages\": {\n      \"post\": {\n        \"operationId\": \"DescribeImages\",\n        \"description\": \"\u003cp\u003eReturns metadata about the images in a repository.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eBeginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the \u003ccode\u003edocker images\u003c/code\u003e command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by \u003ca\u003eDescribeImages\u003c/a\u003e.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DescribeImagesResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ImageNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImageNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/DescribeImagesRequest\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination limit\",\n            \"required\": false\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination token\",\n            \"required\": false\n          },\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.DescribeImages\"]\n            }\n          }\n        ],\n        \"summary\": \"Describe Images\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.DescribeRepositories\": {\n      \"post\": {\n        \"operationId\": \"DescribeRepositories\",\n        \"description\": \"Describes image repositories in a registry.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DescribeRepositoriesResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DescribeRepositoriesRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination limit\",\n            \"required\": false\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination token\",\n            \"required\": false\n          },\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.DescribeRepositories\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Describe Repositories\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.GetAuthorizationToken\": {\n      \"post\": {\n        \"operationId\": \"GetAuthorizationToken\",\n        \"description\": \"\u003cp\u003eRetrieves an authorization token. An authorization token represents your IAM authentication credentials and can be used to access any Amazon ECR registry that your IAM principal has access to. The authorization token is valid for 12 hours.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eauthorizationToken\u003c/code\u003e returned is a base64 encoded string that can be decoded and used in a \u003ccode\u003edocker login\u003c/code\u003e command to authenticate to a registry. The AWS CLI offers an \u003ccode\u003eget-login-password\u003c/code\u003e command that simplifies the login process. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth\\\"\u003eRegistry Authentication\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Registry User Guide\u003c/i\u003e.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetAuthorizationTokenResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GetAuthorizationTokenRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.GetAuthorizationToken\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Get Authorization Token\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.GetDownloadUrlForLayer\": {\n      \"post\": {\n        \"operationId\": \"GetDownloadUrlForLayer\",\n        \"description\": \"\u003cp\u003eRetrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You can only get URLs for image layers that are referenced in an image.\u003c/p\u003e \u003cp\u003eWhen an image is pulled, the GetDownloadUrlForLayer API is called once per image layer that is not already cached.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the \u003ccode\u003edocker\u003c/code\u003e CLI to pull, tag, and push images.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetDownloadUrlForLayerResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"LayersNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LayersNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"LayerInaccessibleException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LayerInaccessibleException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GetDownloadUrlForLayerRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.GetDownloadUrlForLayer\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Get Download Url For Layer\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.GetLifecyclePolicy\": {\n      \"post\": {\n        \"operationId\": \"GetLifecyclePolicy\",\n        \"description\": \"Retrieves the lifecycle policy for the specified repository.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetLifecyclePolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"LifecyclePolicyNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LifecyclePolicyNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GetLifecyclePolicyRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.GetLifecyclePolicy\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Get Lifecycle Policy\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.GetLifecyclePolicyPreview\": {\n      \"post\": {\n        \"operationId\": \"GetLifecyclePolicyPreview\",\n        \"description\": \"Retrieves the results of the lifecycle policy preview request for the specified repository.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetLifecyclePolicyPreviewResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"LifecyclePolicyPreviewNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LifecyclePolicyPreviewNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GetLifecyclePolicyPreviewRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination limit\",\n            \"required\": false\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination token\",\n            \"required\": false\n          },\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.GetLifecyclePolicyPreview\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Get Lifecycle Policy Preview\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.GetRepositoryPolicy\": {\n      \"post\": {\n        \"operationId\": \"GetRepositoryPolicy\",\n        \"description\": \"Retrieves the repository policy for the specified repository.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetRepositoryPolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"RepositoryPolicyNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryPolicyNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GetRepositoryPolicyRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.GetRepositoryPolicy\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Get Repository Policy\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.InitiateLayerUpload\": {\n      \"post\": {\n        \"operationId\": \"InitiateLayerUpload\",\n        \"description\": \"\u003cp\u003eNotifies Amazon ECR that you intend to upload an image layer.\u003c/p\u003e \u003cp\u003eWhen an image is pushed, the InitiateLayerUpload API is called once per image layer that has not already been uploaded. Whether or not an image layer has been uploaded is determined by the BatchCheckLayerAvailability API action.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the \u003ccode\u003edocker\u003c/code\u003e CLI to pull, tag, and push images.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InitiateLayerUploadResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"KmsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/KmsException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InitiateLayerUploadRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.InitiateLayerUpload\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Initiate Layer Upload\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.ListImages\": {\n      \"post\": {\n        \"operationId\": \"ListImages\",\n        \"description\": \"\u003cp\u003eLists all the image IDs for the specified repository.\u003c/p\u003e \u003cp\u003eYou can filter images based on whether or not they are tagged by using the \u003ccode\u003etagStatus\u003c/code\u003e filter and specifying either \u003ccode\u003eTAGGED\u003c/code\u003e, \u003ccode\u003eUNTAGGED\u003c/code\u003e or \u003ccode\u003eANY\u003c/code\u003e. For example, you can filter your results to return only \u003ccode\u003eUNTAGGED\u003c/code\u003e images and then pipe that result to a \u003ca\u003eBatchDeleteImage\u003c/a\u003e operation to delete them. Or, you can filter your results to return only \u003ccode\u003eTAGGED\u003c/code\u003e images to list all of the tags in your repository.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ListImagesResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/ListImagesRequest\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination limit\",\n            \"required\": false\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination token\",\n            \"required\": false\n          },\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.ListImages\"]\n            }\n          }\n        ],\n        \"summary\": \"List Images\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.ListTagsForResource\": {\n      \"post\": {\n        \"operationId\": \"ListTagsForResource\",\n        \"description\": \"List the tags for an Amazon ECR resource.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListTagsForResourceResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ListTagsForResourceRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.ListTagsForResource\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"List Tags For Resource\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.PutImage\": {\n      \"post\": {\n        \"operationId\": \"PutImage\",\n        \"description\": \"\u003cp\u003eCreates or updates the image manifest and tags associated with an image.\u003c/p\u003e \u003cp\u003eWhen an image is pushed and all new image layers have been uploaded, the PutImage API is called once to create or update the image manifest and the tags associated with the image.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the \u003ccode\u003edocker\u003c/code\u003e CLI to pull, tag, and push images.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/PutImageResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ImageAlreadyExistsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImageAlreadyExistsException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"LayersNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LayersNotFoundException\"\n                }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ReferencedImagesNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ReferencedImagesNotFoundException\"\n                }\n              }\n            }\n          },\n          \"486\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"487\": {\n            \"description\": \"ImageTagAlreadyExistsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImageTagAlreadyExistsException\"\n                }\n              }\n            }\n          },\n          \"488\": {\n            \"description\": \"ImageDigestDoesNotMatchException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImageDigestDoesNotMatchException\"\n                }\n              }\n            }\n          },\n          \"489\": {\n            \"description\": \"KmsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/KmsException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/PutImageRequest\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.PutImage\"]\n            }\n          }\n        ],\n        \"summary\": \"Put Image\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.PutImageScanningConfiguration\": {\n      \"post\": {\n        \"operationId\": \"PutImageScanningConfiguration\",\n        \"description\": \"Updates the image scanning configuration for the specified repository.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PutImageScanningConfigurationResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PutImageScanningConfigurationRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.PutImageScanningConfiguration\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Put Image Scanning Configuration\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.PutImageTagMutability\": {\n      \"post\": {\n        \"operationId\": \"PutImageTagMutability\",\n        \"description\": \"Updates the image tag mutability settings for the specified repository. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html\\\"\u003eImage Tag Mutability\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Registry User Guide\u003c/i\u003e.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PutImageTagMutabilityResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PutImageTagMutabilityRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.PutImageTagMutability\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Put Image Tag Mutability\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.PutLifecyclePolicy\": {\n      \"post\": {\n        \"operationId\": \"PutLifecyclePolicy\",\n        \"description\": \"Creates or updates the lifecycle policy for the specified repository. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html\\\"\u003eLifecycle Policy Template\u003c/a\u003e.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PutLifecyclePolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PutLifecyclePolicyRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.PutLifecyclePolicy\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Put Lifecycle Policy\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.SetRepositoryPolicy\": {\n      \"post\": {\n        \"operationId\": \"SetRepositoryPolicy\",\n        \"description\": \"Applies a repository policy to the specified repository to control access permissions. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policies.html\\\"\u003eAmazon ECR Repository Policies\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Registry User Guide\u003c/i\u003e.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SetRepositoryPolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SetRepositoryPolicyRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.SetRepositoryPolicy\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Set Repository Policy\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.StartImageScan\": {\n      \"post\": {\n        \"operationId\": \"StartImageScan\",\n        \"description\": \"Starts an image vulnerability scan. An image scan can only be started once per day on an individual image. This limit includes if an image was scanned on initial push. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html\\\"\u003eImage Scanning\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Registry User Guide\u003c/i\u003e.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StartImageScanResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"UnsupportedImageTypeException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnsupportedImageTypeException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ImageNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImageNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/StartImageScanRequest\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.StartImageScan\"]\n            }\n          }\n        ],\n        \"summary\": \"Start Image Scan\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.StartLifecyclePolicyPreview\": {\n      \"post\": {\n        \"operationId\": \"StartLifecyclePolicyPreview\",\n        \"description\": \"Starts a preview of a lifecycle policy for the specified repository. This allows you to see the results before associating the lifecycle policy with the repository.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StartLifecyclePolicyPreviewResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"LifecyclePolicyNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LifecyclePolicyNotFoundException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"LifecyclePolicyPreviewInProgressException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LifecyclePolicyPreviewInProgressException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/StartLifecyclePolicyPreviewRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.StartLifecyclePolicyPreview\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Start Lifecycle Policy Preview\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.TagResource\": {\n      \"post\": {\n        \"operationId\": \"TagResource\",\n        \"description\": \"Adds specified tags to a resource with the specified ARN. Existing tags on a resource are not changed if they are not specified in the request parameters.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/TagResourceResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidTagParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidTagParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"TooManyTagsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TooManyTagsException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/TagResourceRequest\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.TagResource\"]\n            }\n          }\n        ],\n        \"summary\": \"Tag Resource\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.UntagResource\": {\n      \"post\": {\n        \"operationId\": \"UntagResource\",\n        \"description\": \"Deletes specified tags from a resource.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UntagResourceResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidTagParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidTagParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"TooManyTagsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TooManyTagsException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UntagResourceRequest\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.UntagResource\"]\n            }\n          }\n        ],\n        \"summary\": \"Untag Resource\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.UploadLayerPart\": {\n      \"post\": {\n        \"operationId\": \"UploadLayerPart\",\n        \"description\": \"\u003cp\u003eUploads an image layer part to Amazon ECR.\u003c/p\u003e \u003cp\u003eWhen an image is pushed, each new image layer is uploaded in parts. The maximum size of each image layer part can be 20971520 bytes (or about 20MB). The UploadLayerPart API is called once per each new image layer part.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the \u003ccode\u003edocker\u003c/code\u003e CLI to pull, tag, and push images.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UploadLayerPartResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InvalidLayerPartException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidLayerPartException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"RepositoryNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryNotFoundException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"UploadNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UploadNotFoundException\"\n                }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"LimitExceededException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LimitExceededException\"\n                }\n              }\n            }\n          },\n          \"486\": {\n            \"description\": \"KmsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/KmsException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UploadLayerPartRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.UploadLayerPart\"]\n            }\n          }\n        ],\n        \"summary\": \"Upload Layer Part\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.DeleteRegistryPolicy\": {\n      \"post\": {\n        \"operationId\": \"DeleteRegistryPolicy\",\n        \"description\": \"Deletes the registry permissions policy.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DeleteRegistryPolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RegistryPolicyNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegistryPolicyNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteRegistryPolicyRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.DeleteRegistryPolicy\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Delete Registry Policy\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.DescribeRegistry\": {\n      \"post\": {\n        \"operationId\": \"DescribeRegistry\",\n        \"description\": \"Describes the settings for a registry. The replication configuration for a repository can be created or updated with the \u003ca\u003ePutReplicationConfiguration\u003c/a\u003e API action.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DescribeRegistryResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"ValidationException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ValidationException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DescribeRegistryRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.DescribeRegistry\"]\n            }\n          }\n        ],\n        \"summary\": \"Describe Registry\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.GetRegistryPolicy\": {\n      \"post\": {\n        \"operationId\": \"GetRegistryPolicy\",\n        \"description\": \"Retrieves the permissions policy for a registry.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetRegistryPolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RegistryPolicyNotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegistryPolicyNotFoundException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GetRegistryPolicyRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.GetRegistryPolicy\"]\n            }\n          }\n        ],\n        \"summary\": \"Get Registry Policy\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.PutRegistryPolicy\": {\n      \"post\": {\n        \"operationId\": \"PutRegistryPolicy\",\n        \"description\": \"\u003cp\u003eCreates or updates the permissions policy for your registry.\u003c/p\u003e \u003cp\u003eA registry policy is used to specify permissions for another Amazon Web Services account and is used when configuring cross-account replication. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html\\\"\u003eRegistry permissions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Registry User Guide\u003c/i\u003e.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PutRegistryPolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PutRegistryPolicyRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AmazonEC2ContainerRegistry_V20150921.PutRegistryPolicy\"]\n            }\n          }\n        ],\n        \"summary\": \"Put Registry Policy\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.PutReplicationConfiguration\": {\n      \"post\": {\n        \"operationId\": \"PutReplicationConfiguration\",\n        \"description\": \"\u003cp\u003eCreates or updates the replication configuration for a registry. The existing replication configuration for a repository can be retrieved with the \u003ca\u003eDescribeRegistry\u003c/a\u003e API action. The first time the PutReplicationConfiguration API is called, a service-linked IAM role is created in your account for the replication process. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/using-service-linked-roles.html\\\"\u003eUsing service-linked roles for Amazon ECR\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Registry User Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eWhen configuring cross-account replication, the destination account must grant the source account permission to replicate. This permission is controlled using a registry permissions policy. For more information, see \u003ca\u003ePutRegistryPolicy\u003c/a\u003e.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PutReplicationConfigurationResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServerException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ServerException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InvalidParameterException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidParameterException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"ValidationException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ValidationException\" }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PutReplicationConfigurationRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Amz-Target\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AmazonEC2ContainerRegistry_V20150921.PutReplicationConfiguration\"\n              ]\n            }\n          }\n        ],\n        \"summary\": \"Put Replication Configuration\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"X-Amz-Content-Sha256\": {\n        \"name\": \"X-Amz-Content-Sha256\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Date\": {\n        \"name\": \"X-Amz-Date\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Algorithm\": {\n        \"name\": \"X-Amz-Algorithm\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Credential\": {\n        \"name\": \"X-Amz-Credential\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Security-Token\": {\n        \"name\": \"X-Amz-Security-Token\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Signature\": {\n        \"name\": \"X-Amz-Signature\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-SignedHeaders\": {\n        \"name\": \"X-Amz-SignedHeaders\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"hmac\": {\n        \"type\": \"apiKey\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\",\n        \"description\": \"Amazon Signature authorization v4\",\n        \"x-amazon-apigateway-authtype\": \"awsSigv4\"\n      }\n    },\n    \"schemas\": {\n      \"BatchCheckLayerAvailabilityResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"layers\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerList\" },\n              {\n                \"description\": \"A list of image layer objects corresponding to the image layer references in the request.\"\n              }\n            ]\n          },\n          \"failures\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerFailureList\" },\n              { \"description\": \"Any failures associated with the call.\" }\n            ]\n          }\n        }\n      },\n      \"BatchCheckLayerAvailabilityRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"layerDigests\"],\n        \"title\": \"BatchCheckLayerAvailabilityRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository that is associated with the image layers to check.\"\n              }\n            ]\n          },\n          \"layerDigests\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/BatchedOperationLayerDigestList\"\n              },\n              { \"description\": \"The digests of the image layers to check.\" }\n            ]\n          }\n        }\n      },\n      \"RepositoryNotFoundException\": {},\n      \"InvalidParameterException\": {},\n      \"ServerException\": {},\n      \"BatchDeleteImageResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"failures\": [],\n          \"imageIds\": [\n            {\n              \"imageDigest\": \"sha256:examplee6d1e504117a17000003d3753086354a38375961f2e665416ef4b1b2f\",\n              \"imageTag\": \"precise\"\n            }\n          ]\n        },\n        \"properties\": {\n          \"imageIds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageIdentifierList\" },\n              { \"description\": \"The image IDs of the deleted images.\" }\n            ]\n          },\n          \"failures\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageFailureList\" },\n              { \"description\": \"Any failures associated with the call.\" }\n            ]\n          }\n        }\n      },\n      \"BatchDeleteImageRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"imageIds\"],\n        \"title\": \"BatchDeleteImageRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository that contains the image to delete.\"\n              }\n            ]\n          },\n          \"imageIds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageIdentifierList\" },\n              {\n                \"description\": \"A list of image ID references that correspond to images to delete. The format of the \u003ccode\u003eimageIds\u003c/code\u003e reference is \u003ccode\u003eimageTag=tag\u003c/code\u003e or \u003ccode\u003eimageDigest=digest\u003c/code\u003e.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Deletes specified images within a specified repository. Images are specified with either the \u003ccode\u003eimageTag\u003c/code\u003e or \u003ccode\u003eimageDigest\u003c/code\u003e.\"\n      },\n      \"BatchGetImageResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"failures\": [],\n          \"images\": [\n            {\n              \"imageId\": {\n                \"imageDigest\": \"sha256:example76bdff6d83a09ba2a818f0d00000063724a9ac3ba5019c56f74ebf42a\",\n                \"imageTag\": \"precise\"\n              },\n              \"imageManifest\": \"{\\n \\\"schemaVersion\\\": 1,\\n \\\"name\\\": \\\"ubuntu\\\",\\n \\\"tag\\\": \\\"precise\\\",\\n...\",\n              \"registryId\": \"244698725403\",\n              \"repositoryName\": \"ubuntu\"\n            }\n          ]\n        },\n        \"properties\": {\n          \"images\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageList\" },\n              {\n                \"description\": \"A list of image objects corresponding to the image references in the request.\"\n              }\n            ]\n          },\n          \"failures\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageFailureList\" },\n              { \"description\": \"Any failures associated with the call.\" }\n            ]\n          }\n        }\n      },\n      \"BatchGetImageRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"imageIds\"],\n        \"title\": \"BatchGetImageRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository that contains the images to describe.\"\n              }\n            ]\n          },\n          \"imageIds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageIdentifierList\" },\n              {\n                \"description\": \"A list of image ID references that correspond to images to describe. The format of the \u003ccode\u003eimageIds\u003c/code\u003e reference is \u003ccode\u003eimageTag=tag\u003c/code\u003e or \u003ccode\u003eimageDigest=digest\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"acceptedMediaTypes\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MediaTypeList\" },\n              {\n                \"description\": \"\u003cp\u003eThe accepted media types for the request.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eapplication/vnd.docker.distribution.manifest.v1+json\u003c/code\u003e | \u003ccode\u003eapplication/vnd.docker.distribution.manifest.v2+json\u003c/code\u003e | \u003ccode\u003eapplication/vnd.oci.image.manifest.v1+json\u003c/code\u003e \u003c/p\u003e\"\n              }\n            ]\n          }\n        }\n      },\n      \"CompleteLayerUploadResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"uploadId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/UploadId\" },\n              { \"description\": \"The upload ID associated with the layer.\" }\n            ]\n          },\n          \"layerDigest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerDigest\" },\n              {\n                \"description\": \"The \u003ccode\u003esha256\u003c/code\u003e digest of the image layer.\"\n              }\n            ]\n          }\n        }\n      },\n      \"CompleteLayerUploadRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"uploadId\", \"layerDigests\"],\n        \"title\": \"CompleteLayerUploadRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository to associate with the image layer.\"\n              }\n            ]\n          },\n          \"uploadId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/UploadId\" },\n              {\n                \"description\": \"The upload ID from a previous \u003ca\u003eInitiateLayerUpload\u003c/a\u003e operation to associate with the image layer.\"\n              }\n            ]\n          },\n          \"layerDigests\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerDigestList\" },\n              {\n                \"description\": \"The \u003ccode\u003esha256\u003c/code\u003e digest of the image layer.\"\n              }\n            ]\n          }\n        }\n      },\n      \"UploadNotFoundException\": {},\n      \"InvalidLayerException\": {},\n      \"LayerPartTooSmallException\": {},\n      \"LayerAlreadyExistsException\": {},\n      \"EmptyUploadException\": {},\n      \"KmsException\": {},\n      \"CreateRepositoryResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"repository\": {\n            \"registryId\": \"012345678901\",\n            \"repositoryArn\": \"arn:aws:ecr:us-west-2:012345678901:repository/project-a/nginx-web-app\",\n            \"repositoryName\": \"project-a/nginx-web-app\"\n          }\n        },\n        \"properties\": {\n          \"repository\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Repository\" },\n              { \"description\": \"The repository that was created.\" }\n            ]\n          }\n        }\n      },\n      \"CreateRepositoryRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"CreateRepositoryRequest\",\n        \"properties\": {\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name to use for the repository. The repository name may be specified on its own (such as \u003ccode\u003enginx-web-app\u003c/code\u003e) or it can be prepended with a namespace to group the repository into a category (such as \u003ccode\u003eproject-a/nginx-web-app\u003c/code\u003e).\"\n              }\n            ]\n          },\n          \"tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagList\" },\n              {\n                \"description\": \"The metadata that you apply to the repository to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\"\n              }\n            ]\n          },\n          \"imageTagMutability\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageTagMutability\" },\n              {\n                \"description\": \"The tag mutability setting for the repository. If this parameter is omitted, the default setting of \u003ccode\u003eMUTABLE\u003c/code\u003e will be used which will allow image tags to be overwritten. If \u003ccode\u003eIMMUTABLE\u003c/code\u003e is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.\"\n              }\n            ]\n          },\n          \"imageScanningConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageScanningConfiguration\" },\n              {\n                \"description\": \"The image scanning configuration for the repository. This determines whether images are scanned for known vulnerabilities after being pushed to the repository.\"\n              }\n            ]\n          },\n          \"encryptionConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/EncryptionConfiguration\" },\n              {\n                \"description\": \"The encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.\"\n              }\n            ]\n          }\n        }\n      },\n      \"InvalidTagParameterException\": {},\n      \"TooManyTagsException\": {},\n      \"RepositoryAlreadyExistsException\": {},\n      \"LimitExceededException\": {},\n      \"DeleteLifecyclePolicyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"lifecyclePolicyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyText\" },\n              { \"description\": \"The JSON lifecycle policy text.\" }\n            ]\n          },\n          \"lastEvaluatedAt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/EvaluationTimestamp\" },\n              {\n                \"description\": \"The time stamp of the last time that the lifecycle policy was run.\"\n              }\n            ]\n          }\n        }\n      },\n      \"DeleteLifecyclePolicyRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"DeleteLifecyclePolicyRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              { \"description\": \"The name of the repository.\" }\n            ]\n          }\n        }\n      },\n      \"LifecyclePolicyNotFoundException\": {},\n      \"DeleteRepositoryResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"repository\": {\n            \"registryId\": \"012345678901\",\n            \"repositoryArn\": \"arn:aws:ecr:us-west-2:012345678901:repository/ubuntu\",\n            \"repositoryName\": \"ubuntu\"\n          }\n        },\n        \"properties\": {\n          \"repository\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Repository\" },\n              { \"description\": \"The repository that was deleted.\" }\n            ]\n          }\n        }\n      },\n      \"DeleteRepositoryRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"DeleteRepositoryRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              { \"description\": \"The name of the repository to delete.\" }\n            ]\n          },\n          \"force\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ForceFlag\" },\n              {\n                \"description\": \" If a repository contains images, forces the deletion.\"\n              }\n            ]\n          }\n        }\n      },\n      \"RepositoryNotEmptyException\": {},\n      \"DeleteRepositoryPolicyResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"policyText\": \"{ ... }\",\n          \"registryId\": \"012345678901\",\n          \"repositoryName\": \"ubuntu\"\n        },\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"policyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryPolicyText\" },\n              {\n                \"description\": \"The JSON repository policy that was deleted from the repository.\"\n              }\n            ]\n          }\n        }\n      },\n      \"DeleteRepositoryPolicyRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"DeleteRepositoryPolicyRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository that is associated with the repository policy to delete.\"\n              }\n            ]\n          }\n        }\n      },\n      \"RepositoryPolicyNotFoundException\": {},\n      \"DescribeImageScanFindingsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"imageId\": { \"$ref\": \"#/components/schemas/ImageIdentifier\" },\n          \"imageScanStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageScanStatus\" },\n              { \"description\": \"The current state of the scan.\" }\n            ]\n          },\n          \"imageScanFindings\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageScanFindings\" },\n              {\n                \"description\": \"The information contained in the image scan findings.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eDescribeImageScanFindings\u003c/code\u003e request. When the results of a \u003ccode\u003eDescribeImageScanFindings\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is null when there are no more results to return.\"\n              }\n            ]\n          }\n        }\n      },\n      \"DescribeImageScanFindingsRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"imageId\"],\n        \"title\": \"DescribeImageScanFindingsRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository in which to describe the image scan findings for. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository for the image for which to describe the scan findings.\"\n              }\n            ]\n          },\n          \"imageId\": { \"$ref\": \"#/components/schemas/ImageIdentifier\" },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"The \u003ccode\u003enextToken\u003c/code\u003e value returned from a previous paginated \u003ccode\u003eDescribeImageScanFindings\u003c/code\u003e request where \u003ccode\u003emaxResults\u003c/code\u003e was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the \u003ccode\u003enextToken\u003c/code\u003e value. This value is null when there are no more results to return.\"\n              }\n            ]\n          },\n          \"maxResults\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MaxResults\" },\n              {\n                \"description\": \"The maximum number of image scan results returned by \u003ccode\u003eDescribeImageScanFindings\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eDescribeImageScanFindings\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eDescribeImageScanFindings\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 1000. If this parameter is not used, then \u003ccode\u003eDescribeImageScanFindings\u003c/code\u003e returns up to 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value, if applicable.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ImageNotFoundException\": {},\n      \"ScanNotFoundException\": {},\n      \"DescribeImagesResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"imageDetails\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageDetailList\" },\n              {\n                \"description\": \"A list of \u003ca\u003eImageDetail\u003c/a\u003e objects that contain data about the image.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eDescribeImages\u003c/code\u003e request. When the results of a \u003ccode\u003eDescribeImages\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\"\n              }\n            ]\n          }\n        }\n      },\n      \"DescribeImagesRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"DescribeImagesRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository that contains the images to describe.\"\n              }\n            ]\n          },\n          \"imageIds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageIdentifierList\" },\n              {\n                \"description\": \"The list of image IDs for the requested repository.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"The \u003ccode\u003enextToken\u003c/code\u003e value returned from a previous paginated \u003ccode\u003eDescribeImages\u003c/code\u003e request where \u003ccode\u003emaxResults\u003c/code\u003e was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the \u003ccode\u003enextToken\u003c/code\u003e value. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return. This option cannot be used when you specify images with \u003ccode\u003eimageIds\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"maxResults\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MaxResults\" },\n              {\n                \"description\": \"The maximum number of repository results returned by \u003ccode\u003eDescribeImages\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eDescribeImages\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eDescribeImages\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 1000. If this parameter is not used, then \u003ccode\u003eDescribeImages\u003c/code\u003e returns up to 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value, if applicable. This option cannot be used when you specify images with \u003ccode\u003eimageIds\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"filter\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/DescribeImagesFilter\" },\n              {\n                \"description\": \"The filter key and value with which to filter your \u003ccode\u003eDescribeImages\u003c/code\u003e results.\"\n              }\n            ]\n          }\n        }\n      },\n      \"DescribeRepositoriesResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"repositories\": [\n            {\n              \"registryId\": \"012345678910\",\n              \"repositoryArn\": \"arn:aws:ecr:us-west-2:012345678910:repository/ubuntu\",\n              \"repositoryName\": \"ubuntu\"\n            },\n            {\n              \"registryId\": \"012345678910\",\n              \"repositoryArn\": \"arn:aws:ecr:us-west-2:012345678910:repository/test\",\n              \"repositoryName\": \"test\"\n            }\n          ]\n        },\n        \"properties\": {\n          \"repositories\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryList\" },\n              {\n                \"description\": \"A list of repository objects corresponding to valid repositories.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eDescribeRepositories\u003c/code\u003e request. When the results of a \u003ccode\u003eDescribeRepositories\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\"\n              }\n            ]\n          }\n        }\n      },\n      \"DescribeRepositoriesRequest\": {\n        \"type\": \"object\",\n        \"title\": \"DescribeRepositoriesRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryNames\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryNameList\" },\n              {\n                \"description\": \"A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"\u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a previous paginated \u003ccode\u003eDescribeRepositories\u003c/code\u003e request where \u003ccode\u003emaxResults\u003c/code\u003e was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the \u003ccode\u003enextToken\u003c/code\u003e value. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return. This option cannot be used when you specify repositories with \u003ccode\u003erepositoryNames\u003c/code\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"maxResults\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MaxResults\" },\n              {\n                \"description\": \"The maximum number of repository results returned by \u003ccode\u003eDescribeRepositories\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eDescribeRepositories\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eDescribeRepositories\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 1000. If this parameter is not used, then \u003ccode\u003eDescribeRepositories\u003c/code\u003e returns up to 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value, if applicable. This option cannot be used when you specify repositories with \u003ccode\u003erepositoryNames\u003c/code\u003e.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetAuthorizationTokenResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"authorizationData\": [\n            {\n              \"authorizationToken\": \"QVdTOkN...\",\n              \"expiresAt\": \"1470951892432\",\n              \"proxyEndpoint\": \"https://012345678901.dkr.ecr.us-west-2.amazonaws.com\"\n            }\n          ]\n        },\n        \"properties\": {\n          \"authorizationData\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AuthorizationDataList\" },\n              {\n                \"description\": \"A list of authorization token data objects that correspond to the \u003ccode\u003eregistryIds\u003c/code\u003e values in the request.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetAuthorizationTokenRequest\": {\n        \"type\": \"object\",\n        \"title\": \"GetAuthorizationTokenRequest\",\n        \"properties\": {\n          \"registryIds\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/GetAuthorizationTokenRegistryIdList\"\n              },\n              {\n                \"description\": \"A list of AWS account IDs that are associated with the registries for which to get AuthorizationData objects. If you do not specify a registry, the default registry is assumed.\",\n                \"deprecated\": true\n              }\n            ]\n          }\n        }\n      },\n      \"GetDownloadUrlForLayerResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"downloadUrl\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Url\" },\n              {\n                \"description\": \"The pre-signed Amazon S3 download URL for the requested layer.\"\n              }\n            ]\n          },\n          \"layerDigest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerDigest\" },\n              { \"description\": \"The digest of the image layer to download.\" }\n            ]\n          }\n        }\n      },\n      \"GetDownloadUrlForLayerRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"layerDigest\"],\n        \"title\": \"GetDownloadUrlForLayerRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository that is associated with the image layer to download.\"\n              }\n            ]\n          },\n          \"layerDigest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerDigest\" },\n              { \"description\": \"The digest of the image layer to download.\" }\n            ]\n          }\n        }\n      },\n      \"LayersNotFoundException\": {},\n      \"LayerInaccessibleException\": {},\n      \"GetLifecyclePolicyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"lifecyclePolicyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyText\" },\n              { \"description\": \"The JSON lifecycle policy text.\" }\n            ]\n          },\n          \"lastEvaluatedAt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/EvaluationTimestamp\" },\n              {\n                \"description\": \"The time stamp of the last time that the lifecycle policy was run.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetLifecyclePolicyRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"GetLifecyclePolicyRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              { \"description\": \"The name of the repository.\" }\n            ]\n          }\n        }\n      },\n      \"GetLifecyclePolicyPreviewResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"lifecyclePolicyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyText\" },\n              { \"description\": \"The JSON lifecycle policy text.\" }\n            ]\n          },\n          \"status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyPreviewStatus\" },\n              {\n                \"description\": \"The status of the lifecycle policy preview request.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eGetLifecyclePolicyPreview\u003c/code\u003e request. When the results of a \u003ccode\u003eGetLifecyclePolicyPreview\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\"\n              }\n            ]\n          },\n          \"previewResults\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/LifecyclePolicyPreviewResultList\"\n              },\n              {\n                \"description\": \"The results of the lifecycle policy preview request.\"\n              }\n            ]\n          },\n          \"summary\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyPreviewSummary\" },\n              {\n                \"description\": \"The list of images that is returned as a result of the action.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetLifecyclePolicyPreviewRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"GetLifecyclePolicyPreviewRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              { \"description\": \"The name of the repository.\" }\n            ]\n          },\n          \"imageIds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageIdentifierList\" },\n              { \"description\": \"The list of imageIDs to be included.\" }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"The \u003ccode\u003enextToken\u003c/code\u003e value returned from a previous paginated\u0026#x2028; \u003ccode\u003eGetLifecyclePolicyPreviewRequest\u003c/code\u003e request where \u003ccode\u003emaxResults\u003c/code\u003e was used and the\u0026#x2028; results exceeded the value of that parameter. Pagination continues from the end of the\u0026#x2028; previous results that returned the \u003ccode\u003enextToken\u003c/code\u003e value. This value is\u0026#x2028; \u003ccode\u003enull\u003c/code\u003e when there are no more results to return. This option cannot be used when you specify images with \u003ccode\u003eimageIds\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"maxResults\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePreviewMaxResults\" },\n              {\n                \"description\": \"The maximum number of repository results returned by \u003ccode\u003eGetLifecyclePolicyPreviewRequest\u003c/code\u003e in\u0026#x2028; paginated output. When this parameter is used, \u003ccode\u003eGetLifecyclePolicyPreviewRequest\u003c/code\u003e only returns\u0026#x2028; \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e\u0026#x2028; response element. The remaining results of the initial request can be seen by sending\u0026#x2028; another \u003ccode\u003eGetLifecyclePolicyPreviewRequest\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e\u0026#x2028; value. This value can be between 1 and 1000. If this\u0026#x2028; parameter is not used, then \u003ccode\u003eGetLifecyclePolicyPreviewRequest\u003c/code\u003e returns up to\u0026#x2028; 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value, if\u0026#x2028; applicable. This option cannot be used when you specify images with \u003ccode\u003eimageIds\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"filter\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyPreviewFilter\" },\n              {\n                \"description\": \"An optional parameter that filters results based on image tag status and all tags, if tagged.\"\n              }\n            ]\n          }\n        }\n      },\n      \"LifecyclePolicyPreviewNotFoundException\": {},\n      \"GetRepositoryPolicyResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"policyText\": \"{\\n  \\\"Version\\\" : \\\"2008-10-17\\\",\\n  \\\"Statement\\\" : [ {\\n    \\\"Sid\\\" : \\\"new statement\\\",\\n    \\\"Effect\\\" : \\\"Allow\\\",\\n    \\\"Principal\\\" : {\\n     \\\"AWS\\\" : \\\"arn:aws:iam::012345678901:role/CodeDeployDemo\\\"\\n    },\\n\\\"Action\\\" : [ \\\"ecr:GetDownloadUrlForLayer\\\", \\\"ecr:BatchGetImage\\\", \\\"ecr:BatchCheckLayerAvailability\\\" ]\\n } ]\\n}\",\n          \"registryId\": \"012345678901\",\n          \"repositoryName\": \"ubuntu\"\n        },\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"policyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryPolicyText\" },\n              {\n                \"description\": \"The JSON repository policy text associated with the repository.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetRepositoryPolicyRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"GetRepositoryPolicyRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository with the policy to retrieve.\"\n              }\n            ]\n          }\n        }\n      },\n      \"InitiateLayerUploadResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"uploadId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/UploadId\" },\n              {\n                \"description\": \"The upload ID for the layer upload. This parameter is passed to further \u003ca\u003eUploadLayerPart\u003c/a\u003e and \u003ca\u003eCompleteLayerUpload\u003c/a\u003e operations.\"\n              }\n            ]\n          },\n          \"partSize\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PartSize\" },\n              {\n                \"description\": \"The size, in bytes, that Amazon ECR expects future layer part uploads to be.\"\n              }\n            ]\n          }\n        }\n      },\n      \"InitiateLayerUploadRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"InitiateLayerUploadRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry to which you intend to upload layers. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository to which you intend to upload layers.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ListImagesResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"imageIds\": [\n            {\n              \"imageDigest\": \"sha256:764f63476bdff6d83a09ba2a818f0d35757063724a9ac3ba5019c56f74ebf42a\",\n              \"imageTag\": \"precise\"\n            }\n          ]\n        },\n        \"properties\": {\n          \"imageIds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageIdentifierList\" },\n              {\n                \"description\": \"The list of image IDs for the requested repository.\"\n              }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"The \u003ccode\u003enextToken\u003c/code\u003e value to include in a future \u003ccode\u003eListImages\u003c/code\u003e request. When the results of a \u003ccode\u003eListImages\u003c/code\u003e request exceed \u003ccode\u003emaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ListImagesRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"ListImagesRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              { \"description\": \"The repository with image IDs to be listed.\" }\n            ]\n          },\n          \"nextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NextToken\" },\n              {\n                \"description\": \"\u003cp\u003eThe \u003ccode\u003enextToken\u003c/code\u003e value returned from a previous paginated \u003ccode\u003eListImages\u003c/code\u003e request where \u003ccode\u003emaxResults\u003c/code\u003e was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the \u003ccode\u003enextToken\u003c/code\u003e value. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"maxResults\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MaxResults\" },\n              {\n                \"description\": \"The maximum number of image results returned by \u003ccode\u003eListImages\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eListImages\u003c/code\u003e only returns \u003ccode\u003emaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003enextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eListImages\u003c/code\u003e request with the returned \u003ccode\u003enextToken\u003c/code\u003e value. This value can be between 1 and 1000. If this parameter is not used, then \u003ccode\u003eListImages\u003c/code\u003e returns up to 100 results and a \u003ccode\u003enextToken\u003c/code\u003e value, if applicable.\"\n              }\n            ]\n          },\n          \"filter\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ListImagesFilter\" },\n              {\n                \"description\": \"The filter key and value with which to filter your \u003ccode\u003eListImages\u003c/code\u003e results.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ListTagsForResourceResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagList\" },\n              { \"description\": \"The tags for the resource.\" }\n            ]\n          }\n        }\n      },\n      \"ListTagsForResourceRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"resourceArn\"],\n        \"title\": \"ListTagsForResourceRequest\",\n        \"properties\": {\n          \"resourceArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Arn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the only supported resource is an Amazon ECR repository.\"\n              }\n            ]\n          }\n        }\n      },\n      \"PutImageResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"image\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Image\" },\n              { \"description\": \"Details of the image uploaded.\" }\n            ]\n          }\n        }\n      },\n      \"PutImageRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"imageManifest\"],\n        \"title\": \"PutImageRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository in which to put the image.\"\n              }\n            ]\n          },\n          \"imageManifest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageManifest\" },\n              {\n                \"description\": \"The image manifest corresponding to the image to be uploaded.\"\n              }\n            ]\n          },\n          \"imageManifestMediaType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MediaType\" },\n              {\n                \"description\": \"The media type of the image manifest. If you push an image manifest that does not contain the \u003ccode\u003emediaType\u003c/code\u003e field, you must specify the \u003ccode\u003eimageManifestMediaType\u003c/code\u003e in the request.\"\n              }\n            ]\n          },\n          \"imageTag\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageTag\" },\n              {\n                \"description\": \"The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or Open Container Initiative (OCI) formats.\"\n              }\n            ]\n          },\n          \"imageDigest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageDigest\" },\n              {\n                \"description\": \"The image digest of the image manifest corresponding to the image.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ImageAlreadyExistsException\": {},\n      \"ReferencedImagesNotFoundException\": {},\n      \"ImageTagAlreadyExistsException\": {},\n      \"ImageDigestDoesNotMatchException\": {},\n      \"PutImageScanningConfigurationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"imageScanningConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageScanningConfiguration\" },\n              {\n                \"description\": \"The image scanning configuration setting for the repository.\"\n              }\n            ]\n          }\n        }\n      },\n      \"PutImageScanningConfigurationRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"imageScanningConfiguration\"],\n        \"title\": \"PutImageScanningConfigurationRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository in which to update the image scanning configuration setting. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository in which to update the image scanning configuration setting.\"\n              }\n            ]\n          },\n          \"imageScanningConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageScanningConfiguration\" },\n              {\n                \"description\": \"The image scanning configuration for the repository. This setting determines whether images are scanned for known vulnerabilities after being pushed to the repository.\"\n              }\n            ]\n          }\n        }\n      },\n      \"PutImageTagMutabilityResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"imageTagMutability\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageTagMutability\" },\n              {\n                \"description\": \"The image tag mutability setting for the repository.\"\n              }\n            ]\n          }\n        }\n      },\n      \"PutImageTagMutabilityRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"imageTagMutability\"],\n        \"title\": \"PutImageTagMutabilityRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository in which to update the image tag mutability settings. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository in which to update the image tag mutability settings.\"\n              }\n            ]\n          },\n          \"imageTagMutability\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageTagMutability\" },\n              {\n                \"description\": \"The tag mutability setting for the repository. If \u003ccode\u003eMUTABLE\u003c/code\u003e is specified, image tags can be overwritten. If \u003ccode\u003eIMMUTABLE\u003c/code\u003e is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.\"\n              }\n            ]\n          }\n        }\n      },\n      \"PutLifecyclePolicyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"lifecyclePolicyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyText\" },\n              { \"description\": \"The JSON repository policy text.\" }\n            ]\n          }\n        }\n      },\n      \"PutLifecyclePolicyRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"lifecyclePolicyText\"],\n        \"title\": \"PutLifecyclePolicyRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository. If you do\u0026#x2028; not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository to receive the policy.\"\n              }\n            ]\n          },\n          \"lifecyclePolicyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyText\" },\n              {\n                \"description\": \"The JSON repository policy text to apply to the repository.\"\n              }\n            ]\n          }\n        }\n      },\n      \"SetRepositoryPolicyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"policyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryPolicyText\" },\n              {\n                \"description\": \"The JSON repository policy text applied to the repository.\"\n              }\n            ]\n          }\n        }\n      },\n      \"SetRepositoryPolicyRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"policyText\"],\n        \"title\": \"SetRepositoryPolicyRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository to receive the policy.\"\n              }\n            ]\n          },\n          \"policyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryPolicyText\" },\n              {\n                \"description\": \"The JSON repository policy text to apply to the repository. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policy-examples.html\\\"\u003eAmazon ECR Repository Policies\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Registry User Guide\u003c/i\u003e.\"\n              }\n            ]\n          },\n          \"force\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ForceFlag\" },\n              {\n                \"description\": \"If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the \u003ca\u003eSetRepositoryPolicy\u003c/a\u003e operation. This is intended to prevent accidental repository lock outs.\"\n              }\n            ]\n          }\n        }\n      },\n      \"StartImageScanResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"imageId\": { \"$ref\": \"#/components/schemas/ImageIdentifier\" },\n          \"imageScanStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageScanStatus\" },\n              { \"description\": \"The current state of the scan.\" }\n            ]\n          }\n        }\n      },\n      \"StartImageScanRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\", \"imageId\"],\n        \"title\": \"StartImageScanRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository in which to start an image scan request. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository that contains the images to scan.\"\n              }\n            ]\n          },\n          \"imageId\": { \"$ref\": \"#/components/schemas/ImageIdentifier\" }\n        }\n      },\n      \"UnsupportedImageTypeException\": {},\n      \"StartLifecyclePolicyPreviewResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"lifecyclePolicyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyText\" },\n              { \"description\": \"The JSON repository policy text.\" }\n            ]\n          },\n          \"status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyPreviewStatus\" },\n              {\n                \"description\": \"The status of the lifecycle policy preview request.\"\n              }\n            ]\n          }\n        }\n      },\n      \"StartLifecyclePolicyPreviewRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"repositoryName\"],\n        \"title\": \"StartLifecyclePolicyPreviewRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              { \"description\": \"The name of the repository to be evaluated.\" }\n            ]\n          },\n          \"lifecyclePolicyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyText\" },\n              {\n                \"description\": \"The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.\"\n              }\n            ]\n          }\n        }\n      },\n      \"LifecyclePolicyPreviewInProgressException\": {},\n      \"TagResourceResponse\": { \"type\": \"object\", \"properties\": {} },\n      \"TagResourceRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"resourceArn\", \"tags\"],\n        \"title\": \"TagResourceRequest\",\n        \"properties\": {\n          \"resourceArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Arn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported resource is an Amazon ECR repository.\"\n              }\n            ]\n          },\n          \"tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagList\" },\n              {\n                \"description\": \"The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\"\n              }\n            ]\n          }\n        }\n      },\n      \"UntagResourceResponse\": { \"type\": \"object\", \"properties\": {} },\n      \"UntagResourceRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"resourceArn\", \"tagKeys\"],\n        \"title\": \"UntagResourceRequest\",\n        \"properties\": {\n          \"resourceArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Arn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported resource is an Amazon ECR repository.\"\n              }\n            ]\n          },\n          \"tagKeys\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagKeyList\" },\n              { \"description\": \"The keys of the tags to be removed.\" }\n            ]\n          }\n        }\n      },\n      \"UploadLayerPartResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The repository name associated with the request.\"\n              }\n            ]\n          },\n          \"uploadId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/UploadId\" },\n              { \"description\": \"The upload ID associated with the request.\" }\n            ]\n          },\n          \"lastByteReceived\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PartSize\" },\n              {\n                \"description\": \"The integer value of the last byte received in the request.\"\n              }\n            ]\n          }\n        }\n      },\n      \"UploadLayerPartRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"repositoryName\",\n          \"uploadId\",\n          \"partFirstByte\",\n          \"partLastByte\",\n          \"layerPartBlob\"\n        ],\n        \"title\": \"UploadLayerPartRequest\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository to which you are uploading layer parts.\"\n              }\n            ]\n          },\n          \"uploadId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/UploadId\" },\n              {\n                \"description\": \"The upload ID from a previous \u003ca\u003eInitiateLayerUpload\u003c/a\u003e operation to associate with the layer part upload.\"\n              }\n            ]\n          },\n          \"partFirstByte\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PartSize\" },\n              {\n                \"description\": \"The position of the first byte of the layer part witin the overall image layer.\"\n              }\n            ]\n          },\n          \"partLastByte\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PartSize\" },\n              {\n                \"description\": \"The position of the last byte of the layer part within the overall image layer.\"\n              }\n            ]\n          },\n          \"layerPartBlob\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerPartBlob\" },\n              { \"description\": \"The base64-encoded layer part payload.\" }\n            ]\n          }\n        }\n      },\n      \"InvalidLayerPartException\": {},\n      \"Arn\": { \"type\": \"string\" },\n      \"AttributeKey\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 128 },\n      \"AttributeValue\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 256 },\n      \"Attribute\": {\n        \"type\": \"object\",\n        \"required\": [\"key\"],\n        \"properties\": {\n          \"key\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AttributeKey\" },\n              { \"description\": \"The attribute key.\" }\n            ]\n          },\n          \"value\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AttributeValue\" },\n              { \"description\": \"The value assigned to the attribute key.\" }\n            ]\n          }\n        },\n        \"description\": \"This data type is used in the \u003ca\u003eImageScanFinding\u003c/a\u003e data type.\"\n      },\n      \"AttributeList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Attribute\" },\n        \"minItems\": 0,\n        \"maxItems\": 50\n      },\n      \"Base64\": { \"type\": \"string\", \"pattern\": \"^\\\\S+$\" },\n      \"ExpirationTimestamp\": { \"type\": \"string\", \"format\": \"date-time\" },\n      \"ProxyEndpoint\": { \"type\": \"string\" },\n      \"AuthorizationData\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"authorizationToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Base64\" },\n              {\n                \"description\": \"A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format \u003ccode\u003euser:password\u003c/code\u003e for private registry authentication using \u003ccode\u003edocker login\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"expiresAt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ExpirationTimestamp\" },\n              {\n                \"description\": \"The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.\"\n              }\n            ]\n          },\n          \"proxyEndpoint\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ProxyEndpoint\" },\n              {\n                \"description\": \"The registry URL to use for this authorization token in a \u003ccode\u003edocker login\u003c/code\u003e command. The Amazon ECR registry URL format is \u003ccode\u003ehttps://aws_account_id.dkr.ecr.region.amazonaws.com\u003c/code\u003e. For example, \u003ccode\u003ehttps://012345678910.dkr.ecr.us-east-1.amazonaws.com\u003c/code\u003e.. \"\n              }\n            ]\n          }\n        },\n        \"description\": \"An object representing authorization data for an Amazon ECR registry.\"\n      },\n      \"AuthorizationDataList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/AuthorizationData\" }\n      },\n      \"RegistryId\": { \"type\": \"string\", \"pattern\": \"[0-9]{12}\" },\n      \"RepositoryName\": {\n        \"type\": \"string\",\n        \"pattern\": \"(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*\",\n        \"minLength\": 2,\n        \"maxLength\": 256\n      },\n      \"BatchedOperationLayerDigestList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/BatchedOperationLayerDigest\" },\n        \"minItems\": 1,\n        \"maxItems\": 100\n      },\n      \"LayerList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Layer\" }\n      },\n      \"LayerFailureList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/LayerFailure\" }\n      },\n      \"ImageIdentifierList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/ImageIdentifier\" },\n        \"minItems\": 1,\n        \"maxItems\": 100\n      },\n      \"ImageFailureList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/ImageFailure\" }\n      },\n      \"MediaTypeList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/MediaType\" },\n        \"minItems\": 1,\n        \"maxItems\": 100\n      },\n      \"ImageList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Image\" }\n      },\n      \"BatchedOperationLayerDigest\": {\n        \"type\": \"string\",\n        \"minLength\": 0,\n        \"maxLength\": 1000\n      },\n      \"UploadId\": {\n        \"type\": \"string\",\n        \"pattern\": \"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\"\n      },\n      \"LayerDigestList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/LayerDigest\" },\n        \"minItems\": 1,\n        \"maxItems\": 100\n      },\n      \"LayerDigest\": {\n        \"type\": \"string\",\n        \"pattern\": \"[a-zA-Z0-9-_+.]+:[a-fA-F0-9]+\"\n      },\n      \"TagList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Tag\" }\n      },\n      \"ImageTagMutability\": {\n        \"type\": \"string\",\n        \"enum\": [\"MUTABLE\", \"IMMUTABLE\"]\n      },\n      \"ImageScanningConfiguration\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"scanOnPush\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ScanOnPushFlag\" },\n              {\n                \"description\": \"The setting that determines whether images are scanned after being pushed to a repository. If set to \u003ccode\u003etrue\u003c/code\u003e, images will be scanned after being pushed. If this parameter is not specified, it will default to \u003ccode\u003efalse\u003c/code\u003e and images will not be scanned unless a scan is manually started with the \u003ca\u003eStartImageScan\u003c/a\u003e API.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"The image scanning configuration for a repository.\"\n      },\n      \"EncryptionConfiguration\": {\n        \"type\": \"object\",\n        \"required\": [\"encryptionType\"],\n        \"properties\": {\n          \"encryptionType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/EncryptionType\" },\n              {\n                \"description\": \"\u003cp\u003eThe encryption type to use.\u003c/p\u003e \u003cp\u003eIf you use the \u003ccode\u003eKMS\u003c/code\u003e encryption type, the contents of the repository will be encrypted using server-side encryption with customer master keys (CMKs) stored in AWS KMS. When you use AWS KMS to encrypt your data, you can either use the default AWS managed CMK for Amazon ECR, or specify your own CMK, which you already created. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\\\"\u003eProtecting Data Using Server-Side Encryption with CMKs Stored in AWS Key Management Service (SSE-KMS)\u003c/a\u003e in the \u003ci\u003eAmazon Simple Storage Service Console Developer Guide.\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf you use the \u003ccode\u003eAES256\u003c/code\u003e encryption type, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an AES-256 encryption algorithm. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\\\"\u003eProtecting Data Using Server-Side Encryption with Amazon S3-Managed Encryption Keys (SSE-S3)\u003c/a\u003e in the \u003ci\u003eAmazon Simple Storage Service Console Developer Guide.\u003c/i\u003e.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"kmsKey\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/KmsKey\" },\n              {\n                \"description\": \"If you use the \u003ccode\u003eKMS\u003c/code\u003e encryption type, specify the CMK to use for encryption. The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If no key is specified, the default AWS managed CMK for Amazon ECR will be used.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"\u003cp\u003eThe encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.\u003c/p\u003e \u003cp\u003eBy default, when no encryption configuration is set or the \u003ccode\u003eAES256\u003c/code\u003e encryption type is used, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts your data at rest using an AES-256 encryption algorithm. This does not require any action on your part.\u003c/p\u003e \u003cp\u003eFor more control over the encryption of the contents of your repository, you can use server-side encryption with customer master keys (CMKs) stored in AWS Key Management Service (AWS KMS) to encrypt your images. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html\\\"\u003eAmazon ECR encryption at rest\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Registry User Guide\u003c/i\u003e.\u003c/p\u003e\"\n      },\n      \"Repository\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"repositoryArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Arn\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the \u003ccode\u003earn:aws:ecr\u003c/code\u003e namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, \u003ccode\u003earn:aws:ecr:region:012345678910:repository/test\u003c/code\u003e.\"\n              }\n            ]\n          },\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry that contains the repository.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              { \"description\": \"The name of the repository.\" }\n            ]\n          },\n          \"repositoryUri\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Url\" },\n              {\n                \"description\": \"The URI for the repository. You can use this URI for container image \u003ccode\u003epush\u003c/code\u003e and \u003ccode\u003epull\u003c/code\u003e operations.\"\n              }\n            ]\n          },\n          \"createdAt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CreationTimestamp\" },\n              {\n                \"description\": \"The date and time, in JavaScript date format, when the repository was created.\"\n              }\n            ]\n          },\n          \"imageTagMutability\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageTagMutability\" },\n              {\n                \"description\": \"The tag mutability setting for the repository.\"\n              }\n            ]\n          },\n          \"imageScanningConfiguration\": {\n            \"$ref\": \"#/components/schemas/ImageScanningConfiguration\"\n          },\n          \"encryptionConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/EncryptionConfiguration\" },\n              {\n                \"description\": \"The encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"An object representing a repository.\"\n      },\n      \"CreationTimestamp\": { \"type\": \"string\", \"format\": \"date-time\" },\n      \"LifecyclePolicyText\": {\n        \"type\": \"string\",\n        \"minLength\": 100,\n        \"maxLength\": 30720\n      },\n      \"EvaluationTimestamp\": { \"type\": \"string\", \"format\": \"date-time\" },\n      \"RepositoryPolicyText\": {\n        \"type\": \"string\",\n        \"minLength\": 0,\n        \"maxLength\": 10240\n      },\n      \"ForceFlag\": { \"type\": \"boolean\" },\n      \"ImageIdentifier\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"imageDigest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageDigest\" },\n              {\n                \"description\": \"The \u003ccode\u003esha256\u003c/code\u003e digest of the image manifest.\"\n              }\n            ]\n          },\n          \"imageTag\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageTag\" },\n              { \"description\": \"The tag used for the image.\" }\n            ]\n          }\n        },\n        \"description\": \"An object with identifying information for an Amazon ECR image.\"\n      },\n      \"NextToken\": { \"type\": \"string\" },\n      \"MaxResults\": { \"type\": \"integer\", \"minimum\": 1, \"maximum\": 1000 },\n      \"ImageScanStatus\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ScanStatus\" },\n              { \"description\": \"The current state of an image scan.\" }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ScanStatusDescription\" },\n              { \"description\": \"The description of the image scan status.\" }\n            ]\n          }\n        },\n        \"description\": \"The current status of an image scan.\"\n      },\n      \"ImageScanFindings\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"imageScanCompletedAt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ScanTimestamp\" },\n              { \"description\": \"The time of the last completed image scan.\" }\n            ]\n          },\n          \"vulnerabilitySourceUpdatedAt\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/VulnerabilitySourceUpdateTimestamp\"\n              },\n              {\n                \"description\": \"The time when the vulnerability data was last scanned.\"\n              }\n            ]\n          },\n          \"findings\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageScanFindingList\" },\n              { \"description\": \"The findings from the image scan.\" }\n            ]\n          },\n          \"findingSeverityCounts\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FindingSeverityCounts\" },\n              {\n                \"description\": \"The image vulnerability counts, sorted by severity.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"The details of an image scan.\"\n      },\n      \"TagStatus\": { \"type\": \"string\", \"enum\": [\"TAGGED\", \"UNTAGGED\", \"ANY\"] },\n      \"DescribeImagesFilter\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tagStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagStatus\" },\n              {\n                \"description\": \"The tag status with which to filter your \u003ca\u003eDescribeImages\u003c/a\u003e results. You can filter results based on whether they are \u003ccode\u003eTAGGED\u003c/code\u003e or \u003ccode\u003eUNTAGGED\u003c/code\u003e.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"An object representing a filter on a \u003ca\u003eDescribeImages\u003c/a\u003e operation.\"\n      },\n      \"ImageDetailList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/ImageDetail\" }\n      },\n      \"RepositoryNameList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/RepositoryName\" },\n        \"minItems\": 1,\n        \"maxItems\": 100\n      },\n      \"RepositoryList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Repository\" }\n      },\n      \"EncryptionType\": { \"type\": \"string\", \"enum\": [\"AES256\", \"KMS\"] },\n      \"KmsKey\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 2048 },\n      \"FindingDescription\": { \"type\": \"string\" },\n      \"FindingName\": { \"type\": \"string\" },\n      \"FindingSeverity\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"INFORMATIONAL\",\n          \"LOW\",\n          \"MEDIUM\",\n          \"HIGH\",\n          \"CRITICAL\",\n          \"UNDEFINED\"\n        ]\n      },\n      \"SeverityCount\": { \"type\": \"integer\", \"minimum\": 0 },\n      \"FindingSeverityCounts\": {\n        \"type\": \"object\",\n        \"additionalProperties\": { \"$ref\": \"#/components/schemas/SeverityCount\" }\n      },\n      \"GetAuthorizationTokenRegistryIdList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/RegistryId\" },\n        \"minItems\": 1,\n        \"maxItems\": 10\n      },\n      \"Url\": { \"type\": \"string\" },\n      \"LifecyclePreviewMaxResults\": {\n        \"type\": \"integer\",\n        \"minimum\": 1,\n        \"maximum\": 100\n      },\n      \"LifecyclePolicyPreviewFilter\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tagStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagStatus\" },\n              { \"description\": \"The tag status of the image.\" }\n            ]\n          }\n        },\n        \"description\": \"The filter for the lifecycle policy preview.\"\n      },\n      \"LifecyclePolicyPreviewStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\"IN_PROGRESS\", \"COMPLETE\", \"EXPIRED\", \"FAILED\"]\n      },\n      \"LifecyclePolicyPreviewResultList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/LifecyclePolicyPreviewResult\" }\n      },\n      \"LifecyclePolicyPreviewSummary\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"expiringImageTotalCount\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageCount\" },\n              { \"description\": \"The number of expiring images.\" }\n            ]\n          }\n        },\n        \"description\": \"The summary of the lifecycle policy preview request.\"\n      },\n      \"ImageManifest\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 4194304\n      },\n      \"MediaType\": { \"type\": \"string\" },\n      \"Image\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry containing the image.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository associated with the image.\"\n              }\n            ]\n          },\n          \"imageId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageIdentifier\" },\n              {\n                \"description\": \"An object containing the image tag and image digest associated with an image.\"\n              }\n            ]\n          },\n          \"imageManifest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageManifest\" },\n              { \"description\": \"The image manifest associated with the image.\" }\n            ]\n          },\n          \"imageManifestMediaType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MediaType\" },\n              { \"description\": \"The manifest media type of the image.\" }\n            ]\n          }\n        },\n        \"description\": \"An object representing an Amazon ECR image.\"\n      },\n      \"ImageActionType\": { \"type\": \"string\", \"enum\": [\"EXPIRE\"] },\n      \"ImageCount\": { \"type\": \"integer\", \"minimum\": 0 },\n      \"ImageDigest\": { \"type\": \"string\" },\n      \"ImageTagList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/ImageTag\" }\n      },\n      \"ImageSizeInBytes\": { \"type\": \"integer\" },\n      \"PushTimestamp\": { \"type\": \"string\", \"format\": \"date-time\" },\n      \"ImageScanFindingsSummary\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"imageScanCompletedAt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ScanTimestamp\" },\n              { \"description\": \"The time of the last completed image scan.\" }\n            ]\n          },\n          \"vulnerabilitySourceUpdatedAt\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/VulnerabilitySourceUpdateTimestamp\"\n              },\n              {\n                \"description\": \"The time when the vulnerability data was last scanned.\"\n              }\n            ]\n          },\n          \"findingSeverityCounts\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FindingSeverityCounts\" },\n              {\n                \"description\": \"The image vulnerability counts, sorted by severity.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"A summary of the last completed image scan.\"\n      },\n      \"ImageDetail\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The AWS account ID associated with the registry to which this image belongs.\"\n              }\n            ]\n          },\n          \"repositoryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RepositoryName\" },\n              {\n                \"description\": \"The name of the repository to which this image belongs.\"\n              }\n            ]\n          },\n          \"imageDigest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageDigest\" },\n              {\n                \"description\": \"The \u003ccode\u003esha256\u003c/code\u003e digest of the image manifest.\"\n              }\n            ]\n          },\n          \"imageTags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageTagList\" },\n              { \"description\": \"The list of tags associated with this image.\" }\n            ]\n          },\n          \"imageSizeInBytes\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageSizeInBytes\" },\n              {\n                \"description\": \"\u003cp\u003eThe size, in bytes, of the image in the repository.\u003c/p\u003e \u003cp\u003eIf the image is a manifest list, this will be the max size of all manifests in the list.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eBeginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the \u003ccode\u003edocker images\u003c/code\u003e command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by \u003ca\u003eDescribeImages\u003c/a\u003e.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"imagePushedAt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PushTimestamp\" },\n              {\n                \"description\": \"The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. \"\n              }\n            ]\n          },\n          \"imageScanStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageScanStatus\" },\n              { \"description\": \"The current state of the scan.\" }\n            ]\n          },\n          \"imageScanFindingsSummary\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageScanFindingsSummary\" },\n              { \"description\": \"A summary of the last completed image scan.\" }\n            ]\n          },\n          \"imageManifestMediaType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MediaType\" },\n              { \"description\": \"The media type of the image manifest.\" }\n            ]\n          },\n          \"artifactMediaType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MediaType\" },\n              { \"description\": \"The artifact media type of the image.\" }\n            ]\n          }\n        },\n        \"description\": \"An object that describes an image returned by a \u003ca\u003eDescribeImages\u003c/a\u003e operation.\"\n      },\n      \"ImageFailureCode\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"InvalidImageDigest\",\n          \"InvalidImageTag\",\n          \"ImageTagDoesNotMatchDigest\",\n          \"ImageNotFound\",\n          \"MissingDigestAndTag\",\n          \"ImageReferencedByManifestList\",\n          \"KmsError\"\n        ]\n      },\n      \"ImageFailureReason\": { \"type\": \"string\" },\n      \"ImageFailure\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"imageId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageIdentifier\" },\n              { \"description\": \"The image ID associated with the failure.\" }\n            ]\n          },\n          \"failureCode\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageFailureCode\" },\n              { \"description\": \"The code associated with the failure.\" }\n            ]\n          },\n          \"failureReason\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageFailureReason\" },\n              { \"description\": \"The reason for the failure.\" }\n            ]\n          }\n        },\n        \"description\": \"An object representing an Amazon ECR image failure.\"\n      },\n      \"ImageTag\": { \"type\": \"string\", \"minLength\": 1, \"maxLength\": 300 },\n      \"ImageScanFinding\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FindingName\" },\n              {\n                \"description\": \"The name associated with the finding, usually a CVE number.\"\n              }\n            ]\n          },\n          \"description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FindingDescription\" },\n              { \"description\": \"The description of the finding.\" }\n            ]\n          },\n          \"uri\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Url\" },\n              {\n                \"description\": \"A link containing additional details about the security vulnerability.\"\n              }\n            ]\n          },\n          \"severity\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FindingSeverity\" },\n              { \"description\": \"The finding severity.\" }\n            ]\n          },\n          \"attributes\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AttributeList\" },\n              {\n                \"description\": \"A collection of attributes of the host from which the finding is generated.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Contains information about an image scan finding.\"\n      },\n      \"ImageScanFindingList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/ImageScanFinding\" }\n      },\n      \"ScanTimestamp\": { \"type\": \"string\", \"format\": \"date-time\" },\n      \"VulnerabilitySourceUpdateTimestamp\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\"\n      },\n      \"ScanStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\"IN_PROGRESS\", \"COMPLETE\", \"FAILED\"]\n      },\n      \"ScanStatusDescription\": { \"type\": \"string\" },\n      \"ScanOnPushFlag\": { \"type\": \"boolean\" },\n      \"PartSize\": { \"type\": \"integer\", \"minimum\": 0 },\n      \"LayerAvailability\": {\n        \"type\": \"string\",\n        \"enum\": [\"AVAILABLE\", \"UNAVAILABLE\"]\n      },\n      \"LayerSizeInBytes\": { \"type\": \"integer\" },\n      \"Layer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"layerDigest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerDigest\" },\n              {\n                \"description\": \"The \u003ccode\u003esha256\u003c/code\u003e digest of the image layer.\"\n              }\n            ]\n          },\n          \"layerAvailability\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerAvailability\" },\n              { \"description\": \"The availability status of the image layer.\" }\n            ]\n          },\n          \"layerSize\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerSizeInBytes\" },\n              { \"description\": \"The size, in bytes, of the image layer.\" }\n            ]\n          },\n          \"mediaType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/MediaType\" },\n              {\n                \"description\": \"The media type of the layer, such as \u003ccode\u003eapplication/vnd.docker.image.rootfs.diff.tar.gzip\u003c/code\u003e or \u003ccode\u003eapplication/vnd.oci.image.layer.v1.tar+gzip\u003c/code\u003e.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"An object representing an Amazon ECR image layer.\"\n      },\n      \"LayerFailureCode\": {\n        \"type\": \"string\",\n        \"enum\": [\"InvalidLayerDigest\", \"MissingLayerDigest\"]\n      },\n      \"LayerFailureReason\": { \"type\": \"string\" },\n      \"LayerFailure\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"layerDigest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/BatchedOperationLayerDigest\" },\n              { \"description\": \"The layer digest associated with the failure.\" }\n            ]\n          },\n          \"failureCode\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerFailureCode\" },\n              { \"description\": \"The failure code associated with the failure.\" }\n            ]\n          },\n          \"failureReason\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LayerFailureReason\" },\n              { \"description\": \"The reason for the failure.\" }\n            ]\n          }\n        },\n        \"description\": \"An object representing an Amazon ECR image layer failure.\"\n      },\n      \"LayerPartBlob\": {\n        \"type\": \"string\",\n        \"minLength\": 0,\n        \"maxLength\": 20971520\n      },\n      \"LifecyclePolicyRuleAction\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageActionType\" },\n              { \"description\": \"The type of action to be taken.\" }\n            ]\n          }\n        },\n        \"description\": \"The type of action to be taken.\"\n      },\n      \"LifecyclePolicyRulePriority\": { \"type\": \"integer\", \"minimum\": 1 },\n      \"LifecyclePolicyPreviewResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"imageTags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageTagList\" },\n              { \"description\": \"The list of tags associated with this image.\" }\n            ]\n          },\n          \"imageDigest\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ImageDigest\" },\n              {\n                \"description\": \"The \u003ccode\u003esha256\u003c/code\u003e digest of the image manifest.\"\n              }\n            ]\n          },\n          \"imagePushedAt\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/PushTimestamp\" },\n              {\n                \"description\": \"The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.\"\n              }\n            ]\n          },\n          \"action\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyRuleAction\" },\n              { \"description\": \"The type of action to be taken.\" }\n            ]\n          },\n          \"appliedRulePriority\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/LifecyclePolicyRulePriority\" },\n              { \"description\": \"The priority of the applied rule.\" }\n            ]\n          }\n        },\n        \"description\": \"The result of the lifecycle policy preview.\"\n      },\n      \"ListImagesFilter\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tagStatus\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagStatus\" },\n              {\n                \"description\": \"The tag status with which to filter your \u003ca\u003eListImages\u003c/a\u003e results. You can filter results based on whether they are \u003ccode\u003eTAGGED\u003c/code\u003e or \u003ccode\u003eUNTAGGED\u003c/code\u003e.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"An object representing a filter on a \u003ca\u003eListImages\u003c/a\u003e operation.\"\n      },\n      \"TagKey\": { \"type\": \"string\" },\n      \"TagValue\": { \"type\": \"string\" },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Key\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagKey\" },\n              {\n                \"description\": \"One part of a key-value pair that make up a tag. A \u003ccode\u003ekey\u003c/code\u003e is a general label that acts like a category for more specific tag values.\"\n              }\n            ]\n          },\n          \"Value\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/TagValue\" },\n              {\n                \"description\": \"The optional part of a key-value pair that make up a tag. A \u003ccode\u003evalue\u003c/code\u003e acts as a descriptor within a tag category (key).\"\n              }\n            ]\n          }\n        },\n        \"description\": \"The metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.\"\n      },\n      \"TagKeyList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/TagKey\" }\n      },\n      \"DeleteRegistryPolicyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID associated with the request.\" }\n            ]\n          },\n          \"policyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryPolicyText\" },\n              {\n                \"description\": \"The contents of the registry permissions policy that was deleted.\"\n              }\n            ]\n          }\n        }\n      },\n      \"DeleteRegistryPolicyRequest\": {\n        \"type\": \"object\",\n        \"title\": \"DeleteRegistryPolicyRequest\",\n        \"properties\": {}\n      },\n      \"RegistryPolicyNotFoundException\": {},\n      \"DescribeRegistryResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The ID of the registry.\" }\n            ]\n          },\n          \"replicationConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ReplicationConfiguration\" },\n              {\n                \"description\": \"The replication configuration for the registry.\"\n              }\n            ]\n          }\n        }\n      },\n      \"DescribeRegistryRequest\": {\n        \"type\": \"object\",\n        \"title\": \"DescribeRegistryRequest\",\n        \"properties\": {}\n      },\n      \"ValidationException\": {},\n      \"GetRegistryPolicyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The ID of the registry.\" }\n            ]\n          },\n          \"policyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryPolicyText\" },\n              {\n                \"description\": \"The JSON text of the permissions policy for a registry.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetRegistryPolicyRequest\": {\n        \"type\": \"object\",\n        \"title\": \"GetRegistryPolicyRequest\",\n        \"properties\": {}\n      },\n      \"PutRegistryPolicyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              { \"description\": \"The registry ID.\" }\n            ]\n          },\n          \"policyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryPolicyText\" },\n              { \"description\": \"The JSON policy text for your registry.\" }\n            ]\n          }\n        }\n      },\n      \"PutRegistryPolicyRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"policyText\"],\n        \"title\": \"PutRegistryPolicyRequest\",\n        \"properties\": {\n          \"policyText\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryPolicyText\" },\n              {\n                \"description\": \"The JSON policy text to apply to your registry. The policy text follows the same format as IAM policy text. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html\\\"\u003eRegistry permissions\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Container Registry User Guide\u003c/i\u003e.\"\n              }\n            ]\n          }\n        }\n      },\n      \"PutReplicationConfigurationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"replicationConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ReplicationConfiguration\" },\n              {\n                \"description\": \"The contents of the replication configuration for the registry.\"\n              }\n            ]\n          }\n        }\n      },\n      \"PutReplicationConfigurationRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"replicationConfiguration\"],\n        \"title\": \"PutReplicationConfigurationRequest\",\n        \"properties\": {\n          \"replicationConfiguration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ReplicationConfiguration\" },\n              {\n                \"description\": \"An object representing the replication configuration for a registry.\"\n              }\n            ]\n          }\n        }\n      },\n      \"RegistryPolicyText\": {\n        \"type\": \"string\",\n        \"minLength\": 0,\n        \"maxLength\": 10240\n      },\n      \"ReplicationConfiguration\": {\n        \"type\": \"object\",\n        \"required\": [\"rules\"],\n        \"properties\": {\n          \"rules\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ReplicationRuleList\" },\n              {\n                \"description\": \"An array of objects representing the replication rules for a replication configuration. A replication configuration may contain only one replication rule but the rule may contain one or more replication destinations.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"The replication configuration for a registry.\"\n      },\n      \"Region\": {\n        \"type\": \"string\",\n        \"pattern\": \"[0-9a-z-]{2,25}\",\n        \"minLength\": 2,\n        \"maxLength\": 25\n      },\n      \"ReplicationRuleList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/ReplicationRule\" },\n        \"minItems\": 0,\n        \"maxItems\": 1\n      },\n      \"ReplicationDestination\": {\n        \"type\": \"object\",\n        \"required\": [\"region\", \"registryId\"],\n        \"properties\": {\n          \"region\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Region\" },\n              { \"description\": \"A Region to replicate to.\" }\n            ]\n          },\n          \"registryId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/RegistryId\" },\n              {\n                \"description\": \"The account ID of the destination registry to replicate to.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"An array of objects representing the details of a replication destination.\"\n      },\n      \"ReplicationDestinationList\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/ReplicationDestination\" },\n        \"minItems\": 0,\n        \"maxItems\": 25\n      },\n      \"ReplicationRule\": {\n        \"type\": \"object\",\n        \"required\": [\"destinations\"],\n        \"properties\": {\n          \"destinations\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/ReplicationDestinationList\" },\n              {\n                \"description\": \"An array of objects representing the details of a replication destination.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"An array of objects representing the replication destinations for a replication configuration. A replication configuration may contain only one replication rule but the rule may contain one or more replication destinations.\"\n      }\n    }\n  },\n  \"security\": [{ \"hmac\": [] }],\n  \"x-metadata\": {\n    \"apiVersion\": \"2015-09-21\",\n    \"endpointPrefix\": \"api.ecr\",\n    \"jsonVersion\": \"1.1\",\n    \"protocol\": \"json\",\n    \"serviceAbbreviation\": \"Amazon ECR\",\n    \"serviceFullName\": \"Amazon EC2 Container Registry\",\n    \"serviceId\": \"ECR\",\n    \"signatureVersion\": \"v4\",\n    \"signingName\": \"ecr\",\n    \"targetPrefix\": \"AmazonEC2ContainerRegistry_V20150921\",\n    \"uid\": \"ecr-2015-09-21\"\n  }\n}\n",
			"canonicalURL": "/github.com/chainjet/platform@e2f11798433d537a6d63c18ac444f6b6e5360bb2/-/blob/schemas/openapi3/aws-api-ecr-2015-09-21.json",
			"externalURLs": [
				{
					"url": "https://github.com/chainjet/platform/blob/e2f11798433d537a6d63c18ac444f6b6e5360bb2/schemas/openapi3/aws-api-ecr-2015-09-21.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/\": post: requestBody: contents: media: \"application/json\": generate schema: field registryId: allOf: schema type mismatch: string and "
}