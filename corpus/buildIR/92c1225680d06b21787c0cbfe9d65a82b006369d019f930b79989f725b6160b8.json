{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/prisma.pan.dev"
		},
		"file": {
			"name": "IacScan.yaml",
			"size": 0,
			"path": "static/oas/cspm/IacScan.yaml",
			"byteSize": 35644,
			"content": "openapi: 3.0.0\ninfo:\n  title: IaC Scan API V2 Overview\n  description: |\n\n    **Note: This API is deprecated.**\n\n    The Infrastructure-As-Code (IaC) scan service receives and assesses customer IaC resources.\n    With IaC Scan API V2, you can initiate IaC scans asynchronously to evaluate your templates against\n    Prisma Cloud policies and integrate your IaC scan results with Prisma Cloud. The basic steps to run an IaC scan\n    job in Prisma Cloud are as follows:\n\n    1. Create an IaC scan asset in Prisma Cloud with [Add Scan Asset](/api/cloud/cspm/iac-scan#operation/startAsyncScan).\n    2. Use the presigned URL from the IaC scan asset creation response to upload the templates to be scanned for evaluation.\n    3. Use the scan ID from the IaC scan asset creation response with [Initiate Scan Job](/api/cloud/cspm/iac-scan#operation/triggerAsyncScan) to start an asynchronous job to perform a scan of your uploaded templates.\n    4. You can query your job status with [Get Scan Job Status](/api/cloud/cspm/iac-scan#operation/getAsyncScanStatus).\n    5. Once the job has successfully completed, you can request the results with [Get Scan Result Details](/api/cloud/cspm/iac-scan#operation/getScanResult).\n\n    The IaC scan API V2 is [JSON:API](https://jsonapi.org/) compliant.\n\n    **Note:** The IaC scan API V2 is not available at https://api.uk.prismacloud.io.\n\n    For more information about the IaC scan API, see [Use the Prisma Cloud IaC Scan REST API](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/prisma-cloud-devops-security/use-the-prisma-cloud-iac-scan-rest-api.html).\n\n    ### Error Handling\n\n    As with other Prisma Cloud public API requests, the IaC scan API V2 requests return standard HTTP response\n    codes. In addition, in an error response, the IaC scan API V2 requests return details about the error\n    in an array of objects in the response object. The following table lists the properties of a single object in\n    the array.\n\n    Property  | Type | Description\n    -----------| ---- | -----------\n    errors | array of objects | List of error details\n    error.status | string | HTTP status code\n    error.code | string  | Appication-specific error code\n    error.detail | string  | Detailed description of error\n    error.source | string  | The part of the request document that caused the error\n  version: Latest\n  contact: {}\nservers:\n- url: https://api.prismacloud.io\nsecurity:\n- x-redlock-auth: []\ntags:\n- description: The Asyncronous Scan APIs enable you to invoke IaC Scans.\n  name: Async Scan\n- description: The IaC Scan Asset Inventory Dashboard APIs enable you to access IaC Scan results.\n  name: Asset Inventory\npaths:\n  /iac/v2/scans:\n    get:\n      deprecated: true\n      tags:\n      - Asset Inventory\n      summary: List IaC Scans\n      description: (JSON:API) Returns a list of IaC scans that meet the given conditions.\n      operationId: getScans\n      parameters:\n      - in: query\n        name: filter\n        style: deepObject\n        explode: true\n        description: |\n          Filters for scan results.\n\n          You can apply a time filter by specifying a **timeType**. Only certain **timeUnit**,\n          **startTime**, **endTime** query parameters apply to certain **timeType** values.\n          The table below lists the time-related parameters that are\n          both valid and required, for each **timeType** parameter.\n\n          timeType  | Valid and Required Time Parameters\n          -----------| ----\n          **to_now** | **timeUnit** where \u003cbr/\u003elogin=from last login\u003cbr/\u003eepoch=from account onboarding\u003cbr/\u003eday=from start of day\u003cbr/\u003eweek=from start of week\u003cbr/\u003emonth=from start of month\u003cbr/\u003eyear=from start of year\n          **absolute** | **startTime**\u003cbr/\u003e**endTime**\n          **relative** | **timeUnit** hour, day, week, month, year\u003cbr/\u003e**timeAmount**\n        schema:\n          $ref: '#/components/schemas/JsonApiModelFilterParameters'\n      - in: query\n        name: groupBy\n        schema:\n          type: string\n          description: Aggregate scan results by group of [assetType, assetName, resourceList]\n          enum:\n          - assetType\n          - assetName\n          - resourceList\n      - in: query\n        name: page\n        style: deepObject\n        explode: true\n        description: Pagination parameters\n        schema:\n          type: object\n          title: JsonApiModelPage\n          properties:\n            size:\n              type: integer\n              example: 10\n            number:\n              type: integer\n              example: 2\n      - in: query\n        name: sort\n        schema:\n          description: Sorting parameters. The sort order is ascending unless the field\n            is prefixed with minus (-), in which case it is descending\n          type: string\n          example: -assetName\n      responses:\n        '200':\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                title: JsonApiModelScansResponse\n                type: object\n                required:\n                - meta\n                - data\n                properties:\n                  meta:\n                    type: object\n                    properties:\n                      pass:\n                        description: Total number of passed scans\n                        type: integer\n                        format: int64\n                        example: 100\n                      fail:\n                        description: Total number of failed scans\n                        type: integer\n                        format: int64\n                        example: 10\n                      all:\n                        description: Total number of scans in the table view\n                        type: integer\n                        format: int64\n                        example: 100\n                      matchedPoliciesSummary:\n                        $ref: '#/components/schemas/IacMatchedPoliciesSummary'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/JsonApiModelScanTableData'\n                  links:\n                    type: object\n                    properties:\n                      self:\n                        type: string\n                        format: url\n                        # example: /scans?timeType=to_now\u0026filter[resourceList]=prisma-devops\u0026page[size]=10\u0026page[number]=3\n                      first:\n                        type: string\n                        format: url\n                        # example: /scans?timeType=to_now\u0026filter[resourceList]=prisma-devops\u0026page[size]=10\u0026page[number]=1\n                      prev:\n                        type: string\n                        format: url\n                        # example: /scans?timeType=to_now\u0026filter[resourceList]=prisma-devops\u0026page[size]=10\u0026page[number]=2\n                      next:\n                        type: string\n                        format: url\n                        # example: /scans?timeType=to_now\u0026filter[resourceList]=prisma-devops\u0026page[size]=10\u0026page[number]=4\n                      last:\n                        type: string\n                        format: url\n                        # example: /scans?timeType=to_now\u0026filter[resourceList]=prisma-devops\u0026page[size]=10\u0026page[number]=256\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '500':\n          $ref: '#/components/responses/ErrorResponse'\n    post:\n      deprecated: true\n      tags:\n      - Async Scan\n      summary: Add Scan Asset\n      description: (JSON:API) Creates a new asynchronous scan asset in Prisma Cloud.\n        This creation is the first step in running an asynchronous IaC scan.\n      operationId: startAsyncScan\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/JsonApiModelAsyncScanRequest'\n      responses:\n        '201':\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JsonApiModelAsyncScanSession'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '500':\n          $ref: '#/components/responses/ErrorResponse'\n  /iac/v2/scans/{scanId}:\n    post:\n      deprecated: true\n      tags:\n      - Async Scan\n      summary: Initiate Scan Job\n      description: |\n        (JSON:API) Initiates an asynchronous scan job. Before making this\n        request, you must use the presigned URL from your scan asset to upload your\n        file to be scanned. \n        \n        After you've created an IaC scan asset in Prisma Cloud but before you initiate an \n        IaC scan job, you must upload the template(s) to be scanned, to the presigned URL \n        from the response object of your scan asset creation request. An example of a curl \n        command to upload a file is:\n        ```\n        curl -v -X PUT '\u003cpresigned URL\u003e' -T \u003cfile name of file to be uploaded\u003e\n        ```\n\n        See [Use the Prisma Cloud IaC Scan REST API](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/prisma-cloud-devops-security/use-the-prisma-cloud-iac-scan-rest-api.html) for more details.\n      operationId: triggerAsyncScan\n      parameters:\n      - in: path\n        name: scanId\n        required: true\n        description: Scan UUID\n        schema:\n          type: string\n          format: uuid\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              $ref: '#/components/schemas/JsonApiModelScanTrigger'\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '500':\n          $ref: '#/components/responses/ErrorResponse'\n  /iac/v2/scans/{scanId}/status:\n    get:\n      deprecated: true\n      tags:\n      - Async Scan\n      summary: Get Scan Job Status\n      description: (JSON:API) Returns the status of the asynchronous IaC scan job\n        that has the specified scan ID.\n      operationId: getAsyncScanStatus\n      parameters:\n      - in: path\n        name: scanId\n        required: true\n        description: Scan UUID\n        schema:\n          type: string\n          format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/JsonApiModelScanStatusResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '500':\n          $ref: '#/components/responses/ErrorResponse'\n  /iac/v2/scans/{scanId}/results:\n    get:\n      deprecated: true\n      tags:\n      - Asset Inventory\n      summary: Get Scan Result Details\n      description: (JSON:API) Returns scan result details for the completed scan that\n        has the specified scan ID.\n      operationId: getScanResult\n      parameters:\n      - in: path\n        name: scanId\n        description: Scan UUID\n        schema:\n          type: string\n          format: uuid\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/vnd.api+json:\n              schema:\n                title: JsonApiModelScanDetails\n                type: object\n                required:\n                - meta\n                - data\n                properties:\n                  meta:\n                    type: object\n                    properties:\n                      matchedPoliciesSummary:\n                        $ref: '#/components/schemas/IacMatchedPoliciesSummary'\n                      errorDetails:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/IacApiError'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/IacPolicyViolation'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '500':\n          $ref: '#/components/responses/ErrorResponse'\n  /iac/v2/scans/{scanId}/results/sarif:\n    get:\n      deprecated: true\n      tags:\n      - Asset Inventory\n      summary: Get Scan Result Details in OASIS SARIF Format\n      description: Returns the scan result details in OASIS SARIF format for the completed\n        scan that has the specified scan ID.\n      operationId: exportScanResultToSarif\n      parameters:\n        - in: path\n          name: scanId\n          description: Scan UUID\n          schema:\n            type: string\n            format: uuid\n          required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                title: Static Analysis Results Format (SARIF) Version 2.1.0 JSON Schema\n                type: object\n                additionalProperties: true\n                externalDocs:\n                  description: Static Analysis Results Format (SARIF) Version 2.1.0 JSON Schema\n                  url: 'https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json'\n                # example:\n                  # \"$schema\": 'https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json'\n                  # version: '2.1.0'\n                  # runs:\n                  # - tool:\n                      # driver:\n                        # name: Prisma Cloud IaC Scan\n                    # properties:\n                      # matchedPoliciesSummary:\n                        # high: 6\n                        # medium: 15\n                        # low: 20\n                    # automationDetails:\n                      # description:\n                        # text: Static Analysis Security Test results using Prisma Cloud\n                          # IaC Scan\n                      # guid: 00000000-...\n                    # results:\n                    # - ruleId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n                      # name: AWS Security Groups allow internet traffic to SSH port\n                      #   (22)\n                      # level: error\n                      # properties:\n                        # severity: \"high\"\n                        # rule: \"$.resource[*].aws_security_group exists and ($.resource.aws_security_group[*].ingress.cidr_blocks contains 0.0.0.0/0\"\n                        # docUrl: \"https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-policy-reference/configuration-policies/configuration-policies-build-phase/amazon-web-services-configuration-policies/policy_617b9138-584b-4e8e-ad15-7fbabafbed1a.html\"\n                      # message:\n                        # text: \"This policy identifies AWS Security Groups which do allow inbound traffic on SSH port (22) from public internet\"\n                      # locations:\n                      # - physicalLocation:\n                          # artifactLocation:\n                            # uri: \"main.tf\"\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '500':\n          $ref: '#/components/responses/ErrorResponse'\n  /iac/v2/scans/export:\n    get:\n      deprecated: true\n      tags:\n      - Asset Inventory\n      summary: Export Assets Scans Report\n      description: (JSON:API) Exports the assets scans report.\n      operationId: exportScans\n      parameters:\n      - in: query\n        name: filter\n        style: deepObject\n        explode: true\n        description: |\n          Filters for scan results.\n\n          You can apply a time filter by specifying a **timeType**. Only certain **timeUnit**,\n          **startTime**, **endTime** query parameters apply to certain **timeType** values.\n          The table below lists the time-related parameters that are\n          both valid and required, for each **timeType** parameter.\n\n          timeType  | Valid and Required Time Parameters\n          -----------| ----\n          **to_now** | **timeUnit** where \u003cbr/\u003elogin=from last login\u003cbr/\u003eepoch=from account onboarding\u003cbr/\u003eday=from start of day\u003cbr/\u003eweek=from start of week\u003cbr/\u003emonth=from start of month\u003cbr/\u003eyear=from start of year\n          **absolute** | **startTime**\u003cbr/\u003e**endTime**\n          **relative** | **timeUnit** hour, day, week, month, year\u003cbr/\u003e**timeAmount**\n        schema:\n          $ref: '#/components/schemas/JsonApiModelFilterParameters'\n      - in: query\n        name: groupBy\n        schema:\n          type: string\n          enum:\n          - assetType\n          - assetName\n          - resourceList\n          description: supported group by fileds [assetType, assetName, resourceList]\n      - in: query\n        name: sort\n        schema:\n          type: string\n          example: -assetName\n          description: Sorting parameters. The sort order is ascending unless the field\n            is prefixed with minus (-), in which case it is descending.\n      - in: query\n        name: fmt\n        schema:\n          type: string\n          example: csv\n          description: Export file format. Currently only CSV format is\n            supported.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '500':\n          $ref: '#/components/responses/ErrorResponse'\ncomponents:\n  securitySchemes:\n    x-redlock-auth:\n      description: The x-redlock-auth value is a JSON Web Token (JWT).\n      in: header\n      name: x-redlock-auth\n      type: apiKey\n  responses:\n    ErrorResponse:\n      description: JSON.API error response\n      content:\n        application/vnd.api+json:\n          schema:\n            $ref: '#/components/schemas/IacApiErrorResponse'\n  schemas:\n    JsonApiModelScanAttributes:\n      description: 'Additonal attributes associated with the IaC scan job. The keys\n        below should be used for better display:\n\n        * buildNumber: For CI/CD, the build number associated with the IaC scan\n\n        * projectName: For CI/CD, the repo or project name associated with the IaC\n        scan\n\n        * prName: For CI/CD, the pull/merge request name associated with the IaC scan\n\n        * pipelineName: For CD pipeline, the pipeline name associated with the IaC\n        scan\n\n        * pipelineLambda: For CD pipeline, the lambda name associated with the IaC\n        scan\n\n        * pipelineJobId: For CD pipeline, the job ID associated with the IaC scan\n\n        * pipelineStageName: For CD pipeline, the stage name associated with the IaC\n        scan\n\n        * pipelineActionName: For CD pipeline, the action name associated with the\n        IaC scan\n\n        '\n      type: object\n      additionalProperties:\n        type: string\n      # example:\n        # projectName: my-project\n        # prName: SL-1234\n    JsonApiModelFailureCriteria:\n      description: Thresholds that define scan asset result failures after evaluation\n      type: object\n      required:\n      - high\n      - medium\n      - low\n      - operator\n      properties:\n        high:\n          type: integer\n          format: int32\n          example: 1\n          description: Threshold for the number of high severity violations that define\n            an asset failure\n        medium:\n          type: integer\n          format: int32\n          example: 10\n          description: Threshold for the number of medium severity violations that\n            define an asset failure\n        low:\n          type: integer\n          format: int32\n          example: 30\n          description: Threshold for the number of low severity violations that define\n            an asset failure\n        operator:\n          description: Logic operator on failures\n          type: string\n          enum:\n            - and\n            - or\n          example: or\n    JsonApiModelAsyncScanRequest:\n      type: object\n      required:\n      - data\n      properties:\n        data:\n          type: object\n          required:\n          - type\n          - attributes\n          properties:\n            type:\n              description: Currently, you must set value to \"async-scan\"\n              type: string\n              enum:\n              - async-scan\n              example: async-scan\n            attributes:\n              type: object\n              required:\n              - assetName\n              - assetType\n              properties:\n                assetName:\n                  description: Registered asset name (255 character limit) that will\n                    appear as the resource name in the Prisma Cloud Devops Inventory\n                  type: string\n                  example: my-asset\n                assetType:\n                  description: 'Supported asset types:\n\n                    * AzureDevOps: Azure DevOps Services\n\n                    * AWSCodePipeline: AWS CodePipeline\n\n                    * BitbucketServer: Bitbucket server\n\n                    * BitbucketCloud: Bitbucket Cloud\n\n                    * CircleCI: CircleCI project\n\n                    * GitHub: GitHub repo\n\n                    * GitLab-CICD: GitLab CI/CD Pipeline\n\n                    * GitLab-SCM: GitLab SCM Webhook\n\n                    * IaC-API: direct IAC API attachment\n\n                    * IntelliJ: IntelliJ IDE plugin managed files\n\n                    * Jenkins: Jenkins build server\n\n                    * VSCode: VSCode plugin managed files\n\n                    * twistcli: Twistlock CLI attachment\n\n                    '\n                  type: string\n                  enum:\n                    - AzureDevOps\n                    - AWSCodePipeline\n                    - BitbucketCloud\n                    - BitbucketServer\n                    - CircleCI\n                    - GitHub\n                    - GitLab-CICD\n                    - GitLab-SCM\n                    - IaC-API\n                    - IntelliJ\n                    - Jenkins\n                    - twistcli\n                    - VSCode\n                  example: AzureDevOps\n                tags:\n                  description: Tags assigned to the asset or the scan job. Both tag\n                    key and value have 255 character limit. Tags are searchable in Prisma Cloud.\n                  type: object\n                  additionalProperties:\n                    type: string\n                  # example:\n                    # env: dev\n                    # region: us-west-1\n                scanAttributes:\n                  allOf:\n                  - description: Any key/value data you want to associate with a scan. Scan attributes are not searchable in Prisma Cloud.\n                  - $ref: '#/components/schemas/JsonApiModelScanAttributes'\n                failureCriteria:\n                  allOf:\n                  - description: |\n                      Failure criteria default to \"high\"-  1, \"medium\"-  1, \"low\"-  1, \"operator\": or\n                  - $ref: '#/components/schemas/JsonApiModelFailureCriteria'\n    JsonApiModelFilterParameters:\n      type: object\n      properties:\n        timeType:\n          type: string\n          enum:\n          - to_now\n          - absolute\n          - relative\n          description: Time type\n        timeAmount:\n          type: integer\n          format: int32\n          example: 1\n          description: Number of time units\n        timeUnit:\n          type: string\n          enum:\n          - epoch\n          - login\n          - hour\n          - day\n          - week\n          - month\n          - year\n          description: Time unit\n        startTime:\n          type: integer\n          format: int64\n          description: Start time in Unix time (the number of seconds that have elapsed\n            since the Unix epoch) for the absolute time type\n        endTime:\n          type: integer\n          format: int64\n          description: End time in Unix time (the number of seconds that have elapsed\n            since the Unix epoch) for the absolute time type\n        resourceList:\n          type: array\n          items:\n            type: string\n          description: Resource list\n        tags:\n          type: array\n          items:\n            type: string\n          description: Tag string\n          # example: env:proc\n        assetType:\n          type: array\n          items:\n            type: string\n          description: Asset type\n        assetName:\n          type: array\n          items:\n            type: string\n          description: Asset name\n        failureCriteria:\n          type: array\n          items:\n            type: string\n          description: Scan failure criteria expression\n          # example: H:5 \u0026 M:2 \u0026 L:1\n        user:\n          type: array\n          items:\n            type: string\n          description: Username\n        status:\n          type: array\n          items:\n            type: string\n          description: Scan status\n          # example: passed\n    JsonApiModelScanTableData:\n      description: Aggregated scan result in {json.api} format\n      type: object\n      required:\n      - id\n      - attributes\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: Unique ID of the scan result\n        attributes:\n          type: object\n          properties:\n            name:\n              type: array\n              items:\n                type: string\n              description: List of aggregated asset names\n            type:\n              type: array\n              items:\n                type: string\n              description: List of aggregated asset types\n            user:\n              type: array\n              items:\n                type: string\n              description: List of aggregated usernames\n            resourceList:\n              type: array\n              items:\n                type: string\n              description: List of aggregated resource lists\n            tags:\n              type: array\n              items:\n                $ref: '#/components/schemas/IacScanTag'\n              description: List of aggregated tags\n            failureCriteria:\n              type: string\n              description: Last failure criteria expression in the aggregated scan\n                result\n            status:\n              $ref: '#/components/schemas/JsonApiModelScanStatus'\n            merged:\n              type: boolean\n              description: If or not the last scan is merged in the aggregated result\n            deployed:\n              type: boolean\n              description: If or not the last scan is deployed in the aggregated result\n            fail:\n              type: integer\n              format: int64\n              description: Number of failed scans in the aggregated result\n            pass:\n              type: integer\n              format: int64\n              description: Number of passed scans in the aggregated result\n            matchedPoliciesSummary:\n              $ref: '#/components/schemas/IacMatchedPoliciesSummary'\n            scanAttributes:\n              $ref: '#/components/schemas/JsonApiModelScanAttributes'\n            scanTime:\n              type: string\n              format: date-time\n              description: Latest scan time in the aggregated result\n        links:\n          type: object\n          description: Links to the scan result\n          properties:\n            self:\n              type: string\n              format: url\n              # example: /scans/3fa85f64-5717-4562-b3fc-2c963f66afa6\n              description: URL to the scan result\n        relationships:\n          type: object\n          description: Relationships to the scan result\n          properties:\n            scanResult:\n              type: object\n              description: Link to the detailed scan result object\n              properties:\n                links:\n                  type: object\n                  description: Links\n                  properties:\n                    related:\n                      type: string\n                      description: URL to the detailed scan result object\n                      format: url\n                      # example: /scans/3fa85f64-5717-4562-b3fc-2c963f66afa6/results\n    JsonApiModelAsyncScanSession:\n      type: object\n      required:\n      - data\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: Scan UUID\n            links:\n              type: object\n              properties:\n                url:\n                  type: string\n                  format: url\n                  description: The presigned URL for template data uploading (only\n                    HTTP PUT is supported)\n    JsonApiModelScanTrigger:\n      type: object\n      required:\n      - data\n      properties:\n        data:\n          type: object\n          required:\n          - attributes\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: Scan UUID\n            attributes:\n              type: object\n              required:\n              - templateType\n              properties:\n                templateType:\n                  description: IaC template type\n                  type: string\n                  enum:\n                  - cft\n                  - k8s\n                  - tf\n                  example: cft\n                templateVersion:\n                  description: Template version\n                  type: string\n                  example: '0.13'\n                templateParameters:\n                  $ref: '#/components/schemas/IacTemplateParameters'\n    JsonApiModelScanStatusResponse:\n      type: object\n      required:\n      - data\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n            attributes:\n              type: object\n              properties:\n                status:\n                  $ref: '#/components/schemas/JsonApiModelScanStatus'\n    JsonApiModelScanStatus:\n      type: string\n      description: The scan job status. Valid values are processing, error, passed,\n        failed, failed_n_merged, failed_n_deployed.\n      enum:\n      - processing\n      - error\n      - passed\n      - failed\n      - failed_n_merged\n      - failed_n_deployed\n    IacApiErrorResponse:\n      type: object\n      required:\n      - errors\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/IacApiError'\n    IacScanTag:\n      type: object\n      required:\n      - name\n      - value\n      properties:\n        name:\n          type: string\n          example: env\n        value:\n          type: string\n          example: prod\n        source:\n          type: string\n    IacTemplateParameters:\n      type: object\n      properties:\n        variables:\n          description: Template variables and values list to be used for evaluation\n          type: object\n          additionalProperties:\n            type: string\n          # example:\n            # region: us-east-1\n            # image_id: amzn2-ami-hvm-2.0\n        variableFiles:\n          description: Names of template variable files inside the template package to be used. Specify file path relative to the root of the zip file you uploaded.\n            for evaluation\n          type: array\n          items:\n            type: string\n          # example:\n          # - /dev.tfvars\n          # - /us/qa.tfvars\n        policyIdFilters:\n          description: If list is populated, IaC scan service will evaluate with only\n            policies that have IDs in this list\n          type: array\n          items:\n            type: string\n            example: 123e4567-e89b-12d3-a456-426614174000\n        files:\n          description: If you specify file paths, the IaC scan service will evaluate only files\n            in this list. Specify file paths relative to the root of the zip file you uploaded.\n          type: array\n          items:\n            type: string\n          # example:\n          # - /dev/auto_scale.tf\n          # - /dev/app.tf\n        folders:\n          description: If you specify folder paths, the IaC scan service will evaluate only folders\n            in the list. Specify folder paths relative to the root of the zip file you uploaded.\n          type: array\n          items:\n            type: string\n          # example:\n          # - /dev\n          # - /under_develop\n          # - /modules/dev\n    IacMatchedPoliciesSummary:\n      type: object\n      properties:\n        high:\n          type: integer\n          format: int64\n          description: Number of high severity policies matched\n          example: 6\n        medium:\n          type: integer\n          format: int64\n          description: Number of medium severity policies matched\n          example: 15\n        low:\n          type: integer\n          format: int64\n          description: Number of low severity policies matched\n          example: 20\n    IacPolicyViolation:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        attributes:\n          type: object\n          properties:\n            severity:\n              allOf:\n              - description: IaC policy severity\n              - $ref: '#/components/schemas/IacPolicySeverity'\n            name:\n              type: string\n              description: Policy name\n              example: AWS Security Groups allow internet traffic to SSH port (22)\n            rule:\n              type: string\n              description: Violated rule\n              example: $.resource[*].aws_security_group exists and ($.resource.aws_security_group[*].ingress.cidr_blocks\n                contains 0.0.0.0/0\n            desc:\n              type: string\n              description: Policy description\n              example: This policy identifies AWS Security Groups which do allow inbound\n                traffic on SSH port (22) from public internet\n            files:\n              type: array\n              description: Files\n              items:\n                type: string\n                description: Items\n            policyId:\n              type: string\n              format: uuid\n              description: Policy ID\n            docUrl:\n              type: string\n              format: url\n              description: Policy documentation relevant to the violation\n              example: https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-policy-reference/configuration-policies/configuration-policies-build-phase/amazon-web-services-configuration-policies/policy_617b9138-584b-4e8e-ad15-7fbabafbed1a.html\n    IacPolicySeverity:\n      type: string\n      description: The levels of policy severity\n      enum:\n      - high\n      - medium\n      - low\n    IacApiError:\n      type: object\n      required:\n      - status\n      - detail\n      properties:\n        status:\n          type: string\n          description: HTTP status code\n        code:\n          type: string\n          example: '405'\n          description: Application-specific error code\n        detail:\n          type: string\n          example: Invalid template file provided\n          description: Detailed description of the error\n        source:\n          type: string\n          example: Scan-worker-service\n          description: Indicates the part of the request document that caused the\n            error\n"
		}
	},
	"Error": "buildIR: make ir: path \"/iac/v2/scans\": get: parameters: field \"assetName\": nested arrays not allowed",
	"NotImplemented": [
		"unsupported content types"
	]
}