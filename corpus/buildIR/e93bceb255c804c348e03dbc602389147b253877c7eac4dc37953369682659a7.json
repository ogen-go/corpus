{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainjet/platform"
		},
		"file": {
			"name": "aws-schemas-2019-12-02.json",
			"size": 0,
			"path": "schemas/openapi3/aws-schemas-2019-12-02.json",
			"byteSize": 134142,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"2019-12-02\",\n    \"x-release\": \"v4\",\n    \"title\": \"Amazon EventBridge Schema Registry\",\n    \"description\": \"Amazon EventBridge Schema Registry\",\n    \"x-logo\": {\n      \"url\": \"https://raw.githubusercontent.com/chainjet/assets/master/integrations/aws/Arch_Amazon-EventBridge_64.svg\"\n    },\n    \"termsOfService\": \"https://aws.amazon.com/service-terms/\",\n    \"contact\": {\n      \"name\": \"Mike Ralphson\",\n      \"email\": \"mike.ralphson@gmail.com\",\n      \"url\": \"https://github.com/mermade/aws2openapi\",\n      \"x-twitter\": \"PermittedSoc\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0 License\",\n      \"url\": \"http://www.apache.org/licenses/\"\n    },\n    \"x-providerName\": \"amazonaws.com\",\n    \"x-serviceName\": \"schemas\",\n    \"x-origin\": [\n      {\n        \"contentType\": \"application/json\",\n        \"url\": \"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/schemas-2019-12-02.normal.json\",\n        \"converter\": {\n          \"url\": \"https://github.com/mermade/aws2openapi\",\n          \"version\": \"1.0.0\"\n        },\n        \"x-apisguru-driver\": \"external\"\n      }\n    ],\n    \"x-apiClientRegistration\": {\n      \"url\": \"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\"\n    },\n    \"x-apisguru-categories\": [\"cloud\"],\n    \"x-preferred\": true\n  },\n  \"externalDocs\": {\n    \"description\": \"Amazon Web Services documentation\",\n    \"url\": \"https://docs.aws.amazon.com/schemas/\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://schemas.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The Schemas multi-region endpoint\"\n    },\n    {\n      \"url\": \"https://schemas.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n            \"us-gov-west-1\",\n            \"us-gov-east-1\",\n            \"ca-central-1\",\n            \"eu-north-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"eu-central-1\",\n            \"eu-south-1\",\n            \"af-south-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-east-1\",\n            \"ap-south-1\",\n            \"sa-east-1\",\n            \"me-south-1\"\n          ],\n          \"default\": \"us-east-1\"\n        }\n      },\n      \"description\": \"The Schemas multi-region endpoint\"\n    },\n    {\n      \"url\": \"http://schemas.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The Schemas endpoint for China (Beijing) and China (Ningxia)\"\n    },\n    {\n      \"url\": \"https://schemas.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The Schemas endpoint for China (Beijing) and China (Ningxia)\"\n    }\n  ],\n  \"x-hasEquivalentPaths\": true,\n  \"paths\": {\n    \"/v1/discoverers\": {\n      \"post\": {\n        \"operationId\": \"CreateDiscoverer\",\n        \"description\": \"Creates a discoverer.\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateDiscovererResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"SourceArn\"],\n                \"properties\": {\n                  \"Description\": {\n                    \"description\": \"A description for the discoverer.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 256\n                  },\n                  \"SourceArn\": {\n                    \"description\": \"The ARN of the event bus.\",\n                    \"type\": \"string\",\n                    \"minLength\": 20,\n                    \"maxLength\": 1600\n                  },\n                  \"tags\": {\n                    \"description\": \"Key-value pairs associated with a resource.\",\n                    \"type\": \"object\",\n                    \"additionalProperties\": {\n                      \"$ref\": \"#/components/schemas/__string\"\n                    }\n                  },\n                  \"CrossAccount\": {\n                    \"description\": \"Support discovery of schemas in events sent to the bus from another account. (default: true).\",\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Create Discoverer\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"get\": {\n        \"operationId\": \"ListDiscoverers\",\n        \"description\": \"List the discoverers.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListDiscoverersResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"discovererIdPrefix\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Specifying this limits the results to only those discoverer IDs that start with the specified prefix.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"\",\n            \"schema\": { \"type\": \"integer\" }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"sourceArnPrefix\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Specifying this limits the results to only those ARNs that start with the specified prefix.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"Limit\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination limit\",\n            \"required\": false\n          },\n          {\n            \"name\": \"NextToken\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination token\",\n            \"required\": false\n          }\n        ],\n        \"summary\": \"List Discoverers\"\n      }\n    },\n    \"/v1/registries/name/{registryName}\": {\n      \"post\": {\n        \"operationId\": \"CreateRegistry\",\n        \"description\": \"Creates a registry.\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateRegistryResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ConflictException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ConflictException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"Description\": {\n                    \"description\": \"A description of the registry to be created.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 256\n                  },\n                  \"tags\": {\n                    \"description\": \"Key-value pairs associated with a resource.\",\n                    \"type\": \"object\",\n                    \"additionalProperties\": {\n                      \"$ref\": \"#/components/schemas/__string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Create Registry\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"delete\": {\n        \"operationId\": \"DeleteRegistry\",\n        \"description\": \"Deletes a Registry.\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Delete Registry\"\n      },\n      \"get\": {\n        \"operationId\": \"DescribeRegistry\",\n        \"description\": \"Describes the registry.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DescribeRegistryResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Describe Registry\"\n      },\n      \"put\": {\n        \"operationId\": \"UpdateRegistry\",\n        \"description\": \"Updates a registry.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdateRegistryResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"Description\": {\n                    \"description\": \"The description of the registry to update.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 256\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Update Registry\"\n      }\n    },\n    \"/v1/registries/name/{registryName}/schemas/name/{schemaName}\": {\n      \"post\": {\n        \"operationId\": \"CreateSchema\",\n        \"description\": \"\u003cp\u003eCreates a schema definition.\u003c/p\u003e \u003cnote\u003e\u003cp\u003eInactive schemas will be deleted after two years.\u003c/p\u003e\u003c/note\u003e\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateSchemaResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the schema.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"Content\", \"Type\"],\n                \"properties\": {\n                  \"Content\": {\n                    \"description\": \"The source of the schema definition.\",\n                    \"type\": \"string\",\n                    \"minLength\": 1,\n                    \"maxLength\": 100000\n                  },\n                  \"Description\": {\n                    \"description\": \"A description of the schema.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 256\n                  },\n                  \"tags\": {\n                    \"description\": \"Key-value pairs associated with a resource.\",\n                    \"type\": \"object\",\n                    \"additionalProperties\": {\n                      \"$ref\": \"#/components/schemas/__string\"\n                    }\n                  },\n                  \"Type\": {\n                    \"description\": \"The type of schema.\",\n                    \"type\": \"string\",\n                    \"enum\": [\"OpenApi3\", \"JSONSchemaDraft4\"]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Create Schema\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"delete\": {\n        \"operationId\": \"DeleteSchema\",\n        \"description\": \"Delete a schema definition.\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the schema.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Delete Schema\"\n      },\n      \"get\": {\n        \"operationId\": \"DescribeSchema\",\n        \"description\": \"Retrieve the schema definition.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DescribeSchemaResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the schema.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaVersion\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Specifying this limits the results to only this schema version.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Describe Schema\"\n      },\n      \"put\": {\n        \"operationId\": \"UpdateSchema\",\n        \"description\": \"\u003cp\u003eUpdates the schema definition\u003c/p\u003e \u003cnote\u003e\u003cp\u003eInactive schemas will be deleted after two years.\u003c/p\u003e\u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdateSchemaResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the schema.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"ClientTokenId\": {\n                    \"description\": \"The ID of the client token.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 36\n                  },\n                  \"Content\": {\n                    \"description\": \"The source of the schema definition.\",\n                    \"type\": \"string\",\n                    \"minLength\": 1,\n                    \"maxLength\": 100000\n                  },\n                  \"Description\": {\n                    \"description\": \"The description of the schema.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 256\n                  },\n                  \"Type\": {\n                    \"description\": \"The schema type for the events schema.\",\n                    \"type\": \"string\",\n                    \"enum\": [\"OpenApi3\", \"JSONSchemaDraft4\"]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Update Schema\"\n      }\n    },\n    \"/v1/discoverers/id/{discovererId}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteDiscoverer\",\n        \"description\": \"Deletes a discoverer.\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"discovererId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the discoverer.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Delete Discoverer\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"get\": {\n        \"operationId\": \"DescribeDiscoverer\",\n        \"description\": \"Describes the discoverer.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DescribeDiscovererResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"discovererId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the discoverer.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Describe Discoverer\"\n      },\n      \"put\": {\n        \"operationId\": \"UpdateDiscoverer\",\n        \"description\": \"Updates the discoverer\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpdateDiscovererResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"discovererId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the discoverer.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"Description\": {\n                    \"description\": \"The description of the discoverer to update.\",\n                    \"type\": \"string\",\n                    \"minLength\": 0,\n                    \"maxLength\": 256\n                  },\n                  \"CrossAccount\": {\n                    \"description\": \"Support discovery of schemas in events sent to the bus from another account. (default: true)\",\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Update Discoverer\"\n      }\n    },\n    \"/v1/policy\": {\n      \"delete\": {\n        \"operationId\": \"DeleteResourcePolicy\",\n        \"description\": \"Delete the resource-based policy attached to the specified registry.\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Delete Resource Policy\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"get\": {\n        \"operationId\": \"GetResourcePolicy\",\n        \"description\": \"Retrieves the resource-based policy attached to a given registry.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetResourcePolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Get Resource Policy\"\n      },\n      \"put\": {\n        \"operationId\": \"PutResourcePolicy\",\n        \"description\": \"The name of the policy.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PutResourcePolicyResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"PreconditionFailedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PreconditionFailedException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"486\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"Policy\"],\n                \"properties\": {\n                  \"Policy\": {\n                    \"description\": \"The resource-based policy.\",\n                    \"type\": \"string\"\n                  },\n                  \"RevisionId\": {\n                    \"description\": \"The revision ID of the policy.\",\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Put Resource Policy\"\n      }\n    },\n    \"/v1/registries/name/{registryName}/schemas/name/{schemaName}/version/{schemaVersion}\": {\n      \"delete\": {\n        \"operationId\": \"DeleteSchemaVersion\",\n        \"description\": \"Delete the schema version definition\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the schema.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaVersion\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The version number of the schema\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Delete Schema Version\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}\": {\n      \"get\": {\n        \"operationId\": \"DescribeCodeBinding\",\n        \"description\": \"Describe the code binding URI.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DescribeCodeBindingResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"TooManyRequestsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TooManyRequestsException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"language\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The language of the code binding.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the schema.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaVersion\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Specifying this limits the results to only this schema version.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Describe Code Binding\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"operationId\": \"PutCodeBinding\",\n        \"description\": \"Put code binding URI\",\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PutCodeBindingResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"GoneException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/GoneException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"486\": {\n            \"description\": \"TooManyRequestsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TooManyRequestsException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"language\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The language of the code binding.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the schema.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaVersion\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Specifying this limits the results to only this schema version.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Put Code Binding\"\n      }\n    },\n    \"/v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}/source\": {\n      \"get\": {\n        \"operationId\": \"GetCodeBindingSource\",\n        \"description\": \"Get the code binding source URI.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetCodeBindingSourceResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"TooManyRequestsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TooManyRequestsException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"language\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The language of the code binding.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the schema.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaVersion\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Specifying this limits the results to only this schema version.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Get Code Binding Source\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/v1/discover\": {\n      \"post\": {\n        \"operationId\": \"GetDiscoveredSchema\",\n        \"description\": \"Get the discovered schema that was generated based on sampled events.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetDiscoveredSchemaResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"Events\", \"Type\"],\n                \"properties\": {\n                  \"Events\": {\n                    \"description\": \"An array of strings where each string is a JSON event. These are the events that were used to generate the schema. The array includes a single type of event and has a maximum size of 10 events.\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/GetDiscoveredSchemaVersionItemInput\"\n                    },\n                    \"minItems\": 1,\n                    \"maxItems\": 10\n                  },\n                  \"Type\": {\n                    \"description\": \"The type of event.\",\n                    \"type\": \"string\",\n                    \"enum\": [\"OpenApi3\", \"JSONSchemaDraft4\"]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Get Discovered Schema\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/v1/registries\": {\n      \"get\": {\n        \"operationId\": \"ListRegistries\",\n        \"description\": \"List the registries.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListRegistriesResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"\",\n            \"schema\": { \"type\": \"integer\" }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"registryNamePrefix\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Specifying this limits the results to only those registry names that start with the specified prefix.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"scope\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Can be set to Local or AWS to limit responses to your custom registries, or the ones provided by AWS.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"Limit\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination limit\",\n            \"required\": false\n          },\n          {\n            \"name\": \"NextToken\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination token\",\n            \"required\": false\n          }\n        ],\n        \"summary\": \"List Registries\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/v1/registries/name/{registryName}/schemas/name/{schemaName}/versions\": {\n      \"get\": {\n        \"operationId\": \"ListSchemaVersions\",\n        \"description\": \"Provides a list of the schema versions and related information.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListSchemaVersionsResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"\",\n            \"schema\": { \"type\": \"integer\" }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the schema.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"Limit\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination limit\",\n            \"required\": false\n          },\n          {\n            \"name\": \"NextToken\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination token\",\n            \"required\": false\n          }\n        ],\n        \"summary\": \"List Schema Versions\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/v1/registries/name/{registryName}/schemas\": {\n      \"get\": {\n        \"operationId\": \"ListSchemas\",\n        \"description\": \"List the schemas.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ListSchemasResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"\",\n            \"schema\": { \"type\": \"integer\" }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaNamePrefix\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Specifying this limits the results to only those schema names that start with the specified prefix.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"Limit\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination limit\",\n            \"required\": false\n          },\n          {\n            \"name\": \"NextToken\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination token\",\n            \"required\": false\n          }\n        ],\n        \"summary\": \"List Schemas\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/tags/{resource-arn}\": {\n      \"get\": {\n        \"operationId\": \"ListTagsForResource\",\n        \"description\": \"Get tags for resource.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListTagsForResourceResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"resource-arn\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ARN of the resource.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"List Tags For Resource\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"operationId\": \"TagResource\",\n        \"description\": \"Add tags to a resource.\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"resource-arn\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ARN of the resource.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"tags\"],\n                \"properties\": {\n                  \"tags\": {\n                    \"description\": \"Key-value pairs associated with a resource.\",\n                    \"type\": \"object\",\n                    \"additionalProperties\": {\n                      \"$ref\": \"#/components/schemas/__string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"summary\": \"Tag Resource\"\n      }\n    },\n    \"/v1/registries/name/{registryName}/schemas/search#keywords\": {\n      \"get\": {\n        \"operationId\": \"SearchSchemas\",\n        \"description\": \"Search the schemas\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchSchemasResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"keywords\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"Specifying this limits the results to only schemas that include the provided keywords.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"\",\n            \"schema\": { \"type\": \"integer\" }\n          },\n          {\n            \"name\": \"nextToken\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"Limit\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination limit\",\n            \"required\": false\n          },\n          {\n            \"name\": \"NextToken\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"description\": \"Pagination token\",\n            \"required\": false\n          }\n        ],\n        \"summary\": \"Search Schemas\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/v1/discoverers/id/{discovererId}/start\": {\n      \"post\": {\n        \"operationId\": \"StartDiscoverer\",\n        \"description\": \"Starts the discoverer\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StartDiscovererResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"discovererId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the discoverer.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Start Discoverer\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/v1/discoverers/id/{discovererId}/stop\": {\n      \"post\": {\n        \"operationId\": \"StopDiscoverer\",\n        \"description\": \"Stops the discoverer\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StopDiscovererResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"discovererId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the discoverer.\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Stop Discoverer\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/tags/{resource-arn}#tagKeys\": {\n      \"delete\": {\n        \"operationId\": \"UntagResource\",\n        \"description\": \"Removes tags from a resource.\",\n        \"responses\": {\n          \"204\": { \"description\": \"Success\" },\n          \"480\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"resource-arn\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ARN of the resource.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"tagKeys\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"Keys of key-value pairs.\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": { \"$ref\": \"#/components/schemas/__string\" }\n            }\n          }\n        ],\n        \"summary\": \"Untag Resource\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    },\n    \"/v1/registries/name/{registryName}/schemas/name/{schemaName}/export#type\": {\n      \"get\": {\n        \"operationId\": \"ExportSchema\",\n        \"description\": \"\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExportSchemaResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"BadRequestException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/BadRequestException\" }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"UnauthorizedException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"InternalServerErrorException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternalServerErrorException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ForbiddenException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ForbiddenException\" }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"NotFoundException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/NotFoundException\" }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ServiceUnavailableException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceUnavailableException\"\n                }\n              }\n            }\n          },\n          \"486\": {\n            \"description\": \"TooManyRequestsException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TooManyRequestsException\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"registryName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the registry.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The name of the schema.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"schemaVersion\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Specifying this limits the results to only this schema version.\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"summary\": \"Export Schema\"\n      },\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ]\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"X-Amz-Content-Sha256\": {\n        \"name\": \"X-Amz-Content-Sha256\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Date\": {\n        \"name\": \"X-Amz-Date\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Algorithm\": {\n        \"name\": \"X-Amz-Algorithm\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Credential\": {\n        \"name\": \"X-Amz-Credential\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Security-Token\": {\n        \"name\": \"X-Amz-Security-Token\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Signature\": {\n        \"name\": \"X-Amz-Signature\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-SignedHeaders\": {\n        \"name\": \"X-Amz-SignedHeaders\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"hmac\": {\n        \"type\": \"apiKey\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\",\n        \"description\": \"Amazon Signature authorization v4\",\n        \"x-amazon-apigateway-authtype\": \"awsSigv4\"\n      }\n    },\n    \"schemas\": {\n      \"CreateDiscovererResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The description of the discoverer.\" }\n            ]\n          },\n          \"DiscovererArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the discoverer.\" }\n            ]\n          },\n          \"DiscovererId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ID of the discoverer.\" }\n            ]\n          },\n          \"SourceArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the event bus.\" }\n            ]\n          },\n          \"State\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/DiscovererState\" },\n              { \"description\": \"The state of the discoverer.\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              {\n                \"xml\": { \"name\": \"tags\" },\n                \"description\": \"Tags associated with the resource.\"\n              }\n            ]\n          },\n          \"CrossAccount\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__boolean\" },\n              {\n                \"description\": \"The Status if the discoverer will discover schemas from events sent from another account.\"\n              }\n            ]\n          }\n        }\n      },\n      \"__string\": { \"type\": \"string\" },\n      \"BadRequestException\": {},\n      \"InternalServerErrorException\": {},\n      \"UnauthorizedException\": {},\n      \"ForbiddenException\": {},\n      \"ServiceUnavailableException\": {},\n      \"ConflictException\": {},\n      \"CreateRegistryResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The description of the registry.\" }\n            ]\n          },\n          \"RegistryArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the registry.\" }\n            ]\n          },\n          \"RegistryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the registry.\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              {\n                \"xml\": { \"name\": \"tags\" },\n                \"description\": \"Tags associated with the registry.\"\n              }\n            ]\n          }\n        }\n      },\n      \"CreateSchemaResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The description of the schema.\" }\n            ]\n          },\n          \"LastModified\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              { \"description\": \"The date and time that schema was modified.\" }\n            ]\n          },\n          \"SchemaArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the schema.\" }\n            ]\n          },\n          \"SchemaName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the schema.\" }\n            ]\n          },\n          \"SchemaVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The version number of the schema\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              { \"xml\": { \"name\": \"tags\" } }\n            ]\n          },\n          \"Type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The type of the schema.\" }\n            ]\n          },\n          \"VersionCreatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              { \"description\": \"The date the schema version was created.\" }\n            ]\n          }\n        }\n      },\n      \"NotFoundException\": {},\n      \"DescribeCodeBindingResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"CreationDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              {\n                \"description\": \"The time and date that the code binding was created.\"\n              }\n            ]\n          },\n          \"LastModified\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              {\n                \"description\": \"The date and time that code bindings were modified.\"\n              }\n            ]\n          },\n          \"SchemaVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The version number of the schema.\" }\n            ]\n          },\n          \"Status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CodeGenerationStatus\" },\n              {\n                \"description\": \"The current status of code binding generation.\"\n              }\n            ]\n          }\n        }\n      },\n      \"TooManyRequestsException\": {},\n      \"DescribeDiscovererResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The description of the discoverer.\" }\n            ]\n          },\n          \"DiscovererArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the discoverer.\" }\n            ]\n          },\n          \"DiscovererId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ID of the discoverer.\" }\n            ]\n          },\n          \"SourceArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the event bus.\" }\n            ]\n          },\n          \"State\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/DiscovererState\" },\n              { \"description\": \"The state of the discoverer.\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              {\n                \"xml\": { \"name\": \"tags\" },\n                \"description\": \"Tags associated with the resource.\"\n              }\n            ]\n          },\n          \"CrossAccount\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__boolean\" },\n              {\n                \"description\": \"The Status if the discoverer will discover schemas from events sent from another account.\"\n              }\n            ]\n          }\n        }\n      },\n      \"DescribeRegistryResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The description of the registry.\" }\n            ]\n          },\n          \"RegistryArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the registry.\" }\n            ]\n          },\n          \"RegistryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the registry.\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              {\n                \"xml\": { \"name\": \"tags\" },\n                \"description\": \"Tags associated with the registry.\"\n              }\n            ]\n          }\n        }\n      },\n      \"DescribeSchemaResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Content\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The source of the schema definition.\" }\n            ]\n          },\n          \"Description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The description of the schema.\" }\n            ]\n          },\n          \"LastModified\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              { \"description\": \"The date and time that schema was modified.\" }\n            ]\n          },\n          \"SchemaArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the schema.\" }\n            ]\n          },\n          \"SchemaName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the schema.\" }\n            ]\n          },\n          \"SchemaVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The version number of the schema\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              {\n                \"xml\": { \"name\": \"tags\" },\n                \"description\": \"Tags associated with the resource.\"\n              }\n            ]\n          },\n          \"Type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The type of the schema.\" }\n            ]\n          },\n          \"VersionCreatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              { \"description\": \"The date the schema version was created.\" }\n            ]\n          }\n        }\n      },\n      \"GetCodeBindingSourceResponse\": {\n        \"type\": \"object\",\n        \"properties\": { \"Body\": { \"$ref\": \"#/components/schemas/Body\" } }\n      },\n      \"GetDiscoveredSchemaResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Content\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The source of the schema definition.\" }\n            ]\n          }\n        }\n      },\n      \"GetDiscoveredSchemaVersionItemInput\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 100000\n      },\n      \"GetResourcePolicyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Policy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The resource-based policy.\" }\n            ]\n          },\n          \"RevisionId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The revision ID.\" }\n            ]\n          }\n        }\n      },\n      \"ListDiscoverersResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Discoverers\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__listOfDiscovererSummary\" },\n              { \"description\": \"An array of DiscovererSummary information.\" }\n            ]\n          },\n          \"NextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              {\n                \"description\": \"The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.\"\n              }\n            ]\n          }\n        }\n      },\n      \"ListRegistriesResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"NextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              {\n                \"description\": \"The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.\"\n              }\n            ]\n          },\n          \"Registries\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__listOfRegistrySummary\" },\n              { \"description\": \"An array of registry summaries.\" }\n            ]\n          }\n        }\n      },\n      \"ListSchemaVersionsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"NextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              {\n                \"description\": \"The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.\"\n              }\n            ]\n          },\n          \"SchemaVersions\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__listOfSchemaVersionSummary\" },\n              { \"description\": \"An array of schema version summaries.\" }\n            ]\n          }\n        }\n      },\n      \"ListSchemasResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"NextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              {\n                \"description\": \"The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.\"\n              }\n            ]\n          },\n          \"Schemas\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__listOfSchemaSummary\" },\n              { \"description\": \"An array of schema summaries.\" }\n            ]\n          }\n        }\n      },\n      \"ListTagsForResourceResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              { \"xml\": { \"name\": \"tags\" } }\n            ]\n          }\n        }\n      },\n      \"PutCodeBindingResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"CreationDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              {\n                \"description\": \"The time and date that the code binding was created.\"\n              }\n            ]\n          },\n          \"LastModified\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              {\n                \"description\": \"The date and time that code bindings were modified.\"\n              }\n            ]\n          },\n          \"SchemaVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The version number of the schema.\" }\n            ]\n          },\n          \"Status\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/CodeGenerationStatus\" },\n              {\n                \"description\": \"The current status of code binding generation.\"\n              }\n            ]\n          }\n        }\n      },\n      \"GoneException\": {},\n      \"PutResourcePolicyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Policy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The resource-based policy.\" }\n            ]\n          },\n          \"RevisionId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The revision ID of the policy.\" }\n            ]\n          }\n        }\n      },\n      \"PreconditionFailedException\": {},\n      \"SearchSchemasResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"NextToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              {\n                \"description\": \"The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.\"\n              }\n            ]\n          },\n          \"Schemas\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__listOfSearchSchemaSummary\" },\n              { \"description\": \"An array of SearchSchemaSummary information.\" }\n            ]\n          }\n        }\n      },\n      \"StartDiscovererResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"DiscovererId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ID of the discoverer.\" }\n            ]\n          },\n          \"State\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/DiscovererState\" },\n              { \"description\": \"The state of the discoverer.\" }\n            ]\n          }\n        }\n      },\n      \"StopDiscovererResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"DiscovererId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ID of the discoverer.\" }\n            ]\n          },\n          \"State\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/DiscovererState\" },\n              { \"description\": \"The state of the discoverer.\" }\n            ]\n          }\n        }\n      },\n      \"UpdateDiscovererResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The description of the discoverer.\" }\n            ]\n          },\n          \"DiscovererArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the discoverer.\" }\n            ]\n          },\n          \"DiscovererId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ID of the discoverer.\" }\n            ]\n          },\n          \"SourceArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the event bus.\" }\n            ]\n          },\n          \"State\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/DiscovererState\" },\n              { \"description\": \"The state of the discoverer.\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              {\n                \"xml\": { \"name\": \"tags\" },\n                \"description\": \"Tags associated with the resource.\"\n              }\n            ]\n          },\n          \"CrossAccount\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__boolean\" },\n              {\n                \"description\": \"The Status if the discoverer will discover schemas from events sent from another account.\"\n              }\n            ]\n          }\n        }\n      },\n      \"UpdateRegistryResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The description of the registry.\" }\n            ]\n          },\n          \"RegistryArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the registry.\" }\n            ]\n          },\n          \"RegistryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the registry.\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              {\n                \"xml\": { \"name\": \"tags\" },\n                \"description\": \"Tags associated with the registry.\"\n              }\n            ]\n          }\n        }\n      },\n      \"UpdateSchemaResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Description\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The description of the schema.\" }\n            ]\n          },\n          \"LastModified\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              { \"description\": \"The date and time that schema was modified.\" }\n            ]\n          },\n          \"SchemaArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the schema.\" }\n            ]\n          },\n          \"SchemaName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the schema.\" }\n            ]\n          },\n          \"SchemaVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The version number of the schema\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              { \"xml\": { \"name\": \"tags\" } }\n            ]\n          },\n          \"Type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The type of the schema.\" }\n            ]\n          },\n          \"VersionCreatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              { \"description\": \"The date the schema version was created.\" }\n            ]\n          }\n        }\n      },\n      \"CodeGenerationStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\"CREATE_IN_PROGRESS\", \"CREATE_COMPLETE\", \"CREATE_FAILED\"]\n      },\n      \"Tags\": {\n        \"type\": \"object\",\n        \"description\": \"Key-value pairs associated with a resource.\",\n        \"additionalProperties\": { \"$ref\": \"#/components/schemas/__string\" }\n      },\n      \"DiscovererState\": { \"type\": \"string\", \"enum\": [\"STARTED\", \"STOPPED\"] },\n      \"Type\": { \"type\": \"string\", \"enum\": [\"OpenApi3\", \"JSONSchemaDraft4\"] },\n      \"__timestampIso8601\": { \"type\": \"string\", \"format\": \"date-time\" },\n      \"DiscovererSummary\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"DiscovererArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the discoverer.\" }\n            ]\n          },\n          \"DiscovererId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ID of the discoverer.\" }\n            ]\n          },\n          \"SourceArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the event bus.\" }\n            ]\n          },\n          \"State\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/DiscovererState\" },\n              { \"description\": \"The state of the discoverer.\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              {\n                \"xml\": { \"name\": \"tags\" },\n                \"description\": \"Tags associated with the resource.\"\n              }\n            ]\n          },\n          \"CrossAccount\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__boolean\" },\n              {\n                \"description\": \"The Status if the discoverer will discover schemas from events sent from another account.\"\n              }\n            ]\n          }\n        }\n      },\n      \"Body\": { \"type\": \"string\" },\n      \"__listOfDiscovererSummary\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/DiscovererSummary\" }\n      },\n      \"__listOfRegistrySummary\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/RegistrySummary\" }\n      },\n      \"__listOfSchemaVersionSummary\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/SchemaVersionSummary\" }\n      },\n      \"__listOfSchemaSummary\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/SchemaSummary\" }\n      },\n      \"RegistrySummary\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"RegistryArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the registry.\" }\n            ]\n          },\n          \"RegistryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the registry.\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              {\n                \"xml\": { \"name\": \"tags\" },\n                \"description\": \"Tags associated with the registry.\"\n              }\n            ]\n          }\n        }\n      },\n      \"__long\": { \"type\": \"integer\" },\n      \"SchemaSummary\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"LastModified\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              { \"description\": \"The date and time that schema was modified.\" }\n            ]\n          },\n          \"SchemaArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the schema.\" }\n            ]\n          },\n          \"SchemaName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the schema.\" }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Tags\" },\n              {\n                \"xml\": { \"name\": \"tags\" },\n                \"description\": \"Tags associated with the schema.\"\n              }\n            ]\n          },\n          \"VersionCount\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__long\" },\n              {\n                \"description\": \"The number of versions available for the schema.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"A summary of schema details.\"\n      },\n      \"SchemaVersionSummary\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"SchemaArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the schema version.\" }\n            ]\n          },\n          \"SchemaName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the schema.\" }\n            ]\n          },\n          \"SchemaVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The version number of the schema.\" }\n            ]\n          },\n          \"Type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Type\" },\n              { \"description\": \"The type of schema.\" }\n            ]\n          }\n        }\n      },\n      \"__listOfSearchSchemaVersionSummary\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/SearchSchemaVersionSummary\" }\n      },\n      \"SearchSchemaSummary\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"RegistryName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the registry.\" }\n            ]\n          },\n          \"SchemaArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The ARN of the schema.\" }\n            ]\n          },\n          \"SchemaName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The name of the schema.\" }\n            ]\n          },\n          \"SchemaVersions\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/__listOfSearchSchemaVersionSummary\"\n              },\n              { \"description\": \"An array of schema version summaries.\" }\n            ]\n          }\n        }\n      },\n      \"SearchSchemaVersionSummary\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"CreatedDate\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__timestampIso8601\" },\n              { \"description\": \"The date the schema version was created.\" }\n            ]\n          },\n          \"SchemaVersion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/__string\" },\n              { \"description\": \"The version number of the schema\" }\n            ]\n          },\n          \"Type\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Type\" },\n              { \"description\": \"The type of schema.\" }\n            ]\n          }\n        }\n      },\n      \"__listOfSearchSchemaSummary\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/SearchSchemaSummary\" }\n      },\n      \"ExportSchemaResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Content\": { \"$ref\": \"#/components/schemas/__string\" },\n          \"SchemaArn\": { \"$ref\": \"#/components/schemas/__string\" },\n          \"SchemaName\": { \"$ref\": \"#/components/schemas/__string\" },\n          \"SchemaVersion\": { \"$ref\": \"#/components/schemas/__string\" },\n          \"Type\": { \"$ref\": \"#/components/schemas/__string\" }\n        }\n      },\n      \"__boolean\": { \"type\": \"boolean\" }\n    }\n  },\n  \"security\": [{ \"hmac\": [] }],\n  \"x-metadata\": {\n    \"apiVersion\": \"2019-12-02\",\n    \"endpointPrefix\": \"schemas\",\n    \"signingName\": \"schemas\",\n    \"serviceFullName\": \"Schemas\",\n    \"serviceId\": \"schemas\",\n    \"protocol\": \"rest-json\",\n    \"jsonVersion\": \"1.1\",\n    \"uid\": \"schemas-2019-12-02\",\n    \"signatureVersion\": \"v4\",\n    \"targetPrefix\": \"schemas\"\n  }\n}\n",
			"canonicalURL": "/github.com/chainjet/platform@e2f11798433d537a6d63c18ac444f6b6e5360bb2/-/blob/schemas/openapi3/aws-schemas-2019-12-02.json",
			"externalURLs": [
				{
					"url": "https://github.com/chainjet/platform/blob/e2f11798433d537a6d63c18ac444f6b6e5360bb2/schemas/openapi3/aws-schemas-2019-12-02.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/tags/{resource-arn}\": get: responses: code 200: contents: media: \"application/json\": generate schema: field Tags: allOf: schema type mismatch: object and "
}