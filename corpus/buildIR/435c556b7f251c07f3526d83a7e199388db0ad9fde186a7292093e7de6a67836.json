{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "illumidesk.com-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/illumidesk.com-1.0-swagger.yaml",
			"byteSize": 274992,
			"content": "openapi: 3.0.0\ninfo:\n  title: IllumiDesk\n  version: \"1.0\"\n  x-apisguru-categories:\n    - open_data\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://avatars3.githubusercontent.com/u/12212444?v=4&s=200\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/3Blades/openapi/master/tbs_swagger.yml\n      version: \"2.0\"\n  x-providerName: illumidesk.com\nsecurity:\n  - jwt: []\npaths:\n  /auth/jwt-token-auth/:\n    post:\n      operationId: auth_jwt-token-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/JWTData\"\n      responses:\n        \"201\":\n          description: JWT created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JWT\"\n              examples:\n                response:\n                  value:\n                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/JWT\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JWTError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/JWTError\"\n      security: []\n      summary: Create JSON Web Token (JWT)\n      tags:\n        - auth\n  /auth/jwt-token-refresh/:\n    post:\n      description: Obtains a new JSON Web Token using existing user credentials.\n      operationId: auth_jwt-token-refresh\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RefreshJSONWebTokenData\"\n      responses:\n        \"201\":\n          description: RefreshJSONWebToken created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefreshJSONWebToken\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/RefreshJSONWebToken\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefreshJSONWebTokenError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/RefreshJSONWebTokenError\"\n      security: []\n      summary: Refresh a JSON Web Token (JWT)\n      tags:\n        - auth\n  /auth/jwt-token-verify/:\n    post:\n      description: Checks veraciy of token.\n      operationId: auth_jwt-token-verify\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VerifyJSONWebTokenData\"\n      responses:\n        \"201\":\n          description: VerifyJSONWebToken created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VerifyJSONWebToken\"\n              examples:\n                response:\n                  value:\n                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/VerifyJSONWebToken\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VerifyJSONWebTokenError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/VerifyJSONWebTokenError\"\n      security: []\n      summary: Validate JSON Web Token (JWT)\n      tags:\n        - auth\n  \"/auth/login/{provider}/\":\n    get:\n      operationId: oauth_login\n      parameters:\n        - description: OAuth2 provider\n          in: path\n          name: provider\n          required: true\n          schema:\n            type: string\n            enum:\n              - github\n              - google\n              - slack\n      responses:\n        \"302\":\n          description: Redirect to backend auth page\n      tags:\n        - auth\n  /auth/register/:\n    post:\n      description: User registration requires confirming email address to activate user.\n      operationId: auth_register\n      requestBody:\n        $ref: \"#/components/requestBodies/UserData\"\n      responses:\n        \"201\":\n          description: User created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n              examples:\n                response:\n                  value:\n                    email: user@email.com\n                    first_name: John\n                    id: 536686d7-0096-4c72-a4c3-5d710a361a0a\n                    last_name: Doe\n                    profile:\n                      avatar_url: http://example.com/\n                      bio: I like tests\n                      company: IllumiDesk\n                      location: Atlanta, GA\n                      timezone: America/New_York\n                      url: http://about.me/myprofile\n                    username: johndoe\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/UserError\"\n      security: []\n      summary: Register a user\n      tags:\n        - auth\n  /v1/me:\n    get:\n      operationId: me\n      responses:\n        \"200\":\n          description: User information retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n              examples:\n                response:\n                  value:\n                    email: johndoe@email.com\n                    first_name: John\n                    id: 66949654-1f75-4c6f-a5c5-e3572eae6527\n                    last_name: Doe\n                    profile:\n                      avatar_url: http://example.com/\n                      bio: I like tests\n                      company: 3Blades\n                      location: Atlanta, GA\n                      timezone: America/New_York\n                      url: http://about.me/myprofile\n                    username: johndoe\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/User\"\n      summary: A convenience endpoint that is equivalent to GET /v1/users/profiles/<my\n        user id>/\n      tags:\n        - users\n  /v1/servers/options/server-size/:\n    get:\n      operationId: servers_options_sizes_list\n      parameters:\n        - description: Set limit when retrieving items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when retrieving items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Set order when retrieving items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Server size list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ServerSize\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ServerSize\"\n                type: array\n      summary: Retrieve available server sizes\n      tags:\n        - servers\n    post:\n      description: Only super users with on-premises version have acceess to this endpoint.\n      operationId: servers_options_server_size_create\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerSizeData\"\n      responses:\n        \"201\":\n          description: ServerSize created. This operation is available only to super users.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerSize\"\n              examples:\n                response:\n                  value:\n                    active: true\n                    cpu: 1\n                    id: 2f4a5830-169d-4111-b913-e68c7b94fdbe\n                    memory: 512\n                    name: myResource\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerSize\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerSizeError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerSizeError\"\n      summary: Create a new server size item\n      tags:\n        - servers\n  \"/v1/servers/options/server-size/{size}/\":\n    delete:\n      description: Only super users with on-premises version have acceess to this endpoint.\n      operationId: servers_options_server_size_delete\n      parameters:\n        - description: Server size unique identifier expressed as UUID or name.\n          in: path\n          name: size\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Server size deleted. This operation is available only to super users\n        \"404\":\n          description: ServerSize not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a server size by id\n      tags:\n        - servers\n    get:\n      operationId: servers_options_resources_read\n      parameters:\n        - description: Server size unique identifier expressed as UUID or name.\n          in: path\n          name: size\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Environment resource retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerSize\"\n              examples:\n                response:\n                  value:\n                    active: true\n                    cpu: 1\n                    id: 2f4a5830-169d-4111-b913-e68c7b94fdbe\n                    memory: 512\n                    name: myResource\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerSize\"\n        \"404\":\n          description: Environment resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get a server size by id\n      tags:\n        - servers\n    patch:\n      description: Only super users with on-premises version have acceess to this endpoint.\n      operationId: servers_options_server_size_update\n      parameters:\n        - description: Server size unique identifier expressed as UUID or name.\n          in: path\n          name: size\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerSizeData\"\n      responses:\n        \"200\":\n          description: Server size updated. This operation is available only to super users.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerSize\"\n              examples:\n                response:\n                  value:\n                    active: true\n                    cpu: 1\n                    id: b673c7ab-65ad-4d6e-859e-0483eea86ad6\n                    memory: 512\n                    name: myServerSizeWithPatch\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerSize\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerSizeError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerSizeError\"\n        \"404\":\n          description: Server size not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a server size by id\n      tags:\n        - servers\n    put:\n      description: Only super users with on-premises version have acceess to this endpoint.\n      operationId: servers_options_server_size_replace\n      parameters:\n        - description: Server size unique identifier expressed as UUID or name.\n          in: path\n          name: size\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerSizeData\"\n      responses:\n        \"200\":\n          description: Server size replaced. This operation is available only to super\n            users.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerSize\"\n              examples:\n                response:\n                  value:\n                    active: true\n                    cpu: 1\n                    id: b673c7ab-65ad-4d6e-859e-0483eea86ad6\n                    memory: 512\n                    name: myResourceWithPut\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerSize\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerSizeError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerSizeError\"\n        \"404\":\n          description: ServerSize not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Replace a server size by id\n      tags:\n        - servers\n  /v1/teams/:\n    get:\n      operationId: teams_list\n      parameters:\n        - description: Limit when getting data.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting data.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Team list\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Team\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Team\"\n                type: array\n      summary: Get teams\n      tags:\n        - teams\n    post:\n      operationId: teams_create\n      requestBody:\n        $ref: \"#/components/requestBodies/TeamData\"\n      responses:\n        \"201\":\n          description: Team created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TeamError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TeamError\"\n      summary: Create a new team\n      tags:\n        - teams\n  \"/v1/teams/{team}/\":\n    delete:\n      operationId: teams_delete\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Team deleted.\n        \"404\":\n          description: Team not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a team\n      tags:\n        - teams\n    get:\n      operationId: teams_read\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Team retrieved successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n        \"404\":\n          description: Team not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get a team\n      tags:\n        - teams\n    patch:\n      operationId: teams_update\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/TeamData\"\n      responses:\n        \"200\":\n          description: Team updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TeamError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TeamError\"\n        \"404\":\n          description: Team not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a team\n      tags:\n        - teams\n    put:\n      operationId: teams_replace\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/TeamData\"\n      responses:\n        \"200\":\n          description: Team updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TeamError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TeamError\"\n      summary: Replace a team\n      tags:\n        - teams\n  \"/v1/teams/{team}/billing/invoices/\":\n    get:\n      operationId: teams_billing_invoices_list\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Invoice list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Invoice\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Invoice\"\n                type: array\n      summary: Get team invoices\n      tags:\n        - teams\n        - billing\n  \"/v1/teams/{team}/billing/invoices/{id}/\":\n    get:\n      operationId: teams_billing_invoices_read\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Invoice unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Team invoice retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"404\":\n          description: Team invoice not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get an invoice\n      tags:\n        - teams\n        - billing\n  \"/v1/teams/{team}/billing/invoices/{invoice_id}/invoice-items/\":\n    get:\n      operationId: teams_billing_invoice_items_list\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Invoice id, expressed as UUID.\n          in: path\n          name: invoice_id\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Team invoiceItem list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvoiceItem\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvoiceItem\"\n                type: array\n      summary: Get team invoice items for a given invoice.\n      tags:\n        - teams\n        - billing\n  \"/v1/teams/{team}/billing/invoices/{invoice_id}/invoice-items/{id}\":\n    get:\n      operationId: teams_billing_invoice_items_read\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Invoice id, expressed as UUID.\n          in: path\n          name: invoice_id\n          required: true\n          schema:\n            type: string\n        - description: InvoiceItem id, expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Team invoiceItem retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvoiceItem\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/InvoiceItem\"\n        \"404\":\n          description: InvoiceItem not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get a specific team InvoiceItem.\n      tags:\n        - teams\n        - billing\n  \"/v1/teams/{team}/billing/subscriptions/\":\n    get:\n      operationId: teams_billing_subscriptions_list\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Teams subscription list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Subscription\"\n                type: array\n              examples:\n                response:\n                  value:\n                    - application_fee_percent: 0\n                      cancel_at_period_end: false\n                      canceled_at: \"\"\n                      created: 2017-07-24T17:25:04Z\n                      current_period_end: 2017-07-31T17:25:04Z\n                      current_period_start: 2017-07-24T17:25:04Z\n                      ended_at: \"\"\n                      id: 579208c3-4f5c-4b5d-baa3-309a06db681c\n                      livemode: false\n                      plan: efb36cb0-0ef2-4af3-ae5d-10d9ae73845d\n                      quantity: 1\n                      start: 2017-07-24T17:25:04Z\n                      status: trialing\n                      stripe_id: sub_B5KyO9BZ6lUNPP\n                      trial_end: 2017-07-31T17:25:04Z\n                      trial_start: 2017-07-24T17:25:04Z\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Subscription\"\n                type: array\n      summary: Get active team subscriptons\n      tags:\n        - teams\n        - billing\n    post:\n      operationId: teams_billing_subscriptions_create\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SubscriptionData\"\n      responses:\n        \"201\":\n          description: Team subscription created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n              examples:\n                response:\n                  value:\n                    application_fee_percent: 0\n                    cancel_at_period_end: false\n                    canceled_at: \"\"\n                    created: 2017-07-24T17:25:04Z\n                    current_period_end: 2017-07-31T17:25:04Z\n                    current_period_start: 2017-07-24T17:25:04Z\n                    ended_at: \"\"\n                    id: 579208c3-4f5c-4b5d-baa3-309a06db681c\n                    livemode: false\n                    plan: efb36cb0-0ef2-4af3-ae5d-10d9ae73845d\n                    quantity: 1\n                    start: 2017-07-24T17:25:04Z\n                    status: trialing\n                    stripe_id: sub_B5KyO9BZ6lUNPP\n                    trial_end: 2017-07-31T17:25:04Z\n                    trial_start: 2017-07-24T17:25:04Z\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionError\"\n      summary: Create a new team subscription\n      tags:\n        - teams\n        - billing\n  \"/v1/teams/{team}/billing/subscriptions/{id}/\":\n    delete:\n      operationId: teams_billing_subscriptions_delete\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Subscription unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Subscription deleted.\n        \"404\":\n          description: Subscription not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a subscription\n      tags:\n        - teams\n        - billing\n    get:\n      operationId: teams_billing_subscriptions_read\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Team subscription retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"404\":\n          description: Subscription not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get team subscriptions\n      tags:\n        - teams\n        - billing\n  \"/v1/teams/{team}/groups/\":\n    get:\n      operationId: teams_groups_list\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting data.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting data.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Team groups list\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Group\"\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Group\"\n                type: array\n      summary: Get team groups\n      tags:\n        - teams\n  \"/v1/teams/{team}/groups/{group}/\":\n    delete:\n      operationId: teams_groups_delete\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Group unique identifier expressed as UUID or name.\n          in: path\n          name: group\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Group deleted\n        \"404\":\n          description: Group not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete team group\n      tags:\n        - teams\n    get:\n      operationId: teams_groups_read\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Group unique identifier expressed as UUID or name.\n          in: path\n          name: group\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Group retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n      summary: Get team group\n      tags:\n        - teams\n    patch:\n      operationId: teams_groups_update\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Group unique identifier expressed as UUID or name.\n          in: path\n          name: group\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/GroupData\"\n      responses:\n        \"200\":\n          description: Group updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GroupError\"\n        \"404\":\n          description: Group not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Patch team group\n      tags:\n        - teams\n    put:\n      operationId: teams_groups_replace\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Group unique identifier expressed as UUID or name.\n          in: path\n          name: group\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/GroupData\"\n      responses:\n        \"200\":\n          description: Group replaced\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GroupError\"\n      summary: Patch team group\n      tags:\n        - teams\n  \"/v1/teams/{team}/groups/{group}/add/\":\n    post:\n      operationId: teams_groups_add_to_group\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Group unique identifier expressed as UUID or name.\n          in: path\n          name: group\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: User added to group.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupUser\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GroupUser\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupUserError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/GroupUserError\"\n        \"404\":\n          description: Group not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Add user to group\n      tags:\n        - teams\n  \"/v1/teams/{team}/groups/{group}/remove/\":\n    post:\n      operationId: teams_groups_remove_from_group\n      parameters:\n        - description: Team unique identifier expressed as UUID or name.\n          in: path\n          name: team\n          required: true\n          schema:\n            type: string\n        - description: Group unique identifier expressed as UUID or name.\n          in: path\n          name: group\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: User removed from group.\n        \"400\":\n          description: Invalid data supplied\n        \"404\":\n          description: Group not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: User removed from group\n      tags:\n        - teams\n  /v1/users/profiles/:\n    get:\n      operationId: users_list\n      parameters:\n        - description: Limit user list.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting users.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: User username.\n          in: query\n          name: username\n          required: false\n          schema:\n            type: string\n        - description: User email.\n          in: query\n          name: email\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting users.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: User list\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/User\"\n                type: array\n              examples:\n                response:\n                  value:\n                    - email: johndoe@email.com\n                      first_name: John\n                      id: 66949654-1f75-4c6f-a5c5-e3572eae6527\n                      last_name: Doe\n                      profile:\n                        avatar_url: http://example.com/\n                        bio: I like tests\n                        company: 3Blades\n                        location: Atlanta, GA\n                        timezone: America/New_York\n                        url: http://about.me/myprofile\n                      username: johndoe\n                    - email: janedoe@email.com\n                      first_name: John\n                      id: 66949654-1f75-4c6f-a5c5-e3572eae6527\n                      last_name: Doe\n                      profile:\n                        avatar_url: http://example.com/\n                        bio: I like tests\n                        company: 3Blades\n                        location: Atlanta, GA\n                        timezone: America/New_York\n                        url: http://about.me/myprofile\n                      username: janedoe\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/User\"\n                type: array\n      summary: Get user list\n      tags:\n        - users\n    post:\n      description: Only admin users can create new users. New users have active status by\n        default.\n      operationId: users_create\n      requestBody:\n        $ref: \"#/components/requestBodies/UserData\"\n      responses:\n        \"201\":\n          description: User created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n              examples:\n                response:\n                  value:\n                    email: johndoe@email.com\n                    first_name: John\n                    id: 66949654-1f75-4c6f-a5c5-e3572eae6527\n                    last_name: Doe\n                    profile:\n                      avatar_url: http://example.com/\n                      bio: I like tests\n                      company: 3Blades\n                      location: Atlanta, GA\n                      timezone: America/New_York\n                      url: http://about.me/myprofile\n                    username: johndoe\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/UserError\"\n      summary: Create new user\n      tags:\n        - users\n  \"/v1/users/profiles/{user}/\":\n    delete:\n      operationId: users_delete\n      parameters:\n        - description: User identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: User deleted.\n        \"404\":\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a user\n      tags:\n        - users\n    get:\n      operationId: users_read\n      parameters:\n        - description: Unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: User retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n              examples:\n                response:\n                  value:\n                    email: johndoe@email.com\n                    first_name: John\n                    id: 66949654-1f75-4c6f-a5c5-e3572eae6527\n                    last_name: Doe\n                    profile:\n                      avatar_url: http://example.com/\n                      bio: I like tests\n                      company: 3Blades\n                      location: Atlanta, GA\n                      timezone: America/New_York\n                      url: http://about.me/myprofile\n                    username: johndoe\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"404\":\n          description: User not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a user\n      tags:\n        - users\n    patch:\n      operationId: users_update\n      parameters:\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/UserData\"\n      responses:\n        \"200\":\n          description: User updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n              examples:\n                response:\n                  value:\n                    email: runB@email.com\n                    first_name: John\n                    id: 66949654-1f75-4c6f-a5c5-e3572eae6527\n                    last_name: Doe\n                    profile:\n                      avatar_url: http://example.com/\n                      bio: Data updated with patch\n                      company: 3Blades\n                      location: Atlanta, GA\n                      timezone: America/New_York\n                      url: http://about.me/myprofile\n                    username: johndoe\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/UserError\"\n        \"404\":\n          description: User not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a user\n      tags:\n        - users\n  \"/v1/users/{user}/api-key/\":\n    get:\n      operationId: users_api-key_list\n      parameters:\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Api Key\n      summary: Retrieve account's API key\n      tags:\n        - users\n  \"/v1/users/{user}/avatar/\":\n    delete:\n      operationId: user_avatar_delete\n      parameters:\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Avatar deleted\n        \"404\":\n          description: Avatar not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete avatar\n      tags:\n        - users\n    get:\n      operationId: user_avatar_get\n      parameters:\n        - description: User unique identifier expressed as UUIDor username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: User avatar\n      summary: Retrieve user's avatar\n      tags:\n        - users\n    patch:\n      operationId: user_avatar_update\n      parameters:\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Avatar updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/UserError\"\n        \"404\":\n          description: Avatar not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a project file\n      tags:\n        - users\n    post:\n      operationId: user_avatar_set\n      parameters:\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: Added user avatar\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid data supplied\n      summary: Add user avatar\n      tags:\n        - users\n  \"/v1/users/{user}/emails/\":\n    get:\n      operationId: users_emails_list\n      parameters:\n        - description: User unique identifier as expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: Limite when getting email list.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting email list.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting email list.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Email list\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Email\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Email\"\n                type: array\n      summary: Retrieve account email addresses\n      tags:\n        - users\n    post:\n      operationId: users_emails_create\n      parameters:\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/EmailData\"\n      responses:\n        \"201\":\n          description: Email created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Email\"\n              examples:\n                response:\n                  value:\n                    address: post@email.com\n                    id: 383e0d16-2052-4196-95b8-d9d73ed043a9\n                    public: true\n                    unsubscribed: false\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Email\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmailError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EmailError\"\n      summary: Create an email address\n      tags:\n        - users\n  \"/v1/users/{user}/emails/{email_id}/\":\n    delete:\n      operationId: users_emails_delete\n      parameters:\n        - description: Email unique identifier expressed as UUID.\n          in: path\n          name: email_id\n          required: true\n          schema:\n            type: string\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Email deleted.\n        \"404\":\n          description: Email not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an email address\n      tags:\n        - users\n    get:\n      operationId: users_emails_read\n      parameters:\n        - description: Email unique identifier expressed as UUID.\n          in: path\n          name: email_id\n          required: true\n          schema:\n            type: string\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Email retrieved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Email\"\n              examples:\n                response:\n                  value:\n                    address: post@email.com\n                    id: 383e0d16-2052-4196-95b8-d9d73ed043a9\n                    public: true\n                    unsubscribed: false\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Email\"\n        \"404\":\n          description: Email not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a user's email addresses\n      tags:\n        - users\n    patch:\n      operationId: users_emails_update\n      parameters:\n        - description: Email unique identifier expressed as UUID.\n          in: path\n          name: email_id\n          required: true\n          schema:\n            type: string\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/EmailData\"\n      responses:\n        \"200\":\n          description: Email updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Email\"\n              examples:\n                response:\n                  value:\n                    address: patch@email.com\n                    id: 383e0d16-2052-4196-95b8-d9d73ed043a9\n                    public: false\n                    unsubscribed: false\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Email\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmailError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EmailError\"\n        \"404\":\n          description: Email not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update an email address\n      tags:\n        - users\n    put:\n      operationId: users_emails_replace\n      parameters:\n        - description: Email unique identifier expressed as UUID.\n          in: path\n          name: email_id\n          required: true\n          schema:\n            type: string\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/EmailData\"\n      responses:\n        \"200\":\n          description: Email updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Email\"\n              examples:\n                response:\n                  value:\n                    address: put@email.com\n                    id: 383e0d16-2052-4196-95b8-d9d73ed043a9\n                    public: false\n                    unsubscribed: true\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Email\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmailError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EmailError\"\n      summary: Replace an email address\n      tags:\n        - users\n  \"/v1/users/{user}/ssh-key/\":\n    get:\n      operationId: users_ssh-key_list\n      parameters:\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: SSH Key.\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    key: ssh-rsa\n                      AAAAB3NzaC1yc2EAAAADAQABAAACAQCqadyIPIEOF4M7SDoI+MHnAj6q2CY2j62Eg0sNbBbjnuekxnhSWVVKPte+NVtK4MWIyw3wnCCzTjwe0p2pQpMqxjqnCAkBPGhOjrRWTvV54hHTihBxiAEmXqbaBg5e6SaXcqP1OajWYzDqhts4ISer0uymzi0hW65At5i5k87Xu9HSM/Q0ySVJGm0rMuDCIoaTIeQdTkAI9ww/cmOM7uvIDO0OJv2xai9xLB9APVq8zCtqWdivMaqo2waPDT/I9bwtSZxRsnRMakGmj3CWvciHv13UsGlbB7nTeDKX0eyQl/5SADLO0bU+hY/8BpRjjtdq57Pqn/Xyw22YarDkG74gjLG5GBFZkBxcpENoUtCUyE2bhBT4x9yXlTeycMBTopGtzTfIHrJtIgNCFMhg9LbK4IKP/1pLj8SrVaQ9/k/QkxmDFoqfwdGd3AWOghMCAbAB7KaDKrj/XBf/KgTd8ZozjvkTzu2YRf4o3DebxRJipPQumrH3iXX5Kfe9lBWkR7Smewwp2XZrdgBeXN/54hd+Ic3upi528IGzEzu3/xtLT/e7kLi1QH7CVVN1sskZkIRr7aukw4YiVWgVOAlqKzJEoE/BPZSOA0NlgG0h37ZmyhdY1VqtoD+Vnj7Qh272PlTB14ndEVTqGuZhsCSxIhXev+METZ6XezK5n1VQeHGveQ==\n      summary: Retrieve an SSH key\n      tags:\n        - users\n  \"/v1/users/{user}/ssh-key/reset/\":\n    post:\n      operationId: users_ssh-key_reset\n      parameters:\n        - description: User unique identifier expressed as UUID or username.\n          in: path\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: Reset SSH Key successfully.\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    key: ssh-rsa\n                      AAAAB3NzaC1yc2EAAAADAQABAAACAQDhMvg2+n2yNu0H2Hg8uiXfQtAid0WGRigNckb5J0T9GFINmqkYalI/AsWZbl4UfNMviD73h9xowUx+d7s2vB3E8bFxB9OWM22eLSp8fnbuhdI5mKBflq0jr6ms1cR/SD3YsbZ9sX6BqycQrjjYYl7WLM9rgec6b+EYyr/6nbDH/wql06TrNl6LUNkqI+YIqjRvqMeNEY9ux3sB+f46FRKO683u/cRCcp1eWAYf1ByYupIGREbQFLxhYv/NcKD8uIo7DRAuutwHKGOgnAl4WGUVsT5dplhaDYKlDTf2iMiJ+QDT25QABdrkHcIsu5D21AIdH3FI5UQnnu4unyEA77IDLp2EwKRr9k1XQc1o3zQ61+9Gm7Rt80WWgRsnhmshvAIDNcBv1+82kmA9jyeUf3M7KoRJLk6nIbZ1NwoVCX0VF3lRIB0Hvm/dL7Rpk8m/hE0SIIWIGaXbOT4ANFj+TxcF1Mfk7C3/T5/AYLHcq9ocYFKe4Q3Jv7tuHm600edpUfORdpCpjytcKStza07dRDa+OU577r6a1zHMrEMh8oEUtVO5pC1+EaRijTVaOR62DoarHdxJ23Ctk44o0JZfzj9VoVaAwVAhL1aT3pAQxQlWiTKpmYaHUYUp9SRJhyeFr/gpeIGTydKdawkh9Mz8KMlnu1GUolDDuOvSnvidzWaEaw==\n        \"400\":\n          description: Invalid data supplied.\n      summary: Recreate an SSH key\n      tags:\n        - users\n  \"/v1/{namespace}/billing/cards/\":\n    get:\n      operationId: billing_cards_list\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Set limit when retrieving credit or debit cards.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Set offset when retriving cards.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Order when retrieving cards.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Card list\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Card\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Card\"\n                type: array\n      summary: Get credit cards\n      tags:\n        - billing\n    post:\n      operationId: billing_cards_create\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CardDataPost\"\n      responses:\n        \"201\":\n          description: Card created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Card\"\n              examples:\n                response:\n                  value:\n                    address_city: Atlanta\n                    address_country: United States\n                    address_line1: 3423 Piedmont Rd NE\n                    address_line1_check: pass\n                    address_line2: \"\"\n                    address_state: Georgia\n                    address_zip: \"30305\"\n                    address_zip_check: pass\n                    brand: Visa\n                    created: 2017-07-24T15:16:07.995380Z\n                    customer: 7e102c7b-55cd-49a0-9b23-58865eba1cc3\n                    cvc_check: \"\"\n                    exp_month: 1\n                    exp_year: 2019\n                    fingerprint: WpZ4zQymdmF5LhbH\n                    funding: credit\n                    id: 4126086e-525a-4027-b9e7-ae8de47210b2\n                    last4: \"4242\"\n                    name: John Doe\n                    stripe_id: card_1Aj8HuLUHPUzUsaQlDbaXjzA\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Card\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CardError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/CardError\"\n      summary: Create new credit card\n      tags:\n        - billing\n  \"/v1/{namespace}/billing/cards/{id}/\":\n    delete:\n      operationId: billing_cards_delete\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Card unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Card deleted.\n        \"404\":\n          description: Card not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a credit card\n      tags:\n        - billing\n    get:\n      operationId: billing_cards_read\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: User unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Card retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Card\"\n              examples:\n                response:\n                  value:\n                    address_city: Atlanta\n                    address_country: United States\n                    address_line1: 3423 Piedmont Rd NE\n                    address_line1_check: pass\n                    address_line2: \"\"\n                    address_state: Georgia\n                    address_zip: \"30305\"\n                    address_zip_check: pass\n                    brand: Visa\n                    created: 2017-07-24T15:16:07.995380Z\n                    customer: 7e102c7b-55cd-49a0-9b23-58865eba1cc3\n                    cvc_check: \"\"\n                    exp_month: 1\n                    exp_year: 2019\n                    fingerprint: WpZ4zQymdmF5LhbH\n                    funding: credit\n                    id: 4126086e-525a-4027-b9e7-ae8de47210b2\n                    last4: \"4242\"\n                    name: John Doe\n                    stripe_id: card_1Aj8HuLUHPUzUsaQlDbaXjzA\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Card\"\n        \"404\":\n          description: Card not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get credit card by id\n      tags:\n        - billing\n    patch:\n      operationId: billing_cards_update\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Card unique identifier.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/CardDataPutandPatch\"\n      responses:\n        \"200\":\n          description: Card updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Card\"\n              examples:\n                response:\n                  value:\n                    address_city: Atlanta\n                    address_country: United States\n                    address_line1: 3423 Piedmont Rd NE\n                    address_line1_check: pass\n                    address_line2: \"\"\n                    address_state: Georgia\n                    address_zip: \"30305\"\n                    address_zip_check: pass\n                    brand: Visa\n                    created: 2017-07-24T15:16:10.806003Z\n                    customer: 7e102c7b-55cd-49a0-9b23-58865eba1cc3\n                    cvc_check: \"\"\n                    exp_month: 1\n                    exp_year: 2025\n                    fingerprint: WpZ4zQymdmF5LhbH\n                    funding: credit\n                    id: 4126086e-525a-4027-b9e7-ae8de47210b2\n                    last4: \"4242\"\n                    name: John Doe\n                    stripe_id: card_1Aj8HuLUHPUzUsaQlDbaXjzA\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Card\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CardUpdateError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/CardUpdateError\"\n        \"404\":\n          description: Card not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a credit card\n      tags:\n        - billing\n    put:\n      operationId: billing_cards_replace\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: \"\"\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/CardDataPutandPatch\"\n      responses:\n        \"200\":\n          description: Card updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Card\"\n              examples:\n                response:\n                  value:\n                    address_city: Atlanta\n                    address_country: United States\n                    address_line1: 3423 Piedmont Rd NE\n                    address_line1_check: pass\n                    address_line2: \"\"\n                    address_state: Georgia\n                    address_zip: \"30305\"\n                    address_zip_check: pass\n                    brand: Visa\n                    created: 2017-07-24T15:16:07.995380Z\n                    customer: 7e102c7b-55cd-49a0-9b23-58865eba1cc3\n                    cvc_check: \"\"\n                    exp_month: 1\n                    exp_year: 2027\n                    fingerprint: WpZ4zQymdmF5LhbH\n                    funding: credit\n                    id: 4126086e-525a-4027-b9e7-ae8de47210b2\n                    last4: \"4242\"\n                    name: John Doe\n                    stripe_id: card_1Aj8HuLUHPUzUsaQlDbaXjzA\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Card\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CardError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/CardError\"\n      summary: Replace a credit card\n      tags:\n        - billing\n  \"/v1/{namespace}/billing/invoices/\":\n    get:\n      operationId: billing_invoices_list\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Invoice list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Invoice\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Invoice\"\n                type: array\n      summary: Get invoices\n      tags:\n        - billing\n  \"/v1/{namespace}/billing/invoices/{id}/\":\n    get:\n      operationId: billing_invoices_read\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Invoice unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Invoice retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"404\":\n          description: Invoice not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get an invoice\n      tags:\n        - billing\n  \"/v1/{namespace}/billing/invoices/{invoice_id}/invoice-items/\":\n    get:\n      operationId: billing_invoice_items_list\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Invoice id, expressed as UUID.\n          in: path\n          name: invoice_id\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: InvoiceItem list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvoiceItem\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvoiceItem\"\n                type: array\n      summary: Get invoice items for a given invoice.\n      tags:\n        - billing\n  \"/v1/{namespace}/billing/invoices/{invoice_id}/invoice-items/{id}\":\n    get:\n      operationId: billing_invoice_items_read\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Invoice id, expressed as UUID.\n          in: path\n          name: invoice_id\n          required: true\n          schema:\n            type: string\n        - description: InvoiceItem id, expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: InvoiceItem retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvoiceItem\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/InvoiceItem\"\n        \"404\":\n          description: InvoiceItem not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get a specific InvoiceItem.\n      tags:\n        - billing\n  \"/v1/{namespace}/billing/plans/\":\n    get:\n      operationId: billing_plans_list\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Plan list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Plan\"\n                type: array\n              examples:\n                response:\n                  value:\n                    - amount: 20\n                      created: 2017-07-24T15:46:39Z\n                      currency: usd\n                      id: d5791ab3-aefb-45af-80fc-2c7a166d78eb\n                      interval: year\n                      interval_count: 1\n                      livemode: false\n                      metadata: {}\n                      name: patch_billing_plan\n                      statement_descriptor: \"\"\n                      stripe_id: post_billing_plan\n                      trial_period_days: 7\n                    - amount: 20\n                      created: 2017-07-24T15:46:48Z\n                      currency: usd\n                      id: 256fd63a-9d6b-48d2-8ff5-f56eaf54c59b\n                      interval: week\n                      interval_count: 52\n                      livemode: false\n                      metadata: {}\n                      name: post_billing_plan_2\n                      statement_descriptor: \"\"\n                      stripe_id: post_billing_plan_2\n                      trial_period_days: 7\n                    - amount: 20\n                      created: 2017-07-24T15:46:52Z\n                      currency: usd\n                      id: 5915a2ae-12f5-4927-bb26-3b0609228791\n                      interval: month\n                      interval_count: 12\n                      livemode: false\n                      metadata: {}\n                      name: post_billing_plan_3\n                      statement_descriptor: \"\"\n                      stripe_id: post_billing_plan_3\n                      trial_period_days: 7\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Plan\"\n                type: array\n      summary: Get billing plans\n      tags:\n        - billing\n  \"/v1/{namespace}/billing/plans/{id}/\":\n    get:\n      operationId: billing_plans_read\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Plan unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Plan retrieved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n              examples:\n                response:\n                  value:\n                    amount: 20\n                    created: 2017-07-24T15:46:39Z\n                    currency: usd\n                    id: d5791ab3-aefb-45af-80fc-2c7a166d78eb\n                    interval: year\n                    interval_count: 1\n                    livemode: false\n                    metadata: {}\n                    name: post_billing_plan\n                    statement_descriptor: \"\"\n                    stripe_id: post_billing_plan\n                    trial_period_days: 7\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n        \"404\":\n          description: Plan not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get a billing plan\n      tags:\n        - billing\n  \"/v1/{namespace}/billing/subscriptions/\":\n    get:\n      operationId: billing_subscriptions_list\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Subscription list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Subscription\"\n                type: array\n              examples:\n                response:\n                  value:\n                    - application_fee_percent: 0\n                      cancel_at_period_end: false\n                      canceled_at: \"\"\n                      created: 2017-07-24T17:25:04Z\n                      current_period_end: 2017-07-31T17:25:04Z\n                      current_period_start: 2017-07-24T17:25:04Z\n                      ended_at: \"\"\n                      id: 579208c3-4f5c-4b5d-baa3-309a06db681c\n                      livemode: false\n                      plan: efb36cb0-0ef2-4af3-ae5d-10d9ae73845d\n                      quantity: 1\n                      start: 2017-07-24T17:25:04Z\n                      status: trialing\n                      stripe_id: sub_B5KyO9BZ6lUNPP\n                      trial_end: 2017-07-31T17:25:04Z\n                      trial_start: 2017-07-24T17:25:04Z\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Subscription\"\n                type: array\n      summary: Get active subscriptons\n      tags:\n        - billing\n    post:\n      operationId: billing_subscriptions_create\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SubscriptionData\"\n      responses:\n        \"201\":\n          description: Subscription created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n              examples:\n                response:\n                  value:\n                    application_fee_percent: 0\n                    cancel_at_period_end: false\n                    canceled_at: \"\"\n                    created: 2017-07-24T17:25:04Z\n                    current_period_end: 2017-07-31T17:25:04Z\n                    current_period_start: 2017-07-24T17:25:04Z\n                    ended_at: \"\"\n                    id: 579208c3-4f5c-4b5d-baa3-309a06db681c\n                    livemode: false\n                    plan: efb36cb0-0ef2-4af3-ae5d-10d9ae73845d\n                    quantity: 1\n                    start: 2017-07-24T17:25:04Z\n                    status: trialing\n                    stripe_id: sub_B5KyO9BZ6lUNPP\n                    trial_end: 2017-07-31T17:25:04Z\n                    trial_start: 2017-07-24T17:25:04Z\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionError\"\n      summary: Create a new subscription\n      tags:\n        - billing\n  \"/v1/{namespace}/billing/subscriptions/{id}/\":\n    delete:\n      operationId: billing_subscriptions_delete\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Subscription unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Subscription deleted.\n        \"404\":\n          description: Subscription not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a subscription\n      tags:\n        - billing\n    get:\n      operationId: billing_subscriptions_read\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Subscription retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"404\":\n          description: Subscription not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get a subscriptions\n      tags:\n        - billing\n  \"/v1/{namespace}/notifications/\":\n    get:\n      operationId: notifications_list\n      parameters:\n        - description: User or team data.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n        - description: When true, get only read notifications. When false, get only unread\n            notifications. Default behavior is to return both read and unread.\n          in: query\n          name: read\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: List of notifications\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Notification\"\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Notification\"\n                type: array\n      summary: Get notifications of all types and entities for the authenticated user.\n      tags:\n        - notifications\n    patch:\n      operationId: notifications_update_list\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/NotificationListUpdateData\"\n      responses:\n        \"200\":\n          description: Notification updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationError\"\n      summary: Mark a list of notifications as either read or unread.\n      tags:\n        - notifications\n  \"/v1/{namespace}/notifications/entity/{entity}\":\n    get:\n      operationId: notifications_list_entity\n      parameters:\n        - description: User or team data.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n        - description: Entity to filter notifications by.\n          in: path\n          name: entity\n          required: true\n          schema:\n            type: string\n            enum:\n              - billing\n        - description: When true, get only read notifications. When false, get only unread\n            notifications. Default behavior is to return both read and unread.\n          in: query\n          name: read\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: List of notifications\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Notification\"\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Notification\"\n                type: array\n      summary: Get notifications of all types and entities for the authenticated user.\n      tags:\n        - notifications\n    patch:\n      operationId: notifications_update_entity_list\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Entity to filter notifications by.\n          in: path\n          name: entity\n          required: true\n          schema:\n            type: string\n            enum:\n              - billing\n      requestBody:\n        $ref: \"#/components/requestBodies/NotificationListUpdateData\"\n      responses:\n        \"200\":\n          description: Notification updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationError\"\n      summary: Mark a list of notifications as either read or unread.\n      tags:\n        - notifications\n  \"/v1/{namespace}/notifications/settings/\":\n    get:\n      operationId: notification_settings_read\n      parameters:\n        - description: User or team data.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Global notification settings\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/NotificationSettings\"\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/NotificationSettings\"\n                type: array\n        \"404\":\n          description: Notification not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve global notification settings for the authenticated user\n      tags:\n        - notifications\n    patch:\n      operationId: notification_settings_update\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/NotificationSettingsData\"\n      responses:\n        \"200\":\n          description: Notification Settings updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettings\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettings\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettingsError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettingsError\"\n        \"404\":\n          description: Notification Settings not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Modify global notification settings.\n      tags:\n        - notifications\n    post:\n      operationId: notification_settings_create\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationSettingsData\"\n        required: true\n      responses:\n        \"201\":\n          description: Global Notification Settings created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettings\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettings\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettingsError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettingsError\"\n      summary: Create global notification settings\n      tags:\n        - notifications\n  \"/v1/{namespace}/notifications/settings/entity/{entity}\":\n    get:\n      operationId: notification_settings_entity_read\n      parameters:\n        - description: User or team data.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Entity whose settings should be retrieved.\n          in: path\n          name: entity\n          required: true\n          schema:\n            type: string\n            enum:\n              - billing\n      responses:\n        \"200\":\n          description: Global notification settings\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/NotificationSettings\"\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/NotificationSettings\"\n                type: array\n        \"404\":\n          description: Notification not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve global notification settings for the authenticated user\n      tags:\n        - notifications\n    patch:\n      operationId: notification_settings_entity_update\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Entity whose settings should be retrieved.\n          in: path\n          name: entity\n          required: true\n          schema:\n            type: string\n            enum:\n              - billing\n      requestBody:\n        $ref: \"#/components/requestBodies/NotificationSettingsData\"\n      responses:\n        \"200\":\n          description: Notification Settings updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettings\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettings\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettingsError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettingsError\"\n        \"404\":\n          description: Notification Settings not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Modify global notification settings.\n      tags:\n        - notifications\n    post:\n      operationId: notification_settings_entity_create\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Entity whose settings should be retrieved.\n          in: path\n          name: entity\n          required: true\n          schema:\n            type: string\n            enum:\n              - billing\n      requestBody:\n        $ref: \"#/components/requestBodies/NotificationSettingsData\"\n      responses:\n        \"201\":\n          description: Global Notification Settings created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettings\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettings\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettingsError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationSettingsError\"\n      summary: Create global notification settings\n      tags:\n        - notifications\n  \"/v1/{namespace}/notifications/{notification_id}\":\n    get:\n      operationId: notification_read\n      parameters:\n        - description: User or team data.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Notification UUID.\n          in: path\n          name: notification_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Retrieve a notification.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n        \"404\":\n          description: Notification not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a specific notification.\n      tags:\n        - notifications\n    patch:\n      operationId: notification_update\n      parameters:\n        - description: User or team data.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Notification UUID.\n          in: path\n          name: notification_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationUpdateData\"\n      responses:\n        \"200\":\n          description: Notification updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationError\"\n        \"404\":\n          description: Notification not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Mark a specific notification as either read or unread.\n      tags:\n        - notifications\n  \"/v1/{namespace}/oauth/applications/\":\n    get:\n      operationId: oauth_applications_list\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Set limit when retrieving items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when retrieving items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Set order when retrieving items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OAuth2 application list\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n              examples:\n                response:\n                  value:\n                    - authorization_grant_type: client-credentials\n                      client_id: CsJiQuhq66C6QP7ZKYzclOwrSVKctdYAbAXu7iHm\n                      client_secret: iIzh1cidklpF6eoCin986j0YTDS3hjgH1JDs4Wv4jriG7yXpJu8TfoKmtMC4QTRBbF2IzJnfRLBGdZvKm1koyS9xfGfdTDSi5JAVJAwTrxw0VAkZZr0u80afSQ9OVKvJ\n                      client_type: confidential\n                      id: 7011a6e6-b4ea-4600-8ab1-01127e1ccdda\n                      name: Test\n                      redirect_uris: \"\"\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n      summary: Retrieve oauth applications\n      tags:\n        - oauth\n    post:\n      description: \"\"\n      operationId: oauth_application_create\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ApplicationData\"\n      responses:\n        \"201\":\n          description: Application created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n              examples:\n                response:\n                  value:\n                    authorization_grant_type: client-credentials\n                    client_id: CsJiQuhq66C6QP7ZKYzclOwrSVKctdYAbAXu7iHm\n                    client_secret: iIzh1cidklpF6eoCin986j0YTDS3hjgH1JDs4Wv4jriG7yXpJu8TfoKmtMC4QTRBbF2IzJnfRLBGdZvKm1koyS9xfGfdTDSi5JAVJAwTrxw0VAkZZr0u80afSQ9OVKvJ\n                    client_type: confidential\n                    id: 7011a6e6-b4ea-4600-8ab1-01127e1ccdda\n                    name: Test\n                    redirect_uris: \"\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ApplicationError\"\n      summary: Create a new OAuth2 application\n      tags:\n        - oauth\n  \"/v1/{namespace}/oauth/applications/{application}/\":\n    delete:\n      description: \"\"\n      operationId: oauth_application_delete\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Application unique identifier expressed as UUID or name.\n          in: path\n          name: application\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Application deleted.\n        \"404\":\n          description: Application not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an application by id\n      tags:\n        - oauth\n    get:\n      operationId: oauth_application_read\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Application unique identifier expressed as UUID or name.\n          in: path\n          name: application\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Application retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n              examples:\n                response:\n                  value:\n                    authorization_grant_type: client-credentials\n                    client_id: CsJiQuhq66C6QP7ZKYzclOwrSVKctdYAbAXu7iHm\n                    client_secret: iIzh1cidklpF6eoCin986j0YTDS3hjgH1JDs4Wv4jriG7yXpJu8TfoKmtMC4QTRBbF2IzJnfRLBGdZvKm1koyS9xfGfdTDSi5JAVJAwTrxw0VAkZZr0u80afSQ9OVKvJ\n                    client_type: confidential\n                    id: 7011a6e6-b4ea-4600-8ab1-01127e1ccdda\n                    name: Test\n                    redirect_uris: \"\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n        \"404\":\n          description: Application not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get an application by id\n      tags:\n        - oauth\n    patch:\n      description: \"\"\n      operationId: oauth_application_update\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Application unique identifier expressed as UUID or name.\n          in: path\n          name: application\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ApplicationData\"\n      responses:\n        \"200\":\n          description: Application updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n              examples:\n                response:\n                  value:\n                    authorization_grant_type: client-credentials\n                    client_id: CsJiQuhq66C6QP7ZKYzclOwrSVKctdYAbAXu7iHm\n                    client_secret: iIzh1cidklpF6eoCin986j0YTDS3hjgH1JDs4Wv4jriG7yXpJu8TfoKmtMC4QTRBbF2IzJnfRLBGdZvKm1koyS9xfGfdTDSi5JAVJAwTrxw0VAkZZr0u80afSQ9OVKvJ\n                    client_type: confidential\n                    id: 7011a6e6-b4ea-4600-8ab1-01127e1ccdda\n                    name: Test\n                    redirect_uris: \"\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ApplicationError\"\n        \"404\":\n          description: Application not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update an application by id\n      tags:\n        - oauth\n    put:\n      description: \"\"\n      operationId: oauth_application_replace\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Application unique identifier expressed as UUID or name.\n          in: path\n          name: application\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ApplicationData\"\n      responses:\n        \"200\":\n          description: Application replaced.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n              examples:\n                response:\n                  value:\n                    authorization_grant_type: client-credentials\n                    client_id: CsJiQuhq66C6QP7ZKYzclOwrSVKctdYAbAXu7iHm\n                    client_secret: iIzh1cidklpF6eoCin986j0YTDS3hjgH1JDs4Wv4jriG7yXpJu8TfoKmtMC4QTRBbF2IzJnfRLBGdZvKm1koyS9xfGfdTDSi5JAVJAwTrxw0VAkZZr0u80afSQ9OVKvJ\n                    client_type: confidential\n                    id: 7011a6e6-b4ea-4600-8ab1-01127e1ccdda\n                    name: Test\n                    redirect_uris: \"\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ApplicationError\"\n        \"404\":\n          description: Application not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Replace an application by id\n      tags:\n        - oauth\n  \"/v1/{namespace}/projects/\":\n    get:\n      operationId: projects_list\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting data.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting data.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Private project or public project.\n          in: query\n          name: private\n          required: false\n          schema:\n            type: string\n        - description: Project name.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting projects.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Project list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Project\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Project\"\n                type: array\n      summary: Get available projects\n      tags:\n        - projects\n    post:\n      operationId: projects_create\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ProjectData\"\n      responses:\n        \"201\":\n          description: Project created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Project\"\n              examples:\n                response:\n                  value:\n                    collaborators:\n                      - johndoe\n                    description: Project created by me\n                    id: 79cadd17-5738-4f02-8377-68e67d3eee18\n                    last_updated: 2017-07-24T14:54:38.797878Z\n                    name: myProject\n                    owner: johndoe\n                    private: false\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Project\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectError\"\n      summary: Create a new project\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/project-copy-check/\":\n    head:\n      operationId: project_copy_check\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                project:\n                  description: UUID of the project the user wishes to copy.\n                  type: string\n              required:\n                - project\n              type: object\n        required: true\n      responses:\n        \"200\":\n          description: The authenticated has permission to copy this project\n        \"404\":\n          description: Project not found.\n      summary: Check if you are able to copy a project to your account.\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/project-copy/\":\n    post:\n      operationId: project_copy\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: Name for the newly copied project\n                  type: string\n                project:\n                  description: UUID of the project the user wishes to copy.\n                  type: string\n              required:\n                - project\n              type: object\n        required: true\n      responses:\n        \"201\":\n          description: Project copied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Project\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Project\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectError\"\n        \"404\":\n          description: Project not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Copy a project to your own account.\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/\":\n    delete:\n      operationId: projects_delete\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Project deleted.\n        \"404\":\n          description: Project not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a project\n      tags:\n        - projects\n    get:\n      operationId: projects_read\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Project retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Project\"\n              examples:\n                response:\n                  value:\n                    collaborators:\n                      - johndoe\n                    description: Project created by me\n                    id: 79cadd17-5738-4f02-8377-68e67d3eee18\n                    last_updated: 2017-07-24T14:54:38.797878Z\n                    name: myProject\n                    owner: johndoe\n                    private: false\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Project\"\n        \"404\":\n          description: Project not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get a project\n      tags:\n        - projects\n    patch:\n      operationId: projects_update\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ProjectData\"\n      responses:\n        \"200\":\n          description: Project updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Project\"\n              examples:\n                response:\n                  value:\n                    collaborators:\n                      - johndoe\n                    description: My project updated by me using PATCH\n                    id: 79cadd17-5738-4f02-8377-68e67d3eee18\n                    last_updated: 2017-07-24T14:54:43.225603Z\n                    name: myProject\n                    owner: johndoe\n                    private: true\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Project\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectError\"\n        \"404\":\n          description: Project not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a project\n      tags:\n        - projects\n    put:\n      operationId: projects_replace\n      parameters:\n        - description: User or team namespace.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ProjectData\"\n      responses:\n        \"200\":\n          description: Project updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Project\"\n              examples:\n                response:\n                  value:\n                    collaborators:\n                      - johndoe\n                    description: My project updated by me using PUT\n                    id: 79cadd17-5738-4f02-8377-68e67d3eee18\n                    last_updated: 2017-07-24T14:54:43.225603Z\n                    name: myProject\n                    owner: johndoe\n                    private: true\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Project\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectError\"\n      summary: Replace a project\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/collaborators/\":\n    get:\n      operationId: projects_collaborators_list\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit when retrieving items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when retrieving items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when retrieving items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Collaborator list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Collaborator\"\n                type: array\n              examples:\n                response:\n                  value:\n                    - email: johndoe@example.com\n                      first_name: John\n                      id: 42946cd9-2fb6-4764-944b-e107b972dd97\n                      joined: 2017-07-24T14:54:38.819171Z\n                      last_name: Doe\n                      owner: true\n                      permissions:\n                        - read_project\n                        - write_project\n                      username: johndoe\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Collaborator\"\n                type: array\n      summary: Get project collaborators\n      tags:\n        - projects\n    post:\n      operationId: projects_collaborators_create\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/CollaboratorData\"\n      responses:\n        \"201\":\n          description: Collaborator created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaborator\"\n              examples:\n                response:\n                  value:\n                    email: collaborator@examples.com\n                    first_name: John\n                    id: ef4d3a93-ae36-428c-b00f-5805b496ed95\n                    joined: 2017-07-24T14:54:49.205912Z\n                    last_name: Doe\n                    owner: false\n                    permissions:\n                      - read_project\n                      - write_project\n                    username: collaborator\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Collaborator\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CollaboratorError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/CollaboratorError\"\n      summary: Create project collaborators\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/collaborators/{collaborator}/\":\n    delete:\n      operationId: projects_collaborators_delete\n      parameters:\n        - description: Project unique identifier.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Collaborator unique identifier.\n          in: path\n          name: collaborator\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Collaborator deleted.\n        \"404\":\n          description: Collaborator not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a project collaborator\n      tags:\n        - projects\n    get:\n      operationId: projects_collaborators_read\n      parameters:\n        - description: Project unique identifier.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Collaborator unique identifier expressed as UUID or name.\n          in: path\n          name: collaborator\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Collaborator retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaborator\"\n              examples:\n                response:\n                  value:\n                    email: collaborator@illumidesk.com\n                    first_name: John\n                    id: ef4d3a93-ae36-428c-b00f-5805b496ed95\n                    joined: 2017-07-24T14:54:49.205912Z\n                    last_name: Doe\n                    owner: false\n                    permissions:\n                      - read_project\n                      - write_project\n                    username: collaborator\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Collaborator\"\n        \"404\":\n          description: Collaborator not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get a project collaborator\n      tags:\n        - projects\n    patch:\n      operationId: projects_collaborators_update\n      parameters:\n        - description: \"\"\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: \"\"\n          in: path\n          name: collaborator\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/CollaboratorData\"\n      responses:\n        \"200\":\n          description: Collaborator updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaborator\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Collaborator\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CollaboratorError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/CollaboratorError\"\n        \"404\":\n          description: Collaborator not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update project collaborator\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/deployments/\":\n    get:\n      operationId: projects_deployments_list\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit results when getting deployment list.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset results when getting deployment list.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Server name.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Ordering option when getting deployment list.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Deployment list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Deployment\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Deployment\"\n                type: array\n      summary: Retrieve deployments\n      tags:\n        - projects\n    post:\n      operationId: projects_deployments_create\n      parameters:\n        - description: Project unique identifer expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/DeploymentData\"\n      responses:\n        \"201\":\n          description: Deployment created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Deployment\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Deployment\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeploymentError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DeploymentError\"\n      summary: Create a new deployment\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/deployments/{deployment}/\":\n    delete:\n      operationId: projects_deployment_delete\n      parameters:\n        - description: Project unique identifier.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: User unique identifier.\n          in: path\n          name: deployment\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Deployment deleted\n        \"404\":\n          description: Deployment not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a deployment\n      tags:\n        - projects\n    get:\n      operationId: projects_deployments_read\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Deployment unique identifier expressed as UUID or name.\n          in: path\n          name: deployment\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Deployment retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Deployment\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Deployment\"\n        \"404\":\n          description: Deployment not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a deployment\n      tags:\n        - projects\n    patch:\n      operationId: projects_deployments_update\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Deployment unique identifier expressed as UUID or name.\n          in: path\n          name: deployment\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/DeploymentData\"\n      responses:\n        \"200\":\n          description: Deployment updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Deployment\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Deployment\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeploymentData\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DeploymentData\"\n        \"404\":\n          description: Deployment not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a deployment\n      tags:\n        - projects\n    put:\n      operationId: projects_deployments_replace\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Deployment unique identifier expressed as UUID or name.\n          in: path\n          name: deployment\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/DeploymentData\"\n      responses:\n        \"200\":\n          description: Deployment updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Deployment\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Deployment\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeploymentError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DeploymentError\"\n      summary: Replace a deployment\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/deployments/{deployment}/deploy/\":\n    post:\n      operationId: projects_deployments_deploy\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Deployment unique identifier expressed as UUID or name.\n          in: path\n          name: deployment\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: Deployment successful.\n        \"400\":\n          description: Invalid data supplied.\n      summary: Deploy an existing model\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/project_files/\":\n    get:\n      operationId: projects_project_files_list\n      parameters:\n        - description: Unique identifier for project file expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit when getting project file list.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting project file list.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering of list values when getting project file list.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n        - description: Exact file name, relative to the project root. If no such file is\n            found, an empty list will be returned.\n          in: query\n          name: filename\n          required: false\n          schema:\n            type: string\n        - description: Determines whether or not content is returned as base64. Defaults to\n            false.\n          in: query\n          name: content\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: ProjectFile list\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProjectFile\"\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProjectFile\"\n                type: array\n      summary: Get project files\n      tags:\n        - projects\n    post:\n      operationId: projects_project_files_create\n      parameters:\n        - description: Project unique identifier.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/projects_project_files_create\"\n      responses:\n        \"201\":\n          description: ProjectFile created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectFile\"\n              examples:\n                response:\n                  value:\n                    file: http://api.illumidesk.com/media/johndoe/79cadd17-5738-4f02-8377-68e67d3eee18/foo\n                    id: 592ac8da-dbf5-4654-9127-8df9ba9280a3\n                    name: myfile\n                    path: \"\"\n                    project: 79cadd17-5738-4f02-8377-68e67d3eee18\n                    public: false\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectFile\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectFileError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectFileError\"\n      summary: Create project files\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/project_files/{id}/\":\n    delete:\n      operationId: projects_project_files_delete\n      parameters:\n        - description: Project unique identifer.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: File unique identifier.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: ProjectFile deleted\n        \"404\":\n          description: ProjectFile not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a project file\n      tags:\n        - projects\n    get:\n      operationId: projects_project_files_read\n      parameters:\n        - description: Project unique identifer.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: File unique identifier.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Determines whether or not content is returned as base64. Defaults to\n            false.\n          in: query\n          name: content\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: ProjectFile retrieved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectFile\"\n              examples:\n                response:\n                  value:\n                    file: http://api.illumidesk.com/media/johndoe/79cadd17-5738-4f02-8377-68e67d3eee18/myfile\n                    id: 592ac8da-dbf5-4654-9127-8df9ba9280a3\n                    name: myfile\n                    path: \"\"\n                    project: 79cadd17-5738-4f02-8377-68e67d3eee18\n                    public: false\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectFile\"\n        \"404\":\n          description: ProjectFile not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get a project file\n      tags:\n        - projects\n    patch:\n      operationId: projects_project_files_update\n      parameters:\n        - description: Project unique identifer.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: File unique identifier.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/projects_project_files_create\"\n      responses:\n        \"200\":\n          description: ProjectFile updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectFile\"\n              examples:\n                response:\n                  value:\n                    file: /media/johndoe/79cadd17-5738-4f02-8377-68e67d3eee18/myfile\n                    id: 592ac8da-dbf5-4654-9127-8df9ba9280a3\n                    name: foo\n                    path: \"\"\n                    project: 79cadd17-5738-4f02-8377-68e67d3eee18\n                    public: false\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectFile\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectFileError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectFileError\"\n        \"404\":\n          description: ProjectFile not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a project file\n      tags:\n        - projects\n    put:\n      operationId: projects_project_files_replace\n      parameters:\n        - description: Project unique identifer.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: File unique identifier.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/projects_project_files_create\"\n      responses:\n        \"200\":\n          description: ProjectFile updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectFile\"\n              examples:\n                response:\n                  value:\n                    file: /media/johndoe/79cadd17-5738-4f02-8377-68e67d3eee18/myfile\n                    id: 592ac8da-dbf5-4654-9127-8df9ba9280a3\n                    name: myfile\n                    path: \"\"\n                    project: 79cadd17-5738-4f02-8377-68e67d3eee18\n                    public: false\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectFile\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProjectFileError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ProjectFileError\"\n      summary: Replace a project file\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/\":\n    get:\n      operationId: projects_servers_list\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit results when getting server list.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset results when getting server list.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Server name.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Ordering option when getting server list.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Server list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Server\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Server\"\n                type: array\n      summary: Retrieve servers\n      tags:\n        - projects\n    post:\n      operationId: projects_servers_create\n      parameters:\n        - description: Project unique identifer expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerData\"\n      responses:\n        \"201\":\n          description: Server created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n              examples:\n                response:\n                  value:\n                    config:\n                      type: jupyter\n                    connected: []\n                    created_at: 2017-07-24T13:41:57.089722Z\n                    endpoint: https://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/endpoint/jupyter/tree\n                    host: \"\"\n                    id: 768f6eef-d07b-40ce-bce1-0dcce5bfbfc3\n                    image_name: \"\"\n                    logs_url: wss://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/logs/\n                    name: testPostServer\n                    server_size: d16e2091-7596-481b-a50f-285812beb98c\n                    startup_script: \"\"\n                    status: Stopped\n                    status_url: wss://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/status/\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerError\"\n      summary: Create a new server\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/statuses/\":\n    get:\n      operationId: projects_servers_statuses\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Server statuses list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ServerStatus\"\n                type: array\n              examples:\n                response:\n                  value:\n                    - id: 768f6eef-d07b-40ce-bce1-0dcce5bfbfc3\n                      status: Running\n                    - id: 768f6eef-d07b-40ce-bce1-0dcce5bfbfc3\n                      status: Running\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ServerStatus\"\n                type: array\n      summary: Retrieve server statuses\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/\":\n    delete:\n      operationId: projects_servers_delete\n      parameters:\n        - description: Project unique identifier.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: User unique identifier.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Server deleted\n        \"404\":\n          description: Server not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a server\n      tags:\n        - projects\n    get:\n      operationId: projects_servers_read\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Server retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n              examples:\n                response:\n                  value:\n                    config:\n                      type: jupyter\n                    connected: []\n                    created_at: 2017-07-24T13:41:57.089722Z\n                    endpoint: https://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/endpoint/jupyter/tree\n                    host: \"\"\n                    id: 768f6eef-d07b-40ce-bce1-0dcce5bfbfc3\n                    image_name: \"\"\n                    logs_url: wss://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/logs/\n                    name: testPostServer\n                    server_size: d16e2091-7596-481b-a50f-285812beb98c\n                    startup_script: \"\"\n                    status: Stopped\n                    status_url: wss://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/status/\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n        \"404\":\n          description: Server not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a server\n      tags:\n        - projects\n    patch:\n      operationId: projects_servers_update\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerData\"\n      responses:\n        \"200\":\n          description: Server updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n              examples:\n                response:\n                  value:\n                    config:\n                      type: jupyter\n                    connected: []\n                    created_at: 2017-07-24T13:41:57.089722Z\n                    endpoint: https://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/endpoint/jupyter/tree\n                    host: \"\"\n                    id: 768f6eef-d07b-40ce-bce1-0dcce5bfbfc3\n                    image_name: \"\"\n                    logs_url: wss://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/logs/\n                    name: testPatchServer\n                    server_size: d16e2091-7596-481b-a50f-285812beb98c\n                    startup_script: \"\"\n                    status: Stopped\n                    status_url: wss://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/status/\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerData\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerData\"\n        \"404\":\n          description: Server not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a server\n      tags:\n        - projects\n    put:\n      operationId: projects_servers_replace\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerData\"\n      responses:\n        \"200\":\n          description: Server updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n              examples:\n                response:\n                  value:\n                    config:\n                      type: jupyter\n                    connected: []\n                    created_at: 2017-07-24T13:41:57.089722Z\n                    endpoint: https://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/endpoint/jupyter/tree\n                    host: \"\"\n                    id: 768f6eef-d07b-40ce-bce1-0dcce5bfbfc3\n                    image_name: \"\"\n                    logs_url: wss://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/logs/\n                    name: testPutServer\n                    server_size: d16e2091-7596-481b-a50f-285812beb98c\n                    startup_script: \"\"\n                    status: Stopped\n                    status_url: wss://api.illumidesk.com/v1/johndoe/projects/d56271ef-eea7-44ad-8d46-828a288c7a3d/servers/768f6eef-d07b-40ce-bce1-0dcce5bfbfc3/status/\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerError\"\n      summary: Replace a server\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/api-key/\":\n    get:\n      operationId: projects_servers_api-key\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Server API key\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JWT\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/JWT\"\n      summary: Get server API key\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/auth/\":\n    post:\n      operationId: projects_servers_auth\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Api key verified\n        \"401\":\n          description: Invalid api key.\n      summary: Server api key validation\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/run-stats/\":\n    post:\n      operationId: projects_servers_run-stats_create\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerRunStatisticsData\"\n      responses:\n        \"201\":\n          description: ServerRunStatistics created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatistics\"\n              examples:\n                response:\n                  value:\n                    exit_code: 0\n                    id: 7d55fca5-2ba3-4af4-95ab-26dc141e6bfc\n                    size: 0\n                    stacktrace: \"\"\n                    start: 2017-07-24T13:42:14.883820Z\n                    stop: \"\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatistics\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatisticsError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatisticsError\"\n      summary: Create a new server's run statistics\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/run-stats/{id}/\":\n    delete:\n      operationId: projects_servers_run-stats_delete\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server run statistics unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: ServerRunStatistics deleted.\n        \"404\":\n          description: ServerRunStatistics not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a server's statistics\n      tags:\n        - projects\n    get:\n      operationId: projects_servers_run-stats_read\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Run statistics unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: ServerRunStatistics retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatistics\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatistics\"\n        \"404\":\n          description: ServerRunStatistics not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve statistics for a server\n      tags:\n        - projects\n    patch:\n      operationId: projects_servers_run-stats_update\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server run statistics unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerRunStatisticsData\"\n      responses:\n        \"200\":\n          description: ServerRunStatistics updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatistics\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatistics\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatisticsError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatisticsError\"\n        \"404\":\n          description: ServerRunStatistics not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a server's statistics\n      tags:\n        - projects\n    put:\n      operationId: projects_servers_run-stats_replace\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server run statistics expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerRunStatisticsData\"\n      responses:\n        \"200\":\n          description: ServerRunStatistics updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatistics\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatistics\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatisticsError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerRunStatisticsError\"\n      summary: Replace a server's statistics\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/ssh-tunnels/\":\n    get:\n      operationId: projects_servers_ssh-tunnels_list\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Limit retrieved items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset retrieved items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Order retrieved items.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: SshTunnel list\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SshTunnel\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SshTunnel\"\n                type: array\n      summary: Get SSH Tunnels associated to a server\n      tags:\n        - projects\n    post:\n      operationId: projects_servers_ssh-tunnels_create\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SshTunnelData\"\n      responses:\n        \"201\":\n          description: SSH Tunnel created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SshTunnel\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SshTunnel\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SshTunnelError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SshTunnelError\"\n      summary: Create SSH Tunnel associated to a server\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/ssh-tunnels/{tunnel}/\":\n    delete:\n      operationId: projects_servers_ssh-tunnels_delete\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: SSH tunnel unique identifier expressed as UUID or name.\n          in: path\n          name: tunnel\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: SSH tunnel deleted.\n        \"404\":\n          description: SSH tunnel not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete an SSH Tunnel associated to a server\n      tags:\n        - projects\n    get:\n      operationId: projects_servers_ssh-tunnels_read\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: SSH tunnel unique identifier expressed as UUID or name.\n          in: path\n          name: tunnel\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: SSH Tunnel retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SshTunnel\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SshTunnel\"\n        \"404\":\n          description: SSH Tunnel not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get an SSH Tunnel associated to a server\n      tags:\n        - projects\n    patch:\n      operationId: projects_servers_ssh-tunnels_update\n      parameters:\n        - description: \"\"\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: \"\"\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: \"\"\n          in: path\n          name: tunnel\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SshTunnelData\"\n      responses:\n        \"200\":\n          description: \" SSH Tunnel updated.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SshTunnel\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SshTunnel\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SshTunnelError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SshTunnelError\"\n        \"404\":\n          description: SSH tunnel not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update an SSH Tunnel associated to a server\n      tags:\n        - projects\n    put:\n      operationId: projects_servers_ssh-tunnels_replace\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: SSH tunnel unique identifier expressed as UUID or name.\n          in: path\n          name: tunnel\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SshTunnelData\"\n      responses:\n        \"200\":\n          description: SshTunnel updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SshTunnel\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SshTunnel\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SshTunnelError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SshTunnelError\"\n      summary: Replace SSH Tunnel associated to a server\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/start/\":\n    post:\n      operationId: projects_servers_start\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: Server started.\n        \"400\":\n          description: Invalid data supplied.\n      summary: Start a server\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/stats/{id}/\":\n    delete:\n      operationId: projects_servers_stats_delete\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Stats unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: ServerStatistics deleted.\n        \"404\":\n          description: ServerStatistics not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a server's statistics\n      tags:\n        - projects\n    get:\n      operationId: projects_servers_stats_read\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server statistics unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: ServerStatistics retrieved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerStatistics\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerStatistics\"\n        \"404\":\n          description: ServerStatistics not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Retrieve a server's statistics\n      tags:\n        - projects\n    patch:\n      operationId: projects_servers_stats_update\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server statistics unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerStatisticsData\"\n      responses:\n        \"200\":\n          description: ServerStatistics updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerStatistics\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerStatistics\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerStatisticsError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerStatisticsError\"\n        \"404\":\n          description: ServerStatistics not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a server's statistics\n      tags:\n        - projects\n    put:\n      operationId: projects_servers_stats_replace\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server statistics unique identifier expressed as UUID.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerStatisticsData\"\n      responses:\n        \"200\":\n          description: ServerStatistics updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerStatistics\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerStatistics\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerStatisticsError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerStatisticsError\"\n      summary: Replace a server's statistics\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/stop/\":\n    post:\n      operationId: projects_servers_stop\n      parameters:\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: Server stopped.\n        \"400\":\n          description: Invalid data supplied.\n      summary: Stop a server\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/triggers/\":\n    get:\n      operationId: service_trigger_list\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Trigger name.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Limit when getting triggers.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset when getting triggers.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - description: Ordering when getting triggers.\n          in: query\n          name: ordering\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: ServerAction list\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ServerAction\"\n                type: array\n              examples:\n                response:\n                  value: []\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ServerAction\"\n                type: array\n      summary: Retrieve server triggers\n      tags:\n        - projects\n    post:\n      operationId: service_trigger_create\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ServerActionData\"\n        description: Server action.\n      responses:\n        \"201\":\n          description: Server action created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerAction\"\n              examples:\n                response:\n                  value:\n                    id: 19938b2c-17f6-46ed-a506-f5b196853951\n                    name: serverStartPost\n                    operation: start\n                    url: /v1/johndoe/service/ed81aac7-835d-4702-a58e-4eeda89d4a5a/trigger/19938b2c-17f6-46ed-a506-f5b196853951/call/\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerAction\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerActionError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerActionError\"\n      summary: Create a new server trigger\n      tags:\n        - projects\n  \"/v1/{namespace}/projects/{project}/servers/{server}/triggers/{trigger}/\":\n    delete:\n      operationId: service_trigger_delete\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Trigger identifier expressed as UUID or name.\n          in: path\n          name: trigger\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: ServerAction deleted\n        \"404\":\n          description: ServerAction not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Delete a server trigger\n      tags:\n        - projects\n    get:\n      operationId: service_trigger_read\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Trigger unique identifier.\n          in: path\n          name: trigger\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Server action retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerAction\"\n              examples:\n                response:\n                  value:\n                    id: 19938b2c-17f6-46ed-a506-f5b196853951\n                    name: serverStartPost\n                    operation: start\n                    url: /v1/johndoe/service/ed81aac7-835d-4702-a58e-4eeda89d4a5a/trigger/19938b2c-17f6-46ed-a506-f5b196853951/call/\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerAction\"\n        \"404\":\n          description: ServerAction not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Get a server trigger\n      tags:\n        - projects\n    patch:\n      operationId: service_trigger_update\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Trigger identifier expressed as UUID or name.\n          in: path\n          name: trigger\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerActionData\"\n      responses:\n        \"200\":\n          description: Server action updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerAction\"\n              examples:\n                response:\n                  value:\n                    id: 19938b2c-17f6-46ed-a506-f5b196853951\n                    name: serverStartPatch\n                    operation: start\n                    url: /v1/johndoe/service/ed81aac7-835d-4702-a58e-4eeda89d4a5a/trigger/19938b2c-17f6-46ed-a506-f5b196853951/call/\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerAction\"\n        \"400\":\n          description: Invalid data supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerActionError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerActionError\"\n        \"404\":\n          description: Server action not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Update a server trigger\n      tags:\n        - projects\n    put:\n      operationId: service_trigger_replace\n      parameters:\n        - description: Server unique identifier expressed as UUID or name.\n          in: path\n          name: server\n          required: true\n          schema:\n            type: string\n        - description: Project unique identifier expressed as UUID or name.\n          in: path\n          name: project\n          required: true\n          schema:\n            type: string\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Trigger unique identifier.\n          in: path\n          name: trigger\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ServerActionData\"\n      responses:\n        \"200\":\n          description: ServerAction updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerAction\"\n              examples:\n                response:\n                  value:\n                    id: 19938b2c-17f6-46ed-a506-f5b196853951\n                    name: serverStartPut\n                    operation: start\n                    url: /v1/johndoe/service/ed81aac7-835d-4702-a58e-4eeda89d4a5a/trigger/19938b2c-17f6-46ed-a506-f5b196853951/call/\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerAction\"\n        \"400\":\n          description: Invalid data supplied.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerActionError\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ServerActionError\"\n        \"404\":\n          description: Server action not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotFound\"\n      summary: Replace a server trigger\n      tags:\n        - projects\n  \"/v1/{namespace}/search/\":\n    get:\n      operationId: search\n      parameters:\n        - description: User or team name.\n          in: path\n          name: namespace\n          required: true\n          schema:\n            type: string\n        - description: Search string.\n          in: query\n          name: q\n          required: true\n          schema:\n            type: string\n        - description: Limit results to specific types.\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - users\n              - projects\n              - servers\n        - description: Limit data when getting items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Offset data when getting items.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Search list.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Search\"\n                type: array\n            text/html:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Search\"\n                type: array\n      summary: Get a search results\n      tags:\n        - search\nx-headers:\n  - Content-Type: application/json\nx-samples-languages:\n  - curl\n  - python\n  - javascript\n  - node\n  - ruby\n  - php\n  - go\n  - csharp\n  - java\n  - swift\nservers:\n  - url: https://api.illumidesk.com\ncomponents:\n  requestBodies:\n    DeploymentData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeploymentData\"\n    ServerRunStatisticsData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ServerRunStatisticsData\"\n    TeamData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TeamData\"\n    ServerData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ServerData\"\n    ServerSizeData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ServerSizeData\"\n    GroupData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GroupData\"\n    SshTunnelData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SshTunnelData\"\n    ServerStatisticsData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ServerStatisticsData\"\n    UserData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UserData\"\n    SubscriptionData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SubscriptionData\"\n    EmailData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EmailData\"\n    CardDataPutandPatch:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CardDataPutandPatch\"\n    NotificationListUpdateData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotificationListUpdateData\"\n      required: true\n    NotificationSettingsData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotificationSettingsData\"\n    ApplicationData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ApplicationData\"\n    ProjectData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ProjectData\"\n    CollaboratorData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CollaboratorData\"\n    projects_project_files_create:\n      content:\n        multipart/form-data:\n          schema:\n            type: object\n            properties:\n              file:\n                description: File to send, to create new file. This parameter is only used\n                  with form data and may include multiple files.\n                type: string\n                format: binary\n              base64_data:\n                description: Fila data, represented as base64.\n                type: string\n              name:\n                description: File name. May include path when creating file with base64\n                  field.\n                type: string\n              path:\n                description: File path. Defaults to (/).\n                type: string\n    ServerActionData:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ServerActionData\"\n  securitySchemes:\n    jwt:\n      description: >\n        A valid JSON Web Token (JWT) must be passed for all operations except\n        for those in the `/auth` route. A JWT can be retrieved from the\n        `/auth/jwt-token-auth` endpoint.\n\n\n        The following syntax is required:\n\n          Authorization: Bearer <token>\n      in: header\n      name: Authorization\n      type: apiKey\n  schemas:\n    Action:\n      properties:\n        action:\n          description: Action name.\n          type: string\n        action_name:\n          description: Action name.\n          type: string\n        can_be_cancelled:\n          description: Can action be cancelled, or not.\n          type: boolean\n        can_be_retried:\n          description: May action be retried, or not.\n          type: boolean\n        end_date:\n          description: Action needs to end before a certain date and time.\n          type: string\n        id:\n          description: Action unique identifier, expressed as UUID.\n          type: string\n        ip:\n          description: IP address that action is related to.\n          type: string\n        is_user_action:\n          description: Is the action related to a user, or not.\n          type: boolean\n        method:\n          description: Action method.\n          type: string\n        object:\n          description: Action object.\n          type: string\n        path:\n          description: Action path.\n          type: string\n        payload:\n          description: Object action payload.\n          type: object\n        resource_uri:\n          description: Resource URI.\n          type: string\n        start_date:\n          description: Action date and time start.\n          type: string\n        state:\n          description: Action state.\n          type: string\n        user:\n          description: User that action is assigned to.\n          type: string\n        user_agent:\n          description: User agent that action is related to.\n          type: string\n      required:\n        - action\n        - method\n        - user_agent\n        - state\n      type: object\n    Application:\n      properties:\n        authorization_grant_type:\n          description: OAuth2 authorization grant type\n          enum:\n            - authorization-code\n            - implicit\n            - password\n            - client-credentials\n          type: string\n        client_id:\n          description: OAuth2 client id\n          type: string\n        client_secret:\n          description: OAuth2 client secret\n          type: string\n        client_type:\n          description: OAuth2 client type\n          enum:\n            - confidential\n            - public\n          type: string\n        id:\n          description: Application unique identifier, expressed as UUID.\n          type: string\n        name:\n          description: Application name\n          type: string\n        redirect_uris:\n          description: Uris to redirect auth request\n          type: string\n      type: object\n    ApplicationData:\n      properties:\n        authorization_grant_type:\n          description: OAuth2 authorization grant type\n          enum:\n            - authorization-code\n            - implicit\n            - password\n            - client-credentials\n          type: string\n        client_type:\n          description: OAuth2 client type\n          enum:\n            - confidential\n            - public\n          type: string\n        name:\n          description: Application name\n          type: string\n        redirect_uris:\n          description: Uris to redirect auth request\n          type: string\n      required:\n        - client_type\n        - authorization_grant_type\n        - name\n      type: object\n    ApplicationError:\n      properties:\n        authorization_grant_type:\n          description: Authorization grant type field errors.\n          items:\n            type: string\n          type: array\n        client_type:\n          description: Client type field errors.\n          items:\n            type: string\n          type: array\n        name:\n          description: Name field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        redirect_uris:\n          description: Redirect uris field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    AuthToken:\n      properties:\n        token:\n          description: Unique JWT authorization token.\n          type: string\n      type: object\n    AuthTokenData:\n      properties:\n        password:\n          description: User's password.\n          type: string\n        username:\n          description: User's username.\n          type: string\n      required:\n        - username\n        - password\n      type: object\n    AuthTokenError:\n      properties:\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        password:\n          description: Password field errors.\n          items:\n            type: string\n          type: array\n        token:\n          description: Token field errors.\n          items:\n            type: string\n          type: array\n        username:\n          description: Username field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    Card:\n      properties:\n        address_city:\n          description: Address city.\n          type: string\n        address_country:\n          description: Address country.\n          type: string\n        address_line1:\n          description: Address line 1.\n          type: string\n        address_line1_check:\n          description: Address line 1 check, when processing card.\n          type: string\n        address_line2:\n          description: Address line 2.\n          type: string\n        address_state:\n          description: Address state.\n          type: string\n        address_zip:\n          description: Address zip code.\n          type: string\n        address_zip_check:\n          description: Address check, when processing card.\n          type: string\n        brand:\n          description: Credit or debit card brand.\n          type: string\n        created:\n          description: Card date and time creation.\n          type: string\n        customer:\n          description: Card customer.\n          type: string\n        cvc_check:\n          description: Security code check.\n          type: string\n        exp_month:\n          description: Card expiration month.\n          type: integer\n        exp_year:\n          description: Card expiration year.\n          type: integer\n        fingerprint:\n          description: Card fingerprint.\n          type: string\n        funding:\n          description: Funding.\n          type: string\n        id:\n          description: Card unique identifier, expressed as UUID.\n          type: string\n        last4:\n          description: Last four digits of credit or debit card.\n          type: string\n        name:\n          description: Card name.\n          type: string\n        stripe_id:\n          description: Unique stripe identifier.\n          type: string\n        token:\n          description: Card unique token.\n          type: string\n      type: object\n    CardDataPost:\n      properties:\n        address_city:\n          description: Address city.\n          type: string\n        address_country:\n          description: Address country.\n          type: string\n        address_line1:\n          description: Address line 1.\n          type: string\n        address_line2:\n          description: Address line 2.\n          type: string\n        address_state:\n          description: Address state.\n          type: string\n        address_zip:\n          description: Address zip code.\n          type: string\n        exp_month:\n          description: Card expiration month.\n          type: integer\n        exp_year:\n          description: Card expiration year.\n          type: integer\n        name:\n          description: Card name.\n          type: string\n        token:\n          description: Card unique token.\n          type: string\n      type: object\n    CardDataPutandPatch:\n      properties:\n        address_city:\n          description: Address city.\n          type: string\n        address_country:\n          description: Address country.\n          type: string\n        address_line1:\n          description: Address line 1.\n          type: string\n        address_line2:\n          description: Address line 2.\n          type: string\n        address_state:\n          description: Address state.\n          type: string\n        address_zip:\n          description: Address zip code.\n          type: string\n        exp_month:\n          description: Card expiration month.\n          type: integer\n        exp_year:\n          description: Card expiration year.\n          type: integer\n        name:\n          description: Card name.\n          type: string\n      type: object\n    CardError:\n      properties:\n        address_city:\n          description: address_city field errors\n          items:\n            type: string\n          type: array\n        address_country:\n          description: address_country field errors\n          items:\n            type: string\n          type: array\n        address_line1:\n          description: address_line1 field errors\n          items:\n            type: string\n          type: array\n        address_line1_check:\n          description: address_line1_check field errors\n          items:\n            type: string\n          type: array\n        address_line2:\n          description: address_line2 field errors\n          items:\n            type: string\n          type: array\n        address_state:\n          description: address_state field errors\n          items:\n            type: string\n          type: array\n        address_zip:\n          description: address_zip field errors\n          items:\n            type: string\n          type: array\n        address_zip_check:\n          description: address_zip_check field errors\n          items:\n            type: string\n          type: array\n        brand:\n          description: brand field errors\n          items:\n            type: string\n          type: array\n        created:\n          description: created field errors\n          items:\n            type: string\n          type: array\n        customer:\n          description: customer field errors\n          items:\n            type: string\n          type: array\n        cvc_check:\n          description: cvc_check field errors\n          items:\n            type: string\n          type: array\n        exp_month:\n          description: exp_month field errors\n          items:\n            type: string\n          type: array\n        exp_year:\n          description: exp_year field errors\n          items:\n            type: string\n          type: array\n        fingerprint:\n          description: fingerprint field errors\n          items:\n            type: string\n          type: array\n        funding:\n          description: funding field errors\n          items:\n            type: string\n          type: array\n        id:\n          description: id field errors\n          items:\n            type: string\n          type: array\n        last4:\n          description: last4 field errors\n          items:\n            type: string\n          type: array\n        name:\n          description: name field errors\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field\n          items:\n            type: string\n          type: array\n        stripe_id:\n          description: stripe_id field errors\n          items:\n            type: string\n          type: array\n        token:\n          description: token field errors\n          items:\n            type: string\n          type: array\n      type: object\n    CardUpdateError:\n      properties:\n        address_city:\n          description: address_city field errors\n          items:\n            type: string\n          type: array\n        address_country:\n          description: address_country field errors\n          items:\n            type: string\n          type: array\n        address_line1:\n          description: address_line1 field errors\n          items:\n            type: string\n          type: array\n        address_line1_check:\n          description: address_line1_check field errors\n          items:\n            type: string\n          type: array\n        address_line2:\n          description: address_line2 field errors\n          items:\n            type: string\n          type: array\n        address_state:\n          description: address_state field errors\n          items:\n            type: string\n          type: array\n        address_zip:\n          description: address_zip field errors\n          items:\n            type: string\n          type: array\n        address_zip_check:\n          description: address_zip_check field errors\n          items:\n            type: string\n          type: array\n        brand:\n          description: brand field errors\n          items:\n            type: string\n          type: array\n        created:\n          description: created field errors\n          items:\n            type: string\n          type: array\n        customer:\n          description: customer field errors\n          items:\n            type: string\n          type: array\n        cvc_check:\n          description: cvc_check field errors\n          items:\n            type: string\n          type: array\n        exp_month:\n          description: exp_month field errors\n          items:\n            type: string\n          type: array\n        exp_year:\n          description: exp_year field errors\n          items:\n            type: string\n          type: array\n        fingerprint:\n          description: fingerprint field errors\n          items:\n            type: string\n          type: array\n        funding:\n          description: funding field errors\n          items:\n            type: string\n          type: array\n        id:\n          description: id field errors\n          items:\n            type: string\n          type: array\n        last4:\n          description: last4 field errors\n          items:\n            type: string\n          type: array\n        name:\n          description: name field errors\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field\n          items:\n            type: string\n          type: array\n        stripe_id:\n          description: stripe_id field errors\n          items:\n            type: string\n          type: array\n        token:\n          description: token field errors\n          items:\n            type: string\n          type: array\n      type: object\n    Collaborator:\n      properties:\n        email:\n          description: Collaborator's valid email address.\n          type: string\n        first_name:\n          description: Collaborator's first name.\n          type: string\n        id:\n          description: Collaborator unique identifier in UUID format.\n          type: string\n        joined:\n          description: Date time of when collaborator joined.\n          type: string\n        last_name:\n          description: Collaborator's last name.\n          type: string\n        owner:\n          description: |\n            Boolean that states whether collaborator is project owner, or not.\n          type: boolean\n        permissions:\n          description: |\n            Collaborator permissions. Project creators are assigned owner\n            priviledges by default. Permissions are write and read.\n          items:\n            enum:\n              - write_project\n              - read_project\n            type: string\n          type: array\n        project:\n          description: Collaborator project name.\n          type: string\n        user:\n          description: Collaborator user name.\n          type: string\n        username:\n          description: |\n            Collaborator's user name. This must be a valid user name within the\n            system.\n          type: string\n      type: object\n    CollaboratorData:\n      properties:\n        member:\n          description: Project member username.\n          type: string\n        owner:\n          description: Project owner. Defaults to false.\n          type: boolean\n        permissions:\n          description: Permissions assigned to collaborator.\n          enum:\n            - read_project\n            - write_project\n          type: string\n      required:\n        - member\n        - permissions\n      type: object\n    CollaboratorError:\n      properties:\n        email:\n          description: Email field errors.\n          items:\n            type: string\n          type: array\n        first_name:\n          description: First name field errors.\n          items:\n            type: string\n          type: array\n        id:\n          description: Id field errors this\n          items:\n            type: string\n          type: array\n        joined:\n          description: Joined field errors.\n          items:\n            type: string\n          type: array\n        last_name:\n          description: Last name field errors.\n          items:\n            type: string\n          type: array\n        member:\n          description: Member field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        owner:\n          description: Owner field errors.\n          items:\n            type: string\n          type: array\n        permissions:\n          description: Permissions field errors.\n          items:\n            type: string\n          type: array\n        username:\n          description: Username field errors.\n          items:\n            type: string\n          type: array\n      required:\n        - member\n        - permissions\n      type: object\n    Deployment:\n      properties:\n        config:\n          $ref: \"#/components/schemas/DeploymentConfig\"\n        created_at:\n          description: Date and time when server was created.\n          type: string\n        created_by:\n          description: User that created server.\n          type: string\n        framework:\n          description: Framework that the deployment will have access to.\n          enum:\n            - tensorflow\n          type: string\n        id:\n          description: Deploymeny unique identifier\n          type: string\n        name:\n          description: Deployment name.\n          type: string\n        project:\n          description: Project name.\n          type: string\n        runtime:\n          description: Language runtime the deployment will use.\n          enum:\n            - python2.7\n          type: string\n      type: object\n    DeploymentConfig:\n      properties:\n        files:\n          description: An array of ProjectFile names that should be included in the\n            deployment.\n          items:\n            type: string\n          type: array\n        handler:\n          description: \"The filename and handler function defined by the user that will\n            handle requests to the deployment. Ex: handler.predict\"\n          type: string\n      type: object\n    DeploymentData:\n      properties:\n        config:\n          $ref: \"#/components/schemas/DeploymentConfig\"\n        framework:\n          description: Framework that the deployment will have access to.\n          enum:\n            - tensorflow\n          type: string\n        name:\n          description: Deployment name.\n          type: string\n        runtime:\n          description: Language runtime the deployment will use.\n          enum:\n            - python2.7\n          type: string\n      required:\n        - name\n        - config\n        - runtime\n        - framework\n      type: object\n    DeploymentError:\n      properties:\n        config:\n          description: Invalid deployment configuration.\n          items:\n            type: string\n          type: array\n        framework:\n          description: Invalid framework.\n          items:\n            type: string\n          type: array\n        name:\n          description: Invalid deployment name.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        runtime:\n          description: Invalid runtime.\n          items:\n            type: string\n          type: array\n      type: object\n    Email:\n      properties:\n        address:\n          description: Email address.\n          type: string\n        id:\n          description: Email unique identifier expressed as UUID.\n          type: string\n        public:\n          description: Boolean to determine if email is public or private.\n          type: boolean\n        unsubscribed:\n          description: Boolean to determine whether user is suscribed or unsubscribed to\n            out going email campaigns.\n          type: boolean\n        user:\n          description: User name for email.\n          type: string\n      required:\n        - address\n      type: object\n    EmailData:\n      properties:\n        address:\n          description: Email address.\n          type: string\n        public:\n          description: Public or private email address.\n          type: boolean\n        unsubscribed:\n          description: Unsubscribed or suscribed.\n          type: boolean\n      required:\n        - address\n      type: object\n    EmailError:\n      properties:\n        address:\n          description: Address field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        public:\n          description: Public field errors.\n          items:\n            type: string\n          type: array\n        unsubscribed:\n          description: Unsubscribed field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    Group:\n      properties:\n        created_by:\n          description: UUID of a user that created this group.\n          type: string\n        description:\n          description: Group description\n          type: string\n        id:\n          description: Group unique identifier expressed as UUID.\n          type: string\n        members:\n          description: List of group members usernames.\n          items:\n            type: string\n          type: array\n        name:\n          description: Group name\n          type: string\n        parent:\n          description: Parent group\n          type: string\n        permissions:\n          description: List of group permissions.\n          items:\n            type: string\n          type: array\n        private:\n          description: States whether group is visible to all users.\n          type: boolean\n      type: object\n    GroupData:\n      properties:\n        description:\n          description: Group description\n          type: string\n        name:\n          description: Group name\n          type: string\n        parent:\n          description: Parent group\n          type: string\n        private:\n          description: States whether group is visible to all users.\n          type: boolean\n      required:\n        - name\n      type: object\n    GroupError:\n      properties:\n        description:\n          description: Description field errors.\n          items:\n            type: string\n          type: array\n        id:\n          description: Id field errors.\n          items:\n            type: string\n          type: array\n        name:\n          description: Name field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        parent:\n          description: Private field errors.\n          items:\n            type: string\n          type: array\n        private:\n          description: Private field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    GroupUser:\n      properties:\n        user:\n          description: User username\n          type: string\n      type: object\n    GroupUserError:\n      properties:\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        user:\n          description: User field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    Invoice:\n      properties:\n        amount_due:\n          description: Amount due set in invoice.\n          type: integer\n        application_fee:\n          description: Application fee set in invoice.\n          type: integer\n        attempt_count:\n          description: Number of attempts to deliver invoice.\n          type: integer\n        attempted:\n          description: Boolean to determine whether delivery attempt executed, or not.\n          type: boolean\n        closed:\n          description: Invoice closed, or pending.\n          type: boolean\n        created:\n          description: Date and time when invoice was created.\n          type: string\n        currency:\n          description: Currency used in invoice.\n          type: string\n        customer:\n          description: Customer name.\n          type: string\n        description:\n          description: Invoice description.\n          type: string\n        id:\n          description: Invoice unique identifier expressed as UUID.\n          type: string\n        invoice_date:\n          description: Invoice issue date.\n          type: string\n        livemode:\n          description: Boolean that determines whether invoice is live, or not.\n          type: boolean\n        metadata:\n          description: Optional metadata object of invoice.\n          type: object\n        next_payment_attempt:\n          description: Next payment attempt.\n          type: string\n        paid:\n          description: Determines whether invoice has been paid, or not.\n          type: boolean\n        period_end:\n          description: Invoice end period.\n          type: string\n        period_start:\n          description: Invoice start period.\n          type: string\n        reciept_number:\n          description: Invoice receipt number.\n          type: string\n        starting_balance:\n          description: Invoice starting balance.\n          type: integer\n        statement_descriptor:\n          description: Invoice statement descriptor.\n          type: string\n        stripe_id:\n          description: Stripe account identifier.\n          type: string\n        subscription:\n          description: Suscription name.\n          type: string\n        subtotal:\n          description: Invoice sub total.\n          type: integer\n        tax:\n          description: Tax, if applicable.\n          type: integer\n        total:\n          description: Invoice total.\n          type: integer\n      required:\n        - stripe_id\n        - created\n        - amount_due\n        - currency\n        - invoice_date\n        - period_start\n        - period_end\n        - reciept_number\n        - starting_balance\n        - subtotal\n        - total\n        - customer\n      type: object\n    InvoiceItem:\n      properties:\n        amount:\n          description: Amount the the invoice item will be billed for.\n          type: integer\n        created:\n          description: Date and time when invoice was created.\n          type: string\n        currency:\n          description: Currency used in invoice.\n          type: string\n        description:\n          description: Item description.\n          type: string\n        id:\n          description: InvoiceItem unique identifier expressed as UUID.\n          type: string\n        invoice:\n          description: Invoice unique identifier expressed as UUID.\n          type: string\n        invoice_date:\n          description: Date the item was added to the invoice.\n          type: string\n        livemode:\n          description: Boolean that determines whether invoice is live, or not.\n          type: boolean\n        metadata:\n          description: Optional metadata object of invoice.\n          type: object\n        proration:\n          description: Whether or not the items cost will be prorated for the billing\n            period.\n          type: boolean\n        quantity:\n          description: Number of units for this item.\n          type: integer\n        stripe_id:\n          description: Stripe account identifier.\n          type: string\n      required:\n        - stripe_id\n        - created\n        - amount\n        - currency\n        - invoice\n        - invoice_date\n        - quantity\n      type: object\n    JWT:\n      properties:\n        token:\n          description: Unique JSON Web Token (JWT).\n          type: string\n      type: object\n    JWTData:\n      properties:\n        password:\n          description: User password.\n          type: string\n        username:\n          description: User name.\n          type: string\n      required:\n        - username\n        - password\n      type: object\n    JWTError:\n      properties:\n        non_field_errors:\n          description: Errors not connected to any field\n          items:\n            type: string\n          type: array\n        password:\n          description: password field errors\n          items:\n            type: string\n          type: array\n        token:\n          description: token field errors\n          items:\n            type: string\n          type: array\n        username:\n          description: username field errors\n          items:\n            type: string\n          type: array\n      type: object\n    NotFound:\n      properties:\n        detail:\n          description: Requested item not found.\n          type: string\n      type: object\n    Notification:\n      properties:\n        actor:\n          description: Unique identifier of the object that triggered the notification.\n          type: string\n        id:\n          description: Notification unique identifier expressed as a UUID\n          type: string\n        read:\n          description: Whether or not the notification has been marked as read by the user.\n          type: boolean\n        target:\n          description: Unique identifier of the object that was acted upon by the object\n            referred to in actor.\n          type: string\n        timestamp:\n          description: Timestamp that the notification was created at.\n          type: string\n        type:\n          description: Type of the notification, e.g. invoice.created,\n            subscription.created, etc.\n          type: string\n        user:\n          description: User the notification is for.\n          type: string\n      required:\n        - read\n      type: object\n    NotificationError:\n      properties:\n        non_field_errors:\n          description: Errors not connected to any field\n          items:\n            type: string\n          type: array\n        read:\n          description: read field errors\n          items:\n            type: string\n          type: array\n      type: object\n    NotificationListUpdateData:\n      properties:\n        notifications:\n          description: An array of notification IDs to update.\n          items:\n            type: string\n          type: array\n        read:\n          description: Mark the notification as either read or unread\n          type: boolean\n      required:\n        - notifications\n        - read\n      type: object\n    NotificationSettings:\n      properties:\n        email_address:\n          description: Email address to send notifications.\n          type: string\n        emails_enabled:\n          description: Turn emails on or off.\n          type: boolean\n        enabled:\n          description: Turn notifications on or off entirely.\n          type: boolean\n        entity:\n          description: The entity type that the settings pertain to.\n          enum:\n            - global\n            - billing\n          type: string\n        id:\n          description: Notification unique identifier expressed as a UUID\n          type: string\n        user:\n          description: User the notification settings is for.\n          type: string\n      required:\n        - enabled\n        - emails_enabled\n      type: object\n    NotificationSettingsData:\n      properties:\n        emails_enabled:\n          description: Turn emails on or off.\n          type: boolean\n        enabled:\n          description: Turn notifications on or off entirely.\n          type: boolean\n      required:\n        - enabled\n        - emails_enabled\n      type: object\n    NotificationSettingsError:\n      properties:\n        emails_enabled:\n          description: emails_enabled field errors\n          type: boolean\n        enabled:\n          description: enabled field errors\n          type: boolean\n        non_field_errors:\n          description: Errors not connected to any field\n          items:\n            type: string\n          type: array\n      type: object\n    NotificationUpdateData:\n      properties:\n        read:\n          description: Mark the notification as either read or unread\n          type: boolean\n      required:\n        - read\n      type: object\n    Plan:\n      properties:\n        amount:\n          description: Amount (cost/price) of plan.\n          type: integer\n        created:\n          description: Date and time when plan was created.\n          type: string\n        currency:\n          description: Currency used to specify amount.\n          type: string\n        id:\n          description: Plan unique identifier as UUID.\n          type: string\n        interval:\n          description: Interval for plan, such as montly or yearly.\n          type: string\n        interval_count:\n          description: \"\"\n          type: integer\n        livemode:\n          description: Boolean to determine whether plan is live, or not.\n          type: boolean\n        metadata:\n          description: Optional meta data object.\n          type: object\n        name:\n          description: Plan name.\n          type: string\n        statement_descriptor:\n          description: Statement that describes plan to users.\n          type: string\n        stripe_id:\n          description: Stripe identifier to identify entity charging for plans.\n          type: string\n        trial_period_days:\n          description: Number of days for plan trial, used for try and buy campaigns.\n          type: integer\n      required:\n        - amount\n        - interval\n        - interval_count\n        - name\n      type: object\n    Project:\n      properties:\n        collaborators:\n          description: Array of project collaborators.\n          items:\n            type: string\n          type: array\n        description:\n          description: Project description.\n          type: string\n        id:\n          description: Unique identifier for project as UUID.\n          type: string\n        last_updated:\n          description: Date and time when project was last updated.\n          type: string\n        name:\n          description: Project name.\n          type: string\n        owner:\n          description: Username of project owner.\n          type: string\n        private:\n          description: Value that states whether project is private or public.\n          type: boolean\n        team:\n          description: Project team name.\n          type: string\n      required:\n        - name\n      type: object\n    ProjectData:\n      properties:\n        description:\n          description: Project description.\n          type: string\n        name:\n          description: Project name.\n          type: string\n        private:\n          description: Private project true, otherwise public.\n          type: boolean\n      required:\n        - name\n      type: object\n    ProjectError:\n      properties:\n        collaborators:\n          description: Collaborators field errors.\n          items:\n            type: string\n          type: array\n        description:\n          description: Description field errors.\n          items:\n            type: string\n          type: array\n        id:\n          description: Id field errors.\n          items:\n            type: string\n          type: array\n        last_updated:\n          description: Last_updated field errors.\n          items:\n            type: string\n          type: array\n        name:\n          description: Name field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        owner:\n          description: Owner field errors.\n          items:\n            type: string\n          type: array\n        private:\n          description: Private field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    ProjectFile:\n      properties:\n        content:\n          description: Data sent as string, in base64 format.\n          type: string\n        id:\n          description: File unique identifier in UUID format.\n          type: string\n        name:\n          description: File name and extension.\n          type: string\n        path:\n          description: File path. Defaults to root (/).\n          type: string\n        project:\n          description: Project name where file is located.\n          type: string\n      required:\n        - project\n      type: object\n    ProjectFileError:\n      properties:\n        content:\n          description: base64_data field errors\n          items:\n            type: string\n          type: array\n        file:\n          description: file field errors\n          items:\n            type: string\n          type: array\n        id:\n          description: id field errors\n          items:\n            type: string\n          type: array\n        name:\n          description: name field errors\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field\n          items:\n            type: string\n          type: array\n        path:\n          description: path field errors\n          items:\n            type: string\n          type: array\n        project:\n          description: project field errors\n          items:\n            type: string\n          type: array\n      type: object\n    RefreshJSONWebToken:\n      properties:\n        token:\n          description: Refresh JWT token.\n          type: string\n      required:\n        - token\n      type: object\n    RefreshJSONWebTokenData:\n      properties:\n        token:\n          description: Refreshed token.\n          type: string\n      required:\n        - token\n      type: object\n    RefreshJSONWebTokenError:\n      properties:\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        token:\n          description: Token field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    Search:\n      properties: {}\n      type: object\n    Server:\n      properties:\n        config:\n          description: Server configuration option. Values are jupyter, restful and cron.\n          type: object\n        connected:\n          description: Array that represents what other servers the server is connected to.\n          items:\n            type: string\n          type: array\n        created_at:\n          description: Date and time when server was created.\n          type: string\n        created_by:\n          description: User that created server.\n          type: string\n        endpoint:\n          description: Server endpoint path.\n          type: string\n        host:\n          description: >\n            Value that represents user defined host, otherwise known as BYON\n            (Bring Your Own Node).\n          type: string\n        id:\n          description: Server unique identifier in UUID format.\n          type: string\n        image_name:\n          description: |\n            Server image source, such as 3blades/tensorflow-notebook.\n          type: string\n        logs_url:\n          description: >\n            A WebSocket URL for streaming stdout and stderr logs from the server.\n          type: string\n        name:\n          description: Server name.\n          type: string\n        project:\n          description: Project name.\n          type: string\n        server_size:\n          description: Server size unique identifier.\n          type: string\n        startup_script:\n          description: Optional startup script to use when launching server.\n          type: string\n        status:\n          description: Server status, such as Running or Error.\n          enum:\n            - Stopped\n            - Running\n            - Error\n          type: string\n        status_url:\n          description: |\n            A WebSocket URL for listening to server status changes.\n          type: string\n      required:\n        - name\n      type: object\n    ServerAction:\n      properties:\n        id:\n          description: Server trigger unique identifier.\n          type: string\n        name:\n          description: Name for server action.\n          type: string\n        operation:\n          description: >\n            Manage server state. Starting a server changes state from Pending to\n            Running. Terminating a server changes state from Running to\n            Terminated. If the action results in Error, status will change to\n            Error.\n          enum:\n            - start\n            - stop\n            - terminate\n          type: string\n        webhook:\n          $ref: \"#/components/schemas/Webhook\"\n      type: object\n    ServerActionData:\n      properties:\n        name:\n          description: Name of server action.\n          type: string\n        operation:\n          description: >\n            Manage server state. Starting a server changes state from Pending to\n            Running. Terminating a server changes state from Running to\n            Terminated. Stopping a server changes state from Running to Stopped.\n            If the action results in Error, status will change to Error.\n          enum:\n            - start\n            - stop\n            - terminate\n          type: string\n        webhook:\n          $ref: \"#/components/schemas/Webhook\"\n      type: object\n    ServerActionError:\n      properties:\n        id:\n          description: Id field errors.\n          items:\n            type: string\n          type: array\n        name:\n          description: Name field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        operation:\n          description: Operation field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    ServerConfig:\n      properties:\n        command:\n          description: Command to run\n          type: string\n        function:\n          description: Server function.\n          type: string\n        script:\n          description: Server script file.\n          type: string\n        type:\n          description: Server type.\n          enum:\n            - jupyter\n            - restful\n            - cron\n          type: string\n      type: object\n    ServerData:\n      properties:\n        config:\n          $ref: \"#/components/schemas/ServerConfig\"\n        connected:\n          description: Array of other servers the server is connected to.\n          items:\n            type: string\n          type: array\n        host:\n          description: External host IPv4 address or hostname.\n          type: string\n        image_name:\n          description: Image name.\n          type: string\n        name:\n          description: Server name.\n          type: string\n        server_size:\n          description: Server size unique identifier.\n          type: string\n        startup_script:\n          description: Startup script to run when launching server.\n          type: string\n      required:\n        - name\n      type: object\n    ServerError:\n      properties:\n        config:\n          description: config field errors.\n          items:\n            type: string\n          type: array\n        connected:\n          description: connected field errors.\n          items:\n            type: string\n          type: array\n        created_at:\n          description: created_at field errors.\n          items:\n            type: string\n          type: array\n        endpoint:\n          description: endpoint field errors.\n          items:\n            type: string\n          type: array\n        host:\n          description: host field errors.\n          items:\n            type: string\n          type: array\n        id:\n          description: id field errors.\n          items:\n            type: string\n          type: array\n        image_name:\n          description: image_name field errors.\n          items:\n            type: string\n          type: array\n        logs_url:\n          description: logs_url field errors.\n          items:\n            type: string\n          type: array\n        name:\n          description: name field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        server_size:\n          description: server_size field errors.\n          items:\n            type: string\n          type: array\n        startup_script:\n          description: startup_script field errors.\n          items:\n            type: string\n          type: array\n        status:\n          description: status field errors.\n          items:\n            type: string\n          type: array\n        status_url:\n          description: status_url field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    ServerRunStatistics:\n      properties:\n        exit_code:\n          description: Exit code, such as Exit 0 or Exit 1.\n          type: integer\n        id:\n          description: Server run statistics object unique identifier in UUID format.\n          type: string\n        server:\n          description: Server name.\n          type: string\n        size:\n          description: Size of server.\n          type: integer\n        stacktrace:\n          description: Stacktrace, if there was one.\n          type: string\n        start:\n          description: Date and time that represents when server started.\n          type: string\n        stop:\n          description: Date and time that represents when server stopped.\n          type: string\n      type: object\n    ServerRunStatisticsData:\n      properties:\n        exit_code:\n          description: Server exit code.\n          type: integer\n        size:\n          description: Server size.\n          type: integer\n        stacktrace:\n          description: Server stacktrace.\n          type: string\n        start:\n          description: Server start.\n          type: string\n        stop:\n          description: Server stop.\n          type: string\n      type: object\n    ServerRunStatisticsError:\n      properties:\n        exit_code:\n          description: exit_code field errors.\n          items:\n            type: string\n          type: array\n        id:\n          description: id field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        size:\n          description: size field errors.\n          items:\n            type: string\n          type: array\n        stacktrace:\n          description: stacktrace field errors.\n          items:\n            type: string\n          type: array\n        start:\n          description: start field errors.\n          items:\n            type: string\n          type: array\n        stop:\n          description: stop field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    ServerSize:\n      properties:\n        active:\n          description: States whether the Server size is active, or not.\n          type: boolean\n        cpu:\n          description: >\n            CPU availability, equivalent to --cpus=<value>. For example if a\n            host has\n\n            2 CPU's, then a value of 1.5 would be limit the container to using all of the\n\n            first CPU and half of the second CPU.\n          type: integer\n        id:\n          description: Server size unique identifier.\n          type: string\n        memory:\n          description: Memory restriction for container.\n          type: integer\n        name:\n          description: Server size name.\n          type: string\n      required:\n        - name\n        - cpu\n        - memory\n      type: object\n    ServerSizeData:\n      properties:\n        active:\n          description: Active or not active.\n          type: boolean\n        cpu:\n          description: CPU set for server size.\n          type: integer\n        memory:\n          description: Memory set for server size.\n          type: integer\n        name:\n          description: Server size name.\n          type: string\n      required:\n        - name\n        - cpu\n        - memory\n        - active\n      type: object\n    ServerSizeError:\n      properties:\n        active:\n          description: Active field errors.\n          items:\n            type: string\n          type: array\n        cpu:\n          description: CPU field errors.\n          items:\n            type: string\n          type: array\n        id:\n          description: Id field errors.\n          items:\n            type: string\n          type: array\n        memory:\n          description: Memory field errors.\n          items:\n            type: string\n          type: array\n        name:\n          description: Name field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n      type: object\n    ServerStatistics:\n      properties:\n        id:\n          description: Server statistics unique identifier in UUID format.\n          type: string\n        server:\n          description: Server name.\n          type: string\n        size:\n          description: Size of statistics.\n          type: integer\n        start:\n          description: Start statistics, such as start time and date.\n          type: string\n        stop:\n          description: Stop statistics, such as stop time and date.\n          type: string\n      type: object\n    ServerStatisticsData:\n      properties:\n        id:\n          description: id field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        size:\n          description: size field errors.\n          items:\n            type: string\n          type: array\n        start:\n          description: start field errors.\n          items:\n            type: string\n          type: array\n        stop:\n          description: stop field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    ServerStatisticsError:\n      properties:\n        id:\n          description: Id field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        size:\n          description: Size field errors.\n          items:\n            type: string\n          type: array\n        start:\n          description: Start field errors.\n          items:\n            type: string\n          type: array\n        stop:\n          description: Stop field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    ServerStatus:\n      properties:\n        id:\n          description: Server unique identifier in UUID format.\n          type: string\n        status:\n          enum:\n            - Stopped\n            - Running\n            - Error\n          type: string\n      type: object\n    SshTunnel:\n      properties:\n        endpoint:\n          description: SSH tunnel destination endpoint.\n          type: string\n        host:\n          description: Host, usually IPv4, for SSH tunnel.\n          type: string\n        id:\n          description: SSH tunnel unique identifier in UUID format.\n          type: string\n        local_port:\n          description: Local source port for SSH tunnel.\n          type: integer\n        name:\n          description: SSH tunnel name.\n          type: string\n        remote_port:\n          description: Remote port to establish SSH tunnel.\n          type: integer\n        server:\n          description: Server name.\n          type: string\n        username:\n          description: SSH tunnel user name.\n          type: string\n      required:\n        - name\n        - host\n        - local_port\n        - remote_port\n        - endpoint\n        - username\n      type: object\n    SshTunnelData:\n      properties:\n        endpoint:\n          description: SSH tunnel endpoint.\n          type: string\n        host:\n          description: SSH tunnel host.\n          type: string\n        local_port:\n          description: SSH tunnel local port.\n          type: integer\n        name:\n          description: SSH tunnel name.\n          type: string\n        remote_port:\n          description: SSH tunnel remote port.\n          type: integer\n        username:\n          description: User name to establish SSH tunnel.\n          type: string\n      required:\n        - name\n        - host\n        - local_port\n        - remote_port\n        - endpoint\n        - username\n      type: object\n    SshTunnelError:\n      properties:\n        endpoint:\n          description: endpoint field errors.\n          items:\n            type: string\n          type: array\n        host:\n          description: host field errors.\n          items:\n            type: string\n          type: array\n        id:\n          description: id field errors.\n          items:\n            type: string\n          type: array\n        local_port:\n          description: local_port field errors.\n          items:\n            type: string\n          type: array\n        name:\n          description: name field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        remote_port:\n          description: remote_port field errors.\n          items:\n            type: string\n          type: array\n        username:\n          description: username field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    Subscription:\n      properties:\n        application_fee_percent:\n          description: Application fee percent.\n          type: number\n        cancel_at_period_end:\n          description: Boolean value to determine whether plan cancels at the end of the\n            period, or not.\n          type: boolean\n        canceled_at:\n          description: Date and time when plan was cancelled.\n          type: string\n        created:\n          description: Date and time suscription was created.\n          type: string\n        current_period_end:\n          description: Current suscription plan end date.\n          type: string\n        current_period_start:\n          description: Current suscription plan start date.\n          type: string\n        ended_at:\n          description: Date and time for when plan ended.\n          type: string\n        id:\n          description: Unique identifier for suscription as UUID.\n          type: string\n        livemode:\n          description: Suscription live, or not.\n          type: boolean\n        plan:\n          description: Plan name.\n          type: string\n        quantity:\n          description: Quantity purchased as integer.\n          type: integer\n        start:\n          description: Date and time for when plan started.\n          type: string\n        status:\n          description: Suscription status.\n          type: string\n        stripe_id:\n          description: Stripe (payment processor) identifier.\n          type: string\n        trial_end:\n          description: Date and time for trial end.\n          type: string\n        trial_start:\n          description: Date and time for trial start.\n          type: string\n      required:\n        - plan\n      type: object\n    SubscriptionData:\n      properties:\n        plan:\n          description: Plan unique identifier.\n          type: string\n      required:\n        - plan\n      type: object\n    SubscriptionError:\n      properties:\n        application_fee_percent:\n          description: application_fee_percent field errors\n          items:\n            type: string\n          type: array\n        cancel_at_period_end:\n          description: cancel_at_period_end field errors\n          items:\n            type: string\n          type: array\n        canceled_at:\n          description: canceled_at field errors\n          items:\n            type: string\n          type: array\n        created:\n          description: created field errors\n          items:\n            type: string\n          type: array\n        current_period_end:\n          description: current_period_end field errors\n          items:\n            type: string\n          type: array\n        current_period_start:\n          description: current_period_start field errors\n          items:\n            type: string\n          type: array\n        ended_at:\n          description: ended_at field errors\n          items:\n            type: string\n          type: array\n        id:\n          description: id field errors\n          items:\n            type: string\n          type: array\n        livemode:\n          description: livemode field errors\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field\n          items:\n            type: string\n          type: array\n        plan:\n          description: plan field errors\n          items:\n            type: string\n          type: array\n        quantity:\n          description: quantity field errors\n          items:\n            type: string\n          type: array\n        start:\n          description: start field errors\n          items:\n            type: string\n          type: array\n        status:\n          description: status field errors\n          items:\n            type: string\n          type: array\n        stripe_id:\n          description: stripe_id field errors\n          items:\n            type: string\n          type: array\n        trial_end:\n          description: trial_end field errors\n          items:\n            type: string\n          type: array\n        trial_start:\n          description: trial_start field errors\n          items:\n            type: string\n          type: array\n      type: object\n    Team:\n      properties:\n        avatar:\n          description: Team avatar image.\n          format: byte\n          type: string\n        avatar_url:\n          description: Team avatar url.\n          type: string\n        created_by:\n          description: UUID of a user that created this team.\n          type: string\n        description:\n          description: Team description\n          type: string\n        id:\n          description: Team unique identifier expressed as UUID.\n          type: string\n        location:\n          description: Team location.\n          type: string\n        name:\n          description: Team name\n          type: string\n        website:\n          description: Teams website.\n          type: string\n      type: object\n    TeamData:\n      properties:\n        avatar:\n          description: Team avatar image.\n          format: byte\n          type: string\n        avatar_url:\n          description: Team avatar url.\n          type: string\n        description:\n          description: Team description\n          type: string\n        location:\n          description: Team location.\n          type: string\n        name:\n          description: Team name\n          type: string\n        website:\n          description: Teams website.\n          type: string\n      required:\n        - name\n      type: object\n    TeamError:\n      properties:\n        avatar:\n          description: Avatar field errors.\n          items:\n            type: string\n          type: array\n        avatar_url:\n          description: Avatar url field errors.\n          items:\n            type: string\n          type: array\n        description:\n          description: Description field errors.\n          items:\n            type: string\n          type: array\n        id:\n          description: Id field errors.\n          items:\n            type: string\n          type: array\n        location:\n          description: Location field errors.\n          items:\n            type: string\n          type: array\n        name:\n          description: Name field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        website:\n          description: Website field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    User:\n      properties:\n        email:\n          description: User email address.\n          type: string\n        first_name:\n          description: User first name.\n          type: string\n        id:\n          description: User unique identifier, expressed as UUID.\n          type: string\n        last_name:\n          description: User last name.\n          type: string\n        profile:\n          $ref: \"#/components/schemas/UserProfile\"\n        username:\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          maxLength: 64\n          minLength: 6\n          pattern: \"[a-z0-9]{6,64}\"\n          type: string\n      required:\n        - username\n        - profile\n      type: object\n    UserData:\n      properties:\n        email:\n          description: User email.\n          type: string\n        first_name:\n          description: User first name.\n          type: string\n        last_name:\n          description: User last name.\n          type: string\n        password:\n          description: User password.\n          type: string\n        profile:\n          $ref: \"#/components/schemas/UserProfile\"\n        username:\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          type: string\n      required:\n        - username\n        - password\n        - profile\n      type: object\n    UserError:\n      properties:\n        email:\n          description: Email field errors.\n          items:\n            type: string\n          type: array\n        first_name:\n          description: First name field errors.\n          items:\n            type: string\n          type: array\n        id:\n          description: id field errors.\n          items:\n            type: string\n          type: array\n        last_name:\n          description: Last name field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        password:\n          description: Password field errors.\n          items:\n            type: string\n          type: array\n        profile:\n          $ref: \"#/components/schemas/UserProfileError\"\n        username:\n          description: Username field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    UserProfile:\n      properties:\n        avatar:\n          description: Avatar image\n          format: byte\n          type: string\n        bio:\n          description: Description of user's biography.\n          type: string\n        company:\n          description: User's company.\n          type: string\n        location:\n          description: User location.\n          type: string\n        timezone:\n          description: User's time zone.\n          type: string\n        url:\n          description: Users's personal website.\n          type: string\n      type: object\n    UserProfileError:\n      properties:\n        bio:\n          description: Bio field errors.\n          items:\n            type: string\n          type: array\n        company:\n          description: Company field errors.\n          items:\n            type: string\n          type: array\n        location:\n          description: Location field errors.\n          items:\n            type: string\n          type: array\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        timezone:\n          description: Timezone field errors.\n          items:\n            type: string\n          type: array\n        url:\n          description: URL field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    VerifyJSONWebToken:\n      properties:\n        token:\n          description: Varify JWT token.\n          type: string\n      required:\n        - token\n      type: object\n    VerifyJSONWebTokenData:\n      properties:\n        token:\n          description: JSON Web Token (JWT).\n          type: string\n      required:\n        - token\n      type: object\n    VerifyJSONWebTokenError:\n      properties:\n        non_field_errors:\n          description: Errors not connected to any field.\n          items:\n            type: string\n          type: array\n        token:\n          description: Token field errors.\n          items:\n            type: string\n          type: array\n      type: object\n    Webhook:\n      properties:\n        payload:\n          description: JSON with payload and webhook configurations.\n          type: object\n        url:\n          description: URL for webhook.\n          type: string\n      required:\n        - url\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/illumidesk.com-1.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/illumidesk.com-1.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: reference type \"#/components/schemas/ServerConfig\" name conflict: \"ServerConfig\""
}