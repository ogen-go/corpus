{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/signer/2017-08-25/openapi.yaml",
			"byteSize": 92163,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2017-08-25'\n  x-release: v4\n  title: AWS Signer\n  description: '\u003cp\u003eAWS Signer is a fully managed code signing service to help you ensure the trust and integrity of your code. \u003c/p\u003e \u003cp\u003eAWS Signer supports the following applications:\u003c/p\u003e \u003cp\u003eWith \u003ci\u003ecode signing for AWS Lambda\u003c/i\u003e, you can sign AWS Lambda deployment packages. Integrated support is provided for Amazon S3, Amazon CloudWatch, and AWS CloudTrail. In order to sign code, you create a signing profile and then use Signer to sign Lambda zip files in S3. \u003c/p\u003e \u003cp\u003eWith \u003ci\u003ecode signing for IoT\u003c/i\u003e, you can sign code for any IoT device that is supported by AWS. IoT code signing is available for \u003ca href=\"http://docs.aws.amazon.com/freertos/latest/userguide/\"\u003eAmazon FreeRTOS\u003c/a\u003e and \u003ca href=\"http://docs.aws.amazon.com/iot/latest/developerguide/\"\u003eAWS IoT Device Management\u003c/a\u003e, and is integrated with \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/\"\u003eAWS Certificate Manager (ACM)\u003c/a\u003e. In order to sign code, you import a third-party code signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS and AWS IoT Device Management. \u003c/p\u003e \u003cp\u003eFor more information about AWS Signer, see the \u003ca href=\"http://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html\"\u003eAWS Signer Developer Guide\u003c/a\u003e.\u003c/p\u003e \u003cp/\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: signer\n  x-aws-signingName: signer\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/signer-2017-08-25.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/signer/'\nservers:\n  - url: 'http://signer.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The signer multi-region endpoint\n  - url: 'https://signer.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The signer multi-region endpoint\n  - url: 'http://signer.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The signer endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://signer.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The signer endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/signing-profiles/{profileName}/permissions':\n    post:\n      operationId: AddProfilePermission\n      description: Adds cross-account permissions to a signing profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddProfilePermissionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: ServiceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLimitExceededException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '486':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: profileName\n          in: path\n          required: true\n          description: The human-readable name of the signing profile.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_]{2,}'\n            minLength: 2\n            maxLength: 64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - action\n                - principal\n                - statementId\n              properties:\n                profileVersion:\n                  description: The version of the signing profile.\n                  type: string\n                  pattern: '^[a-zA-Z0-9]{10}$'\n                  minLength: 10\n                  maxLength: 10\n                action:\n                  description: The AWS Signer action permitted as part of cross-account permissions.\n                  type: string\n                principal:\n                  description: The AWS principal receiving cross-account permissions. This may be an IAM role or another AWS account ID.\n                  type: string\n                revisionId:\n                  description: A unique identifier for the current profile revision.\n                  type: string\n                statementId:\n                  description: A unique identifier for the cross-account permission statement.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListProfilePermissions\n      description: Lists the cross-account permissions associated with a signing profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListProfilePermissionsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '484':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: profileName\n          in: path\n          required: true\n          description: Name of the signing profile containing the cross-account permissions.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_]{2,}'\n            minLength: 2\n            maxLength: 64\n        - name: nextToken\n          in: query\n          required: false\n          description: String for specifying the next set of paginated results.\n          schema:\n            type: string\n  '/signing-profiles/{profileName}':\n    delete:\n      operationId: CancelSigningProfile\n      description: 'Changes the state of an \u003ccode\u003eACTIVE\u003c/code\u003e signing profile to \u003ccode\u003eCANCELED\u003c/code\u003e. A canceled profile is still viewable with the \u003ccode\u003eListSigningProfiles\u003c/code\u003e operation, but it cannot perform new signing jobs, and is deleted two years after cancelation.'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: profileName\n          in: path\n          required: true\n          description: The name of the signing profile to be canceled.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_]{2,}'\n            minLength: 2\n            maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetSigningProfile\n      description: Returns information on a specific signing profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSigningProfileResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: profileName\n          in: path\n          required: true\n          description: The name of the target signing profile.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_]{2,}'\n            minLength: 2\n            maxLength: 64\n        - name: profileOwner\n          in: query\n          required: false\n          description: The AWS account ID of the profile owner.\n          schema:\n            type: string\n            pattern: '^[0-9]{12}$'\n            minLength: 12\n            maxLength: 12\n    put:\n      operationId: PutSigningProfile\n      description: 'Creates a signing profile. A signing profile is a code signing template that can be used to carry out a pre-defined signing job. For more information, see \u003ca href=\"http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html\"\u003ehttp://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html\u003c/a\u003e '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutSigningProfileResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '484':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: profileName\n          in: path\n          required: true\n          description: The name of the signing profile to be created.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_]{2,}'\n            minLength: 2\n            maxLength: 64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - platformId\n              properties:\n                signingMaterial:\n                  description: The ACM certificate that is used to sign your code.\n                  type: object\n                  properties:\n                    certificateArn:\n                      allOf:\n                        - $ref: '#/components/schemas/CertificateArn'\n                        - description: The Amazon Resource Name (ARN) of the certificates that is used to sign your code.\n                signatureValidityPeriod:\n                  description: The validity period for a signing job.\n                  type: object\n                  properties:\n                    value:\n                      allOf:\n                        - $ref: '#/components/schemas/Integer'\n                        - description: The numerical value of the time unit for signature validity.\n                    type:\n                      allOf:\n                        - $ref: '#/components/schemas/ValidityType'\n                        - description: The time unit for signature validity.\n                platformId:\n                  description: The ID of the signing platform to be created.\n                  type: string\n                overrides:\n                  description: Any overrides that are applied to the signing configuration of a code signing platform.\n                  type: object\n                  properties:\n                    signingConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/SigningConfigurationOverrides'\n                        - description: A signing configuration that overrides the default encryption or hash algorithm of a signing job.\n                    signingImageFormat:\n                      allOf:\n                        - $ref: '#/components/schemas/ImageFormat'\n                        - description: 'A signed image is a JSON object. When overriding the default signing platform configuration, a customer can select either of two signing formats, \u003ccode\u003eJSONEmbedded\u003c/code\u003e or \u003ccode\u003eJSONDetached\u003c/code\u003e. (A third format value, \u003ccode\u003eJSON\u003c/code\u003e, is reserved for future use.) With \u003ccode\u003eJSONEmbedded\u003c/code\u003e, the signing image has the payload embedded in it. With \u003ccode\u003eJSONDetached\u003c/code\u003e, the payload is not be embedded in the signing image.'\n                signingParameters:\n                  description: Map of key-value pairs for signing. These can include any information that you want to use during signing.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/SigningParameterValue'\n                tags:\n                  description: Tags to be associated with the signing profile that is being created.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/signing-jobs/{jobId}':\n    get:\n      operationId: DescribeSigningJob\n      description: 'Returns information about a specific code signing job. You specify the job by using the \u003ccode\u003ejobId\u003c/code\u003e value that is returned by the \u003ca\u003eStartSigningJob\u003c/a\u003e operation. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeSigningJobResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          description: The ID of the signing job on input.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/signing-platforms/{platformId}':\n    get:\n      operationId: GetSigningPlatform\n      description: Returns information on a specific signing platform.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSigningPlatformResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: platformId\n          in: path\n          required: true\n          description: The ID of the target signing platform.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /signing-jobs:\n    get:\n      operationId: ListSigningJobs\n      description: 'Lists all your signing jobs. You can use the \u003ccode\u003emaxResults\u003c/code\u003e parameter to limit the number of signing jobs that are returned in the response. If additional jobs remain to be listed, code signing returns a \u003ccode\u003enextToken\u003c/code\u003e value. Use this value in subsequent calls to \u003ccode\u003eListSigningJobs\u003c/code\u003e to fetch the remaining values. You can continue calling \u003ccode\u003eListSigningJobs\u003c/code\u003e with your \u003ccode\u003emaxResults\u003c/code\u003e parameter and with new values that code signing returns in the \u003ccode\u003enextToken\u003c/code\u003e parameter until all of your signing jobs have been returned. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSigningJobsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: status\n          in: query\n          required: false\n          description: A status value with which to filter your results.\n          schema:\n            type: string\n            enum:\n              - InProgress\n              - Failed\n              - Succeeded\n        - name: platformId\n          in: query\n          required: false\n          description: The ID of microcontroller platform that you specified for the distribution of your code image.\n          schema:\n            type: string\n        - name: requestedBy\n          in: query\n          required: false\n          description: The IAM principal that requested the signing job.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: 'Specifies the maximum number of items to return in the response. Use this parameter when paginating results. If additional items exist beyond the number you specify, the \u003ccode\u003enextToken\u003c/code\u003e element is set in the response. Use the \u003ccode\u003enextToken\u003c/code\u003e value in a subsequent request to retrieve additional items. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 25\n        - name: nextToken\n          in: query\n          required: false\n          description: 'String for specifying the next set of paginated results to return. After you receive a response with truncated results, use this parameter in a subsequent request. Set it to the value of \u003ccode\u003enextToken\u003c/code\u003e from the response that you just received.'\n          schema:\n            type: string\n        - name: isRevoked\n          in: query\n          required: false\n          description: Filters results to return only signing jobs with revoked signatures.\n          schema:\n            type: boolean\n        - name: signatureExpiresBefore\n          in: query\n          required: false\n          description: Filters results to return only signing jobs with signatures expiring before a specified timestamp.\n          schema:\n            type: string\n            format: date-time\n        - name: signatureExpiresAfter\n          in: query\n          required: false\n          description: Filters results to return only signing jobs with signatures expiring after a specified timestamp.\n          schema:\n            type: string\n            format: date-time\n        - name: jobInvoker\n          in: query\n          required: false\n          description: Filters results to return only signing jobs initiated by a specified IAM entity.\n          schema:\n            type: string\n            pattern: '^[0-9]{12}$'\n            minLength: 12\n            maxLength: 12\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: StartSigningJob\n      description: '\u003cp\u003eInitiates a signing job to be performed on the code provided. Signing jobs are viewable by the \u003ccode\u003eListSigningJobs\u003c/code\u003e operation for two years after they are performed. Note the following requirements: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e You must create an Amazon S3 source bucket. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html\"\u003eCreate a Bucket\u003c/a\u003e in the \u003ci\u003eAmazon S3 Getting Started Guide\u003c/i\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eYour S3 source bucket must be version enabled.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eYou must create an S3 destination bucket. Code signing uses your S3 destination bucket to write your signed code.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eYou specify the name of the source and destination buckets when calling the \u003ccode\u003eStartSigningJob\u003c/code\u003e operation.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eYou must also specify a request token that identifies your request to code signing.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou can call the \u003ca\u003eDescribeSigningJob\u003c/a\u003e and the \u003ca\u003eListSigningJobs\u003c/a\u003e actions after you call \u003ccode\u003eStartSigningJob\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor a Java example that shows how to use this action, see \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/\"\u003ehttp://docs.aws.amazon.com/acm/latest/userguide/\u003c/a\u003e \u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartSigningJobResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '485':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - source\n                - destination\n                - profileName\n                - clientRequestToken\n              properties:\n                source:\n                  description: An \u003ccode\u003eS3Source\u003c/code\u003e object that contains information about the S3 bucket where you saved your unsigned code.\n                  type: object\n                  properties:\n                    s3:\n                      allOf:\n                        - $ref: '#/components/schemas/S3Source'\n                        - description: The \u003ccode\u003eS3Source\u003c/code\u003e object.\n                destination:\n                  description: Points to an \u003ccode\u003eS3Destination\u003c/code\u003e object that contains information about your S3 bucket.\n                  type: object\n                  properties:\n                    s3:\n                      allOf:\n                        - $ref: '#/components/schemas/S3Destination'\n                        - description: The \u003ccode\u003eS3Destination\u003c/code\u003e object.\n                profileName:\n                  description: The name of the signing profile.\n                  type: string\n                  pattern: '^[a-zA-Z0-9_]{2,}'\n                  minLength: 2\n                  maxLength: 64\n                clientRequestToken:\n                  description: String that identifies the signing request. All calls after the first that use this token return the same response as the first call.\n                  type: string\n                profileOwner:\n                  description: The AWS account ID of the signing profile owner.\n                  type: string\n                  pattern: '^[0-9]{12}$'\n                  minLength: 12\n                  maxLength: 12\n  /signing-platforms:\n    get:\n      operationId: ListSigningPlatforms\n      description: 'Lists all signing platforms available in code signing that match the request parameters. If additional jobs remain to be listed, code signing returns a \u003ccode\u003enextToken\u003c/code\u003e value. Use this value in subsequent calls to \u003ccode\u003eListSigningJobs\u003c/code\u003e to fetch the remaining values. You can continue calling \u003ccode\u003eListSigningJobs\u003c/code\u003e with your \u003ccode\u003emaxResults\u003c/code\u003e parameter and with new values that code signing returns in the \u003ccode\u003enextToken\u003c/code\u003e parameter until all of your signing jobs have been returned.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSigningPlatformsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: category\n          in: query\n          required: false\n          description: The category type of a signing platform.\n          schema:\n            type: string\n        - name: partner\n          in: query\n          required: false\n          description: Any partner entities connected to a signing platform.\n          schema:\n            type: string\n        - name: target\n          in: query\n          required: false\n          description: The validation template that is used by the target signing platform.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to be returned by this operation.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 25\n        - name: nextToken\n          in: query\n          required: false\n          description: 'Value for specifying the next set of paginated results to return. After you receive a response with truncated results, use this parameter in a subsequent request. Set it to the value of \u003ccode\u003enextToken\u003c/code\u003e from the response that you just received.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /signing-profiles:\n    get:\n      operationId: ListSigningProfiles\n      description: 'Lists all available signing profiles in your AWS account. Returns only profiles with an \u003ccode\u003eACTIVE\u003c/code\u003e status unless the \u003ccode\u003eincludeCanceled\u003c/code\u003e request field is set to \u003ccode\u003etrue\u003c/code\u003e. If additional jobs remain to be listed, code signing returns a \u003ccode\u003enextToken\u003c/code\u003e value. Use this value in subsequent calls to \u003ccode\u003eListSigningJobs\u003c/code\u003e to fetch the remaining values. You can continue calling \u003ccode\u003eListSigningJobs\u003c/code\u003e with your \u003ccode\u003emaxResults\u003c/code\u003e parameter and with new values that code signing returns in the \u003ccode\u003enextToken\u003c/code\u003e parameter until all of your signing jobs have been returned.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSigningProfilesResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '482':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: includeCanceled\n          in: query\n          required: false\n          description: Designates whether to include profiles with the status of \u003ccode\u003eCANCELED\u003c/code\u003e.\n          schema:\n            type: boolean\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of profiles to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 25\n        - name: nextToken\n          in: query\n          required: false\n          description: 'Value for specifying the next set of paginated results to return. After you receive a response with truncated results, use this parameter in a subsequent request. Set it to the value of \u003ccode\u003enextToken\u003c/code\u003e from the response that you just received.'\n          schema:\n            type: string\n        - name: platformId\n          in: query\n          required: false\n          description: Filters results to return only signing jobs initiated for a specified signing platform.\n          schema:\n            type: string\n        - name: statuses\n          in: query\n          required: false\n          description: Filters results to return only signing jobs with statuses in the specified list.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/SigningProfileStatus'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Returns a list of the tags associated with a signing profile resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) for the signing profile.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: 'Adds one or more tags to a signing profile. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a key and an optional value. To specify the signing profile, use its Amazon Resource Name (ARN). To specify the tag, use a key-value pair.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) for the signing profile.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: One or more tags to be associated with the signing profile.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/signing-profiles/{profileName}/permissions/{statementId}#revisionId':\n    delete:\n      operationId: RemoveProfilePermission\n      description: Removes cross-account permissions from a signing profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveProfilePermissionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '485':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: profileName\n          in: path\n          required: true\n          description: A human-readable name for the signing profile with permissions to be removed.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_]{2,}'\n            minLength: 2\n            maxLength: 64\n        - name: revisionId\n          in: query\n          required: true\n          description: An identifier for the current revision of the signing profile permissions.\n          schema:\n            type: string\n        - name: statementId\n          in: path\n          required: true\n          description: A unique identifier for the cross-account permissions statement.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/signing-jobs/{jobId}/revoke':\n    put:\n      operationId: RevokeSignature\n      description: Changes the state of a signing job to REVOKED. This indicates that the signature is no longer valid.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '484':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          description: ID of the signing job to be revoked.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - reason\n              properties:\n                jobOwner:\n                  description: AWS account ID of the job owner.\n                  type: string\n                  pattern: '^[0-9]{12}$'\n                  minLength: 12\n                  maxLength: 12\n                reason:\n                  description: The reason for revoking the signing job.\n                  type: string\n                  minLength: 1\n                  maxLength: 500\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/signing-profiles/{profileName}/revoke':\n    put:\n      operationId: RevokeSigningProfile\n      description: Changes the state of a signing profile to REVOKED. This indicates that signatures generated using the signing profile after an effective start date are no longer valid.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '484':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n      parameters:\n        - name: profileName\n          in: path\n          required: true\n          description: The name of the signing profile to be revoked.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9_]{2,}'\n            minLength: 2\n            maxLength: 64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - profileVersion\n                - reason\n                - effectiveTime\n              properties:\n                profileVersion:\n                  description: The version of the signing profile to be revoked.\n                  type: string\n                  pattern: '^[a-zA-Z0-9]{10}$'\n                  minLength: 10\n                  maxLength: 10\n                reason:\n                  description: The reason for revoking a signing profile.\n                  type: string\n                  minLength: 1\n                  maxLength: 500\n                effectiveTime:\n                  description: A timestamp for when revocation of a Signing Profile should become effective. Signatures generated using the signing profile after this timestamp are not trusted.\n                  type: string\n                  format: date-time\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: 'Removes one or more tags from a signing profile. To remove the tags, specify a list of tag keys.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceErrorException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) for the signing profile.\n          schema:\n            type: string\n        - name: tagKeys\n          in: query\n          required: true\n          description: A list of tag keys to be removed from the signing profile.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 1\n            maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AddProfilePermissionResponse:\n      type: object\n      properties:\n        revisionId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A unique identifier for the current profile revision.\n    ValidationException: {}\n    ResourceNotFoundException: {}\n    AccessDeniedException: {}\n    ServiceLimitExceededException: {}\n    ConflictException: {}\n    TooManyRequestsException: {}\n    InternalServiceErrorException: {}\n    DescribeSigningJobResponse:\n      type: object\n      properties:\n        jobId:\n          allOf:\n            - $ref: '#/components/schemas/JobId'\n            - description: The ID of the signing job on output.\n        source:\n          allOf:\n            - $ref: '#/components/schemas/Source'\n            - description: The object that contains the name of your S3 bucket or your raw code.\n        signingMaterial:\n          allOf:\n            - $ref: '#/components/schemas/SigningMaterial'\n            - description: The Amazon Resource Name (ARN) of your code signing certificate.\n        platformId:\n          allOf:\n            - $ref: '#/components/schemas/PlatformId'\n            - description: The microcontroller platform to which your signed code image will be distributed.\n        platformDisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: A human-readable name for the signing platform associated with the signing job.\n        profileName:\n          allOf:\n            - $ref: '#/components/schemas/ProfileName'\n            - description: The name of the profile that initiated the signing operation.\n        profileVersion:\n          allOf:\n            - $ref: '#/components/schemas/ProfileVersion'\n            - description: The version of the signing profile used to initiate the signing job.\n        overrides:\n          allOf:\n            - $ref: '#/components/schemas/SigningPlatformOverrides'\n            - description: A list of any overrides that were applied to the signing operation.\n        signingParameters:\n          allOf:\n            - $ref: '#/components/schemas/SigningParameters'\n            - description: 'Map of user-assigned key-value pairs used during signing. These values contain any information that you specified for use in your signing job. '\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Date and time that the signing job was created.\n        completedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Date and time that the signing job was completed.\n        signatureExpiresAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: Thr expiration timestamp for the signature generated by the signing job.\n        requestedBy:\n          allOf:\n            - $ref: '#/components/schemas/RequestedBy'\n            - description: The IAM principal that requested the signing job.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/SigningStatus'\n            - description: Status of the signing job.\n        statusReason:\n          allOf:\n            - $ref: '#/components/schemas/StatusReason'\n            - description: String value that contains the status reason.\n        revocationRecord:\n          allOf:\n            - $ref: '#/components/schemas/SigningJobRevocationRecord'\n            - description: A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.\n        signedObject:\n          allOf:\n            - $ref: '#/components/schemas/SignedObject'\n            - description: Name of the S3 bucket where the signed code image is saved by code signing.\n        jobOwner:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The AWS account ID of the job owner.\n        jobInvoker:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The IAM entity that initiated the signing job.\n    GetSigningPlatformResponse:\n      type: object\n      properties:\n        platformId:\n          allOf:\n            - $ref: '#/components/schemas/PlatformId'\n            - description: The ID of the target signing platform.\n        displayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The display name of the target signing platform.\n        partner:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A list of partner entities that use the target signing platform.\n        target:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The validation template that is used by the target signing platform.\n        category:\n          allOf:\n            - $ref: '#/components/schemas/Category'\n            - description: The category type of the target signing platform.\n        signingConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/SigningConfiguration'\n            - description: A list of configurations applied to the target platform at signing.\n        signingImageFormat:\n          allOf:\n            - $ref: '#/components/schemas/SigningImageFormat'\n            - description: The format of the target platform's signing image.\n        maxSizeInMB:\n          allOf:\n            - $ref: '#/components/schemas/MaxSizeInMB'\n            - description: The maximum size (in MB) of the payload that can be signed by the target platform.\n        revocationSupported:\n          allOf:\n            - $ref: '#/components/schemas/bool'\n            - description: A flag indicating whether signatures generated for the signing platform can be revoked.\n    GetSigningProfileResponse:\n      type: object\n      properties:\n        profileName:\n          allOf:\n            - $ref: '#/components/schemas/ProfileName'\n            - description: The name of the target signing profile.\n        profileVersion:\n          allOf:\n            - $ref: '#/components/schemas/ProfileVersion'\n            - description: The current version of the signing profile.\n        profileVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: 'The signing profile ARN, including the profile version.'\n        revocationRecord:\n          $ref: '#/components/schemas/SigningProfileRevocationRecord'\n        signingMaterial:\n          allOf:\n            - $ref: '#/components/schemas/SigningMaterial'\n            - description: The ARN of the certificate that the target profile uses for signing operations.\n        platformId:\n          allOf:\n            - $ref: '#/components/schemas/PlatformId'\n            - description: The ID of the platform that is used by the target signing profile.\n        platformDisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: A human-readable name for the signing platform associated with the signing profile.\n        signatureValidityPeriod:\n          $ref: '#/components/schemas/SignatureValidityPeriod'\n        overrides:\n          allOf:\n            - $ref: '#/components/schemas/SigningPlatformOverrides'\n            - description: A list of overrides applied by the target signing profile for signing operations.\n        signingParameters:\n          allOf:\n            - $ref: '#/components/schemas/SigningParameters'\n            - description: A map of key-value pairs for signing operations that is attached to the target signing profile.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/SigningProfileStatus'\n            - description: The status of the target signing profile.\n        statusReason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Reason for the status of the target signing profile.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: The Amazon Resource Name (ARN) for the signing profile.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: A list of tags associated with the signing profile.\n    ListProfilePermissionsResponse:\n      type: object\n      properties:\n        revisionId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The identifier for the current revision of profile permissions.\n        policySizeBytes:\n          allOf:\n            - $ref: '#/components/schemas/PolicySizeBytes'\n            - description: Total size of the policy associated with the Signing Profile in bytes.\n        permissions:\n          allOf:\n            - $ref: '#/components/schemas/Permissions'\n            - description: List of permissions associated with the Signing Profile.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: String for specifying the next set of paginated results.\n    ListSigningJobsResponse:\n      type: object\n      properties:\n        jobs:\n          allOf:\n            - $ref: '#/components/schemas/SigningJobs'\n            - description: A list of your signing jobs.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: String for specifying the next set of paginated results.\n    ListSigningPlatformsResponse:\n      type: object\n      properties:\n        platforms:\n          allOf:\n            - $ref: '#/components/schemas/SigningPlatforms'\n            - description: A list of all platforms that match the request parameters.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Value for specifying the next set of paginated results to return.\n    ListSigningProfilesResponse:\n      type: object\n      properties:\n        profiles:\n          allOf:\n            - $ref: '#/components/schemas/SigningProfiles'\n            - description: A list of profiles that are available in the AWS account. This includes profiles with the status of \u003ccode\u003eCANCELED\u003c/code\u003e if the \u003ccode\u003eincludeCanceled\u003c/code\u003e parameter is set to \u003ccode\u003etrue\u003c/code\u003e.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: Value for specifying the next set of paginated results to return.\n    SigningProfileStatus:\n      type: string\n      enum:\n        - Active\n        - Canceled\n        - Revoked\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: A list of tags associated with the signing profile.\n    BadRequestException: {}\n    NotFoundException: {}\n    PutSigningProfileResponse:\n      type: object\n      properties:\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: The Amazon Resource Name (ARN) of the signing profile created.\n        profileVersion:\n          allOf:\n            - $ref: '#/components/schemas/ProfileVersion'\n            - description: The version of the signing profile being created.\n        profileVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: 'The signing profile ARN, including the profile version.'\n    CertificateArn:\n      type: string\n    Integer:\n      type: integer\n    ValidityType:\n      type: string\n      enum:\n        - DAYS\n        - MONTHS\n        - YEARS\n    SigningConfigurationOverrides:\n      type: object\n      properties:\n        encryptionAlgorithm:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionAlgorithm'\n            - description: A specified override of the default encryption algorithm that is used in a code signing job.\n        hashAlgorithm:\n          allOf:\n            - $ref: '#/components/schemas/HashAlgorithm'\n            - description: A specified override of the default hash algorithm that is used in a code signing job.\n      description: A signing configuration that overrides the default encryption or hash algorithm of a signing job.\n    ImageFormat:\n      type: string\n      enum:\n        - JSON\n        - JSONEmbedded\n        - JSONDetached\n    SigningParameterValue:\n      type: string\n    TagValue:\n      type: string\n      maxLength: 256\n    RemoveProfilePermissionResponse:\n      type: object\n      properties:\n        revisionId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: An identifier for the current revision of the profile permissions.\n    StartSigningJobResponse:\n      type: object\n      properties:\n        jobId:\n          allOf:\n            - $ref: '#/components/schemas/JobId'\n            - description: The ID of your signing job.\n        jobOwner:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The AWS account ID of the signing job owner.\n    S3Source:\n      type: object\n      required:\n        - bucketName\n        - key\n        - version\n      properties:\n        bucketName:\n          allOf:\n            - $ref: '#/components/schemas/BucketName'\n            - description: Name of the S3 bucket.\n        key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: Key name of the bucket object that contains your unsigned code.\n        version:\n          allOf:\n            - $ref: '#/components/schemas/Version'\n            - description: Version of your source image in your version enabled S3 bucket.\n      description: Information about the S3 bucket where you saved your unsigned code.\n    S3Destination:\n      type: object\n      properties:\n        bucketName:\n          allOf:\n            - $ref: '#/components/schemas/BucketName'\n            - description: Name of the S3 bucket.\n        prefix:\n          allOf:\n            - $ref: '#/components/schemas/Prefix'\n            - description: An Amazon S3 prefix that you can use to limit responses to those that begin with the specified prefix.\n      description: The name and prefix of the S3 bucket where code signing saves your signed objects.\n    ThrottlingException: {}\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'\n      minLength: 1\n      maxLength: 128\n    AccountId:\n      type: string\n      pattern: '^[0-9]{12}$'\n      minLength: 12\n      maxLength: 12\n    ProfileName:\n      type: string\n      pattern: '^[a-zA-Z0-9_]{2,}'\n      minLength: 2\n      maxLength: 64\n    ProfileVersion:\n      type: string\n      pattern: '^[a-zA-Z0-9]{10}$'\n      minLength: 10\n      maxLength: 10\n    String:\n      type: string\n    AddProfilePermissionRequest:\n      type: object\n      required:\n        - action\n        - principal\n        - statementId\n      title: AddProfilePermissionRequest\n      properties:\n        profileVersion:\n          allOf:\n            - $ref: '#/components/schemas/ProfileVersion'\n            - description: The version of the signing profile.\n        action:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The AWS Signer action permitted as part of cross-account permissions.\n        principal:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The AWS principal receiving cross-account permissions. This may be an IAM role or another AWS account ID.\n        revisionId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A unique identifier for the current profile revision.\n        statementId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A unique identifier for the cross-account permission statement.\n    Arn:\n      type: string\n      minLength: 20\n      maxLength: 2048\n    BucketName:\n      type: string\n    CancelSigningProfileRequest:\n      type: object\n      title: CancelSigningProfileRequest\n      properties: {}\n    Category:\n      type: string\n      enum:\n        - AWSIoT\n    ClientRequestToken:\n      type: string\n    JobId:\n      type: string\n    DescribeSigningJobRequest:\n      type: object\n      title: DescribeSigningJobRequest\n      properties: {}\n    Source:\n      type: object\n      properties:\n        s3:\n          allOf:\n            - $ref: '#/components/schemas/S3Source'\n            - description: The \u003ccode\u003eS3Source\u003c/code\u003e object.\n      description: An \u003ccode\u003eS3Source\u003c/code\u003e object that contains information about the S3 bucket where you saved your unsigned code.\n    SigningMaterial:\n      type: object\n      required:\n        - certificateArn\n      properties:\n        certificateArn:\n          allOf:\n            - $ref: '#/components/schemas/CertificateArn'\n            - description: The Amazon Resource Name (ARN) of the certificates that is used to sign your code.\n      description: The ACM certificate that is used to sign your code.\n    PlatformId:\n      type: string\n    DisplayName:\n      type: string\n    SigningPlatformOverrides:\n      type: object\n      properties:\n        signingConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/SigningConfigurationOverrides'\n            - description: A signing configuration that overrides the default encryption or hash algorithm of a signing job.\n        signingImageFormat:\n          allOf:\n            - $ref: '#/components/schemas/ImageFormat'\n            - description: 'A signed image is a JSON object. When overriding the default signing platform configuration, a customer can select either of two signing formats, \u003ccode\u003eJSONEmbedded\u003c/code\u003e or \u003ccode\u003eJSONDetached\u003c/code\u003e. (A third format value, \u003ccode\u003eJSON\u003c/code\u003e, is reserved for future use.) With \u003ccode\u003eJSONEmbedded\u003c/code\u003e, the signing image has the payload embedded in it. With \u003ccode\u003eJSONDetached\u003c/code\u003e, the payload is not be embedded in the signing image.'\n      description: Any overrides that are applied to the signing configuration of a code signing platform.\n    SigningParameters:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/SigningParameterValue'\n    Timestamp:\n      type: string\n      format: date-time\n    RequestedBy:\n      type: string\n    SigningStatus:\n      type: string\n      enum:\n        - InProgress\n        - Failed\n        - Succeeded\n    StatusReason:\n      type: string\n    SigningJobRevocationRecord:\n      type: object\n      properties:\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A caller-supplied reason for revocation.\n        revokedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The time of revocation.\n        revokedBy:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The identity of the revoker.\n      description: Revocation information for a signing job.\n    SignedObject:\n      type: object\n      properties:\n        s3:\n          allOf:\n            - $ref: '#/components/schemas/S3SignedObject'\n            - description: The \u003ccode\u003eS3SignedObject\u003c/code\u003e.\n      description: Points to an \u003ccode\u003eS3SignedObject\u003c/code\u003e object that contains information about your signed code image.\n    Destination:\n      type: object\n      properties:\n        s3:\n          allOf:\n            - $ref: '#/components/schemas/S3Destination'\n            - description: The \u003ccode\u003eS3Destination\u003c/code\u003e object.\n      description: Points to an \u003ccode\u003eS3Destination\u003c/code\u003e object that contains information about your S3 bucket.\n    EncryptionAlgorithm:\n      type: string\n      enum:\n        - RSA\n        - ECDSA\n    EncryptionAlgorithms:\n      type: array\n      items:\n        $ref: '#/components/schemas/EncryptionAlgorithm'\n    EncryptionAlgorithmOptions:\n      type: object\n      required:\n        - allowedValues\n        - defaultValue\n      properties:\n        allowedValues:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionAlgorithms'\n            - description: The set of accepted encryption algorithms that are allowed in a code signing job.\n        defaultValue:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionAlgorithm'\n            - description: The default encryption algorithm that is used by a code signing job.\n      description: The encryption algorithm options that are available to a code signing job.\n    GetSigningPlatformRequest:\n      type: object\n      title: GetSigningPlatformRequest\n      properties: {}\n    SigningConfiguration:\n      type: object\n      required:\n        - encryptionAlgorithmOptions\n        - hashAlgorithmOptions\n      properties:\n        encryptionAlgorithmOptions:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionAlgorithmOptions'\n            - description: The encryption algorithm options that are available for a code signing job.\n        hashAlgorithmOptions:\n          allOf:\n            - $ref: '#/components/schemas/HashAlgorithmOptions'\n            - description: The hash algorithm options that are available for a code signing job.\n      description: The configuration of a code signing operation.\n    SigningImageFormat:\n      type: object\n      required:\n        - supportedFormats\n        - defaultFormat\n      properties:\n        supportedFormats:\n          allOf:\n            - $ref: '#/components/schemas/ImageFormats'\n            - description: The supported formats of a code signing image.\n        defaultFormat:\n          allOf:\n            - $ref: '#/components/schemas/ImageFormat'\n            - description: The default format of a code signing image.\n      description: The image format of a code signing platform or profile.\n    MaxSizeInMB:\n      type: integer\n    bool:\n      type: boolean\n    GetSigningProfileRequest:\n      type: object\n      title: GetSigningProfileRequest\n      properties: {}\n    SigningProfileRevocationRecord:\n      type: object\n      properties:\n        revocationEffectiveFrom:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The time when revocation becomes effective.\n        revokedAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The time when the signing profile was revoked.\n        revokedBy:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The identity of the revoker.\n      description: Revocation information for a signing profile.\n    SignatureValidityPeriod:\n      type: object\n      properties:\n        value:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The numerical value of the time unit for signature validity.\n        type:\n          allOf:\n            - $ref: '#/components/schemas/ValidityType'\n            - description: The time unit for signature validity.\n      description: The validity period for a signing job.\n    string:\n      type: string\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 200\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    HashAlgorithm:\n      type: string\n      enum:\n        - SHA1\n        - SHA256\n    HashAlgorithms:\n      type: array\n      items:\n        $ref: '#/components/schemas/HashAlgorithm'\n    HashAlgorithmOptions:\n      type: object\n      required:\n        - allowedValues\n        - defaultValue\n      properties:\n        allowedValues:\n          allOf:\n            - $ref: '#/components/schemas/HashAlgorithms'\n            - description: The set of accepted hash algorithms allowed in a code signing job.\n        defaultValue:\n          allOf:\n            - $ref: '#/components/schemas/HashAlgorithm'\n            - description: The default hash algorithm that is used in a code signing job.\n      description: The hash algorithms that are available to a code signing job.\n    ImageFormats:\n      type: array\n      items:\n        $ref: '#/components/schemas/ImageFormat'\n    Key:\n      type: string\n    ListProfilePermissionsRequest:\n      type: object\n      title: ListProfilePermissionsRequest\n      properties: {}\n    PolicySizeBytes:\n      type: integer\n    Permissions:\n      type: array\n      items:\n        $ref: '#/components/schemas/Permission'\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 25\n    NextToken:\n      type: string\n    ListSigningJobsRequest:\n      type: object\n      title: ListSigningJobsRequest\n      properties: {}\n    SigningJobs:\n      type: array\n      items:\n        $ref: '#/components/schemas/SigningJob'\n    ListSigningPlatformsRequest:\n      type: object\n      title: ListSigningPlatformsRequest\n      properties: {}\n    SigningPlatforms:\n      type: array\n      items:\n        $ref: '#/components/schemas/SigningPlatform'\n    Statuses:\n      type: array\n      items:\n        $ref: '#/components/schemas/SigningProfileStatus'\n    ListSigningProfilesRequest:\n      type: object\n      title: ListSigningProfilesRequest\n      properties: {}\n    SigningProfiles:\n      type: array\n      items:\n        $ref: '#/components/schemas/SigningProfile'\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    Permission:\n      type: object\n      properties:\n        action:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: An AWS Signer action permitted as part of cross-account permissions.\n        principal:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The AWS principal that has been granted a cross-account permission.\n        statementId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A unique identifier for a cross-account permission statement.\n        profileVersion:\n          allOf:\n            - $ref: '#/components/schemas/ProfileVersion'\n            - description: The signing profile version that a permission applies to.\n      description: A cross-account permission for a signing profile.\n    Prefix:\n      type: string\n    PutSigningProfileRequest:\n      type: object\n      required:\n        - platformId\n      title: PutSigningProfileRequest\n      properties:\n        signingMaterial:\n          allOf:\n            - $ref: '#/components/schemas/SigningMaterial'\n            - description: The AWS Certificate Manager certificate that will be used to sign code with the new signing profile.\n        signatureValidityPeriod:\n          allOf:\n            - $ref: '#/components/schemas/SignatureValidityPeriod'\n            - description: 'The default validity period override for any signature generated using this signing profile. If unspecified, the default is 135 months.'\n        platformId:\n          allOf:\n            - $ref: '#/components/schemas/PlatformId'\n            - description: The ID of the signing platform to be created.\n        overrides:\n          allOf:\n            - $ref: '#/components/schemas/SigningPlatformOverrides'\n            - description: A subfield of \u003ccode\u003eplatform\u003c/code\u003e. This specifies any different configuration options that you want to apply to the chosen platform (such as a different \u003ccode\u003ehash-algorithm\u003c/code\u003e or \u003ccode\u003esigning-algorithm\u003c/code\u003e).\n        signingParameters:\n          allOf:\n            - $ref: '#/components/schemas/SigningParameters'\n            - description: Map of key-value pairs for signing. These can include any information that you want to use during signing.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Tags to be associated with the signing profile that is being created.\n    RemoveProfilePermissionRequest:\n      type: object\n      title: RemoveProfilePermissionRequest\n      properties: {}\n    RevocationReasonString:\n      type: string\n      minLength: 1\n      maxLength: 500\n    RevokeSignatureRequest:\n      type: object\n      required:\n        - reason\n      title: RevokeSignatureRequest\n      properties:\n        jobOwner:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: AWS account ID of the job owner.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/RevocationReasonString'\n            - description: The reason for revoking the signing job.\n    RevokeSigningProfileRequest:\n      type: object\n      required:\n        - profileVersion\n        - reason\n        - effectiveTime\n      title: RevokeSigningProfileRequest\n      properties:\n        profileVersion:\n          allOf:\n            - $ref: '#/components/schemas/ProfileVersion'\n            - description: The version of the signing profile to be revoked.\n        reason:\n          allOf:\n            - $ref: '#/components/schemas/RevocationReasonString'\n            - description: The reason for revoking a signing profile.\n        effectiveTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: A timestamp for when revocation of a Signing Profile should become effective. Signatures generated using the signing profile after this timestamp are not trusted.\n    S3SignedObject:\n      type: object\n      properties:\n        bucketName:\n          allOf:\n            - $ref: '#/components/schemas/BucketName'\n            - description: Name of the S3 bucket.\n        key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: Key name that uniquely identifies a signed code image in your bucket.\n      description: The S3 bucket name and key where code signing saved your signed code image.\n    Version:\n      type: string\n    SigningJob:\n      type: object\n      properties:\n        jobId:\n          allOf:\n            - $ref: '#/components/schemas/JobId'\n            - description: The ID of the signing job.\n        source:\n          allOf:\n            - $ref: '#/components/schemas/Source'\n            - description: A \u003ccode\u003eSource\u003c/code\u003e that contains information about a signing job's code image source.\n        signedObject:\n          allOf:\n            - $ref: '#/components/schemas/SignedObject'\n            - description: A \u003ccode\u003eSignedObject\u003c/code\u003e structure that contains information about a signing job's signed code image.\n        signingMaterial:\n          allOf:\n            - $ref: '#/components/schemas/SigningMaterial'\n            - description: A \u003ccode\u003eSigningMaterial\u003c/code\u003e object that contains the Amazon Resource Name (ARN) of the certificate used for the signing job.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The date and time that the signing job was created.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/SigningStatus'\n            - description: The status of the signing job.\n        isRevoked:\n          allOf:\n            - $ref: '#/components/schemas/bool'\n            - description: Indicates whether the signing job is revoked.\n        profileName:\n          allOf:\n            - $ref: '#/components/schemas/ProfileName'\n            - description: The name of the signing profile that created a signing job.\n        profileVersion:\n          allOf:\n            - $ref: '#/components/schemas/ProfileVersion'\n            - description: The version of the signing profile that created a signing job.\n        platformId:\n          allOf:\n            - $ref: '#/components/schemas/PlatformId'\n            - description: The unique identifier for a signing platform.\n        platformDisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The name of a signing platform.\n        signatureExpiresAt:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The time when the signature of a signing job expires.\n        jobOwner:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The AWS account ID of the job owner.\n        jobInvoker:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The AWS account ID of the job invoker.\n      description: Contains information about a signing job.\n    SigningParameterKey:\n      type: string\n    SigningPlatform:\n      type: object\n      properties:\n        platformId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of a code signing; platform.\n        displayName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The display name of a code signing platform.\n        partner:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Any partner entities linked to a code signing platform.\n        target:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The types of targets that can be signed by a code signing platform.\n        category:\n          allOf:\n            - $ref: '#/components/schemas/Category'\n            - description: The category of a code signing platform.\n        signingConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/SigningConfiguration'\n            - description: The configuration of a code signing platform. This includes the designated hash algorithm and encryption algorithm of a signing platform.\n        signingImageFormat:\n          $ref: '#/components/schemas/SigningImageFormat'\n        maxSizeInMB:\n          allOf:\n            - $ref: '#/components/schemas/MaxSizeInMB'\n            - description: The maximum size (in MB) of code that can be signed by a code signing platform.\n        revocationSupported:\n          allOf:\n            - $ref: '#/components/schemas/bool'\n            - description: Indicates whether revocation is supported for the platform.\n      description: Contains information about the signing configurations and parameters that are used to perform a code signing job.\n    SigningProfile:\n      type: object\n      properties:\n        profileName:\n          allOf:\n            - $ref: '#/components/schemas/ProfileName'\n            - description: The name of the signing profile.\n        profileVersion:\n          allOf:\n            - $ref: '#/components/schemas/ProfileVersion'\n            - description: The version of a signing profile.\n        profileVersionArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: 'The ARN of a signing profile, including the profile version.'\n        signingMaterial:\n          allOf:\n            - $ref: '#/components/schemas/SigningMaterial'\n            - description: The ACM certificate that is available for use by a signing profile.\n        signatureValidityPeriod:\n          allOf:\n            - $ref: '#/components/schemas/SignatureValidityPeriod'\n            - description: The validity period for a signing job created using this signing profile.\n        platformId:\n          allOf:\n            - $ref: '#/components/schemas/PlatformId'\n            - description: The ID of a platform that is available for use by a signing profile.\n        platformDisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The name of the signing platform.\n        signingParameters:\n          allOf:\n            - $ref: '#/components/schemas/SigningParameters'\n            - description: The parameters that are available for use by a code signing user.\n        status:\n          allOf:\n            - $ref: '#/components/schemas/SigningProfileStatus'\n            - description: The status of a code signing profile.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: The Amazon Resource Name (ARN) for the signing profile.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: A list of tags associated with the signing profile.\n      description: Contains information about the ACM certificates and code signing configuration parameters that can be used by a given code signing user.\n    StartSigningJobRequest:\n      type: object\n      required:\n        - source\n        - destination\n        - profileName\n        - clientRequestToken\n      title: StartSigningJobRequest\n      properties:\n        source:\n          allOf:\n            - $ref: '#/components/schemas/Source'\n            - description: The S3 bucket that contains the object to sign or a BLOB that contains your raw code.\n        destination:\n          allOf:\n            - $ref: '#/components/schemas/Destination'\n            - description: The S3 bucket in which to save your signed object. The destination contains the name of your bucket and an optional prefix.\n        profileName:\n          allOf:\n            - $ref: '#/components/schemas/ProfileName'\n            - description: The name of the signing profile.\n        clientRequestToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: String that identifies the signing request. All calls after the first that use this token return the same response as the first call.\n        profileOwner:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The AWS account ID of the signing profile owner.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 1\n      maxItems: 200\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: One or more tags to be associated with the signing profile.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@57168637e057c3e5ebe933717019f6f25bc1886e/-/blob/APIs/amazonaws.com/signer/2017-08-25/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/57168637e057c3e5ebe933717019f6f25bc1886e/APIs/amazonaws.com/signer/2017-08-25/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: reference type \"https://raw.githubusercontent.com/APIs-guru/openapi-directory/57168637e057c3e5ebe933717019f6f25bc1886e/APIs/amazonaws.com/signer/2017-08-25/openapi.yaml#/components/schemas/string\" name conflict: \"String\""
}