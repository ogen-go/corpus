{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/climate.com/4.0.11/openapi.yaml",
			"byteSize": 86359,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://platform.climate.com/\ninfo:\n  contact:\n    email: developer@climate.com\n    name: Climate FieldView Support\n  description: |\n    **Last Modified**: Thu Oct 29 12:30:46 PDT 2020\n\n\n    All endpoints are only accessible via HTTPS.\n\n    * All API endpoints are located at `https://platform.climate.com` (e.g.\n    `https://platform.climate.com/v4/fields`).\n\n    * The authorization token endpoint is located at\n    `https://api.climate.com/api/oauth/token`.\n\n    ## Troubleshooting\n\n    `X-Http-Request-Id` response header will be returned on every call,\n    successful or not. If you experience an issue with our api and need\n    to contact technical support, please supply the value of the `X-Http-Request-Id`\n    header along with an approximate time of when the request was made.\n\n    ## Request Limits\n\n    When you’re onboarded to Climate’s API platform, your `x-api-key` is assigned a custom usage plan. Usage plans are unique to each partner and have the following key attributes: \n\n    1. Throttling information\n        * burstLimit: Maximum rate limit over a period ranging from 1 second to a few seconds\n        * rateLimit: A steady-state rate limit\n\n    2. Quota information\n        * Limit: The maximum number of requests that can be made in a given month\n\n    When the request rate threshold is exceeded, a `429` response code is returned. Optionally, the [`Retry-After`](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.37) header may be returned: \n\n    Following are examples of rate limit errors:\n\n    1. Rate limit exceeded:\n\n    \u003cbr\u003eHTTP/1.1 429 \n    \u003cbr\u003eContent-Type: application/json\n    \u003cbr\u003eContent-Length: 32\n\n       {\"message\":\"Too Many Requests\"}\n\n    2. Quota exhausted:\n    \u003cbr\u003eHTTP/1.1 429 \n    \u003cbr\u003eContent-Type: application/json\n    \u003cbr\u003eContent-Length: 29\n\n        {\"message\":\"Limit Exceeded\"}\n\n    ## Pagination\n\n    Pagination is performed via headers. Any request which returns a `\"results\"`\n    array may be paginated. The following figure shows how query results are laid out with\n    X-Limit=4 and no filter applied.\n\n    \u003cimg style=\"width:70%;height:auto;\" src=\"https://s3-us-west-2.amazonaws.com/climate-com/images/svg_upload_tests/paging.png\"\u003e\n\n    * If there are no results, a response code of `304` will be returned.\n\n    * If the response is the last set of results, a response code of `200` or\n    `206` will be returned.\n\n    * If there are more results, a response code of `206` will be returned.\n\n    * If `X-Next-Token` is provided in the request headers but the token has\n    expired, a response code of `409` will be returned. This is only applicable\n    for some endpoints; see specific endpoint documentation below.\n\n    #### X-Limit\n\n    The page size can be controlled with the `X-Limit` header. Valid values are\n    `1-100` and defaults to `100`.\n\n    #### X-Next-Token\n\n    If the results are paginated, a response header of `X-Next-Token` will be\n    returned. Use the associated value in the subsequent request (via the `X-Next-Token`\n    request header) to retrieve the next page. The following sequence diagram shows how to\n    use `X-Next-Token` to fetch all the records.\n\n    \u003cimg src=\"https://s3-us-west-2.amazonaws.com/climate-com/images/svg_upload_tests/x-next-token.svg\"\u003e\n\n\n    ## Chunked Uploads\n\n    Uploads larger than `5MiB` (`5242880 bytes`) must be done in `5MiB` chunks\n    (with the exception of the final chunk). Each chunk request MUST contain a\n    `Content-Range` header specifying the portion of the upload, and a `Content-Type`\n    header specifying binary content type (`application/octet-stream`). Range\n    uploads must be contiguous. The maximum upload size is capped at `500MiB` (`524288000 bytes`).\n\n    ## Chunked Downloads\n\n    Downloads larger than `5MiB` (`5242880 bytes`) must be done in `1-5MiB`\n    chunks (with the exception of the final chunk, which may be less than `1MiB`).\n    Each chunk request MUST contain a `Range` header specifying the requested portion of the download,\n    and an `Accept` header specifying binary and json content types  (`application/octet-stream,application/json`)\n    or all content types (`*/*`).\n\n    ## Drivers\n\n    If you need drivers to process agronomic data, download the ADAPT plugin below. We only support the plugin in the Windows environment, minimum is Windows 7 SP1.\n\n    For asPlanted, asHarvested and asApplied data:\n    * [ADAPT Plugin](https://dev.fieldview.com/drivers/ClimateADAPTPlugin_latest.exe)\n    \u003cbr\u003eRelease notes can be found [here](https://dev.fieldview.com/drivers/adapt-release-notes.txt).\n    \u003cbr\u003eDownload and use of the ADAPT plugin means that you agree to the EULA for use of the ADAPT plugin. \n    \u003cbr\u003ePlease review the [EULA](https://dev.fieldview.com/EULA/ADAPT%20Plugin%20EULA-06-19.pdf) (last updated on June 6th, 2019) before download and use of the ADAPT plugin.\n    \u003cbr\u003eFor more information, please refer to:\n      * [ADAPT Resources](https://adaptframework.org/)\n      * [ADAPT Overview](https://aggateway.atlassian.net/wiki/spaces/ADM/overview)\n      * [ADAPT FAQ](https://aggateway.atlassian.net/wiki/spaces/ADM/pages/165942474/ADAPT+Frequently-Asked+Questions+FAQ)\n      * [ADAPT Videos](https://adaptframework.org/adapt-videos/)\n\n    ## Sample Test Data\n\n    Sample agronomic data:\n    * [asPlanted and asHarvested data](https://dev.fieldview.com/sample-agronomic-data/Planting_Harvesting_data_04_18_2018_21_46_18.zip)\n    * [asApplied data set 1](https://dev.fieldview.com/sample-agronomic-data/as-applied-data1.zip)\n    * [asApplied data set 2](https://dev.fieldview.com/sample-agronomic-data/as-applied-data2.zip)\n    \u003cbr\u003eTo upload the sample data to your account, please follow the instructions in this [link](https://support.climate.com/kt#/kA02A000000AaxzSAC/en_US).\n\n    Sample soil data:\n    * [Sample soil data](https://dev.fieldview.com/sample-soil-data/soil-sample.xml)\n    ---\n  title: Climate FieldView Platform APIs\n  version: 4.0.11\n  x-apisguru-categories:\n    - open_data\n  x-origin:\n    - format: openapi\n      url: https://dev.fieldview.com/openapi/platform.yaml\n      version: \"3.0\"\n  x-providerName: climate.com\ntags:\n  - description: Field Boundary data endpoints.\n    name: Boundaries\n  - description: Field data endpoints.\n    name: Fields\n  - description: General data upload endpoints.\n    name: Uploads\n  - description: General data retrieval endpoints.\n    name: Layers\n  - description: Resource Owner data endpoints.\n    name: ResourceOwners\n  - description: Farm organization data endpoints.\n    name: FarmOrganizations\npaths:\n  /v4/boundaries:\n    post:\n      description: |-\n        Upload a **Boundary** entry by passing the geometry of the boundary. This will store the boundary but will not create field in Climate FieldView and will not link to an existing field in Climate FieldView.\n        This is restricted to callers with **boundaries:write** scope.\n        To upload a field boundary for field creation in Climate FieldView, please use **POST /v4/uploads**.\n      operationId: uploadBoundary\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BoundaryUpload\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UploadBoundaryOk\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - boundaries:write\n      summary: Upload a boundary\n      tags:\n        - Boundaries\n  /v4/boundaries/query:\n    post:\n      description: Retrieve multiple **Boundaries** (up to 10 per request).\n      operationId: fetchBoundaries\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BoundariesQuery\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchBoundariesOk\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - fields:read\n      summary: Retrieve Boundaries in batch\n      tags:\n        - Boundaries\n  \"/v4/boundaries/{boundaryId}\":\n    get:\n      description: Retrieve a **Boundary** by ID.\n      operationId: fetchBoundaryById\n      parameters:\n        - in: path\n          name: boundaryId\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchBoundaryByIdOk\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - fields:read\n      summary: Retrieve a Boundary by ID\n      tags:\n        - Boundaries\n  \"/v4/farmOrganizations/{farmOrganizationType}/{farmOrganizationId}\":\n    get:\n      description: Retrieve a given **farm organization** by organization type and ID.\n      operationId: fetchFarmOrganizationByTypeAndId\n      parameters:\n        - $ref: \"#/components/parameters/FarmOrganizationType\"\n        - $ref: \"#/components/parameters/FarmOrganizationId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchFarmOrganizationByTypeAndIdOk\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - farmOrganizations:read\n      summary: Retrieve a specific farm organization by organization type and ID\n      tags:\n        - FarmOrganizations\n  /v4/fields:\n    get:\n      description: Retrieve list of **Fields**. Filter the results by field name if the `fieldName` query parameter is specified.\n      operationId: fetchFields\n      parameters:\n        - $ref: \"#/components/parameters/X-Next-Token\"\n        - $ref: \"#/components/parameters/X-Limit\"\n        - $ref: \"#/components/parameters/OptionalFieldNamePrefix\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchFieldsOk\"\n        \"206\":\n          $ref: \"#/components/responses/FetchFieldsPartial\"\n        \"304\":\n          $ref: \"#/components/responses/304\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - fields:read\n      summary: Retrieve list of Fields\n      tags:\n        - Fields\n  \"/v4/fields/{fieldId}\":\n    get:\n      description: Retrieve a given **Field** by ID.\n      operationId: fetchFieldById\n      parameters:\n        - $ref: \"#/components/parameters/FieldId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchFieldByIdOk\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - fields:read\n      summary: Retrieve a specific Field by ID\n      tags:\n        - Fields\n  /v4/layers/asApplied:\n    get:\n      description: Retrieve a list of application activities. The id in the response is used for  GET /v4/layers/asApplied/{activityId}/contents.\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/X-Next-Token\"\n        - $ref: \"#/components/parameters/X-Limit\"\n        - $ref: \"#/components/parameters/OptionalResourceOwnerId\"\n        - $ref: \"#/components/parameters/OccurredAfter\"\n        - $ref: \"#/components/parameters/OccurredBefore\"\n        - $ref: \"#/components/parameters/UpdatedAfter\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchApplicationActivitiesOk\"\n        \"206\":\n          $ref: \"#/components/responses/FetchApplicationActivitiesPartial\"\n        \"304\":\n          $ref: \"#/components/responses/304\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - asApplied:read\n      summary: Retrieve a list of application activities\n      tags:\n        - Layers\n  \"/v4/layers/asApplied/{activityId}/contents\":\n    get:\n      description: Retrieve an individual application activity by id.  Ids are retrieved via the  /layers/asApplied route. Downloads larger than `5MiB` (`5242880 bytes`) in size, must be downloaded in chunks no larger than `5MiB` (`5242880 bytes`) and no smaller than `1MiB`  (`1048576 bytes`). The last chunk could be less than `1MiB` (`1048576 bytes`). The data is compressed using .zip format.\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/ApplicationActivityId\"\n        - $ref: \"#/components/parameters/Range\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchApplicationActivityOk\"\n        \"206\":\n          $ref: \"#/components/responses/FetchApplicationActivityPartial\"\n        \"304\":\n          $ref: \"#/components/responses/304\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"416\":\n          $ref: \"#/components/responses/416\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - asApplied:read\n      summary: Retrieve the raw application activity\n      tags:\n        - Layers\n  /v4/layers/asHarvested:\n    get:\n      description: Retrieve a list of harvest activities. The id in the response is used for  GET /v4/layers/asHarvested/{activityId}/contents.\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/X-Next-Token\"\n        - $ref: \"#/components/parameters/X-Limit\"\n        - $ref: \"#/components/parameters/OptionalResourceOwnerId\"\n        - $ref: \"#/components/parameters/OccurredAfter\"\n        - $ref: \"#/components/parameters/OccurredBefore\"\n        - $ref: \"#/components/parameters/UpdatedAfter\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchHarvestActivitiesOk\"\n        \"206\":\n          $ref: \"#/components/responses/FetchHarvestActivitiesPartial\"\n        \"304\":\n          $ref: \"#/components/responses/304\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - asHarvested:read\n      summary: Retrieve a list of harvest activities\n      tags:\n        - Layers\n  \"/v4/layers/asHarvested/{activityId}/contents\":\n    get:\n      description: Retrieve an individual harvest activity by id.  Ids are retrieved via the  /layers/asHarvested route. Downloads larger than `5MiB` (`5242880 bytes`) in size, must be downloaded in chunks no larger than `5MiB` (`5242880 bytes`) and no smaller than `1MiB`  (`1048576 bytes`). The last chunk could be less than `1MiB` (`1048576 bytes`). The data is compressed using .zip format.\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/HarvestActivityId\"\n        - $ref: \"#/components/parameters/Range\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchHarvestActivityOk\"\n        \"206\":\n          $ref: \"#/components/responses/FetchHarvestActivityPartial\"\n        \"304\":\n          $ref: \"#/components/responses/304\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"416\":\n          $ref: \"#/components/responses/416\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - asHarvested:read\n      summary: Retrieve the raw harvest activity\n      tags:\n        - Layers\n  /v4/layers/asPlanted:\n    get:\n      description: Retrieve a list of planting activities. The id in the response is used for  GET /v4/layers/asPlanted/{activityId}/contents.\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/X-Next-Token\"\n        - $ref: \"#/components/parameters/X-Limit\"\n        - $ref: \"#/components/parameters/OptionalResourceOwnerId\"\n        - $ref: \"#/components/parameters/OccurredAfter\"\n        - $ref: \"#/components/parameters/OccurredBefore\"\n        - $ref: \"#/components/parameters/UpdatedAfter\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchPlantingActivitiesOk\"\n        \"206\":\n          $ref: \"#/components/responses/FetchPlantingActivitiesPartial\"\n        \"304\":\n          $ref: \"#/components/responses/304\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - asPlanted:read\n      summary: Retrieve a list of planting activities\n      tags:\n        - Layers\n  \"/v4/layers/asPlanted/{activityId}/contents\":\n    get:\n      description: Retrieve an individual planting activity by id.  Ids are retrieved via the  /layers/asPlanted route. Downloads larger than `5MiB` (`5242880 bytes`) in size, must be downloaded in chunks no larger than `5MiB` (`5242880 bytes`) and no smaller than `1MiB`  (`1048576 bytes`). The last chunk could be less than `1MiB` (`1048576 bytes`).  The data is compressed using .zip format.\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/PlantingActivityId\"\n        - $ref: \"#/components/parameters/Range\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchPlantingActivityOk\"\n        \"206\":\n          $ref: \"#/components/responses/FetchPlantingActivityPartial\"\n        \"304\":\n          $ref: \"#/components/responses/304\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"416\":\n          $ref: \"#/components/responses/416\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - asPlanted:read\n      summary: Retrieve the raw planting activity\n      tags:\n        - Layers\n  /v4/layers/scoutingObservations:\n    get:\n      description: Retrieve a list of scouting observations created or updated by the user identified by the Authorization header.\n      parameters:\n        - $ref: \"#/components/parameters/X-Next-Token\"\n        - $ref: \"#/components/parameters/X-Limit\"\n        - $ref: \"#/components/parameters/OccurredAfter\"\n        - $ref: \"#/components/parameters/OccurredBefore\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchScoutingObservationsOk\"\n        \"206\":\n          $ref: \"#/components/responses/FetchScoutingObservationsPartial\"\n        \"304\":\n          $ref: \"#/components/responses/304\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - scouting:read\n      summary: Retrieve a list of scouting observations\n      tags:\n        - Layers\n  \"/v4/layers/scoutingObservations/{scoutingObservationId}\":\n    get:\n      description: Retrieve an individual scouting observation by id.  Ids are retrieved via the /layers/scoutingObservations route.\n      parameters:\n        - $ref: \"#/components/parameters/ScoutingObservationId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchScoutingObservationByIdOk\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - scouting:read\n      summary: Retrieve individual scouting observation\n      tags:\n        - Layers\n  \"/v4/layers/scoutingObservations/{scoutingObservationId}/attachments\":\n    get:\n      description: Retrieve attachments associated with a given scouting observation. Photos added to scouting notes in the FieldView app are capped to 20MB, and we won’t store photos larger than that in a scouting note.\n      parameters:\n        - $ref: \"#/components/parameters/ScoutingObservationId\"\n        - $ref: \"#/components/parameters/X-Next-Token\"\n        - $ref: \"#/components/parameters/X-Limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchScoutingObservationAttachmentsOk\"\n        \"206\":\n          $ref: \"#/components/responses/FetchScoutingObservationAttachmentsPartial\"\n        \"304\":\n          $ref: \"#/components/responses/304\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - scouting:read\n      summary: Retrieve attachments associated with a given scouting observation.\n      tags:\n        - Layers\n  \"/v4/layers/scoutingObservations/{scoutingObservationId}/attachments/{attachmentId}/contents\":\n    get:\n      description: Photos added to scouting notes in the FieldView app are capped to `20MiB` (`20971520 bytes`), and we won’t store photos larger than that in a scouting note. Downloads larger than `5MiB` (`5242880 bytes`) in size, must be downloaded in chunks no larger than `5MiB` (`5242880 bytes`) and no smaller than `1MiB` (`1048576 bytes`). The last chunk could be less than `1MiB` (`1048576 bytes`).\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/ScoutingObservationId\"\n        - $ref: \"#/components/parameters/ScoutingObservationAttachmentId\"\n        - $ref: \"#/components/parameters/Range\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchScoutingObservationAttachmentContentsOk\"\n        \"206\":\n          $ref: \"#/components/responses/FetchScoutingObservationAttachmentContentsPartial\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"416\":\n          $ref: \"#/components/responses/416\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - scouting:read\n      summary: Retrieve the binary contents of a scouting observation’s attachment.\n      tags:\n        - Layers\n  \"/v4/resourceOwners/{resourceOwnerId}\":\n    get:\n      description: Retrieve a resource owner for the given `resourceOwnerId`.\n      operationId: getResourceOwner\n      parameters:\n        - $ref: \"#/components/parameters/ResourceOwnerId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchResourceOwnerOk\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - resourceOwners:read\n      summary: Retrieve a resource owner by ID\n      tags:\n        - ResourceOwners\n  /v4/uploads:\n    post:\n      description: |-\n        Step one in uploading a data product. The method will return an **Upload** ID which the caller will use in subsequent `PUT` requests.\n        The following `contentTypes` may be uploaded:\n            \u003cdetails\u003e\u003csummary\u003e__image/vnd.climate.thermal.geotiff__\u003c/summary\u003e\n\n            Allows for the upload of a thermal image. The image is a single band geotiff with 64 bit signed floating point values in degrees Celsius. The Coordinate Reference System (CRS) must be UTM with WGS84 datum.\n\n            The following metadata entries are required to be embedded in the geotiff:\n              * acquisitionStartDate - ISO8601 date\n              * acquisitionEndDate - ISO8601 date\n              * isCalibrated - boolean\n\n            The following metadata entries are optional:\n              * sourceId - uuid referencing the asset in the partner's system\n              * fieldId - uuid referencing a field in the Climate system\n              * boundaryId - uuid referencing a boundary in the Climate system\n              * brandId - uuid referencing a partner's branding in the Climate system\n              * name - name of the layer. The maximum number of characters that will be accepted as input is 20.\n\n            Requires either imagery:write or platform scope.\n          \u003c/details\u003e\n          \u003cdetails\u003e\u003csummary\u003e__image/vnd.climate.ndvi.geotiff__\u003c/summary\u003e\n\n            Allows for the upload of a NDVI image. The image is a single band geotiff with 64 bit signed floating point values in the range of -1 to 1 inclusive. The Coordinate Reference System (CRS) must be UTM with WGS84 datum.\n\n            The following metadata entries are required to be embedded in the geotiff:\n              * acquisitionStartDate - ISO8601 date\n              * acquisitionEndDate - ISO8601 date\n\n            The following metadata entries are optional:\n              * sourceId - uuid referencing the asset in the partner's system\n              * fieldId - uuid referencing a field in the Climate system\n              * boundaryId - uuid referencing a boundary in the Climate system\n              * brandId - uuid referencing a partner's branding in the Climate system\n              * name - name of the layer. The maximum number of characters that will be accepted as input is 20.\n\n            Requires either imagery:write or platform scope.\n          \u003c/details\u003e\n          \u003cdetails\u003e\u003csummary\u003e __image/vnd.climate.rgb.geotiff__\u003c/summary\u003e\n\n            Allows for the upload of a true color image. The image is a multi band geotiff with 24-bit composite values. Each band is 8 bits with values in the range of 0 to 255. The Coordinate Reference System (CRS) must be UTM with WGS84 datum. The geotiff must contain 3 bands in the order Red, Green, Blue.\n\n            The following metadata entries are required to be embedded in the geotiff:\n              * acquisitionStartDate - ISO8601 date\n              * acquisitionEndDate - ISO8601 date\n              * isCalibrated - boolean\n\n            The following metadata entries are optional:\n              * sourceId - uuid referencing the asset in the partner's system\n              * fieldId - uuid referencing a field in the Climate system\n              * boundaryId - uuid referencing a boundary in the Climate system\n              * brandId - uuid referencing a partner's branding in the Climate system\n              * reflectanceComputeMethod - either TOA or GROUND\n              * name - name of the layer. The maximum number of characters that will be accepted as input is 20.\n\n            Requires either imagery:write or platform scope.\n          \u003c/details\u003e\n          \u003cdetails\u003e\u003csummary\u003e __image/vnd.climate.rgb-nir.geotiff__\u003c/summary\u003e\n\n            Allows for the upload of a Near Infrared (NIR) image. The Coordinate Reference System (CRS) must be UTM with WGS84 datum.\n\n            The following metadata entries are required to be embedded in the geotiff:\n              * acquisitionStartDate - ISO8601 date\n              * acquisitionEndDate - ISO8601 date\n              * isCalibrated - boolean\n\n            The following metadata entries are optional:\n              * sourceId - uuid referencing the asset in the partner's system\n              * fieldId - uuid referencing a field in the Climate system\n              * boundaryId - uuid referencing a boundary in the Climate system\n              * brandId - uuid referencing a partner's branding in the Climate system\n              * reflectanceComputeMethod - either TOA or GROUND\n              * name - name of the layer. The maximum number of characters that will be accepted as input is 20.\n\n            Requires either imagery:write or platform scope.\n          \u003c/details\u003e\n          \u003cdetails\u003e\u003csummary\u003e__image/vnd.climate.rgb-cir.geotiff__\u003c/summary\u003e\n\n            Allows for the upload of a Color Infrared (CIR) image. The Coordinate Reference System (CRS) must be UTM with WGS84 datum.\n\n            The following metadata entries are required to be embedded in the geotiff:\n              * acquisitionStartDate - ISO8601 date\n              * acquisitionEndDate - ISO8601 date\n              * isCalibrated - boolean\n\n            The following metadata entries are optional:\n              * sourceId - uuid referencing the asset in the partner's system\n              * fieldId - uuid referencing a field in the Climate system\n              * boundaryId - uuid referencing a boundary in the Climate system\n              * brandId - uuid referencing a partner's branding in the Climate system\n              * reflectanceComputeMethod - either TOA or GROUND\n              * name - name of the layer. The maximum number of characters that will be accepted as input is 20.\n\n            Requires either imagery:write or platform scope.\n          \u003c/details\u003e\n          \u003cdetails\u003e\u003csummary\u003e __application/vnd.climate.field.geojson__\u003c/summary\u003e\n\n            Allows for the upload of a valid geojson feature (https://tools.ietf.org/html/rfc7946#section-3.2).\n\n            The feature must contain the following entry in the properties section:\n              * fieldName\n\n            Optionally, the feature may contain the following entries in the properties properties:\n              * farmName - defaults to *default*\n              * clientName - defaults to *default*\n\n            Additionally, the type field of the geometry field must one of the following:\n              * Polygon\n              * MultiPolygon\n\n            The coordinates field of the geometry field must contain no more than 10,000 points.\n            The total area of the field may not be larger than 20,000 acres in size.\n\n            Requires either fields:write or platform scope.\n          \u003c/details\u003e\n          \u003cdetails\u003e\u003csummary\u003e __application/vnd.climate.rx.planting.shp__\u003c/summary\u003e\n\n            Allows for the upload of a planting prescription in shapefile format.  The upload must be an archive in the zip format.  It should contain one and only one of each of the following file types:\n              * .shp\n              * .shx\n              * .dbf\n\n            All files with the above suffixes must have the same prefix, ie Back40.shp, Back40.shx and Back40.dbf.\n\n            Requires either rx:write or platform scope.\n          \u003c/details\u003e\n          \u003cdetails\u003e\u003csummary\u003e __application/vnd.climate.modus.xml__\u003c/summary\u003e\n\n            Allows for the upload of a soil sampling file in the modus 1.0 format with some restrictions.  The upload must be a single xml file.\n\n            The following elements are required to be present in the modus file.\n              * EventCode - Max length of 64 bytes\n              * EventDate - Must be in ISO8601\n              * SoilSample - Has a maxOccurs of 20k\n              * Depth - Has a maxOccurs of 50\n              * LabName - Must be non-empty.\n              * StartingDepth - 0 to 36 inclusive, default 0\n              * EndingDepth - 1 - 36 inclusive, default 1\n              * ColumnDepth\n              * DepthUnit - must be inches\n              * Geometry - point in wgs84\n            \n            Requires the soil:write scope.\n           \u003c/details\u003e\n           \u003cdetails\u003e\u003csummary\u003e __application/vnd.climate.stand-count.geojson__\u003c/summary\u003e\n\n            Allows for the upload of a valid [geojson feature collection](https://tools.ietf.org/html/rfc7946#section-3.3).\n\n            Each feature in the collection must contain the following entry in its properties section:\n              * StandPPA - A count of the number of plants per acre:\n\n            Additionally, the type field of each feature's geometry field must be:\n              * Point\n\n            Requires `imagery:write` scope.\n           \u003c/details\u003e\n           \u003cdetails\u003e\u003csummary\u003e __application/vnd.climate.weed-count.geojson__\u003c/summary\u003e\n\n            Allows for the upload of a valid [geojson feature collection](https://tools.ietf.org/html/rfc7946#section-3.3).\n\n            Each feature in the collection must contain the following entry in its properties section:\n              * StandPPA - A count of the number of plants per acre:\n\n            Additionally, the type field of each feature's geometry field must be:\n              * Point\n\n            Requires `imagery:write` scope.\n           \u003c/details\u003e\n      operationId: postUpload\n      parameters:\n        - $ref: \"#/components/parameters/X-Recipient-Email\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Upload\"\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/PostUploadOk\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - fields:write\n            - imagery:write\n            - rx:write\n            - standCount:write\n            - weedCount:write\n      summary: Initiate a new upload\n      tags:\n        - Uploads\n  /v4/uploads/status/query:\n    post:\n      description: Check the status of multiple **Uploads** (up to 100 per request).\n      operationId: fetchUploadStatuses\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UploadStatusQuery\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchUploadStatusesOk\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - fields:write\n            - imagery:write\n            - rx:write\n      summary: Retrieve Upload statuses in batch\n      tags:\n        - Uploads\n  \"/v4/uploads/{uploadId}\":\n    put:\n      description: Send chunked data for an **Upload**.\n      operationId: chunkedUpload\n      parameters:\n        - $ref: \"#/components/parameters/ContentRange\"\n        - $ref: \"#/components/parameters/UploadId\"\n        - $ref: \"#/components/parameters/BinaryContentType\"\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/204\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - fields:write\n            - imagery:write\n            - rx:write\n            - soil:write\n      summary: Chunked upload of data\n      tags:\n        - Uploads\n  \"/v4/uploads/{uploadId}/status\":\n    get:\n      description: Check the status of an **Upload** by ID.\n      operationId: fetchUploadStatusById\n      parameters:\n        - $ref: \"#/components/parameters/UploadId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/FetchUploadStatusByIdOk\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"503\":\n          $ref: \"#/components/responses/503\"\n      security:\n        - api_key: []\n        - oauth2_authorization_code:\n            - platform\n            - fields:write\n            - imagery:write\n            - rx:write\n      summary: Retrieve Upload status\n      tags:\n        - Uploads\ncomponents:\n  parameters:\n    Accept:\n      description: Must be either \\*/* or application/octet-stream,application/json\n      in: header\n      name: Accept\n      required: true\n      schema:\n        type: string\n    ApplicationActivityId:\n      description: Unique identifier of the Application Activity.\n      in: path\n      name: activityId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    BinaryContentType:\n      description: Must be `application/octet-stream`\n      in: header\n      name: Content-Type\n      required: true\n      schema:\n        type: string\n    ContentRange:\n      description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16). e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes) in size must be downloaded in chunks no larger than 5MiB (5242880 bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could be less than 1MiB (1048576 bytes).\n      in: header\n      name: Content-Range\n      required: true\n      schema:\n        type: string\n    FarmOrganizationId:\n      description: Unique identifier of the farm organization.\n      in: path\n      name: farmOrganizationId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    FarmOrganizationType:\n      description: Type of the farm organization.\n      in: path\n      name: farmOrganizationType\n      required: true\n      schema:\n        enum:\n          - farm\n        type: string\n    FieldId:\n      description: Unique identifier of the Field.\n      in: path\n      name: fieldId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    HarvestActivityId:\n      description: Unique identifier of the Harvest Activity.\n      in: path\n      name: activityId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    OccurredAfter:\n      description: Optional start time by which to filter layer results. Time must be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339). Layers with an end time at or after (inclusive) the specified time will match this filter. If both occurredAfter and occurredBefore are populated, occurredAfter must be \u003c= occurredBefore.\n      in: query\n      name: occurredAfter\n      required: false\n      schema:\n        format: date-time\n        type: string\n    OccurredBefore:\n      description: Optional end time by which to filter layer results. Time must be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339). Layers with a start time at or before (inclusive) the specified time. If both occurredAfter and occurredBefore are populated, occurredAfter must be \u003c= occurredBefore.\n      in: query\n      name: occurredBefore\n      required: false\n      schema:\n        format: date-time\n        type: string\n    OptionalFieldNamePrefix:\n      description: Optional prefix filter for field name. Must be at least 3 characters.\n      in: query\n      name: fieldName\n      required: false\n      schema:\n        type: string\n    OptionalResourceOwnerId:\n      description: Optional unique identifier of the resource owner.  If resourceOwnerId is not specified, it defaults to the x-authenticated-user-uuid.\n      in: query\n      name: resourceOwnerId\n      required: false\n      schema:\n        format: uuid\n        type: string\n    OptionalResourceOwnerIdList:\n      description: Optional comma-separated list of resource owner unique identifiers by which to filter results.\n      in: query\n      name: resourceOwnerId\n      required: false\n      schema:\n        type: string\n    PlantingActivityId:\n      description: Unique identifier of the Planting Activity.\n      in: path\n      name: activityId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    Range:\n      description: Byte range `bytes=start-end` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1). e.g. bytes=0-1048576. Currently only single range value is supported. Both start and end need to be specified, end value should be greater than start and end - start should not be greater than 5MiB.\n      in: header\n      name: Range\n      required: true\n      schema:\n        type: string\n    ResourceOwnerId:\n      description: Unique identifier of the resource owner.\n      in: path\n      name: resourceOwnerId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    ScoutingObservationAttachmentId:\n      description: Unique identifier of the attachment.\n      in: path\n      name: attachmentId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    ScoutingObservationId:\n      description: Unique identifier of the Scouting Observation.\n      in: path\n      name: scoutingObservationId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    UpdatedAfter:\n      description: Optional updated time by which to filter layer results. Time must be in ISO 8601 format with time zone, e.g. 2016-05-13T00:00:00Z (https://tools.ietf.org/html/rfc3339). Layers with a modification time at or after (inclusive) the specified time.\n      in: query\n      name: updatedAfter\n      required: false\n      schema:\n        format: date-time\n        type: string\n    UploadId:\n      description: Unique identifier of an Upload.\n      in: path\n      name: uploadId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    X-Limit:\n      description: Max number of results to return per batch.  Must be between 1 and 100 inclusive.  Defaults to 100.\n      in: header\n      name: X-Limit\n      required: false\n      schema:\n        format: int32\n        maximum: 100\n        minimum: 1\n        type: integer\n    X-Next-Token:\n      description: Opaque string which allows for fetching the next batch of results.  Can be used to poll for changes.\n      in: header\n      name: X-Next-Token\n      required: false\n      schema:\n        type: string\n    X-Recipient-Email:\n      description: Email address associated with a Climate account, used when to sending to another user.\n      in: header\n      name: X-Recipient-Email\n      required: false\n      schema:\n        type: string\n  responses:\n    \"200\":\n      description: OK\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"204\":\n      description: No Content\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"304\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Empty\"\n      description: Not Modified\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: A token which may be used to poll for updates.\n          schema:\n            type: string\n    \"400\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Bad Input\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"401\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Unauthorized\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"403\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Forbidden\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"404\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Not Found\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"409\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Conflict\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"410\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Gone\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"416\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Range Not Satisfiable\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"429\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Too Many Requests\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"500\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Internal Server Error\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    \"503\":\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Server Busy\n      headers:\n        Retry-After:\n          description: Number of seconds to wait before retrying the request.\n          schema:\n            format: int32\n            type: integer\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    FetchApplicationActivitiesOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ApplicationActivities\"\n      description: OK\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to poll for updates.\n          schema:\n            type: string\n    FetchApplicationActivitiesPartial:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ApplicationActivities\"\n      description: Partial Result\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to fetch next batch of results.\n          schema:\n            type: string\n    FetchApplicationActivityOk:\n      content:\n        application/octet-stream:\n          schema:\n            $ref: \"#/components/schemas/ApplicationActivityContents\"\n      description: OK\n      headers:\n        Content-Range:\n          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16). e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes) in size must be downloaded in chunks no larger than 5MiB (5242880 bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could be less than 1MiB (1048576 bytes).\n          schema:\n            type: string\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request\n          schema:\n            type: string\n    FetchApplicationActivityPartial:\n      content:\n        application/octet-stream:\n          schema:\n            $ref: \"#/components/schemas/ApplicationActivityContents\"\n      description: Partial Result\n      headers:\n        Content-Range:\n          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16). e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes) in size must be downloaded in chunks no larger than 5MiB (5242880 bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could be less than 1MiB (1048576 bytes).\n          schema:\n            type: string\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    FetchBoundariesOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Boundaries\"\n      description: OK\n    FetchBoundaryByIdOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Boundary\"\n      description: OK\n    FetchFarmOrganizationByTypeAndIdOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/FarmOrganization\"\n      description: Returns the requested farm organization.\n      headers:\n        X-Http-Request-Id:\n          schema:\n            type: string\n    FetchFieldByIdOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Field\"\n      description: Returns the requested Field.\n      headers:\n        X-Http-Request-Id:\n          schema:\n            type: string\n    FetchFieldsOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Fields\"\n      description: OK\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to poll for updates.\n          schema:\n            type: string\n    FetchFieldsPartial:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Fields\"\n      description: Partial Result\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to fetch next batch of results.\n          schema:\n            type: string\n    FetchHarvestActivitiesOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/HarvestActivities\"\n      description: OK\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to poll for updates.\n          schema:\n            type: string\n    FetchHarvestActivitiesPartial:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/HarvestActivities\"\n      description: Partial Result\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to fetch next batch of results.\n          schema:\n            type: string\n    FetchHarvestActivityOk:\n      content:\n        application/octet-stream:\n          schema:\n            $ref: \"#/components/schemas/HarvestActivityContents\"\n      description: OK\n      headers:\n        Content-Range:\n          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16). e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes) in size must be downloaded in chunks no larger than 5MiB (5242880 bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could be less than 1MiB (1048576 bytes).\n          schema:\n            type: string\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request\n          schema:\n            type: string\n    FetchHarvestActivityPartial:\n      content:\n        application/octet-stream:\n          schema:\n            $ref: \"#/components/schemas/HarvestActivityContents\"\n      description: Partial Result\n      headers:\n        Content-Range:\n          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16). e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes) in size must be downloaded in chunks no larger than 5MiB (5242880 bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could be less than 1MiB (1048576 bytes).\n          schema:\n            type: string\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    FetchPlantingActivitiesOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PlantingActivities\"\n      description: OK\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to poll for updates.\n          schema:\n            type: string\n    FetchPlantingActivitiesPartial:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PlantingActivities\"\n      description: Partial Result\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to fetch next batch of results.\n          schema:\n            type: string\n    FetchPlantingActivityOk:\n      content:\n        application/octet-stream:\n          schema:\n            $ref: \"#/components/schemas/PlantingActivityContents\"\n      description: OK\n      headers:\n        Content-Range:\n          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16). e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes) in size must be downloaded in chunks no larger than 5MiB (5242880 bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could be less than 1MiB (1048576 bytes).\n          schema:\n            type: string\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request\n          schema:\n            type: string\n    FetchPlantingActivityPartial:\n      content:\n        application/octet-stream:\n          schema:\n            $ref: \"#/components/schemas/PlantingActivityContents\"\n      description: Partial Result\n      headers:\n        Content-Range:\n          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16). e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes) in size must be downloaded in chunks no larger than 5MiB (5242880 bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could be less than 1MiB (1048576 bytes).\n          schema:\n            type: string\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    FetchResourceOwnerOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ResourceOwner\"\n      description: OK\n    FetchScoutingObservationAttachmentContentsOk:\n      content:\n        image/jpeg:\n          schema:\n            $ref: \"#/components/schemas/ScoutingObservationAttachmentContents\"\n      description: OK\n      headers:\n        Content-Range:\n          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16). e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes) in size must be downloaded in chunks no larger than 5MiB (5242880 bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could be less than 1MiB (1048576 bytes).\n          schema:\n            type: string\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request\n          schema:\n            type: string\n    FetchScoutingObservationAttachmentContentsPartial:\n      content:\n        image/jpeg:\n          schema:\n            $ref: \"#/components/schemas/ScoutingObservationAttachmentContents\"\n      description: Partial Result\n      headers:\n        Content-Range:\n          description: Byte range `bytes start-end/total` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16). e.g. bytes 0-5242880/10242880. Downloads larger than 5MiB (5242880 bytes) in size must be downloaded in chunks no larger than 5MiB (5242880 bytes) and no smaller than 1MiB (1048576 bytes). The last chunk could be less than 1MiB (1048576 bytes).\n          schema:\n            type: string\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    FetchScoutingObservationAttachmentsOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ScoutingObservationAttachments\"\n      description: OK\n    FetchScoutingObservationAttachmentsPartial:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ScoutingObservationAttachments\"\n      description: Partial Result\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to fetch next batch of results.\n          schema:\n            type: string\n    FetchScoutingObservationByIdOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ScoutingObservation\"\n      description: Returns the requested scouting observation.\n      headers:\n        X-Http-Request-Id:\n          schema:\n            type: string\n    FetchScoutingObservationsOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ScoutingObservations\"\n      description: OK\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to poll for updates.\n          schema:\n            type: string\n    FetchScoutingObservationsPartial:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ScoutingObservations\"\n      description: Partial Result\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n        X-Next-Token:\n          description: Token used to fetch next batch of results.\n          schema:\n            type: string\n    FetchUploadStatusByIdOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UploadStatus\"\n      description: OK\n    FetchUploadStatusesOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UploadStatuses\"\n      description: OK\n    PostUploadOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreatedUpload\"\n      description: Returns a new upload with ID used to PUT file contents.\n      headers:\n        X-Http-Request-Id:\n          schema:\n            type: string\n    ReportConflict:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Conflict (Report generation is still in progress)\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    ReportGone:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Gone (Report is expired)\n      headers:\n        X-Http-Request-Id:\n          description: Unique identifier assigned to the request.\n          schema:\n            type: string\n    UploadBoundaryOk:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UploadedBoundaryId\"\n      description: OK\n  schemas:\n    ApplicationActivities:\n      description: A batch of application activities\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/ApplicationActivitySummary\"\n          type: array\n      required:\n        - results\n    ApplicationActivityContents:\n      properties:\n        body:\n          $ref: \"#/components/schemas/BinaryData\"\n      required:\n        - body\n    ApplicationActivitySummary:\n      properties:\n        createdAt:\n          description: The time the application activity was created. Time in ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        endTime:\n          description: The start time of the application activity. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        fieldIds:\n          description: Array of field ids associated the application activity.\n          items:\n            type: string\n          type: array\n        id:\n          description: The id of an application activity.\n          format: uuid\n          type: string\n        length:\n          description: The size in bytes of the raw application activity file.\n          format: int64\n          type: integer\n        startTime:\n          description: The start time of the application activity. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        updatedAt:\n          description: The time the application activity was last updated. Time in ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n      required:\n        - id\n        - startTime\n        - endTime\n        - createdAt\n        - updatedAt\n        - length\n        - fieldIds\n      type: object\n    Area:\n      description: Area with units. Units are always \"hectare\".\n      example:\n        q: 1\n        u: hectare\n      properties:\n        q:\n          format: float\n          type: number\n        u:\n          type: string\n      required:\n        - q\n        - u\n    BinaryData:\n      description: Binary contents\n      format: binary\n      type: string\n    Boundaries:\n      description: A batch of boundary results\n      properties:\n        features:\n          items:\n            $ref: \"#/components/schemas/Boundary\"\n          type: array\n        type:\n          enum:\n            - FeatureCollection\n          type: string\n      required:\n        - type\n        - features\n    BoundariesQuery:\n      properties:\n        ids:\n          items:\n            description: Unique identifier for the boundary.\n            format: uuid\n            type: string\n          type: array\n      required:\n        - ids\n      type: object\n    Boundary:\n      description: Arbitrary boundary.  GeoJSON Feature.\n      properties:\n        geometry:\n          $ref: \"#/components/schemas/Geometry\"\n        id:\n          format: uuid\n          type: string\n        properties:\n          $ref: \"#/components/schemas/BoundaryProperties\"\n        type:\n          enum:\n            - Feature\n          type: string\n      required:\n        - id\n        - type\n        - geometry\n        - properties\n    BoundaryProperties:\n      description: Properties map.\n      properties:\n        area:\n          $ref: \"#/components/schemas/Area\"\n        centroid:\n          $ref: \"#/components/schemas/Point\"\n      required:\n        - area\n        - centroid\n    BoundaryUpload:\n      description: Arbitrary boundary in a geometry map\n      properties:\n        geometry:\n          $ref: \"#/components/schemas/Geometry\"\n      required:\n        - geometry\n    CreatedUpload:\n      description: Successfully created upload request\n      format: uuid\n      type: string\n    Empty:\n      type: object\n    Error:\n      properties:\n        error:\n          properties:\n            code:\n              type: string\n            id:\n              format: uuid\n              type: string\n            message:\n              description: Description of the error encountered.\n              type: string\n          required:\n            - id\n            - code\n            - message\n          type: object\n      type: object\n    FarmOrganization:\n      description: Logical representation of a farm organization with a name and type.\n      example:\n        id: 00000000-0000-0000-0000-000000000000\n        name: Back Forty\n        type: farm\n      properties:\n        id:\n          description: Unique identifier for a farm organization.\n          format: uuid\n          type: string\n        name:\n          description: Name of the farm organization.\n          type: string\n        type:\n          description: Type of the farm organization.\n          enum:\n            - farm\n          type: string\n      required:\n        - id\n        - name\n        - type\n    Field:\n      description: Logical representation of a Field with a name.  Spatial attributes of the Field are provided in the Boundary.\n      example:\n        boundaryId: 00000000-0000-0000-0000-000000000000\n        id: 00000000-0000-0000-0000-000000000000\n        name: Back Forty\n        parent:\n          id: 00000000-0000-0000-0000-000000000000\n          type: farm\n        resourceOwnerId: 00000000-0000-0000-0000-000000000000\n      properties:\n        boundaryId:\n          description: Unique identifier for the current Field's Boundary.\n          format: uuid\n          type: string\n        id:\n          description: Unique identifier for a Field.\n          format: uuid\n          type: string\n        name:\n          description: Name of the Field.\n          type: string\n        parent:\n          $ref: \"#/components/schemas/Parent\"\n        resourceOwnerId:\n          description: Unique identifier of the resource owner that owns the Field.\n          format: uuid\n          type: string\n      required:\n        - id\n        - name\n        - boundaryId\n        - resourceOwnerId\n        - parent\n    Fields:\n      description: A batch of field results\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/Field\"\n          type: array\n      required:\n        - results\n    Geometry:\n      description: GeoJSON\n      example:\n        coordinates:\n          - 0\n          - 0\n        type: Point\n      properties:\n        coordinates:\n          items:\n            type: string\n          type: array\n        type:\n          enum:\n            - Point\n            - Polygon\n            - MultiPolygon\n          type: string\n      required:\n        - type\n        - coordinates\n    HarvestActivities:\n      description: A batch of harvest activities\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/HarvestActivitySummary\"\n          type: array\n      required:\n        - results\n    HarvestActivityContents:\n      properties:\n        body:\n          $ref: \"#/components/schemas/BinaryData\"\n      required:\n        - body\n    HarvestActivitySummary:\n      properties:\n        createdAt:\n          description: The time the harvest activity was created. Time in ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        endTime:\n          description: The start time of the harvest activity. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        fieldIds:\n          description: Array of field ids associated the harvest activity.\n          items:\n            type: string\n          type: array\n        id:\n          description: The id of a harvest activity.\n          format: uuid\n          type: string\n        length:\n          description: The size in bytes of the raw harvest activity file.\n          format: int64\n          type: integer\n        startTime:\n          description: The start time of the harvest activity. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        updatedAt:\n          description: The time the harvest activity was last updated. Time in ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n      required:\n        - id\n        - startTime\n        - endTime\n        - createdAt\n        - updatedAt\n        - length\n        - fieldIds\n      type: object\n    Metadata:\n      additionalProperties: true\n      type: object\n    Parent:\n      description: A minimal set of attributes regarding the parent of a farm organization.\n      properties:\n        id:\n          description: Unique identifier for the parent of a farm organization.\n          format: uuid\n          type: string\n        type:\n          description: Type of the parent of a farm organization.\n          enum:\n            - farm\n          type: string\n      required:\n        - id\n        - type\n    PlantingActivities:\n      description: A batch of planting activities\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/PlantingActivitySummary\"\n          type: array\n      required:\n        - results\n    PlantingActivityContents:\n      properties:\n        body:\n          $ref: \"#/components/schemas/BinaryData\"\n      required:\n        - body\n    PlantingActivitySummary:\n      properties:\n        createdAt:\n          description: The time the planting activity was created. Time in ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        endTime:\n          description: The start time of the planting activity. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        fieldIds:\n          description: Array of field ids associated the planting activity.\n          items:\n            type: string\n          type: array\n        id:\n          description: The id of a planting activity.\n          format: uuid\n          type: string\n        length:\n          description: The size in bytes of the raw planting activity file.\n          format: int64\n          type: integer\n        startTime:\n          description: The start time of the planting activity. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        updatedAt:\n          description: The time the planting activity was last updated. Time in ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n      required:\n        - id\n        - startTime\n        - endTime\n        - createdAt\n        - updatedAt\n        - length\n        - fieldIds\n      type: object\n    Point:\n      example:\n        coordinates:\n          - -122.2\n          - 38.1\n        type: Point\n      properties:\n        coordinates:\n          items:\n            format: float\n            type: number\n          type: array\n        type:\n          type: string\n      required:\n        - coordinates\n        - type\n    ResourceOwner:\n      properties:\n        email:\n          type: string\n        id:\n          format: uuid\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n        - email\n      type: object\n    ScoutingObservation:\n      properties:\n        endTime:\n          description: The start time of the scouting observation. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        fieldIds:\n          description: Array of field ids associated with this observation.\n          items:\n            type: string\n          type: array\n        id:\n          description: The id of a scouting observation.\n          format: uuid\n          type: string\n        location:\n          $ref: \"#/components/schemas/Geometry\"\n          description: Where the scouting observation occurred.  GeoJson in WGS84.\n        locationDisplayColor:\n          description: |\n            Color of scouting pin assigned in the Climate FieldView app.\n            Limited in the Ux to a set of RGB values.\n            * #307af7\n            * #38d753\n            * #b037e4\n            * #ef3e3e\n            * #f7ec41\n            * #ff8439\n            * #808080\n          enum:\n            - \"#307af7\"\n            - \"#38d753\"\n            - \"#b037e4\"\n            - \"#ef3e3e\"\n            - \"#f7ec41\"\n            - \"#ff8439\"\n            - \"#808080\"\n          type: string\n        note:\n          description: The text of the scouting observation. Maximum of 4000 characters.\n          type: string\n        startTime:\n          description: The start time of the scouting observation. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        status:\n          description: \"The status of the scouting observation For example : ACTIVE, DELETED\"\n          enum:\n            - ACTIVE\n            - DELETED\n          type: string\n        tags:\n          description: For example, ROCK_STONE, PONDING_WET, HAIL Maximum 20 tags allowed, 40 characters per tag.\n          items:\n            $ref: \"#/components/schemas/ScoutingTag\"\n          type: array\n        timespan:\n          description: Permanent or seasonal\n          enum:\n            - PERMANENT\n            - SEASONAL\n          type: string\n        title:\n          description: The title or summary of the scouting observation. 40 Characters long, no emojis, and leading and trailing whitespace will be trimmed.\n          type: string\n        updatedAt:\n          description: The time the scouting observation or any of its attachments was last updated.Time in ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n      required:\n        - id\n        - title\n        - note\n        - location\n        - startTime\n        - endTime\n        - updatedAt\n        - fieldIds\n        - tags\n        - timespan\n        - locationDisplayColor\n        - status\n      type: object\n    ScoutingObservationAttachment:\n      properties:\n        contentType:\n          description: The content type of the attachment, e.g. image/png.\n          type: string\n        id:\n          description: id of the attachment\n          format: uuid\n          type: string\n        length:\n          description: The number of bytes in the attachment.\n          format: int64\n          type: integer\n        status:\n          description: \"The status of the attachment. For example : ACTIVE, DELETED\"\n          enum:\n            - ACTIVE\n            - DELETED\n          type: string\n        updatedAt:\n          description: |\n            The time the attachment was last updated.\n            Time in ISO 8601 format with UTC timezone, 3 fractional seconds.\n            (https://tools.ietf.org/html/rfc3339)\n          format: date-time\n          type: string\n      required:\n        - id\n        - updatedAt\n        - contentType\n        - length\n        - status\n      type: object\n    ScoutingObservationAttachmentContents:\n      properties:\n        body:\n          $ref: \"#/components/schemas/BinaryData\"\n      required:\n        - body\n    ScoutingObservationAttachments:\n      description: A batch of scouting attachments\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/ScoutingObservationAttachment\"\n          type: array\n      required:\n        - results\n    ScoutingObservationSummary:\n      properties:\n        endTime:\n          description: The start time of the scouting observation. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        id:\n          description: The id of a scouting observation.\n          format: uuid\n          type: string\n        startTime:\n          description: The start time of the scouting observation. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n        updatedAt:\n          description: The time the scouting observation or any of its attachments was last updated.Time in ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339).\n          format: date-time\n          type: string\n      required:\n        - id\n        - startTime\n        - endTime\n        - updatedAt\n      type: object\n    ScoutingObservations:\n      description: A batch of scouting observations\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/ScoutingObservationSummary\"\n          type: array\n      required:\n        - results\n    ScoutingTag:\n      properties:\n        code:\n          type: string\n      required:\n        - code\n      type: object\n    Upload:\n      description: Client request to upload data for a user.\n      properties:\n        contentType:\n          description: Content type representing data being uploaded (e.g. image/vnd.climate.rgb.geotiff)\n          enum:\n            - application/vnd.climate.field.geojson\n            - image/vnd.climate.thermal.geotiff\n            - image/vnd.climate.ndvi.geotiff\n            - image/vnd.climate.waterstress.geotiff\n            - image/vnd.climate.elevation.geotiff\n            - image/vnd.climate.raw.geotiff\n            - image/vnd.climate.rgb.geotiff\n          format: mime-type\n          type: string\n        length:\n          description: Content size in bytes\n          format: int64\n          type: integer\n        md5:\n          description: Base64 encoded md5 hash of the content\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n      required:\n        - contentType\n        - md5\n        - length\n      type: object\n    UploadStatus:\n      properties:\n        id:\n          description: Unique identifier for the upload.\n          format: uuid\n          type: string\n        status:\n          description: |\n            Current status of the upload:\n              * `UPLOADING` - Uploading has started, parts are still coming in.\n              * `INVALID` - Upload has failed validity check.\n              * `PENDING` - Upload has been received by Climate and is being processed.\n              * `INBOX` - The upload is awaiting user acceptance in their Data Inbox.\n              * `DECLINED` - The user has declined the upload in their Data Inbox.\n              * `IMPORTING` - The user has accepted the upload and it is being imported into their account.\n              * `SUCCESS` - The upload has been successfully imported.\n          enum:\n            - UPLOADING\n            - INVALID\n            - PENDING\n            - INBOX\n            - DECLINED\n            - IMPORTING\n            - SUCCESS\n          type: string\n      required:\n        - id\n        - status\n      type: object\n    UploadStatusQuery:\n      properties:\n        ids:\n          items:\n            description: Unique identifier for the upload.\n            format: uuid\n            type: string\n          type: array\n      required:\n        - ids\n      type: object\n    UploadStatuses:\n      properties:\n        results:\n          items:\n            $ref: \"#/components/schemas/UploadStatus\"\n          type: array\n      required:\n        - results\n      type: object\n    UploadedBoundaryId:\n      description: Unique identifier of a successfully uploaded boundary\n      properties:\n        id:\n          format: uuid\n          type: string\n      required:\n        - id\n  securitySchemes:\n    api_key:\n      description: |-\n        API access key used to control throttling (429 responses).  This key is typically formatted:\n        `partner-{name}-{uuid}`\n      in: header\n      name: X-Api-Key\n      type: apiKey\n    oauth2_authorization_code:\n      description: |-\n        Log in with FieldView OAuth2 provider (Authorization Code Grant). Used to authorize the client (partner) and\n        user. The *access_token* is required to be provided in the `Authorization` header on all calls to the FieldView\n        APIs with the following format `Bearer $access_token`.\n      flows:\n        authorizationCode:\n          authorizationUrl: https://climate.com/static/app-login/\n          scopes:\n            asApplied:read: Required for retrieving as applied data\n            asHarvested:read: Required for retrieving harvest data\n            asPlanted:read: Required for retrieving planting data\n            avroAgronomicData:read: Required for retrieving agronomic data\n            boundaries:write: \"*Originally missing*\"\n            customerInsights:read: Required for retrieving customer insights metrics data\n            diagnostics:read: Required for retrieving CNH machine diagnostic data\n            farmOrganizations:read: Required for retrieving farm organization information\n            fields:read: Required for retrieving field and boundary information\n            fields:write: Required for uploading field boundaries\n            imagery:write: Required for uploading imagery\n            operations:read: Required for retrieving operation information\n            plantingActivitySummary:read: Required for retrieving planting activity summary data\n            platform: (DEPRECATED) Legacy scope used for some Platform APIs\n            resourceOwners:read: Required for retrieving resource owner information\n            rx:write: Required for uploading prescriptions\n            scouting:read: Required for retrieving user\\'s scouting information\n            soil:write: Required for uploading soil sample results\n            standCount:write: \"*Originally missing*\"\n            weedCount:write: \"*Originally missing*\"\n          tokenUrl: https://api.climate.com/api/oauth/token\n      type: oauth2\n"
		}
	},
	"Error": "buildIR: make ir: path \"/v4/layers/asHarvested/{activityId}/contents\": get: responses: 200: contents: application/octet-stream: octet stream with \"object\" schema not supported",
	"NotImplemented": [
		"oauth2 security",
		"unsupported content types"
	]
}