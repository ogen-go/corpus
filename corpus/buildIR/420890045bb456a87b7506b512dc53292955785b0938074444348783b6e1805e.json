{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/redhat-developer/app-services-sdk-java"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "packages/service-accounts-sdk/api/openapi.yaml",
			"byteSize": 16936,
			"content": "openapi: 3.0.1\ninfo:\n  description: This is the API documentation for Service Accounts\n  termsOfService: https://www.redhat.com/en/about/terms-use\n  title: Service Accounts API Documentation\n  version: \"1.0\"\nservers:\n- description: Development server\n  url: /\nsecurity:\n- bearerAuth: []\npaths:\n  /apis/service_accounts/v1:\n    get:\n      description: Returns a list of service accounts created by a user. User information\n        is obtained from the bearer token. The list is paginated with starting index\n        as 'first' and page size as 'max.' If 'max' is greater than the maximum allowable\n        page size a NotAcceptableException is thrown\n      operationId: getServiceAccounts\n      parameters:\n      - explode: true\n        in: query\n        name: first\n        required: false\n        schema:\n          default: 0\n          format: int32\n          minimum: 0\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: max\n        required: false\n        schema:\n          default: 20\n          format: int32\n          maximum: 100\n          minimum: 1\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ServiceAccountData'\n                type: array\n          description: OK\n          links:\n            getNextPage:\n              description: link to the next page of service accounts\n              operationId: getServiceAccounts\n        \"406\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n      summary: List all service accounts\n      tags:\n      - service_accounts\n      x-accepts: application/json\n    post:\n      description: Create a service account. Created service account is associated\n        with the user defined in the bearer token.\n      operationId: createServiceAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceAccountCreateRequestData'\n        description: '''name'' and ''description'' of the service account'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceAccountData'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_401'\n          description: Unauthorized\n      summary: Create service account\n      tags:\n      - service_accounts\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/service_accounts/v1/{id}:\n    delete:\n      description: Delete service account by id. Throws not found exception if the\n        service account is not found or the user does not have access to this service\n        account\n      operationId: deleteServiceAccount\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json: {}\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_400'\n          description: Not Found\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_401'\n          description: Unauthorized\n      summary: Delete service account by id\n      tags:\n      - service_accounts\n      x-accepts: application/json\n    get:\n      description: Returns service account by id. Throws not found exception if the\n        service account is not found or the user does not have access to this service\n        account\n      operationId: getServiceAccount\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceAccountData'\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n      summary: Get service account by id\n      tags:\n      - serviceaccounts\n      x-accepts: application/json\n    patch:\n      description: Update a service account by id.\n      operationId: updateServiceAccount\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceAccountRequestData'\n        description: '''name'' and ''description'' of the service account'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceAccountData'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n      summary: Update service account\n      tags:\n      - service_accounts\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/service_accounts/v1/{id}/resetSecret:\n    post:\n      description: Reset service account secret by id . Throws not found exception\n        if the service account is not found or the user does not have access to this\n        service account\n      operationId: resetServiceAccountSecret\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceAccountData'\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n      summary: Reset service account secret by id\n      tags:\n      - serviceaccounts\n      x-accepts: application/json\ncomponents:\n  responses:\n    UnauthorizedError:\n      description: Access token is missing or invalid\n    \"400\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Bad Request\n    \"401\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unauthorized\n    \"403\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Forbidden\n    \"404\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Not Found\n    \"406\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Not Acceptable\n    \"500\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Internal Server Error\n  schemas:\n    Error:\n      properties:\n        error:\n          description: The cause of the Error.\n          type: string\n      required:\n      - error\n      type: object\n    ServiceAccountData:\n      example:\n        createdAt: 0\n        clientId: clientId\n        name: name\n        description: description\n        id: id\n        secret: secret\n        ownerId: ownerId\n      properties:\n        id:\n          type: string\n        clientId:\n          type: string\n        secret:\n          description: Provided during creation and resetting of service account credentials.\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        ownerId:\n          type: string\n        createdAt:\n          format: int64\n          type: integer\n      type: object\n    ServiceAccountCreateRequestData:\n      example:\n        name: name\n        description: description\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n      required:\n      - description\n      - name\n      type: object\n    ServiceAccountRequestData:\n      example:\n        name: name\n        description: description\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n      type: object\n    inline_response_400_cause_stackTrace:\n      properties:\n        methodName:\n          type: string\n        fileName:\n          type: string\n        lineNumber:\n          format: int32\n          type: integer\n        className:\n          type: string\n        nativeMethod:\n          type: boolean\n      type: object\n    inline_response_400_cause_suppressed:\n      properties:\n        stackTrace:\n          items:\n            $ref: '#/components/schemas/inline_response_400_cause_stackTrace'\n          type: array\n        message:\n          type: string\n        localizedMessage:\n          type: string\n      type: object\n    inline_response_400_cause:\n      properties:\n        stackTrace:\n          items:\n            $ref: '#/components/schemas/inline_response_400_cause_stackTrace'\n          type: array\n        message:\n          type: string\n        localizedMessage:\n          type: string\n        suppressed:\n          items:\n            $ref: '#/components/schemas/inline_response_400_cause_suppressed'\n          type: array\n      type: object\n    inline_response_400_response_entityTag:\n      properties:\n        value:\n          type: string\n        weak:\n          type: boolean\n      type: object\n    inline_response_400_response_cookies:\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n        version:\n          format: int32\n          type: integer\n        path:\n          type: string\n        domain:\n          type: string\n        comment:\n          type: string\n        maxAge:\n          format: int32\n          type: integer\n        expiry:\n          format: date-time\n          type: string\n        secure:\n          type: boolean\n        httpOnly:\n          type: boolean\n      type: object\n    inline_response_400_response_mediaType:\n      properties:\n        type:\n          type: string\n        subtype:\n          type: string\n        parameters:\n          additionalProperties:\n            type: string\n          type: object\n        wildcardType:\n          type: boolean\n        wildcardSubtype:\n          type: boolean\n      type: object\n    inline_response_400_response_statusInfo:\n      properties:\n        reasonPhrase:\n          type: string\n        statusCode:\n          format: int32\n          type: integer\n        family:\n          enum:\n          - INFORMATIONAL\n          - SUCCESSFUL\n          - REDIRECTION\n          - CLIENT_ERROR\n          - SERVER_ERROR\n          - OTHER\n          type: string\n      type: object\n    inline_response_400_response_links:\n      properties:\n        uriBuilder:\n          type: object\n        params:\n          additionalProperties:\n            type: string\n          type: object\n        title:\n          type: string\n        uri:\n          format: uri\n          type: string\n        rel:\n          type: string\n        rels:\n          items:\n            type: string\n          type: array\n        type:\n          type: string\n      type: object\n    inline_response_400_response_language:\n      properties:\n        language:\n          type: string\n        script:\n          type: string\n        country:\n          type: string\n        variant:\n          type: string\n        extensionKeys:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        unicodeLocaleAttributes:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        unicodeLocaleKeys:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        iso3Language:\n          type: string\n        iso3Country:\n          type: string\n        displayLanguage:\n          type: string\n        displayScript:\n          type: string\n        displayCountry:\n          type: string\n        displayVariant:\n          type: string\n        displayName:\n          type: string\n      type: object\n    inline_response_400_response:\n      properties:\n        metadata:\n          additionalProperties:\n            items:\n              type: object\n            type: array\n          type: object\n        entity:\n          type: object\n        status:\n          format: int32\n          type: integer\n        entityTag:\n          $ref: '#/components/schemas/inline_response_400_response_entityTag'\n        cookies:\n          additionalProperties:\n            $ref: '#/components/schemas/inline_response_400_response_cookies'\n          type: object\n        allowedMethods:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        mediaType:\n          $ref: '#/components/schemas/inline_response_400_response_mediaType'\n        stringHeaders:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          type: object\n        statusInfo:\n          $ref: '#/components/schemas/inline_response_400_response_statusInfo'\n        links:\n          items:\n            $ref: '#/components/schemas/inline_response_400_response_links'\n          type: array\n          uniqueItems: true\n        length:\n          format: int32\n          type: integer\n        language:\n          $ref: '#/components/schemas/inline_response_400_response_language'\n        location:\n          format: uri\n          type: string\n        lastModified:\n          format: date-time\n          type: string\n        date:\n          format: date-time\n          type: string\n        headers:\n          additionalProperties:\n            items:\n              type: object\n            type: array\n          type: object\n      type: object\n    inline_response_400:\n      properties:\n        cause:\n          $ref: '#/components/schemas/inline_response_400_cause'\n        stackTrace:\n          items:\n            $ref: '#/components/schemas/inline_response_400_cause_stackTrace'\n          type: array\n        response:\n          $ref: '#/components/schemas/inline_response_400_response'\n        message:\n          type: string\n        localizedMessage:\n          type: string\n        suppressed:\n          items:\n            $ref: '#/components/schemas/inline_response_400_cause_suppressed'\n          type: array\n      type: object\n    inline_response_401:\n      properties:\n        cause:\n          $ref: '#/components/schemas/inline_response_400_cause'\n        stackTrace:\n          items:\n            $ref: '#/components/schemas/inline_response_400_cause_stackTrace'\n          type: array\n        response:\n          $ref: '#/components/schemas/inline_response_400_response'\n        challenges:\n          items:\n            type: object\n          type: array\n        message:\n          type: string\n        localizedMessage:\n          type: string\n        suppressed:\n          items:\n            $ref: '#/components/schemas/inline_response_400_cause_suppressed'\n          type: array\n      type: object\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n\n"
		}
	},
	"Error": "buildIR: make ir: path \"/apis/service_accounts/v1\": post: responses: 400: contents: application/json: generate schema: save schema types: save referenced type: reference \"#/components/schemas/inline_response_400_response_cookies\" type name conflict: \"InlineResponse400ResponseCookies\""
}