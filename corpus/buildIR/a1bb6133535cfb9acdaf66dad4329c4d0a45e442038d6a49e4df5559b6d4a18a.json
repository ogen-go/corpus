{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Serviceware/Dibix"
		},
		"file": {
			"name": "Endpoints_OpenApi.yml",
			"size": 0,
			"path": "tests/Dibix.Sdk.Tests/Resources/CodeGeneration/Endpoints_OpenApi.yml",
			"byteSize": 8842,
			"content": "openapi: 3.0.1\ninfo:\n  title: Dibix.Sdk.Tests API title\n  description: Dibix.Sdk.Tests API description\n  version: 1.0.1\nservers:\n  - url: https://localhost/api\npaths:\n  /Tests/GenericEndpoint:\n    get:\n      tags:\n        - GenericEndpoint\n      summary: MultiConcreteResult\n      operationId: MultiConcreteResult\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GenericContract'\n      security:\n        - HLNS-SIT: [ ]\n          HLNS-ClientId: [ ]\n    put:\n      tags:\n        - GenericEndpoint\n      summary: FileUpload\n      operationId: FileUpload\n      requestBody:\n        content:\n          image/png:\n            schema:\n              type: string\n              format: binary\n        required: true\n      responses:\n        '204':\n          description: NoContent\n      security:\n        - HLNS-SIT: [ ]\n          HLNS-ClientId: [ ]\n    post:\n      tags:\n        - GenericEndpoint\n      summary: EmptyWithParams2\n      operationId: EmptyWithParams2\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InputContract'\n        required: true\n      responses:\n        '204':\n          description: NoContent\n      security:\n        - HLNS-SIT: [ ]\n          HLNS-ClientId: [ ]\n    patch:\n      tags:\n        - GenericEndpoint\n      summary: EmptyWithParams3\n      operationId: EmptyWithParams3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InputContract'\n        required: true\n      responses:\n        '204':\n          description: NoContent\n      security:\n        - HLNS-SIT: [ ]\n          HLNS-ClientId: [ ]\n    delete:\n      tags:\n        - GenericEndpoint\n      summary: EmptyWithParams4\n      operationId: EmptyWithParams4\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnotherInputContract'\n        required: true\n      responses:\n        '204':\n          description: NoContent\n      security:\n        - HLNS-SIT: [ ]\n          HLNS-ClientId: [ ]\n  '/Tests/GenericEndpoint/{password}/Fixed':\n    get:\n      tags:\n        - GenericEndpoint\n      summary: EmptyWithParams1\n      operationId: EmptyWithParams1\n      parameters:\n        - name: password\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: User-Agent\n          in: header\n          required: true\n          schema:\n            type: string\n        - name: ids\n          in: query\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/GenericParameterSet'\n        - name: Accept-Language\n          in: header\n          schema:\n            type: string\n            default: \n            nullable: true\n      responses:\n        '204':\n          description: NoContent\n      security:\n        - HLNS-SIT: [ ]\n          HLNS-ClientId: [ ]\n  '/Tests/GenericEndpoint/{password}/User':\n    get:\n      tags:\n        - GenericEndpoint\n      summary: EmptyWithParamsAnonymous\n      operationId: EmptyWithParamsAnonymous\n      parameters:\n        - name: password\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: a\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: b\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: c\n          in: query\n          required: true\n          schema:\n            type: string\n            format: uuid\n            nullable: true\n        - name: ids\n          in: query\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/GenericParameterSet'\n        - name: d\n          in: query\n          schema:\n            type: string\n            default: \n            nullable: true\n        - name: e\n          in: query\n          schema:\n            type: boolean\n            default: true\n        - name: f\n          in: query\n          schema:\n            $ref: '#/components/schemas/Direction'\n        - name: g\n          in: query\n          schema:\n            type: string\n            default: Cake\n            nullable: true\n      responses:\n        '204':\n          description: NoContent\n  /Tests/GenericEndpoint/Array:\n    get:\n      tags:\n        - GenericEndpoint\n      summary: SingleConrecteResultWithParams\n      operationId: SingleConrecteResultWithParams\n      parameters:\n        - name: ids\n          in: query\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int32\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericContract'\n      security:\n        - HLNS-SIT: [ ]\n          HLNS-ClientId: [ ]\n  '/Tests/GenericEndpoint/{id}':\n    get:\n      tags:\n        - GenericEndpoint\n      summary: FileResult\n      operationId: FileResult\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: OK\n          content:\n            image/*:\n              schema:\n                type: string\n                format: binary\n        '404':\n          description: NotFound\n      security:\n        - { }\n        - Bearer: [ ]\ncomponents:\n  schemas:\n    GenericContract:\n      required:\n        - Role\n        - CreationTime\n        - ImageUrl\n      type: object\n      properties:\n        Name:\n          type: string\n          default: DefaultValue\n        Role:\n          $ref: '#/components/schemas/Role'\n        CreationTime:\n          type: string\n          format: date-time\n          nullable: true\n        ImageUrl:\n          type: string\n          format: uri\n      additionalProperties: false\n    Role:\n      enum:\n        - 0\n        - 1\n        - 2\n      type: integer\n      description: 0 = None\u003cbr/\u003e1 = User\u003cbr/\u003e2 = Admin\n      format: int32\n      x-enum-varnames:\n        - None\n        - User\n        - Admin\n    InputContract:\n      required:\n        - A\n        - B\n        - Ids\n        - D\n        - Password\n        - E\n        - F\n        - G\n      type: object\n      properties:\n        A:\n          type: string\n        B:\n          type: string\n        C:\n          type: string\n        Ids:\n          type: array\n          items:\n            $ref: '#/components/schemas/Entry'\n        D:\n          type: string\n          format: uuid\n        Password:\n          type: string\n        E:\n          type: boolean\n        F:\n          type: integer\n          format: int32\n        G:\n          type: string\n      additionalProperties: false\n    Entry:\n      required:\n        - Id\n        - Name\n      type: object\n      properties:\n        Id:\n          type: integer\n          format: int32\n        Name:\n          type: string\n      additionalProperties: false\n    AnotherInputContract:\n      required:\n        - A\n        - B\n        - SomeIds\n        - D\n        - Password\n        - E\n        - F\n        - G\n      type: object\n      properties:\n        A:\n          type: string\n        B:\n          type: string\n        C:\n          type: string\n        SomeIds:\n          type: array\n          items:\n            $ref: '#/components/schemas/AnotherEntry'\n        D:\n          type: string\n          format: uuid\n        Password:\n          type: string\n        E:\n          type: boolean\n        F:\n          type: integer\n          format: int32\n        G:\n          type: string\n      additionalProperties: false\n    AnotherEntry:\n      required:\n        - Id\n        - Title\n      type: object\n      properties:\n        Id:\n          type: integer\n          format: int32\n        Title:\n          type: string\n      additionalProperties: false\n    GenericParameterSet:\n      required:\n        - id\n        - name\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n        name:\n          type: string\n          nullable: true\n      additionalProperties: false\n    Direction:\n      enum:\n        - 0\n        - 1\n      type: integer\n      description: 0 = Ascending\u003cbr/\u003e1 = Descending\n      format: int32\n      x-enum-varnames:\n        - Ascending\n        - Descending\n  securitySchemes:\n    HLNS-SIT:\n      type: apiKey\n      name: HLNS-SIT\n      in: header\n    HLNS-ClientId:\n      type: apiKey\n      name: HLNS-ClientId\n      in: header\n    Bearer:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT"
		}
	},
	"Error": "buildIR: make ir: path \"/Tests/GenericEndpoint/{password}/User\": get: parameters: fail: \"ids\": nested objects not allowed"
}