{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/avaza/openapi.yaml",
			"byteSize": 202035,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: Avaza\n    iconPath: \"icon.png\"\n  title: Avaza API Documentation\n  description:\n    This is a generated connector for [Avaza API v1](https://api.avaza.com/swagger/ui/index) OpenAPI specification. \n    \n    Avaza API allows to collaborate on projects, chat, schedule resources, track time, manage expenses \u0026 invoice customers.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create a [Avaza account](https://signup.avaza.com/account/signup) and obtain tokens by following [this guide](https://www.avaza.com/avaza-api-oauth2-authentication/).  \n  version: v1\nservers:\n- url: https://api.avaza.com/\npaths:\n  /api/Account:\n    get:\n      tags:\n      - Account\n      summary: Account Details\n      operationId: Account_Get\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AccountDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AccountDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AccountDetails'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_account\n  /api/Company/Lookup:\n    get:\n      tags:\n      - Company\n      summary: Gets minimal list of Companies.\n      description: Certain roles see a restricted set of companies based on their\n        project memberships\n      operationId: CompanyLookup\n      parameters:\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: search\n        in: query\n        description: Search string to match against Company title\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyDropdownList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/CompanyDropdownList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CompanyDropdownList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CompanyDropdownList'\n      security:\n      - oauth2:\n        - read_contacts\n  /api/Company:\n    get:\n      tags:\n      - Company\n      summary: Gets list of Companies\n      operationId: Company_Get\n      parameters:\n      - name: UpdatedAfter\n        description: Limit results to records updated after the specified date\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: pageSize\n        in: query\n        description: Number of results per page\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: 1 based page number to retrieve\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        in: query\n        description: '(optional) Supply one of: \"DateUpdated\", \"DateCreated\", \"CompanyName\",\"DateUpdated\n          desc\",\"DateCreated desc\", \"CompanyName desc\"'\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/CompanyList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CompanyList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CompanyList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_contacts\n    put:\n      tags:\n      - Company\n      summary: Update a Company record.\n      description: Requires CompanyID and a list of field names to update. The FieldsToUpdate\n        field accepts a string array containing field names that should be updated.\n      operationId: Company_Put\n      requestBody:\n        description: A record of type `UpdateCompany` which contains the necessary data to update company\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCompany'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCompany'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateCompany'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateCompany'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UpdateCompany'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Company'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Company'\n      security:\n      - oauth2:\n        - write_contacts\n      x-codegen-request-body-name: model\n    post:\n      tags:\n      - Company\n      summary: Create a Company\n      operationId: Company_Post\n      requestBody:\n        description: A record of type `NewCompany` which contains the necessary data to create company\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewCompany'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewCompany'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewCompany'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewCompany'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewCompany'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Company'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Company'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - write_contacts\n      x-codegen-request-body-name: model\n  /api/Company/{id}:\n    get:\n      tags:\n      - Company\n      summary: Gets Company by Company ID\n      operationId: Company_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: Company ID Number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Company'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Company'\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_contacts\n  /api/Contact:\n    get:\n      tags:\n      - Contact\n      summary: Gets list of Contacts\n      operationId: Contact_Get\n      parameters:\n      - name: UpdatedAfter\n        description: Limit results to records updated after the specified date\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        description: Sort method\n        in: query\n        schema:\n          type: string\n      - name: CompanyIDFK\n        description: Company related to contacts\n        in: query\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ContactList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ContactList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ContactList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_contacts\n    post:\n      tags:\n      - Contact\n      summary: Create a Contact\n      operationId: Contact_Post\n      requestBody:\n        description: A record of type `NewCompanyContact` which contains the necessary data to create contact\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewCompanyContact'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewCompanyContact'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewCompanyContact'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewCompanyContact'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewCompanyContact'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyContact'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/CompanyContact'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CompanyContact'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CompanyContact'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - write_contacts\n      x-codegen-request-body-name: model\n  /api/Contact/{id}:\n    get:\n      tags:\n      - Contact\n      summary: Gets Contact by Contact ID\n      operationId: Contact_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: Contact ID number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyContact'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/CompanyContact'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CompanyContact'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CompanyContact'\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_contacts\n  /api/CreditNote:\n    get:\n      tags:\n      - CreditNote\n      summary: Gets list of CreditNotes\n      operationId: CreditNote_Get\n      parameters:\n      - name: UpdatedAfter\n        description: Limit results to records updated after the specified date\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreditNoteList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/CreditNoteList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CreditNoteList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreditNoteList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n  /api/CreditNote/{id}:\n    get:\n      tags:\n      - CreditNote\n      summary: Gets Credit Note by CreditNoteID\n      operationId: CreditNote_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: Credit Note ID Number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreditNote'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/CreditNote'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CreditNote'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CreditNote'\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n  /api/Currency:\n    get:\n      tags:\n      - Currency\n      summary: Gets list of Currencies\n      operationId: Currency_Get\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CurrencyList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/CurrencyList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CurrencyList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CurrencyList'\n  /api/Estimate:\n    get:\n      tags:\n      - Estimate\n      summary: Gets list of Estimates\n      description: 'EstimateStatusCode values are: \"Draft\", \"Sent\", \"Accepted\", \"Converted\",\n        \"Expired\", \"Rejected\"'\n      operationId: Estimate_Get\n      parameters:\n      - name: UpdatedAfter\n        description: Limit results to records updated after the specified date\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        description: Sort method\n        in: query\n        schema:\n          type: string\n      - name: CompanyIDFK\n        description: Company related to estimates \n        in: query\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EstimateList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/EstimateList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/EstimateList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EstimateList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n    post:\n      tags:\n      - Estimate\n      summary: Create a new draft Estimate\n      operationId: Estimate_Post\n      requestBody:\n        description: A record of type `NewEstimate` which contains the necessary data to create a new draft estimate\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewEstimate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewEstimate'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewEstimate'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewEstimate'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewEstimate'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EstimateDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/EstimateDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/EstimateDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/EstimateDetails'\n      security:\n      - oauth2:\n        - write_financials\n      x-codegen-request-body-name: model\n  /api/Estimate/{id}:\n    get:\n      tags:\n      - Estimate\n      summary: Gets Estimate by Estimate ID\n      operationId: Estimate_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: Estimate Estimate ID number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n  /api/Expense/Attachment:\n    post:\n      tags:\n      - Expense\n      summary: Create expense attachment\n      operationId: ExpenseAttachment\n      requestBody:\n        description: Request to create expense attachment\n        content:\n          application/json:\n            schema:\n              required:\n              - File\n              properties:\n                File:\n                  type: string\n                  description: Upload software package\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseAttachmentUploadResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseAttachmentUploadResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseAttachmentUploadResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseAttachmentUploadResult'\n      security:\n      - oauth2:\n        - write_expenses\n  /api/ExpenseApproval/Submit:\n    post:\n      tags:\n      - Expense\n      summary: Submit Expenses for Approval.\n      operationId: ExpenseApproval\n      parameters:\n      - name: UserID\n        in: query\n        description: The user to submit the Expenses for. Defaults to current user.\n          Only allowed to be different from the current user when the current user\n          has rights to Impersonate other users.\n        schema:\n          type: integer\n          format: int32\n      - name: SendNotifications\n        in: query\n        description: Send email alerts to expense approvers. Defaults to true\n        schema:\n          type: boolean\n      requestBody:\n        description: A collection of ExpenseID's that should be submitted for approval.\n          If not provided, submits all verified expenses for approval.\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: integer\n                format: int64\n          text/json:\n            schema:\n              type: array\n              items:\n                type: integer\n                format: int64\n          application/xml:\n            schema:\n              type: array\n              items:\n                type: integer\n                format: int64\n          text/xml:\n            schema:\n              type: array\n              items:\n                type: integer\n                format: int64\n          application/x-www-form-urlencoded:\n            schema:\n              type: array\n              items:\n                type: integer\n                format: int64\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n      security:\n      - oauth2:\n        - write_expenses\n      x-codegen-request-body-name: ExpenseIDs\n  /api/Expense:\n    get:\n      tags:\n      - Expense\n      summary: Gets list of Expenses\n      operationId: Expense_Get\n      parameters:\n      - name: UpdatedAfter\n        description: Limit results to records updated after the specified date\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: ExpenseDateFrom\n        description: Start date to filter\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: ExpenseDateTo\n        description: End date to filter\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: UserEmail\n        description: User email address\n        in: query\n        schema:\n          type: string\n      - name: UserID\n        description: User Id\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: CategoryName\n        description: Category name\n        in: query\n        schema:\n          type: string\n      - name: CustomerID\n        description: Customer Id\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: ProjectID\n        description: Project Id\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: isChargeable\n        description: Chargeable status\n        in: query\n        schema:\n          type: boolean\n      - name: isInvoiced\n        description: Invoiced status\n        in: query\n        schema:\n          type: boolean\n      - name: ExpenseReimbursementIDFK\n        description: Expense reimbursement\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: ExpensePaymentMethodIDFK\n        description: Expense payment method\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: ExpenseApprovalStatusCode\n        description: Expense apprval status code\n        in: query\n        schema:\n          type: string\n      - name: Search\n        description: Search query\n        in: query\n        schema:\n          type: string\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        description: Sort method\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_expenses\n    put:\n      tags:\n      - Expense\n      summary: Update an Expense\n      description: Update an Expense\n      operationId: Expense_Put\n      requestBody:\n        description: A record of type `UpdateExpense` which contains the necessary data to update expense\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateExpense'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UpdateExpense'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateExpense'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateExpense'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UpdateExpense'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n      security:\n      - oauth2:\n        - write_expenses\n      x-codegen-request-body-name: model\n    post:\n      tags:\n      - Expense\n      summary: Create an Expense\n      description: Create an Expense\n      operationId: Expense_Post\n      requestBody:\n        description: A record of type `NewExpense` which contains the necessary data to create expense\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewExpense'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewExpense'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewExpense'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewExpense'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewExpense'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n      security:\n      - oauth2:\n        - write_expenses\n      x-codegen-request-body-name: model\n    delete:\n      tags:\n      - Expense\n      summary: Delete a Timesheet Entry\n      operationId: Expense_Delete\n      # requestBody:\n      #   description: A collection of ExpenseIDs to delete\n      #   content:\n      #     application/json:\n      #       schema:\n      #         type: array\n      #         items:\n      #           type: integer\n      #           format: int64\n      #     text/json:\n      #       schema:\n      #         type: array\n      #         items:\n      #           type: integer\n      #           format: int64\n      #     application/xml:\n      #       schema:\n      #         type: array\n      #         items:\n      #           type: integer\n      #           format: int64\n      #     text/xml:\n      #       schema:\n      #         type: array\n      #         items:\n      #           type: integer\n      #           format: int64\n      #     application/x-www-form-urlencoded:\n      #       schema:\n      #         type: array\n      #         items:\n      #           type: integer\n      #           format: int64\n      #   required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseDeleteResultSet'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseDeleteResultSet'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseDeleteResultSet'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseDeleteResultSet'\n      security:\n      - oauth2:\n        - write_expenses\n      x-codegen-request-body-name: ExpenseIDs\n  /api/Expense/{id}:\n    get:\n      tags:\n      - Expense\n      summary: Gets an Expense Entry by Expense ID\n      operationId: Expense_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: Expense ID number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseDetails'\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_expenses\n  /api/ExpenseCategory:\n    get:\n      tags:\n      - ExpenseCategory\n      summary: Gets list of Expense Categories\n      description: The default sort order is by Name asc\n      operationId: ExpenseCategory_Get\n      parameters:\n      - name: isEnabled\n        in: query\n        description: Optional filter on for enabled/disabled categories. Defaults\n          to true.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseCategoryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseCategoryList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseCategoryList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseCategoryList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_expenses\n  /api/ExpenseGroup/Lookup:\n    get:\n      tags:\n      - ExpenseGroup\n      summary: Gets minimal list of Expense Groups.\n      description: Expense Groups are for adhoc grouping of reported expenses. e.g.\n        for expenses incurred on a Trip\n      operationId: ExpenseGroupLookup\n      parameters:\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: search\n        in: query\n        description: Search string to match against Expense Group Name\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseGroupDropdownList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseGroupDropdownList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseGroupDropdownList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseGroupDropdownList'\n      security:\n      - oauth2:\n        - read_expenses\n  /api/ExpenseMerchant/Lookup:\n    get:\n      tags:\n      - ExpenseMerchant\n      summary: Gets minimal list of Expense Merchants.\n      operationId: ExpenseMerchangeLookup\n      parameters:\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: search\n        in: query\n        description: Search string to match against Expense Group Name\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseMerchantDropdownList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseMerchantDropdownList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseMerchantDropdownList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseMerchantDropdownList'\n      security:\n      - oauth2:\n        - read_expenses\n  /api/ExpensePaymentMethod/Lookup:\n    get:\n      tags:\n      - ExpensePaymentMethod\n      summary: Gets minimal list of Expense Payment Methods.\n      operationId: ExpensePaymentMethodLookup\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpensePaymentMethodDropdownList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpensePaymentMethodDropdownList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpensePaymentMethodDropdownList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpensePaymentMethodDropdownList'\n      security:\n      - oauth2:\n        - read_expenses\n  /api/ExpenseSummary:\n    get:\n      tags:\n      - ExpenseSummary\n      summary: Gets Basic Summary of Expense Statistics\n      operationId: ExpenseSummary_Get\n      parameters:\n      - name: model.groupBy\n        in: query\n        description: '(Optional) Combine one, two or three levels of Grouping. Combine\n          these possible grouping values: \"Category\", \"ChargeableStatus\", \"Merchant\",\n          \"ApprovalStatus\", \"ReimbursementStatus\", \"Customer\", \"Project\", \"User\",\n          \"Task\", \"Year\", \"Month\", \"Day\", \"Week\".'\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      - name: model.expenseDateFrom\n        in: query\n        description: (Required) Filter for expenses with expense dates greater or\n          equal to the specified date. e.g. 2019-01-25.\n        schema:\n          type: string\n          format: date-time\n      - name: model.expenseDateTo\n        in: query\n        description: (Required) Filter for expenses with an expense date smaller or\n          equal to the specified  date. e.g. 2019-01-25.\n        schema:\n          type: string\n          format: date-time\n      - name: model.userID\n        in: query\n        description: (Optional) Defaults to the current user. Provide one or more\n          UserIDs of Users whose expenses should be retrieved. If the current user\n          doesn't have impersonation rights, then they will only see their own data.\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n            format: int32\n      - name: model.projectID\n        in: query\n        description: (Optional) Filter by Project\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseSummaryResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExpenseSummaryResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseSummaryResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ExpenseSummaryResult'\n      security:\n      - oauth2:\n        - read_expenses\n  /api/FixedAmount:\n    get:\n      tags:\n      - FixedAmount\n      summary: Gets list of Fixed Amounts\n      operationId: FixedAmount_Get\n      parameters:\n      - name: UpdatedAfter\n        description: Limit results to records updated after the specified date\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: EntryDateFrom\n        description: Start date to filter\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: EntryDateTo\n        description: End date to filter\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: ProjectID\n        in: query\n        description: (Optional) The ProjectID of a Project to filter Fixed Amounts\n          for\n        schema:\n          type: integer\n          format: int32\n      - name: TaskID\n        in: query\n        description: (Optional) The TaskID of a Task to filter Fixed Amounts for\n        schema:\n          type: integer\n          format: int32\n      - name: isInvoiced\n        description: Invoiced status\n        in: query\n        schema:\n          type: boolean\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        in: query\n        description: 'Optional sorting instruction. Currently possible values: \"DateUpdated\",\n          \"DateCreated\", \"DateUpdated desc\", \"DateCreated desc\",\"EntryDate\", \"EntryDate\n          desc\", \"StartTimeLocal\",\"StartTimeLocal desc\", \"TimeSheetEntryID\", \"TimeSheetEntryID\n          desc\"'\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FixedAmountList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FixedAmountList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/FixedAmountList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/FixedAmountList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n  /api/Inventory:\n    get:\n      tags:\n      - Inventory\n      summary: Gets list of Inventory\n      operationId: Inventory_Get\n      parameters:\n      - name: UpdatedAfter\n        description: Limit results to records updated after the specified date\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InventoryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/InventoryList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/InventoryList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InventoryList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n  /api/Inventory/{id}:\n    get:\n      tags:\n      - Inventory\n      summary: Gets InventoryItem by InventoryItem ID\n      operationId: Inventory_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: InventoryItem ID number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n  /api/Invoice:\n    get:\n      tags:\n      - Invoice\n      summary: Gets list of Invoices\n      description: 'TransactionStatusCode values are: \"Draft\", \"Sent\", \"Late\", \"Paid\",\n        \"Partial\", \"Void\"'\n      operationId: Invoice_Get\n      parameters:\n      - name: UpdatedAfter\n        description: Limit results to records updated after the specified date\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        description: Sort method\n        in: query\n        schema:\n          type: string\n      - name: CompanyIDFK\n        description: Invoice issued company\n        in: query\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvoiceList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/InvoiceList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/InvoiceList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/InvoiceList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n    post:\n      tags:\n      - Invoice\n      summary: Create a new draft invoice\n      operationId: Invoice_Post\n      requestBody:\n        description: A record of type `NewInvoice` which contains the necessary data to create invoice\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewInvoice'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewInvoice'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewInvoice'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewInvoice'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewInvoice'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n      security:\n      - oauth2:\n        - write_financials\n      x-codegen-request-body-name: model\n  /api/Invoice/{id}:\n    get:\n      tags:\n      - Invoice\n      summary: Gets Invoice by Invoice ID\n      operationId: Invoice_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: Invoice Transaction ID number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n  /api/Payment:\n    get:\n      tags:\n      - Payment\n      summary: Gets list of Payments\n      operationId: Payment_Get\n      parameters:\n      - name: UpdatedAfter\n        description: Limit results to records updated after the specified date\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/PaymentList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/PaymentList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PaymentList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n    post:\n      tags:\n      - Payment\n      summary: Create new Payment and optionally assign payment allocations to Invoices\n      operationId: Payment_Post\n      requestBody:\n        description: A record of type `NewPayment` which contains the necessary data to create payment\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewPayment'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewPayment'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewPayment'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewPayment'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewPayment'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Payment'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Payment'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Payment'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Payment'\n      security:\n      - oauth2:\n        - write_financials\n      x-codegen-request-body-name: model\n  /api/Payment/{id}:\n    get:\n      tags:\n      - Payment\n      summary: Gets Payment by Payment Transaction ID\n      operationId: Payment_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: Invoice Transaction ID Number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Payment'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Payment'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Payment'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Payment'\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_financials\n  /api/Project/Lookup:\n    get:\n      tags:\n      - Project\n      summary: Gets minimal list of active Projects for the current user\n      operationId: ProjectLookup\n      parameters:\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: TimesheetUserID\n        in: query\n        description: Optionally Filter to the projects that the supplied UserID can\n          add timesheets to\n        schema:\n          type: integer\n          format: int32\n      - name: CompanyIDFK\n        in: query\n        description: Optionally Filter for a specific Company ID\n        schema:\n          type: integer\n          format: int32\n      - name: search\n        in: query\n        description: Search string to match against Project title and Customer name\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDropdownList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDropdownList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectDropdownList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectDropdownList'\n      security:\n      - oauth2:\n        - read_projects\n  /api/Project:\n    get:\n      tags:\n      - Project\n      summary: Gets list of Projects\n      operationId: Project_Get\n      parameters:\n      - name: UpdatedAfter\n        in: query\n        description: Only show project records updated after a certain date (UTC)\n        schema:\n          type: string\n          format: date-time\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        in: query\n        description: 'A column to sort on. Current possible values: \"DateUpdated\",\n          \"DateCreated\", \"DateUpdated desc\", \"DateCreated desc\"'\n        schema:\n          type: string\n      - name: TimesheetUserID\n        in: query\n        description: Filter to the projects that the supplied UserID can add timesheets\n          to\n        schema:\n          type: integer\n          format: int32\n      - name: includeArchived\n        in: query\n        description: Include Archived Projects in the results\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ProjectList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectList'\n      security:\n      - oauth2:\n        - read_projects\n    put:\n      tags:\n      - Project\n      summary: Update an Project\n      description: Update a Project\n      operationId: Project_Put\n      requestBody:\n        description: A record of type `UpdateProjectModel` which contains the necessary data to update project\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProjectModel'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProjectModel'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateProjectModel'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateProjectModel'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UpdateProjectModel'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n      security:\n      - oauth2:\n        - write_projects\n      x-codegen-request-body-name: model\n    post:\n      tags:\n      - Project\n      summary: Create a Project\n      operationId: Project_Post\n      requestBody:\n        description: A record of type `NewProjectModel` which contains the necessary data to create project\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewProjectModel'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewProjectModel'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewProjectModel'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewProjectModel'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewProjectModel'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - write_projects\n      x-codegen-request-body-name: model\n  /api/Project/{id}:\n    get:\n      tags:\n      - Project\n      summary: Gets Project by Project ID\n      operationId: Project_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: Project ID number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectDetails'\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_projects\n  /api/ProjectMember:\n    post:\n      tags:\n      - ProjectMember\n      summary: Assign a user as a Member of a Project\n      description: the Amount columns for Cost, Budget, Rates should be specified\n        as a decimal. Financial amounts assume the currency of the Customer company.\n        Budget units depend on the Budget method set on the Project.\n      operationId: ProjectMember_Post\n      requestBody:\n        description: A record of type `NewProjectMember` which contains the necessary data to assign user to project\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewProjectMember'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewProjectMember'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewProjectMember'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewProjectMember'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewProjectMember'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectMemberDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ProjectMemberDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectMemberDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectMemberDetails'\n      security:\n      - oauth2:\n        - write_projects\n      x-codegen-request-body-name: model\n  /api/ProjectTimesheetCategory:\n    get:\n      tags:\n      - ProjectTimesheetCategory\n      summary: Gets list of Project Timesheet Categories\n      description: The default sort order is by isBillable desc, Name asc\n      operationId: ProjectTimesheetCategory_Get\n      parameters:\n      - name: ProjectID\n        in: query\n        description: Get categories filtered by ProjectID\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectTimesheetCategoryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ProjectTimesheetCategoryList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectTimesheetCategoryList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ProjectTimesheetCategoryList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_timesheets\n  /api/ScheduleAssignment:\n    get:\n      tags:\n      - ScheduleAssignment\n      summary: Gets list of Schedule Assignments.\n      description: Schedule assignments are per-day, and link to a parent Schedule\n        Series.\n      operationId: ScheduleAssignment_Get\n      parameters:\n      - name: UpdatedAfter\n        in: query\n        description: Limit results to records updated after the specified date\n        schema:\n          type: string\n          format: date-time\n      - name: ScheduleDateFrom\n        in: query\n        description: Filter for schedule assignement  that are  on or after a specific\n          date\n        schema:\n          type: string\n          format: date-time\n      - name: ScheduleDateTo\n        in: query\n        description: Filter for schedules that are on or before a specific date\n        schema:\n          type: string\n          format: date-time\n      - name: ScheduleSeriesID\n        in: query\n        description: Filter to records for a particular Schedule Series\n        schema:\n          type: integer\n          format: int64\n      - name: UserID\n        in: query\n        description: The UserID of a schedule user to filter assignments for. Only\n          api users with Admin role can see all schedules across all users. Users\n          with ScheduleUser role can access their own ScheduleSeries.\n        schema:\n          type: integer\n          format: int32\n      - name: UserEmail\n        in: query\n        description: The email of the user who has been scheduled\n        schema:\n          type: string\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        in: query\n        description: 'Optional sorting instruction. Currently possible values: \"DateUpdated\",\n          \"DateCreated\", \"DateUpdated desc\", \"DateCreated desc\"'\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleAssignmentList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleAssignmentList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleAssignmentList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleAssignmentList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_schedule\n  /ScheduleSeries/AddBooking:\n    post:\n      tags:\n      - ScheduleSeries\n      summary: Create new Schedule Booking\n      operationId: ScheduleSeries_AddBooking\n      requestBody:\n        description: A record of type `CreateBooking` which contains the necessary data to create schedule booking\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBooking'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/CreateBooking'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/CreateBooking'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateBooking'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateBooking'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n      security:\n      - oauth2:\n        - write_schedule\n      x-codegen-request-body-name: model\n  /ScheduleSeries/AddLeave:\n    post:\n      tags:\n      - ScheduleSeries\n      summary: Create new Leave Booking\n      operationId: ScheduleSeries_AddLeave\n      requestBody:\n        description: A record of type `CreateLeave` which contains the necessary data to create leave booking\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLeave'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/CreateLeave'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/CreateLeave'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateLeave'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateLeave'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n      security:\n      - oauth2:\n        - write_schedule\n      x-codegen-request-body-name: model\n  /ScheduleSeries/EditLeave:\n    put:\n      tags:\n      - ScheduleSeries\n      summary: Edit Leave Booking\n      operationId: ScheduleSeries_EditLeave\n      requestBody:\n        description: A record of type `EditLeave` which contains the necessary data to edit leave booking\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditLeave'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/EditLeave'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/EditLeave'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/EditLeave'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/EditLeave'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n      security:\n      - oauth2:\n        - write_schedule\n      x-codegen-request-body-name: model\n  /ScheduleSeries/EditBooking:\n    put:\n      tags:\n      - ScheduleSeries\n      summary: Edit Booking\n      operationId: ScheduleSeries_EditBooking\n      requestBody:\n        description: A record of type `EditBooking` which contains the necessary data to edit booking\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditBooking'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/EditBooking'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/EditBooking'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/EditBooking'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/EditBooking'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesDetails'\n      security:\n      - oauth2:\n        - write_schedule\n      x-codegen-request-body-name: model\n  /api/ScheduleSeries:\n    get:\n      tags:\n      - ScheduleSeries\n      summary: Gets list of Schedule Series\n      description: Schedule Series represents a strip of time assigned to a user over\n        a date range, for a certain number of hours per day. They can be for Leave\n        or for project work Bookings.\n      operationId: ScheduleSeries_Get\n      parameters:\n      - name: UpdatedAfter\n        in: query\n        description: Limit results to records updated after the specified date\n        schema:\n          type: string\n          format: date-time\n      - name: ScheduleStartDateFrom\n        in: query\n        description: Filter for schedules that start on or after a specific date\n        schema:\n          type: string\n          format: date-time\n      - name: ScheduleStartDateTo\n        in: query\n        description: Filter for schedules that start on or before a specific date\n        schema:\n          type: string\n          format: date-time\n      - name: ScheduleEndDateFrom\n        in: query\n        description: Filter for schedules that end on or after a specific date\n        schema:\n          type: string\n          format: date-time\n      - name: ScheduleEndDateTo\n        in: query\n        description: Filter for schedules that end on or before a specific date\n        schema:\n          type: string\n          format: date-time\n      - name: UserID\n        in: query\n        description: The UserID of a schedule user to filter assignments for. Only\n          api users with Admin role can see all schedules across all users. Users\n          with ScheduleUser role can access their own ScheduleSeries.\n        schema:\n          type: integer\n          format: int32\n      - name: UserEmail\n        in: query\n        description: The email of the user who has been scheduled\n        schema:\n          type: string\n      - name: TimeSheetCategoryID\n        in: query\n        description: Filter for schedule records linked to a specific timesheeet category\n        schema:\n          type: integer\n          format: int32\n      - name: TimeSheetCategoryName\n        in: query\n        description: Filter for schedule records with a specific timesheeet category\n          name (exact string match)\n        schema:\n          type: string\n      - name: LeaveTypeID\n        in: query\n        description: Filter to records of a particular leave type\n        schema:\n          type: integer\n          format: int32\n      - name: ProjectID\n        in: query\n        description: Filter to only include books linked to a specific project\n        schema:\n          type: integer\n          format: int32\n      - name: CompanyID\n        in: query\n        description: Filter to only include records linked to projects, where that\n          project belongs to a specific customer company\n        schema:\n          type: integer\n          format: int32\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        in: query\n        description: 'Optional sorting instruction. Currently possible values: \"DateUpdated\",\n          \"DateCreated\", \"DateUpdated desc\", \"DateCreated desc\"'\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ScheduleSeriesList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_schedule\n  /api/Section:\n    get:\n      tags:\n      - Section\n      summary: Gets list of Sections\n      operationId: Section_Get\n      parameters:\n      - name: ProjectID\n        in: query\n        description: Get sections for Project with ProjectID\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SectionList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/SectionList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/SectionList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SectionList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_projects\n    post:\n      tags:\n      - Section\n      summary: Create a Section\n      operationId: Section_Post\n      requestBody:\n        description: A record of type `NewSection` which contains the necessary data to create section\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewSection'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewSection'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewSection'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewSection'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewSection'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SectionDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/SectionDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/SectionDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SectionDetails'\n      security:\n      - oauth2:\n        - write_projects\n      x-codegen-request-body-name: model\n    delete:\n      tags:\n      - Section\n      summary: Delete a Section\n      operationId: Section_Delete\n      parameters:\n      - name: SectionID\n        description: Unique identifier for section\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n      security:\n      - oauth2:\n        - write_projects\n  /api/Task/Lookup:\n    get:\n      tags:\n      - Task\n      summary: Gets minimal list of Tasks for the current user\n      description: Groups Tasks by Section. Default sort is by Section Title followed\n        by Task Title\n      operationId: TaskLookup\n      parameters:\n      - name: projectID\n        in: query\n        description: (required) The ProjectID to use when filtering Tasks\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: hideCompleted\n        in: query\n        description: (optional) true/false to hide completed tasks. Defaults false\n        schema:\n          type: boolean\n      - name: search\n        in: query\n        description: (optional) Search string to match against Task title. Performs\n          begins-with match\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskDropdownList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaskDropdownList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TaskDropdownList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TaskDropdownList'\n      security:\n      - oauth2:\n        - read_projects\n  /api/Task:\n    get:\n      tags:\n      - Task\n      summary: Gets list of Tasks\n      operationId: Task_Get\n      parameters:\n      - name: UpdatedAfter\n        in: query\n        description: Optional filter to records updated after a specific date.\n        schema:\n          type: string\n          format: date-time\n      - name: pageSize\n        in: query\n        description: Number of items per page. Defaults to 20.\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1. Defaults to 1\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        in: query\n        description: 'Optional sorting instruction. Currently possible values: \"DateUpdated\",\n          \"DateCreated\", \"DateUpdated desc\", \"DateCreated desc\", \"SectionTitle\", \"Title\"'\n        schema:\n          type: string\n      - name: isComplete\n        in: query\n        description: Optional filter to only display tasks linked to a Task Status\n          where isComplete=false, or where isComplete=true\n        schema:\n          type: boolean\n      - name: ProjectID\n        in: query\n        description: Optional filter to only display tasks belonging to a specific\n          ProjectID\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaskList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TaskList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TaskList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_projects\n    put:\n      tags:\n      - Task\n      summary: Update a Task.\n      description: Requires TaskID and a list of field names to update. The FieldsToUpdate\n        field accepts a string array containing field names that should be updated.\n      operationId: Task_Put\n      requestBody:\n        description: A record of type `UpdateTask` which contains the necessary data to update task\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTask'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTask'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateTask'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateTask'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UpdateTask'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n      security:\n      - oauth2:\n        - write_projects\n      x-codegen-request-body-name: model\n    post:\n      tags:\n      - Task\n      summary: Create a Task\n      operationId: Task_Post\n      requestBody:\n        description: A record of type `NewTask` which contains the necessary data to create task\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewTask'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewTask'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewTask'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewTask'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewTask'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n      security:\n      - oauth2:\n        - write_projects\n      x-codegen-request-body-name: model\n    delete:\n      tags:\n      - Task\n      summary: Delete a Task\n      operationId: Task_Delete\n      parameters:\n      - name: TaskID\n        description: Task Id\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n      security:\n      - oauth2:\n        - write_projects\n  /api/Task/{id}:\n    get:\n      tags:\n      - Task\n      summary: Gets Task by Task ID\n      operationId: Task_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: Task ID number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TaskDetails'\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_projects\n  /api/TaskStatus:\n    get:\n      tags:\n      - TaskStatus\n      summary: Gets list of Task Statuses\n      operationId: TaskStatus_Get\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskStatusList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaskStatusList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TaskStatusList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TaskStatusList'\n      security:\n      - oauth2:\n        - read_projects\n  /api/TaskType:\n    get:\n      tags:\n      - TaskType\n      summary: Gets list of Task Types\n      operationId: TaskType_Get\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskTypeList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaskTypeList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TaskTypeList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TaskTypeList'\n      security:\n      - oauth2:\n        - read_projects\n  /api/Tax:\n    get:\n      tags:\n      - Tax\n      summary: Get List of Taxes configured in the Avaza account.\n      operationId: Tax_Get\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaxList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaxList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TaxList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TaxList'\n      security:\n      - oauth2:\n        - read_financials\n  /api/Timesheet:\n    get:\n      tags:\n      - Timesheet\n      summary: Gets list of Timsheets\n      operationId: Timesheet_Get\n      parameters:\n      - name: UpdatedAfter\n        description: Limit results to records updated after the specified date\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: EntryDateFrom\n        description: Timesheet start entry date to filter\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: EntryDateTo\n        description: Timesheet end entry date to filter\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: UserID\n        in: query\n        description: The UserID of a timesheet user to filter timesheets for. Only\n          api users with certain higher roles can see timesheets across multiple users.\n        schema:\n          type: integer\n          format: int32\n      - name: UserEmail\n        description: User email address\n        in: query\n        schema:\n          type: string\n      - name: CategoryName\n        description: Category name\n        in: query\n        schema:\n          type: string\n      - name: ProjectID\n        description: Project Id\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: isBillable\n        description: Billable status\n        in: query\n        schema:\n          type: boolean\n      - name: isInvoiced\n        description: Invoiced status\n        in: query\n        schema:\n          type: boolean\n      - name: isTimerRunning\n        description: Timer running status\n        in: query\n        schema:\n          type: boolean\n      - name: pageSize\n        in: query\n        description: Number of items per page (max 1000)\n        schema:\n          type: integer\n          format: int32\n      - name: pageNumber\n        in: query\n        description: Page to display. Starts from 1.\n        schema:\n          type: integer\n          format: int32\n      - name: Sort\n        in: query\n        description: 'Optional sorting instruction. Currently possible values: \"DateUpdated\",\n          \"DateCreated\", \"DateUpdated desc\", \"DateCreated desc\",\"EntryDate\", \"EntryDate\n          desc\", \"StartTimeLocal\",\"StartTimeLocal desc\", \"TimeSheetEntryID\", \"TimeSheetEntryID\n          desc\"'\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TimesheetList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TimesheetList'\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - read_timesheets\n    put:\n      tags:\n      - Timesheet\n      summary: Update a Timesheet\n      description: The FieldsToUpdate field expects a string array collection of the\n        field names you would like updated. Valid fields to update inlcude \"ProjectIDFK\",\n        \"TimeSheetCategoryIDFK\", \"TaskIDFK\", \"Duration\", \"EntryDate\", \"Notes\", \"hasStartEndTime\",\n        \"CustomMetadata\". If you intend to provide start/end times on timesheets,\n        this is achieved by including the start time in the EntryDate field (Iso date\n        format), along with a Duration (decimal format).\n      operationId: Timesheet_Put\n      requestBody:\n        description: A record of type `UpdateTimesheetModel` which contains the necessary data to update timesheet\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTimesheetModel'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTimesheetModel'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateTimesheetModel'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/UpdateTimesheetModel'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UpdateTimesheetModel'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n      security:\n      - oauth2:\n        - write_timesheets\n      x-codegen-request-body-name: model\n    post:\n      tags:\n      - Timesheet\n      summary: Create a new Timesheet Entry\n      operationId: Timesheet_Post\n      requestBody:\n        description: A record of type `NewTimesheet` which contains the necessary data to create timesheet\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewTimesheet'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/NewTimesheet'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/NewTimesheet'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/NewTimesheet'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewTimesheet'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n      security:\n      - oauth2:\n        - write_timesheets\n      x-codegen-request-body-name: model\n  /api/Timesheet/{id}:\n    get:\n      tags:\n      - Timesheet\n      summary: Gets a Timesheet Entry by Timesheet ID\n      operationId: Timesheet_GetByID\n      parameters:\n      - name: id\n        in: path\n        description: Timesheet ID number\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TimesheetDetails'\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_timesheets\n    delete:\n      tags:\n      - Timesheet\n      summary: Delete a Timesheet Entry\n      operationId: Timesheet_Delete\n      parameters:\n      - name: id\n        in: path\n        description: The id of the timesheet entry to be deleted\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n      security:\n      - oauth2:\n        - write_timesheets\n  /api/TimesheetSubmission:\n    post:\n      tags:\n      - TimesheetSubmission\n      summary: Submit Timesheets for Approval.\n      description: Either provide a a specific Day (WholeDayOf) or any day in a Week\n        (WholeWeekOf) to submit all draft timesheets in that day or week\n      operationId: TimesheetSubmission_Post\n      parameters:\n      - name: SendNotifications\n        in: query\n        description: Send email alerts to timesheet approvers. Defaults to true\n        schema:\n          type: boolean\n      - name: WholeWeekOf\n        in: query\n        description: A date (yyyy-MM-dd) that falls within  a Week to have all timesheets\n          in that week submitted. Respects the First Day of Week setting in your account\n          Timesheet Settings to determine the week range.\n        schema:\n          type: string\n          format: date-time\n      - name: WholeDayOf\n        in: query\n        description: A date (yyyy-MM-dd) to submit all timesheets on this day\n        schema:\n          type: string\n          format: date-time\n      - name: UserID\n        in: query\n        description: The user to submit timesheets for. Defaults to current user.\n          Only allowed to be different from the current user when the current user\n          has rights to Impersonate other users.\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n      security:\n      - oauth2:\n        - write_timesheets\n  /api/TimesheetSummary:\n    get:\n      tags:\n      - TimesheetSummary\n      summary: Gets Basic Summary of Timesheet Statistics\n      operationId: TimesheetSummary_Get\n      parameters:\n      - name: model.groupBy\n        in: query\n        description: '(Optional) Combine one, two or three levels of Grouping. Combine\n          these possible grouping values: \"Customer\", \"Project\", \"Category\", \"User\",\n          \"Task\", \"Year\", \"Month\", \"Day\", \"Week\".'\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      - name: model.entryDateFrom\n        in: query\n        description: (Required) Filter for timesheets greater or equal to the specified\n          date. e.g. 2019-01-25. You can optionally include a time component, otherwise\n          it assumes 00:00\n        schema:\n          type: string\n          format: date-time\n      - name: model.entryDateTo\n        in: query\n        description: (Required) Filter for timesheets with an entry date smaller or\n          equal to the specified  date. e.g. 2019-01-25. You can optionally include\n          a time component, otherwise it assumes 00:00\n        schema:\n          type: string\n          format: date-time\n      - name: model.userID\n        in: query\n        description: (Optional) Defaults to the current user. Provide one or more\n          UserIDs of Users whose timesheets should be retrieved. If the current user\n          doesn't have impersonation rights, then they will only see their own data.\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: integer\n            format: int32\n      - name: model.projectID\n        in: query\n        description: (Optional) Filter by Project\n        schema:\n          type: integer\n          format: int32\n      - name: model.isBillable\n        in: query\n        description: (Optional) Filter by the billable status of Timesheets.\n        schema:\n          type: boolean\n      - name: model.isInvoiced\n        in: query\n        description: (Optional) Filter for timesheets by whether they have been Invoiced\n          or not.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetSummaryResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetSummaryResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TimesheetSummaryResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TimesheetSummaryResult'\n      security:\n      - oauth2:\n        - read_timesheets\n  /api/TimesheetTimer:\n    get:\n      tags:\n      - TimesheetTimer\n      summary: Gets the  Running Timer if there is one for a user.\n      operationId: TimesheetTimer_GetRunningTimer\n      parameters:\n      - name: UserID\n        in: query\n        description: Optional - User ID number if impersonating a different user.\n          Otherwise assumes the current user. Only users with certain security roles\n          have permission to impersonate other users\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - read_timesheets\n  /api/TimesheetTimer/{id}:\n    post:\n      tags:\n      - TimesheetTimer\n      summary: Starts a Timer running on an existing Timesheet Entry\n      operationId: TimesheetTimer_StartTimer\n      parameters:\n      - name: id\n        in: path\n        description: id of timesheet entry that should be used as the basis for running\n          a timer. If the existing timesheet is not on the current day, or you have\n          start/end times enabled, then a new timesheet will be created for the timer.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: UserID\n        in: query\n        description: Optional - User ID number if impersonating a different user.\n          Otherwise assumes the current user. Only users with certain security roles\n          have permission to impersonate other users\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n        400:\n          description: Bad Request\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - write_timesheets\n    delete:\n      tags:\n      - TimesheetTimer\n      summary: Stop the timer running on an existing Timesheet Entry\n      operationId: TimesheetTimer_StopTimer\n      parameters:\n      - name: id\n        in: path\n        description: The ID of the existing timesheet entry that needs its timer stopped\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: UserID\n        in: query\n        description: Optional - User ID number if impersonating a different user.\n          Otherwise assumes the current user. Only users with certain security roles\n          have permission to impersonate other users\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n        400:\n          description: Bad Request\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      security:\n      - oauth2:\n        - write_timesheets\n  /api/UserProfile:\n    get:\n      tags:\n      - UserProfile\n      summary: Get Collection of Users who have roles in the current Avaza account.\n      description: Admin and Invoice Managers can see all. Other users are limited\n        to seeing their own profile.\n      operationId: UserProfile_Get\n      parameters:\n      - name: Roles\n        in: query\n        description: Optional list of comma separated role codes to filter users by\n          (e.g. \"TimesheetUser,Admin\")\n        schema:\n          type: string\n      - name: Tags\n        description: User role tags\n        in: query\n        schema:\n          type: string\n      - name: CurrentUserOnly\n        in: query\n        description: Optional boolean (true/false) to filter to only show current\n          authenticated user (always true for non Admin/InvoiceManager users)\n        schema:\n          type: boolean\n      - name: CompanyIDFK\n        in: query\n        description: Optionally filter by Company ID\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UserList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UserList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UserList'\n      security:\n      - oauth2:\n        - read_users\n  /api/Webhook:\n    get:\n      tags:\n      - Webhook\n      summary: Get list of Webhook Subscriptions\n      operationId: Webhook_Get\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/WebhookList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/WebhookList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/WebhookList'\n      security:\n      - oauth2:\n        - webhook_notifications\n    post:\n      tags:\n      - Webhook\n      summary: Subscribe to Webhook. On success, returns ID of webhook subscription.\n      description: 'When you receive a webhook, you should respond with Http 200 OK\n        Status Code, otherwise we will retry. To create a webhook, you need both the\n        webhook_notifications scope, as well as the scope for the required entity\n        being monitored.  Event values are: \"company_created\", \"company_deleted\",\n        \"company_updated\", \"contact_created\", \"contact_deleted\", \"contact_updated\",\n        \"invoice_created\", \"invoice_sent\",\"invoice_updated\",\"invoice_deleted\", \"project_created\",\n        \"project_deleted\", \"project_updated\", \"task_created\", \"task_updated\",\"task_deleted\",\n        \"timesheet_created\", \"timesheet_deleted\", \"timesheet_updated\".  You can subscribe\n        to any webhook, but you will only receive notifications for data appropriate\n        to the roles of your user account. There is an optional  Secret parameter\n        (string 255 char max). This allows for webhook authentication. If provided,\n        the Secret will be BASE 64 encoded and passed with notications as a basic\n        authentication http header. i.e. Authorization Basic [BASE64 of Secret]\"'\n      operationId: Webhook_Post\n      requestBody:\n        description: A record of type `CreateSubscription` which contains the necessary data to subscribe to webhook\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSubscription'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/CreateSubscription'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/CreateSubscription'\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/CreateSubscription'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateSubscription'\n        required: true\n      responses:\n        201:\n          description: Subscription created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscribeResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/SubscribeResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/SubscribeResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SubscribeResult'\n        401:\n          description: Unauthorized\n          content: {}\n        409:\n          description: Duplicate subscription already exists\n          content: {}\n      security:\n      - oauth2:\n        - webhook_notifications\n        - read_contacts\n        - read_account\n        - read_users\n        - read_financials\n        - read_projects\n        - read_schedule\n        - read_timesheets\n        - read_expenses\n        - write_contacts\n        - write_account\n        - write_users\n        - write_financials\n        - write_projects\n        - write_schedule\n        - write_timesheets\n        - write_expenses\n      x-codegen-request-body-name: model\n    delete:\n      tags:\n      - Webhook\n      summary: Delete webhook subscription by URL\n      operationId: Webhook_DeleteByUrl\n      parameters:\n      - name: target_url\n        in: query\n        description: Target URL that should be used to delete subscriptions\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Subscription Deleted OK\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - webhook_notifications\n  /api/Webhook/{id}:\n    get:\n      tags:\n      - Webhook\n      summary: Get Webhook Subscription by SubscriptionID\n      operationId: Webhook_GetByID\n      parameters:\n      - name: id\n        description: Subscription Id\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/WebhookList'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/WebhookList'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/WebhookList'\n      security:\n      - oauth2:\n        - webhook_notifications\n    delete:\n      tags:\n      - Webhook\n      summary: Delete Webhook Subscription by ID\n      operationId: Webhook_Delete\n      parameters:\n      - name: id\n        in: path\n        description: Subscription id to be deleted\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: Subscription deleted ok\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n      security:\n      - oauth2:\n        - webhook_notifications\ncomponents:\n  schemas:\n    AccountDetails:\n      type: object\n      properties:\n        AccountID:\n          type: integer\n          format: int32\n        CompanyName:\n          type: string\n        Subdomain:\n          type: string\n        AccountEmail:\n          type: string\n        hasStartEndTimesheets:\n          type: boolean\n        has24HourTimesheetFormat:\n          type: boolean\n        WeeklyTimesheetReminder:\n          type: boolean\n        LockApprovedTimesheets:\n          type: boolean\n        TimesheetDayOfWeek:\n          type: integer\n          format: int32\n        TimesheetDisplayFormatCode:\n          type: string\n        AllowHidingCompletedTasksOnTimesheet:\n          type: boolean\n        CurrentServerTimeISO:\n          type: string\n          description: 'Format: ISO \"YYYY-MM-DD HH:mm:ss.SSS\"'\n        SC:\n          type: string\n        DefaultCurrencyCode:\n          type: string\n          description: ISO 3 letter base Currency Code for the account\n        ExpenseApprovalRequired:\n          type: boolean\n          description: Whether the account requires expenses be approved.\n        LockApprovedExpenses:\n          type: boolean\n          description: Approved expenses get locked from subsequent editing by standard\n            expense users.\n    CompanyDropdownList:\n      type: object\n      properties:\n        Companies:\n          type: array\n          items:\n            $ref: '#/components/schemas/CompanyMinimal'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    CompanyMinimal:\n      type: object\n      properties:\n        CompanyID:\n          type: integer\n          format: int64\n        CompanyName:\n          type: string\n    CompanyList:\n      type: object\n      properties:\n        Companies:\n          type: array\n          items:\n            $ref: '#/components/schemas/Company'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    Company:\n      type: object\n      properties:\n        CompanyID:\n          type: integer\n          format: int32\n        CompanyName:\n          type: string\n        BillingAddressLine:\n          type: string\n        BillingAddressCity:\n          type: string\n        BillingAddressState:\n          type: string\n        BillingAddressPostCode:\n          type: string\n        BillingCountryCode:\n          type: string\n        BillingAddress:\n          type: string\n        Phone:\n          type: string\n        Fax:\n          type: string\n        website:\n          type: string\n        TaxNumber:\n          type: string\n        Comments:\n          type: string\n        CurrencyCode:\n          type: string\n        DefaultTradingTermIDFK:\n          type: integer\n          format: int32\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n        Contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CompanyContact'\n    CompanyContact:\n      type: object\n      properties:\n        ContactID:\n          type: integer\n          format: int32\n        CompanyIDFK:\n          type: integer\n          format: int32\n        CompanyName:\n          type: string\n        Firstname:\n          type: string\n        Lastname:\n          type: string\n        Email:\n          type: string\n        Phone:\n          type: string\n        Mobile:\n          type: string\n        PositionTitle:\n          type: string\n        TimeZone:\n          type: string\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n    NewCompany:\n      required:\n      - CompanyName\n      type: object\n      properties:\n        CompanyName:\n          type: string\n        CurrencyCode:\n          type: string\n        BillingAddressLine:\n          type: string\n        BillingAddressCity:\n          type: string\n        BillingAddressState:\n          type: string\n        BillingAddressPostCode:\n          type: string\n        BillingCountryCode:\n          type: string\n        BillingAddress:\n          type: string\n        Phone:\n          type: string\n        Fax:\n          type: string\n        website:\n          type: string\n        TaxNumber:\n          type: string\n        Comments:\n          type: string\n    UpdateCompany:\n      type: object\n      properties:\n        CompanyID:\n          type: integer\n          format: int32\n        FieldsToUpdate:\n          type: array\n          items:\n            type: string\n        CompanyName:\n          type: string\n        BillingAddressLine:\n          type: string\n        BillingAddressCity:\n          type: string\n        BillingAddressState:\n          type: string\n        BillingAddressPostCode:\n          type: string\n        BillingCountryCode:\n          type: string\n        BillingAddress:\n          type: string\n        Phone:\n          type: string\n        Fax:\n          type: string\n        website:\n          type: string\n        TaxNumber:\n          type: string\n        Comments:\n          type: string\n    ContactList:\n      type: object\n      properties:\n        Contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CompanyContact'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    NewCompanyContact:\n      required:\n      - ContactEmail\n      - Firstname\n      - Lastname\n      type: object\n      properties:\n        CompanyIDFK:\n          type: integer\n          format: int32\n        CompanyName:\n          type: string\n        CurrencyCode:\n          type: string\n        CompanyBillingAddress:\n          type: string\n        CompanyBillingAddressLine:\n          type: string\n        CompanyBillingAddressCity:\n          type: string\n        CompanyBillingAddressState:\n          type: string\n        CompanyBillingAddressPostCode:\n          type: string\n        CompanyBillingAddressCountryCode:\n          type: string\n        ContactEmail:\n          type: string\n        Firstname:\n          type: string\n        Lastname:\n          type: string\n        PositionTitle:\n          type: string\n        Mobile:\n          type: string\n        Phone:\n          type: string\n        UpdateExisting:\n          type: boolean\n    CreditNoteList:\n      type: object\n      properties:\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n        CreditNotes:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreditNote'\n    CreditNote:\n      type: object\n      properties:\n        TransactionID:\n          type: integer\n          format: int64\n        TransactionPrefix:\n          type: string\n        CreditNoteNumber:\n          type: string\n        CustomerIDFK:\n          type: integer\n          format: int32\n        DateIssued:\n          type: string\n          format: date-time\n        TransactionStatusCode:\n          type: string\n        Balance:\n          type: number\n          format: double\n        CurrencyCode:\n          type: string\n        TotalAmount:\n          type: number\n          format: double\n        Notes:\n          type: string\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n        CreditNoteAllocations:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreditNoteAllocation'\n        CreditNoteLineItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreditNoteLineItem'\n    CreditNoteAllocation:\n      type: object\n      properties:\n        TransactionAllocationID:\n          type: integer\n          format: int64\n        InvoiceTransactionIDFK:\n          type: integer\n          format: int64\n        CreditNoteTransactionIDFK:\n          type: integer\n          format: int64\n        AllocationDate:\n          type: string\n          format: date-time\n        AllocationAmount:\n          type: number\n          format: double\n    CreditNoteLineItem:\n      type: object\n      properties:\n        TransactionLineItemID:\n          type: integer\n          format: int64\n        Description:\n          type: string\n        Quantity:\n          type: number\n          format: double\n        UnitPrice:\n          type: number\n          format: double\n        TaxAmount:\n          type: number\n          format: double\n        TaxIDFK:\n          type: integer\n          format: int32\n        Amount:\n          type: number\n          format: double\n        Discount:\n          type: number\n          format: double\n    CurrencyList:\n      type: object\n      properties:\n        Currencies:\n          type: array\n          items:\n            $ref: '#/components/schemas/Currency'\n    Currency:\n      type: object\n      properties:\n        CurrencyCode:\n          type: string\n        Name:\n          type: string\n        Symbol:\n          type: string\n        Symbol2:\n          type: string\n        DecimalPlaces:\n          type: integer\n          format: int32\n    EstimateList:\n      type: object\n      properties:\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n        Estimates:\n          type: array\n          items:\n            $ref: '#/components/schemas/EstimateDetails'\n    EstimateDetails:\n      type: object\n      properties:\n        EstimateID:\n          type: integer\n          format: int64\n        AccountIDFK:\n          type: integer\n          format: int32\n        EstimatePrefix:\n          type: string\n        EstimateItemNumber:\n          type: string\n        CompanyIDFK:\n          type: integer\n          format: int32\n        CompanyName:\n          type: string\n        Subject:\n          type: string\n        DateIssued:\n          type: string\n          format: date-time\n        DateSent:\n          type: string\n          format: date-time\n        DueDate:\n          type: string\n          format: date-time\n        EstimateStatusCode:\n          type: string\n        TaxAmount:\n          type: number\n          format: double\n        EstimateTaxConfigCode:\n          type: string\n        Balance:\n          type: number\n          format: double\n        CurrencyCode:\n          type: string\n        TotalAmount:\n          type: number\n          format: double\n        ExchangeRate:\n          type: number\n          format: double\n        Notes:\n          type: string\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n        LineItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/EstimateLineItemDetails'\n        Links:\n          $ref: '#/components/schemas/EstimateLinks'\n        Issuer:\n          $ref: '#/components/schemas/IssuerDetails'\n        Recipient:\n          $ref: '#/components/schemas/RecipientDetails'\n    EstimateLineItemDetails:\n      type: object\n      properties:\n        EstimateLineItemID:\n          type: integer\n          format: int64\n        InventoryItemIDFK:\n          type: integer\n          format: int64\n        InventoryItemName:\n          type: string\n        InventoryItemSKU:\n          type: string\n        Description:\n          type: string\n        Quantity:\n          type: number\n          format: double\n        UnitPrice:\n          type: number\n          format: double\n        TaxAmount:\n          type: number\n          format: double\n        TaxIDFK:\n          type: integer\n          format: int32\n        TaxCode:\n          type: string\n        TaxName:\n          type: string\n        Amount:\n          type: number\n          format: double\n        Discount:\n          type: number\n          format: double\n    EstimateLinks:\n      type: object\n      properties:\n        ClientView:\n          type: string\n        View:\n          type: string\n        Edit:\n          type: string\n    IssuerDetails:\n      type: object\n      properties:\n        BillingAddress:\n          type: string\n        BillingAddressLine:\n          type: string\n        BillingAddressCity:\n          type: string\n        BillingAddressState:\n          type: string\n        BillingAddressPostCode:\n          type: string\n        BillingCountryCode:\n          type: string\n        TaxNumber:\n          type: string\n    RecipientDetails:\n      type: object\n      properties:\n        CompanyIDFK:\n          type: integer\n          format: int32\n        CompanyName:\n          type: string\n        RecipientFormattedBillingAddress:\n          type: string\n        RecipientBillingAddressLine:\n          type: string\n        RecipientBillingAddressCity:\n          type: string\n        RecipientBillingAddressState:\n          type: string\n        RecipientBillingAddressPostCode:\n          type: string\n        RecipientBillingAddressCountryCode:\n          type: string\n    NewEstimate:\n      type: object\n      properties:\n        EstimatePrefix:\n          type: string\n          description: A prefix for the Estimate number. e.g. 'INV'. If left blank\n            it will be set to the account default. Max length 20 characters.\n        EstimateNumber:\n          type: string\n          description: Pass any string. If left blank it will use the next number\n            in the auto incrementing sequence. If an integer is passed then the largest\n            integer will be use as the seed to auto generate the next Estimate number\n            in the sequence.\n        CompanyIDFK:\n          type: integer\n          description: If left blank then you must specify Company Name.\n          format: int32\n        CompanyName:\n          type: string\n          description: If left blank then you must specify Company ID. Specified Name\n            will be used to match existing customer record. If not matched then it\n            will be used to create a new customer. First Name, Last Name and Email\n            will only be used if it is a new company. If the Company name appears\n            multiple times we will check the email address to find a matching company.\n            If email address doesn't identify a matching company then the Estimate\n            creation will be rejected.\n        Firstname:\n          type: string\n          description: Specified value will be used to create a new customer contact\n            only if a new customer is being created.\n        Lastname:\n          type: string\n          description: Specified value will be used to create a new customer contact\n            only if a new customer is being created.\n        Email:\n          type: string\n          description: Specified value will be used to create a new customer contact\n            only if a new customer is being created.\n        CurrencyCode:\n          type: string\n          description: Expects ISO Standard 3 character currency code. If left blank\n            the currency will default to account's currency in general setting. For\n            existing companies this field will be ignored and the Estimate will use\n            the currency of the customer. For new customers if the currency is not\n            specified then account currency will be used otherwise the specified currency\n            will be used.\n        ExchangeRate:\n          type: number\n          description: Exchange rate is only valid for Estimates in currency other\n            than default account currency. If not specified it will get the market\n            rate based on the Date Issued.\n          format: double\n        InvoiceTemplateIDFK:\n          type: integer\n          description: If left blank the account default Estimate template will be\n            used.\n          format: int32\n        Subject:\n          type: string\n          description: Plain UTF8 text. (no HTML). 255 characters max\n        CustomerPONumber:\n          type: string\n          description: Plain UTF8 text. 100 characters max\n        DateIssued:\n          type: string\n          description: If not specified it will use today's date. The date should\n            be specified as local date.\n          format: date-time\n        DueDate:\n          type: string\n          description: It will be auto calculated based on the payment term and issue\n            date. Due Date must be greater than or equal to Issue Date. If the Due\n            Date is specified then Payment Terms will be set to -1 (Custom)\n          format: date-time\n        EstimateTaxConfigCode:\n          type: string\n          description: Possible values are (EX --- Tax Exclusive, INC --- Tax Inclusive).\n            If left empty it will use the account default.\n        Notes:\n          type: string\n          description: Plain UTF8 text. (no HTML). Max 2000 characters\n        LineItems:\n          description: Line item to be added to new Estimate\n          type: array\n          items:\n            $ref: '#/components/schemas/NewEstimateLineItem'\n      description: New Estimate to be created\n    NewEstimateLineItem:\n      description: Line item to be added to new Estimate\n      required:\n      - Quantity\n      - UnitPrice\n      type: object\n      properties:\n        InventoryItemIDFK:\n          type: integer\n          description: If not specified then Inventory Item Name must be specified.\n          format: int32\n        InventoryItemName:\n          type: string\n          description: If not specified then Inventory item ID must be specified.\n            If specified and not matched to any existing inventory items then a new\n            inventory item will be created. Max 200 characters.\n        Description:\n          type: string\n          description: Plain UTF8 text. (no HTML)\n        Quantity:\n          type: number\n          description: The quantity for the line item\n          format: double\n        UnitPrice:\n          type: number\n          description: The unit price for the lineitem.\n          format: double\n        TaxIDFK:\n          type: integer\n          description: If specified then it must match an existing Tax ID. If not\n            specified then Tax Name and Tax Percent must be specified.\n          format: int32\n        TaxName:\n          type: string\n          description: Must be specified if the Tax ID is blank. If the Tax Name is\n            specified it will be matched to an existing Tax Name or else a new Tax\n            will be created.\n        TaxPercent:\n          type: number\n          description: The Tax Percent will only be used if a new tax is being created.\n          format: double\n        Discount:\n          type: number\n          description: Enter 10.5 to give a 10.5% discount\n          format: double\n    ExpenseAttachmentUploadResult:\n      type: object\n      properties:\n        FileAttachments:\n          type: array\n          items:\n            $ref: '#/components/schemas/FileAttachmentDetails'\n    FileAttachmentDetails:\n      type: object\n      properties:\n        FileAttachmentID:\n          type: integer\n          format: int64\n        SizeBytes:\n          type: integer\n          format: int64\n        OriginalFilename:\n          type: string\n        PublicFileURL:\n          type: string\n        PreviewBaseURL:\n          type: string\n    ExpenseList:\n      type: object\n      properties:\n        Expenses:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExpenseDetails'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    ExpenseDetails:\n      type: object\n      properties:\n        ExpenseID:\n          type: integer\n          format: int64\n        UserIDFK:\n          type: integer\n          format: int32\n        Firstname:\n          type: string\n        Lastname:\n          type: string\n        Email:\n          type: string\n        CustomerIDFK:\n          type: integer\n          format: int32\n        CustomerName:\n          type: string\n        ProjectIDFK:\n          type: integer\n          format: int32\n        ProjectTitle:\n          type: string\n        ProjectCode:\n          type: string\n        TaskIDFK:\n          type: integer\n          format: int32\n        TaskTitle:\n          type: string\n        ExpenseCategoryIDFK:\n          type: integer\n          format: int32\n        ExpenseCategoryName:\n          type: string\n        ExpenseCategoryHasUnitPrice:\n          type: boolean\n        ExpenseCategoryUnitPrice:\n          type: number\n          format: double\n        ExpenseCategoryUnitName:\n          type: string\n        CurrencyCode:\n          type: string\n        ExchangeRate:\n          type: number\n          format: double\n        Quantity:\n          type: number\n          format: double\n        Amount:\n          type: number\n          format: double\n        TaxAmount:\n          type: number\n          format: double\n        TaxIDFK:\n          type: integer\n          format: int32\n        TaxName:\n          type: string\n        TransactionTaxConfigCode:\n          type: string\n        TransactionTaxConfigName:\n          type: string\n        isOfficialExchangeRate:\n          type: boolean\n        ExpenseApprovalStatusCode:\n          type: string\n        ExpensePaymentMethodIDFK:\n          type: integer\n          format: int32\n        ExpensePaymentMethodName:\n          type: string\n        isChargeable:\n          type: boolean\n        ChargeableStatusCode:\n          type: string\n        isReimbursable:\n          type: boolean\n        ExpenseReimbursementStatusCode:\n          type: string\n        ExpenseReimbursementIDFK:\n          type: integer\n          format: int64\n        ExpenseDate:\n          type: string\n          format: date-time\n        FileAttachmentIDFK:\n          type: integer\n          format: int64\n        AttachmentURL:\n          type: string\n        AttachmentPreviewURL:\n          type: string\n        Merchant:\n          type: string\n        MerchantTaxNumber:\n          type: string\n        Notes:\n          type: string\n        ExpenseReportIDFK:\n          type: integer\n          format: int64\n        ExpenseReportName:\n          type: string\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n    NewExpense:\n      type: object\n      properties:\n        ExpenseDate:\n          type: string\n          description: The date of the expense entry (Required)\n          format: date-time\n        UserIDFK:\n          type: integer\n          description: UserID for a Timesheet/Expense user in Avaza. If not provided,\n            UserEmail field must be provided\n          format: int32\n        UserEmail:\n          type: string\n          description: The email address of a Timesheet/Expense user in Avaza. If\n            not provided, UserIDFK field must be provided.\n        ExpenseCategoryIDFK:\n          type: integer\n          description: The expense category to link the Expense to. If not provided,\n            ExpenseCategoryName must be provided\n          format: int32\n        ExpenseCategoryName:\n          type: string\n          description: Must match an existing expense category name otherwise a new\n            category will be created. If left blank Expense Category ID must be provided.\n        isChargeable:\n          type: boolean\n          description: aka Billable. Defaults to false if not provided. If set to\n            true, a CustomerIDFK or CustomerName must be provided.\n        isReimbursable:\n          type: boolean\n          description: Defaults to false if not provided.\n        Quantity:\n          type: number\n          description: Conditional - available for expenses that are assigned a unit\n            priced based expense category. e.g Mileage\n          format: double\n        CustomerIDFK:\n          type: integer\n          description: The Avaza Customer ID to associate the Expense with. Either\n            this field or CustomerName can be provided.\n          format: int32\n        CustomerName:\n          type: string\n          description: The name of an existing customer in Avaza. Must be an exact\n            (case insensitive) match.\n        ProjectIDFK:\n          type: integer\n          description: The Avaza project ID to associate the Expense with.\n          format: int32\n        ProjectName:\n          type: string\n          description: Can work for matching an expense to a project, but only if\n            it's an exact match for a single project under the customer.\n        TaskIDFK:\n          type: integer\n          description: (optional) TaskID of a Task to link the new Expense to. A Customer\n            and Project must be provided also.\n          format: int32\n        CurrencyCode:\n          type: string\n          description: A 3-letter ISO CurrencyCode for the expense currency. (e.g.\n            USD). If not provided, defaults to the Account base currency.\n        ExchangeRate:\n          type: number\n          description: Optional (Only relevant if the expense currency is different\n            to your account currency. If not provided we will look up the market exchange\n            rate for you based on the expense date.) Exchange Rate = Expense Currency\n            Amount / Base Currency Amount (e.g. if Expense currency is in AUD, and\n            Base Currency is in USD, Exchange Rate = AUD $140 / USD $100 = 1.4)\n          format: double\n        Amount:\n          type: number\n          description: Expense Amount (Required). Must be \u0026gt;= 0\n          format: double\n        TaxIDFK:\n          type: integer\n          description: Avaza Tax ID the expense belongs to. If left blank then Tax\n            Name must be provided.\n          format: int32\n        TaxName:\n          type: string\n          description: Must exactly match an existing Tax Name that you have configured\n            in Avaza Tax settings. If left blank then Tax ID must be provided.\n        TransactionTaxConfigCode:\n          type: string\n          description: Optional - Enter \"INC\" if the tax amount is included in the\n            expense amount otherwise enter \"EX\" when the amount exlcudes the tax.\n            Defaults to \"Ex\". The tax amount on the expense will be autocalculated.\n        GroupTripName:\n          type: string\n          description: Links the expense to a Grouping/Trip report. If no matching\n            name found, creates a new Group/Trip Report name.\n        ExpensePaymentMethodIDFK:\n          type: integer\n          description: (Optional) ID of Expense Payment Method.\n          format: int32\n        Merchant:\n          type: string\n          description: The name of the merchant.\n        MerchantTaxNumber:\n          type: string\n          description: A Tax number identifier for the merchant.\n        Notes:\n          type: string\n          description: Expense Notes\n        VerifyAndSave:\n          type: boolean\n          description: Pass false if creating a draft expense. True otherwise.\n        FileAttachmentIDs:\n          type: array\n          description: Array of File Attachment IDs to associate with this expense.\n            The files need to have already been uploaded. Currently only accepts a\n            single file.\n          items:\n            type: integer\n            format: int64\n    ExpenseDeleteResultSet:\n      type: object\n      properties:\n        Results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExpenseDeleteResult'\n    ExpenseDeleteResult:\n      type: object\n      properties:\n        ExpenseID:\n          type: integer\n          format: int64\n        Success:\n          type: boolean\n        ErrorMessage:\n          type: string\n    UpdateExpense:\n      required:\n      - ExpenseID\n      - FieldsToUpdate\n      type: object\n      properties:\n        ExpenseID:\n          type: integer\n          format: int64\n        FieldsToUpdate:\n          type: array\n          items:\n            type: string\n        ExpenseDate:\n          type: string\n          description: The date of the expense entry\n          format: date-time\n        ExpenseCategoryIDFK:\n          type: integer\n          description: The expense category to link the Expense to.\n          format: int32\n        isChargeable:\n          type: boolean\n          description: aka Billable. Defaults to false if not provided. If set to\n            true, a CustomerIDFK or CustomerName must be provided.\n        isReimbursable:\n          type: boolean\n          description: Defaults to false if not provided.\n        Quantity:\n          type: number\n          description: Conditional - available for expenses that are assigned a unit\n            priced based expense category. e.g Mileage\n          format: double\n        CustomerIDFK:\n          type: integer\n          description: The Avaza Customer ID to associate the Expense with.\n          format: int32\n        ProjectIDFK:\n          type: integer\n          description: The Avaza project ID to associate the Expense with.\n          format: int32\n        TaskIDFK:\n          type: integer\n          description: (optional) TaskID of a Task to link the new Expense to. A Customer\n            and Project must be provided also.\n          format: int32\n        CurrencyCode:\n          type: string\n          description: A 3-letter ISO CurrencyCode for the expense currency. (e.g.\n            USD). If not provided, defaults to the Account base currency.\n        ExchangeRate:\n          type: number\n          description: Optional (Only relevant if the expense currency is different\n            to your account currency. If not provided we will look up the market exchange\n            rate for you based on the expense date.) Exchange Rate = Expense Currency\n            Amount / Base Currency Amount (e.g. if Expense currency is in AUD, and\n            Base Currency is in USD, Exchange Rate = AUD $140 / USD $100 = 1.4)\n          format: double\n        Amount:\n          type: number\n          description: Expense Amount (Required). Must be \u0026gt;= 0\n          format: double\n        TaxIDFK:\n          type: integer\n          description: Avaza Tax ID the expense belongs to.\n          format: int32\n        TransactionTaxConfigCode:\n          type: string\n          description: Optional - Enter \"INC\" if the tax amount is included in the\n            expense amount otherwise enter \"EX\" when the amount exlcudes the tax.\n            Defaults to \"Ex\". The tax amount on the expense will be autocalculated.\n        GroupTripName:\n          type: string\n          description: Links the expense to a Grouping/Trip report. If no matching\n            name found, creates a new Group/Trip Report name.\n        ExpensePaymentMethodIDFK:\n          type: integer\n          description: (Optional) ID of Expense Payment Method.\n          format: int32\n        Merchant:\n          type: string\n          description: The name of the merchant.\n        MerchantTaxNumber:\n          type: string\n          description: A Tax number identifier for the merchant.\n        Notes:\n          type: string\n          description: Expense Notes\n        VerifyAndSave:\n          type: boolean\n          description: Pass false if creating a draft expense. True otherwise.\n        FileAttachmentIDs:\n          type: array\n          description: Array of File Attachment IDs to associate with this expense.\n            The files need to have already been uploaded. Currently only accepts a\n            single file.\n          items:\n            type: integer\n            format: int64\n    ExpenseCategoryList:\n      type: object\n      properties:\n        Categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExpenseCategoryDetails'\n    ExpenseCategoryDetails:\n      type: object\n      properties:\n        ExpenseCategoryID:\n          type: integer\n          format: int32\n        Name:\n          type: string\n        Enabled:\n          type: boolean\n        hasUnitPrice:\n          type: boolean\n        UnitPrice:\n          type: number\n          format: double\n        UnitName:\n          type: string\n    ExpenseGroupDropdownList:\n      type: object\n      properties:\n        ExpenseGroups:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExpenseGroupMinimal'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    ExpenseGroupMinimal:\n      type: object\n      properties:\n        ExpenseGroupID:\n          type: integer\n          format: int64\n        Name:\n          type: string\n    ExpenseMerchantDropdownList:\n      type: object\n      properties:\n        ExpenseMerchants:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExpenseMerchantMinimal'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    ExpenseMerchantMinimal:\n      type: object\n      properties:\n        MerchantName:\n          type: string\n    ExpensePaymentMethodDropdownList:\n      type: object\n      properties:\n        ExpensePaymentMethods:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExpensePaymentMethodMinimal'\n    ExpensePaymentMethodMinimal:\n      type: object\n      properties:\n        ExpensePaymentMethodID:\n          type: integer\n          format: int64\n        Name:\n          type: string\n    ExpenseSummaryRequest:\n      type: object\n      properties:\n        GroupBy:\n          type: array\n          description: '(Optional) Combine one, two or three levels of Grouping. Combine\n            these possible grouping values: \"Category\", \"ChargeableStatus\", \"Merchant\",\n            \"ApprovalStatus\", \"ReimbursementStatus\", \"Customer\", \"Project\", \"User\",\n            \"Task\", \"Year\", \"Month\", \"Day\", \"Week\".'\n          items:\n            type: string\n        ExpenseDateFrom:\n          type: string\n          description: (Required) Filter for expenses with expense dates greater or\n            equal to the specified date. e.g. 2019-01-25.\n          format: date-time\n        ExpenseDateTo:\n          type: string\n          description: (Required) Filter for expenses with an expense date smaller\n            or equal to the specified  date. e.g. 2019-01-25.\n          format: date-time\n        UserID:\n          type: array\n          description: (Optional) Defaults to the current user. Provide one or more\n            UserIDs of Users whose expenses should be retrieved. If the current user\n            doesn't have impersonation rights, then they will only see their own data.\n          items:\n            type: integer\n            format: int32\n        ProjectID:\n          type: integer\n          description: (Optional) Filter by Project\n          format: int32\n    ExpenseSummaryResult:\n      type: object\n      properties:\n        ExpenseDateFrom:\n          type: string\n          format: date-time\n        ExpenseDateTo:\n          type: string\n          format: date-time\n        TotalAmount:\n          type: number\n          format: double\n        UserID:\n          type: array\n          items:\n            type: integer\n            format: int32\n        GroupingLevels:\n          type: array\n          items:\n            type: string\n        GroupData:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExpenseSummaryGroup'\n    ExpenseSummaryGroup:\n      type: object\n      properties:\n        GroupID:\n          type: string\n        GroupName:\n          type: string\n        TotalAmount:\n          type: number\n          format: double\n        GroupData:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExpenseSummaryGroup'\n    FixedAmountList:\n      type: object\n      properties:\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n        FixedAmounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/FixedAmountDetails'\n    FixedAmountDetails:\n      type: object\n      properties:\n        FixedAmountID:\n          type: integer\n          format: int32\n        ProjectIDFK:\n          type: integer\n          format: int32\n        ProjectTitle:\n          type: string\n        ProjectCode:\n          type: string\n        TaskIDFK:\n          type: integer\n          format: int32\n        TaskTitle:\n          type: string\n        InventoryItemIDFK:\n          type: integer\n          format: int64\n        InventoryItemName:\n          type: string\n        Amount:\n          type: number\n          format: double\n        Notes:\n          type: string\n        isInvoiced:\n          type: boolean\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n        UpdatedByUserIDFK:\n          type: integer\n          format: int32\n    InventoryList:\n      type: object\n      properties:\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n        Inventory:\n          type: array\n          items:\n            $ref: '#/components/schemas/InventoryItem'\n    InventoryItem:\n      type: object\n      properties:\n        InventoryItemID:\n          type: integer\n          format: int64\n        Name:\n          type: string\n        Description:\n          type: string\n        SKU:\n          type: string\n        CostPrice:\n          type: number\n          format: double\n        SalePrice:\n          type: number\n          format: double\n        SaleTaxIDFK:\n          type: integer\n          format: int32\n        isHidden:\n          type: boolean\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n    InvoiceList:\n      type: object\n      properties:\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n        Invoices:\n          type: array\n          items:\n            $ref: '#/components/schemas/Invoice'\n    Invoice:\n      type: object\n      properties:\n        TransactionID:\n          type: integer\n          format: int64\n        AccountIDFK:\n          type: integer\n          format: int32\n        TransactionPrefix:\n          type: string\n        InvoiceNumber:\n          type: string\n        CompanyIDFK:\n          type: integer\n          format: int32\n        CompanyName:\n          type: string\n        Subject:\n          type: string\n        DateIssued:\n          type: string\n          format: date-time\n        DateSent:\n          type: string\n          format: date-time\n        DueDate:\n          type: string\n          format: date-time\n        TransactionStatusCode:\n          type: string\n        TaxAmount:\n          type: number\n          format: double\n        TransactionTaxConfigCode:\n          type: string\n        Balance:\n          type: number\n          format: double\n        CurrencyCode:\n          type: string\n        TotalAmount:\n          type: number\n          format: double\n        ExchangeRate:\n          type: number\n          format: double\n        Notes:\n          type: string\n        CustomerPONumber:\n          type: string\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n        LineItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvoiceLineItem'\n        Links:\n          $ref: '#/components/schemas/InvoiceLinks'\n        Issuer:\n          $ref: '#/components/schemas/IssuerDetails'\n        Recipient:\n          $ref: '#/components/schemas/RecipientDetails'\n    InvoiceLineItem:\n      type: object\n      properties:\n        TransactionLineItemID:\n          type: integer\n          format: int64\n        InventoryItemIDFK:\n          type: integer\n          format: int64\n        InventoryItemName:\n          type: string\n        InventoryItemSKU:\n          type: string\n        Description:\n          type: string\n        Quantity:\n          type: number\n          format: double\n        UnitPrice:\n          type: number\n          format: double\n        TaxAmount:\n          type: number\n          format: double\n        TaxIDFK:\n          type: integer\n          format: int32\n        TaxCode:\n          type: string\n        TaxName:\n          type: string\n        ProjectIDFK:\n          type: integer\n          format: int32\n        ProjectTitle:\n          type: string\n        Amount:\n          type: number\n          format: double\n        Discount:\n          type: number\n          format: double\n    InvoiceLinks:\n      type: object\n      properties:\n        ClientView:\n          type: string\n        View:\n          type: string\n        Edit:\n          type: string\n    NewInvoice:\n      type: object\n      properties:\n        TransactionPrefix:\n          type: string\n          description: A prefix for the Invoice number. e.g. 'INV'. If left blank\n            it will be set to the account default. Max length 20 characters.\n        InvoiceNumber:\n          type: string\n          description: Pass any string. If left blank it will use the next number\n            in the auto incrementing sequence. If an integer is passed then the largest\n            integer will be use as the seed to auto generate the next invoice number\n            in the sequence.\n        CompanyIDFK:\n          type: integer\n          description: If left blank then you must specify Company Name.\n          format: int32\n        CompanyName:\n          type: string\n          description: If left blank then you must specify Company ID. Specified Name\n            will be used to match existing customer record. If not matched then it\n            will be used to create a new customer. First Name, Last Name and Email\n            will only be used if it is a new company. If the Company name appears\n            multiple times we will check the email address to find a matching company.\n            If email address doesn't identify a matching company then the invoice\n            creation will be rejected.\n        Firstname:\n          type: string\n          description: Specified value will be used to create a new customer contact\n            only if a new customer is being created.\n        Lastname:\n          type: string\n          description: Specified value will be used to create a new customer contact\n            only if a new customer is being created.\n        Email:\n          type: string\n          description: Specified value will be used to create a new customer contact\n            only if a new customer is being created.\n        CurrencyCode:\n          type: string\n          description: Expects ISO Standard 3 character currency code. If left blank\n            the currency will default to account's currency in general setting. For\n            existing companies this field will be ignored and the invoice will use\n            the currency of the customer. For new customers if the currency is not\n            specified then account currency will be used otherwise the specified currency\n            will be used.\n        ExchangeRate:\n          type: number\n          description: Exchange rate is only valid for invoices in currency other\n            than default account currency. If not specified it will get the market\n            rate based on the Date Issued.\n          format: double\n        InvoiceTemplateIDFK:\n          type: integer\n          description: If left blank the account default invoice template will be\n            used.\n          format: int32\n        Subject:\n          type: string\n          description: Plain UTF8 text. (no HTML). 255 characters max\n        CustomerPONumber:\n          type: string\n          description: Plain UTF8 text. 100 characters max\n        DateIssued:\n          type: string\n          description: If not specified it will use today's date. The date should\n            be specified as local date.\n          format: date-time\n        PaymentTerms:\n          type: integer\n          description: \" \\\"If left blank we will set it to customer default. If specified\\\n            \\ then it must match one of your existing pre configured payment term\\\n            \\ periods. Your account starts with:\\r\\n(-1 --- Custom, 0 --- Upon Receipt,\\\n            \\ 7 --- 7 Days, 15 --- 15 Days, 30 --- 30 Days, 45 --- 45 Days, 60 ---\\\n            \\ 60 Days)\"\n          format: int32\n        DueDate:\n          type: string\n          description: It will be auto calculated based on the payment term and issue\n            date. Due Date must be greater than or equal to Issue Date. If the Due\n            Date is specified then Payment Terms will be set to -1 (Custom)\n          format: date-time\n        TransactionTaxConfigCode:\n          type: string\n          description: Possible values are (EX --- Tax Exclusive, INC --- Tax Inclusive).\n            If left empty it will use the account default.\n        Notes:\n          type: string\n          description: Plain UTF8 text. (no HTML). Max 2000 characters\n        LineItems:\n          description: Line item to be added to new invoice\n          type: array\n          items:\n            $ref: '#/components/schemas/NewInvoiceLineItem'\n      description: New invoice to be created\n    NewInvoiceLineItem:\n      description: Line item to be added to new invoice\n      required:\n      - Quantity\n      - UnitPrice\n      type: object\n      properties:\n        InventoryItemIDFK:\n          type: integer\n          description: If not specified then Inventory Item Name must be specified.\n          format: int32\n        InventoryItemName:\n          type: string\n          description: If not specified then Inventory item ID must be specified.\n            If specified and not matched to any existing inventory items then a new\n            inventory item will be created. Max 200 characters.\n        Description:\n          type: string\n          description: Plain UTF8 text. (no HTML)\n        Quantity:\n          type: number\n          description: The quantity for the line item\n          format: double\n        UnitPrice:\n          type: number\n          description: The unit price for the lineitem.\n          format: double\n        TaxIDFK:\n          type: integer\n          description: If specified then it must match an existing Tax ID. If not\n            specified then Tax Name and Tax Percent must be specified.\n          format: int32\n        TaxName:\n          type: string\n          description: Must be specified if the Tax ID is blank. If the Tax Name is\n            specified it will be matched to an existing Tax Name or else a new Tax\n            will be created.\n        TaxPercent:\n          type: number\n          description: The Tax Percent will only be used if a new tax is being created.\n          format: double\n        Discount:\n          type: number\n          description: Enter 10.5 to give a 10.5% discount\n          format: double\n        ProjectIDFK:\n          type: integer\n          description: Optional. Project ID of an Avaza Project that belongs to this\n            customer, so line item is attributed to that Project for reporting.\n          format: int32\n    PaymentList:\n      type: object\n      properties:\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n        Payments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Payment'\n    Payment:\n      type: object\n      properties:\n        TransactionID:\n          type: integer\n          format: int64\n        AccountIDFK:\n          type: integer\n          format: int32\n        TransactionPrefix:\n          type: string\n        PaymentNumber:\n          type: string\n        TransactionReference:\n          type: string\n        CustomerIDFK:\n          type: integer\n          format: int32\n        DateIssued:\n          type: string\n          format: date-time\n        TransactionStatusCode:\n          type: string\n        PaymentProviderCode:\n          type: string\n        ExchangeRate:\n          type: number\n          format: double\n        Balance:\n          type: number\n          format: double\n        CurrencyCode:\n          type: string\n        TotalAmount:\n          type: number\n          format: double\n        Notes:\n          type: string\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n        PaymentAllocations:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaymentAllocation'\n    PaymentAllocation:\n      type: object\n      properties:\n        TransactionAllocationID:\n          type: integer\n          format: int64\n        InvoiceTransactionIDFK:\n          type: integer\n          format: int64\n        PaymentTransactionIDFK:\n          type: integer\n          format: int64\n        AllocationDate:\n          type: string\n          format: date-time\n        AllocationAmount:\n          type: number\n          format: double\n    NewPayment:\n      type: object\n      properties:\n        Amount:\n          type: number\n          format: double\n        PaymentNumber:\n          type: string\n          description: Optional. If not specified will be automatically generated\n        DateIssued:\n          type: string\n          description: Date of Payment. If not specified, assumes today.\n          format: date-time\n        TransactionPrefix:\n          type: string\n          description: Optional to override the default prefix added to Payment Numbers\n        CustomerIDFK:\n          type: integer\n          description: Only required if no invoice allocations specified.\n          format: int32\n        ExchangeRate:\n          type: number\n          description: Optional. Only used when the Customer's currecy is different\n            from the Avaza account's base currency. Specifies the exchange rate that\n            should apply between the customer currency and base currency. If not provided\n            we will obtain an up to date exchange rate for the Payment Issue Date.\n          format: double\n        TransactionReference:\n          type: string\n          description: 'Optional for storing the reference # of the payment method.'\n        Notes:\n          type: string\n        PaymentProviderCode:\n          type: string\n          description: Optional for storing the payment provider who was the source\n            of funds.\n        PaymentAllocations:\n          type: array\n          description: List of amounts within this payment that are allocated to invoices.\n            The sum of these be less than or equal to the payment amount.\n          items:\n            $ref: '#/components/schemas/NewPaymentAllocation'\n    NewPaymentAllocation:\n      type: object\n      properties:\n        InvoiceTransactionIDFK:\n          type: integer\n          description: The Avaza Invoice TransactionID that is having a payment amount\n            allocated to it.\n          format: int64\n        AllocationAmount:\n          type: number\n          description: The Amount being allocated to the invoice. Expects same currency\n            as invoice currency\n          format: double\n        AllocationDate:\n          type: string\n          description: Optional. Defaults to the current time in the Avaza account's\n            timezone. The date the allocation is applied to the invoice. Can be difference\n            from the Payment Date when doing prepayments etc.\n          format: date-time\n    ProjectDropdownList:\n      type: object\n      properties:\n        companies:\n          type: array\n          description: List of Projects grouped by Customer Name\n          items:\n            $ref: '#/components/schemas/ProjectCompanyGroup'\n        pageNumber:\n          type: integer\n          description: Current page number (1 based)\n          format: int32\n        PageSize:\n          type: integer\n          description: Current page size\n          format: int32\n        hasMore:\n          type: boolean\n          description: More records probably exist\n    ProjectCompanyGroup:\n      type: object\n      properties:\n        CompanyID:\n          type: integer\n          format: int64\n        CompanyName:\n          type: string\n        projects:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectDropdownSelection'\n    ProjectDropdownSelection:\n      type: object\n      properties:\n        ProjectID:\n          type: integer\n          format: int64\n        ProjectCode:\n          type: string\n        Title:\n          type: string\n    ProjectList:\n      type: object\n      properties:\n        Projects:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectListDetails'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    ProjectListDetails:\n      type: object\n      properties:\n        ProjectID:\n          type: integer\n          format: int32\n        ProjectCode:\n          type: string\n        Title:\n          type: string\n        isArchived:\n          type: boolean\n        Notes:\n          type: string\n        CompanyName:\n          type: string\n        CompanyIDFK:\n          type: integer\n          format: int32\n        isTaskRequiredOnTimesheet:\n          type: boolean\n        DefaultAccountTaskTypeIDFK:\n          type: integer\n          format: int32\n        DefaultAccountTaskTypeName:\n          type: string\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n    NewProjectModel:\n      required:\n      - ProjectTitle\n      type: object\n      properties:\n        CompanyIDFK:\n          type: integer\n          description: An ID of a company in Avaza to create the Project under. You\n            must provide either a CompanyID, or a CompanyName\n          format: int32\n        CompanyName:\n          type: string\n          description: The name for a Company to create the project under. Will create\n            company unless it matches an existing company name\n        CurrencyCode:\n          type: string\n          description: The ISO 3 letter currency code to use when creating a new Company.\n            If not provided, the account's default currency will be used.\n        ProjectTitle:\n          type: string\n          description: The title of the new project. (255 characters max)\n        ProjectCode:\n          type: string\n          description: Used when Manual Project Codes are enabled\n        ProjectNotes:\n          type: string\n          description: Any descriptive notes about the project. (2000 characters max)\n        TimesheetApprovalRequiredbyDefault:\n          type: boolean\n        PopulateDefaultProjectMembers:\n          type: boolean\n          description: Defaults to true.\n        isTaskRequiredOnTimesheet:\n          type: boolean\n        StartDate:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n        BudgetAmount:\n          type: number\n          format: double\n        BudgetHours:\n          type: number\n          format: double\n        ProjectStatusCode:\n          type: string\n        ProjectCategoryIDFK:\n          type: integer\n          format: int32\n    ProjectDetails:\n      type: object\n      properties:\n        ProjectID:\n          type: integer\n          format: int32\n        Title:\n          type: string\n        ProjectCode:\n          type: string\n        Notes:\n          type: string\n        CompanyName:\n          type: string\n        CompanyIDFK:\n          type: integer\n          format: int32\n        ProjectOwnerUserIDFK:\n          type: integer\n          format: int32\n        ProjectStatusCode:\n          type: string\n          description: 'Possible values: NotStarted, InProgress, Complete'\n        isArchived:\n          type: boolean\n        ProjectBillableTypeCode:\n          type: string\n          description: 'Possible values: CategoryHourly, NoRate, NotBillable, PersonHourly,\n            ProjectHourly'\n        ProjectBudgetTypeCode:\n          type: string\n          description: 'Possible Values: CategoryHours, NoBudget, PersonHours, ProjectFees,\n            ProjectHours'\n        BudgetAmount:\n          type: number\n          format: double\n        BudgetHours:\n          type: number\n          format: double\n        ProjectHourlyRate:\n          type: number\n          format: double\n        ProjectCategoryIDFK:\n          type: integer\n          format: int32\n        ProjectCategoryName:\n          type: string\n        isTaskRequiredOnTimesheet:\n          type: boolean\n        DefaultAccountTaskTypeIDFK:\n          type: integer\n          format: int32\n        DefaultAccountTaskTypeName:\n          type: string\n        ProjectCategoryColor:\n          type: string\n          description: 'Html Hex Color Code starting with #'\n        StartDate:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n        Sections:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectSectionDetails'\n        Members:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectMemberDetails'\n        ProjectTags:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectTagItem'\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n    ProjectSectionDetails:\n      type: object\n      properties:\n        SectionID:\n          type: integer\n          format: int32\n        Title:\n          type: string\n        StartDate:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n        DisplayOrder:\n          type: integer\n          format: int32\n    ProjectMemberDetails:\n      type: object\n      properties:\n        UserIDFK:\n          type: integer\n          format: int32\n        Firstname:\n          type: string\n        Lastname:\n          type: string\n        Fullname:\n          type: string\n        Email:\n          type: string\n        CostAmount:\n          type: number\n          format: double\n        RateAmount:\n          type: number\n          format: double\n        BudgetAmount:\n          type: number\n          format: double\n        isMemberDisabled:\n          type: boolean\n        isProjectManager:\n          type: boolean\n        isTimesheetAllowed:\n          type: boolean\n        isTimesheetApprover:\n          type: boolean\n        isTimesheetApprovalRequired:\n          type: boolean\n        canCreateTasks:\n          type: boolean\n        canDeleteTasks:\n          type: boolean\n        canCommentOnTasks:\n          type: boolean\n        canUpdateTasks:\n          type: boolean\n    ProjectTagItem:\n      type: object\n      properties:\n        ProjectTagID:\n          type: integer\n          format: int32\n        Name:\n          type: string\n    UpdateProjectModel:\n      type: object\n      properties:\n        ProjectID:\n          type: integer\n          description: The ID of the Project to update\n          format: int32\n        FieldsToUpdate:\n          type: array\n          description: \"\"\n          items:\n            type: string\n        ProjectTitle:\n          type: string\n          description: (optional) An updated project title. (255 characters max)\n        ProjectNotes:\n          type: string\n          description: (optional) Any descriptive notes about the project. (2000 characters\n            max)\n        TimesheetApprovalRequiredbyDefault:\n          type: boolean\n          description: Whether timesheet approval should be required by default for\n            newly added project members.\n        isTaskRequiredOnTimesheet:\n          type: boolean\n          description: Whether timesheets entered against this project require a task\n            to be selected.\n        StartDate:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n        BudgetAmount:\n          type: number\n          format: double\n        BudgetHours:\n          type: number\n          format: double\n        ProjectStatusCode:\n          type: string\n          description: 'Update the project status (string, optional): (Possible values:\n            NotStarted, InProgress, Complete, OnHold)'\n        ProjectCategoryIDFK:\n          type: integer\n          format: int32\n        ProjectBillableTypeCode:\n          type: string\n          description: 'The billing method of the project. (string, optional) Possible\n            values: CategoryHourly, NoRate, NotBillable, PersonHourly, ProjectHourly'\n        ProjectBudgetTypeCode:\n          type: string\n          description: 'The project budgeting type. (string, optional) Possible values:\n            NoBudget, PersonHours, ProjectFees, ProjectHours, CategoryHours'\n    NewProjectMember:\n      type: object\n      properties:\n        isProjectManager:\n          type: boolean\n        isTimesheetAllowed:\n          type: boolean\n        isTimesheetApprover:\n          type: boolean\n        isTimesheetApprovalRequired:\n          type: boolean\n        canCreateTasks:\n          type: boolean\n        canDeleteTasks:\n          type: boolean\n        canCommentOnTasks:\n          type: boolean\n        canUpdateTasks:\n          type: boolean\n        ProjectIDFK:\n          type: integer\n          description: Required. The ProjectID\n          format: int32\n        UserIDFK:\n          type: integer\n          description: Required. The UserID to assign\n          format: int32\n        CostAmount:\n          type: number\n          description: Optional. If not provided, defaults to the User's default Cost\n            Amount.\n          format: double\n        RateAmount:\n          type: number\n          description: Optional. If not provided, defaults to the User's default Rate\n            Amount.\n          format: double\n        BudgetAmount:\n          type: number\n          description: Optional\n          format: double\n    ProjectTimesheetCategoryList:\n      type: object\n      properties:\n        Categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectTimesheetCategoryDetails'\n    ProjectTimesheetCategoryDetails:\n      type: object\n      properties:\n        TimeSheetCategoryIDFK:\n          type: integer\n          format: int32\n        AccountIDFK:\n          type: integer\n          format: int32\n        ProjectIDFK:\n          type: integer\n          format: int32\n        Name:\n          type: string\n        isBillable:\n          type: boolean\n        RateAmount:\n          type: number\n          format: double\n        BudgetHours:\n          type: number\n          format: double\n        CostAmount:\n          type: number\n          format: double\n    ScheduleAssignmentList:\n      type: object\n      properties:\n        ScheduleAssignments:\n          type: array\n          items:\n            $ref: '#/components/schemas/ScheduleAssignmentDetails'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    ScheduleAssignmentDetails:\n      type: object\n      properties:\n        ScheduleAssignmentID:\n          type: integer\n          format: int64\n        AccountIDFK:\n          type: integer\n          format: int32\n        UserIDFK:\n          type: integer\n          format: int32\n        ScheduleSeriesIDFK:\n          type: integer\n          format: int64\n        ScheduleDate:\n          type: string\n          format: date-time\n        Duration:\n          type: number\n          format: double\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n    CreateBooking:\n      type: object\n      properties:\n        UserIDFK:\n          type: integer\n          format: int32\n        HoursPerDay:\n          type: number\n          format: double\n        TotalDuration:\n          type: number\n          format: double\n        DurationType:\n          type: string\n        ScheduleOnDaysOff:\n          type: boolean\n        ProjectIDFK:\n          type: integer\n          format: int32\n        CategoryIDFK:\n          type: integer\n          format: int32\n        TaskIDFK:\n          type: integer\n          format: int32\n        Notes:\n          type: string\n        StartDate:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n    ScheduleSeriesDetails:\n      type: object\n      properties:\n        ScheduleSeriesID:\n          type: integer\n          format: int64\n        AccountIDFK:\n          type: integer\n          format: int32\n        UserIDFK:\n          type: integer\n          format: int32\n        Firstname:\n          type: string\n        Lastname:\n          type: string\n        ProjectIDFK:\n          type: integer\n          format: int32\n        ProjectTitle:\n          type: string\n        CompanyIDFK:\n          type: integer\n          format: int32\n        CompanyName:\n          type: string\n        TimeSheetCategoryIDFK:\n          type: integer\n          format: int32\n        TimeSheetCategoryName:\n          type: string\n        LeaveTypeIDFK:\n          type: integer\n          format: int32\n        LeaveTypeName:\n          type: string\n        StartDate:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n        HoursPerDay:\n          type: number\n          format: double\n        TotalDuration:\n          type: number\n          format: double\n        ScheduleOnDaysOff:\n          type: boolean\n        Notes:\n          type: string\n        TaskIDFK:\n          type: integer\n          format: int32\n        TaskTitle:\n          type: string\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n        UpdatedByUserIDFK:\n          type: integer\n          format: int32\n    CreateLeave:\n      type: object\n      properties:\n        LeaveUserIDFK:\n          type: integer\n          format: int32\n        LeaveNotify:\n          type: boolean\n        LeaveHoursPerDay:\n          type: number\n          format: double\n        LeaveTypeIDFK:\n          type: integer\n          format: int32\n        LeaveNotes:\n          type: string\n        LeaveStartDate:\n          type: string\n          format: date-time\n        LeaveEndDate:\n          type: string\n          format: date-time\n    EditLeave:\n      type: object\n      properties:\n        ScheduleSeriesID:\n          type: integer\n          format: int64\n        UserIDFK:\n          type: integer\n          format: int32\n        HoursPerDay:\n          type: number\n          format: double\n        LeaveTypeIDFK:\n          type: integer\n          format: int32\n        Notes:\n          type: string\n        StartDate:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n    EditBooking:\n      type: object\n      properties:\n        ScheduleSeriesID:\n          type: integer\n          format: int64\n        UserIDFK:\n          type: integer\n          format: int32\n        HoursPerDay:\n          type: number\n          format: double\n        TotalDuration:\n          type: number\n          format: double\n        DurationType:\n          type: string\n        ScheduleOnDaysOff:\n          type: boolean\n        ProjectIDFK:\n          type: integer\n          format: int32\n        CategoryIDFK:\n          type: integer\n          format: int32\n        TaskIDFK:\n          type: integer\n          format: int32\n        Notes:\n          type: string\n        StartDate:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n    ScheduleSeriesList:\n      type: object\n      properties:\n        ScheduleSeries:\n          type: array\n          items:\n            $ref: '#/components/schemas/ScheduleSeriesDetails'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    SectionList:\n      type: object\n      properties:\n        Sections:\n          type: array\n          items:\n            $ref: '#/components/schemas/SectionDetails'\n        TotalCount:\n          type: integer\n          format: int32\n    SectionDetails:\n      type: object\n      properties:\n        SectionID:\n          type: integer\n          format: int32\n        ProjectIDFK:\n          type: integer\n          format: int32\n        Title:\n          type: string\n        DisplayOrder:\n          type: integer\n          format: int32\n        StartDateUTC:\n          type: string\n          format: date-time\n        StartDate:\n          type: string\n          format: date-time\n        EndDateUTC:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n    NewSection:\n      type: object\n      properties:\n        ProjectIDFK:\n          type: integer\n          format: int32\n        Title:\n          type: string\n        StartDateUTC:\n          type: string\n          format: date-time\n        EndDateUTC:\n          type: string\n          format: date-time\n    TaskDropdownList:\n      type: object\n      properties:\n        sections:\n          type: array\n          description: List of Task grouped by Section\n          items:\n            $ref: '#/components/schemas/TaskSectionGroup'\n        pageNumber:\n          type: integer\n          description: Current page number (1 based)\n          format: int32\n        PageSize:\n          type: integer\n          description: Current page size\n          format: int32\n        hasMore:\n          type: boolean\n          description: More records probably exist\n    TaskSectionGroup:\n      type: object\n      properties:\n        SectionTitle:\n          type: string\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskDropdownSelection'\n    TaskDropdownSelection:\n      type: object\n      properties:\n        TaskID:\n          type: string\n        Title:\n          type: string\n    TaskList:\n      type: object\n      properties:\n        Tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskDetails'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    TaskDetails:\n      type: object\n      properties:\n        TaskID:\n          type: integer\n          format: int32\n        ProjectIDFK:\n          type: integer\n          format: int32\n        ProjectTitle:\n          type: string\n        ProjectCode:\n          type: string\n        SectionTitle:\n          type: string\n        SectionIDFK:\n          type: integer\n          format: int32\n        Title:\n          type: string\n        Description:\n          type: string\n        DescriptionNoHTML:\n          type: string\n        AssignedToFirstname:\n          type: string\n        AssignedToLastname:\n          type: string\n        AssignedToEmail:\n          type: string\n        AssignedToUserIDFK:\n          type: string\n        DateStart:\n          type: string\n          format: date-time\n        DateDue:\n          type: string\n          format: date-time\n        DateCompleted:\n          type: string\n          format: date-time\n        EstimatedEffort:\n          type: number\n          format: double\n        ActualTime:\n          type: number\n          format: double\n        Tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/TagItem'\n        AccountTaskTypeIDFK:\n          type: integer\n          format: int32\n        TaskStatusCode:\n          type: string\n        TaskStatusName:\n          type: string\n        isCompleteStatus:\n          type: boolean\n        PercentComplete:\n          type: number\n          format: double\n        TaskPriorityCode:\n          type: string\n        TaskPriorityName:\n          type: string\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n    TagItem:\n      type: object\n      properties:\n        TagID:\n          type: integer\n          format: int64\n        Name:\n          type: string\n        Color:\n          type: string\n    UpdateTask:\n      required:\n      - FieldsToUpdate\n      - TaskID\n      type: object\n      properties:\n        TaskID:\n          type: integer\n          format: int32\n        FieldsToUpdate:\n          type: array\n          items:\n            type: string\n        SectionIDFK:\n          type: integer\n          format: int32\n        Title:\n          type: string\n        Description:\n          type: string\n        AssignedToUserIDFK:\n          type: integer\n          format: int32\n        DateStart:\n          type: string\n          format: date-time\n        DateDue:\n          type: string\n          format: date-time\n        TaskPriorityCode:\n          type: string\n        EstimatedEffort:\n          type: number\n          description: Decimal hours\n          format: double\n        TaskStatusCode:\n          type: string\n        PercentComplete:\n          type: integer\n          format: int32\n        Tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/NewTag'\n    NewTag:\n      type: object\n      properties:\n        Name:\n          type: string\n        Color:\n          type: string\n          description: 'Hex color code in format #000000'\n    NewTask:\n      required:\n      - ProjectIDFK\n      - SectionIDFK\n      - Title\n      type: object\n      properties:\n        ProjectIDFK:\n          type: integer\n          format: int32\n        SectionIDFK:\n          type: integer\n          format: int32\n        AccountTaskTypeIDFK:\n          type: integer\n          format: int32\n        Title:\n          type: string\n        Description:\n          type: string\n        AssignedToUserIDFK:\n          type: integer\n          format: int32\n        TaskPriorityCode:\n          type: string\n        DateStart:\n          type: string\n          format: date-time\n        DateDue:\n          type: string\n          format: date-time\n        EstimatedEffort:\n          type: number\n          description: Decimal hours\n          format: double\n        Tags:\n          type: array\n          description: Collection of tags specifying Name and Color (Hex)\n          items:\n            $ref: '#/components/schemas/NewTag'\n    TaskStatusList:\n      type: object\n      properties:\n        statuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskStatusDetails'\n    TaskStatusDetails:\n      type: object\n      properties:\n        TaskStatusCode:\n          type: string\n        Name:\n          type: string\n        Color:\n          type: string\n        DisplayOrder:\n          type: integer\n          format: int32\n        isComplete:\n          type: boolean\n        AccountTaskTypeIDFK:\n          type: integer\n          format: int32\n        TaskTypeName:\n          type: string\n    TaskTypeList:\n      type: object\n      properties:\n        tasktypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountTaskTypeDetails'\n    AccountTaskTypeDetails:\n      type: object\n      properties:\n        AccountTaskTypeID:\n          type: integer\n          format: int32\n        Name:\n          type: string\n        Icon:\n          type: string\n        IconType:\n          type: string\n        isDefault:\n          type: boolean\n    TaxList:\n      type: object\n      properties:\n        Taxes:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaxItem'\n    TaxItem:\n      type: object\n      properties:\n        TaxID:\n          type: integer\n          format: int32\n        TaxCode:\n          type: string\n        Name:\n          type: string\n        CalculatedPercent:\n          type: number\n          format: double\n        TaxComponents:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaxComponent'\n    TaxComponent:\n      type: object\n      properties:\n        TaxComponentID:\n          type: integer\n          format: int32\n        TaxIDFK:\n          type: integer\n          format: int32\n        ComponentTaxCode:\n          type: string\n        Name:\n          type: string\n        Percentage:\n          type: number\n          format: double\n        isCompound:\n          type: boolean\n    TimesheetList:\n      type: object\n      properties:\n        Timesheets:\n          type: array\n          items:\n            $ref: '#/components/schemas/TimesheetDetails'\n        TotalCount:\n          type: integer\n          format: int32\n        PageNumber:\n          type: integer\n          format: int32\n        PageSize:\n          type: integer\n          format: int32\n    TimesheetDetails:\n      type: object\n      properties:\n        TimesheetEntryID:\n          type: integer\n          format: int64\n        UserIDFK:\n          type: integer\n          format: int32\n        Firstname:\n          type: string\n        Lastname:\n          type: string\n        Email:\n          type: string\n        ProjectIDFK:\n          type: integer\n          format: int32\n        ProjectTitle:\n          type: string\n        ProjectCode:\n          type: string\n        CustomerIDFK:\n          type: integer\n          format: int32\n        CustomerName:\n          type: string\n        TimesheetCategoryIDFK:\n          type: integer\n          format: int32\n        CategoryName:\n          type: string\n        Duration:\n          type: number\n          format: double\n        TimesheetEntryApprovalStatusCode:\n          type: string\n        HasTimer:\n          type: boolean\n        TimerStartedAtUTC:\n          type: string\n          format: date-time\n        isBillable:\n          type: boolean\n        isInvoiced:\n          type: boolean\n        EntryDate:\n          type: string\n          format: date-time\n        StartTimeLocal:\n          type: string\n          format: date-time\n        StartTimeUTC:\n          type: string\n          format: date-time\n        EndTimeLocal:\n          type: string\n          format: date-time\n        EndTimeUTC:\n          type: string\n          format: date-time\n        TimesheetUserTimeZone:\n          type: string\n        Notes:\n          type: string\n        TaskIDFK:\n          type: integer\n          format: int32\n        TaskTitle:\n          type: string\n        InvoiceIDFK:\n          type: integer\n          format: int64\n        InvoiceLineItemIDFK:\n          type: integer\n          format: int64\n        DateCreated:\n          type: string\n          format: date-time\n        DateUpdated:\n          type: string\n          format: date-time\n        DateApproved:\n          type: string\n          format: date-time\n        ApprovedBy:\n          type: string\n        CustomMetadata:\n          type: string\n    NewTimesheet:\n      type: object\n      properties:\n        UserIDFK:\n          type: integer\n          description: UserID for a Timesheet user in Avaza\n          format: int32\n        ProjectIDFK:\n          type: integer\n          description: The project to associate the timesheet with.\n          format: int32\n        TimesheetCategoryIDFK:\n          type: integer\n          description: The Project timesheet category to link the timesheet to\n          format: int32\n        Duration:\n          type: number\n          description: The duration of the timesheet, in decimal hours. If null or\n            0, a timer will be started.\n          format: double\n        isInvoiced:\n          type: boolean\n          description: Optional. False by default. Allows you to mark the timesheet\n            as invoiced in an external system.\n        EntryDate:\n          type: string\n          description: The date of the timesheet entry, with an optional start time\n            component.\n          format: date-time\n        hasStartEndTime:\n          type: boolean\n          description: If true, the start time will be take from the time component\n            of the Entry Date field, and the end time will be calculated by adding\n            the Duration to the StartDate\n        Notes:\n          type: string\n          description: Timesheet Notes\n        TaskIDFK:\n          type: integer\n          description: Optional. Link the timesheet to a specific task\n          format: int32\n        CustomMetadata:\n          type: string\n          description: Optional. free nvarchar field available via Api to store any\n            additional metadata against a timesheet. We suggest you use Json or your\n            preferred serialisation format. 1000 characters max.\n    UpdateTimesheetModel:\n      required:\n      - FieldsToUpdate\n      - ProjectIDFK\n      - TimeSheetEntryID\n      type: object\n      properties:\n        TimeSheetEntryID:\n          type: integer\n          format: int64\n        FieldsToUpdate:\n          type: array\n          items:\n            type: string\n        ProjectIDFK:\n          type: integer\n          format: int32\n        TimesheetCategoryIDFK:\n          type: integer\n          format: int32\n        TaskIDFK:\n          type: integer\n          format: int32\n        Duration:\n          type: number\n          format: double\n        EntryDate:\n          type: string\n          format: date-time\n        hasStartEndTime:\n          type: boolean\n        Notes:\n          type: string\n        CustomMetadata:\n          type: string\n          description: Optional. free nvarchar field available via Api to store any\n            additional metadata against a timesheet. We suggest you use Json or your\n            preferred serialisation format. 1000 characters max.\n    TimesheetSummaryRequest:\n      type: object\n      properties:\n        GroupBy:\n          type: array\n          description: '(Optional) Combine one, two or three levels of Grouping. Combine\n            these possible grouping values: \"Customer\", \"Project\", \"Category\", \"User\",\n            \"Task\", \"Year\", \"Month\", \"Day\", \"Week\".'\n          items:\n            type: string\n        EntryDateFrom:\n          type: string\n          description: (Required) Filter for timesheets greater or equal to the specified\n            date. e.g. 2019-01-25. You can optionally include a time component, otherwise\n            it assumes 00:00\n          format: date-time\n        EntryDateTo:\n          type: string\n          description: (Required) Filter for timesheets with an entry date smaller\n            or equal to the specified  date. e.g. 2019-01-25. You can optionally include\n            a time component, otherwise it assumes 00:00\n          format: date-time\n        UserID:\n          type: array\n          description: (Optional) Defaults to the current user. Provide one or more\n            UserIDs of Users whose timesheets should be retrieved. If the current\n            user doesn't have impersonation rights, then they will only see their\n            own data.\n          items:\n            type: integer\n            format: int32\n        ProjectID:\n          type: integer\n          description: (Optional) Filter by Project\n          format: int32\n        isBillable:\n          type: boolean\n          description: (Optional) Filter by the billable status of Timesheets.\n        isInvoiced:\n          type: boolean\n          description: (Optional) Filter for timesheets by whether they have been\n            Invoiced or not.\n    TimesheetSummaryResult:\n      type: object\n      properties:\n        EntryDateFrom:\n          type: string\n          format: date-time\n        EntryDateTo:\n          type: string\n          format: date-time\n        TotalHours:\n          type: number\n          format: double\n        BillableHours:\n          type: number\n          format: double\n        UserID:\n          type: array\n          items:\n            type: integer\n            format: int32\n        GroupingLevels:\n          type: array\n          items:\n            type: string\n        GroupData:\n          type: array\n          items:\n            $ref: '#/components/schemas/TimesheetSummaryGroup'\n    TimesheetSummaryGroup:\n      type: object\n      properties:\n        GroupID:\n          type: string\n        GroupName:\n          type: string\n        TotalHours:\n          type: number\n          format: double\n        BillableHours:\n          type: number\n          format: double\n        GroupData:\n          type: array\n          items:\n            $ref: '#/components/schemas/TimesheetSummaryGroup'\n    UserList:\n      type: object\n      properties:\n        Users:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserDetails'\n    UserDetails:\n      type: object\n      properties:\n        UserID:\n          type: integer\n          format: int32\n        AccountIDFK:\n          type: integer\n          format: int32\n        Email:\n          type: string\n        Firstname:\n          type: string\n        Lastname:\n          type: string\n        PositionTitle:\n          type: string\n        Phone:\n          type: string\n        Mobile:\n          type: string\n        TimeZone:\n          type: string\n          description: Windows Timezone ID\n        IANATimezone:\n          type: string\n          description: IANA tz database timezone name\n        isTeamMember:\n          type: boolean\n        CompanyIDFK:\n          type: integer\n          format: int32\n        CompanyName:\n          type: string\n        DefaultBillableRate:\n          type: number\n          format: double\n        DefaultCostRate:\n          type: number\n          format: double\n        MondayAvailableHours:\n          type: number\n          format: double\n        TuesdayAvailableHours:\n          type: number\n          format: double\n        WednesdayAvailableHours:\n          type: number\n          format: double\n        ThursdayAvailableHours:\n          type: number\n          format: double\n        FridayAvailableHours:\n          type: number\n          format: double\n        SaturdayAvailableHours:\n          type: number\n          format: double\n        SundayAvailableHours:\n          type: number\n          format: double\n        Roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoleDetails'\n        Tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserTagDetails'\n    RoleDetails:\n      type: object\n      properties:\n        RoleCode:\n          type: string\n        RoleName:\n          type: string\n    UserTagDetails:\n      type: object\n      properties:\n        UserTagID:\n          type: integer\n          format: int32\n        UserTagName:\n          type: string\n    CreateSubscription:\n      required:\n      - event\n      - target_url\n      type: object\n      properties:\n        target_url:\n          type: string\n          description: The URL that should be notified of the event.\n        event:\n          type: string\n          description: 'The event code to be notified about. Possible values: company_created,\n            contact_created, invoice_created, invoice_sent, project_created, task_created'\n        secret:\n          type: string\n          description: Optional Secret string (255 char max). If provided, the secret\n            will be BASE 64 encoded and used as a basic authentication http header\n            with webhook notifications. i.e. Authorization Basic [BASE64 of Secret]\"\n      description: New Subscription to be Created\n    SubscribeResult:\n      type: object\n      properties:\n        ID:\n          type: integer\n          format: int32\n    WebhookList:\n      type: object\n      properties:\n        Webhooks:\n          type: array\n          items:\n            $ref: '#/components/schemas/WebhookDetails'\n    WebhookDetails:\n      type: object\n      properties:\n        SubscriptionID:\n          type: integer\n          format: int32\n        EventCode:\n          type: string\n        NotificationURL:\n          type: string\n        UserIDFK:\n          type: integer\n          format: int32\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      description: OAuth2 Implicit Grant\n      flows:\n        implicit:\n          authorizationUrl: https://any.avaza.com/oauth2/authorize\n          scopes:\n            read_contacts: Read access to Customers, Contacts\n            read_account: Read access to Account metadata\n            read_users: Read access to User Profiles\n            read_financials: Read access to Estimates, Invoices, Payments, Credit\n              Notes\n            read_projects: Read access to Projects, Project Settings, Tasks\n            read_schedule: Read access to Schedule Details\n            read_timesheets: Read access to Timesheet Details\n            read_expenses: Read access to Expense Details\n            write_contacts: Write access to Customers, Contacts\n            write_account: Write access to Account metadata\n            write_users: Write access to User Profiles\n            write_financials: Write access to Estimates, Invoices, Payments, Credit\n              Notes\n            write_projects: Write access to Projects, Project Settings, Tasks\n            write_schedule: Write access to Schedule module\n            write_timesheets: Write access to Timesheets module\n            write_expenses: Write access to Expense module\n            webhook_notifications: Read access to webhook notification events\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/avaza/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/avaza/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/api/Estimate\": post: requestBody: contents: application/x-www-form-urlencoded: form parameter \"LineItems\": nested objects not allowed",
	"NotImplemented": [
		"oauth2 security"
	]
}