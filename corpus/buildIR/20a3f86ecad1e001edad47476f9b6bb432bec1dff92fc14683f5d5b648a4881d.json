{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/journy.io/1.0.0/openapi.yaml",
			"byteSize": 108122,
			"content": "openapi: 3.0.3\nservers:\n  - description: Production\n    url: https://api.journy.io\ninfo:\n  contact:\n    email: hi@journy.io\n    name: Support\n    url: https://help.journy.io\n  description: |-\n    # Introduction\n\n    The journy.io API is organized around REST. Our API has predictable resource-oriented URLs, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.\n\n    The API is hosted on api.journy.io.\n\n    # Official SDKs\n\n    Our SDKs are designed to help you interact with our APIs with less friction. They are written in several different languages and help bridge the gap between your application and journy.io APIs. They take away the need to know the exact URL and HTTP method to use for each API call among other things leaving you more time to focus on making your application.\n\n    | Language   | Package                                                                        | Source code                                                                |\n    |------------|--------------------------------------------------------------------------------|----------------------------------------------------------------------------|\n    | üíö Node.js | [npm install @journyio/sdk ](https://www.npmjs.com/package/@journyio/sdk)      | [github.com/journy-io/js-sdk](https://github.com/journy-io/js-sdk)         |\n    | üêò PHP     | [composer require journy-io/sdk](https://packagist.org/packages/journy-io/sdk) | [github.com/journy-io/php-sdk](https://github.com/journy-io/php-sdk)       |\n    | üêç Python  | [pip install journyio-sdk](https://pypi.org/project/journyio-sdk/)             | [github.com/journy-io/python-sdk](https://github.com/journy-io/python-sdk) |\n    | üíé Ruby    | Coming soon                                                                    | Coming soon                                                                |\n\n    Your favourite programming language not included? [Let us know!](mailto:hi@journy.io)\n\n    In the meanwhile, you can use [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) to generate a client for your programming language.\n\n    # Authentication\n\n    The journy.io API uses API keys to authenticate requests. You can view and manage your API keys in the [connections screen](https://system.journy.io).\n\n    Your API keys carry many privileges, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, client-side code, and so forth.\n\n    All API requests must be made over HTTPS. Calls made over plain HTTP will fail. API requests without authentication will also fail.\n\n    For every request send to the API we expect a header `X-Api-Key` to be set with the API Key.\n\n    ## Permissions\n\n    When creating an API Key in [the application](https://system.journy.io) you will have the choice to give permissions to an API Key (which you can change later on). These permissions restrict the API Key from different actions. When an API Key tries to perform a certain action it doesn't have the permissions for, you will receive a `401: Unauthorized` response.\n\n    # Rate limiting\n\n    To prevent abuse of the API there is a maximum throughput of 100 requests per minute. If you need a higher throughput, please contact us.\n\n    To keep our platform healthy and stable, we'll block API keys that consistently hit our rate limits. Therefore, please consider taking this throughput into account.\n\n    In every response the headers `X-RateLimit-Limit` and `X-RateLimit-Remaining` will be set. The `X-RateLimit-Limit`-header will always contain the current limit of requests per minute. The `X-RateLimit-Remaining`-header will always contain the amount of requests you have left in the current sliding window.\n\n    # Errors\n\n    journy.io uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g. a required parameter was omitted). Codes in the 5xx range indicate an error with journy.io's servers (these are rare).\n\n    When performing a `POST`- or `PUT`-request with a requestBody, or when including parameters, these parameters and fields will automatically be checked and validated against the API Spec. When any error occurs, you will get a response with an `errors`-field, structured as follows:\n\n    ```json\n    {\n      \"errors\": {\n        \"parameters\": {\n          \"header\": {\n            \"headerParameterName\": \"Describe what's wrong with the header parameter.\",\n            ...\n          },\n          \"query\": {\n            \"queryParameterName\": \"Describe what's wrong with the query parameter.\",\n            ...\n          },\n          \"path\": {\n            \"pathParameterName\": \"Describe what's wrong with the path parameter.\",\n            ...\n          },\n        },\n        \"fields\": {\n          \"fieldName\": \"Describe what's wrong with the fieldName.\",\n          \"object.fieldName\": \"Describe what's wrong with the fieldName of the included object.\",\n           ...\n        }\n      }\n    }\n    ```\n\n    # Support\n\n    Looking for a specific endpoint? Documentation not clear? [We would love to help!](mailto:hi@journy.io)\n  termsOfService: https://www.journy.io/terms-of-use/\n  title: journy.io API docs\n  version: 1.0.0\n  x-apisguru-categories:\n    - customer_relation\n  x-logo:\n    altText: Journy.io\n    url: https://developers.journy.io/developers.png\n  x-origin:\n    - format: openapi\n      url: https://api.journy.io/spec.json\n      version: \"3.0\"\n  x-providerName: journy.io\nexternalDocs:\n  description: API Documentation\n  url: https://developers.journy.io\ntags:\n  - description: Endpoints for creating or updating users\n    name: Users\n  - description: Endpoints for creating or updating accounts\n    name: Accounts\n  - description: Endpoints for adding events\n    name: Events\n  - description: Endpoints for managing websites\n    name: Websites\n  - description: Endpoints for validating API keys\n    name: Validation\npaths:\n  /accounts/upsert:\n    post:\n      description: Endpoint used to create or update an account.\n      operationId: upsertAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: Update properties and/or members of an account\n              properties:\n                identification:\n                  description: Account identification requires an accountId, domain or both\n                  minProperties: 1\n                  properties:\n                    accountId:\n                      description: Unique identifier for the account in your database\n                      format: account-id\n                      type: string\n                    domain:\n                      description: The domain associated with the account (e.g. acme-inc.com)\n                      format: top-level-domain\n                      type: string\n                  type: object\n                members:\n                  description: The users that are member of this account\n                  items:\n                    description: Identification requires an accountId, domain or both\n                    properties:\n                      identification:\n                        description: User identification requires a userId, email or both\n                        minProperties: 1\n                        properties:\n                          email:\n                            description: Email address of the user\n                            format: email\n                            type: string\n                          userId:\n                            description: Unique identifier for the user in your database\n                            format: user-id\n                            type: string\n                        type: object\n                    required:\n                      - identification\n                    type: object\n                  type: array\n                properties:\n                  additionalProperties:\n                    oneOf:\n                      - nullable: true\n                        type: string\n                      - type: boolean\n                      - type: number\n                      - format: datetime\n                        type: string\n                      - items:\n                          format: non-empty-string\n                          type: string\n                        type: array\n                  description: The properties being set, possible values are strings, booleans, numbers and datetimes (ISO 8601)\n                  type: object\n              required:\n                - identification\n              type: object\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The object was created\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - description: The basic response containing the unique ID of the request and the response status\n                        properties:\n                          meta:\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                            required:\n                              - requestId\n                              - status\n                            type: object\n                        required:\n                          - meta\n                        type: object\n                      - description: The error message should specify what cause the error\n                        properties:\n                          message:\n                            type: string\n                        required:\n                          - message\n                        type: object\n                  - description: Specify the fields and/ or parameters that had errors\n                    properties:\n                      errors:\n                        description: Map that sums up all received values that seemed incorrect\n                        properties:\n                          fields:\n                            additionalProperties:\n                              type: string\n                            description: All input fields that seemed incorrect\n                            type: object\n                          parameters:\n                            description: All query-, header- and path- parameters that seemed incorrect\n                            properties:\n                              header:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              path:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              query:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                            type: object\n                        type: object\n                    required:\n                      - errors\n                    type: object\n          description: Bad request, some fields or parameters are incorrect\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: No API Key was provided or the key is not authorised to perform the action\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"429\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n      summary: Create or update account\n      tags:\n        - Accounts\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            await client.upsertAccount({\n              // required\n              accountId: \"accountId\",\n              domain: \"acme-inc.com\",\n\n              // optional\n              properties: {\n                name: \"ACME, Inc\",\n                mrr: 399,\n                plan: \"Pro\",\n                registered_at: new Date(...),\n                is_paying: true,\n                key_with_empty_value: \"\",\n                array_of_values: [\"value1\", \"value2\"],\n                this_property_will_be_deleted: null,\n              },\n\n              // optional\n              members: [\n                { userId: \"userId\" },\n                { userId: \"userId\" }\n              ]\n            });\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $client-\u003eupsertAccount([\n                \"accountId\" =\u003e \"accountId\",\n                \"domain\" =\u003e \"acme-inc.com\",\n\n                // optional\n                \"properties\" =\u003e [\n                    \"name\" =\u003e \"ACME, Inc\",\n                    \"mrr\" =\u003e 399,\n                    \"plan\" =\u003e \"Pro\",\n                    \"registered_at\" =\u003e new \\DateTimeImmutable(\"...\"),\n                    \"is_paying\" =\u003e true,\n                    \"key_with_empty_value\" =\u003e \"\",\n                    \"array_of_values\" =\u003e [\"value1\", \"value2\"],\n                    \"this_property_will_be_deleted\" =\u003e null,\n                ],\n\n                // optional\n                \"members\" =\u003e [\n                    [\"userId\" =\u003e \"userId\"],\n                    [\"userId\" =\u003e \"userId\"],\n                ],\n            ]);\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from journyio.client import Properties\n            from journyio.account_identified import AccountIdentified\n            from journyio.user_identified import UserIdentified\n            from datetime import datetime\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            account = AccountIdentified(\"accountId\", \"acme-inc.com\")\n            # or\n            account = AccountIdentified.by_account_id(\"accountId\")\n            # or\n            account = AccountIdentified.by_domain(\"acme-inc.com\")\n\n            properties = Properties()\n            properties[\"name\"] = \"ACME, Inc\"\n            properties[\"mrr\"] = 399\n            properties[\"plan\"] = \"Pro\"\n            properties[\"registered_at\"] = datetime.now()\n            properties[\"is_paying\"] = True\n            properties[\"key_with_empty_value\"] = \"\"\n            properties[\"this_property_will_be_deleted\"] = None\n            properties[\"array_of_values\"] = [\"value1\", \"value2\"]\n\n            member1 = UserIdentified.by_user_id(\"userId\")\n            member2 = UserIdentified.by_user_id(\"userId\")\n\n            client.upsert_account(account, properties, [member1, member2])\n      x-key-permissions:\n        - TrackData\n  \"/accounts/{accountId}/users\":\n    delete:\n      description: Endpoint used to remove a user from an account.\n      operationId: removeUserFromAccount\n      parameters:\n        - description: Unique identifier for the account in your database\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: The user being added/removed from the account\n              properties:\n                userId:\n                  description: Unique identifier for the user in your database\n                  format: user-id\n                  type: string\n              required:\n                - userId\n              type: object\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The object was created\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - description: The basic response containing the unique ID of the request and the response status\n                        properties:\n                          meta:\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                            required:\n                              - requestId\n                              - status\n                            type: object\n                        required:\n                          - meta\n                        type: object\n                      - description: The error message should specify what cause the error\n                        properties:\n                          message:\n                            type: string\n                        required:\n                          - message\n                        type: object\n                  - description: Specify the fields and/ or parameters that had errors\n                    properties:\n                      errors:\n                        description: Map that sums up all received values that seemed incorrect\n                        properties:\n                          fields:\n                            additionalProperties:\n                              type: string\n                            description: All input fields that seemed incorrect\n                            type: object\n                          parameters:\n                            description: All query-, header- and path- parameters that seemed incorrect\n                            properties:\n                              header:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              path:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              query:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                            type: object\n                        type: object\n                    required:\n                      - errors\n                    type: object\n          description: Bad request, some fields or parameters are incorrect\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: No API Key was provided or the key is not authorised to perform the action\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"403\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"429\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n      summary: Remove user from account\n      tags:\n        - Accounts\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n            import { Client } from \"@journyio/sdk\";\n            const client = Client.withDefaults('your-api-key');\n            await client.removeUserFromAccount({\n              accountId: \"accountId\",\n              userId: \"userId\"\n            });\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $client-\u003eremoveUserFromAccount(\n                \"accountId\",\n                \"userId\"\n            );\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            client.remove_user_from_account(\"accountId\", \"userId\")\n      x-key-permissions:\n        - TrackData\n    post:\n      description: Endpoint used to add a user to an account.\n      operationId: addUserToAccount\n      parameters:\n        - description: Unique identifier for the account in your database\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: The user being added/removed from the account\n              properties:\n                userId:\n                  description: Unique identifier for the user in your database\n                  format: user-id\n                  type: string\n              required:\n                - userId\n              type: object\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The object was created\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - description: The basic response containing the unique ID of the request and the response status\n                        properties:\n                          meta:\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                            required:\n                              - requestId\n                              - status\n                            type: object\n                        required:\n                          - meta\n                        type: object\n                      - description: The error message should specify what cause the error\n                        properties:\n                          message:\n                            type: string\n                        required:\n                          - message\n                        type: object\n                  - description: Specify the fields and/ or parameters that had errors\n                    properties:\n                      errors:\n                        description: Map that sums up all received values that seemed incorrect\n                        properties:\n                          fields:\n                            additionalProperties:\n                              type: string\n                            description: All input fields that seemed incorrect\n                            type: object\n                          parameters:\n                            description: All query-, header- and path- parameters that seemed incorrect\n                            properties:\n                              header:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              path:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              query:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                            type: object\n                        type: object\n                    required:\n                      - errors\n                    type: object\n          description: Bad request, some fields or parameters are incorrect\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: No API Key was provided or the key is not authorised to perform the action\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"429\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n      summary: Add user to account\n      tags:\n        - Accounts\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n            import { Client } from \"@journyio/sdk\";\n            const client = Client.withDefaults('your-api-key');\n            await client.addUserToAccount({\n              accountId: \"accountId\",\n              userId: \"userId\"\n            });\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $client-\u003eaddUserToAccount(\n                \"accountId\",\n                \"userId\"\n            );\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            client.add_user_to_account(\"accountId\", \"userId\")\n      x-key-permissions:\n        - TrackData\n  /events:\n    post:\n      description: Endpoint used to push an event for a user or an account.\n      operationId: trackJourneyEvent\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: Event for a user or an account\n              properties:\n                identification:\n                  description: Event identification requires a user, account or both\n                  minProperties: 1\n                  properties:\n                    account:\n                      description: Account identification requires an accountId, domain or both\n                      minProperties: 1\n                      properties:\n                        accountId:\n                          description: Unique identifier for the account in your database\n                          format: account-id\n                          type: string\n                        domain:\n                          description: The domain associated with the account (e.g. acme-inc.com)\n                          format: top-level-domain\n                          type: string\n                      type: object\n                    user:\n                      description: User identification requires a userId, email or both\n                      minProperties: 1\n                      properties:\n                        email:\n                          description: Email address of the user\n                          format: email\n                          type: string\n                        userId:\n                          description: Unique identifier for the user in your database\n                          format: user-id\n                          type: string\n                      type: object\n                  type: object\n                metadata:\n                  additionalProperties:\n                    oneOf:\n                      - type: string\n                      - type: boolean\n                      - type: number\n                      - format: datetime\n                        type: string\n                  description: Event metadata, possible values are strings, booleans, numbers and datetimes (ISO 8601)\n                  type: object\n                name:\n                  format: event-name\n                  type: string\n                triggeredAt:\n                  description: If left blank this defaults to the current datetime\n                  format: datetime\n                  type: string\n              required:\n                - identification\n                - name\n              type: object\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The object was created\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - description: The basic response containing the unique ID of the request and the response status\n                        properties:\n                          meta:\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                            required:\n                              - requestId\n                              - status\n                            type: object\n                        required:\n                          - meta\n                        type: object\n                      - description: The error message should specify what cause the error\n                        properties:\n                          message:\n                            type: string\n                        required:\n                          - message\n                        type: object\n                  - description: Specify the fields and/ or parameters that had errors\n                    properties:\n                      errors:\n                        description: Map that sums up all received values that seemed incorrect\n                        properties:\n                          fields:\n                            additionalProperties:\n                              type: string\n                            description: All input fields that seemed incorrect\n                            type: object\n                          parameters:\n                            description: All query-, header- and path- parameters that seemed incorrect\n                            properties:\n                              header:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              path:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              query:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                            type: object\n                        type: object\n                    required:\n                      - errors\n                    type: object\n          description: Bad request, some fields or parameters are incorrect\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: No API Key was provided or the key is not authorised to perform the action\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"403\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"429\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n      summary: Push event\n      tags:\n        - Events\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client, Event, UserIdentified, AccountIdentified } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            event = Event.forUser(\"login\", UserIdentified.byUserId(\"userId\"));\n\n            event = Event.forUser(\"some_historic_event\", UserIdentified.byUserId(\"userId\"))\n              .happenedAt(new Date(...))\n            ;\n\n            event = Event.forAccount(\"reached_monthly_volume\", AccountIdentified.byAccountId(\"accountId\"))\n              .withMetadata({\n                \"number\": 1313,\n                \"string\": \"string\",\n                \"boolean\": true,\n              })\n            ;\n\n            event = Event.forUserInAccount(\n              \"updated_settings\",\n              UserIdentified.byUserId(\"userId\"),\n              AccountIdentified.byAccountId(\"accountId\")\n            );\n\n            await client.addEvent(event);\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n            use JournyIO\\SDK\\Event;\n            use JournyIO\\SDK\\UserIdentified;\n            use JournyIO\\SDK\\AccountIdentified;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $event = Event::forUser(\"login\", UserIdentified::byUserId(\"userId\"));\n\n            $event = Event::forUser(\"some_historic_event\", UserIdentified::byUserId(\"userId\"))\n                -\u003ehappenedAt(new \\DateTimeImmutable(\"now\"))\n            ;\n\n            $event = Event::forAccount(\"reached_monthly_volume\", AccountIdentified::byAccountId(\"accountId\"))\n                -\u003ewithMetadata([\n                    \"number\" =\u003e 13313,\n                    \"string\" =\u003e \"string\",\n                    \"boolean\" =\u003e true,\n                ])\n            ;\n\n            $event = Event::forUserInAccount(\n                \"updated_settings\",\n                UserIdentified::byUserId(\"userId\"),\n                AccountIdentified::byAccountId(\"accountId\")\n            );\n\n            $client-\u003eaddEvent($event);\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from datetime import datetime\n            from journyio.events import Event, Metadata\n            from journyio.account_identified import AccountIdentified\n            from journyio.user_identified import UserIdentified\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            account = AccountIdentified(\"accountId\", \"www.domain.tld\")\n            user = UserIdentified(\"userId\", \"name@domain.tld\")\n\n            metadata = Metadata()\n            metadata[\"number\"] = 454554\n            metadata[\"boolean\"] = False\n            metadata[\"string\"] = \"string\"\n\n            event = Event()\n                .for_user_in_account(\"settings_updated\", user, account)\n                .happened_at(datetime.now())\n                .with_metadata(metadata)\n\n            client.add_event(event)\n      x-key-permissions:\n        - TrackData\n  /link:\n    post:\n      description: Endpoint used to link web activity to a user.\n      operationId: link\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: Link web activity to user\n              properties:\n                deviceId:\n                  format: non-empty-string\n                  type: string\n                identification:\n                  description: User identification requires a userId, email or both\n                  minProperties: 1\n                  properties:\n                    email:\n                      description: Email address of the user\n                      format: email\n                      type: string\n                    userId:\n                      description: Unique identifier for the user in your database\n                      format: user-id\n                      type: string\n                  type: object\n              required:\n                - deviceId\n                - identification\n              type: object\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The object was created\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - description: The basic response containing the unique ID of the request and the response status\n                        properties:\n                          meta:\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                            required:\n                              - requestId\n                              - status\n                            type: object\n                        required:\n                          - meta\n                        type: object\n                      - description: The error message should specify what cause the error\n                        properties:\n                          message:\n                            type: string\n                        required:\n                          - message\n                        type: object\n                  - description: Specify the fields and/ or parameters that had errors\n                    properties:\n                      errors:\n                        description: Map that sums up all received values that seemed incorrect\n                        properties:\n                          fields:\n                            additionalProperties:\n                              type: string\n                            description: All input fields that seemed incorrect\n                            type: object\n                          parameters:\n                            description: All query-, header- and path- parameters that seemed incorrect\n                            properties:\n                              header:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              path:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              query:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                            type: object\n                        type: object\n                    required:\n                      - errors\n                    type: object\n          description: Bad request, some fields or parameters are incorrect\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: No API Key was provided or the key is not authorised to perform the action\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"403\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"429\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n      summary: Link web activity to user\n      tags:\n        - Users\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            await client.link({\n              deviceId: request.cookies[\"__journey\"],\n\n              userId: request.user.id,\n              // or\n              email: request.user.email,\n            });\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $client-\u003elink([\n                \"deviceId\" =\u003e \"deviceId\",\n\n                \"userId\" =\u003e \"userId\",\n                // or\n                \"email\" =\u003e \"email\",\n            ]);\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from journyio.user_identified import UserIdentified\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            user = UserIdentified(\"userId\", \"name@domain.tld\")\n            # or\n            user = UserIdentified.by_user_id(\"userId\")\n            # or\n            user = UserIdentified.by_email(\"name@domain.tld\")\n\n            client.link(user, \"deviceId\")\n      x-key-permissions:\n        - TrackData\n  /tracking/snippet:\n    get:\n      description: Endpoint used to get a snippet for a website.\n      operationId: getTrackingSnippet\n      parameters:\n        - description: The domain you want to receive a snippet for\n          in: query\n          name: domain\n          required: true\n          schema:\n            format: domain\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - properties:\n                      data:\n                        description: A snippet\n                        properties:\n                          domain:\n                            format: domain\n                            type: string\n                          snippet:\n                            type: string\n                        required:\n                          - domain\n                          - snippet\n                        type: object\n                    required:\n                      - data\n                    type: object\n          description: Snippet\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - description: The basic response containing the unique ID of the request and the response status\n                        properties:\n                          meta:\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                            required:\n                              - requestId\n                              - status\n                            type: object\n                        required:\n                          - meta\n                        type: object\n                      - description: The error message should specify what cause the error\n                        properties:\n                          message:\n                            type: string\n                        required:\n                          - message\n                        type: object\n                  - description: Specify the fields and/ or parameters that had errors\n                    properties:\n                      errors:\n                        description: Map that sums up all received values that seemed incorrect\n                        properties:\n                          fields:\n                            additionalProperties:\n                              type: string\n                            description: All input fields that seemed incorrect\n                            type: object\n                          parameters:\n                            description: All query-, header- and path- parameters that seemed incorrect\n                            properties:\n                              header:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              path:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              query:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                            type: object\n                        type: object\n                    required:\n                      - errors\n                    type: object\n          description: Bad request, some fields or parameters are incorrect\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: No API Key was provided or the key is not authorised to perform the action\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"403\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"404\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Not found\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"429\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n      summary: Get snippet for a website\n      tags:\n        - Websites\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            const result = await client.getTrackingSnippet({\n              domain: \"www.journy.io\",\n            });\n\n            if (result.success) {\n              console.log(result.data.snippet); // string\n              console.log(result.data.domain); // string\n            }\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $call = $client-\u003egetTrackingSnippet(\"blog.acme.com\");\n\n            if ($call-\u003esucceeded()) {\n                $result = $call-\u003eresult();\n\n                if ($result instanceof TrackingSnippet) {\n                    var_dump($result-\u003egetSnippet()); // string\n                    var_dump($result-\u003egetDomain()); // string\n                }\n            } else {\n                var_dump($call-\u003eerrors());\n            }\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from journyio.results import Success\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            client.get_tracking_snippet(\"blog.acme.com\")\n\n            if isinstance(result, Success):\n              print(result.request_id)  # str\n              print(result.calls_remaining)  # int\n              print(result.data)  # TrackingSnippetResonse\n              print(result.domain)  # str\n              print(result.snippet)  # str\n      x-key-permissions:\n        - GetTrackingSnippet\n  /users/upsert:\n    post:\n      description: Endpoint to create or update a user.\n      operationId: upsertUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: Update properties of a user\n              properties:\n                identification:\n                  description: User identification requires a userId, email or both\n                  minProperties: 1\n                  properties:\n                    email:\n                      description: Email address of the user\n                      format: email\n                      type: string\n                    userId:\n                      description: Unique identifier for the user in your database\n                      format: user-id\n                      type: string\n                  type: object\n                properties:\n                  additionalProperties:\n                    oneOf:\n                      - nullable: true\n                        type: string\n                      - type: boolean\n                      - type: number\n                      - format: datetime\n                        type: string\n                      - items:\n                          format: non-empty-string\n                          type: string\n                        type: array\n                  description: The properties being set, possible values are strings, booleans, numbers and datetimes (ISO 8601)\n                  type: object\n              required:\n                - identification\n              type: object\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The object was created\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Object was created\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - allOf:\n                      - description: The basic response containing the unique ID of the request and the response status\n                        properties:\n                          meta:\n                            properties:\n                              requestId:\n                                type: string\n                              status:\n                                type: number\n                            required:\n                              - requestId\n                              - status\n                            type: object\n                        required:\n                          - meta\n                        type: object\n                      - description: The error message should specify what cause the error\n                        properties:\n                          message:\n                            type: string\n                        required:\n                          - message\n                        type: object\n                  - description: Specify the fields and/ or parameters that had errors\n                    properties:\n                      errors:\n                        description: Map that sums up all received values that seemed incorrect\n                        properties:\n                          fields:\n                            additionalProperties:\n                              type: string\n                            description: All input fields that seemed incorrect\n                            type: object\n                          parameters:\n                            description: All query-, header- and path- parameters that seemed incorrect\n                            properties:\n                              header:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              path:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                              query:\n                                additionalProperties:\n                                  type: string\n                                type: object\n                            type: object\n                        type: object\n                    required:\n                      - errors\n                    type: object\n          description: Bad request, some fields or parameters are incorrect\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: No API Key was provided or the key is not authorised to perform the action\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"403\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"429\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n      summary: Create or update user\n      tags:\n        - Users\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            await client.upsertUser({\n              // required\n              userId: \"userId\",\n              email: \"name@domain.tld\",\n\n              // optional\n              properties: {\n                full_name: \"John Doe\",\n                first_name: \"John\",\n                last_name: \"Doe\",\n                phone: \"123\",\n                registered_at: new Date(/* ... */),\n                is_admin: true,\n                age: 26,\n                array_of_values: [\"value1\", \"value2\"],\n                key_with_empty_value: \"\",\n                this_property_will_be_deleted: null,\n              },\n            });\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $client-\u003eupsertUser([\n                // required\n                \"userId\" =\u003e \"userId\",\n                \"email\" =\u003e \"name@domain.tld\",\n\n                // optional\n                \"properties\" =\u003e [\n                    \"full_name\" =\u003e \"John Doe\",\n                    \"first_name\" =\u003e \"John\",\n                    \"last_name\" =\u003e \"Doe\",\n                    \"phone\" =\u003e \"123\",\n                    \"is_admin\" =\u003e true,\n                    \"registered_at\" =\u003e new \\DateTimeImmutable(\"...\"),\n                    \"age\" =\u003e 26,\n                    \"array_of_values\" =\u003e [\"value1\", \"value2\"],\n                    \"key_with_empty_value\" =\u003e \"\",\n                    \"this_property_will_be_deleted\" =\u003e null,\n                ],\n            ]);\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from journyio.client import Properties\n            from journyio.user_identified import UserIdentified\n            from datetime import datetime\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            user = UserIdentified(\"userId\", \"name@domain.tld\")\n            # or\n            user = UserIdentified.by_user_id(\"userId\")\n            # or\n            user = UserIdentified.by_email(\"name@domain.tld\")\n\n            properties = Properties()\n            properties[\"full_name\"] = \"John Doe\"\n            properties[\"first_name\"] = \"John\"\n            properties[\"last_name\"] = \"Doe\"\n            properties[\"phone\"] = \"123\"\n            properties[\"is_admin\"] = True\n            properties[\"registered_at\"] = datetime.now()\n            properties[\"age\"] = 26\n            properties[\"array_of_values\"] = [\"value1\", \"value2\"]\n            properties[\"key_with_empty_value\"] = \"\"\n            properties[\"this_property_will_be_deleted\"] = None\n\n            client.upsert_user(user, properties)\n      x-key-permissions:\n        - TrackData\n  /validate:\n    get:\n      description: Endpoint used to test the validity and some basic information about a specific API Key.\n      operationId: getValidity\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - properties:\n                      data:\n                        description: Validation of API Key\n                        properties:\n                          permissions:\n                            items:\n                              type: string\n                            type: array\n                        required:\n                          - permissions\n                        type: object\n                    required:\n                      - data\n                    type: object\n          description: Key validation\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"401\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: No API Key was provided or the key is not authorised to perform the action\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"403\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: The API Key provided is currently not enabled\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"429\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: Too many API requests were send\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n        \"500\":\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - description: The basic response containing the unique ID of the request and the response status\n                    properties:\n                      meta:\n                        properties:\n                          requestId:\n                            type: string\n                          status:\n                            type: number\n                        required:\n                          - requestId\n                          - status\n                        type: object\n                    required:\n                      - meta\n                    type: object\n                  - description: The error message should specify what cause the error\n                    properties:\n                      message:\n                        type: string\n                    required:\n                      - message\n                    type: object\n          description: An unexpected error occurred\n          headers:\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                type: integer\n      summary: Validate API key\n      tags:\n        - Validation\n      x-codeSamples:\n        - lang: JavaScript\n          source: |-\n            // https://github.com/journy-io/js-sdk\n\n            import { Client } from \"@journyio/sdk\";\n\n            const client = Client.withDefaults('your-api-key');\n\n            const result = await client.getApiKeyDetails();\n\n            if (result.success) {\n              console.log(result.data.permissions); // string[]\n            }\n        - lang: PHP\n          source: |-\n            \u003c?php\n\n            // https://github.com/journy-io/php-sdk\n\n            use JournyIO\\SDK\\Client;\n\n            $client = Client::withDefaults(\"your-api-key\");\n\n            $call = $client-\u003egetApiKeyDetails();\n\n            if ($call-\u003esucceeded()) {\n                $result = $call-\u003eresult();\n\n                if ($result instanceof ApiKeyDetails) {\n                    var_dump($result-\u003egetPermissions()); // string[]\n                }\n            } else {\n                var_dump($call-\u003eerrors());\n            }\n        - lang: Python\n          source: |-\n            # https://github.com/journy-io/python-sdk\n\n            from journyio.client import Client, Config\n            from journyio.results import Success\n\n            config = Config(\"api-key-secret\")\n            http_client = HttpClientRequests()\n            client = Client(http_client, config)\n\n            client.get_api_key_details()\n\n            if isinstance(result, Success):\n                print(result.request_id)  # str\n                print(result.calls_remaining)  # int\n                print(result.data)  # ApiKeyDetails\n                print(result.permissions)  # list of strings denoting the permissions\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/journy.io/1.0.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/journy.io/1.0.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/accounts/{accountId}/users\": post: responses: 400: contents: application/json: generate schema: allOf: schema type mismatch:  and object",
	"NotImplemented": [
		"sum types with same names"
	]
}