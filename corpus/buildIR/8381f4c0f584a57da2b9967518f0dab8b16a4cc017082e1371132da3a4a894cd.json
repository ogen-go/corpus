{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EMResearch/EvoMaster"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "core-it/src/test/resources/APIs_guru/amazonaws.com/iotsecuretunneling/2018-10-05/openapi.yaml",
			"byteSize": 27429,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-10-05'\n  x-release: v4\n  title: AWS IoT Secure Tunneling\n  description: '\u003cfullname\u003eAWS IoT Secure Tunneling\u003c/fullname\u003e \u003cp\u003eAWS IoT Secure Tunnling enables you to create remote connections to devices deployed in the field.\u003c/p\u003e \u003cp\u003eFor more information about how AWS IoT Secure Tunneling works, see \u003ca href=\"https://docs.aws.amazon.com/iot/latest/developerguide/secure-tunneling.html\"\u003eAWS IoT Secure Tunneling\u003c/a\u003e.\u003c/p\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: iotsecuretunneling\n  x-aws-signingName: IoTSecuredTunneling\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotsecuretunneling-2018-10-05.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/iot/'\nservers:\n  - url: 'http://api.tunneling.iot.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS IoT Secure Tunneling multi-region endpoint\n  - url: 'https://api.tunneling.iot.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS IoT Secure Tunneling multi-region endpoint\n  - url: 'http://api.tunneling.iot.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT Secure Tunneling endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://api.tunneling.iot.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT Secure Tunneling endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#X-Amz-Target=IoTSecuredTunneling.CloseTunnel:\n    post:\n      operationId: CloseTunnel\n      description: 'Closes a tunnel identified by the unique tunnel id. When a \u003ccode\u003eCloseTunnel\u003c/code\u003e request is received, we close the WebSocket connections between the client and proxy server so no data can be transmitted.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloseTunnelResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloseTunnelRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - IoTSecuredTunneling.CloseTunnel\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=IoTSecuredTunneling.DescribeTunnel:\n    post:\n      operationId: DescribeTunnel\n      description: Gets information about a tunnel identified by the unique tunnel id.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeTunnelResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeTunnelRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - IoTSecuredTunneling.DescribeTunnel\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=IoTSecuredTunneling.ListTagsForResource:\n    post:\n      operationId: ListTagsForResource\n      description: Lists the tags for the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTagsForResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - IoTSecuredTunneling.ListTagsForResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=IoTSecuredTunneling.ListTunnels:\n    post:\n      operationId: ListTunnels\n      description: 'List all tunnels for an AWS account. Tunnels are listed by creation time in descending order, newer tunnels will be listed before older tunnels.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTunnelsResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTunnelsRequest'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - IoTSecuredTunneling.ListTunnels\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=IoTSecuredTunneling.OpenTunnel:\n    post:\n      operationId: OpenTunnel\n      description: 'Creates a new tunnel, and returns two client access tokens for clients to use to connect to the AWS IoT Secure Tunneling proxy server.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OpenTunnelResponse'\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OpenTunnelRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - IoTSecuredTunneling.OpenTunnel\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=IoTSecuredTunneling.TagResource:\n    post:\n      operationId: TagResource\n      description: A resource tag.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - IoTSecuredTunneling.TagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=IoTSecuredTunneling.UntagResource:\n    post:\n      operationId: UntagResource\n      description: Removes a tag from a resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UntagResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - IoTSecuredTunneling.UntagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CloseTunnelResponse:\n      type: object\n      properties: {}\n    CloseTunnelRequest:\n      type: object\n      required:\n        - tunnelId\n      title: CloseTunnelRequest\n      properties:\n        tunnelId:\n          allOf:\n            - $ref: '#/components/schemas/TunnelId'\n            - description: The ID of the tunnel to close.\n        delete:\n          allOf:\n            - $ref: '#/components/schemas/DeleteFlag'\n            - description: 'When set to true, AWS IoT Secure Tunneling deletes the tunnel data immediately.'\n    ResourceNotFoundException: {}\n    DescribeTunnelResponse:\n      type: object\n      properties:\n        tunnel:\n          allOf:\n            - $ref: '#/components/schemas/Tunnel'\n            - description: The tunnel being described.\n    DescribeTunnelRequest:\n      type: object\n      required:\n        - tunnelId\n      title: DescribeTunnelRequest\n      properties:\n        tunnelId:\n          allOf:\n            - $ref: '#/components/schemas/TunnelId'\n            - description: The tunnel to describe.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags for the specified resource.\n    ListTagsForResourceRequest:\n      type: object\n      required:\n        - resourceArn\n      title: ListTagsForResourceRequest\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The resource ARN.\n    ListTunnelsResponse:\n      type: object\n      properties:\n        tunnelSummaries:\n          allOf:\n            - $ref: '#/components/schemas/TunnelSummaryList'\n            - description: A short description of the tunnels in an AWS account.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A token to used to retrieve the next set of results.\n    ListTunnelsRequest:\n      type: object\n      title: ListTunnelsRequest\n      properties:\n        thingName:\n          allOf:\n            - $ref: '#/components/schemas/ThingName'\n            - description: The name of the IoT thing associated with the destination device.\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: The maximum number of results to return at once.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A token to retrieve the next set of results.\n    OpenTunnelResponse:\n      type: object\n      properties:\n        tunnelId:\n          allOf:\n            - $ref: '#/components/schemas/TunnelId'\n            - description: A unique alpha-numeric tunnel ID.\n        tunnelArn:\n          allOf:\n            - $ref: '#/components/schemas/TunnelArn'\n            - description: 'The Amazon Resource Name for the tunnel. The tunnel ARN format is \u003ccode\u003earn:aws:tunnel:\u0026lt;region\u0026gt;:\u0026lt;account-id\u0026gt;:tunnel/\u0026lt;tunnel-id\u0026gt;\u003c/code\u003e '\n        sourceAccessToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientAccessToken'\n            - description: The access token the source local proxy uses to connect to AWS IoT Secure Tunneling.\n        destinationAccessToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientAccessToken'\n            - description: The access token the destination local proxy uses to connect to AWS IoT Secure Tunneling.\n    OpenTunnelRequest:\n      type: object\n      title: OpenTunnelRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: 'A short text description of the tunnel. '\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: A collection of tag metadata.\n        destinationConfig:\n          allOf:\n            - $ref: '#/components/schemas/DestinationConfig'\n            - description: The destination configuration for the OpenTunnel request.\n        timeoutConfig:\n          allOf:\n            - $ref: '#/components/schemas/TimeoutConfig'\n            - description: Timeout configuration for a tunnel.\n    LimitExceededException: {}\n    TagResourceResponse:\n      type: object\n      properties: {}\n    TagResourceRequest:\n      type: object\n      required:\n        - resourceArn\n        - tags\n      title: TagResourceRequest\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The ARN of the resource.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags for the resource.\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceRequest:\n      type: object\n      required:\n        - resourceArn\n        - tagKeys\n      title: UntagResourceRequest\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/AmazonResourceName'\n            - description: The resource ARN.\n        tagKeys:\n          allOf:\n            - $ref: '#/components/schemas/TagKeyList'\n            - description: The keys of the tags to remove.\n    AmazonResourceName:\n      type: string\n      minLength: 1\n      maxLength: 1011\n    ClientAccessToken:\n      type: string\n      format: password\n    TunnelId:\n      type: string\n      pattern: '[a-zA-Z0-9_\\-+=:]{1,128}'\n    DeleteFlag:\n      type: boolean\n    ConnectionStatus:\n      type: string\n      enum:\n        - CONNECTED\n        - DISCONNECTED\n    DateType:\n      type: string\n      format: date-time\n    ConnectionState:\n      type: object\n      properties:\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ConnectionStatus'\n            - description: The connection status of the tunnel. Valid values are \u003ccode\u003eCONNECTED\u003c/code\u003e and \u003ccode\u003eDISCONNECTED\u003c/code\u003e.\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/DateType'\n            - description: The last time the connection status was updated.\n      description: The state of a connection.\n    Tunnel:\n      type: object\n      properties:\n        tunnelId:\n          allOf:\n            - $ref: '#/components/schemas/TunnelId'\n            - description: A unique alpha-numeric ID that identifies a tunnel.\n        tunnelArn:\n          allOf:\n            - $ref: '#/components/schemas/TunnelArn'\n            - description: 'The Amazon Resource Name (ARN) of a tunnel. The tunnel ARN format is \u003ccode\u003earn:aws:tunnel:\u0026lt;region\u0026gt;:\u0026lt;account-id\u0026gt;:tunnel/\u0026lt;tunnel-id\u0026gt;\u003c/code\u003e '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/TunnelStatus'\n            - description: 'The status of a tunnel. Valid values are: Open and Closed.'\n        sourceConnectionState:\n          allOf:\n            - $ref: '#/components/schemas/ConnectionState'\n            - description: The connection state of the source application.\n        destinationConnectionState:\n          allOf:\n            - $ref: '#/components/schemas/ConnectionState'\n            - description: The connection state of the destination application.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the tunnel.\n        destinationConfig:\n          allOf:\n            - $ref: '#/components/schemas/DestinationConfig'\n            - description: The destination configuration that specifies the thing name of the destination device and a service name that the local proxy uses to connect to the destination application.\n        timeoutConfig:\n          allOf:\n            - $ref: '#/components/schemas/TimeoutConfig'\n            - description: Timeout configuration for the tunnel.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: A list of tag metadata associated with the secure tunnel.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/DateType'\n            - description: The time when the tunnel was created.\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/DateType'\n            - description: The last time the tunnel was updated.\n      description: A connection between a source computer and a destination device.\n    Description:\n      type: string\n      pattern: '[^\\p{C}]{1,2048}'\n    ThingName:\n      type: string\n      pattern: '[a-zA-Z0-9:_-]+'\n      minLength: 1\n      maxLength: 128\n    ServiceList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Service'\n      minItems: 1\n    DestinationConfig:\n      type: object\n      required:\n        - services\n      properties:\n        thingName:\n          allOf:\n            - $ref: '#/components/schemas/ThingName'\n            - description: The name of the IoT thing to which you want to connect.\n        services:\n          allOf:\n            - $ref: '#/components/schemas/ServiceList'\n            - description: A list of service names that identity the target application. The AWS IoT client running on the destination device reads this value and uses it to look up a port or an IP address and a port. The AWS IoT client instantiates the local proxy which uses this information to connect to the destination application.\n      description: The destination configuration.\n    TagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n      minItems: 1\n      maxItems: 200\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 100\n    NextToken:\n      type: string\n      pattern: '[a-zA-Z0-9_=-]{1,4096}'\n    TunnelSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TunnelSummary'\n    TimeoutConfig:\n      type: object\n      properties:\n        maxLifetimeTimeoutMinutes:\n          allOf:\n            - $ref: '#/components/schemas/TimeoutInMin'\n            - description: 'The maximum amount of time (in minutes) a tunnel can remain open. If not specified, maxLifetimeTimeoutMinutes defaults to 720 minutes. Valid values are from 1 minute to 12 hours (720 minutes) '\n      description: Tunnel timeout configuration.\n    TunnelArn:\n      type: string\n      minLength: 1\n      maxLength: 1600\n    Service:\n      type: string\n      pattern: '[a-zA-Z0-9:_-]+'\n      minLength: 1\n      maxLength: 128\n    TagKey:\n      type: string\n      pattern: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'\n      minLength: 1\n      maxLength: 128\n    TagValue:\n      type: string\n      pattern: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'\n      minLength: 0\n      maxLength: 256\n    Tag:\n      type: object\n      required:\n        - key\n        - value\n      properties:\n        key:\n          allOf:\n            - $ref: '#/components/schemas/TagKey'\n            - description: The key of the tag.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/TagValue'\n            - description: The value of the tag.\n      description: An arbitary key/value pair used to add searchable metadata to secure tunnel resources.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 0\n      maxItems: 200\n    TimeoutInMin:\n      type: integer\n      minimum: 1\n      maximum: 720\n    TunnelStatus:\n      type: string\n      enum:\n        - OPEN\n        - CLOSED\n    TunnelSummary:\n      type: object\n      properties:\n        tunnelId:\n          allOf:\n            - $ref: '#/components/schemas/TunnelId'\n            - description: The unique alpha-numeric identifier for the tunnel.\n        tunnelArn:\n          allOf:\n            - $ref: '#/components/schemas/TunnelArn'\n            - description: 'The Amazon Resource Name of the tunnel. The tunnel ARN format is \u003ccode\u003earn:aws:tunnel:\u0026lt;region\u0026gt;:\u0026lt;account-id\u0026gt;:tunnel/\u0026lt;tunnel-id\u0026gt;\u003c/code\u003e '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/TunnelStatus'\n            - description: 'The status of a tunnel. Valid values are: Open and Closed.'\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the tunnel.\n        createdAt:\n          allOf:\n            - $ref: '#/components/schemas/DateType'\n            - description: The time the tunnel was created.\n        lastUpdatedAt:\n          allOf:\n            - $ref: '#/components/schemas/DateType'\n            - description: The time the tunnel was last updated.\n      description: Information about the tunnel.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/EMResearch/EvoMaster@910784d611073e73d97ffc611421bbda37d78bb7/-/blob/core-it/src/test/resources/APIs_guru/amazonaws.com/iotsecuretunneling/2018-10-05/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/EMResearch/EvoMaster/blob/910784d611073e73d97ffc611421bbda37d78bb7/core-it/src/test/resources/APIs_guru/amazonaws.com/iotsecuretunneling/2018-10-05/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/\": post: requestBody: contents: media: \"application/json\": generate schema: field delete: allOf: schema type mismatch: boolean and "
}