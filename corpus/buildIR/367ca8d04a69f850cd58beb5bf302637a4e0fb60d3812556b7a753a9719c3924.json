{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/light-proxy"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "config/local/openapi.yaml",
			"byteSize": 6118,
			"content": "openapi: 3.0.0\ninfo:\n    version: 1.0.0\n    title: Swagger bookstore\n    license:\n        name: MIT\nservers:\n    - url: 'http://books.swagger.io/api'\npaths:\n    /books:\n        get:\n            summary: List all books\n            operationId: listBooks\n            tags:\n                - books\n            parameters:\n                - name: limit\n                  in: query\n                  description: How many items to return at one time (max 100)\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n            security:\n                - bookstore_auth:\n                      - 'read:books'\n            responses:\n                '200':\n                    description: An paged array of pets\n                    headers:\n                        x-next:\n                            description: A link to the next page of responses\n                            schema:\n                                type: string\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/Book'\n                default:\n                    description: unexpected error\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n        post:\n            summary: Create a book\n            operationId: createBooks\n            requestBody:\n                description: Book to add to the store\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Book'\n            tags:\n                - books\n            security:\n                - bookstore_auth:\n                      - 'read:books'\n                      - 'write:books'\n            responses:\n                '200':\n                    description: Expected response to a valid request\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Book'\n                default:\n                    description: unexpected error\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n    '/books/{bookId}':\n        put:\n            summary: update a specific book\n            operationId: updateById\n            tags:\n                - books\n            parameters:\n                - name: bookId\n                  in: path\n                  required: true\n                  description: The id of the pet to retrieve\n                  schema:\n                      type: string\n            requestBody:\n                description: Book to be update to the store\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Book'\n            security:\n                - bookstore_auth:\n                      - 'read:books'\n            responses:\n                '200':\n                    description: Expected response to a valid request\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Book'\n                default:\n                    description: unexpected error\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n        delete:\n            summary: Delete a specific book\n            operationId: deleteBookById\n            tags:\n                - books\n            parameters:\n                - name: bookId\n                  in: path\n                  required: true\n                  description: The id of the book to delete\n                  schema:\n                      type: string\n                - name: key\n                  in: header\n                  required: true\n                  description: The key header\n                  schema:\n                      type: string\n            security:\n                - bookstore_auth:\n                      - 'write:books'\n            responses:\n                '200':\n                    description: Expected response to a valid request\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Book'\n                default:\n                    description: unexpected error\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Error'\ncomponents:\n    securitySchemes:\n        bookstore_auth:\n            type: oauth2\n            description: This API uses OAuth 2 with the client credential grant flow.\n            flows:\n                clientCredentials:\n                    tokenUrl: 'https://localhost:6882/token'\n                    scopes:\n                        'write:book': modify books in your account\n                        'read:book': read your books\n    schemas:\n        Book:\n            type: object\n            required:\n                - title\n            properties:\n                id:\n                    type: integer\n                    format: int64\n                author:\n                    type: string\n                title:\n                    type: string\n        Error:\n            type: object\n            required:\n                - code\n                - message\n            properties:\n                code:\n                    type: integer\n                    format: int32\n                message:\n                    type: string\n",
			"canonicalURL": "/github.com/networknt/light-proxy@a2e7f131c77263a3954f1a216a251a254d2c78ad/-/blob/config/local/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/light-proxy/blob/a2e7f131c77263a3954f1a216a251a254d2c78ad/config/local/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/books\": get: security: security \"bookstore_auth\" (index 0): flow \"clientCredentials\": unknown scope \"read:books\""
}