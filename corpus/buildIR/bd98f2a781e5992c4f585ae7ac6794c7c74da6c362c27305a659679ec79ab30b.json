{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dipjyotimetia/HybridTestFramework"
		},
		"file": {
			"name": "api.cloud.expanded.yml",
			"size": 0,
			"path": "contract/src/main/openapi/zephyr/api.cloud.expanded.yml",
			"byteSize": 140636,
			"content": "openapi: 3.0.3\ninfo:\n  title: Zephyr Scale Cloud API\n  description: \"\\n# Introduction\\n\\nThis is the **Zephyr Scale Cloud** API. If you\\\n    \\ are looking for the Server API, please refer to the [documentation](https://support.smartbear.com/zephyr-scale-server/docs/)\\\n    \\ for more information.\\n\\nThis API uses the OpenAPI specification. If you want\\\n    \\ to generate clients for different languages, please use the link above to download\\\n    \\ the API specification and use it with your preferred tools.\\n\\nFor feature requests\\\n    \\ or general support, please head to our [support site](https://smartbear.atlassian.net/servicedesk/customer/portal/42).\\n\\\n    \\n# Authentication\\nThe API authentication is based on JSON Web Token (JWT), which\\\n    \\ is a key for accessing the API. Authenticating using JWT requires the following\\\n    \\ steps:\\n* Generate a key\\n* Make authenticated requests\\n\\n## Generate a Key\\n\\\n    For accessing the API, you must generate an access key in Jira. To generate an\\\n    \\ access token, click on your profile picture at the page bottom left, and\\nchoose\\\n    \\ the option “Zephyr Scale API keys\\\". For more information, please check out\\\n    \\ the [documentation](https://support.smartbear.com/zephyr-scale-cloud/docs/api-and-test-automation/generating-access-keys.html).\\n\\\n    \\n## Accessing the API\\nThe API is available at the following base URL:\\n```\\n\\\n    https://api.zephyrscale.smartbear.com/v2\\n```\\nFor example, the final URL for\\\n    \\ retrieving test cases would be:\\n```\\nhttps://api.zephyrscale.smartbear.com/v2/testcases\\n\\\n    ```\\n\\n## Making Authenticated Requests\\nTo authenticate subsequent API requests,\\\n    \\ you must provide a valid token in an HTTP header, which is the key generated\\\n    \\ on the previous step:\\n```\\nAuthorization: Bearer {bearer_token}\\n```\\n# Representing\\\n    \\ Users\\n\\nPrevious API definitions used Atlassian User Keys to identify users.\\\n    \\ This parameter is deprecated because of privacy\\nchanges. Use Atlassian Account\\\n    \\ ID instead.\\n\\n\\nAtlassian Account IDs are globally unique opaque identifiers\\\n    \\ for identifying a user. Every Atlassian Account has a\\nID which is assigned\\\n    \\ when the account is created and is immutable. Account IDs contain no personally\\\n    \\ identifiable\\ninformation and are only used to retrieve user information ondemand.\\\n    \\ This API does not return any user information\\nother than the Account ID (with\\\n    \\ the exception of the deprecated user keys during the deprecation period).\\n\"\n  contact:\n    name: SmartBear - Zephyr Scale Support\n    url: https://smartbear.atlassian.net/servicedesk/customer/portal/42\n  version: \"2\"\n  x-logo:\n    url: https://smartbear-tm4j-prod-us-west-2-api-docs.s3-us-west-2.amazonaws.com/images/zs-logo.svg\n    altText: Zephyr Scale Cloud\nservers:\n- url: https://api.zephyrscale.smartbear.com/v2\nsecurity:\n- AccessToken: []\ntags:\n- name: Test Cases\n  description: Operations related to test cases.\n- name: Test Cycles\n  description: Operations related to test cycles.\n- name: Test Executions\n  description: Operations related to test executions.\n- name: Folders\n  description: Operations related to folders.\n- name: Statuses\n  description: Operations related to statuses.\n- name: Priorities\n  description: Operations related to priorities.\n- name: Environments\n  description: Operations related to environments.\n- name: Projects\n  description: Operations related to projects.\n- name: Links\n  description: Operations related to links.\n- name: Automations\n  description: Operations related to test case automations.\npaths:\n  /testcases:\n    get:\n      tags:\n      - Test Cases\n      summary: Get test cases\n      description: Retrieves all test cases. Query parameters can be used to filter\n        the results.\n      operationId: listTestCases\n      parameters:\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: folderId\n        in: query\n        description: Folder ID filter\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestCaseList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n    post:\n      tags:\n      - Test Cases\n      summary: Create test case\n      description: |\n        Creates a test case. Fields `priorityName` and `statusName` will be set to default values if not informed. Default values are usually “Normal” for `priorityName` and “Draft” for `statusName`. All required test case custom fields should be present in the request.\n      operationId: createTestCase\n      requestBody:\n        description: Test Case Input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestCaseInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyedCreatedResource'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcases/{testCaseKey}:\n    get:\n      tags:\n      - Test Cases\n      summary: Get test case\n      description: Returns a test case for the given key.\n      operationId: getTestCase\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestCase'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n    put:\n      tags:\n      - Test Cases\n      summary: Update test case\n      description: \"Updates an existing test case. If the project has test case custom\\\n        \\ fields, all custom fields should be present in the request. To leave any\\\n        \\ of them blank, please set them null if they are not required custom fields.\\n\"\n      operationId: updateTestCase\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      requestBody:\n        description: Test Case Update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestCase'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcases/{testCaseKey}/links:\n    get:\n      tags:\n      - Test Cases\n      summary: Get links\n      description: Returns links for a test case with specified key.\n      operationId: getTestCaseLinks\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestCaseLinkList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcases/{testCaseKey}/links/issues:\n    post:\n      tags:\n      - Test Cases\n      summary: Create issue links\n      description: Creates a link between a test case and a Jira issue.\n      operationId: createTestCaseIssueLinks\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      requestBody:\n        description: Issue Link Input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IssueLinkInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreatedResource'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcases/{testCaseKey}/links/weblinks:\n    post:\n      tags:\n      - Test Cases\n      summary: Create web links\n      description: Creates a link between a test case and a generic URL.\n      operationId: createTestCaseWebLinks\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      requestBody:\n        description: Web Link Input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebLinkInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreatedResource'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcases/{testCaseKey}/versions:\n    get:\n      tags:\n      - Test Cases\n      summary: Get versions\n      description: Returns all test case versions for a test case with specified key.\n        Response is ordered by most recent first.\n      operationId: listTestCaseVersions\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestCaseVersionLinkList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcases/{testCaseKey}/versions/{version}:\n    get:\n      tags:\n      - Test Cases\n      summary: Get version\n      description: Retrieves a specific version of a test case.\n      operationId: getTestCaseVersion\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      - name: version\n        in: path\n        description: Version of the test case to retrieve.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestCase'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcases/{testCaseKey}/testscript:\n    get:\n      tags:\n      - Test Cases\n      summary: Get test script\n      description: Returns the test script for the given test case\n      operationId: getTestCaseTestScript\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestScript'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n    post:\n      tags:\n      - Test Cases\n      summary: Create test script\n      description: \"Creates or updates the test script for a test case. If the test\\\n        \\ case currently has a sequence of test steps assigned to it, these will be\\\n        \\ implicitly removed.\"\n      operationId: createTestCaseTestScript\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      requestBody:\n        description: Test Script Input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestScriptInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreatedResource'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcases/{testCaseKey}/teststeps:\n    get:\n      tags:\n      - Test Cases\n      summary: Get test steps\n      description: \"Returns the test steps for the given test case. Provides a paged\\\n        \\ response, with 100 items per page.\"\n      operationId: getTestCaseTestSteps\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestStepsList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n    post:\n      tags:\n      - Test Cases\n      summary: Post test steps\n      description: \"Assigns a series of test steps to a test case, appending them\\\n        \\ to any existing sequence of test steps. A maximum of 100 steps can be posted\\\n        \\ per request. Consumers should not attempt to parallelize this operation,\\\n        \\ as the order of the steps is defined by the input order. If this endpoint\\\n        \\ is called on a test case that already has a plain text or BDD test script,\\\n        \\ that test script will implicitly be removed. All required step custom fields\\\n        \\ should be present in the request.\\n\"\n      operationId: createTestCaseTestSteps\n      parameters:\n      - name: testCaseKey\n        in: path\n        description: \"The key of the test case. Test case keys are of the format [A-Z]+-T[0-9]+\"\n        required: true\n        schema:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n      requestBody:\n        description: Test Step Input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestStepsInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreatedResource'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcycles:\n    get:\n      tags:\n      - Test Cycles\n      summary: Get all Test Cycles\n      description: Returns all test cycles. Query parameters can be used to filter\n        by project and folder.\n      operationId: listTestCycles\n      parameters:\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: folderId\n        in: query\n        description: Folder ID filter\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestCycleList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n    post:\n      tags:\n      - Test Cycles\n      summary: Create a Test Cycle\n      description: Creates a Test Cycle. All required test cycle custom fields should\n        be present in the request.\n      operationId: createTestCycle\n      requestBody:\n        description: Test Cycle Input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestCycleInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyedCreatedResource'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcycles/{testCycleIdOrKey}:\n    get:\n      tags:\n      - Test Cycles\n      summary: Get test cycle\n      description: Returns a test cycle for the given key.\n      operationId: getTestCycle\n      parameters:\n      - name: testCycleIdOrKey\n        in: path\n        description: \"The ID or key of the test cycle. Test cycle keys are of the\\\n          \\ format [A-Z]+-R[0-9]+\"\n        required: true\n        schema:\n          pattern: \"([0-9]+)|(.+-R[0-9]+)\"\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestCycle'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n    put:\n      tags:\n      - Test Cycles\n      summary: Update test cycle\n      description: \"Updates an existing test cycle. If the project has test cycle\\\n        \\ custom fields, all custom fields should be present in the request. To leave\\\n        \\ any of them blank, please set them null if they are not required custom\\\n        \\ fields.\\n\"\n      operationId: updateTestCycle\n      parameters:\n      - name: testCycleIdOrKey\n        in: path\n        description: \"The ID or key of the test cycle. Test cycle keys are of the\\\n          \\ format [A-Z]+-R[0-9]+\"\n        required: true\n        schema:\n          pattern: \"([0-9]+)|(.+-R[0-9]+)\"\n          type: string\n      requestBody:\n        description: Test Cycle Update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestCycle'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n            location:\n              description: URL of the updated Test Cycle\n              style: simple\n              explode: false\n              schema:\n                type: string\n                format: url\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcycles/{testCycleIdOrKey}/links:\n    get:\n      tags:\n      - Test Cycles\n      summary: Get links\n      description: Returns links for a test cycle with specified key.\n      operationId: getTestCycleLinks\n      parameters:\n      - name: testCycleIdOrKey\n        in: path\n        description: \"The ID or key of the test cycle. Test cycle keys are of the\\\n          \\ format [A-Z]+-R[0-9]+\"\n        required: true\n        schema:\n          pattern: \"([0-9]+)|(.+-R[0-9]+)\"\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestCycleLinkList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcycles/{testCycleIdOrKey}/links/issues:\n    post:\n      tags:\n      - Test Cycles\n      summary: Create issue links\n      description: Creates a link between a test cycle and a Jira issue.\n      operationId: createTestCycleIssueLink\n      parameters:\n      - name: testCycleIdOrKey\n        in: path\n        description: \"The ID or key of the test cycle. Test cycle keys are of the\\\n          \\ format [A-Z]+-R[0-9]+\"\n        required: true\n        schema:\n          pattern: \"([0-9]+)|(.+-R[0-9]+)\"\n          type: string\n      requestBody:\n        description: Issue Link Input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IssueLinkInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n            location:\n              description: URL of the created link\n              schema:\n                type: string\n                format: url\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testcycles/{testCycleIdOrKey}/links/weblinks:\n    post:\n      tags:\n      - Test Cycles\n      summary: Create web links\n      description: Creates a link between a test cycle and a generic URL.\n      operationId: createTestCycleWebLink\n      parameters:\n      - name: testCycleIdOrKey\n        in: path\n        description: \"The ID or key of the test cycle. Test cycle keys are of the\\\n          \\ format [A-Z]+-R[0-9]+\"\n        required: true\n        schema:\n          pattern: \"([0-9]+)|(.+-R[0-9]+)\"\n          type: string\n      requestBody:\n        description: Web Link Input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebLinkInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n            location:\n              description: URL of the created link\n              schema:\n                type: string\n                format: url\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testplans:\n    get:\n      tags:\n      - Test Plans\n      summary: Get test plans\n      description: Retrieves all test plans. Query parameters can be used to filter\n        the results.\n      operationId: listTestPlans\n      parameters:\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestPlanList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testexecutions:\n    get:\n      tags:\n      - Test Executions\n      summary: Get test executions\n      description: Returns all test executions. Query parameters can be used to filter\n        by project and folder.\n      operationId: listTestExecutions\n      parameters:\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: testCycle\n        in: query\n        description: Test cycle key filter.\n        schema:\n          pattern: \"([0-9]+)|(.+-R[0-9]+)\"\n          type: string\n      - name: testCase\n        in: query\n        description: Test case key filter.\n        schema:\n          pattern: \"([0-9]+)|(.+-T[0-9]+)\"\n          type: string\n      - name: actualEndDateAfter\n        in: query\n        description: \"Filter for 'Actual End Date' after the given time. Format: yyyy-MM-dd'T'HH:mm:ss'Z'\"\n        schema:\n          type: string\n          format: date-time\n      - name: actualEndDateBefore\n        in: query\n        description: \"Filter for 'Actual End Date' before the given time. Format:\\\n          \\ yyyy-MM-dd'T'HH:mm:ss'Z'\"\n        schema:\n          type: string\n          format: date-time\n      - name: includeStepLinks\n        in: query\n        description: \"If true, execution step issue links will be included in the\\\n          \\ response\"\n        schema:\n          type: boolean\n          default: false\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestExecutionList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n    post:\n      tags:\n      - Test Executions\n      summary: Create test execution\n      description: Creates a test execution. All required test execution custom fields\n        should be present in the request.\n      operationId: createTestExecution\n      requestBody:\n        description: Web Link Input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestExecutionInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n            location:\n              description: URL of the created Test Execution\n              style: simple\n              explode: false\n              schema:\n                type: string\n                format: url\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testexecutions/{testExecutionIdOrKey}:\n    get:\n      tags:\n      - Test Executions\n      summary: Get test execution\n      description: Returns a test execution for the given ID.\n      operationId: getTestExecution\n      parameters:\n      - name: testExecutionIdOrKey\n        in: path\n        description: \"The ID or key of the test execution. Test execution keys are\\\n          \\ of the format [A-Z]+-E[0-9]+\"\n        required: true\n        schema:\n          pattern: \"([0-9]+)|(.+-E[0-9]+)\"\n          type: string\n      - name: includeStepLinks\n        in: query\n        description: \"If true, execution step issue links will be included in the\\\n          \\ response\"\n        schema:\n          type: boolean\n          default: false\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestExecution'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testexecutions/{testExecutionIdOrKey}/links:\n    get:\n      tags:\n      - Test Executions\n      summary: Get links\n      description: Returns links for a test execution with specified ID.\n      operationId: listTestExecutionLinks\n      parameters:\n      - name: testExecutionIdOrKey\n        in: path\n        description: \"The ID or key of the test execution. Test execution keys are\\\n          \\ of the format [A-Z]+-E[0-9]+\"\n        required: true\n        schema:\n          pattern: \"([0-9]+)|(.+-E[0-9]+)\"\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestExecutionLinkList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /testexecutions/{testExecutionIdOrKey}/links/issues:\n    post:\n      tags:\n      - Test Executions\n      summary: Create issue links\n      description: Creates a link between a test execution and a Jira issue.\n      operationId: createTestExecutionIssueLink\n      parameters:\n      - name: testExecutionIdOrKey\n        in: path\n        description: \"The ID or key of the test execution. Test execution keys are\\\n          \\ of the format [A-Z]+-E[0-9]+\"\n        required: true\n        schema:\n          pattern: \"([0-9]+)|(.+-E[0-9]+)\"\n          type: string\n      requestBody:\n        description: Issue Link Input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IssueLinkInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n            location:\n              description: URL of the created link\n              schema:\n                type: string\n                format: url\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /projects:\n    get:\n      tags:\n      - Projects\n      summary: Get projects\n      description: Returns all projects.\n      operationId: listProjects\n      parameters:\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /projects/{projectIdOrKey}:\n    get:\n      tags:\n      - Projects\n      summary: Get project\n      description: Returns a project for the given ID or key.\n      operationId: getProject\n      parameters:\n      - name: projectIdOrKey\n        in: path\n        description: The ID or key of the Jira project\n        required: true\n        schema:\n          pattern: \"([0-9]+)|([A-Z][A-Z_0-9]+)\"\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /folders:\n    get:\n      tags:\n      - Folders\n      summary: Get folders\n      description: Returns all folder.\n      operationId: listFolders\n      parameters:\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: folderType\n        in: query\n        description: \"Folder type filter. Either `\\\"TEST_CASE\\\"`, `\\\"TEST_PLAN\\\"`\\\n          \\ or `\\\"TEST_CYCLE\\\"`\"\n        schema:\n          $ref: '#/components/schemas/FolderType'\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FolderList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n    post:\n      tags:\n      - Folders\n      summary: Create folder\n      description: Creates a folder.\n      operationId: createFolder\n      requestBody:\n        description: FolderInput\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FolderInput'\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreatedResource'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /folders/{folderId}:\n    get:\n      tags:\n      - Folders\n      summary: Get folder\n      description: Returns a folder for the given ID.\n      operationId: getFolder\n      parameters:\n      - name: folderId\n        in: path\n        description: Folder ID\n        required: true\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /priorities:\n    get:\n      tags:\n      - Priorities\n      summary: Get priorities\n      description: Returns all priorities.\n      operationId: listPriorities\n      parameters:\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PriorityList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /priorities/{priorityId}:\n    get:\n      tags:\n      - Priorities\n      summary: Get priority\n      description: Returns a priority for the given ID.\n      operationId: getPriority\n      parameters:\n      - name: priorityId\n        in: path\n        required: true\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Priority'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /statuses:\n    get:\n      tags:\n      - Statuses\n      summary: Get statuses\n      description: Returns all statuses.\n      operationId: listStatuses\n      parameters:\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: statusType\n        in: query\n        schema:\n          $ref: '#/components/schemas/StatusType'\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /statuses/{statusId}:\n    get:\n      tags:\n      - Statuses\n      summary: Get status\n      description: Returns a status for the given ID.\n      operationId: getStatus\n      parameters:\n      - name: statusId\n        in: path\n        required: true\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /environments:\n    get:\n      tags:\n      - Environments\n      summary: Get environments\n      description: Returns all environments.\n      operationId: listEnvironments\n      parameters:\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: maxResults\n        in: query\n        description: \"A hint as to the maximum number of results to return in each\\\n          \\ call. Note that the server reserves the right to impose a maxResults limit\\\n          \\ that is lower than the value that a client provides, due to lack or resources\\\n          \\ or any other condition. When this happens, your results will be truncated.\\\n          \\ Callers should always check the returned maxResults to determine the value\\\n          \\ that is effectively being used.\"\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n          default: 10\n      - name: startAt\n        in: query\n        description: Zero-indexed starting position. Should be a multiple of maxResults.\n        schema:\n          minimum: 0\n          type: integer\n          format: int64\n          default: 0\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnvironmentList'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /environments/{environmentId}:\n    get:\n      tags:\n      - Environments\n      summary: Get environment\n      description: Returns an environment for the given ID.\n      operationId: getEnvironment\n      parameters:\n      - name: environmentId\n        in: path\n        required: true\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /links/{linkId}:\n    delete:\n      tags:\n      - Links\n      summary: Delete link\n      description: Deletes a link for the given ID.\n      operationId: deleteLink\n      parameters:\n      - name: linkId\n        in: path\n        required: true\n        schema:\n          minimum: 1\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /automations/executions/custom:\n    post:\n      tags:\n      - Automations\n      summary: Custom format\n      description: Create results using Zephyr Scale's custom results format.\n      operationId: createCustomExecutions\n      parameters:\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        required: true\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: autoCreateTestCases\n        in: query\n        description: Indicate if test cases should be created if non existent.\n        schema:\n          type: boolean\n          default: false\n      - name: content-length\n        in: header\n        description: \"The content-length header indicates the size of the message\\\n          \\ body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2\"\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        description: \"The zip file containing custom execution results. The max file\\\n          \\ size is 10MB. Optionally, you can send a `testCycle` part in your form\\\n          \\ data to customize the created test cycle.\"\n        content:\n          multipart/form-data:\n            schema:\n              required:\n              - file\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n                testCycle:\n                  $ref: '#/components/schemas/AutomationTestCycleInput'\n            encoding:\n              testCycle:\n                contentType: application/json\n                style: form\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AutomationResult'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /automations/executions/cucumber:\n    post:\n      tags:\n      - Automations\n      summary: Cucumber format\n      description: Create results using the Cucumber results format.\n      operationId: createCucumberExecutions\n      parameters:\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        required: true\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: autoCreateTestCases\n        in: query\n        description: Indicate if test cases should be created if non existent.\n        schema:\n          type: boolean\n          default: false\n      - name: content-length\n        in: header\n        description: \"The content-length header indicates the size of the message\\\n          \\ body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2\"\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        description: \"The zip file containing [Cucumber execution results](https://github.com/cucumber/cucumber-json-schema/blob/main/schema.json)\\\n          \\ as one or more files. The max file size is 2MB. Optionally, you can send\\\n          \\ a `testCycle` part in your form data to customize the created test cycle.\"\n        content:\n          multipart/form-data:\n            schema:\n              required:\n              - file\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n                testCycle:\n                  $ref: '#/components/schemas/AutomationTestCycleInput'\n            encoding:\n              testCycle:\n                contentType: application/json\n                style: form\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AutomationResult'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /automations/executions/junit:\n    post:\n      tags:\n      - Automations\n      summary: JUnit XML format\n      description: \"Create results using the JUnit XML results format. Optionally,\\\n        \\ you can send a `testCycle` part in your form data to customize the created\\\n        \\ test cycle.\"\n      operationId: createJUnitExecutions\n      parameters:\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        required: true\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: autoCreateTestCases\n        in: query\n        description: Indicate if test cases should be created if non existent.\n        schema:\n          type: boolean\n          default: false\n      - name: content-length\n        in: header\n        description: \"The content-length header indicates the size of the message\\\n          \\ body, in bytes. https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2\"\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        description: The zip or single file containing JUnit execution results. The\n          max file size is 10MB\n        content:\n          multipart/form-data:\n            schema:\n              required:\n              - file\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n                testCycle:\n                  $ref: '#/components/schemas/AutomationTestCycleInput'\n            encoding:\n              testCycle:\n                contentType: application/json\n                style: form\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AutomationResult'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /automations/testcases:\n    get:\n      tags:\n      - Automations\n      summary: Retrieve a zip file containing Cucumber Feature Files that matches\n        the query passed as parameter.\n      operationId: retrieveBDDTestCases\n      parameters:\n      - name: projectKey\n        in: query\n        description: Jira project key filter\n        required: true\n        schema:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n      - name: Accept\n        in: header\n        required: true\n        schema:\n          type: string\n          enum:\n          - application/zip\n      responses:\n        \"200\":\n          description: A Zip file containing BDD feature files\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\n  /healthcheck:\n    get:\n      tags:\n      - Healthcheck\n      summary: Check the health of this API\n      operationId: healthcheck\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n        default:\n          description: An error has occurred. Please check the code and the error\n            message.\n          headers:\n            Access-Control-Allow-Headers:\n              $ref: '#/components/headers/Access-Control-Allow-Headers'\n            Access-Control-Allow-Methods:\n              $ref: '#/components/headers/Access-Control-Allow-Methods'\n            Access-Control-Allow-Origin:\n              $ref: '#/components/headers/Access-Control-Allow-Origin'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-amazon-integration:\n        x-amazon-apigateway-request-validator: basic\n        x-amazon-apigateway-integration:\n          httpMethod: post\n          type: aws_proxy\n          uri:\n            Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n        security:\n        - AccessToken: []\ncomponents:\n  schemas:\n    TestCaseList:\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            items:\n              $ref: '#/components/schemas/TestCase'\n    PagedList:\n      required:\n      - maxResults\n      - startAt\n      type: object\n      properties:\n        next:\n          type: string\n          format: url\n        startAt:\n          minimum: 0\n          type: integer\n          format: int64\n        maxResults:\n          minimum: 0\n          type: integer\n          format: int64\n          example: 1\n        total:\n          minimum: 0\n          type: integer\n          format: int64\n          example: 1\n        isLast:\n          type: boolean\n          example: true\n    TestCase:\n      required:\n      - id\n      - key\n      - name\n      - priority\n      - project\n      - status\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityId'\n        key:\n          pattern: \".+-T[0-9]+\"\n          type: string\n          description: The teste case key\n          example: SA-T10\n        name:\n          $ref: '#/components/schemas/EntityName'\n        project:\n          $ref: '#/components/schemas/ProjectLink'\n        createdOn:\n          $ref: '#/components/schemas/CreatedOn'\n        objective:\n          $ref: '#/components/schemas/Objective'\n        precondition:\n          $ref: '#/components/schemas/Precondition'\n        estimatedTime:\n          minimum: 0\n          type: integer\n          description: Estimated duration in milliseconds.\n          format: int64\n          example: 138000\n        labels:\n          $ref: '#/components/schemas/Labels'\n        component:\n          $ref: '#/components/schemas/JiraComponent'\n        priority:\n          $ref: '#/components/schemas/PriorityLink'\n        status:\n          $ref: '#/components/schemas/StatusLink'\n        folder:\n          $ref: '#/components/schemas/FolderLink'\n        owner:\n          $ref: '#/components/schemas/JiraUserLink'\n        testScript:\n          $ref: '#/components/schemas/TestCaseTestScriptLink'\n        customFields:\n          $ref: '#/components/schemas/CustomFields'\n        links:\n          $ref: '#/components/schemas/TestCaseLinkList'\n    EntityId:\n      minimum: 1\n      type: integer\n      format: int64\n      example: 1\n    EntityName:\n      type: string\n      example: Check axial pump\n    ProjectLink:\n      example:\n        id: 10005\n        self: https://example.com/rest/api/v2/projects/10005\n      allOf:\n      - $ref: '#/components/schemas/ResourceId'\n      - $ref: '#/components/schemas/Link'\n    ResourceId:\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityId'\n    Link:\n      type: object\n      properties:\n        self:\n          type: string\n          format: url\n    CreatedOn:\n      type: string\n      description: \"Data and time test case was created. Format: yyyy-MM-dd'T'HH:mm:ss'Z'\"\n      format: date-time\n      example: 2018-05-15T13:15:13Z\n    Objective:\n      type: string\n      description: A description of the objective.\n      example: To ensure the axial pump can be enabled\n    Precondition:\n      type: string\n      description: Any conditions that need to be met.\n      example: Latest version of the axial pump available\n    Labels:\n      type: array\n      description: Array of labels associated to this entity.\n      example:\n      - Regression\n      - Performance\n      - Automated\n      items:\n        type: string\n    JiraComponent:\n      example:\n        id: 10001\n        self: https://your-domain.atlassian.net/rest/api/2/component/10001\n      allOf:\n      - $ref: '#/components/schemas/ResourceId'\n      - $ref: '#/components/schemas/Link'\n    PriorityLink:\n      example:\n        id: 10002\n        self: https://example.com/rest/api/v2/priority/10002\n      allOf:\n      - $ref: '#/components/schemas/ResourceId'\n      - $ref: '#/components/schemas/Link'\n    StatusLink:\n      example:\n        id: 10000\n        self: https://example.com/rest/api/v2/status/10000\n      allOf:\n      - $ref: '#/components/schemas/ResourceId'\n      - $ref: '#/components/schemas/Link'\n    FolderLink:\n      example:\n        id: 100006\n        self: https://example.com/rest/api/v2/folder/10006\n      allOf:\n      - $ref: '#/components/schemas/ResourceId'\n      - $ref: '#/components/schemas/Link'\n    JiraUserLink:\n      required:\n      - accountId\n      properties:\n        accountId:\n          $ref: '#/components/schemas/JiraUserAccountId'\n      example:\n        self: https://www.example.com/jira/rest/api/2/user?accountId=5b10a2844c20165700ede21g\n        accountId: 5b10a2844c20165700ede21g\n      allOf:\n      - $ref: '#/components/schemas/Link'\n    JiraUserAccountId:\n      type: string\n      description: Atlassian Account ID of the Jira user.\n      example: 5b10a2844c20165700ede21g\n    TestCaseTestScriptLink:\n      example:\n        self: https://example.com/rest/api/v2/testCases/PROJ-T1/testscript\n      allOf:\n      - $ref: '#/components/schemas/Link'\n    CustomFields:\n      type: object\n      additionalProperties:\n        type: object\n      description: |\n        Multi-line text fields should denote a new line with the \\<br\\> syntax.\n        Dates should be in the format 'yyyy-MM-dd'.\n        Users should provided by the user ID.\n      example:\n        Build Number: 20\n        Release Date: 2020-01-01\n        Pre-Condition(s): User should have logged in. <br> User should have navigated\n          to the administration panel.\n        Implemented: false\n        Category:\n        - Performance\n        - Regression\n        Tester: fa2e582e-5e15-521e-92e3-47e6ca2e7256\n    TestCaseLinkList:\n      description: This property is ignored on updates.\n      allOf:\n      - $ref: '#/components/schemas/Link'\n      - properties:\n          issues:\n            $ref: '#/components/schemas/IssueLinkList'\n          webLinks:\n            $ref: '#/components/schemas/WebLinkList'\n    IssueLinkList:\n      type: array\n      description: A list of Jira issues linked to this entity\n      items:\n        $ref: '#/components/schemas/IssueLink'\n    IssueLink:\n      allOf:\n      - $ref: '#/components/schemas/Link'\n      - $ref: '#/components/schemas/IssueLinkInput'\n      - properties:\n          id:\n            $ref: '#/components/schemas/EntityId'\n          target:\n            type: string\n            description: The Jira Cloud REST API endpoint to get the full representation\n              of the issue\n            format: url\n            example: https://myjira.com/rest/api/2/issue/10000\n          type:\n            type: string\n            description: The link type\n            enum:\n            - COVERAGE\n            - BLOCKS\n            - RELATED\n    IssueLinkInput:\n      required:\n      - issueId\n      type: object\n      properties:\n        issueId:\n          minimum: 1\n          type: integer\n          description: The issue ID\n          format: int64\n          example: 10100\n    WebLinkList:\n      type: array\n      description: A list of web links for this entity\n      items:\n        $ref: '#/components/schemas/WebLink'\n    WebLink:\n      allOf:\n      - $ref: '#/components/schemas/Link'\n      - $ref: '#/components/schemas/WebLinkInput'\n      - properties:\n          id:\n            $ref: '#/components/schemas/EntityId'\n          type:\n            type: string\n            description: The link type\n            enum:\n            - COVERAGE\n            - BLOCKS\n            - RELATED\n    WebLinkInput:\n      required:\n      - url\n      type: object\n      properties:\n        description:\n          type: string\n          description: The link description\n          example: A link to atlassian.com\n        url:\n          type: string\n          description: The web link URL\n          format: url\n          example: https://atlassian.com\n    Error:\n      required:\n      - errorCode\n      - message\n      type: object\n      properties:\n        errorCode:\n          type: integer\n          example: 400\n        message:\n          type: string\n          example: projectKey must not be null\n    TestCaseInput:\n      required:\n      - name\n      - projectKey\n      type: object\n      properties:\n        projectKey:\n          $ref: '#/components/schemas/ProjectKey'\n        name:\n          $ref: '#/components/schemas/EntityName'\n        objective:\n          $ref: '#/components/schemas/Objective'\n        precondition:\n          $ref: '#/components/schemas/Precondition'\n        estimatedTime:\n          minimum: 0\n          type: integer\n          description: Estimated duration in milliseconds.\n          format: int64\n          example: 138000\n        componentId:\n          minimum: 0\n          type: integer\n          description: ID of a component from Jira.\n          format: int64\n          example: 10001\n        priorityName:\n          $ref: '#/components/schemas/PriorityName'\n        statusName:\n          $ref: '#/components/schemas/StatusName'\n        folderId:\n          minimum: 1\n          type: integer\n          description: ID of a folder to place the entity within.\n          format: int64\n        ownerId:\n          $ref: '#/components/schemas/JiraUserAccountId'\n        labels:\n          $ref: '#/components/schemas/Labels'\n        customFields:\n          $ref: '#/components/schemas/CustomFields'\n    ProjectKey:\n      pattern: \"([A-Z][A-Z_0-9]+)\"\n      type: string\n      description: Jira project key.\n      example: TIS\n    PriorityName:\n      type: string\n      description: The priority name.\n      example: Low\n    StatusName:\n      type: string\n      description: The status name.\n      example: Low\n    KeyedCreatedResource:\n      allOf:\n      - $ref: '#/components/schemas/CreatedResource'\n      - properties:\n          key:\n            type: string\n    CreatedResource:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityId'\n        self:\n          type: string\n    TestCaseVersionLinkList:\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            description: A list of versions for a test case\n            items:\n              $ref: '#/components/schemas/TestCaseVersionLink'\n    TestCaseVersionLink:\n      example:\n        id: 10002\n        self: https://example.com/rest/api/v2/testCases/PROJ-T1/versions/1\n      allOf:\n      - $ref: '#/components/schemas/Link'\n      - properties:\n          id:\n            $ref: '#/components/schemas/EntityId'\n    TestScript:\n      description: Response body when retrieving test scripts\n      allOf:\n      - $ref: '#/components/schemas/TestScriptInput'\n      - properties:\n          id:\n            $ref: '#/components/schemas/EntityId'\n    TestScriptInput:\n      required:\n      - text\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: \"Test scripts can be in plain text (plain), step-by-step (steps)\\\n            \\ or bdd format. BDD type can support remote execution on a build system\\\n            \\ via API plugin.\"\n          example: plain\n          enum:\n          - plain\n          - bdd\n          - steps\n        text:\n          minLength: 1\n          type: string\n          example: e.g. Attempt to login to the application\n      description: Request body for creating test scripts\n    TestStepsList:\n      description: Response body when retrieving test steps\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            description: The list of test steps\n            items:\n              $ref: '#/components/schemas/TestStep'\n    TestStep:\n      type: object\n      properties:\n        inline:\n          type: object\n          properties:\n            description:\n              type: string\n              description: The instruction to be followed\n              example: Attempt to login to the application\n            testData:\n              type: string\n              description: Any test data required to perform the instruction (optional).\n                The fields values provided can be interpolated into the description.\n              example: Username = SmartBear Password = weLoveAtlassian\n            expectedResult:\n              type: string\n              description: The expected outcome of executing the instruction\n              example: \"Login succeeds, web-app redirects to the dashboard view\"\n            customFields:\n              $ref: '#/components/schemas/CustomFields'\n        testCase:\n          $ref: '#/components/schemas/TestStepTestCase'\n      description: \"An instruction to be followed as part of a step-by-step test script.\\\n        \\ The test step can have either an inline definition, or delegate execution\\\n        \\ to another test case. One of these options must be specified.\"\n    TestStepTestCase:\n      required:\n      - testCaseKey\n      example:\n        testCaseKey: PROJ-T2\n        self: https://example.com/rest/api/v2/testCases/PROJ-T2/testscript\n      allOf:\n      - $ref: '#/components/schemas/Link'\n      - properties:\n          testCaseKey:\n            pattern: \"(.+-T[0-9]+)\"\n            type: string\n            description: The key of the other test case that the test step should\n              delegate execution to. This cannot be the parent test case.\n    TestStepsInput:\n      required:\n      - items\n      - mode\n      type: object\n      properties:\n        mode:\n          type: string\n          description: \"Valid values: `\\\"APPEND\\\"`, `\\\"OVERWRITE\\\"`\"\n        items:\n          type: array\n          description: The list of test steps\n          items:\n            $ref: '#/components/schemas/TestStep'\n      description: \"Request body for creating test steps. A maximum of 100 test steps\\\n        \\ can be added in one request. To add more than 100 steps, you can submit\\\n        \\ multiple requests. The mode property allows you to specify whether you want\\\n        \\ to delete the current test steps and create a new list, or append more items\\\n        \\ to the end of the current list.\"\n    TestCycleList:\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            items:\n              $ref: '#/components/schemas/TestCycle'\n    TestCycle:\n      required:\n      - id\n      - key\n      - name\n      - project\n      - status\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityId'\n        key:\n          pattern: \".+-[R|C][0-9]+\"\n          type: string\n          description: Unique key of the test cycle\n          example: SA-R40\n        name:\n          type: string\n          description: Name of the Test Cycle\n          example: Sprint 1 Regression Test Cycle\n        project:\n          $ref: '#/components/schemas/ProjectLink'\n        jiraProjectVersion:\n          $ref: '#/components/schemas/JiraProjectVersion'\n        status:\n          $ref: '#/components/schemas/StatusLink'\n        folder:\n          $ref: '#/components/schemas/FolderLink'\n        description:\n          $ref: '#/components/schemas/EntityDescription'\n        plannedStartDate:\n          $ref: '#/components/schemas/PlannedStartDate'\n        plannedEndDate:\n          $ref: '#/components/schemas/PlannedEndDate'\n        owner:\n          $ref: '#/components/schemas/JiraUserLink'\n        customFields:\n          $ref: '#/components/schemas/CustomFields'\n        links:\n          $ref: '#/components/schemas/TestCycleLinkListWithTestPlanLinks'\n    JiraProjectVersion:\n      example:\n        id: 10000\n        self: https://your-domain.atlassian.net/rest/api/2/version/10000\n      allOf:\n      - $ref: '#/components/schemas/ResourceId'\n      - $ref: '#/components/schemas/Link'\n    EntityDescription:\n      type: string\n      description: Description outlining the scope.\n      example: Regression test cycle 1 to ensure no breaking changes\n    PlannedStartDate:\n      type: string\n      description: \"Planned start date of the test cycle. Format: yyyy-MM-dd'T'HH:mm:ss'Z'\"\n      format: date-time\n      example: 2018-05-19T13:15:13Z\n    PlannedEndDate:\n      type: string\n      description: \"The planned end date of the test cycle. Format: yyyy-MM-dd'T'HH:mm:ss'Z'\"\n      format: date-time\n      example: 2018-05-20T13:15:13Z\n    TestCycleLinkListWithTestPlanLinks:\n      description: This property is ignored on updates.\n      allOf:\n      - $ref: '#/components/schemas/TestCycleLinkList'\n      - properties:\n          testPlans:\n            $ref: '#/components/schemas/TestCycleTestPlanLinkList'\n    TestCycleLinkList:\n      allOf:\n      - $ref: '#/components/schemas/Link'\n      - properties:\n          issues:\n            $ref: '#/components/schemas/IssueLinkList'\n          webLinks:\n            $ref: '#/components/schemas/WebLinkList'\n    TestCycleTestPlanLinkList:\n      type: array\n      description: A list of test plan links for a test cycle\n      items:\n        $ref: '#/components/schemas/TestCycleTestPlanLink'\n    TestCycleTestPlanLink:\n      example:\n        id: 1\n        self: https://api.zephyrscale.smartbear.com/v2/links/1\n        type: RELATED\n        testPlanId: 2\n      allOf:\n      - $ref: '#/components/schemas/ResourceId'\n      - $ref: '#/components/schemas/Link'\n      - properties:\n          testPlanId:\n            type: integer\n            format: int64\n          type:\n            type: string\n            description: The link type\n            enum:\n            - COVERAGE\n            - BLOCKS\n            - RELATED\n    TestCycleInput:\n      required:\n      - name\n      - projectKey\n      type: object\n      properties:\n        projectKey:\n          $ref: '#/components/schemas/ProjectKey'\n        name:\n          $ref: '#/components/schemas/EntityName'\n        description:\n          $ref: '#/components/schemas/EntityDescription'\n        plannedStartDate:\n          $ref: '#/components/schemas/PlannedStartDate'\n        plannedEndDate:\n          $ref: '#/components/schemas/PlannedEndDate'\n        jiraProjectVersion:\n          $ref: '#/components/schemas/JiraProjectVersionId'\n        statusName:\n          $ref: '#/components/schemas/StatusName'\n        folderId:\n          minimum: 1\n          type: integer\n          description: ID of a folder to place the entity within.\n          format: int64\n        ownerId:\n          $ref: '#/components/schemas/JiraUserAccountId'\n        customFields:\n          $ref: '#/components/schemas/CustomFields'\n    JiraProjectVersionId:\n      minimum: 1\n      type: integer\n      description: ID of the version from Jira.\n      format: int64\n      example: 10000\n    TestPlanList:\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            items:\n              $ref: '#/components/schemas/TestPlan'\n    TestPlan:\n      required:\n      - id\n      - key\n      - name\n      - project\n      - status\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityId'\n        key:\n          pattern: \".+-P[0-9]+\"\n          type: string\n          description: Key of the test plan\n          example: SA-P10\n        name:\n          $ref: '#/components/schemas/EntityName'\n        objective:\n          $ref: '#/components/schemas/Objective'\n        project:\n          $ref: '#/components/schemas/ProjectLink'\n        status:\n          $ref: '#/components/schemas/StatusLink'\n        folder:\n          $ref: '#/components/schemas/FolderLink'\n        owner:\n          $ref: '#/components/schemas/JiraUserLink'\n        customFields:\n          $ref: '#/components/schemas/CustomFields'\n        labels:\n          $ref: '#/components/schemas/Labels'\n        links:\n          properties:\n            webLinks:\n              $ref: '#/components/schemas/WebLinkList'\n            issues:\n              $ref: '#/components/schemas/IssueLinkList'\n            testCycles:\n              $ref: '#/components/schemas/TestPlanCycleLinkList'\n    TestPlanCycleLinkList:\n      type: array\n      description: A list of test cycle links for a test plan\n      items:\n        $ref: '#/components/schemas/TestPlanTestCycleLink'\n    TestPlanTestCycleLink:\n      allOf:\n      - $ref: '#/components/schemas/ResourceId'\n      - $ref: '#/components/schemas/Link'\n      - properties:\n          testCycleId:\n            $ref: '#/components/schemas/EntityId'\n          type:\n            type: string\n            description: The link type\n            enum:\n            - COVERAGE\n            - BLOCKS\n            - RELATED\n          target:\n            type: string\n            description: The test cycle resource\n        example:\n          id: 1\n          self: https://api.zephyrscale.smartbear.com/v2/links/1\n          type: RELATED\n          testCycleId: 2\n          target: https://api.zephyrscale.smartbear.com/v2/testCycles/2\n    TestExecutionList:\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            items:\n              $ref: '#/components/schemas/TestExecution'\n    TestExecution:\n      required:\n      - id\n      - project\n      - testCase\n      - testExecutionStatus\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityId'\n        key:\n          pattern: \".+-E[0-9]+\"\n          type: string\n          description: Test execution key\n          example: SA-E10\n        project:\n          $ref: '#/components/schemas/ProjectLink'\n        testCase:\n          $ref: '#/components/schemas/TestCaseVersionLink'\n        environment:\n          $ref: '#/components/schemas/EnvironmentLink'\n        testExecutionStatus:\n          $ref: '#/components/schemas/StatusLink'\n        actualEndDate:\n          $ref: '#/components/schemas/ActualEndDate'\n        estimatedTime:\n          minimum: 0\n          type: integer\n          description: Estimated duration in milliseconds.\n          format: int64\n          example: 138000\n        executionTime:\n          minimum: 0\n          type: integer\n          description: Actual test execution time in milliseconds.\n          format: int64\n          example: 120000\n        executedById:\n          $ref: '#/components/schemas/JiraUserAccountId'\n        assignedToId:\n          $ref: '#/components/schemas/JiraUserAccountId'\n        comment:\n          $ref: '#/components/schemas/Comment'\n        automated:\n          type: boolean\n          description: Indicates if the test execution was done manually or not.\n        testCycle:\n          $ref: '#/components/schemas/TestCycleLink'\n        customFields:\n          $ref: '#/components/schemas/CustomFields'\n        links:\n          $ref: '#/components/schemas/TestExecutionLinkList'\n    EnvironmentLink:\n      example:\n        id: 10005\n        self: https://example.com/rest/api/v2/environment/10005\n      allOf:\n      - $ref: '#/components/schemas/ResourceId'\n      - $ref: '#/components/schemas/Link'\n    ActualEndDate:\n      type: string\n      description: \"The actual end date of the test cycle. Format: yyyy-MM-dd'T'HH:mm:ss'Z'\"\n      format: date-time\n      example: 2018-05-20T13:15:13Z\n    Comment:\n      type: string\n      description: Comment added against overall test case execution.\n      example: Test failed user could not login\n    TestCycleLink:\n      example:\n        id: 10010\n        self: https://example.com/rest/api/v2/test/10010\n      allOf:\n      - $ref: '#/components/schemas/Link'\n      - properties:\n          id:\n            $ref: '#/components/schemas/EntityId'\n    TestExecutionLinkList:\n      allOf:\n      - $ref: '#/components/schemas/Link'\n      - properties:\n          issues:\n            $ref: '#/components/schemas/IssueLinkList'\n    TestExecutionInput:\n      required:\n      - projectKey\n      - statusName\n      - testCaseKey\n      - testCycleKey\n      type: object\n      properties:\n        projectKey:\n          pattern: \"([A-Z][A-Z_0-9]+)\"\n          type: string\n          description: Jira project key.\n          example: TIS\n        testCaseKey:\n          pattern: \"(.+-T[0-9]+)\"\n          type: string\n          description: \"Key of test case the execution applies to. NOTE: Test cases\\\n            \\ with call to test, parameters and test data are not supported.\"\n          example: SA-T10\n        testCycleKey:\n          pattern: \"([0-9]+)|(.+-R[0-9]+)\"\n          type: string\n          description: Key of test cycle the execution applies to.\n          example: SA-R10\n        statusName:\n          $ref: '#/components/schemas/StatusName'\n        testScriptResults:\n          type: array\n          items:\n            $ref: '#/components/schemas/TestScriptResultInput'\n        environmentName:\n          type: string\n          description: Environment assigned to the test case.\n          example: Chrome Latest Version\n        actualEndDate:\n          $ref: '#/components/schemas/ActualEndDate'\n        executionTime:\n          minimum: 0\n          type: integer\n          description: Actual test execution time in milliseconds.\n          format: int64\n          example: 120000\n        executedById:\n          $ref: '#/components/schemas/JiraUserAccountId'\n        assignedToId:\n          $ref: '#/components/schemas/JiraUserAccountId'\n        comment:\n          $ref: '#/components/schemas/Comment'\n        customFields:\n          $ref: '#/components/schemas/CustomFields'\n    TestScriptResultInput:\n      required:\n      - statusName\n      type: object\n      properties:\n        statusName:\n          $ref: '#/components/schemas/StatusName'\n        actualEndDate:\n          $ref: '#/components/schemas/ActualEndDate'\n        actualResult:\n          type: string\n          description: free text field to provide more info on result of step execution.\n          example: User logged in successfully\n    ProjectList:\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            items:\n              $ref: '#/components/schemas/Project'\n    Project:\n      required:\n      - enabled\n      - id\n      - jiraProjectId\n      - key\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        jiraProjectId:\n          type: integer\n          format: int64\n        key:\n          type: string\n        enabled:\n          type: boolean\n    FolderType:\n      type: string\n      description: \"Valid values: `\\\"TEST_CASE\\\"`, `\\\"TEST_PLAN\\\"`, `\\\"TEST_CYCLE\\\"\\\n        `\"\n    FolderList:\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            items:\n              $ref: '#/components/schemas/Folder'\n    Folder:\n      required:\n      - folderType\n      - id\n      - index\n      - name\n      - parentId\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityId'\n        parentId:\n          $ref: '#/components/schemas/EntityId'\n        name:\n          $ref: '#/components/schemas/EntityName'\n        index:\n          $ref: '#/components/schemas/Index'\n        folderType:\n          $ref: '#/components/schemas/FolderType'\n        project:\n          $ref: '#/components/schemas/ProjectLink'\n    Index:\n      minimum: 0\n      type: integer\n      format: int64\n      example: 1\n    FolderInput:\n      required:\n      - folderType\n      - name\n      - projectKey\n      type: object\n      properties:\n        parentId:\n          minimum: 1\n          type: integer\n          description: Folder ID of the parent folder. Must be `null` for root folders.\n          format: int64\n        name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: Folder name.\n        projectKey:\n          $ref: '#/components/schemas/ProjectKey'\n        folderType:\n          $ref: '#/components/schemas/FolderType'\n    PriorityList:\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            items:\n              $ref: '#/components/schemas/Priority'\n    Priority:\n      allOf:\n      - $ref: '#/components/schemas/OptionValue'\n      - properties:\n          default:\n            type: boolean\n            default: false\n    OptionValue:\n      required:\n      - id\n      - index\n      - name\n      - project\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityId'\n        project:\n          $ref: '#/components/schemas/ProjectLink'\n        name:\n          $ref: '#/components/schemas/EntityName'\n        description:\n          $ref: '#/components/schemas/EntityDescription'\n        index:\n          $ref: '#/components/schemas/Index'\n    StatusType:\n      type: string\n      description: \"Valid values: `\\\"TEST_CASE\\\"`, `\\\"TEST_PLAN\\\"`, `\\\"TEST_CYCLE\\\"\\\n        `, `\\\"TEST_EXECUTION\\\"`\"\n    StatusList:\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            items:\n              $ref: '#/components/schemas/Status'\n    Status:\n      allOf:\n      - $ref: '#/components/schemas/OptionValue'\n      - properties:\n          color:\n            type: string\n          archived:\n            type: boolean\n            default: false\n          default:\n            type: boolean\n            default: false\n    EnvironmentList:\n      allOf:\n      - $ref: '#/components/schemas/PagedList'\n      - properties:\n          values:\n            type: array\n            items:\n              $ref: '#/components/schemas/Environment'\n    Environment:\n      allOf:\n      - $ref: '#/components/schemas/OptionValue'\n      - properties:\n          archived:\n            type: boolean\n            default: false\n    AutomationTestCycleInput:\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/EntityName'\n        description:\n          $ref: '#/components/schemas/EntityDescription'\n        jiraProjectVersion:\n          $ref: '#/components/schemas/JiraProjectVersionId'\n        folderId:\n          minimum: 1\n          type: integer\n          description: ID of a folder to place the entity within.\n          format: int64\n        customFields:\n          $ref: '#/components/schemas/CustomFields'\n      description: Pass this object as a JSON in your form-data alongside the file.\n        Make sure you set the type of this object as `application/json` otherwise\n        the object will be ignored.\n    AutomationResult:\n      type: object\n      properties:\n        testCycle:\n          $ref: '#/components/schemas/AutomationTestCycle'\n    AutomationTestCycle:\n      type: object\n      properties:\n        id:\n          minimum: 1\n          type: integer\n          description: The id of the newly created test cycle.\n          format: int64\n        url:\n          type: string\n          description: The URL pointing to the newly created test cycle.\n        key:\n          pattern: \"([0-9]+)|(.+-R[0-9]+)\"\n          type: string\n          description: The key of the newly created test cycle.\n  responses:\n    DefaultError:\n      description: An error has occurred. Please check the code and the error message.\n      headers:\n        Access-Control-Allow-Headers:\n          $ref: '#/components/headers/Access-Control-Allow-Headers'\n        Access-Control-Allow-Methods:\n          $ref: '#/components/headers/Access-Control-Allow-Methods'\n        Access-Control-Allow-Origin:\n          $ref: '#/components/headers/Access-Control-Allow-Origin'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    KeyCreatedResource:\n      description: Created\n      headers:\n        Access-Control-Allow-Headers:\n          $ref: '#/components/headers/Access-Control-Allow-Headers'\n        Access-Control-Allow-Methods:\n          $ref: '#/components/headers/Access-Control-Allow-Methods'\n        Access-Control-Allow-Origin:\n          $ref: '#/components/headers/Access-Control-Allow-Origin'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/KeyedCreatedResource'\n    OkNoContent:\n      description: OK\n      headers:\n        Access-Control-Allow-Headers:\n          $ref: '#/components/headers/Access-Control-Allow-Headers'\n        Access-Control-Allow-Methods:\n          $ref: '#/components/headers/Access-Control-Allow-Methods'\n        Access-Control-Allow-Origin:\n          $ref: '#/components/headers/Access-Control-Allow-Origin'\n    CreatedResource:\n      description: Created\n      headers:\n        Access-Control-Allow-Headers:\n          $ref: '#/components/headers/Access-Control-Allow-Headers'\n        Access-Control-Allow-Methods:\n          $ref: '#/components/headers/Access-Control-Allow-Methods'\n        Access-Control-Allow-Origin:\n          $ref: '#/components/headers/Access-Control-Allow-Origin'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatedResource'\n    CreatedWithLocationHeaders:\n      description: Created\n      headers:\n        Access-Control-Allow-Headers:\n          $ref: '#/components/headers/Access-Control-Allow-Headers'\n        Access-Control-Allow-Methods:\n          $ref: '#/components/headers/Access-Control-Allow-Methods'\n        Access-Control-Allow-Origin:\n          $ref: '#/components/headers/Access-Control-Allow-Origin'\n        location:\n          description: URL of the created link\n          schema:\n            type: string\n            format: url\n    AutomationResult:\n      description: OK\n      headers:\n        Access-Control-Allow-Headers:\n          $ref: '#/components/headers/Access-Control-Allow-Headers'\n        Access-Control-Allow-Methods:\n          $ref: '#/components/headers/Access-Control-Allow-Methods'\n        Access-Control-Allow-Origin:\n          $ref: '#/components/headers/Access-Control-Allow-Origin'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AutomationResult'\n  headers:\n    Access-Control-Allow-Headers:\n      schema:\n        type: string\n    Access-Control-Allow-Methods:\n      schema:\n        type: string\n    Access-Control-Allow-Origin:\n      schema:\n        type: string\n  securitySchemes:\n    AccessToken:\n      type: apiKey\n      name: Authorization\n      in: header\n      x-amazon-apigateway-authtype: custom\n      x-amazon-apigateway-authorizer:\n        type: token\n        authorizerUri:\n          Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CustomAuthorizerFunction.Arn}/invocations\"\n        authorizerCredentials:\n          Fn::Sub: \"${ApiGatewayAuthorizerRole.Arn}\"\n        authorizerResultTtlInSeconds: 60\nx-tagGroups:\n- name: API Endpoints\n  tags:\n  - Test Cases\n  - Test Cycles\n  - Test Plans\n  - Test Executions\n  - Folders\n  - Statuses\n  - Priorities\n  - Environments\n  - Projects\n  - Links\n  - Automations\n  - Healthcheck\nx-amazon-apigateway-api-key-source: AUTHORIZER\nx-amazon-apigateway-request-validators:\n  basic:\n    validateRequestBody: true\n    validateRequestParameters: true\n  params-only:\n    validateRequestBody: false\n    validateRequestParameters: true\nx-amazon-integration:\n  x-amazon-apigateway-request-validator: basic\n  x-amazon-apigateway-integration:\n    httpMethod: post\n    type: aws_proxy\n    uri:\n      Fn::Sub: \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations\"\n  security:\n  - AccessToken: []\nx-amazon-apigateway-binary-media-types:\n- multipart/form-data\n- application/zip\n",
			"canonicalURL": "/github.com/dipjyotimetia/HybridTestFramework@30aa58a5aee834d03be3fe91dd6b0e1626ecd830/-/blob/contract/src/main/openapi/zephyr/api.cloud.expanded.yml",
			"externalURLs": [
				{
					"url": "https://github.com/dipjyotimetia/HybridTestFramework/blob/30aa58a5aee834d03be3fe91dd6b0e1626ecd830/contract/src/main/openapi/zephyr/api.cloud.expanded.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/testcycles/{testCycleIdOrKey}\": get: responses: 200: contents: application/json: generate schema: field links: allOf: schema type mismatch:  and object"
}