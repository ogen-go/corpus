{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/liferay/com-liferay-commerce"
		},
		"file": {
			"name": "rest-openapi.yaml",
			"size": 0,
			"path": "headless/headless-commerce/headless-commerce-bom-impl/rest-openapi.yaml",
			"byteSize": 27391,
			"content": "components:\n    parameters:\n        idPathParam:\n            in: path\n            explode: false\n            name: id\n            required: true\n            schema:\n                description:\n                    The resource Id\n                example: 30130\n                format: int64\n                minimum: 0\n                type: integer\n            style: simple\n        keywordsQueryParam:\n            in: query\n            explode: true\n            name: q\n            required: false\n            schema:\n                example: Product1\n                type: string\n            style: form\n    responses:\n        NotFound:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/Error\"\n                application/xml:\n                    schema:\n                        $ref: \"#/components/schemas/Error\"\n            description:\n                The specified resource was not found\n        UnauthorizedError:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/Error\"\n                application/xml:\n                    schema:\n                        $ref: \"#/components/schemas/Error\"\n            description:\n                Authentication information is missing or invalid\n    schemas:\n        Area:\n            properties:\n                breadcrumbs:\n                    example:\n                        - id: 31130\n                          name: Item 1\n                          slug: /Item-1\n                          street2: /Item/31130\n                          thumbnail: /schema.jpg\n                    items:\n                        $ref: \"#/components/schemas/Breadcrumb\"\n                    type: array\n                data:\n                    $ref: \"#/components/schemas/AreaData\"\n            type: object\n        AreaData:\n            properties:\n                id:\n                    example: Name 1\n                    type: string\n                imageUrl:\n                    example: Name 1\n                    type: string\n                name:\n                    example: Name 1\n                    type: string\n                products:\n                    example:\n                        - id: 29130\n                          name: Product 1\n                          price: $ 12.99\n                          sku: SKU01\n                          thumbnailUrl: /product_thumbnail.png\n                          url: /productUrl\n                    items:\n                        $ref: \"#/components/schemas/Product\"\n                    type: array\n                spots:\n                    example:\n                        - id: 34130\n                          number: 3\n                          positionX: 33.54\n                          positionY: 33.54\n                          productId: 29130\n                    items:\n                        $ref: \"#/components/schemas/Spot\"\n                    type: array\n        Brand:\n            properties:\n                id:\n                    example: 31130\n                    format: int64\n                    minimum: 0\n                    type: integer\n                models:\n                    example:\n                        - id: 31231\n                          name: Model 1\n                          year: \"2019\"\n                    items:\n                        $ref: \"#/components/schemas/Model\"\n                    type: array\n                name:\n                    example: Brand 1\n                    type: string\n            type: object\n        Breadcrumb:\n            properties:\n                label:\n                    example: Item 1\n                    type: string\n                url:\n                    example: /folder/32344\n                    type: string\n            type: object\n        Error:\n            properties:\n                errorCode:\n                    description:\n                        Internal error code mapping\n                    example: 996\n                    readOnly: true\n                    type: integer\n                errorDescription:\n                    example: Unable to find Item.\n                    readOnly: true\n                    type: string\n                message:\n                    example: No CommerceBOMItem exists with commerceBOMItemId 31300\n                    readOnly: true\n                    type: string\n                status:\n                    description:\n                        HTTP Status code\n                    example: 404\n                    readOnly: true\n                    type: integer\n            required:\n                - errorCode\n                - errorDescription\n                - message\n                - status\n            type: object\n        Folder:\n            properties:\n                breadcrumbs:\n                    example:\n                        - id: 31130\n                          name: Item 1\n                          slug: /Item-1\n                          street2: /Item/31130\n                          thumbnail: /schema.jpg\n                    items:\n                        $ref: \"#/components/schemas/Breadcrumb\"\n                    type: array\n                data:\n                    $ref: \"#/components/schemas/ItemData\"\n            type: object\n        Item:\n            properties:\n                id:\n                    example: 31130\n                    format: int64\n                    minimum: 0\n                    type: integer\n                name:\n                    example: Item 1\n                    type: string\n                slug:\n                    example: Item-1\n                    type: string\n                thumbnail:\n                    example: /schema.jpg\n                    type: string\n                type:\n                    enum:\n                        - area\n                        - folder\n                    example: folder\n                    type: string\n                url:\n                    example: /folder/31130\n                    type: string\n            type: object\n        ItemData:\n            properties:\n                compatibilities:\n                    example:\n                        - models:\n                              - id: 31231\n                                name: Model 1\n                                year: \"2019\"\n                          name: Brand 1\n                    items:\n                        $ref: \"#/components/schemas/Brand\"\n                    type: array\n                content:\n                    example:\n                        - id: 31130\n                          name: Item 1\n                          slug: /Item-1\n                          street2: /Item/31130\n                          thumbnail: /schema.jpg\n                    items:\n                        $ref: \"#/components/schemas/Item\"\n                    type: array\n                products:\n                    example:\n                        - id: 29130\n                          name: Product 1\n                          price: $ 12.99\n                          sku: SKU01\n                          thumbnailUrl: /product_thumbnail.png\n                          url: /productUrl\n                    items:\n                        $ref: \"#/components/schemas/Product\"\n                    type: array\n                spots:\n                    example:\n                        - id: 34130\n                          number: 3\n                          positionX: 33.54\n                          positionY: 33.54\n                          productId: 29130\n                    items:\n                        $ref: \"#/components/schemas/Spot\"\n                    type: array\n            type: object\n        Model:\n            properties:\n                id:\n                    example: 31130\n                    format: int64\n                    minimum: 0\n                    type: integer\n                name:\n                    example: Brand 1\n                    type: string\n                year:\n                    example: \"2019\"\n                    type: string\n            type: object\n        Position:\n            properties:\n                x:\n                    example: 33.54\n                    format: double\n                    type: number\n                y:\n                    example: 33.54\n                    format: double\n                    type: number\n            type: object\n        Product:\n            properties:\n                id:\n                    example: sar2-fa3w-ffaw-waw3\n                    type: string\n                name:\n                    example: Product 1\n                    type: string\n                price:\n                    example: $ 12.99\n                    type: string\n                sku:\n                    example: SKU01\n                    type: string\n                thumbnailUrl:\n                    example: /product_thumbnail.jpg\n                    type: string\n                url:\n                    example: /productUrl\n                    type: string\n            type: object\n        Spot:\n            properties:\n                id:\n                    example: 33130\n                    format: int64\n                    minimum: 0\n                    type: integer\n                number:\n                    example: 3\n                    format: int32\n                    minimum: 0\n                    type: integer\n                position:\n                    $ref: \"#/components/schemas/Position\"\n                productId:\n                    example: 123e4567-e89b-12d3-a456-426655440000\n                    type: string\n                sku:\n                    example: SKU01\n                    type: string\n            type: object\n    securitySchemes:\n        BasicAuth:\n            scheme: basic\n            type: http\n        BearerAuth:\n            scheme: bearer\n            type: http\n        OAuth2:\n            flows:\n                authorizationCode:\n                    authorizationUrl: /oauth/authorize\n                    scopes:\n                        CommerceOpenApiAdmin.admin: Grants access to admin operations\n                        CommerceOpenApiAdmin.read: Grants read access\n                        CommerceOpenApiAdmin.write: Grants write access\n                    tokenUrl: /oauth/token\n            type: oauth2\ninfo:\n    contact:\n        email: team-commerce@liferay.com\n        name: Commerce Team\n    description:\n        Liferay Commerce BOM API\n    license:\n        name: GNU Lesser General Public License 2.1\n        url: https://www.gnu.org/licenses/lgpl-2.1.html\n    title: Liferay Commerce BOM API\n    version: \"1.0\"\nopenapi: 3.0.0\npaths:\n    /areas/{id}/spot/:\n        post:\n            operationId: postAreaIdSpot\n            parameters:\n                - in: path\n                  explode: false\n                  name: id\n                  required: true\n                  schema:\n                      description:\n                          The resource Id\n                      example: 30130\n                      format: int64\n                      minimum: 0\n                      type: integer\n                  style: simple\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/Spot\"\n                    application/xml:\n                        schema:\n                            $ref: \"#/components/schemas/Spot\"\n                required: true\n            responses:\n                200:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Spot\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Spot\"\n                    description:\n                        Created\n                400:\n                    description:\n                        Invalid input\n                401:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Authentication information is missing or invalid\n                404:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        The specified resource was not found\n                500:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Unexpected error\n            security:\n                - BasicAuth: []\n                - BearerAuth: []\n                - OAuth2:\n                      - CommerceBOM.write\n            summary: Creates a Spot related to an area.\n            tags:\n                - Spot\n    /areas/{id}/spot/{spotId}:\n        delete:\n            operationId: deleteAreaIdSpot\n            parameters:\n                - in: path\n                  explode: false\n                  name: id\n                  required: true\n                  schema:\n                      description:\n                          The resource Id\n                      example: 30130\n                      format: int64\n                      minimum: 0\n                      type: integer\n                  style: simple\n                - in: path\n                  explode: false\n                  name: spotId\n                  required: true\n                  schema:\n                      description:\n                          The spot Id\n                      example: 30130\n                      format: int64\n                      minimum: 0\n                      type: integer\n                  style: simple\n            responses:\n                200:\n                    description:\n                        No content\n                401:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Authentication information is missing or invalid\n            security:\n                - BasicAuth: []\n                - BearerAuth: []\n                - OAuth2:\n                      - CommerceBOM.write\n            summary: Deletes a Spot by its ID.\n            tags:\n                - Spot\n        put:\n            operationId: putAreaIdSpot\n            parameters:\n                - in: path\n                  explode: false\n                  name: id\n                  required: true\n                  schema:\n                      description:\n                          The resource Id\n                      example: 30130\n                      format: int64\n                      minimum: 0\n                      type: integer\n                  style: simple\n                - in: path\n                  explode: false\n                  name: spotId\n                  required: true\n                  schema:\n                      description:\n                          The spot Id\n                      example: 30130\n                      format: int64\n                      minimum: 0\n                      type: integer\n                  style: simple\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/Spot\"\n                    application/xml:\n                        schema:\n                            $ref: \"#/components/schemas/Spot\"\n                required: true\n            responses:\n                200:\n                    description:\n                        Updated\n                400:\n                    description:\n                        Invalid input\n                401:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Authentication information is missing or invalid\n                404:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        The specified resource was not found\n                500:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Unexpected error\n            security:\n                - BasicAuth: []\n                - BearerAuth: []\n                - OAuth2:\n                      - CommerceBOM.write\n            summary: Updates a Spot by its ID.\n            tags:\n                - Spot\n    /areas/{id}:\n        get:\n            operationId: getArea\n            parameters:\n                - in: path\n                  explode: false\n                  name: id\n                  required: true\n                  schema:\n                      description:\n                          The resource Id\n                      example: 30130\n                      format: int64\n                      minimum: 0\n                      type: integer\n                  style: simple\n            responses:\n                200:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Area\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Area\"\n                    description:\n                        Successful operation\n                400:\n                    description:\n                        Invalid input\n                401:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Authentication information is missing or invalid\n                404:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        The specified resource was not found\n                500:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Unexpected error\n            security:\n                - BasicAuth: []\n                - BearerAuth: []\n                - OAuth2:\n                      - CommerceBOM.read\n            summary: Gets the Area by ID.\n            tags:\n                - Area\n    /folders/{id}:\n        get:\n            operationId: getFolder\n            parameters:\n                - in: path\n                  explode: false\n                  name: id\n                  required: true\n                  schema:\n                      description:\n                          The resource Id\n                      example: 30130\n                      format: int64\n                      minimum: 0\n                      type: integer\n                  style: simple\n            responses:\n                200:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Folder\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Folder\"\n                    description:\n                        Successful operation\n                400:\n                    description:\n                        Invalid input\n                401:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Authentication information is missing or invalid\n                404:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        The specified resource was not found\n                500:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Unexpected error\n            security:\n                - BasicAuth: []\n                - BearerAuth: []\n                - OAuth2:\n                      - CommerceBOM.read\n            summary: Gets the Folder by ID.\n            tags:\n                - Folder\n    /products/:\n        get:\n            operationId: getProductsPage\n            parameters:\n                - in: query\n                  explode: true\n                  name: q\n                  required: false\n                  schema:\n                      example: Product1\n                      type: string\n                  style: form\n            responses:\n                200:\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Product\"\n                                type: array\n                        application/xml:\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Product\"\n                                type: array\n                    description:\n                        Successful operation\n                400:\n                    description:\n                        Invalid input\n                401:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Authentication information is missing or invalid\n                404:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        The specified resource was not found\n                500:\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                        application/xml:\n                            schema:\n                                $ref: \"#/components/schemas/Error\"\n                    description:\n                        Unexpected error\n            security:\n                - BasicAuth: []\n                - BearerAuth: []\n                - OAuth2:\n                      - CommerceBOM.read\n            summary: Gets a list of Product.\n            tags:\n                - Product\nservers:\n    - description:\n          Liferay Commerce API server\n      url: https://commerce.{environment}.liferay.com/commerce-bom/{basePath}\n      variables:\n          basePath:\n              default: v1.0\n          environment:\n              default: api\n              enum:\n                  - api\n                  - api.dev\n                  - api.uat\n    - description:\n          Liferay Commerce Local Development (Hosts file)\n      url: \"{protocol}://{host}:{port}/o/commerce-bom/{basePath}\"\n      variables:\n          basePath:\n              default: v1.0\n          host:\n              default: test.dev\n          port:\n              default: \"8080\"\n              enum:\n                  - \"443\"\n                  - \"8080\"\n                  - \"8443\"\n          protocol:\n              default: http\n              enum:\n                  - http\n                  - https\n    - description:\n          Liferay Commerce Local Development with Ngrok\n      url: \"{protocol}://{host}.ngrok.io/o/commerce-bom/{basePath}\"\n      variables:\n          basePath:\n              default: v1.0\n          host:\n              default: commerce\n          protocol:\n              default: http\n              enum:\n                  - http\n                  - https\n    - description:\n          SwaggerHub API Auto Mocking\n      url: https://virtserver.swaggerhub.com/liferayinc/commerce-bom/1.0"
		}
	},
	"Error": "buildIR: make ir: path \"/areas/{id}/spot/{spotId}\": put: security: security \"OAuth2\" (index 2): flow \"authorizationCode\": unknown scope \"CommerceBOM.write\""
}