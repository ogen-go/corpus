{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenSourceBrain/OSBv2"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "applications/workspaces/api/openapi.yaml",
			"byteSize": 41279,
			"content": "openapi: 3.0.0\ninfo:\n  description: Opensource Brain Platform - Reference Workspaces manager API\n  license:\n    name: UNLICENSED\n  title: Workspaces manager API\n  version: 0.2.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: /api\ntags:\n- description: rest API for Workspaces manager\n  name: rest\n- description: Producer\n  name: Producer\n- description: Consumer\n  name: Consumer\n- description: Client\n  name: Client\npaths:\n  /live:\n    get:\n      summary: Test if application is healthy\n      security: []\n      operationId: live\n      responses:\n        \"500\":\n          description: Application is not healthy\n        \"200\":\n          description: Healthy\n          content:\n            application/json:\n              schema:\n                type: string\n      x-openapi-router-controller: workspaces.controllers.k8s_controller\n      tags:\n        - k8s\n  /ready:\n    get:\n      summary: Test if application is ready to take requests\n      security: []\n      operationId: ready\n      responses:\n        \"500\":\n          description: Application is not ready yet\n        \"200\":\n          description: Ready\n          content:\n            application/json:\n              schema:\n                type: string\n      x-openapi-router-controller: workspaces.controllers.k8s_controller\n      tags:\n        - k8s\n  /workspace:\n    get:\n      tags:\n        - rest\n      summary: Used to list all available workspaces.\n      security:\n        - {}\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n            default: 1\n          required: false\n          description: The page number for starting to collect the result set.\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            default: 20\n          required: false\n          description: The number of items to return.\n        - in: query\n          name: q\n          schema:\n            type: string\n            example: name__like=Work%+id__=1+tags[tag]=Tag\n          required: false\n          description: The search string for filtering of the items to return. Multiple criteria are seperated by '+' (and operator is applied). Format [field/relation[field]][comparator = , __not= , __like= ][value]\n        - in: query\n          name: tags\n          schema:\n            type: string\n            example: tag1+tag2\n            nullable: true\n          required: false\n          description: The tags to filter with Multiple parameters are concatenated with + (OR operator)\n      responses:\n        200:\n          description: Return all available workspaces\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pagination:\n                    $ref: \"#/components/schemas/Pagination\"\n                  workspaces:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Workspace\"\n    post:\n      tags:\n        - rest\n      summary: Used to save a Workspace to the repository. The user_id (keycloak user id) will be automatically filled with the current user\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: The Workspace to save.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Workspace\"\n      responses:\n        201:\n          description: Save successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workspace\"\n        400:\n          description: The Workspace already exists.\n  /workspace/{id}:\n    parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        required: true\n    get:\n      summary: Used to retrieve a workspace from the repository.\n      security:\n        - {}\n        - bearerAuth: []\n      responses:\n        200:\n          description: The workspace.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workspace\"\n        404:\n          description: The workspace was not found.\n      tags:\n        - rest\n    put:\n      summary: Update a workspace in the repository.\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: The workspace to save.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Workspace\"\n      responses:\n        200:\n          description: The workspace was updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workspace\"\n        404:\n          description: The workspace was not found.\n      tags:\n        - rest\n    delete:\n      summary: Delete a workspace from the repository.\n      security:\n        - bearerAuth: []\n      responses:\n        200:\n          description: The workspace was deleted.\n        404:\n          description: The workspace was not found.\n      tags:\n        - rest\n  /workspace/{id}/import:\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        description: Workspace ID of the workspace\n    post:\n      summary: Imports the ResourceOrigins into the Workspace and creates/updates the workspace resources\n      operationId: workspaces.controllers.workspace_controller.import_resources\n      security:\n        - bearerAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                resourceorigins:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/ResourceOrigin\"\n      responses:\n        200:\n          description: The workspace was updated with the thumbnail.\n        404:\n          description: The workspace was not found or the thumbnail was not specified\n      tags:\n        - rest\n  /workspace/{id}/clone:\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        description: Workspace ID of the workspace\n    put:\n      summary: Clones a workspace\n      operationId: workspaces.controllers.workspace_controller.workspace_clone\n      security:\n        - bearerAuth: []\n      responses:\n        200:\n          description: The workspace was cloned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workspace\"\n        404:\n          description: The workspace was not found\n      tags:\n        - rest\n  /workspace/{id}/thumbnail:\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        description: Workspace ID of the workspace\n    post:\n      summary: Sets the thumbnail of the workspace.\n      operationId: workspaces.controllers.workspace_controller.setthumbnail\n      security:\n        - bearerAuth: []\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                thumbNail:\n                  type: string\n                  format: binary\n      responses:\n        200:\n          description: The workspace was updated with the thumbnail.\n        404:\n          description: The workspace was not found or the thumbnail was not specified\n      tags:\n        - rest\n  /workspace/{id}/gallery:\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        description: Workspace ID of the workspace\n    post:\n      summary: Adds and image to the workspace.\n      operationId: workspaces.controllers.workspace_controller.addimage\n      security:\n        - bearerAuth: []\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                image:\n                  type: string\n                  format: binary\n      responses:\n        200:\n          description: The image was added to the workspace.\n        404:\n          description: The workspace was not found or the image was not specified\n      tags:\n        - rest\n  /workspace/{id}/gallery/{image_id}:\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        description: Workspace ID of the workspace\n      - in: path\n        name: image_id\n        required: true\n        schema:\n          type: integer\n        description: Workspace Image Id to be deleted from the workspace\n    delete:\n      summary: Delete a Workspace Image from the workspace.\n      operationId: delimage\n      security:\n        - bearerAuth: []\n      responses:\n        200:\n          description: The Workspace Image is successfully deleted from the workspace.\n        404:\n          description: The workspace was not found.\n      tags:\n        - rest\n      x-openapi-router-controller: workspaces.controllers.workspace_controller\n\n  /workspaceresource:\n    post:\n      tags:\n        - rest\n      summary: Used to save a WorkspaceResource to the repository.\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: The WorkspaceResource to save.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceResource\"\n      responses:\n        201:\n          description: Save successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceResource\"\n        400:\n          description: The WorkspaceResource already exists.\n\n  /workspaceresource/{id}:\n    parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        required: true\n    get:\n      summary: Used to retrieve a WorkspaceResource.\n      security:\n        - bearerAuth: []\n      responses:\n        200:\n          description: The WorkspaceResource.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceResource\"\n        404:\n          description: The WorkspaceResource was not found.\n      tags:\n        - rest\n    put:\n      summary: Update the WorkspaceResource.\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: The WorkspaceResource to save.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceResource\"\n      responses:\n        200:\n          description: The WorkspaceResource was updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceResource\"\n        404:\n          description: The WorkspaceResource was not found.\n      tags:\n        - rest\n    delete:\n      summary: Delete a WorkspaceResource.\n      security:\n        - bearerAuth: []\n      responses:\n        200:\n          description: The WorkspaceResource was deleted.\n        404:\n          description: The WorkspaceResource was not found.\n      tags:\n        - rest\n\n  /workspaceresource/{id}/open:\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        description: WorkspaceResource ID of the WorkspaceResource\n    get:\n      summary: Used to register a WorkspaceResource open action. The WorkspaceResource timestamp last open will be updated\n      security:\n        - bearerAuth: []\n      operationId: workspaces.controllers.workspace_resource_controller.open\n      responses:\n        200:\n          description: The WorkspaceResource was updated.\n        404:\n          description: The WorkspaceResource was not found.\n      tags:\n        - rest\n\n  /osbrepository:\n    get:\n      tags:\n        - rest\n      summary: Used to list all available repositories.\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n            default: 1\n          required: false\n          description: The page number for starting to collect the result set.\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            default: 20\n          required: false\n          description: The number of items to return.\n        - in: query\n          name: q\n          schema:\n            type: string\n            nullable: true\n            example: name=myrepo+summary__like=%reposi%\n          required: false\n          description: The search string for filtering of the items to return. Format [field/relation[field]][comparator = , __not= , __like= ][value]. Multiple parameters are concatenated with + (OR operator)\n        - in: query\n          name: tags\n          schema:\n            type: string\n            example: tag1+tag2\n            nullable: true\n          required: false\n          description: The tags to filter with Multiple parameters are concatenated with + (OR operator)\n        - in: query\n          name: types\n          schema:\n            type: string\n            nullable: true\n            example: experimental+modeling\n          required: false\n          description: The tags to filter with Multiple parameters are concatenated with + (OR operator)\n        - in: query\n          name: user_id\n          schema:\n            type: string\n            example: ccfbe969-f7e2-4191-80c4-821dc5a97a28\n            nullable: true\n          required: false\n          description: The id of the owner user to filter with\n      responses:\n        200:\n          description: Return all available repositories\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pagination:\n                    $ref: \"#/components/schemas/Pagination\"\n                  osbrepositories:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/OSBRepository\"\n    post:\n      tags:\n        - rest\n      summary: Used to save a OSB Repository. The user_id (keycloak user id) will be automatically filled with the current user\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: The OSB repository to save.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OSBRepository\"\n      responses:\n        201:\n          description: Save successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OSBRepository\"\n        400:\n          description: The OSB repository already exists.\n  /osbrepository/context:\n    parameters:\n      - in: query\n        name: uri\n        schema:\n          type: string\n        required: true\n      - in: query\n        name: repository_type\n        schema:\n          $ref: \"#/components/schemas/RepositoryType\"\n        required: true\n    get:\n      summary: Used to retrieve a list of contexts of a repository.\n      operationId: get_contexts\n      x-openapi-router-controller: workspaces.controllers.osbrepository_controller\n      responses:\n        200:\n          description: The list of repository contexts.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        404:\n          description: The repository was not found.\n      tags:\n        - rest\n  /osbrepository/keywords:\n    parameters:\n      - in: query\n        name: uri\n        schema:\n          type: string\n        required: true\n      - in: query\n        name: repository_type\n        schema:\n          $ref: \"#/components/schemas/RepositoryType\"\n        required: true\n      - in: query\n        name: context\n        schema:\n          type: string\n        required: true\n    get:\n      summary: Used to retrieve keywords for a repository.\n      operationId: get_keywords\n      x-openapi-router-controller: workspaces.controllers.osbrepository_controller\n      responses:\n        200:\n          description: The keywords for repository.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        404:\n          description: The repository was not found.\n      tags:\n        - rest\n  /osbrepository/description:\n    parameters:\n      - in: query\n        name: uri\n        schema:\n          type: string\n        required: true\n      - in: query\n        name: repository_type\n        schema:\n          $ref: \"#/components/schemas/RepositoryType\"\n        required: true\n      - in: query\n        name: context\n        schema:\n          type: string\n        required: true\n    get:\n      summary: Used to retrieve description for a repository.\n      operationId: get_description\n      x-openapi-router-controller: workspaces.controllers.osbrepository_controller\n      responses:\n        200:\n          description: The description for repository.\n          content:\n            application/json:\n              schema:\n                type: string\n        404:\n          description: The repository was not found.\n      tags:\n        - rest\n  /osbrepository/{id}:\n    parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        required: true\n      - in: query\n        name: context\n        schema:\n          type: string\n        description: the context for getting the resources, optional\n    get:\n      summary: Used to retrieve a repository.\n      # x-openapi-router-controller: workspaces.controllers.osbrepository_controller\n      # operationId: get\n      responses:\n        200:\n          description: The repository.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OSBRepository\"\n        404:\n          description: The repository was not found.\n      tags:\n        - rest\n    put:\n      summary: Update a OSB repository.\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: The repository to save.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OSBRepository\"\n      responses:\n        200:\n          description: The workspace was updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OSBRepository\"\n        404:\n          description: The workspace was not found.\n      tags:\n        - rest\n    delete:\n      summary: Delete a OSBRepository.\n      security:\n        - bearerAuth: []\n      responses:\n        200:\n          description: The OSBRepository was deleted.\n        404:\n          description: The OSBRepository was not found.\n      tags:\n        - rest\n  /volumestorage:\n    get:\n      tags:\n        - rest\n      summary: Used to list all available volumestorages.\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n            default: 1\n          required: false\n          description: The page number for starting to collect the result set.\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            default: 20\n          required: false\n          description: The number of items to return.\n        - in: query\n          name: q\n          schema:\n            type: string\n            example: name__like=%storage%\n          required: false\n          description: The search string for filtering of the items to return. Format [field/relation[field]][comparator = , __not= , __like= ][value]\n      responses:\n        200:\n          description: Return all available volumestorages\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pagination:\n                    $ref: \"#/components/schemas/Pagination\"\n                  volumestorages:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/VolumeStorage\"\n    post:\n      tags:\n        - rest\n      summary: Used to save a VolumeStorage to the repository. The user_id (keycloak user id) will be automatically filled with the current user\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: The VolumeStorage to save.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VolumeStorage\"\n      responses:\n        201:\n          description: Save successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VolumeStorage\"\n        400:\n          description: The VolumeStorage already exists.\n  /volumestorage/{id}:\n    parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        required: true\n    get:\n      summary: Used to retrieve an volumestorage from the repository.\n      responses:\n        200:\n          description: The volumestorage.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VolumeStorage\"\n        404:\n          description: The volumestorage was not found.\n      tags:\n        - rest\n    put:\n      summary: Update an volumestorage in the repository.\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: The volumestorage to save.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VolumeStorage\"\n      responses:\n        200:\n          description: The volumestorage was updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VolumeStorage\"\n        404:\n          description: The volumestorage was not found.\n      tags:\n        - rest\n    delete:\n      summary: Delete an volumestorage from the repository.\n      security:\n        - bearerAuth: []\n      responses:\n        200:\n          description: The volumestorage was deleted.\n        404:\n          description: The volumestorage was not found.\n      tags:\n        - rest\n\n  /tag:\n    get:\n      tags:\n        - rest\n      summary: Used to list all available tags.\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n            default: 1\n          required: false\n          description: The page number for starting to collect the result set.\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            default: 20\n          required: false\n          description: The number of items to return.\n        - in: query\n          name: q\n          schema:\n            type: string\n            example: name__like=%Tag 1%\n          required: false\n          description: The search string for filtering of the items to return. Format [field/relation[field]][comparator = , __not= , __like= ][value]\n      responses:\n        200:\n          description: Return all available tags\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pagination:\n                    $ref: \"#/components/schemas/Pagination\"\n                  tags:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Tag\"\n    post:\n      tags:\n        - rest\n      summary: Used to save a Tag to the repository. The user_id (keycloak user id) will be automatically filled with the current user\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: The Tag to save.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Tag\"\n      responses:\n        201:\n          description: Save successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n        400:\n          description: The Tag already exists.\n  /tag/{id}:\n    parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        required: true\n    get:\n      summary: Used to retrieve an tag from the repository.\n      responses:\n        200:\n          description: The tag.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n        404:\n          description: The tag was not found.\n      tags:\n        - rest\n    put:\n      summary: Update an tag in the repository.\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: The tag to save.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Tag\"\n      responses:\n        200:\n          description: The tag was updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n        404:\n          description: The tag was not found.\n      tags:\n        - rest\n    delete:\n      summary: Delete an tag from the repository.\n      security:\n        - bearerAuth: []\n      responses:\n        200:\n          description: The tag was deleted.\n        404:\n          description: The tag was not found.\n      tags:\n        - rest\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      x-bearerInfoFunc: cloudharness.auth.AuthClient.decode_token\n  schemas:\n    Valid:\n      type: object\n      properties:\n        response:\n          type: string\n    Pagination:\n      type: object\n      properties:\n        current_page:\n          type: integer\n        number_of_pages:\n          type: integer\n        total:\n          type: integer\n    PrimaryKey:\n      type: integer\n      x-primary-key: true\n      x-autoincrement: true\n    RepositoryType:\n      description: |\n        Repository type:\n          * dandi - DANDI repository\n          * figshare - FigShare repository\n          * github - Github repository\n      type: string\n      enum:\n        - dandi\n        - figshare\n        - github\n    RepositoryContentType:\n      description: \u003e\n        Repository Content type:\n          * experimental - Experimental data\n          * modeling - Modeling\n      type: string\n      enum:\n        - experimental\n        - modeling\n    ResourceType:\n      default: g\n      description: |\n        Resource type:\n         * e - Experimental\n         * m - Model\n         * g - Generic\n         * u - Unknown (to be defined)\n      type: string\n      enum:\n        - e\n        - m\n        - g\n        - u\n      example: g\n    ResourceStatus:\n        description: |\n          Resource status:\n           * a - Available\n           * e - Error, not available\n           * p - Pending\n        type: string\n        enum:\n          - a\n          - e\n          - p\n        default: p\n        example: p\n    ImageType:\n      type: string\n    User:\n      description: Keycloak User\n      type: object\n      properties:\n        id:\n          description: Keycloak user id\n          type: string\n        first_name:\n          description: First Name of the keycloak user\n          type: string\n        last_name:\n          description: Last Name of the keycloak user\n          type: string\n        username:\n          description: Username of the keycloak user\n          type: string\n        email:\n          description: Email address of the keycloak user\n          type: string\n    WorkspaceBase:\n      description: Workspace item\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the Workspace\n          $ref: \"#/components/schemas/PrimaryKey\"\n        name:\n          description: Workspace name.\n          type: string\n          example: Workspace One\n        description:\n          description: Workspace description.\n          type: string\n          example: Workspace One description\n        timestamp_created:\n          description: Date/time the Workspace is created\n          type: string\n          format: 'date-time'\n          example: 2019-11-23T01:23:45Z\n        timestamp_updated:\n          description: Date/time the Workspace is last updated\n          type: string\n          format: 'date-time'\n          example: 2019-11-23T01:23:45Z\n        last_opened_resource_id:\n          description: The workspace resource id the workspace is opened last with\n          type: integer\n        thumbnail:\n          description: Workspace type icon.\n          $ref: \"#/components/schemas/ImageType\"\n        gallery:\n          description: Gallery with images of the workspace\n          type: array\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/WorkspaceImage\"\n        user_id:\n          description: Workspace keycloak user id, will be automatically be set to the logged in user\n          type: string\n        publicable:\n          description: Is this a public workspace? Default false\n          type: boolean\n          default: false\n          example: false\n        featured:\n          description: Is this a featured workspace? Default false\n          type: boolean\n          default: false\n          example: false\n        license:\n          description: Workspace license\n          type: string\n          example: license\n        collaborators:\n          description: Collaborators who work on the workspace\n          type: array\n          items:\n            $ref: \"#/components/schemas/WorkspaceCollaborator\"\n        storage:\n          description: Storage of the workspace\n          $ref: \"#/components/schemas/VolumeStorage\"\n        tags:\n          type: array\n          items:\n           allOf:\n              - \"$ref\": \"#/components/schemas/Tag\"\n              - x-secondary: workspace_tag\n      required:\n        - name\n        - description\n    WorkspaceEntity:\n      description: Workspace model\n      allOf:\n        - $ref: '#/components/schemas/WorkspaceBase'\n        - x-tablename: workspace\n          properties:\n            resources:\n              description: Resources of the workspace\n              type: array\n              items:\n                  $ref: \"#/components/schemas/WorkspaceResourceEntity\"\n    Workspace:\n      description: Workspace extended\n      allOf:\n        - $ref: \"#/components/schemas/WorkspaceBase\"\n        - description: extra attributes\n          type: object\n          properties:\n            resources:\n              description: Resources of the workspace\n              type: array\n              items:\n                  $ref: \"#/components/schemas/WorkspaceResource\"\n            user:\n              $ref: \"#/components/schemas/User\"\n    WorkspaceCollaborator:\n      description: Workspace Collaborator of a workspace\n      type: object\n      x-tablename: workspacecollaborator\n      properties:\n        id:\n          description: Unique identifier of the WorkspaceCollaborator\n          $ref: \"#/components/schemas/PrimaryKey\"\n        user_id:\n          description: Workspace Collaborator keycloak user id\n          type: string\n      required:\n        - user_id\n    WorkspaceImage:\n      description: Workspace images of a workspace\n      type: object\n      x-tablename: workspaceimage\n      properties:\n        id:\n          description: Unique identifier of the WorkspaceImage\n          $ref: \"#/components/schemas/PrimaryKey\"\n        image:\n          description: Workspace Image\n          $ref: \"#/components/schemas/ImageType\"\n      required:\n        - image\n    WorkspaceResourceBase:\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the WorkspaceResource\n          $ref: \"#/components/schemas/PrimaryKey\"\n        name:\n          description: WorkspaceResource name\n          type: string\n          example: Workspace Resource One\n        folder:\n          description: WorkspaceResource folder where the resource will stored in the pvc\n          type: string\n          example: Workspace Resource One\n        status:\n          description: WorkspaceResource status is the resource\n          $ref: \"#/components/schemas/ResourceStatus\"\n        timestamp_created:\n          description: Date/time of creation of the WorkspaceResource\n          type: string\n          format: 'date-time'\n          example: 2019-11-23T01:23:45Z\n        timestamp_updated:\n          description: Date/time of last updating of the WorkspaceResource\n          type: string\n          format: 'date-time'\n          example: 2019-11-23T01:23:45Z\n        timestamp_last_opened:\n          description: Date/time of last opening of the WorkspaceResource\n          type: string\n          format: 'date-time'\n        resource_type:\n          description: WorkspaceResource type\n          $ref: \"#/components/schemas/ResourceType\"\n      required:\n        - name\n        - resource_type\n    WorkspaceResource:\n      description: Workspace Resource item of a Workspace\n      allOf:\n        - $ref: '#/components/schemas/WorkspaceResourceBase'\n        - properties:\n            workspace_id:\n              description: workspace_id\n              type: integer\n            origin:\n              description: Origin Resource where the WorkspaceResource is build from\n              $ref: \"#/components/schemas/ResourceOrigin\"\n    WorkspaceResourceEntity:\n      description: Workspace Resource item of a Workspace\n      allOf:\n        - $ref: '#/components/schemas/WorkspaceResourceBase'\n        - x-tablename: Workspaceresource\n          properties:\n            origin:\n              description: Origin data JSON formatted of the WorkspaceResource\n              type: string\n            workspace_id:\n              description: workspace_id\n              type: integer\n              x-foreign-key: workspace.id\n    VolumeStorage:\n      description: Volume which can be connected to a workspace\n      type: object\n      x-tablename: volumestorage\n      properties:\n        id:\n          description: Unique identifier of the StorageVolume\n          $ref: \"#/components/schemas/PrimaryKey\"\n        name:\n          description: StorageVolume name\n          type: string\n          example: Storage Volume One\n      required:\n        - name\n    OSBRepositoryBase:\n      description: OSB Repository Base model\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the repository\n          $ref: \"#/components/schemas/PrimaryKey\"\n        name:\n          description: Repository name.\n          type: string\n          example: Repo One\n        summary:\n          description: Summary describing the OSB Repository\n          type: string\n          example: Sample repository with experimental data\n        repository_type:\n          description: Repository type\n          $ref: \"#/components/schemas/RepositoryType\"\n        content_types:\n          description: List of Repository Content Types\n          type: string\n        auto_sync:\n          description: Auto sync of the resources\n          type: boolean\n          default: true\n          example: true\n        uri:\n          description: URI of the repository\n          type: string\n          example: https://github.com/OpenSourceBrain/OSBv2\n        default_context:\n          description: The default branch to show for this repository\n          type: string\n          example: develop\n        user_id:\n          description: OSBRepository keycloak user id, will be automatically be set to the logged in user\n          type: string\n        timestamp_created:\n          description: Date/time the Workspace is created\n          type: string\n          format: 'date-time'\n          example: 2019-11-23T01:23:45Z\n        timestamp_updated:\n          description: Date/time the Workspace is last updated\n          type: string\n          format: 'date-time'\n          example: 2019-11-23T01:23:45Z\n        tags:\n          type: array\n          items:\n           allOf:\n              - \"$ref\": \"#/components/schemas/Tag\"\n              - x-secondary: osbrepository_tag\n      required:\n        - name\n        - repository_type\n        - content_types\n        - uri\n    OSBRepositoryEntity:\n      description: OSB Repository model\n      allOf:\n        - $ref: '#/components/schemas/OSBRepositoryBase'\n        - x-tablename: osbrepository\n    OSBRepository:\n      description: OSBRepository extended model\n      allOf:\n        - $ref: \"#/components/schemas/OSBRepositoryBase\"\n        - description: extra attributes\n          type: object\n          properties:\n            context_resources:\n              $ref: \"#/components/schemas/RepositoryResourceNode\"\n            contexts:\n              type: array\n              items:\n                type: string\n            user:\n              $ref: \"#/components/schemas/User\"\n            content_types_list:\n              type: array\n              items:\n                $ref: \"#/components/schemas/RepositoryContentType\"\n            description:\n              description: Repository description\n              type: string\n            timestamp_modified:\n              description: Date/time the OSBReposity is last modified\n              type: string\n              format: 'date-time'\n              example: 2019-11-23T01:23:45Z\n    ResourceBase:\n      description: Resource Base\n      type: object\n      properties:\n        name:\n          type: string\n          example: file.ext\n          description: file name\n        path:\n          type: string\n          example: https://raw.githubusercontent.com/OpenSourceBrain/OSBv2/master/.gitignore\n          description: Download URL of the Resource\n    RepositoryResourceBase:\n      description: Resource (files/folders) of an OSBRepository\n      allOf:\n        - $ref: \"#/components/schemas/ResourceBase\"\n        - description: GIT hub specific attributes of the RepositoryResource\n          type: object\n          properties:\n            osbrepository_id:\n              type: integer\n              description: OSB Repository id\n              example: 1\n            size:\n              type: integer\n              format: int64\n              example: 65535\n              description: File size in bytes of the RepositoryResource\n            timestamp_modified:\n              description: Date/time the ReposityResource is last modified\n              type: string\n              format: 'date-time'\n              example: 2019-11-23T01:23:45Z\n    FigshareRepositoryResource:\n      description: figshare repository resource\n      allOf:\n        - $ref: \"#/components/schemas/RepositoryResourceBase\"\n    DandiRepositoryResource:\n      description: dandi repository resource\n      allOf:\n        - $ref: \"#/components/schemas/RepositoryResourceBase\"\n    GITRepositoryResource:\n      description: github repository resource\n      allOf:\n        - $ref: \"#/components/schemas/RepositoryResourceBase\"\n        - description: GIT hub specific attributes of the RepositoryResource\n          type: object\n          properties:\n            ref:\n              description: The GIT ref\n              type: string\n              example: develop\n            sha:\n              description: The GIT sha of the resource\n              type: string\n    DownloadResource:\n      description: Download Resource (files/folders)\n      allOf:\n        - $ref: \"#/components/schemas/ResourceBase\"\n    RepositoryResource:\n      description: Repository resource\n      oneOf:\n        - $ref: \"#/components/schemas/FigshareRepositoryResource\"\n        - $ref: \"#/components/schemas/DandiRepositoryResource\"\n        - $ref: \"#/components/schemas/GITRepositoryResource\"\n    ResourceOrigin:\n      description: optional Resource where the WorkspaceResource is build from\n      oneOf:\n        - $ref: \"#/components/schemas/RepositoryResource\"\n        - $ref: \"#/components/schemas/DownloadResource\"\n    RepositoryResourceNode:\n      description: Tree node (files/folders) of a Repository tree\n      type: object\n      properties:\n        resource:\n          $ref: \"#/components/schemas/RepositoryResource\"\n        children:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RepositoryResourceNode\"\n      example:\n        name: /\n        timestamp_modified: 2019-11-23T01:23:45Z\n        children:\n          - name: README.md\n            timestamp_modified: 2019-11-23T01:23:45Z\n          - name: applications\n            timestamp_modified: 2019-11-23T01:23:45Z\n            children:\n              - name: accounts\n                timestamp_modified: 2019-11-23T01:23:45Z\n                children:\n                  - name: Dockerfile\n                    timestamp_modified: 2019-11-23T01:23:45Z\n\n    Tag:\n      title: Tag\n      type: object\n      x-tablename: tag\n      description: Tags\n      properties:\n        id:\n          $ref: '#/components/schemas/PrimaryKey'\n        tag:\n          type: string\n          x-unique: true\n          x-index: true\n",
			"canonicalURL": "/github.com/OpenSourceBrain/OSBv2@8b2d97d5c1f84c973066a82ab3503b187f104977/-/blob/applications/workspaces/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenSourceBrain/OSBv2/blob/8b2d97d5c1f84c973066a82ab3503b187f104977/applications/workspaces/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/osbrepository\": get: responses: code 200: contents: media: \"application/json\": generate schema: field osbrepositories: item: allOf: field tags: item: allOf: schema type mismatch: object and "
}