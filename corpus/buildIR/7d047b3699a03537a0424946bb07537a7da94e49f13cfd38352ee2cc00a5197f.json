{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RedHatInsights/playbook-dispatcher"
		},
		"file": {
			"name": "private.openapi.yaml",
			"size": 0,
			"path": "schema/private.openapi.yaml",
			"byteSize": 8790,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  title: Playbook Dispatcher Internal API\n  description: Playbook Dispatcher is a service for running Ansible Playbooks on hosts connected via Cloud Connector.\n  version: 1.0.0\n  contact:\n    email: jozef@redhat.com\n\nservers:\n  - url: /\n    description: relative path\n\npaths:\n  /internal/dispatch:\n    post:\n      summary: Dispatch Playbooks\n      description: Dispatches Playbooks using Cloud Connector and stores corresponding run records.\n      operationId: api.internal.runs.create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/RunInput'\n              minItems: 1\n              maxItems: 50\n      responses:\n        '207':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunsCreated'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n\n  /internal/version:\n    get:\n      summary: Get Version\n      description: Indicates the git revision the API was built from.\n      operationId: api.internal.version\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Version'\n\n  /internal/v2/recipients/status:\n    post:\n      summary: Obtain connection status of recipient(s)\n      description: Indicates whether the given recipient(s) are available\n      operationId: api.internal.v2.recipients.status\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/RecipientWithOrg'\n              minItems: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RecipientStatus'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n\n  /internal/v2/dispatch:\n    post:\n      summary: Dispatch Playbooks\n      description: Dispatches Playbooks using Cloud Connector and stores corresponding run records.\n      operationId: api.internal.v2.runs.create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/RunInputV2'\n              minItems: 1\n              maxItems: 50\n      responses:\n        '207':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunsCreated'\n\n  /internal/v2/cancel:\n    post:\n      summary: Cancel Playbook Runs\n      description: Cancels Playbook Runs using Cloud Connector\n      operationId: api.internal.v2.runs.cancel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items: \n                $ref: '#/components/schemas/CancelInputV2'\n              minItems: 1\n              maxItems: 50\n      responses:\n        '207':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunsCanceled'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n\ncomponents:\n  schemas:\n    RunInput:\n      type: object\n      properties:\n        recipient:\n          $ref: './public.openapi.yaml#/components/schemas/RunRecipient'\n        account:\n          $ref: './public.openapi.yaml#/components/schemas/Account'\n        url:\n          $ref: './public.openapi.yaml#/components/schemas/Url'\n        labels:\n          $ref: './public.openapi.yaml#/components/schemas/Labels'\n        timeout:\n          $ref: './public.openapi.yaml#/components/schemas/RunTimeout'\n        hosts:\n          $ref: '#/components/schemas/RunInputHosts'\n      required:\n      - recipient\n      - account\n      - url\n\n    RunInputV2:\n      type: object\n      properties:\n        recipient:\n          $ref: './public.openapi.yaml#/components/schemas/RunRecipient'\n        org_id:\n          $ref: './public.openapi.yaml#/components/schemas/OrgId'\n        principal:\n          $ref: '#/components/schemas/Principal'\n        url:\n          $ref: './public.openapi.yaml#/components/schemas/Url'\n        name:\n          $ref: './public.openapi.yaml#/components/schemas/PlaybookName'\n        web_console_url:\n          $ref: './public.openapi.yaml#/components/schemas/WebConsoleUrl'\n        labels:\n          $ref: './public.openapi.yaml#/components/schemas/Labels'\n        timeout:\n          $ref: './public.openapi.yaml#/components/schemas/RunTimeout'\n        hosts:\n          $ref: '#/components/schemas/RunInputHosts'\n        recipient_config:\n          $ref: '#/components/schemas/RecipientConfig'\n      required:\n      - recipient\n      - org_id\n      - principal\n      - url\n      - name\n\n    CancelInputV2:\n      type: object\n      properties:\n        run_id:\n          $ref: './public.openapi.yaml#/components/schemas/RunId'\n        org_id:\n          $ref: '#/components/schemas/OrgId'\n        principal:\n          $ref: '#/components/schemas/Principal'\n      required:\n      - run_id\n      - org_id\n      - principal\n    \n    RunCanceled:\n      type: object\n      properties:\n        run_id:\n          $ref: './public.openapi.yaml#/components/schemas/RunId'\n        code:\n          type: integer\n          example: 202\n          description: status code of the request\n      required:\n      - code\n      - run_id\n\n    RunInputHosts:\n      type: array\n      description: |\n        Optionally, information about hosts involved in the Playbook run can be provided.\n        This information is used to pre-allocate run_host resources.\n        Moreover, it can be used to create a connection between a run_host resource and host inventory.\n      items:\n        type: object\n        properties:\n          ansible_host:\n            type: string\n            description: |\n              Host name as known to Ansible inventory.\n              Used to identify the host in status reports.\n            example: localhost\n            minLength: 1\n          inventory_id:\n            type: string\n            format: uuid\n            description: Inventory id of the given host\n            example: ffb47020-a6fd-484d-80b5-da00a4a30bf2\n\n    RunCreated:\n      type: object\n      properties:\n        code:\n          type: integer\n          example: 201\n          description: status code of the request\n        id:\n          $ref: './public.openapi.yaml#/components/schemas/RunId'\n      required:\n      - code\n\n    RecipientConfig:\n      description: recipient-specific configuration options\n      type: object\n      properties:\n        sat_id:\n          description: Identifier of the Satellite instance in the uuid v4/v5 format\n          type: string\n          format: sat-id-uuid\n          example: aa3b1faa-56f3-4d14-8258-615d11e20060\n        sat_org_id:\n          description: Identifier of the organization within Satellite\n          type: string\n          example: \"12345\"\n          minLength: 1\n\n    RunsCanceled:\n      type: array\n      items:\n        $ref: '#/components/schemas/RunCanceled'\n\n    RunsCreated:\n      type: array\n      items:\n        $ref: '#/components/schemas/RunCreated'\n\n    RecipientWithOrg:\n      type: object\n      properties:\n        recipient:\n          $ref: './public.openapi.yaml#/components/schemas/RunRecipient'\n        org_id:\n          $ref: '#/components/schemas/OrgId'\n      required:\n      - recipient\n      - org_id\n\n    RecipientStatus:\n      allOf:\n      - $ref: '#/components/schemas/RecipientWithOrg'\n      - type: object\n        properties:\n          connected:\n            type: boolean\n            description: Indicates whether a connection is established with the recipient\n        required:\n        - connected\n\n    OrgId:\n      description: Identifies the organization that the given resource belongs to\n      type: string\n      minLength: 1\n      maxLength: 10\n\n    Principal:\n      description: Username of the user interacting with the service\n      type: string\n      example: jharting\n      minLength: 1\n\n    Version:\n      description: Version of the API\n      type: string\n      example: v2\n      minLength: 1\n\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Human readable error message\n          example: Minimum string length is 1\n      required:\n      - message\n\n  responses:\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n",
			"canonicalURL": "/github.com/RedHatInsights/playbook-dispatcher@01f91293e762df5d42dbeec88dfe6b8df57920c0/-/blob/schema/private.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/RedHatInsights/playbook-dispatcher/blob/01f91293e762df5d42dbeec88dfe6b8df57920c0/schema/private.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: reference type \"https://raw.githubusercontent.com/RedHatInsights/playbook-dispatcher/01f91293e762df5d42dbeec88dfe6b8df57920c0/schema/public.openapi.yaml#/components/schemas/OrgId\" name conflict: \"OrgId\""
}