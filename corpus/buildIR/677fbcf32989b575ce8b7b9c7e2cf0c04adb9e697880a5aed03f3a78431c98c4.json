{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/traPtitech/anke-to"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "docs/swagger/swagger.yaml",
			"byteSize": 31049,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://anke-to.trap.jp/api'\n    description: production\n  - url: 'http://localhost:8080/api'\n    description: local\ninfo:\n  title: anke-to API\n  version: 1.0.0-oas3\n  description: anke-to API\n  contact:\n    name: traP\n    url: 'https://github.com/traPtitech/anke-to'\nsecurity:\n  - application:\n      - read\n      - write\ntags:\n  - name: questionnaire\n  - name: question\n  - name: response\n  - name: user\n  - name: group\n  - name: result\npaths:\n  /questionnaires:\n    get:\n      operationId: getQuestionnaires\n      tags:\n        - questionnaire\n      description: 与えられた条件を満たす20件以下のアンケートのリストを取得します．\n      parameters:\n        - $ref: '#/components/parameters/sortInQuery'\n        - $ref: '#/components/parameters/searchInQuery'\n        - $ref: '#/components/parameters/pageInQuery'\n        - $ref: '#/components/parameters/nontargetedInQuery'\n      responses:\n        '200':\n          description: 正常に取得できました。アンケートの配列を返します。\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QuestionnairesWithPageMax'\n        '400':\n          description: 与えられた情報の形式が異なります\n        '500':\n          description: アンケートを正常に取得できませんでした\n        '503':\n          description: SQLの実行時間が3sを超えた場合。主に正規表現が原因。\n    post:\n      operationId: postQuestionnaire\n      tags:\n        - questionnaire\n      description: 新しいアンケートを作成します．\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewQuestionnaire'\n      responses:\n        '201':\n          description: 正常にアンケートを作成できました．作成されたアンケートを返します．\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NewQuestionnaireResponse'\n        '400':\n          description: 与えられた情報の形式が異なります\n        '500':\n          description: アンケートを正常に作成できませんでした\n\n  '/questionnaires/{questionnaireID}':\n    get:\n      operationId: getQuestionnaire\n      tags:\n        - questionnaire\n      description: アンケートの情報を取得します。\n      parameters:\n        - $ref: '#/components/parameters/questionnaireIDInPath'\n      responses:\n        '200':\n          description: 正常に取得できました。\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QuestionnaireByID'\n        '400':\n          description: アンケートのIDが無効です\n        '404':\n          description: アンケートが存在しません\n        '500':\n          description: アンケートを正常に取得できませんでした\n    patch:\n      operationId: editQuestionnaire\n      tags:\n        - questionnaire\n      description: アンケートの情報を変更します．\n      parameters:\n        - $ref: '#/components/parameters/questionnaireIDInPath'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewQuestionnaire'\n      responses:\n        '200':\n          description: 正常にアンケートを変更できました．\n        '400':\n          description: アンケートのIDが無効です\n        '500':\n          description: 正常にアンケートを変更できませんでした\n    delete:\n      operationId: delteQuestionnaire\n      tags:\n        - questionnaire\n      description: アンケートを削除します．\n      parameters:\n        - $ref: '#/components/parameters/questionnaireIDInPath'\n      responses:\n        '200':\n          description: 正常にアンケートを削除できました．\n        '400':\n          description: アンケートのIDが無効です\n        '500':\n          description: アンケートの削除ができませんでした\n  '/questionnaires/{questionnaireID}/questions':\n    get:\n      operationId: getQuestions\n      tags:\n        - questionnaire\n      description: アンケートに含まれる質問のリストを取得します。\n      parameters:\n        - $ref: '#/components/parameters/questionnaireIDInPath'\n      responses:\n        '200':\n          description: 正常に取得できました。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/QuestionDetails'\n        '400':\n          description: アンケートのIDが無効です\n        '500':\n          description: 質問のリストを取得できませんでした\n    post:\n      operationId: PostQuestionByQuestionnaireID\n      tags:\n        - questionnaire\n      parameters:\n        - $ref: '#/components/parameters/questionnaireIDInPath'\n      description: 新しい質問を作成します．\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewQuestion'\n      responses:\n        '201':\n          description: 正常に質問を作成できました．作成された質問を返します．\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Question'\n        '400':\n          description: 正常に作成できませんでした。リクエストが不正です。\n        '500':\n          description: 正常に作成できません。主に正規表現が原因。\n  '/questions/{questionID}':\n    patch:\n      operationId: editQuestion\n      tags:\n        - question\n      description: 質問を変更します．\n      parameters:\n        - $ref: '#/components/parameters/questionIDInPath'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewQuestion'\n      responses:\n        '200':\n          description: 正常に質問を変更できました．\n        '400':\n          description: 正常に変更できませんでした。リクエストが不正です。\n        '500':\n          description: 正常に変更できませんでした。主に正規表現が原因。\n    delete:\n      operationId: deleteQuestion\n      tags:\n        - question\n      description: 質問を削除します．\n      parameters:\n        - $ref: '#/components/parameters/questionIDInPath'\n      responses:\n        '200':\n          description: 正常に質問を削除できました。\n        '500':\n          description: 正常に削除できませんでした。存在しない質問です。\n  /responses:\n    post:\n      operationId: postResponse\n      tags:\n        - response\n      description: 新しい回答を作成します．\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostResponse'\n      responses:\n        '201':\n          description: 正常に回答を作成できました．作成された回答を返します．\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseDetails'\n        '400':\n          description: 与えられた情報の形式が異なります\n        '404':\n          description: アンケートの回答の期限がきれたため回答が存在しません\n        '405':\n          description: 回答期限が過ぎたため回答できません\n        '500':\n          description: 正常に回答が作成できませんでした\n  '/responses/{responseID}':\n    get:\n      operationId: getResponses\n      tags:\n        - response\n      description: あるresponseIDを持つ回答に含まれる全ての質問に対する自分の回答を取得します\n      parameters:\n        - $ref: '#/components/parameters/responseIDInPath'\n      responses:\n        '200':\n          description: 正常に取得できました。\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response'\n        '400':\n          description: responseIDが数値に変換できませんでした\n        '404':\n          description: アンケートの回答の期限がきれたため回答が存在しません\n        '500':\n          description: responseIDを取得できませんでした\n    patch:\n      operationId: editResponse\n      tags:\n        - response\n      description: 回答を変更します．\n      parameters:\n        - $ref: '#/components/parameters/responseIDInPath'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewResponse'\n      responses:\n        '200':\n          description: 正常に回答を変更できました．\n        '400':\n          description: 与えられた回答の情報が異なります\n        '404':\n          description: アンケートの回答の期限がきれたため回答が存在しません\n        '405':\n          description: 回答期限が過ぎたため回答できません\n        '500':\n          description: responseIDを取得できませんでした\n    delete:\n      operationId: deleteResponse\n      tags:\n        - response\n      description: 回答を削除します．\n      parameters:\n        - $ref: '#/components/parameters/responseIDInPath'\n      responses:\n        '200':\n          description: 正常に回答を削除できました．\n        '400':\n          description: 与えられた回答の情報が異なります\n        '404':\n          description: アンケートの回答の期限がきれたため回答が存在しません\n        '405':\n          description: 回答期限が過ぎたため回答できません\n        '500':\n          description: responseIDを取得できませんでした\n  /users:\n    get:\n      operationId: getUsers\n      tags:\n        - user\n      summary: 未実装\n      description: (botおよび除名されたユーザーを除く、全ての) ユーザーのtraQIDのリストを取得します。\n      responses:\n        '200':\n          description: 正常に取得できました．ユーザーの配列を返します．\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n  /users/me:\n    get:\n      operationId: getUsersMe\n      tags:\n        - user\n      description: 自分のユーザー情報を取得します\n      responses:\n        '200':\n          description: 正常に取得できました。\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Me'\n        '500':\n          description: Userが取得できませんでした\n  /users/me/responses:\n    get:\n      operationId: getMyResponses\n      tags:\n        - user\n      description: 自分のすべての回答のリストを取得します。\n      responses:\n        '200':\n          description: 正常に取得できました。回答の配列を返します。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ResponseSummary'\n        '500':\n          description: Userが取得できませんでした\n  '/users/me/responses/{questionnaireID}':\n    get:\n      operationId: getMyResponsesByID\n      tags:\n        - user\n      parameters:\n        - $ref: '#/components/parameters/questionnaireIDInPath'\n      description: 特定のquestionnaireIdを持つアンケートに対する自分のすべての回答のリストを取得します。\n      responses:\n        '200':\n          description: 正常に取得できました。回答の配列を返します。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ResponseSummary'\n        '400':\n          description: questionnaireIDの型が数値ではありません\n        '500':\n          description: 回答のリストを取得できませんでした\n  /users/me/targeted:\n    get:\n      operationId: getTargetedQuestionnaire\n      tags:\n        - user\n      description: 自分が対象になっている アンケートのリストを取得します。\n      parameters:\n        - $ref: '#/components/parameters/sortInQuery'\n      responses:\n        '200':\n          description: 正常に取得できました。アンケートの配列を返します。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/QuestionnaireMyTargeted'\n        '500':\n          description: 自分のUserIDが取得できませんでした\n  /users/{traQID}/targeted:\n    get:\n      operationId: getTargettedQuestionnairesBytraQID\n      tags:\n        - user\n      description: ユーザが対象になっているアンケートのリストを取得します。\n      parameters:\n        - $ref: '#/components/parameters/sortInQuery'\n        - $ref: '#/components/parameters/answeredInQuery'\n        - $ref: '#/components/parameters/traQIDInPath'\n      responses:\n        '200':\n          description: 正常に取得できました。アンケートの配列を返します。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/QuestionnaireMyTargeted'\n        '400':\n          description: 与えらえた情報の形式が異なります\n        '500':\n          description: 対象となっているアンケートのリストを取得できませんでした\n  /users/me/administrates:\n    get:\n      operationId: getMyQuestionnaire\n      tags:\n        - user\n      description: 自分が管理者になっているアンケートのリストを取得します。\n      responses:\n        '200':\n          description: 正常に取得できました。アンケートの配列を返します。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/QuestionnaireMyAdministrates'\n        '500':\n          description: 自分が管理者となっているアンケートのリストを取得できませんでした\n  /groups:\n    get:\n      operationId: getGroups\n      tags:\n        - group\n      summary: 未実装\n      description: (全ての) グループのリストを取得します\n      responses:\n        '200':\n          description: 正常に取得できました．グループの配列を返します．\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Group'\n  '/results/{questionnaireID}':\n    get:\n      operationId: getResults\n      tags:\n        - result\n      parameters:\n        - $ref: '#/components/parameters/questionnaireIDInPath'\n        - $ref: '#/components/parameters/responseSortInQuery'\n      description: あるquestionnaireIDを持つアンケートの結果をすべて取得します。\n      responses:\n        '200':\n          description: 正常に取得できました。アンケートの各質問に対する結果の配列を返します。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ResponseResult'\n        '400':\n          description: questionnaireIDの型を数値に変換できませんでした\n        '403':\n          description: 結果を閲覧する権限がありません。\n        '500':\n          description: アンケートの回答の詳細情報一覧が取得できませんでした\ncomponents:\n  parameters:\n    answeredInQuery:\n      name: answered\n      in: query\n      description: 回答したもの(answered)か未回答のもの(unanswered)かを選別\n      schema:\n        $ref: '#/components/schemas/AnsweredType'\n    sortInQuery:\n      name: sort\n      in: query\n      description:\n        並び順 (作成日時が新しい \"created_at\", 作成日時が古い \"-created_at\", タイトルの昇順 \"title\",\n        タイトルの降順 \"-title\", 更新日時が新しい \"modified_at\", 更新日時が古い\n        \"-modified_at\" )\n      schema:\n        $ref: '#/components/schemas/SortType'\n    responseSortInQuery:\n      name: sort\n      in: query\n      description:\n        並び順 (作成日時が新しい \"submitted_at\", 作成日時が古い \"-submitted_at\", タイトルの昇順 \"title\",\n        タイトルの降順 \"-title\", 更新日時が新しい \"modified_at\", 更新日時が古い\n        \"-modified_at\" )\n      schema:\n        $ref: '#/components/schemas/ResponseSortType'\n    searchInQuery:\n      name: search\n      in: query\n      description: タイトルの検索\n      schema:\n        type: string\n    pageInQuery:\n      name: page\n      in: query\n      description: 何ページ目か (未定義の場合は1ページ目)\n      schema:\n        type: integer\n    nontargetedInQuery:\n      name: nontargeted\n      in: query\n      description: |\n        自分がターゲットになっていないもののみ取得 (true), ターゲットになっているものも含めてすべて取得 (false)。デフォルトはfalse。\n      schema:\n        type: boolean\n    questionnaireIDInPath:\n      name: questionnaireID\n      in: path\n      required: true\n      description: |\n        アンケートID\n      schema:\n        type: integer\n    questionIDInPath:\n      name: questionID\n      in: path\n      required: true\n      description: |\n        質問ID\n      schema:\n        type: integer\n    responseIDInPath:\n      name: responseID\n      in: path\n      required: true\n      description: |\n        回答ID\n      schema:\n        type: integer\n    traQIDInPath:\n      name: traQID\n      in: path\n      required: true\n      description: |\n        traQ ID(ex:mazrean)\n      schema:\n        type: string\n  schemas:\n    AnsweredType:\n      type: string\n      description: アンケート検索時に回答済みかの状態での絞り込み\n      enum:\n        - answered\n        - unanswered\n      x-enum-varnames:\n        - Answered\n        - Unanswered\n    SortType:\n      type: string\n      description: question、questionnaire用のソートの種類\n      enum:\n        - created_at\n        - -created_at\n        - title\n        - -title\n        - modified_at\n        - -modified_at\n      x-enum-varnames:\n        - CreatedAtASC\n        - CreatedAtDESC\n        - TitleASC\n        - TitleDESC\n        - ModifiedAtASC\n        - ModifiedAtDESC\n    ResponseSortType:\n      type: string\n      description: response用のsortの種類\n      enum:\n        - submitted_at\n        - -submitted_at\n        - title\n        - -title\n        - modified_at\n        - -modified_at\n      x-enum-varnames:\n        - SubmittedAtASC\n        - SubmittedAtDESC\n        - TitleASC\n        - TitleDESC\n        - ModifiedAtASC\n        - ModifiedAtDESC\n    ResShareType:\n      type: string\n      example: public\n      enum:\n        - administrators\n        - respondents\n        - public\n      description: |\n        アンケートの結果を, 運営は見られる (\"administrators\"), 回答済みの人は見られる (\"respondents\") 誰でも見られる (\"public\")\n    NewQuestionnaire:\n      type: object\n      properties:\n        title:\n          type: string\n          example: 第1回集会らん☆ぷろ募集アンケート\n        description:\n          type: string\n          example: 第1回メンバー集会でのらん☆ぷろで発表したい人を募集します らん☆ぷろで発表したい人あつまれー！\n        res_time_limit:\n          type: string\n          format: date-time\n        res_shared_to:\n          $ref: '#/components/schemas/ResShareType'\n        targets:\n          $ref: '#/components/schemas/Users'\n        administrators:\n          $ref: '#/components/schemas/Users'\n      required:\n        - title\n        - description\n        - res_time_limit\n        - res_shared_to\n        - targets\n        - administrators\n    NewQuestionnaireResponse:\n      allOf:\n      - $ref: '#/components/schemas/QuestionnaireUser'\n    Questionnaire:\n      type: object\n      properties:\n        questionnaireID:\n          type: integer\n          example: 1\n        title:\n          type: string\n          example: 第1回集会らん☆ぷろ募集アンケート\n        description:\n          type: string\n          example: 第1回メンバー集会でのらん☆ぷろで発表したい人を募集します らん☆ぷろで発表したい人あつまれー！\n        res_time_limit:\n          type: string\n          format: date-time\n        created_at:\n          type: string\n          format: date-time\n        modified_at:\n          type: string\n          format: date-time\n        res_shared_to:\n          $ref: '#/components/schemas/ResShareType'\n      required:\n        - questionnaireID\n        - title\n        - description\n        - res_time_limit\n        - created_at\n        - modified_at\n        - res_shared_to\n        - targets\n    QuestionnaireForList:\n      allOf:\n        - $ref: '#/components/schemas/Questionnaire'\n        - type: object\n          properties:\n            is_targeted:\n              type: boolean\n              example: true\n              description: |\n                自分がターゲットになっているかどうか\n          required:\n            - is_targeted\n    QuestionnairesWithPageMax:\n      type: object\n      properties:\n        page_max:\n          type: integer\n          description: 最大ページ数\n        questionnaires:\n          type: array\n          items:\n            $ref: '#/components/schemas/QuestionnaireForList'\n      required:\n        - page_max\n        - questionnaires\n    QuestionnaireByID:\n      allOf:\n        - $ref: '#/components/schemas/QuestionnaireUser'\n        - type: object\n          properties:\n            respondents:\n              $ref: '#/components/schemas/Users'\n          required:\n            - respondents\n    QuestionnaireMyTargeted:\n      allOf:\n      - $ref: '#/components/schemas/Questionnaire'\n      - type: object\n        properties:\n          responded_at:\n            type: string\n            format: date-time\n          has_response:\n            type: boolean\n            description: 回答済みあるいは下書きが存在する\n        required:\n          - responded_at\n          - has_response\n    QuestionnaireMyAdministrates:\n        allOf:\n        - $ref: '#/components/schemas/QuestionnaireUser'\n        - type: object\n          properties:\n            all_responded:\n              type: boolean\n              example: true\n              description: |\n                回答必須でない場合、またはすべてのターゲットが回答済みの場合、true を返す。それ以外はfalseを返す。\n            respondents:\n              $ref: '#/components/schemas/Users'\n          required:\n            - all_responded\n            - respondents\n    QuestionnaireUser:\n      allOf:\n      - $ref: '#/components/schemas/Questionnaire'\n      - type: object\n        properties:\n          targets:\n            $ref: '#/components/schemas/Users'\n          administrators:\n            $ref: '#/components/schemas/Users'\n        required:\n          - targets\n          - administrators\n    QuestionType:\n      type: string\n      example: Text\n      enum:\n        - Text\n        - TextArea\n        - Number\n        - MultipleChoice\n        - Checkbox\n        - LinearScale\n      description: |\n        どのタイプの質問か (\"Text\", \"TextArea\", \"Number\", \"MultipleChoice\", \"Checkbox\", \"LinearScale\")\n    QuestionBase:\n      type: object\n      properties:\n        page_num:\n          type: integer\n          example: 1\n          description: |\n            アンケートの何ページ目の質問か\n        question_num:\n          type: integer\n          example: 1\n          description: |\n            アンケートの質問のうち、何問目か\n        question_type:\n          $ref: '#/components/schemas/QuestionType'\n        body:\n          type: string\n          example: 質問文\n        is_required:\n          type: boolean\n          example: true\n          description: |\n            回答必須かどうか\n        options:\n          type: array\n          items:\n            type: string\n            example: 選択肢1\n        scale_label_right:\n          type: string\n          example: そう思わない\n        scale_label_left:\n          type: string\n          example: そう思う\n        scale_min:\n          type: integer\n          example: 1\n        scale_max:\n          type: integer\n          example: 5\n        regex_pattern:\n          type: string\n          example: ''\n        min_bound:\n          type: string\n          example: ''\n        max_bound:\n          type: string\n          example: ''\n      required:\n        - page_num\n        - question_num\n        - question_type\n        - body\n        - is_required\n        - options\n        - scale_label_right\n        - scale_label_left\n        - scale_min\n        - scale_max\n    NewQuestion:\n      allOf:\n      - $ref: '#/components/schemas/QuestionBase'\n      - type: object\n        properties:\n          questionnaireID:\n            type: integer\n            example: 1\n        required:\n          - questionnaireID\n    Question:\n      allOf:\n      - $ref: '#/components/schemas/NewQuestion'\n      - type: object\n        properties:\n          questionID:\n            type: integer\n            example: 1\n        required:\n          - questionID\n    QuestionDetails:\n      allOf:\n      - $ref: '#/components/schemas/QuestionBase'\n      - type: object\n        properties:\n          questionID:\n            type: integer\n            example: 1\n          created_at:\n            type: string\n            format: date-time\n        required:\n          - questionID\n          - created_at\n    NewResponse:\n      type: object\n      properties:\n        questionnaireID:\n          type: integer\n          example: 1\n        body:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResponseBody'\n        submitted_at:\n          type: string\n          format: date-time\n      required:\n        - temporarily\n        - questionnaireID\n        - body\n    PostResponse:\n      type: object\n      properties:\n        questionnaireID:\n          type: integer\n          example: 1\n        body:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResponseBody'\n        temporarily:\n          type: boolean\n          example: true\n        submitted_at:\n          type: string\n          format: date-time\n      required:\n        - temporarily\n        - questionnaireID\n        - body\n    Response:\n      allOf:\n        - $ref: '#/components/schemas/NewResponse'\n        - type: object\n          properties:\n            modified_at:\n              type: string\n              format: date-time\n          required:\n            - modified_at\n    ResponseDetails:\n      allOf:\n        - $ref: '#/components/schemas/NewResponse'\n        - type: object\n          properties:\n            responseID:\n              type: integer\n              example: 1\n          required:\n            - responseID\n    ResponseSummary:\n      type: object\n      properties:\n        responseID:\n          type: integer\n          example: 1\n        questionnaireID:\n          type: integer\n          example: 1\n        questionnaire_title:\n          type: string\n          example: 第1回集会らん☆ぷろ募集アンケート\n        res_time_limit:\n          type: string\n          format: date-time\n        submitted_at:\n          type: string\n          format: date-time\n        modified_at:\n          type: string\n          format: date-time\n      required:\n        - responseID\n        - questionnaireID\n        - questionnaire_title\n        - modified_at\n    ResponseBody:\n      type: object\n      properties:\n        questionID:\n          type: integer\n          example: 1\n        question_type:\n          $ref: '#/components/schemas/QuestionType'\n        response:\n          type: string\n          example: リマインダーBOTを作った話\n        option_response:\n          type: array\n          items:\n            type: string\n            example: 選択肢1\n      required:\n        - questionID\n        - question_type\n    ResponseResult:\n      allOf:\n      - $ref: '#/components/schemas/Response'\n      - type: object\n        properties:\n          traqID:\n            type: string\n            example: lolico\n        required:\n          - traqID\n      required:\n        - submitted_at\n    Users:\n      type: array\n      items:\n        type: string\n        example: lolico\n    User:\n      type: object\n      properties:\n        userId:\n          type: string\n          format: uuid\n        traqID:\n          type: string\n          example: lolico\n        displayName:\n          type: string\n          example: ロリ子\n        iconFileId:\n          type: string\n          format: uuid\n        twitterId:\n          type: string\n          example: trapyojo\n      required:\n        - userId\n        - traqID\n        - displayName\n        - iconFileId\n        - twitterId\n    Me:\n      type: object\n      properties:\n        traqID:\n          type: string\n          example: lolico\n      required:\n        - traqID\n    Group:\n      type: object\n      properties:\n        groupId:\n          type: string\n          format: uuid\n        name:\n          type: string\n          example: 17B\n        description:\n          type: string\n          example: 2017年度入学学部生\n        adminUser:\n          type: string\n          example: lolico\n        members:\n          type: array\n          items:\n            $ref: '#/components/schemas/Users'\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n      required:\n        - groupId\n        - name\n        - description\n        - adminUser\n        - members\n        - createdAt\n        - updatedAt\n  securitySchemes:\n    application:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: 'http://example.com/oauth/token'\n          scopes:\n            write: allows modifying resources\n            read: allows reading resources\n",
			"canonicalURL": "/github.com/traPtitech/anke-to@ae394bc63b3215a925038f3b6edcdbb0c6f13bd6/-/blob/docs/swagger/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/traPtitech/anke-to/blob/ae394bc63b3215a925038f3b6edcdbb0c6f13bd6/docs/swagger/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/questionnaires/{questionnaireID}\": get: responses: code 200: contents: media: \"application/json\": generate schema: allOf: schema type mismatch:  and object",
	"NotImplemented": [
		"oauth2 security"
	]
}