{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sscarduzio/elasticsearch-readonlyrest-plugin"
		},
		"file": {
			"name": "ror-internal-api-swagger.yaml",
			"size": 0,
			"path": "docs/api/ror-internal-api-swagger.yaml",
			"byteSize": 42052,
			"content": "openapi: 3.0.3\ninfo:\n  title: ROR Internal API\n  description: The API is designed for ROR KBN plugin. It should be treated as internal. It means that backward compatibility won't be a first-class thing for us.\n  version: 1.0.0\n\npaths:\n  /_readonlyrest/admin/config/test:\n    get:\n      summary: Getting currently applied Test Settings\n      description: The endpoint can be used to fetch currently configured Test settings. If Test settings are not configured, the endpoint returns proper error.\n      tags:\n        - Test Settings\n      parameters:\n        - $ref: '#/components/parameters/XRorCorrelationIdHeader'\n      responses:\n        200:\n          description: Contains currenlty configured Test Settings or business error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTestSettingsResponse'\n              examples:\n                TestSettingsAreConfiguredAndValidResponseExample:\n                  $ref: \"#/components/examples/TestSettingsAreConfiguredAndValidResponseExample\"\n                TestSettingsAreConfiguredAndValidButWithWarningsResponseExample:\n                  $ref: \"#/components/examples/TestSettingsAreConfiguredAndValidButWithWarningsResponseExample\"\n                TestSettingsNotConfiguredResponseExample:\n                  $ref: \"#/components/examples/TestSettingsNotConfiguredResponseExample\"\n                TestSettingsInvalidatedResponseExample:\n                  $ref: \"#/components/examples/TestSettingsInvalidatedResponseExample\"\n        403:\n          description: The request was forbidden by ROR's ACL\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenRorResponse'\n              examples:\n                NoAclBlockWasMatchedForbiddenResponseExample:\n                  $ref: \"#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample\"\n                ForbidBlockMatchedResponseExample:\n                  $ref: \"#/components/examples/ForbidBlockMatchedResponseExample\"\n                TestSettingsNotConfiguredForbiddenResponseExample:\n                  $ref: \"#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample\"\n                ImpersonationNotSupportedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotSupportedResponseExample\"\n                ImpersonationNotAllowedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotAllowedResponseExample\"\n                RorIsNotStartedYetResponseExample:\n                  $ref: \"#/components/examples/RorIsNotStartedYetResponseExample\"\n                RorFailedToStartResponseExample:\n                  $ref: \"#/components/examples/RorFailedToStartResponseExample\"\n    post:\n      summary: Configuring Test Settings\n      description: The endpoint can be used to configure Test Settings.\n      tags:\n        - Test Settings\n      parameters:\n        - $ref: '#/components/parameters/XRorCorrelationIdHeader'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTestSettingsRequest'\n      responses:\n        200:\n          description: Test Settings were configured or business error was returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateTestSettingsResponse'\n              examples:\n                TestSettingsUpdatedResponseExample:\n                  $ref: \"#/components/examples/TestSettingsUpdatedResponseExample\"\n                TestSettingsUpdateFailedResponseExample:\n                  $ref: \"#/components/examples/TestSettingsUpdateFailedResponseExample\"\n        403:\n          description: The request was forbidden by ROR's ACL\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenRorResponse'\n              examples:\n                NoAclBlockWasMatchedForbiddenResponseExample:\n                  $ref: \"#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample\"\n                ForbidBlockMatchedResponseExample:\n                  $ref: \"#/components/examples/ForbidBlockMatchedResponseExample\"\n                TestSettingsNotConfiguredForbiddenResponseExample:\n                  $ref: \"#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample\"\n                ImpersonationNotSupportedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotSupportedResponseExample\"\n                ImpersonationNotAllowedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotAllowedResponseExample\"\n                RorIsNotStartedYetResponseExample:\n                  $ref: \"#/components/examples/RorIsNotStartedYetResponseExample\"\n                RorFailedToStartResponseExample:\n                  $ref: \"#/components/examples/RorFailedToStartResponseExample\"\n    delete:\n      summary: Invalidating Test Settings\n      description: The endpoint can be used to invalidate Test Settings early\n      tags:\n        - Test Settings\n      parameters:\n        - $ref: '#/components/parameters/XRorCorrelationIdHeader'\n      responses:\n        200:\n          description: Contains confirmation of Test Settings invalidation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidateTestSettingsResponse'\n              examples:\n                InvalidateTestSettingsResponseExample:\n                  $ref: \"#/components/examples/InvalidateTestSettingsResponseExample\"\n        403:\n          description: The request was forbidden by ROR's ACL\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenRorResponse'\n              examples:\n                NoAclBlockWasMatchedForbiddenResponseExample:\n                  $ref: \"#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample\"\n                ForbidBlockMatchedResponseExample:\n                  $ref: \"#/components/examples/ForbidBlockMatchedResponseExample\"\n                TestSettingsNotConfiguredForbiddenResponseExample:\n                  $ref: \"#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample\"\n                ImpersonationNotSupportedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotSupportedResponseExample\"\n                ImpersonationNotAllowedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotAllowedResponseExample\"\n                RorIsNotStartedYetResponseExample:\n                  $ref: \"#/components/examples/RorIsNotStartedYetResponseExample\"\n                RorFailedToStartResponseExample:\n                  $ref: \"#/components/examples/RorFailedToStartResponseExample\"\n  /_readonlyrest/admin/config/test/localusers:\n    get:\n      summary: Getting list of local users\n      description: The endpoint can be used to fetch local users' names defined in currenlty configured Test settings. If Test settings are not configured, the endpoint returns proper error.\n      tags:\n        - Test Settings\n      parameters:\n        - $ref: '#/components/parameters/XRorCorrelationIdHeader'\n      responses:\n        200:\n          description: Contains local users or business error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLocalUsersFromTestSettingsResponse'\n              examples:\n                GetLocalUsersFromTestSettingsResponseExample:\n                  $ref: \"#/components/examples/GetLocalUsersFromTestSettingsResponseExample\"\n                TestSettingsNotConfiguredResponseExample:\n                  $ref: \"#/components/examples/TestSettingsNotConfiguredResponseExample\"\n        403:\n          description: The request was forbidden by ROR's ACL\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenRorResponse'\n              examples:\n                NoAclBlockWasMatchedForbiddenResponseExample:\n                  $ref: \"#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample\"\n                ForbidBlockMatchedResponseExample:\n                  $ref: \"#/components/examples/ForbidBlockMatchedResponseExample\"\n                TestSettingsNotConfiguredForbiddenResponseExample:\n                  $ref: \"#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample\"\n                ImpersonationNotSupportedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotSupportedResponseExample\"\n                ImpersonationNotAllowedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotAllowedResponseExample\"\n                RorIsNotStartedYetResponseExample:\n                  $ref: \"#/components/examples/RorIsNotStartedYetResponseExample\"\n                RorFailedToStartResponseExample:\n                  $ref: \"#/components/examples/RorFailedToStartResponseExample\"\n  /_readonlyrest/admin/config/test/authmock:\n    get:\n      summary: Getting currently configured Auth Services mocks\n      description: The endpoint can be used to fetch mocks for Auth Services defined in ReadonlyREST's Tests settings. If Test settings are not configured, the endpoint returns proper error.\n      tags:\n        - Test Settings\n      parameters:\n        - $ref: '#/components/parameters/XRorCorrelationIdHeader'\n      responses:\n        200:\n          description: Contains authentication services mocks definitions or business error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAuthMocksResponse'\n              examples:\n                AllTypesOfAuthServicesConfiguredResponseExample:\n                  $ref: \"#/components/examples/AllTypesOfAuthServicesConfiguredResponseExample\"\n                NoAuthServiceConfiguredResponseExample:\n                  $ref: \"#/components/examples/NoAuthServiceConfiguredResponseExample\"\n                OnlySomeAuthServicesConfiguredResponseExample:\n                  $ref: \"#/components/examples/OnlySomeAuthServicesConfiguredResponseExample\"\n                TestSettingsNotConfiguredAuthServicesResponseExample:\n                  $ref: \"#/components/examples/TestSettingsNotConfiguredAuthServicesResponseExample\"\n                TestSettingsInvalidatedAuthServicesResponseExample:\n                  $ref: \"#/components/examples/TestSettingsInvalidatedAuthServicesResponseExample\"\n        403:\n          description: The request was forbidden by ROR's ACL\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenRorResponse'\n              examples:\n                NoAclBlockWasMatchedForbiddenResponseExample:\n                  $ref: \"#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample\"\n                ForbidBlockMatchedResponseExample:\n                  $ref: \"#/components/examples/ForbidBlockMatchedResponseExample\"\n                TestSettingsNotConfiguredForbiddenResponseExample:\n                  $ref: \"#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample\"\n                ImpersonationNotSupportedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotSupportedResponseExample\"\n                ImpersonationNotAllowedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotAllowedResponseExample\"\n                RorIsNotStartedYetResponseExample:\n                  $ref: \"#/components/examples/RorIsNotStartedYetResponseExample\"\n                RorFailedToStartResponseExample:\n                  $ref: \"#/components/examples/RorFailedToStartResponseExample\"\n    post:\n      summary: Configuring Auth Services mocks\n      description: The endpoint can be used to update mocks for Auth Services defined in ReadonlyREST's Tests settings. If Test settings are not configured, the endpoint returns proper error.\n      tags:\n        - Test Settings\n      parameters:\n        - $ref: '#/components/parameters/XRorCorrelationIdHeader'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAuthMockRequest'\n            examples:\n              AllTypesOfAuthServicesConfiguredResponseExample:\n                $ref: \"#/components/examples/AllTypesOfAuthServicesConfiguredRequestExample\"\n              NoAuthServiceConfiguredResponseExample:\n                $ref: \"#/components/examples/NoAuthServiceConfiguredRequestExample\"\n              OnlySomeAuthServicesConfiguredResponseExample:\n                $ref: \"#/components/examples/OnlySomeAuthServicesConfiguredRequestExample\"\n      responses:\n        200:\n          description: Auth Services Mocks were configured or business error was returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAuthMocksResponse'\n              examples:\n                AuthMocksUpdatedResponseExample:\n                  $ref: \"#/components/examples/AuthMocksUpdatedResponseExample\"\n                TestSettingsNotConfiguredAuthServicesResponseExample:\n                  $ref: \"#/components/examples/TestSettingsNotConfiguredAuthServicesResponseExample\"\n                TestSettingsInvalidatedAuthServicesResponseExample:\n                  $ref: \"#/components/examples/TestSettingsInvalidatedAuthServicesResponseExample\"\n                UnknownAuthServicesDetectedResponseExample:\n                  $ref: \"#/components/examples/UnknownAuthServicesDetectedResponseExample\"\n        403:\n          description: The request was forbidden by ROR's ACL\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenRorResponse'\n              examples:\n                NoAclBlockWasMatchedForbiddenResponseExample:\n                  $ref: \"#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample\"\n                ForbidBlockMatchedResponseExample:\n                  $ref: \"#/components/examples/ForbidBlockMatchedResponseExample\"\n                TestSettingsNotConfiguredForbiddenResponseExample:\n                  $ref: \"#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample\"\n                ImpersonationNotSupportedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotSupportedResponseExample\"\n                ImpersonationNotAllowedResponseExample:\n                  $ref: \"#/components/examples/ImpersonationNotAllowedResponseExample\"\n                RorIsNotStartedYetResponseExample:\n                  $ref: \"#/components/examples/RorIsNotStartedYetResponseExample\"\n                RorFailedToStartResponseExample:\n                  $ref: \"#/components/examples/RorFailedToStartResponseExample\"\n\ncomponents:\n  securitySchemes:\n    http:\n      type: http\n      scheme: basic\n\n  schemas:\n    ForbiddenRorResponse:\n      type: object\n      required:\n        - error\n        - status\n      properties:\n        error:\n          type: object\n          required:\n            - type\n            - reason\n            - due_to\n          properties:\n            type:\n              type: string\n              enum:\n                - forbidden_response\n            reason:\n              type: string\n              enum:\n                - forbidden\n            due_to:\n              type: array\n              description: |\n                It's an array of causes why ROR's ACL forbade the request. \n                WARNING: Please notice, that one element array ES used to print as a string!!!\n              items:\n                type: string\n                enum:\n                  - OPERATION_NOT_ALLOWED\n                  - FORBIDDEN_BY_BLOCK\n                  - TEST_SETTINGS_NOT_CONFIGURED\n                  - IMPERSONATION_NOT_SUPPORTED\n                  - IMPERSONATION_NOT_ALLOWED\n                  - READONLYREST_NOT_READY_YET\n                  - READONLYREST_NOT_ENABLED\n                  - READONLYREST_FAILED_TO_START\n        status:\n          type: number\n          example: 403\n\n    XRorCorrelationId:\n      type: string\n      description: \"Correlation ID to correlate requests/responses logs within one ROR KBN session\"\n      example: \"CED054A0-9881-401E-AEED-4FB4C5915DD6\"\n\n    GetTestSettingsResponse:\n      oneOf:\n        - $ref: '#/components/schemas/CurrentTestSettingsResponse'\n        - $ref: '#/components/schemas/TestSettingsNotConfiguredResponse'\n        - $ref: '#/components/schemas/TestSettingsInvalidatedResponse'\n      discriminator:\n        propertyName: status\n        mapping:\n          TEST_SETTINGS_PRESENT: '#/components/schemas/CurrentTestSettingsResponse'\n          TEST_SETTINGS_NOT_CONFIGURED: '#/components/schemas/TestSettingsNotConfiguredResponse'\n          TEST_SETTINGS_INVALIDATED: '#/components/schemas/TestSettingsInvalidatedResponse'\n\n    TestSettingsNotConfiguredResponse:\n      type: object\n      required:\n        - status\n        - message\n      properties:\n        status:\n          type: string\n          enum:\n            - TEST_SETTINGS_NOT_CONFIGURED\n        message:\n          type: string\n          description: Human readable message\n\n    TestSettingsInvalidatedResponse:\n      type: object\n      required:\n        - status\n        - message\n        - settings\n        - ttl\n      properties:\n        status:\n          type: string\n          enum:\n            - TEST_SETTINGS_INVALIDATED\n        message:\n          type: string\n          description: Human readable message\n        settings:\n          type: string\n          description: Recently configured Test Settings that are not longer valid, because they were invalidated\n        ttl:\n          $ref: '#/components/schemas/RorSettingsTtl'\n\n    CurrentTestSettingsResponse:\n      type: object\n      required:\n        - status\n        - ttl\n        - valid_to\n        - settings\n        - warnings\n      properties:\n        status:\n          type: string\n          enum:\n            - TEST_SETTINGS_PRESENT\n        ttl:\n          $ref: '#/components/schemas/RorSettingsTtl'\n        valid_to:\n          type: string\n          format: date-time\n          description: \"It says how long the Test Settings will be valid. After that date, the Settings will be invalidated\"\n          example: \"2022-01-12T07:20:50.52Z\"\n        settings:\n          $ref: '#/components/schemas/RorSettings'\n        warnings:\n          type: array\n          items:\n            $ref: '#/components/schemas/TestSettingsImperonationWarnings'\n\n    RorSettingsTtl:\n      type: string\n      description: \"Configured ROR Settings Time To Live value. After this time the Test Setting will be automatically invalidated. Available units: d, day, h, hr, hour m, min, minute s, sec, second\"\n      example: 30 m\n\n    TestSettingsImperonationWarnings:\n      description: \"It warns about problems with impersonation in given block\"\n      type: object\n      required:\n        - block_name\n        - rule_name\n        - message\n        - hint\n      properties:\n        block_name:\n          type: string\n          description: Block name in ROR's ACL\n        rule_name:\n          type: string\n          description: Rule name in the block\n        message:\n          type: string\n          description: It's human readable message with the fact what's wrong with that block and rule\n        hint:\n          type: string\n          description: It's human readable message about possible solution of the problem\n\n    UpdateTestSettingsRequest:\n      type: object\n      required:\n        - ttl\n        - settings\n      properties:\n        ttl:\n          $ref: '#/components/schemas/RorSettingsTtl'\n        settings:\n          $ref: '#/components/schemas/RorSettings'\n\n    UpdateTestSettingsResponse:\n      oneOf:\n        - $ref: '#/components/schemas/UpdateTestSettingsSuccessResponse'\n        - $ref: '#/components/schemas/UpdateTestSettingsFailedResponse'\n      discriminator:\n        propertyName: status\n        mapping:\n          OK: '#/components/schemas/UpdateTestSettingsSuccessResponse'\n          FAILED: '#/components/schemas/UpdateTestSettingsFailedResponse'\n\n    UpdateTestSettingsSuccessResponse:\n      type: object\n      required:\n        - status\n        - message\n      properties:\n        status:\n          type: string\n          enum:\n            - OK\n        message:\n          type: string\n          description: Human readable message\n\n    UpdateTestSettingsFailedResponse:\n      type: object\n      required:\n        - status\n        - message\n      properties:\n        status:\n          type: string\n          enum:\n            - FAILED\n        message:\n          type: string\n          description: Human readable message (cause)\n\n    InvalidateTestSettingsResponse:\n      type: object\n      required:\n        - status\n        - message\n      properties:\n        status:\n          type: string\n          enum:\n            - OK\n        message:\n          type: string\n          description: Human readable message (cause)\n\n    GetLocalUsersFromTestSettingsResponse:\n      oneOf:\n        - $ref: '#/components/schemas/GetLocalUsersFromPresentTestSettingsResponse'\n        - $ref: '#/components/schemas/TestSettingsNotConfiguredResponse'\n      discriminator:\n        propertyName: status\n        mapping:\n          OK: '#/components/schemas/GetLocalUsersFromPresentTestSettingsResponse'\n          TEST_SETTINGS_NOT_CONFIGURED: '#/components/schemas/TestSettingsNotConfiguredResponse'\n\n    GetLocalUsersFromPresentTestSettingsResponse:\n      type: object\n      required:\n        - status\n        - users\n      properties:\n        status:\n          type: string\n          enum:\n            - OK\n        users:\n          type: array\n          description: It contains a list of locally (in ROR Settings) defined usernames.\n          items:\n            $ref: '#/components/schemas/LocalUserName'\n        unknown_users:\n          type: boolean\n          description: It is 'true' when some usernames cannot be returned but they are defined (the users names cannot be resolved or exposed)\n\n    LocalUserName:\n      type: string\n      description: Local user name\n      example: John Doe\n\n    GetAuthMocksResponse:\n      oneOf:\n        - $ref: '#/components/schemas/CurrentAuthMocksResponse'\n        - $ref: '#/components/schemas/AuthMockTestSettingsNotConfiguredResponse'\n        - $ref: '#/components/schemas/AuthMockTestSettingsInvalidatedResponse'\n      discriminator:\n        propertyName: status\n        mapping:\n          TEST_SETTINGS_PRESENT: '#/components/schemas/CurrentAuthMocksResponse'\n          TEST_SETTINGS_NOT_CONFIGURED: '#/components/schemas/AuthMockTestSettingsNotConfiguredResponse'\n          TEST_SETTINGS_INVALIDATED: '#/components/schemas/AuthMockTestSettingsInvalidatedResponse'\n\n    CurrentAuthMocksResponse:\n      type: object\n      required:\n        - status\n        - services\n      properties:\n        status:\n          type: string\n          enum:\n            - TEST_SETTINGS_PRESENT\n        services:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthMockService'\n\n    AuthMockTestSettingsNotConfiguredResponse:\n      type: object\n      required:\n        - status\n        - message\n      properties:\n        status:\n          type: string\n          enum:\n            - TEST_SETTINGS_NOT_CONFIGURED\n        message:\n          type: string\n          description: Human readable message\n\n    AuthMockTestSettingsInvalidatedResponse:\n      type: object\n      required:\n        - status\n        - message\n      properties:\n        status:\n          type: string\n          enum:\n            - TEST_SETTINGS_INVALIDATED\n        message:\n          type: string\n          description: Human readable message\n\n    UnknownAuthServicesDetectedResponse:\n      type: object\n      required:\n        - status\n        - message\n      properties:\n        status:\n          type: string\n          enum:\n            - UNKNOWN_AUTH_SERVICES_DETECTED\n        message:\n          type: string\n          description: Human readable message\n\n    UpdateAuthMockRequest:\n      type: object\n      required:\n        - services\n      properties:\n        services:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthMockService'\n\n    UpdateAuthMocksResponse:\n      oneOf:\n        - $ref: '#/components/schemas/AuthMocksUpdatedResponse'\n        - $ref: '#/components/schemas/AuthMockTestSettingsNotConfiguredResponse'\n        - $ref: '#/components/schemas/AuthMockTestSettingsInvalidatedResponse'\n        - $ref: '#/components/schemas/UnknownAuthServicesDetectedResponse'\n      discriminator:\n        propertyName: status\n        mapping:\n          OK: '#/components/schemas/AuthMocksUpdatedResponse'\n          TEST_SETTINGS_NOT_CONFIGURED: '#/components/schemas/AuthMockTestSettingsNotConfiguredResponse'\n          TEST_SETTINGS_INVALIDATED: '#/components/schemas/AuthMockTestSettingsInvalidatedResponse'\n          UNKNOWN_AUTH_SERVICES_DETECTED: '#/components/schemas/UnknownAuthServicesDetectedResponse'\n\n    AuthMocksUpdatedResponse:\n      type: object\n      required:\n        - status\n        - message\n      properties:\n        status:\n          type: string\n          enum:\n            - OK\n        message:\n          type: string\n          description: Human readable message\n\n    AuthMockService:\n      oneOf:\n        - $ref: '#/components/schemas/LdapAuthorizationService'\n        - $ref: '#/components/schemas/ExternalAuthenticationService'\n        - $ref: '#/components/schemas/ExternalAuthortizationService'\n      discriminator:\n        propertyName: type\n        mapping:\n          LDAP: '#/components/schemas/LdapAuthorizationService'\n          EXT_AUTHN: '#/components/schemas/ExternalAuthenticationService'\n          EXT_AUTHZ: '#/components/schemas/ExternalAuthortizationService'\n\n    LdapAuthorizationService:\n      type: object\n      required:\n        - type\n        - name\n      properties:\n        type:\n          type: string\n          enum:\n            - LDAP\n        name:\n          type: string\n          description: Name of the LDAP connector defined in ReadonlyREST settings\n          example: \"LDAP 1\"\n        mock:\n          oneOf:\n            - $ref: '#/components/schemas/LdapAuthorizationServiceMock'\n            - $ref: '#/components/schemas/MockServiceNotConfigured'\n\n    LdapAuthorizationServiceMock:\n      type: object\n      required:\n        - users\n      properties:\n        users:\n          type: array\n          description: The mock defines LDAP user and their roles (groups).\n          items:\n            $ref: '#/components/schemas/MockServiceUserAndGroups'\n\n    ExternalAuthenticationService:\n      type: object\n      required:\n        - type\n        - name\n      properties:\n        type:\n          type: string\n          enum:\n            - EXT_AUTHN\n        name:\n          type: string\n          description: Name of the External Authentication Service defined in ReadonlyREST settings\n          example: \"Ext AuthN Service 1\"\n        mock:\n          oneOf:\n            - $ref: '#/components/schemas/ExternalAuthenticationServiceMock'\n            - $ref: '#/components/schemas/MockServiceNotConfigured'\n\n    ExternalAuthenticationServiceMock:\n      type: object\n      required:\n        - users\n      properties:\n        users:\n          type: array\n          description: The mock defines External Authentication users.\n          items:\n            $ref: '#/components/schemas/MockServiceUsers'\n\n    ExternalAuthortizationService:\n      type: object\n      required:\n        - type\n        - name\n      properties:\n        type:\n          type: string\n          enum:\n            - LDAP\n        name:\n          type: string\n          description: Name of the LDAP connector defined in ReadonlyREST settings\n          example: \"LDAP 1\"\n        mock:\n          oneOf:\n            - $ref: '#/components/schemas/ExternalAuthortizationServiceMock'\n            - $ref: '#/components/schemas/MockServiceNotConfigured'\n\n    ExternalAuthortizationServiceMock:\n      type: object\n      required:\n        - users\n      properties:\n        users:\n          type: array\n          description: The mock defines External Grops Provider roles (groups) per user.\n          items:\n            $ref: '#/components/schemas/MockServiceUserAndGroups'\n\n    MockServiceUserAndGroups:\n      type: object\n      description: It describes users and thier groups. Any of these users can be authenticated. The groups related to the authenticated user will be returned during authorization.\n      required:\n        - name\n        - groups\n      properties:\n        name:\n          $ref: '#/components/schemas/MockServiceUserName'\n        groups:\n          type: array\n          description: Groups that the user belongs to\n          items:\n            $ref: '#/components/schemas/MockServiceUserGroup'\n\n    MockServiceUsers:\n      type: object\n      description: It describes users. Any of these users can be authenticated.\n      required:\n        - name\n      properties:\n        name:\n          $ref: '#/components/schemas/MockServiceUserName'\n\n    MockServiceUserName:\n      type: string\n      description: Username returned by mocked Service\n      example: John Doe\n\n    MockServiceUserGroup:\n      type: string\n      description: User's group returned by mocked Service\n      example:\n        - Developer\n        - Manager\n\n    MockServiceNotConfigured:\n      type: string\n      enum:\n        - NOT_CONFIGURED\n      description: It means that given Service's mock has not been configured yet\n\n    RorSettings:\n      type: string\n      description: ROR Settings escaped YAML\n      example: |\n        readonlyrest:\\\\r\\\\n    access_control_rules:\\\\r\\\\n\\\\r\\\\n    - name: | \\\\\"\"Require HTTP Basic | Auth\\\\\"\"\\\\r\\\\n      type: allow\\\\r\\\\n      indices: | [\\\\\"\"test\\\\\"\"]\\\\r\\\\n\\\\r\\\\n    - name: | \\\\\"\"other\\\\\"\"\\\\r\\\\n      auth_key: \\\\\"\"admin:test\\\\\"\"\n\n  parameters:\n    XRorCorrelationIdHeader:\n      name: X-ROR-Correlation-ID\n      in: header\n      required: false\n      description: ID to correlate requests/reponses logs within one ROR KBN session\n      schema:\n        $ref: '#/components/schemas/XRorCorrelationId'\n\n  examples:\n\n    NoAclBlockWasMatchedForbiddenResponseExample:\n      summary: No ACL block was matched\n      value:\n        error:\n          type: forbidden_response\n          reason: forbidden\n          due_to:\n            - OPERATION_NOT_ALLOWED\n        status: 403\n\n    ForbidBlockMatchedResponseExample:\n      summary: Request was forbidden by matching a block with \"forbid\" type\n      value:\n        error:\n          type: forbidden_response\n          reason: forbidden\n          due_to:\n            - FORBIDDEN_BY_BLOCK\n        status: 403\n\n    TestSettingsNotConfiguredForbiddenResponseExample:\n      summary: Request was forbidden because impersonation feature is disbaled when Test Settings are not configured\n      value:\n        error:\n          type: forbidden_response\n          reason: forbidden\n          due_to:\n            - TEST_SETTINGS_NOT_CONFIGURED\n        status: 403\n\n    ImpersonationNotSupportedResponseExample:\n      summary: No block was matched and at least one block has rule which doesn't support impersonation\n      value:\n        error:\n          type: forbidden_response\n          reason: forbidden\n          due_to:\n            - OPERATION_NOT_ALLOWED\n            - IMPERSONATION_NOT_SUPPORTED\n        status: 403\n\n    ImpersonationNotAllowedResponseExample:\n      summary: User has no impersonation permissions\n      value:\n        error:\n          type: forbidden_response\n          reason: forbidden\n          due_to:\n            - OPERATION_NOT_ALLOWED\n            - IMPERSONATION_NOT_ALLOWED\n        status: 403\n\n    RorIsNotStartedYetResponseExample:\n      summary: ROR was not started yet\n      value:\n        error:\n          type: forbidden_response\n          reason: forbidden\n          due_to:\n            - READONLYREST_NOT_READY_YET\n        status: 403\n\n    RorFailedToStartResponseExample:\n      summary: ROR failed to start\n      value:\n        error:\n          type: forbidden_response\n          reason: forbidden\n          due_to:\n            - READONLYREST_FAILED_TO_START\n        status: 403\n\n    TestSettingsAreConfiguredAndValidResponseExample:\n      summary: Test settings are configured and valid (no warnings)\n      value:\n        status: TEST_SETTINGS_PRESENT\n        ttl: 30 m\n        valid_to: \"2022-01-12T07:20:50.52Z\"\n        settings: |\n          readonlyrest:\\\\r\\\\n    access_control_rules:\\\\r\\\\n\\\\r\\\\n    - name: | \\\\\"\"Require HTTP Basic | Auth\\\\\"\"\\\\r\\\\n      type: allow\\\\r\\\\n      indices: | [\\\\\"\"test\\\\\"\"]\\\\r\\\\n\\\\r\\\\n    - name: | \\\\\"\"other\\\\\"\"\\\\r\\\\n      auth_key: \\\\\"\"admin:test\\\\\"\"\n        warnings: []\n\n    TestSettingsAreConfiguredAndValidButWithWarningsResponseExample:\n      summary: Test settings are configured and valid (with warnings)\n      value:\n        status: TEST_SETTINGS_PRESENT\n        ttl: 30 m\n        valid_to: \"2022-01-12T07:20:50.52Z\"\n        settings: |\n          readonlyrest:\\\\r\\\\n    access_control_rules:\\\\r\\\\n\\\\r\\\\n    - name: | \\\\\"\"Require HTTP Basic | Auth\\\\\"\"\\\\r\\\\n      type: allow\\\\r\\\\n      indices: | [\\\\\"\"test\\\\\"\"]\\\\r\\\\n\\\\r\\\\n    - name: | \\\\\"\"other\\\\\"\"\\\\r\\\\n      auth_key_sha1: \\\\\"\"d27aaf7fa3c1603948bb29b7339f2559dc02019a\\\\\"\"\n        warnings:\n          - block_name: other\n            rule_name: auth_key_sha1\n            message: \"The rule contains fully hashed username and password. It doesn't support impersonation in this configuration\"\n            hint: \"You can use second version of the rule and use not hashed username. Like that: `auth_key_sha1: USER_NAME:hash(PASSWORD)\"\n\n    TestSettingsNotConfiguredResponseExample:\n      summary: ROR Test settings are not configured yet\n      value:\n        status: TEST_SETTINGS_NOT_CONFIGURED\n        message: ROR Test settings are not configured\n\n    TestSettingsInvalidatedResponseExample:\n      summary: ROR Test settings are invalidated\n      value:\n        status: TEST_SETTINGS_INVALIDATED\n        message: ROR Test settings are invalidated\n        recent_settings: |\n          readonlyrest:\\\\r\\\\n    access_control_rules:\\\\r\\\\n\\\\r\\\\n    - name: | \\\\\"\"Require HTTP Basic | Auth\\\\\"\"\\\\r\\\\n      type: allow\\\\r\\\\n      indices: | [\\\\\"\"test\\\\\"\"]\\\\r\\\\n\\\\r\\\\n    - name: | \\\\\"\"other\\\\\"\"\\\\r\\\\n      auth_key: \\\\\"\"admin:test\\\\\"\"\n        ttl: 30 m\n\n    TestSettingsUpdatedResponseExample:\n      summary: ROR Test settings was updated and configured with success\n      value:\n        status: OK\n        message: updated settings\n\n    TestSettingsUpdateFailedResponseExample:\n      summary: ROR Test settings update failed\n      value:\n        status: FAILED\n        message: Current settings are already loaded\n\n    InvalidateTestSettingsResponseExample:\n      summary: ROR Test settings were invalidated\n      value:\n        status: OK\n        message: test settings invalidated\n\n    GetLocalUsersFromTestSettingsResponseExample:\n      summary: Local users list response\n      value:\n        status: OK\n        users:\n          - john\n          - tom\n          - mark\n        unknown_users: false\n\n    AllTypesOfAuthServicesConfiguredResponseExample:\n      summary: Three types of currently mockable Auth Services are configured\n      value:\n        status: TEST_SETTINGS_PRESENT\n        services:\n          - type: LDAP\n            name: LDAP 1\n            mock:\n              users:\n                - name: JohnDoe\n                  groups:\n                    - Developer\n                    - DevOps\n                - name: RobertSmith\n                  groups:\n                    - Manager\n          - type: LDAP\n            name: LDAP 2\n            mock:\n              users:\n                - name: JohnDoe\n                  groups:\n                    - DevOps\n                - name: JudyBrown\n                  groups:\n                    - Customer\n          - type: EXT_AUTHN\n            name: ACME1 External Authentication Service\n            mock:\n              users:\n                - name: JaimeRhynes\n                - name: MichaelDavis\n                - name: Johny\n          - type: EXT_AUTHZ\n            name: ACME2 External Authorization Service\n            mock:\n              users:\n                - name: JaimeRhynes\n                  groups:\n                    - Customer\n                - name: Martian\n                  groups:\n                    - Visitor\n\n    AllTypesOfAuthServicesConfiguredRequestExample:\n      summary: Three types of currently mockable Auth Services are configured\n      value:\n        services:\n          - type: LDAP\n            name: LDAP 1\n            mock:\n              users:\n                - name: JohnDoe\n                  groups:\n                    - Developer\n                    - DevOps\n                - name: RobertSmith\n                  groups:\n                    - Manager\n          - type: LDAP\n            name: LDAP 2\n            mock:\n              users:\n                - name: JohnDoe\n                  groups:\n                    - DevOps\n                - name: JudyBrown\n                  groups:\n                    - Customer\n          - type: EXT_AUTHN\n            name: ACME1 External Authentication Service\n            mock:\n              users:\n                - name: JaimeRhynes\n                - name: MichaelDavis\n                - name: Johny\n          - type: EXT_AUTHZ\n            name: ACME2 External Authorization Service\n            mock:\n              users:\n                - name: JaimeRhynes\n                  groups:\n                    - Customer\n                - name: Martian\n                  groups:\n                    - Visitor\n\n    NoAuthServiceConfiguredResponseExample:\n      summary: Three types of currently mockable Auth Services are not configured yet\n      value:\n        status: TEST_SETTINGS_PRESENT\n        services:\n          - type: LDAP\n            name: LDAP 1\n            mock: NOT_CONFIGURED\n          - type: LDAP\n            name: LDAP 2\n            mock: NOT_CONFIGURED\n          - type: EXT_AUTHN\n            name: ACME1 External Authentication Service\n            mock: NOT_CONFIGURED\n          - type: EXT_AUTHZ\n            name: ACME2 External Authorization Service\n            mock: NOT_CONFIGURED\n\n    NoAuthServiceConfiguredRequestExample:\n      summary: Three types of currently mockable Auth Services are not configured yet\n      value:\n        services:\n          - type: LDAP\n            name: LDAP 1\n            mock: NOT_CONFIGURED\n          - type: LDAP\n            name: LDAP 2\n            mock: NOT_CONFIGURED\n          - type: EXT_AUTHN\n            name: ACME1 External Authentication Service\n            mock: NOT_CONFIGURED\n          - type: EXT_AUTHZ\n            name: ACME2 External Authorization Service\n            mock: NOT_CONFIGURED\n\n    OnlySomeAuthServicesConfiguredResponseExample:\n      summary: Some of currently mockable Auth Services are configured\n      value:\n        status: TEST_SETTINGS_PRESENT\n        services:\n          - type: LDAP\n            name: LDAP 1\n            mock:\n              users:\n                - name: JohnDoe\n                  groups:\n                    - Developer\n                    - DevOps\n                - name: RobertSmith\n                  groups:\n                    - Manager\n          - type: LDAP\n            name: LDAP 2\n            mock:\n              users:\n                - name: JohnDoe\n                  groups:\n                    - DevOps\n                - name: JudyBrown\n                  groups:\n                    - Customer\n          - type: EXT_AUTHN\n            name: ACME1 External Authentication Service\n            mock: NOT_CONFIGURED\n          - type: EXT_AUTHZ\n            name: ACME2 External Authorization Service\n            mock: NOT_CONFIGURED\n\n    OnlySomeAuthServicesConfiguredRequestExample:\n      summary: Some of currently mockable Auth Services are configured\n      value:\n        services:\n          - type: LDAP\n            name: LDAP 1\n            mock:\n              users:\n                - name: JohnDoe\n                  groups:\n                    - Developer\n                    - DevOps\n                - name: RobertSmith\n                  groups:\n                    - Manager\n          - type: LDAP\n            name: LDAP 2\n            mock:\n              users:\n                - name: JohnDoe\n                  groups:\n                    - DevOps\n                - name: JudyBrown\n                  groups:\n                    - Customer\n          - type: EXT_AUTHN\n            name: ACME1 External Authentication Service\n            mock: NOT_CONFIGURED\n          - type: EXT_AUTHZ\n            name: ACME2 External Authorization Service\n            mock: NOT_CONFIGURED\n\n    TestSettingsNotConfiguredAuthServicesResponseExample:\n      summary: ROR Test settings are not configured\n      value:\n        status: TEST_SETTINGS_NOT_CONFIGURED\n        message: ROR Test settings are not configured. To use Auth Services Mock ROR has to have Test settings active.\n\n    TestSettingsInvalidatedAuthServicesResponseExample:\n      summary: ROR Test settings are invalidated\n      value:\n        status: TEST_SETTINGS_INVALIDATED\n        message: ROR Test settings are invalidated. To use Auth Services Mock ROR has to have Test settings active.\n\n    UnknownAuthServicesDetectedResponseExample:\n      summary: Unknown Auth Services detected\n      value:\n        status: UNKNOWN_AUTH_SERVICES_DETECTED\n        message: ROR doesn't allow to configure unknown Auth Services. Only the ones used in ROR's Test settings can be configured.\n\n    AuthMocksUpdatedResponseExample:\n      summary: Auth Services mocks were updated\n      value:\n        status: OK\n        message: Auth Services mocks were updated\n\nsecurity:\n  - http: []\n",
			"canonicalURL": "/github.com/sscarduzio/elasticsearch-readonlyrest-plugin@21d11353945e0a6cbf20f584238970c315377845/-/blob/docs/api/ror-internal-api-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sscarduzio/elasticsearch-readonlyrest-plugin/blob/21d11353945e0a6cbf20f584238970c315377845/docs/api/ror-internal-api-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/_readonlyrest/admin/config/test/authmock\": get: responses: 200: contents: application/json: generate schema: save schema types: save referenced type: reference \"#/components/schemas/ExternalAuthortizationServiceMock\" type name conflict: \"ExternalAuthortizationServiceMock\""
}