{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apscan/indexer"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "api/doc/v1/spec.yaml",
			"byteSize": 81761,
			"content": "openapi: 3.0.0\ninfo:\n  title: Aptos Node API\n  description: The Aptos Node API is a RESTful API for client applications to interact\n    with the Aptos blockchain.\n  version: 1.0.0\n  contact:\n    name: Aptos Labs\n    url: https://github.com/aptos-labs/aptos-core\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers: []\ntags:\n- name: Accounts\n  description: Access to account resources and modules\n- name: Events\n  description: Access to events\n- name: General\n  description: General information\n- name: Tables\n  description: Access to tables\n- name: Transactions\n  description: Access to transactions\npaths:\n  /accounts/{address}:\n    get:\n      tags:\n      - Accounts\n      summary: Get account\n      description: Return high level information about an account such as its sequence\n        number.\n      parameters:\n      - name: address\n        schema:\n          $ref: '#/components/schemas/Address'\n        in: path\n        required: true\n        deprecated: false\n      - name: ledger_version\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: query\n        required: false\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountData'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_account\n  /accounts/{address}/resources:\n    get:\n      tags:\n      - Accounts\n      summary: Get account resources\n      description: |-\n        This endpoint returns all account resources at a given address at a\n        specific ledger version (AKA transaction version). If the ledger\n        version is not specified in the request, the latest ledger version is used.\n\n        The Aptos nodes prune account state history, via a configurable time window (link).\n        If the requested data has been pruned, the server responds with a 404.\n      parameters:\n      - name: address\n        schema:\n          $ref: '#/components/schemas/Address'\n        in: path\n        required: true\n        deprecated: false\n      - name: ledger_version\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: query\n        required: false\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MoveResource'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_account_resources\n  /accounts/{address}/modules:\n    get:\n      tags:\n      - Accounts\n      summary: Get account modules\n      description: |-\n        This endpoint returns all account modules at a given address at a\n        specific ledger version (AKA transaction version). If the ledger\n        version is not specified in the request, the latest ledger version is used.\n\n        The Aptos nodes prune account state history, via a configurable time window (link).\n        If the requested data has been pruned, the server responds with a 404.\n      parameters:\n      - name: address\n        schema:\n          $ref: '#/components/schemas/Address'\n        in: path\n        required: true\n        deprecated: false\n      - name: ledger_version\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: query\n        required: false\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MoveModuleBytecode'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_account_modules\n  /spec:\n    get:\n      tags:\n      - General\n      summary: Show OpenAPI explorer\n      description: Provides a UI that you can use to explore the API. You can also\n        retrieve the API directly at `/spec.yaml` and `/spec.json`.\n      responses:\n        '200':\n          description: ''\n          content:\n            text/html:\n              schema:\n                type: string\n      operationId: spec\n  /events/{event_key}:\n    get:\n      tags:\n      - Events\n      summary: Get events by event key\n      description: |-\n        This endpoint allows you to get a list of events of a specific type\n        as identified by its event key, which is a globally unique ID.\n      parameters:\n      - name: event_key\n        schema:\n          $ref: '#/components/schemas/EventKey'\n        in: path\n        required: true\n        deprecated: false\n      - name: start\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: query\n        required: false\n        deprecated: false\n      - name: limit\n        schema:\n          type: integer\n          format: uint16\n        in: query\n        required: false\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/VersionedEvent'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_events_by_event_key\n  /accounts/{address}/events/{event_handle}/{field_name}:\n    get:\n      tags:\n      - Events\n      summary: Get events by event handle\n      description: |-\n        This API extracts event key from the account resource identified\n        by the `event_handle_struct` and `field_name`, then returns\n        events identified by the event key.\n      parameters:\n      - name: address\n        schema:\n          $ref: '#/components/schemas/Address'\n        in: path\n        required: true\n        deprecated: false\n      - name: event_handle\n        schema:\n          $ref: '#/components/schemas/MoveStructTagParam'\n        in: path\n        required: true\n        deprecated: false\n      - name: field_name\n        schema:\n          $ref: '#/components/schemas/IdentifierWrapper'\n        in: path\n        required: true\n        deprecated: false\n      - name: start\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: query\n        required: false\n        deprecated: false\n      - name: limit\n        schema:\n          type: integer\n          format: uint16\n        in: query\n        required: false\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/VersionedEvent'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_events_by_event_handle\n  /:\n    get:\n      tags:\n      - General\n      summary: Get ledger info\n      description: |-\n        Get the latest ledger information, including data such as chain ID,\n        role type, ledger versions, epoch, etc.\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IndexResponse'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_ledger_info\n  /accounts/{address}/resource/{resource_type}:\n    get:\n      tags:\n      - Accounts\n      summary: Get specific account resource\n      description: |-\n        This endpoint returns the resource of a specific type residing at a given\n        account at a specified ledger version (AKA transaction version). If the\n        ledger version is not specified in the request, the latest ledger version\n        is used.\n\n        The Aptos nodes prune account state history, via a configurable time window (link).\n        If the requested data has been pruned, the server responds with a 404.\n      parameters:\n      - name: address\n        schema:\n          $ref: '#/components/schemas/Address'\n        in: path\n        required: true\n        deprecated: false\n      - name: resource_type\n        schema:\n          $ref: '#/components/schemas/MoveStructTagParam'\n        in: path\n        required: true\n        deprecated: false\n      - name: ledger_version\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: query\n        required: false\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MoveResource'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_account_resource\n  /accounts/{address}/module/{module_name}:\n    get:\n      tags:\n      - Accounts\n      summary: Get specific account module\n      description: |-\n        This endpoint returns the module with a specific name residing at a given\n        account at a specified ledger version (AKA transaction version). If the\n        ledger version is not specified in the request, the latest ledger version\n        is used.\n\n        The Aptos nodes prune account state history, via a configurable time window (link).\n        If the requested data has been pruned, the server responds with a 404.\n      parameters:\n      - name: address\n        schema:\n          $ref: '#/components/schemas/Address'\n        in: path\n        required: true\n        deprecated: false\n      - name: module_name\n        schema:\n          $ref: '#/components/schemas/IdentifierWrapper'\n        in: path\n        required: true\n        deprecated: false\n      - name: ledger_version\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: query\n        required: false\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MoveModuleBytecode'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_account_module\n  /tables/{table_handle}/item:\n    post:\n      tags:\n      - Tables\n      summary: Get table item\n      description: |-\n        Get a table item from the table identified by {table_handle} in the\n        path and the \"key\" (TableItemRequest) provided in the request body.\n\n        This is a POST endpoint because the \"key\" for requesting a specific\n        table item (TableItemRequest) could be quite complex, as each of its\n        fields could themselves be composed of other structs. This makes it\n        impractical to express using query params, meaning GET isn't an option.\n      parameters:\n      - name: table_handle\n        schema:\n          $ref: '#/components/schemas/U128'\n        in: path\n        required: true\n        deprecated: false\n      - name: ledger_version\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: query\n        required: false\n        deprecated: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TableItemRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MoveValue'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_table_item\n  /transactions:\n    get:\n      tags:\n      - Transactions\n      summary: Get transactions\n      description: |-\n        Get on-chain (meaning, committed) transactions. You may specify from\n        when you want the transactions and how to include in the response.\n      parameters:\n      - name: start\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: query\n        required: false\n        deprecated: false\n      - name: limit\n        schema:\n          type: integer\n          format: uint16\n        in: query\n        required: false\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_transactions\n    post:\n      tags:\n      - Transactions\n      summary: Submit transaction\n      description: |-\n        This endpoint accepts transaction submissions in two formats.\n\n        To submit a transaction as JSON, you must submit a SubmitTransactionRequest.\n        To build this request, do the following:\n\n        1. Encode the transaction as BCS. If you are using a language that has\n        native BCS support, make sure of that library. If not, you may take\n        advantage of /transactions/encode_submission. When using this\n        endpoint, make sure you trust the node you're talking to, as it is\n        possible they could manipulate your request.\n        2. Sign the encoded transaction and use it to create a TransactionSignature.\n        3. Submit the request. Make sure to use the \"application/json\" Content-Type.\n\n        To submit a transaction as BCS, you must submit a SignedTransaction\n        encoded as BCS. See SignedTransaction in types/src/transaction/mod.rs.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmitTransactionRequest'\n          application/x.aptos.signed_transaction+bcs:\n            schema:\n              type: array\n              items:\n                type: integer\n                format: uint8\n        required: true\n      responses:\n        '202':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PendingTransaction'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '413':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '507':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: submit_transaction\n  /transactions/by_hash/{txn_hash}:\n    get:\n      tags:\n      - Transactions\n      summary: Get transaction by hash\n      description: |-\n        Look up a transaction by its hash. This is the same hash that is returned\n        by the API when submitting a transaction (see PendingTransaction).\n\n        When given a transaction hash, the server first looks for the transaction\n        in storage (on-chain, committed). If no on-chain transaction is found, it\n        looks the transaction up by hash in the mempool (pending, not yet committed).\n\n        To create a transaction hash by yourself, do the following:\n        1. Hash message bytes: \"RawTransaction\" bytes + BCS bytes of [Transaction](https://aptos-labs.github.io/aptos-core/aptos_types/transaction/enum.Transaction.html).\n        2. Apply hash algorithm `SHA3-256` to the hash message bytes.\n        3. Hex-encode the hash bytes with `0x` prefix.\n      parameters:\n      - name: txn_hash\n        schema:\n          $ref: '#/components/schemas/HashValue'\n        in: path\n        required: true\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_transaction_by_hash\n  /transactions/by_version/{txn_version}:\n    get:\n      tags:\n      - Transactions\n      summary: Get transaction by version\n      description: todo\n      parameters:\n      - name: txn_version\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: path\n        required: true\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_transaction_by_version\n  /accounts/{address}/transactions:\n    get:\n      tags:\n      - Transactions\n      summary: Get account transactions\n      description: todo\n      parameters:\n      - name: address\n        schema:\n          $ref: '#/components/schemas/Address'\n        in: path\n        required: true\n        deprecated: false\n      - name: start\n        schema:\n          $ref: '#/components/schemas/U64'\n        in: query\n        required: false\n        deprecated: false\n      - name: limit\n        schema:\n          type: integer\n          format: uint16\n        in: query\n        required: false\n        deprecated: false\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '404':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: get_account_transactions\n  /transactions/simulate:\n    post:\n      tags:\n      - Transactions\n      summary: Simulate transaction\n      description: |-\n        Simulate submitting a transaction. To use this, you must:\n        - Create a SignedTransaction with a zero-padded signature.\n        - Submit a SubmitTransactionRequest containing a UserTransactionRequest containing that signature.\n\n        To use this endpoint with BCS, you must submit a SignedTransaction\n        encoded as BCS. See SignedTransaction in types/src/transaction/mod.rs.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmitTransactionRequest'\n          application/x.aptos.signed_transaction+bcs:\n            schema:\n              type: array\n              items:\n                type: integer\n                format: uint8\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserTransaction'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '413':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '507':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: simulate_transaction\n  /transactions/encode_submission:\n    post:\n      tags:\n      - Transactions\n      summary: Encode submission\n      description: |-\n        This endpoint accepts an EncodeSubmissionRequest, which internally is a\n        UserTransactionRequestInner (and optionally secondary signers) encoded\n        as JSON, validates the request format, and then returns that request\n        encoded in BCS. The client can then use this to create a transaction\n        signature to be used in a SubmitTransactionRequest, which it then\n        passes to the /transactions POST endpoint.\n\n        To be clear, this endpoint makes it possible to submit transaction\n        requests to the API from languages that do not have library support for\n        BCS. If you are using an SDK that has BCS support, such as the official\n        Rust, TypeScript, or Python SDKs, you do not need to use this endpoint.\n\n        To sign a message using the response from this endpoint:\n        - Decode the hex encoded string in the response to bytes.\n        - Sign the bytes to create the signature.\n        - Use that as the signature field in something like Ed25519Signature, which you then use to build a TransactionSignature.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EncodeSubmissionRequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HexEncodedBytes'\n            application/x-bcs:\n              schema:\n                type: array\n                items:\n                  type: integer\n                  format: uint8\n          headers:\n            X-APTOS-CHAIN-ID:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint16\n            X-APTOS-LEDGER-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-OLDEST-VERSION:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-LEDGER-TIMESTAMPUSEC:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n            X-APTOS-EPOCH:\n              required: true\n              deprecated: false\n              schema:\n                type: integer\n                format: uint64\n        '400':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n        '500':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AptosError'\n      operationId: encode_submission\ncomponents:\n  schemas:\n    AccountData:\n      type: object\n      required:\n      - sequence_number\n      - authentication_key\n      properties:\n        sequence_number:\n          $ref: '#/components/schemas/U64'\n        authentication_key:\n          $ref: '#/components/schemas/HexEncodedBytes'\n    AccountSignature:\n      type: object\n      oneOf:\n      - $ref: '#/components/schemas/AccountSignature_Ed25519Signature'\n      - $ref: '#/components/schemas/AccountSignature_MultiEd25519Signature'\n      discriminator:\n        propertyName: type\n        mapping:\n          ed_25519_signature: '#/components/schemas/AccountSignature_Ed25519Signature'\n          multi_ed_25519_signature: '#/components/schemas/AccountSignature_MultiEd25519Signature'\n    AccountSignature_Ed25519Signature:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: ed_25519_signature\n      - $ref: '#/components/schemas/Ed25519Signature'\n    AccountSignature_MultiEd25519Signature:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: multi_ed_25519_signature\n      - $ref: '#/components/schemas/MultiEd25519Signature'\n    Address:\n      type: string\n      format: hex\n      description: Hex encoded 32 byte Aptos account address\n      example: 0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1\n    AptosError:\n      type: object\n      description: |-\n        This is the generic struct we use for all API errors, it contains a string\n        message and an Aptos API specific error code.\n      required:\n      - message\n      properties:\n        message:\n          type: string\n        error_code:\n          $ref: '#/components/schemas/AptosErrorCode'\n        aptos_ledger_version:\n          $ref: '#/components/schemas/U64'\n    AptosErrorCode:\n      type: string\n      description: |-\n        These codes provide more granular error information beyond just the HTTP\n        status code of the response.\n      enum:\n      - read_from_storage_error\n      - invalid_bcs_in_storage_error\n      - bcs_serialization_error\n      - invalid_start_param\n      - invalid_limit_param\n    BlockMetadataTransaction:\n      type: object\n      required:\n      - version\n      - hash\n      - state_root_hash\n      - event_root_hash\n      - gas_used\n      - success\n      - vm_status\n      - accumulator_root_hash\n      - changes\n      - id\n      - epoch\n      - round\n      - events\n      - previous_block_votes\n      - proposer\n      - failed_proposer_indices\n      - timestamp\n      properties:\n        version:\n          $ref: '#/components/schemas/U64'\n        hash:\n          $ref: '#/components/schemas/HashValue'\n        state_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        event_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        gas_used:\n          $ref: '#/components/schemas/U64'\n        success:\n          type: boolean\n        vm_status:\n          type: string\n        accumulator_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        changes:\n          type: array\n          items:\n            $ref: '#/components/schemas/WriteSetChange'\n        id:\n          $ref: '#/components/schemas/HashValue'\n        epoch:\n          $ref: '#/components/schemas/U64'\n        round:\n          $ref: '#/components/schemas/U64'\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n        previous_block_votes:\n          type: array\n          items:\n            type: boolean\n        proposer:\n          $ref: '#/components/schemas/Address'\n        failed_proposer_indices:\n          type: array\n          items:\n            type: integer\n            format: uint32\n        timestamp:\n          $ref: '#/components/schemas/U64'\n    DecodedTableData:\n      type: object\n      required:\n      - key\n      - key_type\n      - value\n      - value_type\n      properties:\n        key: {}\n        key_type:\n          type: string\n        value: {}\n        value_type:\n          type: string\n    DeleteModule:\n      type: object\n      required:\n      - address\n      - state_key_hash\n      - module\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        state_key_hash:\n          type: string\n        module:\n          $ref: '#/components/schemas/MoveModuleId'\n    DeleteResource:\n      type: object\n      required:\n      - address\n      - state_key_hash\n      - resource\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        state_key_hash:\n          type: string\n        resource:\n          $ref: '#/components/schemas/MoveStructTag'\n    DeleteTableItem:\n      type: object\n      required:\n      - state_key_hash\n      - handle\n      - key\n      properties:\n        state_key_hash:\n          type: string\n        handle:\n          $ref: '#/components/schemas/HexEncodedBytes'\n        key:\n          $ref: '#/components/schemas/HexEncodedBytes'\n        data:\n          $ref: '#/components/schemas/DeletedTableData'\n    DeletedTableData:\n      type: object\n      required:\n      - key\n      - key_type\n      properties:\n        key: {}\n        key_type:\n          type: string\n    DirectWriteSet:\n      type: object\n      required:\n      - changes\n      - events\n      properties:\n        changes:\n          type: array\n          items:\n            $ref: '#/components/schemas/WriteSetChange'\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n    Ed25519Signature:\n      type: object\n      required:\n      - public_key\n      - signature\n      properties:\n        public_key:\n          $ref: '#/components/schemas/HexEncodedBytes'\n        signature:\n          $ref: '#/components/schemas/HexEncodedBytes'\n    EncodeSubmissionRequest:\n      type: object\n      required:\n      - sender\n      - sequence_number\n      - max_gas_amount\n      - gas_unit_price\n      - expiration_timestamp_secs\n      - payload\n      properties:\n        sender:\n          $ref: '#/components/schemas/Address'\n        sequence_number:\n          $ref: '#/components/schemas/U64'\n        max_gas_amount:\n          $ref: '#/components/schemas/U64'\n        gas_unit_price:\n          $ref: '#/components/schemas/U64'\n        expiration_timestamp_secs:\n          $ref: '#/components/schemas/U64'\n        payload:\n          $ref: '#/components/schemas/TransactionPayload'\n        secondary_signers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n    Event:\n      type: object\n      required:\n      - key\n      - sequence_number\n      - type\n      - data\n      properties:\n        key:\n          $ref: '#/components/schemas/EventKey'\n        sequence_number:\n          $ref: '#/components/schemas/U64'\n        type:\n          $ref: '#/components/schemas/MoveType'\n        data: {}\n    EventKey:\n      type: string\n      format: hex\n      description: |\n        Event key is a global index for an event stream.\n\n        It is hex-encoded BCS bytes of `EventHandle` `guid` field value, which is\n        a combination of a `uint64` creation number and account address (without\n        trimming leading zeros).\n\n        For example, event key `0x000000000000000088fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1` is combined by the following 2 parts:\n          1. `0000000000000000`: `uint64` representation of `0`.\n          2. `88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1`: 32 bytes of account address.\n      example: 0x000000000000000088fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1\n    GenesisPayload:\n      type: object\n      oneOf:\n      - $ref: '#/components/schemas/GenesisPayload_WriteSetPayload'\n      discriminator:\n        propertyName: type\n        mapping:\n          write_set_payload: '#/components/schemas/GenesisPayload_WriteSetPayload'\n    GenesisPayload_WriteSetPayload:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: write_set_payload\n      - $ref: '#/components/schemas/WriteSetPayload'\n    GenesisTransaction:\n      type: object\n      required:\n      - version\n      - hash\n      - state_root_hash\n      - event_root_hash\n      - gas_used\n      - success\n      - vm_status\n      - accumulator_root_hash\n      - changes\n      - payload\n      - events\n      properties:\n        version:\n          $ref: '#/components/schemas/U64'\n        hash:\n          $ref: '#/components/schemas/HashValue'\n        state_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        event_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        gas_used:\n          $ref: '#/components/schemas/U64'\n        success:\n          type: boolean\n        vm_status:\n          type: string\n        accumulator_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        changes:\n          type: array\n          items:\n            $ref: '#/components/schemas/WriteSetChange'\n        payload:\n          $ref: '#/components/schemas/GenesisPayload'\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n    HashValue:\n      type: string\n    HexEncodedBytes:\n      type: string\n      format: hex\n      description: |\n        All bytes (Vec\u003cu8\u003e) data is represented as hex-encoded string prefixed with `0x` and fulfilled with\n        two hex digits per byte.\n\n        Unlike the `Address` type, HexEncodedBytes will not trim any zeros.\n      example: 0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1\n    IdentifierWrapper:\n      type: string\n    IndexResponse:\n      type: object\n      description: |-\n        The struct holding all data returned to the client by the\n        index endpoint (i.e., GET \"/\").\n      required:\n      - chain_id\n      - epoch\n      - ledger_version\n      - oldest_ledger_version\n      - ledger_timestamp\n      - node_role\n      properties:\n        chain_id:\n          type: integer\n          format: uint8\n        epoch:\n          $ref: '#/components/schemas/U64'\n        ledger_version:\n          $ref: '#/components/schemas/U64'\n        oldest_ledger_version:\n          $ref: '#/components/schemas/U64'\n        ledger_timestamp:\n          $ref: '#/components/schemas/U64'\n        node_role:\n          $ref: '#/components/schemas/RoleType'\n    ModuleBundlePayload:\n      type: object\n      required:\n      - modules\n      properties:\n        modules:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveModuleBytecode'\n    MoveAbility:\n      type: string\n    MoveFunction:\n      type: object\n      required:\n      - name\n      - visibility\n      - is_entry\n      - generic_type_params\n      - params\n      - return\n      properties:\n        name:\n          $ref: '#/components/schemas/IdentifierWrapper'\n        visibility:\n          $ref: '#/components/schemas/MoveFunctionVisibility'\n        is_entry:\n          type: boolean\n        generic_type_params:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveFunctionGenericTypeParam'\n        params:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveType'\n        return:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveType'\n    MoveFunctionGenericTypeParam:\n      type: object\n      required:\n      - constraints\n      properties:\n        constraints:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveAbility'\n    MoveFunctionVisibility:\n      type: string\n      enum:\n      - private\n      - public\n      - friend\n    MoveModule:\n      type: object\n      required:\n      - address\n      - name\n      - friends\n      - exposed_functions\n      - structs\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        name:\n          $ref: '#/components/schemas/IdentifierWrapper'\n        friends:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveModuleId'\n        exposed_functions:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveFunction'\n        structs:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveStruct'\n    MoveModuleBytecode:\n      type: object\n      required:\n      - bytecode\n      properties:\n        bytecode:\n          $ref: '#/components/schemas/HexEncodedBytes'\n        abi:\n          $ref: '#/components/schemas/MoveModule'\n    MoveModuleId:\n      type: object\n      required:\n      - address\n      - name\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        name:\n          $ref: '#/components/schemas/IdentifierWrapper'\n    MoveResource:\n      type: object\n      required:\n      - type\n      - data\n      properties:\n        type:\n          $ref: '#/components/schemas/MoveStructTag'\n        data:\n          $ref: '#/components/schemas/MoveStructValue'\n    MoveScriptBytecode:\n      type: object\n      required:\n      - bytecode\n      properties:\n        bytecode:\n          $ref: '#/components/schemas/HexEncodedBytes'\n        abi:\n          $ref: '#/components/schemas/MoveFunction'\n    MoveStruct:\n      type: object\n      required:\n      - name\n      - is_native\n      - abilities\n      - generic_type_params\n      - fields\n      properties:\n        name:\n          $ref: '#/components/schemas/IdentifierWrapper'\n        is_native:\n          type: boolean\n        abilities:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveAbility'\n        generic_type_params:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveStructGenericTypeParam'\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveStructField'\n    MoveStructField:\n      type: object\n      required:\n      - name\n      - type\n      properties:\n        name:\n          $ref: '#/components/schemas/IdentifierWrapper'\n        type:\n          $ref: '#/components/schemas/MoveType'\n    MoveStructGenericTypeParam:\n      type: object\n      required:\n      - constraints\n      - is_phantom\n      properties:\n        constraints:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveAbility'\n        is_phantom:\n          type: boolean\n    MoveStructTag:\n      type: object\n      required:\n      - address\n      - module\n      - name\n      - generic_type_params\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        module:\n          $ref: '#/components/schemas/IdentifierWrapper'\n        name:\n          $ref: '#/components/schemas/IdentifierWrapper'\n        generic_type_params:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveType'\n    MoveStructTagParam:\n      type: string\n      description: |\n        String representation of a MoveStructTag (on-chain Move struct type). This exists so you\n        can specify MoveStructTags as path / query parameters, e.g. for get_events_by_event_handle.\n\n        It is a combination of:\n          1. `move_module_address`, `module_name` and `struct_name`, all joined by `::`\n          2. `struct generic type parameters` joined by `, `\n\n        Examples:\n          * `0x1::coin::CoinStore\u003c0x1::aptos_coin::AptosCoin\u003e`\n          * `0x1::account::Account`\n\n        Note:\n          1. Empty chars should be ignored when comparing 2 struct tag ids.\n          2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n\n        See [doc](https://aptos.dev/concepts/basics-accounts) for more details.\n      example: 0x1::coin::CoinStore\u003c0x1::aptos_coin::AptosCoin\u003e\n      pattern: ^0x[0-9a-zA-Z:_\u003c\u003e]+$\n    MoveStructValue:\n      type: object\n      description: |\n        This is a JSON representation of some data within an account resource. More specifically,\n        it is a map of strings to arbitrary JSON values / objects, where the keys are top level\n        fields within the given resource.\n\n        To clarify, you might query for 0x1::account::Account and see the example data.\n\n        Move `bool` type value is serialized into `boolean`.\n\n        Move `u8` type value is serialized into `integer`.\n\n        Move `u64` and `u128` type value is serialized into `string`.\n\n        Move `address` type value (32 byte Aptos account address) is serialized into a HexEncodedBytes string.\n        For example:\n          - `0x1`\n          - `0x1668f6be25668c1a17cd8caf6b8d2f25`\n\n        Move `vector` type value is serialized into `array`, except `vector\u003cu8\u003e` which is serialized into a\n        HexEncodedBytes string with `0x` prefix.\n        For example:\n          - `vector\u003cu64\u003e{255, 255}` =\u003e `[\"255\", \"255\"]`\n          - `vector\u003cu8\u003e{255, 255}` =\u003e `0xffff`\n\n        Move `struct` type value is serialized into `object` that looks like this (except some Move stdlib types, see the following section):\n          ```json\n          {\n            field1_name: field1_value,\n            field2_name: field2_value,\n            ......\n          }\n          ```\n\n        For example:\n          `{ \"created\": \"0xa550c18\", \"role_id\": \"0\" }`\n\n        **Special serialization for Move stdlib types**:\n          - [0x1::string::String](https://github.com/aptos-labs/aptos-core/blob/main/language/move-stdlib/docs/ascii.md)\n            is serialized into `string`. For example, struct value `0x1::string::String{bytes: b\"Hello World!\"}`\n            is serialized as `\"Hello World!\"` in JSON.\n      example:\n        authentication_key: '0x0000000000000000000000000000000000000000000000000000000000000001'\n        coin_register_events:\n          counter: '0'\n          guid:\n            id:\n              addr: '0x1'\n              creation_num: '0'\n        self_address: '0x1'\n        sequence_number: '0'\n    MoveType:\n      type: string\n      description: |\n        String representation of an on-chain Move type tag that is exposed in transaction payload.\n            Values:\n              - bool\n              - u8\n              - u64\n              - u128\n              - address\n              - signer\n              - vector: `vector\u003c{non-reference MoveTypeId}\u003e`\n              - struct: `{address}::{module_name}::{struct_name}::\u003c{generic types}\u003e`\n\n            Vector type value examples:\n              - `vector\u003cu8\u003e`\n              - `vector\u003cvector\u003cu64\u003e\u003e`\n              - `vector\u003c0x1::coin::CoinStore\u003c0x1::aptos_coin::AptosCoin\u003e\u003e`\n\n            Struct type value examples:\n              - `0x1::coin::CoinStore\u003c0x1::aptos_coin::AptosCoin\u003e\n              - `0x1::account::Account`\n\n            Note:\n              1. Empty chars should be ignored when comparing 2 struct tag ids.\n              2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n      pattern: ^(bool|u8|u64|u128|address|signer|vector\u003c.+\u003e|0x[0-9a-zA-Z:_\u003c, \u003e]+)$\n    MoveValue:\n      type: object\n      anyOf:\n      - type: integer\n        format: uint8\n      - $ref: '#/components/schemas/U64'\n      - $ref: '#/components/schemas/U128'\n      - type: boolean\n      - $ref: '#/components/schemas/Address'\n      - type: array\n        items:\n          $ref: '#/components/schemas/MoveValue'\n      - $ref: '#/components/schemas/HexEncodedBytes'\n      - $ref: '#/components/schemas/MoveStructValue'\n      - type: string\n    MultiAgentSignature:\n      type: object\n      required:\n      - sender\n      - secondary_signer_addresses\n      - secondary_signers\n      properties:\n        sender:\n          $ref: '#/components/schemas/AccountSignature'\n        secondary_signer_addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n        secondary_signers:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountSignature'\n    MultiEd25519Signature:\n      type: object\n      required:\n      - public_keys\n      - signatures\n      - threshold\n      - bitmap\n      properties:\n        public_keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/HexEncodedBytes'\n        signatures:\n          type: array\n          items:\n            $ref: '#/components/schemas/HexEncodedBytes'\n        threshold:\n          type: integer\n          format: uint8\n        bitmap:\n          $ref: '#/components/schemas/HexEncodedBytes'\n    PendingTransaction:\n      type: object\n      required:\n      - hash\n      - sender\n      - sequence_number\n      - max_gas_amount\n      - gas_unit_price\n      - expiration_timestamp_secs\n      - payload\n      properties:\n        hash:\n          $ref: '#/components/schemas/HashValue'\n        sender:\n          $ref: '#/components/schemas/Address'\n        sequence_number:\n          $ref: '#/components/schemas/U64'\n        max_gas_amount:\n          $ref: '#/components/schemas/U64'\n        gas_unit_price:\n          $ref: '#/components/schemas/U64'\n        expiration_timestamp_secs:\n          $ref: '#/components/schemas/U64'\n        payload:\n          $ref: '#/components/schemas/TransactionPayload'\n        signature:\n          $ref: '#/components/schemas/TransactionSignature'\n    RoleType:\n      type: string\n      enum:\n      - validator\n      - full_node\n    ScriptFunctionId:\n      type: object\n      required:\n      - module\n      - name\n      properties:\n        module:\n          $ref: '#/components/schemas/MoveModuleId'\n        name:\n          $ref: '#/components/schemas/IdentifierWrapper'\n    ScriptFunctionPayload:\n      type: object\n      required:\n      - function\n      - type_arguments\n      - arguments\n      properties:\n        function:\n          $ref: '#/components/schemas/ScriptFunctionId'\n        type_arguments:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveType'\n        arguments:\n          type: array\n          items: {}\n    ScriptPayload:\n      type: object\n      required:\n      - code\n      - type_arguments\n      - arguments\n      properties:\n        code:\n          $ref: '#/components/schemas/MoveScriptBytecode'\n        type_arguments:\n          type: array\n          items:\n            $ref: '#/components/schemas/MoveType'\n        arguments:\n          type: array\n          items: {}\n    ScriptWriteSet:\n      type: object\n      required:\n      - execute_as\n      - script\n      properties:\n        execute_as:\n          $ref: '#/components/schemas/Address'\n        script:\n          $ref: '#/components/schemas/ScriptPayload'\n    StateCheckpointTransaction:\n      type: object\n      required:\n      - version\n      - hash\n      - state_root_hash\n      - event_root_hash\n      - gas_used\n      - success\n      - vm_status\n      - accumulator_root_hash\n      - changes\n      - timestamp\n      properties:\n        version:\n          $ref: '#/components/schemas/U64'\n        hash:\n          $ref: '#/components/schemas/HashValue'\n        state_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        event_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        gas_used:\n          $ref: '#/components/schemas/U64'\n        success:\n          type: boolean\n        vm_status:\n          type: string\n        accumulator_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        changes:\n          type: array\n          items:\n            $ref: '#/components/schemas/WriteSetChange'\n        timestamp:\n          $ref: '#/components/schemas/U64'\n    SubmitTransactionRequest:\n      type: object\n      required:\n      - sender\n      - sequence_number\n      - max_gas_amount\n      - gas_unit_price\n      - expiration_timestamp_secs\n      - payload\n      - signature\n      properties:\n        sender:\n          $ref: '#/components/schemas/Address'\n        sequence_number:\n          $ref: '#/components/schemas/U64'\n        max_gas_amount:\n          $ref: '#/components/schemas/U64'\n        gas_unit_price:\n          $ref: '#/components/schemas/U64'\n        expiration_timestamp_secs:\n          $ref: '#/components/schemas/U64'\n        payload:\n          $ref: '#/components/schemas/TransactionPayload'\n        signature:\n          $ref: '#/components/schemas/TransactionSignature'\n    TableItemRequest:\n      type: object\n      required:\n      - key_type\n      - value_type\n      - key\n      properties:\n        key_type:\n          $ref: '#/components/schemas/MoveType'\n        value_type:\n          $ref: '#/components/schemas/MoveType'\n        key: {}\n    Transaction:\n      type: object\n      oneOf:\n      - $ref: '#/components/schemas/Transaction_PendingTransaction'\n      - $ref: '#/components/schemas/Transaction_UserTransaction'\n      - $ref: '#/components/schemas/Transaction_GenesisTransaction'\n      - $ref: '#/components/schemas/Transaction_BlockMetadataTransaction'\n      - $ref: '#/components/schemas/Transaction_StateCheckpointTransaction'\n      discriminator:\n        propertyName: type\n        mapping:\n          pending_transaction: '#/components/schemas/Transaction_PendingTransaction'\n          user_transaction: '#/components/schemas/Transaction_UserTransaction'\n          genesis_transaction: '#/components/schemas/Transaction_GenesisTransaction'\n          block_metadata_transaction: '#/components/schemas/Transaction_BlockMetadataTransaction'\n          state_checkpoint_transaction: '#/components/schemas/Transaction_StateCheckpointTransaction'\n    TransactionPayload:\n      type: object\n      oneOf:\n      - $ref: '#/components/schemas/TransactionPayload_ScriptFunctionPayload'\n      - $ref: '#/components/schemas/TransactionPayload_ScriptPayload'\n      - $ref: '#/components/schemas/TransactionPayload_ModuleBundlePayload'\n      - $ref: '#/components/schemas/TransactionPayload_WriteSetPayload'\n      discriminator:\n        propertyName: type\n        mapping:\n          script_function_payload: '#/components/schemas/TransactionPayload_ScriptFunctionPayload'\n          script_payload: '#/components/schemas/TransactionPayload_ScriptPayload'\n          module_bundle_payload: '#/components/schemas/TransactionPayload_ModuleBundlePayload'\n          write_set_payload: '#/components/schemas/TransactionPayload_WriteSetPayload'\n    TransactionPayload_ModuleBundlePayload:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: module_bundle_payload\n      - $ref: '#/components/schemas/ModuleBundlePayload'\n    TransactionPayload_ScriptFunctionPayload:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: script_function_payload\n      - $ref: '#/components/schemas/ScriptFunctionPayload'\n    TransactionPayload_ScriptPayload:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: script_payload\n      - $ref: '#/components/schemas/ScriptPayload'\n    TransactionPayload_WriteSetPayload:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: write_set_payload\n      - $ref: '#/components/schemas/WriteSetPayload'\n    TransactionSignature:\n      type: object\n      oneOf:\n      - $ref: '#/components/schemas/TransactionSignature_Ed25519Signature'\n      - $ref: '#/components/schemas/TransactionSignature_MultiEd25519Signature'\n      - $ref: '#/components/schemas/TransactionSignature_MultiAgentSignature'\n      discriminator:\n        propertyName: type\n        mapping:\n          ed_25519_signature: '#/components/schemas/TransactionSignature_Ed25519Signature'\n          multi_ed_25519_signature: '#/components/schemas/TransactionSignature_MultiEd25519Signature'\n          multi_agent_signature: '#/components/schemas/TransactionSignature_MultiAgentSignature'\n    TransactionSignature_Ed25519Signature:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: ed_25519_signature\n      - $ref: '#/components/schemas/Ed25519Signature'\n    TransactionSignature_MultiAgentSignature:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: multi_agent_signature\n      - $ref: '#/components/schemas/MultiAgentSignature'\n    TransactionSignature_MultiEd25519Signature:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: multi_ed_25519_signature\n      - $ref: '#/components/schemas/MultiEd25519Signature'\n    Transaction_BlockMetadataTransaction:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: block_metadata_transaction\n      - $ref: '#/components/schemas/BlockMetadataTransaction'\n    Transaction_GenesisTransaction:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: genesis_transaction\n      - $ref: '#/components/schemas/GenesisTransaction'\n    Transaction_PendingTransaction:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: pending_transaction\n      - $ref: '#/components/schemas/PendingTransaction'\n    Transaction_StateCheckpointTransaction:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: state_checkpoint_transaction\n      - $ref: '#/components/schemas/StateCheckpointTransaction'\n    Transaction_UserTransaction:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: user_transaction\n      - $ref: '#/components/schemas/UserTransaction'\n    U128:\n      type: string\n      format: uint64\n      description: |\n        A string containing a 128-bit unsigned integer.\n\n        We represent u128 values as a string to ensure compatability with languages such\n        as JavaScript that do not parse u64s in JSON natively.\n      example: '340282366920938463463374607431768211454'\n    U64:\n      type: string\n      format: uint64\n      description: |\n        A string containing a 64-bit unsigned integer.\n\n        We represent u64 values as a string to ensure compatability with languages such\n        as JavaScript that do not parse u64s in JSON natively.\n      example: '32425224034'\n    UserTransaction:\n      type: object\n      required:\n      - version\n      - hash\n      - state_root_hash\n      - event_root_hash\n      - gas_used\n      - success\n      - vm_status\n      - accumulator_root_hash\n      - changes\n      - sender\n      - sequence_number\n      - max_gas_amount\n      - gas_unit_price\n      - expiration_timestamp_secs\n      - payload\n      - events\n      - timestamp\n      properties:\n        version:\n          $ref: '#/components/schemas/U64'\n        hash:\n          $ref: '#/components/schemas/HashValue'\n        state_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        event_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        gas_used:\n          $ref: '#/components/schemas/U64'\n        success:\n          type: boolean\n        vm_status:\n          type: string\n        accumulator_root_hash:\n          $ref: '#/components/schemas/HashValue'\n        changes:\n          type: array\n          items:\n            $ref: '#/components/schemas/WriteSetChange'\n        sender:\n          $ref: '#/components/schemas/Address'\n        sequence_number:\n          $ref: '#/components/schemas/U64'\n        max_gas_amount:\n          $ref: '#/components/schemas/U64'\n        gas_unit_price:\n          $ref: '#/components/schemas/U64'\n        expiration_timestamp_secs:\n          $ref: '#/components/schemas/U64'\n        payload:\n          $ref: '#/components/schemas/TransactionPayload'\n        signature:\n          $ref: '#/components/schemas/TransactionSignature'\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n        timestamp:\n          $ref: '#/components/schemas/U64'\n    VersionedEvent:\n      type: object\n      required:\n      - version\n      - key\n      - sequence_number\n      - type\n      - data\n      properties:\n        version:\n          $ref: '#/components/schemas/U64'\n        key:\n          $ref: '#/components/schemas/EventKey'\n        sequence_number:\n          $ref: '#/components/schemas/U64'\n        type:\n          $ref: '#/components/schemas/MoveType'\n        data: {}\n    WriteModule:\n      type: object\n      required:\n      - address\n      - state_key_hash\n      - data\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        state_key_hash:\n          type: string\n        data:\n          $ref: '#/components/schemas/MoveModuleBytecode'\n    WriteResource:\n      type: object\n      required:\n      - address\n      - state_key_hash\n      - data\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        state_key_hash:\n          type: string\n        data:\n          $ref: '#/components/schemas/MoveResource'\n    WriteSet:\n      type: object\n      oneOf:\n      - $ref: '#/components/schemas/WriteSet_ScriptWriteSet'\n      - $ref: '#/components/schemas/WriteSet_DirectWriteSet'\n      discriminator:\n        propertyName: type\n        mapping:\n          script_write_set: '#/components/schemas/WriteSet_ScriptWriteSet'\n          direct_write_set: '#/components/schemas/WriteSet_DirectWriteSet'\n    WriteSetChange:\n      type: object\n      oneOf:\n      - $ref: '#/components/schemas/WriteSetChange_DeleteModule'\n      - $ref: '#/components/schemas/WriteSetChange_DeleteResource'\n      - $ref: '#/components/schemas/WriteSetChange_DeleteTableItem'\n      - $ref: '#/components/schemas/WriteSetChange_WriteModule'\n      - $ref: '#/components/schemas/WriteSetChange_WriteResource'\n      - $ref: '#/components/schemas/WriteSetChange_WriteTableItem'\n      discriminator:\n        propertyName: type\n        mapping:\n          delete_module: '#/components/schemas/WriteSetChange_DeleteModule'\n          delete_resource: '#/components/schemas/WriteSetChange_DeleteResource'\n          delete_table_item: '#/components/schemas/WriteSetChange_DeleteTableItem'\n          write_module: '#/components/schemas/WriteSetChange_WriteModule'\n          write_resource: '#/components/schemas/WriteSetChange_WriteResource'\n          write_table_item: '#/components/schemas/WriteSetChange_WriteTableItem'\n    WriteSetChange_DeleteModule:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: delete_module\n      - $ref: '#/components/schemas/DeleteModule'\n    WriteSetChange_DeleteResource:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: delete_resource\n      - $ref: '#/components/schemas/DeleteResource'\n    WriteSetChange_DeleteTableItem:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: delete_table_item\n      - $ref: '#/components/schemas/DeleteTableItem'\n    WriteSetChange_WriteModule:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: write_module\n      - $ref: '#/components/schemas/WriteModule'\n    WriteSetChange_WriteResource:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: write_resource\n      - $ref: '#/components/schemas/WriteResource'\n    WriteSetChange_WriteTableItem:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: write_table_item\n      - $ref: '#/components/schemas/WriteTableItem'\n    WriteSetPayload:\n      type: object\n      required:\n      - write_set\n      properties:\n        write_set:\n          $ref: '#/components/schemas/WriteSet'\n    WriteSet_DirectWriteSet:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: direct_write_set\n      - $ref: '#/components/schemas/DirectWriteSet'\n    WriteSet_ScriptWriteSet:\n      allOf:\n      - type: object\n        required:\n        - type\n        properties:\n          type:\n            type: string\n            example: script_write_set\n      - $ref: '#/components/schemas/ScriptWriteSet'\n    WriteTableItem:\n      type: object\n      required:\n      - state_key_hash\n      - handle\n      - key\n      - value\n      properties:\n        state_key_hash:\n          type: string\n        handle:\n          $ref: '#/components/schemas/HexEncodedBytes'\n        key:\n          $ref: '#/components/schemas/HexEncodedBytes'\n        value:\n          $ref: '#/components/schemas/HexEncodedBytes'\n        data:\n          $ref: '#/components/schemas/DecodedTableData'\nexternalDocs:\n  url: https://github.com/aptos-labs/aptos-core\n",
			"canonicalURL": "/github.com/apscan/indexer@a3080c945e432b47fe7e7ec274f09c5536e1ffd8/-/blob/api/doc/v1/spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apscan/indexer/blob/a3080c945e432b47fe7e7ec274f09c5536e1ffd8/api/doc/v1/spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/accounts/{address}/transactions\": get: responses: code 200: contents: media: \"application/json\": generate schema: item: oneOf: collect variants: oneOf[0]: allOf: field payload: oneOf: collect variants: oneOf[3]: allOf: field write_set: oneOf: collect variants: oneOf[1]: allOf: field changes: item: oneOf: discriminator: unable to map \"delete_resource\" to \"https://raw.githubusercontent.com/apscan/indexer/a3080c945e432b47fe7e7ec274f09c5536e1ffd8/api/doc/v1/spec.yaml#/components/schemas/WriteSetChange_DeleteResource\""
}