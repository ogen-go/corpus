{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Somfy-Developer/Somfy-TaHoma-Developer-Mode"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/openapi.yaml",
			"byteSize": 17460,
			"content": "openapi: 3.0.3\ninfo:\n  title: Somfy TaHoma local API\n  version: \"1.0\"\nservers:\n  - url: https://gateway-{pin}.local:{port}/enduser-mobile-web/1/enduserAPI\n    variables:\n      pin:\n        default: 2001-0001-1891\n      port:\n        default: \"8443\"\nsecurity:\n  - bearerAuth: []\ntags:\n  - name: Api\n  - name: Event\n  - name: Gateway\n  - name: Setup\n  - name: Execution\npaths:\n  /apiVersion:\n    get:\n      tags:\n        - Api\n      summary: Get the api version\n      # No security for this endpoint. We can retrieve api version without authorization.\n      security: []\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  protocolVersion:\n                    type: string\n              examples:\n                version:\n                  value:\n                    protocolVersion: 2022.1.3-1\n  /events/register:\n    post:\n      tags:\n        - Event\n      summary: Register an event listener\n      description: |\n        Register an event listener. The listener will be automaticaly destroyed after 10min of inactivity.\n\n        It can be kept alive indefinitely by fetching events periodicaly.\n\n        Listeners are also destroyed if the gateway reboot. \n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/ListenerId\"\n  /events/{listenerId}/fetch:\n    post:\n      tags:\n        - Event\n      summary: Fetch events\n      description: Fetch events available after registration and from previous fetch.\n      parameters:\n        - $ref: \"#/components/parameters/listenerId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Event\"\n  /events/{listenerId}/unregister:\n    post:\n      tags:\n        - Event\n      summary: Unregister an event listener\n      parameters:\n        - $ref: \"#/components/parameters/listenerId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n  /setup:\n    get:\n      tags:\n        - Setup\n      description: Get all data about the user setup.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Setup\"\n  /setup/gateways:\n    get:\n      tags:\n        - Gateway\n      summary: Get the gateway description\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Gateway\"\n              examples:\n                gateway:\n                  value:\n                    - gatewayId: 2001-1234-5678\n                      connectivity:\n                        status: OK\n                        protocolVersion: 2022.1.3-1\n  /setup/devices:\n    get:\n      tags:\n        - Setup\n      summary: Get devices\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n  /setup/devices/{deviceURL}:\n    get:\n      tags:\n        - Setup\n      summary: Get device\n      parameters:\n        - $ref: \"#/components/parameters/deviceURL\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n  /setup/devices/{deviceURL}/states:\n    get:\n      tags:\n        - Setup\n      summary: Get device states\n      parameters:\n        - $ref: \"#/components/parameters/deviceURL\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/State\"\n  /setup/devices/{deviceURL}/states/{name}:\n    get:\n      tags:\n        - Setup\n      summary: Get device state\n      parameters:\n        - $ref: \"#/components/parameters/deviceURL\"\n        - name: name\n          in: path\n          description: The name of the state.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/State\"\n  /setup/devices/controllables/{controllableName}:\n    get:\n      tags:\n        - Setup\n      summary: Get devices with controllables\n      description: Get all devices urls which have that controllable name\n      parameters:\n        - name: controllableName\n          in: path\n          description: New device label.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/DeviceURL\"\n  /exec/apply:\n    post:\n      tags:\n        - Execution\n      summary: Execute action group\n      description: Execute a non-persistent action group.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                label:\n                  type: string\n                action:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      deviceURL:\n                        $ref: \"#/components/schemas/DeviceURL\"\n                      #TODO: finish\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ExecutionId\"\n  /exec/current/{executionId}:\n    get:\n      tags:\n        - Execution\n      summary: Get current execution\n      description: Get an action group execution currently running and launched from the local API.\n      parameters:\n        - $ref: \"#/components/parameters/executionId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Action\"\n  /exec/current:\n    get:\n      tags:\n        - Execution\n      summary: Get current executions\n      description: Get action groups executions currently running and launched from the local API.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Action\"\n  /exec/current/setup:\n    delete:\n      tags:\n        - Execution\n      summary: Cancel all executions\n      description: Cancel all running setup-level executions launched from the local API.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n  /exec/current/setup/{executionId}:\n    delete:\n      tags:\n        - Execution\n      summary: Cancel a specific execution\n      description: Cancel a running setup-level execution launched from the local API.\n      parameters:\n        - $ref: \"#/components/parameters/executionId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  parameters:\n    deviceURL:\n      name: deviceURL\n      in: path\n      description: Device URL.\n      required: true\n      schema:\n        $ref: \"#/components/schemas/DeviceURL\"\n    executionId:\n      name: executionId\n      in: path\n      description: Execution identifier.\n      required: true\n      schema:\n        $ref: \"#/components/schemas/ExecutionId\"\n    gatewayId:\n      name: gatewayId\n      in: path\n      description: Gateway identifier.\n      required: true\n      schema:\n        $ref: \"#/components/schemas/GatewayId\"\n    listenerId:\n      name: listenerId\n      in: path\n      description: Listener identifier.\n      required: true\n      schema:\n        $ref: \"#/components/schemas/ListenerId\"\n    protocolType:\n      name: protocolType\n      in: path\n      description: Protocol identifier.\n      required: true\n      schema:\n        type: integer\n        minimum: 0\n  responses:\n    ExecutionId:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              execId:\n                $ref: \"#/components/schemas/ExecutionId\"\n  schemas:\n    Action:\n      type: object\n      properties:\n        owner:\n          type: string\n        id:\n          $ref: \"#/components/schemas/ExecutionId\"\n        executionType:\n          type: string\n          enum:\n            - Immediate execution\n        executionSubType:\n          type: string\n          enum:\n            - MANUAL_CONTROL\n        description:\n          type: string\n        startTime:\n          type: integer\n        actionGroup:\n          type: object\n          properties:\n            label:\n              type: string\n            actions:\n              type: array\n              items:\n                type: object\n                properties:\n                  commands:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        type:\n                          type: integer\n                        name:\n                          type: string\n                        parameters:\n                          type: array\n                          items: {}\n                  deviceURL:\n                    $ref: \"#/components/schemas/DeviceURL\"\n        state:\n          type: string\n          enum:\n            - INITIALIZED\n            - TRANSMITTED\n            - IN_PROGRESS\n            - COMPLETED\n            - FAILED\n            - QUEUED_GATEWAY_SIDE\n    Attribute:\n      $ref: \"#/components/schemas/State\"\n    Device:\n      type: object\n      properties:\n        deviceURL:\n          $ref: \"#/components/schemas/DeviceURL\"\n        subsystemId:\n          type: integer\n        available:\n          type: boolean\n        type:\n          type: integer\n        label:\n          type: string\n        synced:\n          type: boolean\n        states:\n          type: array\n          items:\n            $ref: \"#/components/schemas/State\"\n        attributes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Attribute\"\n        enabled:\n          type: boolean\n        controllableName:\n          type: string\n        definition:\n          type: object\n          properties:\n            states:\n              type: array\n              items:\n                type: object\n                properties:\n                  name:\n                    type: string\n            widgetName:\n              type: string\n            type:\n              type: string\n            commands:\n              type: array\n              items:\n                type: object\n                properties:\n                  commandName:\n                    type: string\n                  nparams:\n                    type: integer\n                    minimum: 0\n            uiClass:\n              type: string\n              \n        creationTime:\n          type: number\n    Event:\n      oneOf:\n        - type: object\n          properties:\n            name:\n              type: string\n              enum:\n               - ExecutionStateChangedEvent\n        - type: object\n          properties:\n            name:\n              type: string\n              enum:\n               - CommandExecutionStateChangedEvent\n        - type: object\n          properties:\n            name:\n              type: string\n              enum:\n               - DeviceStateChangedEvent\n        - type: object\n          properties:\n            name:\n              type: string\n              enum:\n               - DeviceCreatedEvent\n        - type: object\n          properties:\n            name:\n              type: string\n              enum:\n               - DeviceRemovedEvent\n        - type: object\n          properties:\n            name:\n              type: string\n              enum:\n               - DeviceUnavailableEvent\n        - type: object\n          properties:\n            name:\n              type: string\n              enum:\n               - DeviceAvailableEvent\n        - type: object\n          properties:\n            name:\n              type: string\n              enum:\n               - DeviceUpdatedEvent\n        - type: object\n          properties:\n            name:\n              type: string\n              enum:\n               - DeviceProtocolAvailableEvent\n            protocolType:\n              type: integer\n        - type: object\n          properties:\n            name:\n              type: string\n              enum:\n               - DeviceProtocolUnavailableEvent\n            protocolType:\n              type: integer\n    Execution:\n      type: object\n      properties:\n        state:\n          type: string\n          enum:\n            - INITIALIZED\n            - TRANSMITTED\n            - IN_PROGRESS\n            - COMPLETED\n            - FAILED\n            - QUEUED_GATEWAY_SIDE\n        id:\n          $ref: \"#/components/schemas/ExecutionId\"\n        source:\n          type: string\n          enum:\n            - local\n        eventTime:\n          description: creation time (timestamp in ms)\n          type: integer\n          minimum: 0\n        detail:\n          type: string\n          description: error details\n        label:\n          type: string\n        type:\n          type: string\n          enum:\n            - Immediate execution - MANUAL_CONTROL\n        executionSubType:\n          type: string\n          enum:\n            - MANUAL_CONTROL\n        executionType:\n          type: string\n          enum:\n            - Immediate execution\n        effectiveStartTime:\n          description: Start time (timestamp in ms)\n          type: integer\n          minimum: 0\n        endTime:\n          description: End time (timestamp in ms)\n          type: integer\n          minimum: 0\n        duration:\n          description: Total duration in ms\n          type: integer\n          minimum: 0\n        commands:\n          type: array\n          items:\n            type: object\n            #TODO: properties:\n        failureType:\n          type: string\n    ExecutionId:\n      type: string\n      format: uuid\n    DeviceURL:\n      type: string\n    Gateway:\n      type: object\n      properties:\n        gatewayId:\n          $ref: \"#/components/schemas/GatewayId\"\n        connectivity:\n          type: object\n          properties:\n            status:\n              type: string\n            protocolVersion:\n              type: string\n    GatewayId:\n      type: string\n      example: 2001-1234-5678\n    ListenerId:\n      type: string\n      format: uuid\n    Setup:\n      type: object\n      properties:\n        gateways:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Gateway\"\n        devices:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Device\"\n    State:\n      oneOf:\n        - type: object\n          properties:\n            name:\n              type: string\n          required:\n            - name\n          additionalProperties: false\n        - type: object\n          properties:\n            type:\n              type: integer\n              enum:\n                - 3\n            name:\n              type: string\n            value:\n              type: string\n          required:\n            - name\n            - type\n            - value\n        - type: object\n          properties:\n            type:\n              type: integer\n              enum:\n                - 1\n                - 2\n            name:\n              type: string\n            value:\n              type: number\n          required:\n            - name\n            - type\n            - value\n        - type: object\n          properties:\n            type:\n              type: integer\n              enum:\n                - 6\n            name:\n              type: string\n            value:\n              type: boolean\n          required:\n            - name\n            - type\n            - value\n        - type: object\n          properties:\n            type:\n              type: integer\n              enum:\n                - 11\n            name:\n              type: string\n            value:\n              type: object\n          required:\n            - name\n            - type\n            - value\n        - type: object\n          properties:\n            type:\n              type: integer\n              enum:\n                - 10\n            name:\n              type: string\n            value:\n              type: array\n              items: {}\n          required:\n            - name\n            - type\n            - value\n"
		}
	},
	"Error": "buildIR: make ir: path \"/exec/apply\": post: responses: 200: contents: application/json: generate schema: save schema types: save referenced type: reference \"#/components/schemas/ExecutionId\" type name conflict: \"ExecutionId\"",
	"NotImplemented": [
		"discriminator inference"
	]
}