{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/mojaloop/api-snippets"
		},
		"file": {
			"name": "thirdparty-openapi3-snippets.yaml",
			"size": 0,
			"path": "docs/thirdparty-openapi3-snippets.yaml",
			"byteSize": 382054,
			"content": "openapi: 3.0.2\ninfo:\n  version: '0.1'\n  title: Thirdparty Snippets\n  description: |\n    Based on sequence diagrams\n    (https://github.com/mojaloop/pisp/tree/master/docs/out).\n    This is a work in progress.\n  license:\n    name: TBD\nservers:\n  - url: '{protocol}://hostname:\u003cport\u003e/switch/'\n    variables:\n      protocol:\n        enum:\n          - http\n          - https\n        default: https\npaths:\n  /interface:\n    post:\n      description: \u003e-\n        Essential path to include schema definitions that are not used so that\n        these definitions get included into the openapi-cli bundle api\n        definition so that they get converted into typescript definitions.\n      operationId: test\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - title: ParticipantsIDPutResponse\n                  type: object\n                  description: The object sent in the PUT /participants/{ID} callback.\n                  properties: \u0026ref_62\n                    partyList:\n                      type: array\n                      items:\n                        title: PartyResult\n                        type: object\n                        description: Data model for the complex type PartyResult.\n                        properties: \u0026ref_7\n                          partyId:\n                            title: PartyIdInfo\n                            type: object\n                            description: Data model for the complex type PartyIdInfo.\n                            properties: \u0026ref_2\n                              partyIdType:\n                                title: PartyIdType\n                                type: string\n                                enum: \u0026ref_77\n                                  - MSISDN\n                                  - EMAIL\n                                  - PERSONAL_ID\n                                  - BUSINESS\n                                  - DEVICE\n                                  - ACCOUNT_ID\n                                  - IBAN\n                                  - ALIAS\n                                  - CONSENT\n                                  - THIRD_PARTY_LINK\n                                description: \u003e\n                                  Below are the allowed values for the\n                                  enumeration.\n\n                                  - MSISDN - An MSISDN (Mobile Station\n                                  International Subscriber Directory\n\n                                  Number, that is, the phone number) is used as\n                                  reference to a participant.\n\n                                  The MSISDN identifier should be in\n                                  international format according to the\n\n                                  [ITU-T E.164\n                                  standard](https://www.itu.int/rec/T-REC-E.164/en).\n\n                                  Optionally, the MSISDN may be prefixed by a\n                                  single plus sign, indicating the\n\n                                  international prefix.\n\n                                  - EMAIL - An email is used as reference to a\n\n                                  participant. The format of the email should be\n                                  according to the informational\n\n                                  [RFC\n                                  3696](https://tools.ietf.org/html/rfc3696).\n\n                                  - PERSONAL_ID - A personal identifier is used\n                                  as reference to a participant.\n\n                                  Examples of personal identification are\n                                  passport number, birth certificate\n\n                                  number, and national registration number. The\n                                  identifier number is added in \n\n                                  the PartyIdentifier element. The personal\n                                  identifier type is added in the\n\n                                  PartySubIdOrType element.\n\n                                  - BUSINESS - A specific Business (for example,\n                                  an organization or a company)\n\n                                  is used as reference to a participant. The\n                                  BUSINESS identifier can be in any\n\n                                  format. To make a transaction connected to a\n                                  specific username or bill number\n\n                                  in a Business, the PartySubIdOrType element\n                                  should be used.\n\n                                  - DEVICE - A specific device (for example, a\n                                  POS or ATM) ID connected to a\n\n                                  specific business or organization is used as\n                                  reference to a Party.\n\n                                  For referencing a specific device under a\n                                  specific business or organization,\n\n                                  use the PartySubIdOrType element.\n\n                                  - ACCOUNT_ID - A bank account number or FSP\n                                  account ID should be used as\n\n                                  reference to a participant. The ACCOUNT_ID\n                                  identifier can be in any format,\n\n                                  as formats can greatly differ depending on\n                                  country and FSP.\n\n                                  - IBAN - A bank account number or FSP account\n                                  ID is used as reference to a\n\n                                  participant. The IBAN identifier can consist\n                                  of up to 34 alphanumeric\n\n                                  characters and should be entered without\n                                  whitespace.\n\n                                  - ALIAS An alias is used as reference to a\n                                  participant. The alias should be\n\n                                  created in the FSP as an alternative reference\n                                  to an account owner.\n\n                                  Another example of an alias is a username in\n                                  the FSP system.\n\n                                  The ALIAS identifier can be in any format. It\n                                  is also possible to use the\n\n                                  PartySubIdOrType element for identifying an\n                                  account under an Alias defined\n\n                                  by the PartyIdentifier.\n\n                                  - CONSENT - A Consent represents an agreement\n                                  between a PISP, a Customer and\n\n                                  a DFSP which allows the PISP permission to\n                                  perform actions on behalf of the \n\n                                  customer. A Consent has an authoritative\n                                  source: either the DFSP who issued \n\n                                  the Consent, or an Auth Service which\n                                  administers the Consent.\n\n                                  - THIRD_PARTY_LINK - A Third Party Link\n                                  represents an agreement between a PISP,\n\n                                  a DFSP, and a specific Customer's account at\n                                  the DFSP. The content of the link \n\n                                  is created by the DFSP at the time when it\n                                  gives permission to the PISP for \n\n                                  specific access to a given account.\n                                example: PERSONAL_ID\n                              partyIdentifier:\n                                title: PartyIdentifier\n                                type: string\n                                minLength: 1\n                                maxLength: 128\n                                description: Identifier of the Party.\n                                example: '16135551212'\n                              partySubIdOrType:\n                                title: PartySubIdOrType\n                                type: string\n                                minLength: 1\n                                maxLength: 128\n                                description: \u003e-\n                                  Either a sub-identifier of a PartyIdentifier,\n                                  or a sub-type of the PartyIdType, normally a\n                                  PersonalIdentifierType.\n                              fspId:\n                                title: FspId\n                                type: string\n                                minLength: 1\n                                maxLength: 32\n                                description: FSP identifier.\n                              extensionList:\n                                title: ExtensionList\n                                type: object\n                                description: \u003e-\n                                  Data model for the complex type ExtensionList.\n                                  An optional list of extensions, specific to\n                                  deployment.\n                                properties: \u0026ref_0\n                                  extension:\n                                    type: array\n                                    items:\n                                      title: Extension\n                                      type: object\n                                      description: \u003e-\n                                        Data model for the complex type\n                                        Extension.\n                                      properties: \u0026ref_78\n                                        key:\n                                          title: ExtensionKey\n                                          type: string\n                                          minLength: 1\n                                          maxLength: 32\n                                          description: Extension key.\n                                        value:\n                                          title: ExtensionValue\n                                          type: string\n                                          minLength: 1\n                                          maxLength: 128\n                                          description: Extension value.\n                                      required: \u0026ref_79\n                                        - key\n                                        - value\n                                    minItems: 1\n                                    maxItems: 16\n                                    description: Number of Extension elements.\n                                required: \u0026ref_1\n                                  - extension\n                            required: \u0026ref_3\n                              - partyIdType\n                              - partyIdentifier\n                          errorInformation:\n                            title: ErrorInformation\n                            type: object\n                            description: Data model for the complex type ErrorInformation.\n                            properties: \u0026ref_13\n                              errorCode:\n                                title: ErrorCode\n                                type: string\n                                pattern: ^[1-9]\\d{3}$\n                                description: \u003e-\n                                  The API data type ErrorCode is a JSON String\n                                  of four characters, consisting of digits only.\n                                  Negative numbers are not allowed. A leading\n                                  zero is not allowed. Each error code in the\n                                  API is a four-digit number, for example, 1234,\n                                  where the first number (1 in the example)\n                                  represents the high-level error category, the\n                                  second number (2 in the example) represents\n                                  the low-level error category, and the last two\n                                  numbers (34 in the example) represent the\n                                  specific error.\n                                example: '5100'\n                              errorDescription:\n                                title: ErrorDescription\n                                type: string\n                                minLength: 1\n                                maxLength: 128\n                                description: Error description string.\n                              extensionList:\n                                title: ExtensionList\n                                type: object\n                                description: \u003e-\n                                  Data model for the complex type ExtensionList.\n                                  An optional list of extensions, specific to\n                                  deployment.\n                                properties: *ref_0\n                                required: *ref_1\n                            required: \u0026ref_14\n                              - errorCode\n                              - errorDescription\n                        required: \u0026ref_8\n                          - partyId\n                      minItems: 1\n                      maxItems: 10000\n                      description: \u003e-\n                        List of PartyResult elements that were either created or\n                        failed to be created.\n                    currency:\n                      title: Currency\n                      description: \u003e-\n                        The currency codes defined in [ISO\n                        4217](https://www.iso.org/iso-4217-currency-codes.html)\n                        as three-letter alphabetic codes are used as the\n                        standard naming representation for currencies.\n                      type: string\n                      minLength: 3\n                      maxLength: 3\n                      enum: \u0026ref_4\n                        - AED\n                        - AFN\n                        - ALL\n                        - AMD\n                        - ANG\n                        - AOA\n                        - ARS\n                        - AUD\n                        - AWG\n                        - AZN\n                        - BAM\n                        - BBD\n                        - BDT\n                        - BGN\n                        - BHD\n                        - BIF\n                        - BMD\n                        - BND\n                        - BOB\n                        - BRL\n                        - BSD\n                        - BTN\n                        - BWP\n                        - BYN\n                        - BZD\n                        - CAD\n                        - CDF\n                        - CHF\n                        - CLP\n                        - CNY\n                        - COP\n                        - CRC\n                        - CUC\n                        - CUP\n                        - CVE\n                        - CZK\n                        - DJF\n                        - DKK\n                        - DOP\n                        - DZD\n                        - EGP\n                        - ERN\n                        - ETB\n                        - EUR\n                        - FJD\n                        - FKP\n                        - GBP\n                        - GEL\n                        - GGP\n                        - GHS\n                        - GIP\n                        - GMD\n                        - GNF\n                        - GTQ\n                        - GYD\n                        - HKD\n                        - HNL\n                        - HRK\n                        - HTG\n                        - HUF\n                        - IDR\n                        - ILS\n                        - IMP\n                        - INR\n                        - IQD\n                        - IRR\n                        - ISK\n                        - JEP\n                        - JMD\n                        - JOD\n                        - JPY\n                        - KES\n                        - KGS\n                        - KHR\n                        - KMF\n                        - KPW\n                        - KRW\n                        - KWD\n                        - KYD\n                        - KZT\n                        - LAK\n                        - LBP\n                        - LKR\n                        - LRD\n                        - LSL\n                        - LYD\n                        - MAD\n                        - MDL\n                        - MGA\n                        - MKD\n                        - MMK\n                        - MNT\n                        - MOP\n                        - MRO\n                        - MUR\n                        - MVR\n                        - MWK\n                        - MXN\n                        - MYR\n                        - MZN\n                        - NAD\n                        - NGN\n                        - NIO\n                        - NOK\n                        - NPR\n                        - NZD\n                        - OMR\n                        - PAB\n                        - PEN\n                        - PGK\n                        - PHP\n                        - PKR\n                        - PLN\n                        - PYG\n                        - QAR\n                        - RON\n                        - RSD\n                        - RUB\n                        - RWF\n                        - SAR\n                        - SBD\n                        - SCR\n                        - SDG\n                        - SEK\n                        - SGD\n                        - SHP\n                        - SLL\n                        - SOS\n                        - SPL\n                        - SRD\n                        - STD\n                        - SVC\n                        - SYP\n                        - SZL\n                        - THB\n                        - TJS\n                        - TMT\n                        - TND\n                        - TOP\n                        - TRY\n                        - TTD\n                        - TVD\n                        - TWD\n                        - TZS\n                        - UAH\n                        - UGX\n                        - USD\n                        - UYU\n                        - UZS\n                        - VEF\n                        - VND\n                        - VUV\n                        - WST\n                        - XAF\n                        - XCD\n                        - XDR\n                        - XOF\n                        - XPF\n                        - XTS\n                        - XXX\n                        - YER\n                        - ZAR\n                        - ZMW\n                        - ZWD\n                  required: \u0026ref_63\n                    - partyList\n                - title: PartiesTypeIDPutResponse\n                  type: object\n                  description: \u003e\n                    The object sent in the PUT /parties/{Type}/{ID} callback.\n\n\n                    This is a variant based on FSPIOP `PartiesTypeIDPutResponse`\n                    specification.\n\n                    Main difference being that it returns a `Party` with the\n                    newly added\n\n                    `accounts` property.\n                  properties: \u0026ref_82\n                    party:\n                      title: Party\n                      type: object\n                      description: Data model for the complex type Party.\n                      properties: \u0026ref_9\n                        partyIdInfo:\n                          title: PartyIdInfo\n                          type: object\n                          description: Data model for the complex type PartyIdInfo.\n                          properties: *ref_2\n                          required: *ref_3\n                        merchantClassificationCode:\n                          title: MerchantClassificationCode\n                          type: string\n                          pattern: ^[\\d]{1,4}$\n                          description: \u003e-\n                            A limited set of pre-defined numbers. This list\n                            would be a limited set of numbers identifying a set\n                            of popular merchant types like School Fees, Pubs and\n                            Restaurants, Groceries, etc.\n                        name:\n                          title: PartyName\n                          type: string\n                          minLength: 1\n                          maxLength: 128\n                          description: \u003e-\n                            Name of the Party. Could be a real name or a\n                            nickname.\n                        personalInfo:\n                          title: PartyPersonalInfo\n                          type: object\n                          description: Data model for the complex type PartyPersonalInfo.\n                          properties: \u0026ref_81\n                            complexName:\n                              title: PartyComplexName\n                              type: object\n                              description: \u003e-\n                                Data model for the complex type\n                                PartyComplexName.\n                              properties: \u0026ref_80\n                                firstName:\n                                  title: FirstName\n                                  type: string\n                                  minLength: 1\n                                  maxLength: 128\n                                  pattern: \u003e-\n                                    ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n                                    .,''-]{1,128}$\n                                  description: First name of the Party (Name Type).\n                                  example: Henrik\n                                middleName:\n                                  title: MiddleName\n                                  type: string\n                                  minLength: 1\n                                  maxLength: 128\n                                  pattern: \u003e-\n                                    ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n                                    .,''-]{1,128}$\n                                  description: Middle name of the Party (Name Type).\n                                  example: Johannes\n                                lastName:\n                                  title: LastName\n                                  type: string\n                                  minLength: 1\n                                  maxLength: 128\n                                  pattern: \u003e-\n                                    ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n                                    .,''-]{1,128}$\n                                  description: Last name of the Party (Name Type).\n                                  example: Karlsson\n                            dateOfBirth:\n                              title: DateofBirth (type Date)\n                              type: string\n                              pattern: \u003e-\n                                ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\n                              description: Date of Birth of the Party.\n                              example: '1966-06-16'\n                      required: \u0026ref_10\n                        - partyIdInfo\n                  required: \u0026ref_83\n                    - party\n                - title: QuotesIDPutResponse\n                  type: object\n                  description: The object sent in the PUT /quotes/{ID} callback.\n                  properties: \u0026ref_84\n                    transferAmount:\n                      title: Money\n                      type: object\n                      description: Data model for the complex type Money.\n                      properties: \u0026ref_5\n                        currency:\n                          title: Currency\n                          description: \u003e-\n                            The currency codes defined in [ISO\n                            4217](https://www.iso.org/iso-4217-currency-codes.html)\n                            as three-letter alphabetic codes are used as the\n                            standard naming representation for currencies.\n                          type: string\n                          minLength: 3\n                          maxLength: 3\n                          enum: *ref_4\n                        amount:\n                          title: Amount\n                          type: string\n                          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n                          description: \u003e-\n                            The API data type Amount is a JSON String in a\n                            canonical format that is restricted by a regular\n                            expression for interoperability reasons. This\n                            pattern does not allow any trailing zeroes at all,\n                            but allows an amount without a minor currency unit.\n                            It also only allows four digits in the minor\n                            currency unit; a negative value is not allowed.\n                            Using more than 18 digits in the major currency unit\n                            is not allowed.\n                          example: '123.45'\n                      required: \u0026ref_6\n                        - currency\n                        - amount\n                    payeeReceiveAmount:\n                      title: Money\n                      type: object\n                      description: Data model for the complex type Money.\n                      properties: *ref_5\n                      required: *ref_6\n                    payeeFspFee:\n                      title: Money\n                      type: object\n                      description: Data model for the complex type Money.\n                      properties: *ref_5\n                      required: *ref_6\n                    payeeFspCommission:\n                      title: Money\n                      type: object\n                      description: Data model for the complex type Money.\n                      properties: *ref_5\n                      required: *ref_6\n                    expiration:\n                      title: DateTime\n                      type: string\n                      pattern: \u003e-\n                        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                      description: \u003e-\n                        The API data type DateTime is a JSON String in a lexical\n                        format that is restricted by a regular expression for\n                        interoperability reasons. The format is according to\n                        [ISO\n                        8601](https://www.iso.org/iso-8601-date-and-time-format.html),\n                        expressed in a combined date, time and time zone format.\n                        A more readable version of the format is\n                        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n                        \"2016-05-24T08:38:08.699-04:00\",\n                        \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time\n                        zone, same as UTC).\n                      example: '2016-05-24T08:38:08.699-04:00'\n                    geoCode:\n                      title: GeoCode\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type GeoCode. Indicates the\n                        geographic location from where the transaction was\n                        initiated.\n                      properties: \u0026ref_11\n                        latitude:\n                          title: Latitude\n                          type: string\n                          pattern: \u003e-\n                            ^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$\n                          description: \u003e-\n                            The API data type Latitude is a JSON String in a\n                            lexical format that is restricted by a regular\n                            expression for interoperability reasons.\n                          example: '+45.4215'\n                        longitude:\n                          title: Longitude\n                          type: string\n                          pattern: \u003e-\n                            ^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$\n                          description: \u003e-\n                            The API data type Longitude is a JSON String in a\n                            lexical format that is restricted by a regular\n                            expression for interoperability reasons.\n                          example: '+75.6972'\n                      required: \u0026ref_12\n                        - latitude\n                        - longitude\n                    ilpPacket:\n                      title: IlpPacket\n                      type: string\n                      pattern: ^[A-Za-z0-9-_]+[=]{0,2}$\n                      minLength: 1\n                      maxLength: 32768\n                      description: Information for recipient (transport layer information).\n                      example: \u003e-\n                        AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA\n                    condition:\n                      title: IlpCondition\n                      type: string\n                      pattern: ^[A-Za-z0-9-_]{43}$\n                      maxLength: 48\n                      description: \u003e-\n                        Condition that must be attached to the transfer by the\n                        Payer.\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_85\n                    - transferAmount\n                    - expiration\n                    - ilpPacket\n                    - condition\n                - title: ThirdpartyRequestsTransactionsIDPatchResponse\n                  type: object\n                  description: \u003e-\n                    Used by: DFSP\n\n                    The issuing PISP will expect a response to their request for\n                    a transfer which describes the finalized state of the\n                    requested transfer.\n\n                    This response will be given by a PATCH call on the\n                    /thirdpartyRequests/transactions/{ID} resource.\n\n                    The {ID} given in the query string should be the\n                    transactionRequestId which was originally used by the PISP\n                    to identify the transaction request.\n\n                    https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31612-post-thirdpartyrequestsauthorizations\n                  properties: \u0026ref_70\n                    completedTimestamp:\n                      title: DateTime\n                      type: string\n                      pattern: \u003e-\n                        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                      description: \u003e-\n                        The API data type DateTime is a JSON String in a lexical\n                        format that is restricted by a regular expression for\n                        interoperability reasons. The format is according to\n                        [ISO\n                        8601](https://www.iso.org/iso-8601-date-and-time-format.html),\n                        expressed in a combined date, time and time zone format.\n                        A more readable version of the format is\n                        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n                        \"2016-05-24T08:38:08.699-04:00\",\n                        \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time\n                        zone, same as UTC).\n                      example: '2016-05-24T08:38:08.699-04:00'\n                    transactionRequestState:\n                      title: TransactionRequestState\n                      type: string\n                      enum: \u0026ref_69\n                        - RECEIVED\n                        - PENDING\n                        - ACCEPTED\n                        - REJECTED\n                      description: \u003e-\n                        Below are the allowed values for the enumeration.\n\n                        - RECEIVED - Payer FSP has received the transaction from\n                        the Payee FSP.\n\n                        - PENDING - Payer FSP has sent the transaction request\n                        to the Payer.\n\n                        - ACCEPTED - Payer has approved the transaction.\n\n                        - REJECTED - Payer has rejected the transaction.\n                      example: RECEIVED\n                    transactionState:\n                      title: TransactionState\n                      type: string\n                      enum: \u0026ref_86\n                        - RECEIVED\n                        - PENDING\n                        - COMPLETED\n                        - REJECTED\n                      description: \u003e-\n                        Below are the allowed values for the enumeration.\n\n                        - RECEIVED - Payee FSP has received the transaction from\n                        the Payer FSP.\n\n                        - PENDING - Payee FSP has validated the transaction.\n\n                        - COMPLETED - Payee FSP has successfully performed the\n                        transaction.\n\n                        - REJECTED - Payee FSP has failed to perform the\n                        transaction.\n                      example: RECEIVED\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_71\n                    - transactionRequestState\n                    - transactionState\n                - title: AuthorizationResponseType\n                  description: \u003e\n                    Enum containing authorization response information; if the\n                    customer \n\n                    accepted the terms of the transfer, or rejected the terms.\n                  type: string\n                  enum: \u0026ref_87\n                    - ACCEPTED\n                    - REJECTED\n                - title: ConsentStatusIssued\n                  type: string\n                  enum: \u0026ref_51\n                    - ISSUED\n                  description: |-\n                    Allowed values for the enumeration ConsentStatus\n                    - ISSUED - The consent has been issued by the DFSP\n                - title: IlpFulfilment\n                  type: string\n                  pattern: ^[A-Za-z0-9-_]{43}$\n                  maxLength: 48\n                  description: \u003e-\n                    Fulfilment that must be attached to the transfer by the\n                    Payee.\n                  example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8\n                - title: Integer\n                  type: string\n                  pattern: ^[1-9]\\d*$\n                  description: \u003e-\n                    The API data type Integer is a JSON String consisting of\n                    digits only. Negative numbers and leading zeroes are not\n                    allowed. The data type is always limited to a specific\n                    number of digits.\n                - title: Note\n                  type: string\n                  minLength: 1\n                  maxLength: 128\n                  description: Memo assigned to transaction.\n                  example: Note sent to Payee.\n                - title: PartyIdInfo\n                  type: object\n                  description: Data model for the complex type PartyIdInfo.\n                  properties: \u0026ref_89\n                    partyIdType:\n                      title: PartyIdTypeTPLink\n                      type: string\n                      enum: \u0026ref_88\n                        - THIRD_PARTY_LINK\n                      description: \u003e\n                        - THIRD_PARTY_LINK - is the DFSP's internal reference\n                        which allows DFSP to find out the corresponding consent\n                      example: PERSONAL_ID\n                    partyIdentifier:\n                      title: PartyIdentifier\n                      type: string\n                      minLength: 1\n                      maxLength: 128\n                      description: Identifier of the Party.\n                      example: '16135551212'\n                    partySubIdOrType:\n                      title: PartySubIdOrType\n                      type: string\n                      minLength: 1\n                      maxLength: 128\n                      description: \u003e-\n                        Either a sub-identifier of a PartyIdentifier, or a\n                        sub-type of the PartyIdType, normally a\n                        PersonalIdentifierType.\n                    fspId:\n                      title: FspId\n                      type: string\n                      minLength: 1\n                      maxLength: 32\n                      description: FSP identifier.\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_90\n                    - partyIdType\n                    - partyIdentifier\n                - title: PartyResult\n                  type: object\n                  description: Data model for the complex type PartyResult.\n                  properties: *ref_7\n                  required: *ref_8\n                - title: ServiceType\n                  type: string\n                  description: \u003e-\n                    The ServiceType enumeration describes the types of role for\n                    which a DFSP may query using the /services resource.\n\n                    Below are the allowed values for the enumeration ServiceType\n                    - THIRD_PARTY_DFSP - Enum used to query for DFSPs that have\n                    thirdparty features enabled. - PISP - Enum used to query for\n                    PISPs. - AUTH_SERVICE - Participants which provide\n                    Authentication Services.\n\n                    https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3229-servicetype\n                  enum: \u0026ref_91\n                    - THIRD_PARTY_DFSP\n                    - PISP\n                    - AUTH_SERVICE\n                - title: ParticipantsPostRequest\n                  type: object\n                  description: The object sent in the POST /participants request.\n                  properties: \u0026ref_60\n                    requestId:\n                      title: CorrelationId\n                      type: string\n                      pattern: \u003e-\n                        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                      description: \u003e-\n                        Identifier that correlates all messages of the same\n                        sequence. The API data type UUID (Universally Unique\n                        Identifier) is a JSON String in canonical format,\n                        conforming to [RFC\n                        4122](https://tools.ietf.org/html/rfc4122), that is\n                        restricted by a regular expression for interoperability\n                        reasons. A UUID is always 36 characters long, 32\n                        hexadecimal symbols and 4 dashes (‘-‘).\n                      example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                    partyList:\n                      type: array\n                      items:\n                        title: PartyIdInfo\n                        type: object\n                        description: Data model for the complex type PartyIdInfo.\n                        properties: *ref_2\n                        required: *ref_3\n                      minItems: 1\n                      maxItems: 10000\n                      description: \u003e\n                        List of PartyIdInfo elements that the client would like\n                        to update\n\n                        or create FSP information about.\n                    currency:\n                      title: Currency\n                      description: \u003e-\n                        The currency codes defined in [ISO\n                        4217](https://www.iso.org/iso-4217-currency-codes.html)\n                        as three-letter alphabetic codes are used as the\n                        standard naming representation for currencies.\n                      type: string\n                      minLength: 3\n                      maxLength: 3\n                      enum: *ref_4\n                  required: \u0026ref_61\n                    - requestId\n                    - partyList\n                - title: QuotesPostRequest\n                  type: object\n                  description: The object sent in the POST /quotes request.\n                  properties: \u0026ref_97\n                    quoteId:\n                      description: \u003e-\n                        Identifier that correlates all messages of the same\n                        sequence. The API data type UUID (Universally Unique\n                        Identifier) is a JSON String in canonical format,\n                        conforming to [RFC\n                        4122](https://tools.ietf.org/html/rfc4122), that is\n                        restricted by a regular expression for interoperability\n                        reasons. A UUID is always 36 characters long, 32\n                        hexadecimal symbols and 4 dashes (‘-‘).\n                      example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      title: CorrelationId\n                      type: string\n                      pattern: \u003e-\n                        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                    transactionId:\n                      description: \u003e-\n                        Identifier that correlates all messages of the same\n                        sequence. The API data type UUID (Universally Unique\n                        Identifier) is a JSON String in canonical format,\n                        conforming to [RFC\n                        4122](https://tools.ietf.org/html/rfc4122), that is\n                        restricted by a regular expression for interoperability\n                        reasons. A UUID is always 36 characters long, 32\n                        hexadecimal symbols and 4 dashes (‘-‘).\n                      example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      title: CorrelationId\n                      type: string\n                      pattern: \u003e-\n                        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                    transactionRequestId:\n                      description: \u003e-\n                        Identifier that correlates all messages of the same\n                        sequence. The API data type UUID (Universally Unique\n                        Identifier) is a JSON String in canonical format,\n                        conforming to [RFC\n                        4122](https://tools.ietf.org/html/rfc4122), that is\n                        restricted by a regular expression for interoperability\n                        reasons. A UUID is always 36 characters long, 32\n                        hexadecimal symbols and 4 dashes (‘-‘).\n                      example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      title: CorrelationId\n                      type: string\n                      pattern: \u003e-\n                        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                    payee:\n                      description: Data model for the complex type Party.\n                      title: Party\n                      type: object\n                      properties: *ref_9\n                      required: *ref_10\n                    payer:\n                      description: Data model for the complex type Party.\n                      title: Party\n                      type: object\n                      properties: *ref_9\n                      required: *ref_10\n                    amountType:\n                      description: \u003e-\n                        Below are the allowed values for the enumeration\n                        AmountType.\n\n                        - SEND - Amount the Payer would like to send, that is,\n                        the amount that should be withdrawn from the Payer\n                        account including any fees.\n\n                        - RECEIVE - Amount the Payer would like the Payee to\n                        receive, that is, the amount that should be sent to the\n                        receiver exclusive of any fees.\n                      example: RECEIVE\n                      title: AmountType\n                      type: string\n                      enum: \u0026ref_66\n                        - SEND\n                        - RECEIVE\n                    amount:\n                      description: Data model for the complex type Money.\n                      title: Money\n                      type: object\n                      properties: *ref_5\n                      required: *ref_6\n                    fees:\n                      description: Data model for the complex type Money.\n                      title: Money\n                      type: object\n                      properties: *ref_5\n                      required: *ref_6\n                    transactionType:\n                      description: Data model for the complex type TransactionType.\n                      title: TransactionType\n                      type: object\n                      properties: \u0026ref_67\n                        scenario:\n                          title: TransactionScenario\n                          type: string\n                          enum: \u0026ref_92\n                            - DEPOSIT\n                            - WITHDRAWAL\n                            - TRANSFER\n                            - PAYMENT\n                            - REFUND\n                          description: \u003e-\n                            Below are the allowed values for the enumeration.\n\n                            - DEPOSIT - Used for performing a Cash-In (deposit)\n                            transaction. In a normal scenario, electronic funds\n                            are transferred from a Business account to a\n                            Consumer account, and physical cash is given from\n                            the Consumer to the Business User.\n\n                            - WITHDRAWAL - Used for performing a Cash-Out\n                            (withdrawal) transaction. In a normal scenario,\n                            electronic funds are transferred from a Consumer’s\n                            account to a Business account, and physical cash is\n                            given from the Business User to the Consumer.\n\n                            - TRANSFER - Used for performing a P2P (Peer to\n                            Peer, or Consumer to Consumer) transaction.\n\n                            - PAYMENT - Usually used for performing a\n                            transaction from a Consumer to a Merchant or\n                            Organization, but could also be for a B2B (Business\n                            to Business) payment. The transaction could be\n                            online for a purchase in an Internet store, in a\n                            physical store where both the Consumer and Business\n                            User are present, a bill payment, a donation, and so\n                            on.\n\n                            - REFUND - Used for performing a refund of\n                            transaction.\n                          example: DEPOSIT\n                        subScenario:\n                          title: TransactionSubScenario\n                          type: string\n                          pattern: ^[A-Z_]{1,32}$\n                          description: \u003e-\n                            Possible sub-scenario, defined locally within the\n                            scheme (UndefinedEnum Type).\n                          example: LOCALLY_DEFINED_SUBSCENARIO\n                        initiator:\n                          title: TransactionInitiator\n                          type: string\n                          enum: \u0026ref_93\n                            - PAYER\n                            - PAYEE\n                          description: \u003e-\n                            Below are the allowed values for the enumeration.\n\n                            - PAYER - Sender of funds is initiating the\n                            transaction. The account to send from is either\n                            owned by the Payer or is connected to the Payer in\n                            some way.\n\n                            - PAYEE - Recipient of the funds is initiating the\n                            transaction by sending a transaction request. The\n                            Payer must approve the transaction, either\n                            automatically by a pre-generated OTP or by\n                            pre-approval of the Payee, or by manually approving\n                            in his or her own Device.\n                          example: PAYEE\n                        initiatorType:\n                          title: TransactionInitiatorType\n                          type: string\n                          enum: \u0026ref_94\n                            - CONSUMER\n                            - AGENT\n                            - BUSINESS\n                            - DEVICE\n                          description: \u003e-\n                            Below are the allowed values for the enumeration.\n\n                            - CONSUMER - Consumer is the initiator of the\n                            transaction.\n\n                            - AGENT - Agent is the initiator of the transaction.\n\n                            - BUSINESS - Business is the initiator of the\n                            transaction.\n\n                            - DEVICE - Device is the initiator of the\n                            transaction.\n                          example: CONSUMER\n                        refundInfo:\n                          title: Refund\n                          type: object\n                          description: Data model for the complex type Refund.\n                          properties: \u0026ref_95\n                            originalTransactionId:\n                              title: CorrelationId\n                              type: string\n                              pattern: \u003e-\n                                ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                              description: \u003e-\n                                Identifier that correlates all messages of the\n                                same sequence. The API data type UUID\n                                (Universally Unique Identifier) is a JSON String\n                                in canonical format, conforming to [RFC\n                                4122](https://tools.ietf.org/html/rfc4122), that\n                                is restricted by a regular expression for\n                                interoperability reasons. A UUID is always 36\n                                characters long, 32 hexadecimal symbols and 4\n                                dashes (‘-‘).\n                              example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                            refundReason:\n                              title: RefundReason\n                              type: string\n                              minLength: 1\n                              maxLength: 128\n                              description: Reason for the refund.\n                              example: Free text indicating reason for the refund.\n                          required: \u0026ref_96\n                            - originalTransactionId\n                        balanceOfPayments:\n                          title: BalanceOfPayments\n                          type: string\n                          pattern: ^[1-9]\\d{2}$\n                          description: \u003e-\n                            (BopCode) The API data type\n                            [BopCode](https://www.imf.org/external/np/sta/bopcode/)\n                            is a JSON String of 3 characters, consisting of\n                            digits only. Negative numbers are not allowed. A\n                            leading zero is not allowed.\n                          example: '123'\n                      required: \u0026ref_68\n                        - scenario\n                        - initiator\n                        - initiatorType\n                    geoCode:\n                      description: \u003e-\n                        Data model for the complex type GeoCode. Indicates the\n                        geographic location from where the transaction was\n                        initiated.\n                      title: GeoCode\n                      type: object\n                      properties: *ref_11\n                      required: *ref_12\n                    note:\n                      description: Memo assigned to transaction.\n                      example: Note sent to Payee.\n                      title: Note\n                      type: string\n                      minLength: 1\n                      maxLength: 128\n                    expiration:\n                      description: \u003e-\n                        The API data type DateTime is a JSON String in a lexical\n                        format that is restricted by a regular expression for\n                        interoperability reasons. The format is according to\n                        [ISO\n                        8601](https://www.iso.org/iso-8601-date-and-time-format.html),\n                        expressed in a combined date, time and time zone format.\n                        A more readable version of the format is\n                        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n                        \"2016-05-24T08:38:08.699-04:00\",\n                        \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time\n                        zone, same as UTC).\n                      example: '2016-05-24T08:38:08.699-04:00'\n                      title: DateTime\n                      type: string\n                      pattern: \u003e-\n                        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                    extensionList:\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      title: ExtensionList\n                      type: object\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_98\n                    - quoteId\n                    - transactionId\n                    - payee\n                    - payer\n                    - amountType\n                    - amount\n                    - transactionType\n      responses:\n        '200':\n          description: Ok\n  /accounts/{ID}:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: \u0026ref_34\n          type: string\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: \u0026ref_35\n          type: string\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: \u0026ref_36\n          type: string\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: \u0026ref_37\n          type: string\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: \u0026ref_38\n          type: string\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: \u0026ref_39\n          type: string\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: \u0026ref_40\n          type: string\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: \u0026ref_41\n          type: string\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: \u0026ref_42\n          type: string\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: \u0026ref_43\n          type: string\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    get:\n      operationId: GetAccountsByUserId\n      summary: GetAccountsByUserId\n      description: \u003e\n        The HTTP request `GET /accounts/{ID}` is used to retrieve the list of\n        potential accounts available for linking.\n      tags:\n        - accounts\n        - sampled\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: \u0026ref_45\n            type: string\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: \u0026ref_18\n            application/json:\n              schema:\n                title: ErrorInformationResponse\n                type: object\n                description: \u003e-\n                  Data model for the complex type object that contains an\n                  optional element ErrorInformation used along with 4xx and 5xx\n                  responses.\n                properties: \u0026ref_15\n                  errorInformation:\n                    title: ErrorInformation\n                    type: object\n                    description: Data model for the complex type ErrorInformation.\n                    properties: *ref_13\n                    required: *ref_14\n          headers: \u0026ref_19\n            Content-Length:\n              required: false\n              schema: \u0026ref_16\n                type: integer\n              description: \u003e-\n                The `Content-Length` header field indicates the anticipated size\n                of the payload body. Only sent if there is a body.\n\n\n                **Note:** The API supports a maximum size of 5242880 bytes (5\n                Megabytes).\n            Content-Type:\n              schema: \u0026ref_17\n                type: string\n              required: true\n              description: \u003e-\n                The `Content-Type` header indicates the specific version of the\n                API used to send the payload body.\n        '401':\n          description: Unauthorized\n          content: \u0026ref_20\n            application/json:\n              schema:\n                title: ErrorInformationResponse\n                type: object\n                description: \u003e-\n                  Data model for the complex type object that contains an\n                  optional element ErrorInformation used along with 4xx and 5xx\n                  responses.\n                properties: *ref_15\n          headers: \u0026ref_21\n            Content-Length:\n              required: false\n              schema: *ref_16\n              description: \u003e-\n                The `Content-Length` header field indicates the anticipated size\n                of the payload body. Only sent if there is a body.\n\n\n                **Note:** The API supports a maximum size of 5242880 bytes (5\n                Megabytes).\n            Content-Type:\n              schema: *ref_17\n              required: true\n              description: \u003e-\n                The `Content-Type` header indicates the specific version of the\n                API used to send the payload body.\n        '403':\n          description: Forbidden\n          content: \u0026ref_22\n            application/json:\n              schema:\n                title: ErrorInformationResponse\n                type: object\n                description: \u003e-\n                  Data model for the complex type object that contains an\n                  optional element ErrorInformation used along with 4xx and 5xx\n                  responses.\n                properties: *ref_15\n          headers: \u0026ref_23\n            Content-Length:\n              required: false\n              schema: *ref_16\n              description: \u003e-\n                The `Content-Length` header field indicates the anticipated size\n                of the payload body. Only sent if there is a body.\n\n\n                **Note:** The API supports a maximum size of 5242880 bytes (5\n                Megabytes).\n            Content-Type:\n              schema: *ref_17\n              required: true\n              description: \u003e-\n                The `Content-Type` header indicates the specific version of the\n                API used to send the payload body.\n        '404':\n          description: Not Found\n          content: \u0026ref_24\n            application/json:\n              schema:\n                title: ErrorInformationResponse\n                type: object\n                description: \u003e-\n                  Data model for the complex type object that contains an\n                  optional element ErrorInformation used along with 4xx and 5xx\n                  responses.\n                properties: *ref_15\n          headers: \u0026ref_25\n            Content-Length:\n              required: false\n              schema: *ref_16\n              description: \u003e-\n                The `Content-Length` header field indicates the anticipated size\n                of the payload body. Only sent if there is a body.\n\n\n                **Note:** The API supports a maximum size of 5242880 bytes (5\n                Megabytes).\n            Content-Type:\n              schema: *ref_17\n              required: true\n              description: \u003e-\n                The `Content-Type` header indicates the specific version of the\n                API used to send the payload body.\n        '405':\n          description: Method Not Allowed\n          content: \u0026ref_26\n            application/json:\n              schema:\n                title: ErrorInformationResponse\n                type: object\n                description: \u003e-\n                  Data model for the complex type object that contains an\n                  optional element ErrorInformation used along with 4xx and 5xx\n                  responses.\n                properties: *ref_15\n          headers: \u0026ref_27\n            Content-Length:\n              required: false\n              schema: *ref_16\n              description: \u003e-\n                The `Content-Length` header field indicates the anticipated size\n                of the payload body. Only sent if there is a body.\n\n\n                **Note:** The API supports a maximum size of 5242880 bytes (5\n                Megabytes).\n            Content-Type:\n              schema: *ref_17\n              required: true\n              description: \u003e-\n                The `Content-Type` header indicates the specific version of the\n                API used to send the payload body.\n        '406':\n          description: Not Acceptable\n          content: \u0026ref_28\n            application/json:\n              schema:\n                title: ErrorInformationResponse\n                type: object\n                description: \u003e-\n                  Data model for the complex type object that contains an\n                  optional element ErrorInformation used along with 4xx and 5xx\n                  responses.\n                properties: *ref_15\n          headers: \u0026ref_29\n            Content-Length:\n              required: false\n              schema: *ref_16\n              description: \u003e-\n                The `Content-Length` header field indicates the anticipated size\n                of the payload body. Only sent if there is a body.\n\n\n                **Note:** The API supports a maximum size of 5242880 bytes (5\n                Megabytes).\n            Content-Type:\n              schema: *ref_17\n              required: true\n              description: \u003e-\n                The `Content-Type` header indicates the specific version of the\n                API used to send the payload body.\n        '501':\n          description: Not Implemented\n          content: \u0026ref_30\n            application/json:\n              schema:\n                title: ErrorInformationResponse\n                type: object\n                description: \u003e-\n                  Data model for the complex type object that contains an\n                  optional element ErrorInformation used along with 4xx and 5xx\n                  responses.\n                properties: *ref_15\n          headers: \u0026ref_31\n            Content-Length:\n              required: false\n              schema: *ref_16\n              description: \u003e-\n                The `Content-Length` header field indicates the anticipated size\n                of the payload body. Only sent if there is a body.\n\n\n                **Note:** The API supports a maximum size of 5242880 bytes (5\n                Megabytes).\n            Content-Type:\n              schema: *ref_17\n              required: true\n              description: \u003e-\n                The `Content-Type` header indicates the specific version of the\n                API used to send the payload body.\n        '503':\n          description: Service Unavailable\n          content: \u0026ref_32\n            application/json:\n              schema:\n                title: ErrorInformationResponse\n                type: object\n                description: \u003e-\n                  Data model for the complex type object that contains an\n                  optional element ErrorInformation used along with 4xx and 5xx\n                  responses.\n                properties: *ref_15\n          headers: \u0026ref_33\n            Content-Length:\n              required: false\n              schema: *ref_16\n              description: \u003e-\n                The `Content-Length` header field indicates the anticipated size\n                of the payload body. Only sent if there is a body.\n\n\n                **Note:** The API supports a maximum size of 5242880 bytes (5\n                Megabytes).\n            Content-Type:\n              schema: *ref_17\n              required: true\n              description: \u003e-\n                The `Content-Type` header indicates the specific version of the\n                API used to send the payload body.\n    put:\n      description: \u003e\n        The HTTP request `PUT /accounts/{ID}` is used to return the list of\n        potential accounts available for linking\n      operationId: UpdateAccountsByUserId\n      summary: UpdateAccountsByUserId\n      tags:\n        - accounts\n        - sampled\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: \u0026ref_44\n            type: integer\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: AccountsIDPutResponse\n              type: object\n              description: \u003e-\n                Callback and data model information for GET /accounts/{ID}:\n\n                Callback - PUT /accounts/{ID} Error Callback - PUT\n                /accounts/{ID}/error Data Model - Empty body\n\n                The PUT /accounts/{ID} response is used to inform the requester\n                of the result of a request for accounts information. The\n                identifier ID given in the call are the values given in the\n                original request.\n\n                https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31121--put-accountsid\n              properties: \u0026ref_102\n                accounts:\n                  title: AccountList\n                  type: array\n                  description: \u003e-\n                    The AccountList data model is used to hold information about\n                    the accounts that a party controls.\n\n                    https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3213-accountlist\n                  items: \u0026ref_101\n                    title: Account\n                    type: object\n                    description: \u003e-\n                      Data model for the complex type Account.\n\n                      https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3211-account\n                    properties: \u0026ref_99\n                      accountNickname:\n                        title: Name\n                        type: string\n                        pattern: ^(?!\\s*$)[\\w .,'-]{1,128}$\n                        description: \u003e-\n                          The API data type Name is a JSON String, restricted by\n                          a regular expression to avoid characters which are\n                          generally not used in a name.\n\n\n                          Regular Expression - The regular expression for\n                          restricting the Name type is \"^(?!\\s*$)[\\w\n                          .,'-]{1,128}$\". The restriction does not allow a\n                          string consisting of whitespace only, all Unicode\n                          characters are allowed, as well as the period (.)\n                          (apostrophe (‘), dash (-), comma (,) and space\n                          characters ( ).\n\n\n                          **Note:** In some programming languages, Unicode\n                          support must be specifically enabled. For example, if\n                          Java is used, the flag UNICODE_CHARACTER_CLASS must be\n                          enabled to allow Unicode characters.\n                      address:\n                        title: AccountAddress\n                        type: string\n                        description: \u003e-\n                          The AccountAddress data type is a variable length\n                          string with a maximum size of 1023 characters and\n                          consists of:\n\n                          Alphanumeric characters, upper or lower case.\n                          (Addresses are case-sensitive so that they can contain\n                          data encoded in formats such as base64url.)\n\n                          - Underscore (_) - Tilde (~) - Hyphen (-) - Period (.)\n                          Addresses MUST NOT end in a period (.) character\n\n                          An entity providing accounts to parties (i.e. a\n                          participant) can provide any value for an\n                          AccountAddress that is meaningful to that entity. It\n                          does not need to provide an address that makes the\n                          account identifiable outside the entity's domain.\n\n                          IMPORTANT: The policy for defining addresses and the\n                          life-cycle of these is at the discretion of the\n                          address space owner (the payer DFSP in this case).\n\n                          https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3212-accountaddress\n                        pattern: ^([0-9A-Za-z_~\\-\\.]+[0-9A-Za-z_~\\-])$\n                        minLength: 1\n                        maxLength: 1023\n                      currency:\n                        title: Currency\n                        description: \u003e-\n                          The currency codes defined in [ISO\n                          4217](https://www.iso.org/iso-4217-currency-codes.html)\n                          as three-letter alphabetic codes are used as the\n                          standard naming representation for currencies.\n                        type: string\n                        minLength: 3\n                        maxLength: 3\n                        enum: *ref_4\n                    required: \u0026ref_100\n                      - accountNickname\n                      - address\n                      - currency\n                  minItems: 1\n                  maxItems: 256\n                extensionList:\n                  title: ExtensionList\n                  type: object\n                  description: \u003e-\n                    Data model for the complex type ExtensionList. An optional\n                    list of extensions, specific to deployment.\n                  properties: *ref_0\n                  required: *ref_1\n              required: \u0026ref_103\n                - accounts\n            example:\n              - accountNickname: dfspa.user.nickname1\n                id: dfspa.username.1234\n                currency: ZAR\n              - accountNickname: dfspa.user.nickname2\n                id: dfspa.username.5678\n                currency: USD\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /accounts/{ID}/error:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    put:\n      description: \u003e\n        The HTTP request `PUT /accounts/{ID}/error` is used to return error\n        information\n      operationId: UpdateAccountsByUserIdError\n      summary: UpdateAccountsByUserIdError\n      tags:\n        - accounts\n        - sampled\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Details of the error returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ErrorInformationObject\n              type: object\n              description: \u003e-\n                Data model for the complex type object that contains\n                ErrorInformation.\n              properties: \u0026ref_48\n                errorInformation:\n                  title: ErrorInformation\n                  type: object\n                  description: Data model for the complex type ErrorInformation.\n                  properties: *ref_13\n                  required: *ref_14\n              required: \u0026ref_49\n                - errorInformation\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /health:\n    get:\n      tags:\n        - health\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n      operationId: HealthGet\n      summary: Health check endpoint\n      description: \u003e-\n        The HTTP request GET /health is used to return the current status of the\n        API.\n  /metrics:\n    get:\n      tags:\n        - health\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n      operationId: MetricsGet\n      summary: Prometheus metrics endpoint\n      description: The HTTP request GET /metrics is used to return metrics for the API.\n  /consentRequests:\n    parameters:\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    post:\n      tags:\n        - consentRequests\n        - sampled\n      operationId: CreateConsentRequest\n      summary: CreateConsentRequest\n      description: \u003e\n        The HTTP request **POST /consentRequests** is used to request a DFSP to\n        grant access to one or more\n\n        accounts owned by a customer of the DFSP for the PISP who sends the\n        request.\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: The consentRequest to create\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ConsentRequestsPostRequest\n              type: object\n              description: \u003e-\n                Used by: PISP\n\n                The HTTP request POST /consentRequests is used to request a DFSP\n                to grant access to one or more accounts owned by a customer of\n                the DFSP for the PISP who sends the request.\n\n                Callback and data model for POST /consentRequests:\n\n                Callback: PUT /consentRequests/{ID} Error callback: PUT\n                /consentRequests/{ID}/error Data model - see below url\n\n                https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31212-post-consentrequests\n              properties: \u0026ref_106\n                consentRequestId:\n                  title: CorrelationId\n                  type: string\n                  pattern: \u003e-\n                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                  description: \u003e-\n                    Identifier that correlates all messages of the same\n                    sequence. The API data type UUID (Universally Unique\n                    Identifier) is a JSON String in canonical format, conforming\n                    to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is\n                    restricted by a regular expression for interoperability\n                    reasons. A UUID is always 36 characters long, 32 hexadecimal\n                    symbols and 4 dashes (‘-‘).\n                  example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                userId:\n                  type: string\n                  description: \u003e-\n                    The identifier used in the **GET /accounts/**_{ID}_. Used by\n                    the DFSP to correlate an account lookup to a\n                    `consentRequest`\n                  minLength: 1\n                  maxLength: 128\n                scopes:\n                  type: array\n                  minLength: 1\n                  maxLength: 256\n                  items:\n                    title: Scope\n                    type: object\n                    description: \u003e-\n                      The Scope element contains an identifier defining, in the\n                      terms of a DFSP, an account on which access types can be\n                      requested or granted. It also defines the access types\n                      which are requested or granted.\n\n                      https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32121-scope\n                    properties: \u0026ref_46\n                      address:\n                        title: AccountAddress\n                        type: string\n                        description: \u003e-\n                          The AccountAddress data type is a variable length\n                          string with a maximum size of 1023 characters and\n                          consists of:\n\n                          Alphanumeric characters, upper or lower case.\n                          (Addresses are case-sensitive so that they can contain\n                          data encoded in formats such as base64url.)\n\n                          - Underscore (_) - Tilde (~) - Hyphen (-) - Period (.)\n                          Addresses MUST NOT end in a period (.) character\n\n                          An entity providing accounts to parties (i.e. a\n                          participant) can provide any value for an\n                          AccountAddress that is meaningful to that entity. It\n                          does not need to provide an address that makes the\n                          account identifiable outside the entity's domain.\n\n                          IMPORTANT: The policy for defining addresses and the\n                          life-cycle of these is at the discretion of the\n                          address space owner (the payer DFSP in this case).\n\n                          https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3212-accountaddress\n                        pattern: ^([0-9A-Za-z_~\\-\\.]+[0-9A-Za-z_~\\-])$\n                        minLength: 1\n                        maxLength: 1023\n                      actions:\n                        type: array\n                        minItems: 1\n                        maxItems: 32\n                        items:\n                          title: ScopeAction\n                          type: string\n                          description: \u003e\n                            The ScopeAction element contains an access type\n                            which a PISP can request\n\n                            from a DFSP, or which a DFSP can grant to a PISP.\n\n                            It must be a member of the appropriate enumeration.\n\n\n                            - ACCOUNTS_GET_BALANCE: PISP can request a balance\n                            for the linked account\n\n                            - ACCOUNTS_TRANSFER: PISP can request a transfer of\n                            funds from the linked account in the DFSP\n\n                            - ACCOUNTS_STATEMENT: PISP can request a statement\n                            of individual transactions on a user's account\n                          enum: \u0026ref_104\n                            - ACCOUNTS_GET_BALANCE\n                            - ACCOUNTS_TRANSFER\n                            - ACCOUNTS_STATEMENT\n                    required: \u0026ref_47\n                      - address\n                      - actions\n                authChannels:\n                  type: array\n                  minLength: 1\n                  maxLength: 256\n                  items:\n                    title: ConsentRequestChannelType\n                    type: string\n                    enum: \u0026ref_105\n                      - WEB\n                      - OTP\n                    description: \u003e\n                      The auth channel being used for the consent request.\n\n                      - WEB - DFSP can support authorization via a web-based\n                      login.\n\n                      - OTP - DFSP can support authorization via a One Time PIN.\n                callbackUri:\n                  title: Uri\n                  type: string\n                  pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n                  minLength: 1\n                  maxLength: 512\n                  description: \u003e\n                    The API data type Uri is a JSON string in a canonical format\n                    that is restricted by a regular expression for\n                    interoperability reasons.\n                extensionList:\n                  title: ExtensionList\n                  type: object\n                  description: \u003e-\n                    Data model for the complex type ExtensionList. An optional\n                    list of extensions, specific to deployment.\n                  properties: *ref_0\n                  required: *ref_1\n              required: \u0026ref_107\n                - consentRequestId\n                - userId\n                - scopes\n                - authChannels\n                - callbackUri\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /consentRequests/{ID}:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    get:\n      operationId: GetConsentRequestsById\n      summary: GetConsentRequestsById\n      description: \u003e\n        The HTTP request `GET /consentRequests/{ID}` is used to get information\n        about a previously\n\n        requested consent. The *{ID}* in the URI should contain the\n        consentRequestId that was assigned to the\n\n        request by the PISP when the PISP originated the request.\n      tags:\n        - consentRequests\n        - sampled\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    put:\n      tags:\n        - consentRequests\n        - sampled\n      operationId: UpdateConsentRequest\n      summary: UpdateConsentRequest\n      description: \u003e\n        A DFSP uses this callback to (1) inform the PISP that the consentRequest\n        has been accepted,\n\n        and (2) communicate to the PISP which `authChannel` it should use to\n        authenticate their user\n\n        with.\n\n\n        When a PISP requests a series of permissions from a DFSP on behalf of a\n        DFSP’s customer, not all\n\n        the permissions requested may be granted by the DFSP. Conversely, the\n        out-of-band authorization\n\n        process  may result in additional privileges being granted by the\n        account holder to the PISP. The\n\n        **PUT /consentRequests/**_{ID}_ resource returns the current state of\n        the permissions relating to a\n\n        particular authorization request.\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - title: ConsentRequestsIDPutResponseWeb\n                  type: object\n                  description: \u003e\n                    The object sent in a `PUT /consentRequests/{ID}` request.\n\n\n                    Schema used in the request consent phase of the account\n                    linking web flow,\n\n                    the result is the PISP being instructed on a specific URL\n                    where this\n\n                    supposed user should be redirected. This URL should be a\n                    place where\n\n                    the user can prove their identity (e.g., by logging in).\n                  properties: \u0026ref_109\n                    scopes:\n                      type: array\n                      minLength: 1\n                      maxLength: 256\n                      items:\n                        title: Scope\n                        type: object\n                        description: \u003e-\n                          The Scope element contains an identifier defining, in\n                          the terms of a DFSP, an account on which access types\n                          can be requested or granted. It also defines the\n                          access types which are requested or granted.\n\n                          https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32121-scope\n                        properties: *ref_46\n                        required: *ref_47\n                    authChannels:\n                      type: array\n                      minLength: 1\n                      maxLength: 1\n                      items:\n                        title: ConsentRequestChannelTypeWeb\n                        type: string\n                        enum: \u0026ref_108\n                          - WEB\n                        description: \u003e\n                          The web auth channel being used for `PUT\n                          /consentRequest/{ID}` request.\n                    callbackUri:\n                      title: Uri\n                      type: string\n                      pattern: \u003e-\n                        ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n                      minLength: 1\n                      maxLength: 512\n                      description: \u003e\n                        The API data type Uri is a JSON string in a canonical\n                        format that is restricted by a regular expression for\n                        interoperability reasons.\n                    authUri:\n                      title: Uri\n                      type: string\n                      pattern: \u003e-\n                        ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n                      minLength: 1\n                      maxLength: 512\n                      description: \u003e\n                        The API data type Uri is a JSON string in a canonical\n                        format that is restricted by a regular expression for\n                        interoperability reasons.\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_110\n                    - scopes\n                    - authChannels\n                    - callbackUri\n                    - authUri\n                  additionalProperties: false\n                - title: ConsentRequestsIDPutResponseOTP\n                  type: object\n                  description: \u003e\n                    The object sent in a `PUT /consentRequests/{ID}` request.\n\n\n                    Schema used in the request consent phase of the account\n                    linking OTP/SMS flow.\n                  properties: \u0026ref_112\n                    scopes:\n                      type: array\n                      minLength: 1\n                      maxLength: 256\n                      items:\n                        title: Scope\n                        type: object\n                        description: \u003e-\n                          The Scope element contains an identifier defining, in\n                          the terms of a DFSP, an account on which access types\n                          can be requested or granted. It also defines the\n                          access types which are requested or granted.\n\n                          https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32121-scope\n                        properties: *ref_46\n                        required: *ref_47\n                    authChannels:\n                      type: array\n                      minLength: 1\n                      maxLength: 1\n                      items:\n                        title: ConsentRequestChannelTypeOTP\n                        type: string\n                        enum: \u0026ref_111\n                          - OTP\n                        description: \u003e\n                          The OTP auth channel being used for `PUT\n                          /consentRequests/{ID}` request.\n                    callbackUri:\n                      title: Uri\n                      type: string\n                      pattern: \u003e-\n                        ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n                      minLength: 1\n                      maxLength: 512\n                      description: \u003e\n                        The API data type Uri is a JSON string in a canonical\n                        format that is restricted by a regular expression for\n                        interoperability reasons.\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_113\n                    - scopes\n                    - authChannels\n                  additionalProperties: false\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    patch:\n      tags:\n        - consentRequests\n        - sampled\n      operationId: PatchConsentRequest\n      summary: PatchConsentRequest\n      description: \u003e\n        After the user completes an out-of-band authorization with the DFSP, the\n        PISP will receive a token which they can use to prove to the DFSP that\n        the user trusts this PISP.\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ConsentRequestsIDPatchRequest\n              type: object\n              description: \u003e-\n                Used by: PISP\n\n                After the user completes an out-of-band authorization with the\n                DFSP, the PISP will receive a token which they can use to prove\n                to the DFSP that the user trusts this PISP.\n\n                https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31222-patch-consentrequestsid\n              properties: \u0026ref_114\n                authToken:\n                  type: string\n                  pattern: ^[A-Za-z0-9-_]+[=]{0,2}$\n                  description: \u003e-\n                    The API data type BinaryString is a JSON String. The string\n                    is a base64url  encoding of a string of raw bytes, where\n                    padding (character ‘=’) is added at the end of the data if\n                    needed to ensure that the string is a multiple of 4\n                    characters. The length restriction indicates the allowed\n                    number of characters.\n                extensionList:\n                  title: ExtensionList\n                  type: object\n                  description: \u003e-\n                    Data model for the complex type ExtensionList. An optional\n                    list of extensions, specific to deployment.\n                  properties: *ref_0\n                  required: *ref_1\n              required: \u0026ref_115\n                - authToken\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /consentRequests/{ID}/error:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    put:\n      tags:\n        - consentRequests\n        - sampled\n      operationId: NotifyErrorConsentRequests\n      summary: NotifyErrorConsentRequests\n      description: \u003e\n        DFSP responds to the PISP if something went wrong with validating an OTP\n        or secret.\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Error information returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ErrorInformationObject\n              type: object\n              description: \u003e-\n                Data model for the complex type object that contains\n                ErrorInformation.\n              properties: *ref_48\n              required: *ref_49\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /consents:\n    parameters:\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    post:\n      tags:\n        - consents\n        - sampled\n      operationId: PostConsents\n      summary: PostConsents\n      description: \u003e\n        The **POST /consents** request is used to request the creation of a\n        consent for interactions between a PISP and the DFSP who owns the\n        account which a PISP’s customer wants to allow the PISP access to.\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - title: ConsentPostRequestAUTH\n                  type: object\n                  description: \u003e\n                    The object sent in a `POST /consents` request to the\n                    Auth-Service\n\n                    by a DFSP to store registered Consent and credential\n                  properties: \u0026ref_117\n                    consentId:\n                      allOf:\n                        - title: CorrelationId\n                          type: string\n                          pattern: \u003e-\n                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                          description: \u003e-\n                            Identifier that correlates all messages of the same\n                            sequence. The API data type UUID (Universally Unique\n                            Identifier) is a JSON String in canonical format,\n                            conforming to [RFC\n                            4122](https://tools.ietf.org/html/rfc4122), that is\n                            restricted by a regular expression for\n                            interoperability reasons. A UUID is always 36\n                            characters long, 32 hexadecimal symbols and 4 dashes\n                            (‘-‘).\n                          example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      description: \u003e\n                        Common ID between the PISP and FSP for the Consent\n                        object\n\n                        determined by the DFSP who creates the Consent.\n                    consentRequestId:\n                      title: CorrelationId\n                      type: string\n                      pattern: \u003e-\n                        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                      description: \u003e-\n                        Identifier that correlates all messages of the same\n                        sequence. The API data type UUID (Universally Unique\n                        Identifier) is a JSON String in canonical format,\n                        conforming to [RFC\n                        4122](https://tools.ietf.org/html/rfc4122), that is\n                        restricted by a regular expression for interoperability\n                        reasons. A UUID is always 36 characters long, 32\n                        hexadecimal symbols and 4 dashes (‘-‘).\n                      example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                    scopes:\n                      minLength: 1\n                      maxLength: 256\n                      type: array\n                      items:\n                        title: Scope\n                        type: object\n                        description: \u003e-\n                          The Scope element contains an identifier defining, in\n                          the terms of a DFSP, an account on which access types\n                          can be requested or granted. It also defines the\n                          access types which are requested or granted.\n\n                          https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32121-scope\n                        properties: *ref_46\n                        required: *ref_47\n                    credential:\n                      allOf:\n                        - title: SignedCredential\n                          type: object\n                          description: \u003e\n                            A credential used to allow a user to prove their\n                            identity and access\n\n                            to an account with a DFSP.\n\n\n                            SignedCredential is a special formatting of the\n                            credential to allow us to be\n\n                            more explicit about the `status` field - it should\n                            only ever be PENDING when\n\n                            updating a credential.\n                          properties: \u0026ref_52\n                            credentialType:\n                              title: CredentialType\n                              type: string\n                              enum: \u0026ref_54\n                                - FIDO\n                                - GENERIC\n                              description: \u003e-\n                                The type of the Credential. - \"FIDO\" - The\n                                credential is based on a FIDO challenge. Its\n                                payload is a FIDOPublicKeyCredentialAttestation\n                                object. - \"GENERIC\" - The credential is based on\n                                a simple public key validation. Its payload is a\n                                GenericCredential object.\n\n                                https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3226-credentialtype\n                            status:\n                              title: CredentialStatusPending\n                              type: string\n                              enum: \u0026ref_116\n                                - PENDING\n                              description: \u003e\n                                The status of the Credential.\n\n                                - \"PENDING\" - The credential has been created,\n                                but has not been verified\n                            genericPayload:\n                              title: GenericCredential\n                              type: object\n                              description: \u003e\n                                A publicKey + signature of a challenge for a\n                                generic public/private keypair.\n                              properties: \u0026ref_56\n                                publicKey:\n                                  type: string\n                                  pattern: ^[A-Za-z0-9-_]+[=]{0,2}$\n                                  description: \u003e-\n                                    The API data type BinaryString is a JSON\n                                    String. The string is a base64url  encoding\n                                    of a string of raw bytes, where padding\n                                    (character ‘=’) is added at the end of the\n                                    data if needed to ensure that the string is\n                                    a multiple of 4 characters. The length\n                                    restriction indicates the allowed number of\n                                    characters.\n                                signature:\n                                  type: string\n                                  pattern: ^[A-Za-z0-9-_]+[=]{0,2}$\n                                  description: \u003e-\n                                    The API data type BinaryString is a JSON\n                                    String. The string is a base64url  encoding\n                                    of a string of raw bytes, where padding\n                                    (character ‘=’) is added at the end of the\n                                    data if needed to ensure that the string is\n                                    a multiple of 4 characters. The length\n                                    restriction indicates the allowed number of\n                                    characters.\n                              required: \u0026ref_57\n                                - publicKey\n                                - signature\n                              additionalProperties: false\n                            fidoPayload:\n                              title: FIDOPublicKeyCredentialAttestation\n                              type: object\n                              description: \u003e\n                                A data model representing a FIDO Attestation\n                                result. Derived from \n\n                                [`PublicKeyCredential`\n                                Interface](https://w3c.github.io/webauthn/#iface-pkcredential).\n\n\n                                The `PublicKeyCredential` interface represents\n                                the below fields with\n\n                                a Type of Javascript\n                                [ArrayBuffer](https://heycam.github.io/webidl/#idl-ArrayBuffer).\n\n                                For this API, we represent ArrayBuffers as\n                                base64 encoded utf-8 strings.\n                              properties: \u0026ref_58\n                                id:\n                                  type: string\n                                  description: \u003e\n                                    credential id: identifier of pair of keys,\n                                    base64 encoded\n\n                                    https://w3c.github.io/webauthn/#ref-for-dom-credential-id\n                                  minLength: 59\n                                  maxLength: 118\n                                rawId:\n                                  type: string\n                                  description: \u003e\n                                    raw credential id: identifier of pair of\n                                    keys, base64 encoded\n                                  minLength: 59\n                                  maxLength: 118\n                                response:\n                                  type: object\n                                  description: |\n                                    AuthenticatorAttestationResponse\n                                  properties:\n                                    clientDataJSON:\n                                      type: string\n                                      description: |\n                                        JSON string with client data\n                                      minLength: 121\n                                      maxLength: 512\n                                    attestationObject:\n                                      type: string\n                                      description: |\n                                        CBOR.encoded attestation object\n                                      minLength: 306\n                                      maxLength: 2048\n                                  required:\n                                    - clientDataJSON\n                                    - attestationObject\n                                  additionalProperties: false\n                                type:\n                                  type: string\n                                  description: \u003e-\n                                    response type, we need only the type of\n                                    public-key\n                                  enum:\n                                    - public-key\n                              required: \u0026ref_59\n                                - id\n                                - response\n                                - type\n                              additionalProperties: false\n                          required: \u0026ref_53\n                            - credentialType\n                            - status\n                          additionalProperties: false\n                    status:\n                      title: ConsentStatus\n                      type: string\n                      enum: \u0026ref_50\n                        - ISSUED\n                        - REVOKED\n                      description: |-\n                        Allowed values for the enumeration ConsentStatus\n                        - ISSUED - The consent has been issued by the DFSP\n                        - REVOKED - The consent has been revoked\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_118\n                    - consentId\n                    - scopes\n                    - credential\n                    - status\n                  additionalProperties: false\n                - title: ConsentPostRequestPISP\n                  type: object\n                  description: \u003e\n                    The provisional Consent object sent by the DFSP in `POST\n                    /consents`.\n                  properties: \u0026ref_119\n                    consentId:\n                      allOf:\n                        - title: CorrelationId\n                          type: string\n                          pattern: \u003e-\n                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                          description: \u003e-\n                            Identifier that correlates all messages of the same\n                            sequence. The API data type UUID (Universally Unique\n                            Identifier) is a JSON String in canonical format,\n                            conforming to [RFC\n                            4122](https://tools.ietf.org/html/rfc4122), that is\n                            restricted by a regular expression for\n                            interoperability reasons. A UUID is always 36\n                            characters long, 32 hexadecimal symbols and 4 dashes\n                            (‘-‘).\n                          example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      description: \u003e\n                        Common ID between the PISP and the Payer DFSP for the\n                        consent object. The ID\n\n                        should be reused for re-sends of the same consent. A new\n                        ID should be generated\n\n                        for each new consent.\n                    consentRequestId:\n                      allOf:\n                        - title: CorrelationId\n                          type: string\n                          pattern: \u003e-\n                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                          description: \u003e-\n                            Identifier that correlates all messages of the same\n                            sequence. The API data type UUID (Universally Unique\n                            Identifier) is a JSON String in canonical format,\n                            conforming to [RFC\n                            4122](https://tools.ietf.org/html/rfc4122), that is\n                            restricted by a regular expression for\n                            interoperability reasons. A UUID is always 36\n                            characters long, 32 hexadecimal symbols and 4 dashes\n                            (‘-‘).\n                          example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      description: \u003e\n                        The ID given to the original consent request on which\n                        this consent is based.\n                    scopes:\n                      type: array\n                      minLength: 1\n                      maxLength: 256\n                      items:\n                        title: Scope\n                        type: object\n                        description: \u003e-\n                          The Scope element contains an identifier defining, in\n                          the terms of a DFSP, an account on which access types\n                          can be requested or granted. It also defines the\n                          access types which are requested or granted.\n\n                          https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32121-scope\n                        properties: *ref_46\n                        required: *ref_47\n                    status:\n                      title: ConsentStatus\n                      type: string\n                      enum: *ref_50\n                      description: |-\n                        Allowed values for the enumeration ConsentStatus\n                        - ISSUED - The consent has been issued by the DFSP\n                        - REVOKED - The consent has been revoked\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_120\n                    - consentId\n                    - consentRequestId\n                    - scopes\n                    - status\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /consents/{ID}:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    get:\n      description: \u003e\n        The **GET /consents/**_{ID}_ resource allows a party to enquire after\n        the status of a consent. The *{ID}* used in the URI of the request\n        should be the consent request ID which was used to identify the consent\n        when it was created.\n      tags:\n        - consents\n      operationId: GetConsent\n      summary: GetConsent\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    patch:\n      description: \u003e\n        The HTTP request `PATCH /consents/{ID}` is used\n\n\n        - In account linking in the Credential Registration phase. Used by a\n        DFSP\n          to notify a PISP a credential has been verified and registered with an\n          Auth service.\n\n        - In account unlinking by a hub hosted auth service and by DFSPs\n          in non-hub hosted scenarios to notify participants of a consent being revoked.\n\n          Called by a `auth-service` to notify a PISP and DFSP of consent status in hub hosted scenario.\n          Called by a `DFSP` to notify a PISP of consent status in non-hub hosted scenario.\n      tags:\n        - consents\n        - sampled\n      operationId: PatchConsentByID\n      summary: PatchConsentByID\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - title: ConsentsIDPatchResponseVerified\n                  description: \u003e\n                    PATCH /consents/{ID} request object.\n\n\n                    Sent by the DFSP to the PISP when a consent is issued and\n                    verified.\n\n                    Used in the \"Register Credential\" part of the Account\n                    linking flow.\n                  type: object\n                  properties: \u0026ref_127\n                    credential:\n                      type: object\n                      properties:\n                        status:\n                          title: CredentialStatusVerified\n                          type: string\n                          enum: \u0026ref_55\n                            - VERIFIED\n                          description: |\n                            The status of the Credential.\n                            - \"VERIFIED\" - The Credential is valid and verified.\n                      required:\n                        - status\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_128\n                    - credential\n                - title: ConsentsIDPatchResponseRevoked\n                  description: |\n                    PATCH /consents/{ID} request object.\n\n                    Sent to both the PISP and DFSP when a consent is revoked.\n                    Used in the \"Unlinking\" part of the Account Unlinking flow.\n                  type: object\n                  properties: \u0026ref_130\n                    status:\n                      title: ConsentStatusRevoked\n                      type: string\n                      enum: \u0026ref_129\n                        - REVOKED\n                      description: |-\n                        Allowed values for the enumeration ConsentStatus\n                        - REVOKED - The consent has been revoked\n                    revokedAt:\n                      title: DateTime\n                      type: string\n                      pattern: \u003e-\n                        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                      description: \u003e-\n                        The API data type DateTime is a JSON String in a lexical\n                        format that is restricted by a regular expression for\n                        interoperability reasons. The format is according to\n                        [ISO\n                        8601](https://www.iso.org/iso-8601-date-and-time-format.html),\n                        expressed in a combined date, time and time zone format.\n                        A more readable version of the format is\n                        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n                        \"2016-05-24T08:38:08.699-04:00\",\n                        \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time\n                        zone, same as UTC).\n                      example: '2016-05-24T08:38:08.699-04:00'\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_131\n                    - status\n                    - revokedAt\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    put:\n      description: \u003e\n        The HTTP request `PUT /consents/{ID}` is used by the PISP and Auth\n        Service.\n\n\n        - Called by a `PISP` to after signing a challenge. Sent to an DFSP for\n        verification.\n\n        - Called by a `auth-service` to notify a DFSP that a credential has been\n        verified and registered.\n      tags:\n        - consents\n        - sampled\n      operationId: PutConsentByID\n      summary: PutConsentByID\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - title: ConsentsIDPutResponseSigned\n                  type: object\n                  description: \u003e\n                    The HTTP request `PUT /consents/{ID}` is used by the PISP to\n                    update a Consent with a signed challenge and register a\n                    credential.\n\n                    Called by a `PISP` to after signing a challenge. Sent to a\n                    DFSP for verification.\n                  properties: \u0026ref_121\n                    status:\n                      title: ConsentStatusIssued\n                      type: string\n                      enum: *ref_51\n                      description: |-\n                        Allowed values for the enumeration ConsentStatus\n                        - ISSUED - The consent has been issued by the DFSP\n                    scopes:\n                      type: array\n                      items:\n                        title: Scope\n                        type: object\n                        description: \u003e-\n                          The Scope element contains an identifier defining, in\n                          the terms of a DFSP, an account on which access types\n                          can be requested or granted. It also defines the\n                          access types which are requested or granted.\n\n                          https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32121-scope\n                        properties: *ref_46\n                        required: *ref_47\n                    credential:\n                      title: SignedCredential\n                      type: object\n                      description: \u003e\n                        A credential used to allow a user to prove their\n                        identity and access\n\n                        to an account with a DFSP.\n\n\n                        SignedCredential is a special formatting of the\n                        credential to allow us to be\n\n                        more explicit about the `status` field - it should only\n                        ever be PENDING when\n\n                        updating a credential.\n                      properties: *ref_52\n                      required: *ref_53\n                      additionalProperties: false\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_122\n                    - scopes\n                    - credential\n                  additionalProperties: false\n                - title: ConsentsIDPutResponseVerified\n                  type: object\n                  description: \u003e\n                    The HTTP request `PUT /consents/{ID}` is used by the DFSP or\n                    Auth-Service to update a Consent object once it has been\n                    Verified.\n\n                    Called by a `auth-service` to notify a DFSP that a\n                    credential has been verified and registered.\n                  properties: \u0026ref_125\n                    status:\n                      title: ConsentStatusIssued\n                      type: string\n                      enum: *ref_51\n                      description: |-\n                        Allowed values for the enumeration ConsentStatus\n                        - ISSUED - The consent has been issued by the DFSP\n                    scopes:\n                      type: array\n                      items:\n                        title: Scope\n                        type: object\n                        description: \u003e-\n                          The Scope element contains an identifier defining, in\n                          the terms of a DFSP, an account on which access types\n                          can be requested or granted. It also defines the\n                          access types which are requested or granted.\n\n                          https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32121-scope\n                        properties: *ref_46\n                        required: *ref_47\n                    credential:\n                      title: VerifiedCredential\n                      type: object\n                      description: \u003e\n                        A credential used to allow a user to prove their\n                        identity and access\n\n                        to an account with a DFSP.\n\n\n                        VerifiedCredential is a special formatting of Credential\n                        to allow us to be\n\n                        more explicit about the `status` field - it should only\n                        ever be VERIFIED when\n\n                        updating a credential.\n                      properties: \u0026ref_123\n                        credentialType:\n                          title: CredentialType\n                          type: string\n                          enum: *ref_54\n                          description: \u003e-\n                            The type of the Credential. - \"FIDO\" - The\n                            credential is based on a FIDO challenge. Its payload\n                            is a FIDOPublicKeyCredentialAttestation object. -\n                            \"GENERIC\" - The credential is based on a simple\n                            public key validation. Its payload is a\n                            GenericCredential object.\n\n                            https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3226-credentialtype\n                        status:\n                          title: CredentialStatusVerified\n                          type: string\n                          enum: *ref_55\n                          description: |\n                            The status of the Credential.\n                            - \"VERIFIED\" - The Credential is valid and verified.\n                        genericPayload:\n                          title: GenericCredential\n                          type: object\n                          description: \u003e\n                            A publicKey + signature of a challenge for a generic\n                            public/private keypair.\n                          properties: *ref_56\n                          required: *ref_57\n                          additionalProperties: false\n                        fidoPayload:\n                          title: FIDOPublicKeyCredentialAttestation\n                          type: object\n                          description: \u003e\n                            A data model representing a FIDO Attestation result.\n                            Derived from \n\n                            [`PublicKeyCredential`\n                            Interface](https://w3c.github.io/webauthn/#iface-pkcredential).\n\n\n                            The `PublicKeyCredential` interface represents the\n                            below fields with\n\n                            a Type of Javascript\n                            [ArrayBuffer](https://heycam.github.io/webidl/#idl-ArrayBuffer).\n\n                            For this API, we represent ArrayBuffers as base64\n                            encoded utf-8 strings.\n                          properties: *ref_58\n                          required: *ref_59\n                          additionalProperties: false\n                      required: \u0026ref_124\n                        - credentialType\n                        - status\n                      additionalProperties: false\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_126\n                    - scopes\n                    - credential\n                  additionalProperties: false\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      responses:\n        '200':\n          description: OK\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    delete:\n      description: \u003e\n        Used by PISP, DFSP\n\n\n        The **DELETE /consents/**_{ID}_ request is used to request the\n        revocation of a previously agreed consent.\n\n        For tracing and auditing purposes, the switch should be sure not to\n        delete the consent physically;\n\n        instead, information relating to the consent should be marked as deleted\n        and requests relating to the\n\n        consent should not be honoured.\n      operationId: DeleteConsentByID\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n      tags:\n        - consents\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /consents/{ID}/error:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    put:\n      tags:\n        - consents\n        - sampled\n      operationId: NotifyErrorConsents\n      summary: NotifyErrorConsents\n      description: \u003e\n        DFSP responds to the PISP if something went wrong with validating or\n        storing consent.\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Error information returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ErrorInformationObject\n              type: object\n              description: \u003e-\n                Data model for the complex type object that contains\n                ErrorInformation.\n              properties: *ref_48\n              required: *ref_49\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /participants:\n    parameters:\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    post:\n      description: \u003e-\n        The HTTP request `POST /participants` is used to create information in\n        the server regarding the provided list of identities. This request\n        should be used for bulk creation of FSP information for more than one\n        Party. The optional currency parameter should indicate that each\n        provided Party supports the currency.\n      summary: Create bulk participant information\n      tags:\n        - participants\n        - sampled\n      operationId: Participants1\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Participant information to be created.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ParticipantsPostRequest\n              type: object\n              description: The object sent in the POST /participants request.\n              properties: *ref_60\n              required: *ref_61\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /participants/{ID}:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    put:\n      description: \u003e-\n        The callback `PUT /participants/{ID}` is used to inform the client of\n        the result of the creation of the provided list of identities.\n      summary: Return bulk participant information\n      tags:\n        - participants\n        - sampled\n      operationId: PutParticipantsByID\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Participant information returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ParticipantsIDPutResponse\n              type: object\n              description: The object sent in the PUT /participants/{ID} callback.\n              properties: *ref_62\n              required: *ref_63\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /participants/{ID}/error:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    put:\n      description: \u003e-\n        If there is an error during FSP information creation in the server, the\n        error callback `PUT /participants/{ID}/error` is used. The `{ID}` in the\n        URI should contain the requestId that was used for the creation of the\n        participant information.\n      summary: Return bulk participant information error\n      tags:\n        - participants\n        - sampled\n      operationId: PutParticipantsByIDAndError\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Details of the error returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ErrorInformationObject\n              type: object\n              description: \u003e-\n                Data model for the complex type object that contains\n                ErrorInformation.\n              properties: *ref_48\n              required: *ref_49\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /participants/{Type}/{ID}:\n    parameters:\n      - name: Type\n        in: path\n        required: true\n        schema: \u0026ref_64\n          type: string\n        description: \u003e-\n          The type of the party identifier. For example, `MSISDN`,\n          `PERSONAL_ID`.\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    post:\n      description: \u003e-\n        The HTTP request `POST /participants/{Type}/{ID}` (or `POST\n        /participants/{Type}/{ID}/{SubId}`) is used to create information in the\n        server regarding the provided identity, defined by `{Type}`, `{ID}`, and\n        optionally `{SubId}` (for example, `POST /participants/MSISDN/123456789`\n        or `POST /participants/BUSINESS/shoecompany/employee1`). An\n        ExtensionList element has been added to this reqeust in version v1.1\n      summary: Create participant information\n      tags:\n        - participants\n        - sampled\n      operationId: ParticipantsByIDAndType\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Participant information to be created.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ParticipantsTypeIDSubIDPostRequest\n              type: object\n              description: \u003e-\n                The object sent in the POST /participants/{Type}/{ID}/{SubId}\n                and /participants/{Type}/{ID} requests. An additional optional\n                ExtensionList element has been added as part of v1.1 changes.\n              properties: \u0026ref_133\n                fspId:\n                  title: FspId\n                  type: string\n                  minLength: 1\n                  maxLength: 32\n                  description: FSP identifier.\n                currency:\n                  title: Currency\n                  description: \u003e-\n                    The currency codes defined in [ISO\n                    4217](https://www.iso.org/iso-4217-currency-codes.html) as\n                    three-letter alphabetic codes are used as the standard\n                    naming representation for currencies.\n                  type: string\n                  minLength: 3\n                  maxLength: 3\n                  enum: *ref_4\n                extensionList:\n                  title: ExtensionList\n                  type: object\n                  description: \u003e-\n                    Data model for the complex type ExtensionList. An optional\n                    list of extensions, specific to deployment.\n                  properties: *ref_0\n                  required: *ref_1\n              required: \u0026ref_134\n                - fspId\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    get:\n      description: \u003e-\n        The HTTP request `GET /participants/{Type}/{ID}` (or `GET\n        /participants/{Type}/{ID}/{SubId}`) is used to find out in which FSP the\n        requested Party, defined by `{Type}`, `{ID}` and optionally `{SubId}`,\n        is located (for example, `GET /participants/MSISDN/123456789`, or `GET\n        /participants/BUSINESS/shoecompany/employee1`). This HTTP request should\n        support a query string for filtering of currency. To use filtering of\n        currency, the HTTP request `GET /participants/{Type}/{ID}?currency=XYZ`\n        should be used, where `XYZ` is the requested currency.\n      summary: Look up participant information\n      tags:\n        - participants\n      operationId: ParticipantsByTypeAndID\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    put:\n      description: \u003e-\n        The callback `PUT /participants/{Type}/{ID}` (or `PUT\n        /participants/{Type}/{ID}/{SubId}`) is used to inform the client of a\n        successful result of the lookup, creation, or deletion of the FSP\n        information related to the Party. If the FSP information is deleted, the\n        fspId element should be empty; otherwise the element should include the\n        FSP information for the Party.\n      summary: Return participant information\n      tags:\n        - participants\n      operationId: ParticipantsByTypeAndID3\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Participant information returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ParticipantsTypeIDPutResponse\n              type: object\n              description: \u003e-\n                The object sent in the PUT /participants/{Type}/{ID}/{SubId} and\n                /participants/{Type}/{ID} callbacks.\n              properties: \u0026ref_132\n                fspId:\n                  title: FspId\n                  type: string\n                  minLength: 1\n                  maxLength: 32\n                  description: FSP identifier.\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    delete:\n      description: \u003e-\n        The HTTP request `DELETE /participants/{Type}/{ID}` (or `DELETE\n        /participants/{Type}/{ID}/{SubId}`) is used to delete information in the\n        server regarding the provided identity, defined by `{Type}` and `{ID}`)\n        (for example, `DELETE /participants/MSISDN/123456789`), and optionally\n        `{SubId}`. This HTTP request should support a query string to delete FSP\n        information regarding a specific currency only. To delete a specific\n        currency only, the HTTP request `DELETE\n        /participants/{Type}/{ID}?currency=XYZ` should be used, where `XYZ` is\n        the requested currency.\n\n\n        **Note:** The Account Lookup System should verify that it is the Party’s\n        current FSP that is deleting the FSP information.\n      summary: Delete participant information\n      tags:\n        - participants\n      operationId: ParticipantsByTypeAndID2\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /participants/{Type}/{ID}/error:\n    parameters:\n      - name: Type\n        in: path\n        required: true\n        schema: *ref_64\n        description: \u003e-\n          The type of the party identifier. For example, `MSISDN`,\n          `PERSONAL_ID`.\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    put:\n      description: \u003e-\n        If the server is unable to find, create or delete the associated FSP of\n        the provided identity, or another processing error occurred, the error\n        callback `PUT /participants/{Type}/{ID}/error` (or `PUT\n        /participants/{Type}/{ID}/{SubId}/error`) is used.\n      summary: Return participant information error\n      tags:\n        - participants\n        - sampled\n      operationId: ParticipantsErrorByTypeAndID\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Details of the error returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ErrorInformationObject\n              type: object\n              description: \u003e-\n                Data model for the complex type object that contains\n                ErrorInformation.\n              properties: *ref_48\n              required: *ref_49\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /services/{ServiceType}:\n    parameters:\n      - name: ServiceType\n        in: path\n        required: true\n        schema: \u0026ref_65\n          type: string\n        description: The type of the service identifier. For example, `THIRD_PARTY_DFSP`\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    get:\n      operationId: GetServicesByServiceType\n      summary: GetServicesByServiceType\n      description: \u003e\n        The HTTP request `GET /services/{ServiceType}` is used to retrieve the\n        list of participants\n\n        that support a specified service.\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n      tags:\n        - services\n        - sampled\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    put:\n      description: \u003e\n        The HTTP request `PUT /services/{ServiceType}` is used to return list of\n        participants\n\n        that support a specified service.\n      operationId: PutServicesByServiceType\n      summary: PutServicesByServiceType\n      tags:\n        - services\n        - sampled\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ServicesServiceTypePutResponse\n              type: object\n              description: \u003e-\n                Used by: Switch\n\n                The callback PUT /services/{ServiceType} is used to inform the\n                client of a successful result of the service information lookup.\n\n                Callback and data model information for GET\n                /services/{ServiceType}:\n\n                Callback - PUT /services/{ServiceType} Error Callback - PUT\n                /services/{ServiceType}/error Data Model - Empty body\n\n                https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31531-put-servicesservicetype\n              properties: \u0026ref_135\n                providers:\n                  type: array\n                  minLength: 0\n                  maxLength: 256\n                  items:\n                    title: FspId\n                    type: string\n                    minLength: 1\n                    maxLength: 32\n                    description: FSP identifier.\n                extensionList:\n                  title: ExtensionList\n                  type: object\n                  description: \u003e-\n                    Data model for the complex type ExtensionList. An optional\n                    list of extensions, specific to deployment.\n                  properties: *ref_0\n                  required: *ref_1\n              required: \u0026ref_136\n                - providers\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /services/{ServiceType}/error:\n    parameters:\n      - name: ServiceType\n        in: path\n        required: true\n        schema: *ref_65\n        description: The type of the service identifier. For example, `THIRD_PARTY_DFSP`\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    put:\n      description: \u003e\n        The HTTP request `PUT /services/{ServiceType}/error` is used to return\n        error information\n      operationId: PutServicesByServiceTypeAndError\n      summary: PutServicesByServiceTypeAndError\n      tags:\n        - services\n        - sampled\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Details of the error returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ErrorInformationObject\n              type: object\n              description: \u003e-\n                Data model for the complex type object that contains\n                ErrorInformation.\n              properties: *ref_48\n              required: *ref_49\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /thirdpartyRequests/transactions:\n    parameters:\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    post:\n      operationId: ThirdpartyRequestsTransactionsPost\n      summary: ThirdpartyRequestsTransactionsPost\n      description: \u003e-\n        The HTTP request POST `/thirdpartyRequests/transactions` is used by a\n        PISP to initiate a 3rd party Transaction request with a DFSP\n      tags:\n        - thirdpartyRequests\n        - sampled\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Transaction request to be created.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ThirdpartyRequestsTransactionsPostRequest\n              type: object\n              description: \u003e-\n                Used by: PISP\n\n                The HTTP request POST /thirdpartyRequests/transactions is used\n                to request the creation of a transaction request on the server\n                for the transfer described in the request.\n\n                Callback and data model information for POST\n                /thirdpartyRequests/transactions:\n\n                Callback - PUT /thirdpartyRequests/transactions/{ID} Error\n                Callback - PUT /thirdpartyRequests/transactions/{ID}/error Data\n                Model - See link below\n\n                https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31712-post-thirdpartyrequeststransactions\n              properties: \u0026ref_137\n                transactionRequestId:\n                  allOf:\n                    - title: CorrelationId\n                      type: string\n                      pattern: \u003e-\n                        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                      description: \u003e-\n                        Identifier that correlates all messages of the same\n                        sequence. The API data type UUID (Universally Unique\n                        Identifier) is a JSON String in canonical format,\n                        conforming to [RFC\n                        4122](https://tools.ietf.org/html/rfc4122), that is\n                        restricted by a regular expression for interoperability\n                        reasons. A UUID is always 36 characters long, 32\n                        hexadecimal symbols and 4 dashes (‘-‘).\n                      example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                  description: \u003e\n                    Common ID between the PISP and the Payer DFSP for the\n                    transaction request object. The ID should be reused for\n                    resends of the same transaction request. A new ID should be\n                    generated for each new transaction request.\n                payee:\n                  allOf:\n                    - title: Party\n                      type: object\n                      description: Data model for the complex type Party.\n                      properties: *ref_9\n                      required: *ref_10\n                  description: \u003e-\n                    Information about the Payee in the proposed financial\n                    transaction.\n                payer:\n                  allOf:\n                    - title: PartyIdInfo\n                      type: object\n                      description: Data model for the complex type PartyIdInfo.\n                      properties: *ref_2\n                      required: *ref_3\n                  description: \u003e-\n                    Information about the Payer in the proposed financial\n                    transaction.\n                amountType:\n                  allOf:\n                    - title: AmountType\n                      type: string\n                      enum: *ref_66\n                      description: \u003e-\n                        Below are the allowed values for the enumeration\n                        AmountType.\n\n                        - SEND - Amount the Payer would like to send, that is,\n                        the amount that should be withdrawn from the Payer\n                        account including any fees.\n\n                        - RECEIVE - Amount the Payer would like the Payee to\n                        receive, that is, the amount that should be sent to the\n                        receiver exclusive of any fees.\n                      example: RECEIVE\n                  description: SEND for sendAmount, RECEIVE for receiveAmount.\n                amount:\n                  allOf:\n                    - title: Money\n                      type: object\n                      description: Data model for the complex type Money.\n                      properties: *ref_5\n                      required: *ref_6\n                  description: Requested amount to be transferred from the Payer to Payee.\n                transactionType:\n                  allOf:\n                    - title: TransactionType\n                      type: object\n                      description: Data model for the complex type TransactionType.\n                      properties: *ref_67\n                      required: *ref_68\n                  description: Type of transaction.\n                note:\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n                  description: A memo that will be attached to the transaction.\n                expiration:\n                  type: string\n                  description: \u003e\n                    Date and time until when the transaction request is valid.\n                    It can be set to get a quick failure in case the peer FSP\n                    takes too long to respond.\n                  example: '2016-05-24T08:38:08.699-04:00'\n                extensionList:\n                  title: ExtensionList\n                  type: object\n                  description: \u003e-\n                    Data model for the complex type ExtensionList. An optional\n                    list of extensions, specific to deployment.\n                  properties: *ref_0\n                  required: *ref_1\n              required: \u0026ref_138\n                - transactionRequestId\n                - payee\n                - payer\n                - amountType\n                - amount\n                - transactionType\n                - expiration\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /thirdpartyRequests/transactions/{ID}:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    get:\n      tags:\n        - thirdpartyRequests\n        - sampled\n      operationId: GetThirdpartyTransactionRequests\n      summary: GetThirdpartyTransactionRequests\n      description: \u003e\n        The HTTP request `GET /thirdpartyRequests/transactions/{ID}` is used to\n        request the\n\n        retrieval of a third party transaction request.\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    put:\n      tags:\n        - thirdpartyRequests\n        - sampled\n      operationId: UpdateThirdPartyTransactionRequests\n      summary: UpdateThirdPartyTransactionRequests\n      description: \u003e\n        The HTTP request `PUT /thirdpartyRequests/transactions/{ID}` is used by\n        the DFSP to inform the client about\n\n        the status of a previously requested thirdparty transaction request.\n\n\n        Switch(Thirdparty API Adapter) -\u003e PISP\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ThirdpartyRequestsTransactionsIDPutResponse\n              type: object\n              description: \u003e-\n                Used by: DFSP\n\n                After a PISP requests the creation of a Third Party Transaction\n                request (POST /thirdpartyRequests/transactions) or the status of\n                a previously created Third Party Transaction request (GET\n                /thirdpartyRequests/transactions/{ID}), the DFSP will send this\n                callback.\n\n                https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31721-put-thirdpartyrequeststransactionsid\n              properties: \u0026ref_139\n                transactionId:\n                  title: CorrelationId\n                  type: string\n                  pattern: \u003e-\n                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                  description: \u003e-\n                    Identifier that correlates all messages of the same\n                    sequence. The API data type UUID (Universally Unique\n                    Identifier) is a JSON String in canonical format, conforming\n                    to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is\n                    restricted by a regular expression for interoperability\n                    reasons. A UUID is always 36 characters long, 32 hexadecimal\n                    symbols and 4 dashes (‘-‘).\n                  example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                transactionRequestState:\n                  title: TransactionRequestState\n                  type: string\n                  enum: *ref_69\n                  description: \u003e-\n                    Below are the allowed values for the enumeration.\n\n                    - RECEIVED - Payer FSP has received the transaction from the\n                    Payee FSP.\n\n                    - PENDING - Payer FSP has sent the transaction request to\n                    the Payer.\n\n                    - ACCEPTED - Payer has approved the transaction.\n\n                    - REJECTED - Payer has rejected the transaction.\n                  example: RECEIVED\n                extensionList:\n                  title: ExtensionList\n                  type: object\n                  description: \u003e-\n                    Data model for the complex type ExtensionList. An optional\n                    list of extensions, specific to deployment.\n                  properties: *ref_0\n                  required: *ref_1\n              required: \u0026ref_140\n                - transactionRequestState\n            example:\n              transactionRequestState: RECEIVED\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    patch:\n      operationId: NotifyThirdpartyTransactionRequests\n      summary: NotifyThirdpartyTransactionRequests\n      description: \u003e\n        The HTTP request `PATCH /thirdpartyRequests/transactions/{ID}` is used\n        to\n\n        notify a thirdparty of the outcome of a transaction request.\n\n\n        Switch(Thirdparty API Adapter) -\u003e PISP\n      tags:\n        - thirdpartyRequests\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ThirdpartyRequestsTransactionsIDPatchResponse\n              type: object\n              description: \u003e-\n                Used by: DFSP\n\n                The issuing PISP will expect a response to their request for a\n                transfer which describes the finalized state of the requested\n                transfer.\n\n                This response will be given by a PATCH call on the\n                /thirdpartyRequests/transactions/{ID} resource.\n\n                The {ID} given in the query string should be the\n                transactionRequestId which was originally used by the PISP to\n                identify the transaction request.\n\n                https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31612-post-thirdpartyrequestsauthorizations\n              properties: *ref_70\n              required: *ref_71\n            example:\n              transactionRequestState: ACCEPTED\n              transactionState: COMMITTED\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /thirdpartyRequests/transactions/{ID}/error:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    put:\n      tags:\n        - thirdpartyRequests\n        - sampled\n      operationId: ThirdpartyTransactionRequestsError\n      summary: ThirdpartyTransactionRequestsError\n      description: \u003e\n        If the server is unable to find the transaction request, or another\n        processing error occurs,\n\n        the error callback `PUT /thirdpartyRequests/transactions/{ID}/error` is\n        used.\n\n        The `{ID}` in the URI should contain the `transactionRequestId` that was\n        used for the creation of\n\n        the thirdparty transaction request.\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Error information returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ErrorInformationObject\n              type: object\n              description: \u003e-\n                Data model for the complex type object that contains\n                ErrorInformation.\n              properties: *ref_48\n              required: *ref_49\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /thirdpartyRequests/authorizations:\n    parameters:\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    post:\n      description: \u003e\n        The HTTP request **POST /thirdpartyRequests/authorizations** is used to\n        request the validation by a customer for the transfer described in the\n        request.\n      operationId: PostThirdpartyRequestsAuthorizations\n      summary: PostThirdpartyRequestsAuthorizations\n      tags:\n        - authorizations\n        - sampled\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Authorization request details\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ThirdpartyRequestsAuthorizationsPostRequest\n              description: \u003e-\n                Used by: DFSP\n\n                The HTTP request POST /thirdpartyRequests/authorizations is used\n                to request the validation by a customer for the transfer\n                described in the request.\n\n                Callback and data model information for POST\n                /thirdpartyRequests/authorizations:\n\n                Callback - PUT /thirdpartyRequests/authorizations/{ID} Error\n                Callback - PUT /thirdpartyRequests/authorizations/{ID}/error\n                Data Model - See below url\n\n                https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31612-post-thirdpartyrequestsauthorizations\n              type: object\n              properties: \u0026ref_141\n                authorizationRequestId:\n                  title: CorrelationId\n                  type: string\n                  pattern: \u003e-\n                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                  description: \u003e-\n                    Identifier that correlates all messages of the same\n                    sequence. The API data type UUID (Universally Unique\n                    Identifier) is a JSON String in canonical format, conforming\n                    to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is\n                    restricted by a regular expression for interoperability\n                    reasons. A UUID is always 36 characters long, 32 hexadecimal\n                    symbols and 4 dashes (‘-‘).\n                  example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                transactionRequestId:\n                  title: CorrelationId\n                  type: string\n                  pattern: \u003e-\n                    ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                  description: \u003e-\n                    Identifier that correlates all messages of the same\n                    sequence. The API data type UUID (Universally Unique\n                    Identifier) is a JSON String in canonical format, conforming\n                    to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is\n                    restricted by a regular expression for interoperability\n                    reasons. A UUID is always 36 characters long, 32 hexadecimal\n                    symbols and 4 dashes (‘-‘).\n                  example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                challenge:\n                  type: string\n                  description: The challenge that the PISP's client is to sign\n                transferAmount:\n                  allOf:\n                    - title: Money\n                      type: object\n                      description: Data model for the complex type Money.\n                      properties: *ref_5\n                      required: *ref_6\n                  description: \u003e-\n                    The amount that will be debited from the sending customer's\n                    account as a consequence of the transaction.\n                payeeReceiveAmount:\n                  allOf:\n                    - title: Money\n                      type: object\n                      description: Data model for the complex type Money.\n                      properties: *ref_5\n                      required: *ref_6\n                  description: \u003e-\n                    The amount that will be credited to the receiving customer's\n                    account as a consequence of the transaction.\n                fees:\n                  allOf:\n                    - title: Money\n                      type: object\n                      description: Data model for the complex type Money.\n                      properties: *ref_5\n                      required: *ref_6\n                  description: \u003e-\n                    The amount of fees that the paying customer will be charged\n                    as part of the transaction.\n                payer:\n                  allOf:\n                    - title: PartyIdInfo\n                      type: object\n                      description: Data model for the complex type PartyIdInfo.\n                      properties: *ref_2\n                      required: *ref_3\n                  description: \u003e-\n                    Information about the Payer type, id, sub-type/id, FSP Id in\n                    the proposed financial transaction.\n                payee:\n                  allOf:\n                    - title: Party\n                      type: object\n                      description: Data model for the complex type Party.\n                      properties: *ref_9\n                      required: *ref_10\n                  description: \u003e-\n                    Information about the Payee in the proposed financial\n                    transaction.\n                transactionType:\n                  title: TransactionType\n                  type: object\n                  description: Data model for the complex type TransactionType.\n                  properties: *ref_67\n                  required: *ref_68\n                expiration:\n                  allOf:\n                    - title: DateTime\n                      type: string\n                      pattern: \u003e-\n                        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n                      description: \u003e-\n                        The API data type DateTime is a JSON String in a lexical\n                        format that is restricted by a regular expression for\n                        interoperability reasons. The format is according to\n                        [ISO\n                        8601](https://www.iso.org/iso-8601-date-and-time-format.html),\n                        expressed in a combined date, time and time zone format.\n                        A more readable version of the format is\n                        yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n                        \"2016-05-24T08:38:08.699-04:00\",\n                        \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time\n                        zone, same as UTC).\n                      example: '2016-05-24T08:38:08.699-04:00'\n                  description: \u003e-\n                    The time by which the transfer must be completed, set by the\n                    payee DFSP.\n                extensionList:\n                  title: ExtensionList\n                  type: object\n                  description: \u003e-\n                    Data model for the complex type ExtensionList. An optional\n                    list of extensions, specific to deployment.\n                  properties: *ref_0\n                  required: *ref_1\n              required: \u0026ref_142\n                - authorizationRequestId\n                - transactionRequestId\n                - challenge\n                - transferAmount\n                - payeeReceiveAmount\n                - fees\n                - payer\n                - payee\n                - transactionType\n                - expiration\n              additionalProperties: false\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /thirdpartyRequests/authorizations/{ID}:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    get:\n      description: \u003e\n        The HTTP request **GET /thirdpartyRequests/authorizations/**_{ID}_ is\n        used to get information relating\n\n        to a previously issued authorization request. The *{ID}* in the request\n        should match the\n\n        `authorizationRequestId` which was given when the authorization request\n        was created.\n      operationId: GetThirdpartyRequestsAuthorizationsById\n      summary: GetThirdpartyRequestsAuthorizationsById\n      tags:\n        - authorizations\n        - sampled\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    put:\n      description: \u003e\n        After receiving the **POST /thirdpartyRequests/authorizations**, the\n        PISP will present the details of the\n\n        transaction to their user, and request that the client sign the\n        `challenge` field using the credential\n\n        they previously registered.\n\n\n        The signed challenge will be sent back by the PISP in **PUT\n        /thirdpartyRequests/authorizations/**_{ID}_:\n      operationId: PutThirdpartyRequestsAuthorizationsById\n      summary: PutThirdpartyRequestsAuthorizationsById\n      tags:\n        - authorizations\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Signed authorization object\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - title: ThirdpartyRequestsAuthorizationsIDPutResponseRejected\n                  type: object\n                  description: \u003e-\n                    The object sent in the PUT\n                    /thirdpartyRequests/authorizations/{ID} callback.\n                  properties: \u0026ref_144\n                    responseType:\n                      title: AuthorizationResponseTypeRejected\n                      description: |\n                        The customer rejected the terms of the transfer.\n                      type: string\n                      enum: \u0026ref_143\n                        - REJECTED\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_145\n                    - responseType\n                - title: ThirdpartyRequestsAuthorizationsIDPutResponseFIDO\n                  type: object\n                  description: \u003e-\n                    The object sent in the PUT\n                    /thirdpartyRequests/authorizations/{ID} callback.\n                  properties: \u0026ref_148\n                    responseType:\n                      title: AuthorizationResponseType\n                      description: |\n                        The customer accepted the terms of the transfer\n                      type: string\n                      enum: \u0026ref_72\n                        - ACCEPTED\n                    signedPayload:\n                      title: SignedPayloadFIDO\n                      type: object\n                      properties: \u0026ref_146\n                        signedPayloadType:\n                          title: SignedPayloadTypeFIDO\n                          type: string\n                          enum: \u0026ref_73\n                            - FIDO\n                          description: \u003e-\n                            Describes a challenge that has been signed with FIDO\n                            Attestation flows\n                        fidoSignedPayload:\n                          title: FIDOPublicKeyCredentialAssertion\n                          type: object\n                          description: \u003e\n                            A data model representing a FIDO Assertion result.\n\n                            Derived from PublicKeyCredential Interface in\n                            WebAuthN.\n\n\n                            The PublicKeyCredential interface represents the\n                            below fields with a Type of\n\n                            Javascript ArrayBuffer.\n\n                            For this API, we represent ArrayBuffers as base64\n                            encoded utf-8 strings.\n\n\n                            https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32128-fidopublickeycredentialassertion\n                          properties: \u0026ref_74\n                            id:\n                              type: string\n                              description: \u003e\n                                credential id: identifier of pair of keys,\n                                base64 encoded\n\n                                https://w3c.github.io/webauthn/#ref-for-dom-credential-id\n                              minLength: 59\n                              maxLength: 118\n                            rawId:\n                              type: string\n                              description: \u003e\n                                raw credential id: identifier of pair of keys,\n                                base64 encoded.\n                              minLength: 59\n                              maxLength: 118\n                            response:\n                              type: object\n                              description: |\n                                AuthenticatorAssertionResponse\n                              properties:\n                                authenticatorData:\n                                  type: string\n                                  description: |\n                                    Authenticator data object.\n                                  minLength: 49\n                                  maxLength: 256\n                                clientDataJSON:\n                                  type: string\n                                  description: |\n                                    JSON string with client data.\n                                  minLength: 121\n                                  maxLength: 512\n                                signature:\n                                  type: string\n                                  description: \u003e\n                                    The signature generated by the private key\n                                    associated with this credential.\n                                  minLength: 59\n                                  maxLength: 256\n                                userHandle:\n                                  type: string\n                                  description: \u003e\n                                    This field is optionally provided by the\n                                    authenticator, and\n\n                                    represents the user.id that was supplied\n                                    during registration.\n                                  minLength: 1\n                                  maxLength: 88\n                              required:\n                                - authenticatorData\n                                - clientDataJSON\n                                - signature\n                              additionalProperties: false\n                            type:\n                              type: string\n                              description: \u003e-\n                                response type, we need only the type of\n                                public-key\n                              enum:\n                                - public-key\n                          required: \u0026ref_75\n                            - id\n                            - rawId\n                            - response\n                            - type\n                          additionalProperties: false\n                      required: \u0026ref_147\n                        - signedPayloadType\n                        - fidoSignedPayload\n                      additionalProperties: false\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_149\n                    - responseType\n                    - signedPayload\n                  additionalProperties: false\n                - title: ThirdpartyRequestsAuthorizationsIDPutResponseGeneric\n                  type: object\n                  description: \u003e-\n                    The object sent in the PUT\n                    /thirdpartyRequests/authorizations/{ID} callback.\n                  properties: \u0026ref_152\n                    responseType:\n                      title: AuthorizationResponseType\n                      description: |\n                        The customer accepted the terms of the transfer\n                      type: string\n                      enum: *ref_72\n                    signedPayload:\n                      title: SignedPayloadGeneric\n                      type: object\n                      properties: \u0026ref_150\n                        signedPayloadType:\n                          title: SignedPayloadTypeGeneric\n                          type: string\n                          enum: \u0026ref_76\n                            - GENERIC\n                          description: \u003e-\n                            Describes a challenge that has been signed with a\n                            private key\n                        genericSignedPayload:\n                          type: string\n                          pattern: ^[A-Za-z0-9-_]+[=]{0,2}$\n                          description: \u003e-\n                            The API data type BinaryString is a JSON String. The\n                            string is a base64url  encoding of a string of raw\n                            bytes, where padding (character ‘=’) is added at the\n                            end of the data if needed to ensure that the string\n                            is a multiple of 4 characters. The length\n                            restriction indicates the allowed number of\n                            characters.\n                      required: \u0026ref_151\n                        - signedPayloadType\n                        - genericSignedPayload\n                      additionalProperties: false\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_153\n                    - responseType\n                    - signedPayload\n                  additionalProperties: false\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /thirdpartyRequests/authorizations/{ID}/error:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    put:\n      tags:\n        - thirdpartyRequests\n        - sampled\n      operationId: PutThirdpartyRequestsAuthorizationsByIdAndError\n      summary: PutThirdpartyRequestsAuthorizationsByIdAndError\n      description: \u003e\n        The HTTP request `PUT /thirdpartyRequests/authorizations/{ID}/error` is\n        used by the DFSP or PISP to inform\n\n        the other party that something went wrong with a Thirdparty Transaction\n        Authorization Request.\n\n\n        The PISP may use this to tell the DFSP that the Thirdparty Transaction\n        Authorization Request is invalid or doesn't\n\n        match a `transactionRequestId`.\n\n\n        The DFSP may use this to tell the PISP that the signed challenge\n        returned in `PUT /thirdpartyRequest/authorizations/{ID}`\n\n        was invalid.\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Error information returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ErrorInformationObject\n              type: object\n              description: \u003e-\n                Data model for the complex type object that contains\n                ErrorInformation.\n              properties: *ref_48\n              required: *ref_49\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /thirdpartyRequests/verifications:\n    parameters:\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    post:\n      tags:\n        - thirdpartyRequests\n        - sampled\n      operationId: PostThirdpartyRequestsVerifications\n      summary: PostThirdpartyRequestsVerifications\n      description: \u003e\n        The HTTP request `POST /thirdpartyRequests/verifications` is used by the\n        DFSP to verify a third party authorization.\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: The thirdparty authorization details to verify\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - title: ThirdpartyRequestsVerificationsPostRequestFIDO\n                  type: object\n                  description: \u003e-\n                    The object sent in the POST\n                    /thirdpartyRequests/verifications request.\n                  properties: \u0026ref_154\n                    verificationRequestId:\n                      allOf:\n                        - title: CorrelationId\n                          type: string\n                          pattern: \u003e-\n                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                          description: \u003e-\n                            Identifier that correlates all messages of the same\n                            sequence. The API data type UUID (Universally Unique\n                            Identifier) is a JSON String in canonical format,\n                            conforming to [RFC\n                            4122](https://tools.ietf.org/html/rfc4122), that is\n                            restricted by a regular expression for\n                            interoperability reasons. A UUID is always 36\n                            characters long, 32 hexadecimal symbols and 4 dashes\n                            (‘-‘).\n                          example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                    challenge:\n                      type: string\n                      description: \u003e-\n                        Base64 encoded bytes - The challenge generated by the\n                        DFSP.\n                    consentId:\n                      allOf:\n                        - title: CorrelationId\n                          type: string\n                          pattern: \u003e-\n                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                          description: \u003e-\n                            Identifier that correlates all messages of the same\n                            sequence. The API data type UUID (Universally Unique\n                            Identifier) is a JSON String in canonical format,\n                            conforming to [RFC\n                            4122](https://tools.ietf.org/html/rfc4122), that is\n                            restricted by a regular expression for\n                            interoperability reasons. A UUID is always 36\n                            characters long, 32 hexadecimal symbols and 4 dashes\n                            (‘-‘).\n                          example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      description: \u003e\n                        The id of the stored consent object that contains the\n                        credential with which to verify\n\n                        the signed challenge against.\n                    signedPayloadType:\n                      title: SignedPayloadTypeFIDO\n                      type: string\n                      enum: *ref_73\n                      description: \u003e-\n                        Describes a challenge that has been signed with FIDO\n                        Attestation flows\n                    fidoSignedPayload:\n                      title: FIDOPublicKeyCredentialAssertion\n                      type: object\n                      description: \u003e\n                        A data model representing a FIDO Assertion result.\n\n                        Derived from PublicKeyCredential Interface in WebAuthN.\n\n\n                        The PublicKeyCredential interface represents the below\n                        fields with a Type of\n\n                        Javascript ArrayBuffer.\n\n                        For this API, we represent ArrayBuffers as base64\n                        encoded utf-8 strings.\n\n\n                        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32128-fidopublickeycredentialassertion\n                      properties: *ref_74\n                      required: *ref_75\n                      additionalProperties: false\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_155\n                    - verificationRequestId\n                    - challenge\n                    - consentId\n                    - signedPayloadType\n                    - fidoSignedPayload\n                - title: ThirdpartyRequestsVerificationsPostRequestGeneric\n                  type: object\n                  description: \u003e-\n                    The object sent in the POST\n                    /thirdpartyRequests/verifications request.\n                  properties: \u0026ref_156\n                    verificationRequestId:\n                      allOf:\n                        - title: CorrelationId\n                          type: string\n                          pattern: \u003e-\n                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                          description: \u003e-\n                            Identifier that correlates all messages of the same\n                            sequence. The API data type UUID (Universally Unique\n                            Identifier) is a JSON String in canonical format,\n                            conforming to [RFC\n                            4122](https://tools.ietf.org/html/rfc4122), that is\n                            restricted by a regular expression for\n                            interoperability reasons. A UUID is always 36\n                            characters long, 32 hexadecimal symbols and 4 dashes\n                            (‘-‘).\n                          example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                    challenge:\n                      type: string\n                      description: \u003e-\n                        Base64 encoded bytes - The challenge generated by the\n                        DFSP.\n                    consentId:\n                      allOf:\n                        - title: CorrelationId\n                          type: string\n                          pattern: \u003e-\n                            ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n                          description: \u003e-\n                            Identifier that correlates all messages of the same\n                            sequence. The API data type UUID (Universally Unique\n                            Identifier) is a JSON String in canonical format,\n                            conforming to [RFC\n                            4122](https://tools.ietf.org/html/rfc4122), that is\n                            restricted by a regular expression for\n                            interoperability reasons. A UUID is always 36\n                            characters long, 32 hexadecimal symbols and 4 dashes\n                            (‘-‘).\n                          example: b51ec534-ee48-4575-b6a9-ead2955b8069\n                      description: \u003e\n                        The id of the stored consent object that contains the\n                        credential with which to verify\n\n                        the signed challenge against.\n                    signedPayloadType:\n                      title: SignedPayloadTypeGeneric\n                      type: string\n                      enum: *ref_76\n                      description: \u003e-\n                        Describes a challenge that has been signed with a\n                        private key\n                    genericSignedPayload:\n                      type: string\n                      pattern: ^[A-Za-z0-9-_]+[=]{0,2}$\n                      description: \u003e-\n                        The API data type BinaryString is a JSON String. The\n                        string is a base64url  encoding of a string of raw\n                        bytes, where padding (character ‘=’) is added at the end\n                        of the data if needed to ensure that the string is a\n                        multiple of 4 characters. The length restriction\n                        indicates the allowed number of characters.\n                    extensionList:\n                      title: ExtensionList\n                      type: object\n                      description: \u003e-\n                        Data model for the complex type ExtensionList. An\n                        optional list of extensions, specific to deployment.\n                      properties: *ref_0\n                      required: *ref_1\n                  required: \u0026ref_157\n                    - verificationRequestId\n                    - challenge\n                    - consentId\n                    - signedPayloadType\n                    - genericSignedPayload\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /thirdpartyRequests/verifications/{ID}:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    get:\n      tags:\n        - thirdpartyRequests\n        - sampled\n      operationId: GetThirdpartyRequestsVerificationsById\n      summary: GetThirdpartyRequestsVerificationsById\n      description: \u003e\n        The HTTP request `/thirdpartyRequests/verifications/{ID}` is used to get\n\n        information regarding a previously created or requested authorization.\n        The *{ID}*\n\n        in the URI should contain the verification request ID\n      parameters:\n        - name: Accept\n          in: header\n          required: true\n          schema: *ref_45\n          description: \u003e-\n            The `Accept` header field indicates the version of the API the\n            client would like the server to use.\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n    put:\n      tags:\n        - thirdpartyRequests\n        - sampled\n      operationId: PutThirdpartyRequestsVerificationsById\n      summary: PutThirdpartyRequestsVerificationsById\n      description: \u003e-\n        The HTTP request `PUT /thirdpartyRequests/verifications/{ID}` is used by\n        the Auth-Service to inform the DFSP of a successful result in validating\n        the verification of a Thirdparty Transaction Request.\n\n        If the validation fails, the auth-service will send back `PUT\n        /thirdpartyRequests/verifications/{ID}` with `authenticationResponse:\n        'REJECTED'`.\n\n        In unplanned error cases the Auth-Service MUST use `PUT\n        /thirdpartyRequests/verifications/{ID}/error`.\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: The result of validating the Thirdparty Transaction Request\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ThirdpartyRequestsVerificationsIDPutResponse\n              type: object\n              description: \u003e-\n                Used by: Auth Service\n\n                The callback PUT /thirdpartyRequests/verifications/{ID} is used\n                to inform the client of the result of an authorization check.\n                The {ID} in the URI should contain the authorizationRequestId\n                which was used to request the check, or the {ID} that was used\n                in the GET /thirdpartyRequests/verifications/{ID}.\n\n                https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31821-put-thirdpartyrequestsverificationsid\n              properties: \u0026ref_159\n                authenticationResponse:\n                  title: AuthenticationResponse\n                  type: string\n                  enum: \u0026ref_158\n                    - VERIFIED\n                  description: \u003e-\n                    The AuthenticationResponse enumeration describes the result\n                    of authenticating verification request.\n\n                    Below are the allowed values for the enumeration\n                    AuthenticationResponse. - VERIFIED - The challenge was\n                    correctly signed.\n                extensionList:\n                  title: ExtensionList\n                  type: object\n                  description: \u003e-\n                    Data model for the complex type ExtensionList. An optional\n                    list of extensions, specific to deployment.\n                  properties: *ref_0\n                  required: *ref_1\n              required: \u0026ref_160\n                - authenticationResponse\n            example:\n              authenticationResponse: VERIFIED\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\n  /thirdpartyRequests/verifications/{ID}/error:\n    parameters:\n      - name: ID\n        in: path\n        required: true\n        schema: *ref_34\n        description: The identifier value.\n      - name: Content-Type\n        in: header\n        schema: *ref_35\n        required: true\n        description: \u003e-\n          The `Content-Type` header indicates the specific version of the API\n          used to send the payload body.\n      - name: Date\n        in: header\n        schema: *ref_36\n        required: true\n        description: The `Date` header field indicates the date when the request was sent.\n      - name: X-Forwarded-For\n        in: header\n        schema: *ref_37\n        required: false\n        description: \u003e-\n          The `X-Forwarded-For` header field is an unofficially accepted\n          standard used for informational purposes of the originating client IP\n          address, as a request might pass multiple proxies, firewalls, and so\n          on. Multiple `X-Forwarded-For` values should be expected and supported\n          by implementers of the API.\n\n\n          **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n          7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n          7239 is less-used and supported than `X-Forwarded-For`.\n      - name: FSPIOP-Source\n        in: header\n        schema: *ref_38\n        required: true\n        description: \u003e-\n          The `FSPIOP-Source` header field is a non-HTTP standard field used by\n          the API for identifying the sender of the HTTP request. The field\n          should be set by the original sender of the request. Required for\n          routing and signature verification (see header field\n          `FSPIOP-Signature`).\n      - name: FSPIOP-Destination\n        in: header\n        schema: *ref_39\n        required: false\n        description: \u003e-\n          The `FSPIOP-Destination` header field is a non-HTTP standard field\n          used by the API for HTTP header based routing of requests and\n          responses to the destination. The field must be set by the original\n          sender of the request if the destination is known (valid for all\n          services except GET /parties) so that any entities between the client\n          and the server do not need to parse the payload for routing purposes.\n          If the destination is not known (valid for service GET /parties), the\n          field should be left empty.\n      - name: FSPIOP-Encryption\n        in: header\n        schema: *ref_40\n        required: false\n        description: \u003e-\n          The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n          by the API for applying end-to-end encryption of the request.\n      - name: FSPIOP-Signature\n        in: header\n        schema: *ref_41\n        required: false\n        description: \u003e-\n          The `FSPIOP-Signature` header field is a non-HTTP standard field used\n          by the API for applying an end-to-end request signature.\n      - name: FSPIOP-URI\n        in: header\n        schema: *ref_42\n        required: false\n        description: \u003e-\n          The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n          API for signature verification, should contain the service URI.\n          Required if signature verification is used, for more information, see\n          [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n      - name: FSPIOP-HTTP-Method\n        in: header\n        schema: *ref_43\n        required: false\n        description: \u003e-\n          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field\n          used by the API for signature verification, should contain the service\n          HTTP method. Required if signature verification is used, for more\n          information, see [the API Signature\n          document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    put:\n      tags:\n        - thirdpartyRequests\n        - sampled\n      operationId: PutThirdpartyRequestsVerificationsByIdAndError\n      summary: PutThirdpartyRequestsVerificationsByIdAndError\n      description: \u003e\n        The HTTP request `PUT /thirdpartyRequests/verifications/{ID}/error` is\n        used by the Auth-Service to inform\n\n        the DFSP of a failure in validating or looking up the verification of a\n        Thirdparty Transaction Request.\n      parameters:\n        - name: Content-Length\n          in: header\n          required: false\n          schema: *ref_44\n          description: \u003e-\n            The `Content-Length` header field indicates the anticipated size of\n            the payload body. Only sent if there is a body.\n\n\n            **Note:** The API supports a maximum size of 5242880 bytes (5\n            Megabytes).\n      requestBody:\n        description: Error information returned.\n        required: true\n        content:\n          application/json:\n            schema:\n              title: ErrorInformationObject\n              type: object\n              description: \u003e-\n                Data model for the complex type object that contains\n                ErrorInformation.\n              properties: *ref_48\n              required: *ref_49\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n          content: *ref_18\n          headers: *ref_19\n        '401':\n          description: Unauthorized\n          content: *ref_20\n          headers: *ref_21\n        '403':\n          description: Forbidden\n          content: *ref_22\n          headers: *ref_23\n        '404':\n          description: Not Found\n          content: *ref_24\n          headers: *ref_25\n        '405':\n          description: Method Not Allowed\n          content: *ref_26\n          headers: *ref_27\n        '406':\n          description: Not Acceptable\n          content: *ref_28\n          headers: *ref_29\n        '501':\n          description: Not Implemented\n          content: *ref_30\n          headers: *ref_31\n        '503':\n          description: Service Unavailable\n          content: *ref_32\n          headers: *ref_33\ncomponents:\n  schemas:\n    PartyIdType:\n      title: PartyIdType\n      type: string\n      enum: *ref_77\n      description: \u003e\n        Below are the allowed values for the enumeration.\n\n        - MSISDN - An MSISDN (Mobile Station International Subscriber Directory\n\n        Number, that is, the phone number) is used as reference to a\n        participant.\n\n        The MSISDN identifier should be in international format according to the\n\n        [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).\n\n        Optionally, the MSISDN may be prefixed by a single plus sign, indicating\n        the\n\n        international prefix.\n\n        - EMAIL - An email is used as reference to a\n\n        participant. The format of the email should be according to the\n        informational\n\n        [RFC 3696](https://tools.ietf.org/html/rfc3696).\n\n        - PERSONAL_ID - A personal identifier is used as reference to a\n        participant.\n\n        Examples of personal identification are passport number, birth\n        certificate\n\n        number, and national registration number. The identifier number is added\n        in \n\n        the PartyIdentifier element. The personal identifier type is added in\n        the\n\n        PartySubIdOrType element.\n\n        - BUSINESS - A specific Business (for example, an organization or a\n        company)\n\n        is used as reference to a participant. The BUSINESS identifier can be in\n        any\n\n        format. To make a transaction connected to a specific username or bill\n        number\n\n        in a Business, the PartySubIdOrType element should be used.\n\n        - DEVICE - A specific device (for example, a POS or ATM) ID connected to\n        a\n\n        specific business or organization is used as reference to a Party.\n\n        For referencing a specific device under a specific business or\n        organization,\n\n        use the PartySubIdOrType element.\n\n        - ACCOUNT_ID - A bank account number or FSP account ID should be used as\n\n        reference to a participant. The ACCOUNT_ID identifier can be in any\n        format,\n\n        as formats can greatly differ depending on country and FSP.\n\n        - IBAN - A bank account number or FSP account ID is used as reference to\n        a\n\n        participant. The IBAN identifier can consist of up to 34 alphanumeric\n\n        characters and should be entered without whitespace.\n\n        - ALIAS An alias is used as reference to a participant. The alias should\n        be\n\n        created in the FSP as an alternative reference to an account owner.\n\n        Another example of an alias is a username in the FSP system.\n\n        The ALIAS identifier can be in any format. It is also possible to use\n        the\n\n        PartySubIdOrType element for identifying an account under an Alias\n        defined\n\n        by the PartyIdentifier.\n\n        - CONSENT - A Consent represents an agreement between a PISP, a Customer\n        and\n\n        a DFSP which allows the PISP permission to perform actions on behalf of\n        the \n\n        customer. A Consent has an authoritative source: either the DFSP who\n        issued \n\n        the Consent, or an Auth Service which administers the Consent.\n\n        - THIRD_PARTY_LINK - A Third Party Link represents an agreement between\n        a PISP,\n\n        a DFSP, and a specific Customer's account at the DFSP. The content of\n        the link \n\n        is created by the DFSP at the time when it gives permission to the PISP\n        for \n\n        specific access to a given account.\n      example: PERSONAL_ID\n    PartyIdentifier:\n      title: PartyIdentifier\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Identifier of the Party.\n      example: '16135551212'\n    PartySubIdOrType:\n      title: PartySubIdOrType\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: \u003e-\n        Either a sub-identifier of a PartyIdentifier, or a sub-type of the\n        PartyIdType, normally a PersonalIdentifierType.\n    FspId:\n      title: FspId\n      type: string\n      minLength: 1\n      maxLength: 32\n      description: FSP identifier.\n    ExtensionKey:\n      title: ExtensionKey\n      type: string\n      minLength: 1\n      maxLength: 32\n      description: Extension key.\n    ExtensionValue:\n      title: ExtensionValue\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Extension value.\n    Extension:\n      title: Extension\n      type: object\n      description: Data model for the complex type Extension.\n      properties: *ref_78\n      required: *ref_79\n    ExtensionList:\n      title: ExtensionList\n      type: object\n      description: \u003e-\n        Data model for the complex type ExtensionList. An optional list of\n        extensions, specific to deployment.\n      properties: *ref_0\n      required: *ref_1\n    PartyIdInfo:\n      title: PartyIdInfo\n      type: object\n      description: Data model for the complex type PartyIdInfo.\n      properties: *ref_2\n      required: *ref_3\n    ErrorCode:\n      title: ErrorCode\n      type: string\n      pattern: ^[1-9]\\d{3}$\n      description: \u003e-\n        The API data type ErrorCode is a JSON String of four characters,\n        consisting of digits only. Negative numbers are not allowed. A leading\n        zero is not allowed. Each error code in the API is a four-digit number,\n        for example, 1234, where the first number (1 in the example) represents\n        the high-level error category, the second number (2 in the example)\n        represents the low-level error category, and the last two numbers (34 in\n        the example) represent the specific error.\n      example: '5100'\n    ErrorDescription:\n      title: ErrorDescription\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Error description string.\n    ErrorInformation:\n      title: ErrorInformation\n      type: object\n      description: Data model for the complex type ErrorInformation.\n      properties: *ref_13\n      required: *ref_14\n    PartyResult:\n      title: PartyResult\n      type: object\n      description: Data model for the complex type PartyResult.\n      properties: *ref_7\n      required: *ref_8\n    Currency:\n      title: Currency\n      description: \u003e-\n        The currency codes defined in [ISO\n        4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter\n        alphabetic codes are used as the standard naming representation for\n        currencies.\n      type: string\n      minLength: 3\n      maxLength: 3\n      enum: *ref_4\n    ParticipantsIDPutResponse:\n      title: ParticipantsIDPutResponse\n      type: object\n      description: The object sent in the PUT /participants/{ID} callback.\n      properties: *ref_62\n      required: *ref_63\n    MerchantClassificationCode:\n      title: MerchantClassificationCode\n      type: string\n      pattern: ^[\\d]{1,4}$\n      description: \u003e-\n        A limited set of pre-defined numbers. This list would be a limited set\n        of numbers identifying a set of popular merchant types like School Fees,\n        Pubs and Restaurants, Groceries, etc.\n    PartyName:\n      title: PartyName\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Name of the Party. Could be a real name or a nickname.\n    FirstName:\n      title: FirstName\n      type: string\n      minLength: 1\n      maxLength: 128\n      pattern: \u003e-\n        ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n        .,''-]{1,128}$\n      description: First name of the Party (Name Type).\n      example: Henrik\n    MiddleName:\n      title: MiddleName\n      type: string\n      minLength: 1\n      maxLength: 128\n      pattern: \u003e-\n        ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n        .,''-]{1,128}$\n      description: Middle name of the Party (Name Type).\n      example: Johannes\n    LastName:\n      title: LastName\n      type: string\n      minLength: 1\n      maxLength: 128\n      pattern: \u003e-\n        ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n        .,''-]{1,128}$\n      description: Last name of the Party (Name Type).\n      example: Karlsson\n    PartyComplexName:\n      title: PartyComplexName\n      type: object\n      description: Data model for the complex type PartyComplexName.\n      properties: *ref_80\n    DateOfBirth:\n      title: DateofBirth (type Date)\n      type: string\n      pattern: \u003e-\n        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\n      description: Date of Birth of the Party.\n      example: '1966-06-16'\n    PartyPersonalInfo:\n      title: PartyPersonalInfo\n      type: object\n      description: Data model for the complex type PartyPersonalInfo.\n      properties: *ref_81\n    Party:\n      title: Party\n      type: object\n      description: Data model for the complex type Party.\n      properties: *ref_9\n      required: *ref_10\n    PartiesTypeIDPutResponse:\n      title: PartiesTypeIDPutResponse\n      type: object\n      description: \u003e\n        The object sent in the PUT /parties/{Type}/{ID} callback.\n\n\n        This is a variant based on FSPIOP `PartiesTypeIDPutResponse`\n        specification.\n\n        Main difference being that it returns a `Party` with the newly added\n\n        `accounts` property.\n      properties: *ref_82\n      required: *ref_83\n    Amount:\n      title: Amount\n      type: string\n      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$\n      description: \u003e-\n        The API data type Amount is a JSON String in a canonical format that is\n        restricted by a regular expression for interoperability reasons. This\n        pattern does not allow any trailing zeroes at all, but allows an amount\n        without a minor currency unit. It also only allows four digits in the\n        minor currency unit; a negative value is not allowed. Using more than 18\n        digits in the major currency unit is not allowed.\n      example: '123.45'\n    Money:\n      title: Money\n      type: object\n      description: Data model for the complex type Money.\n      properties: *ref_5\n      required: *ref_6\n    DateTime:\n      title: DateTime\n      type: string\n      pattern: \u003e-\n        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n      description: \u003e-\n        The API data type DateTime is a JSON String in a lexical format that is\n        restricted by a regular expression for interoperability reasons. The\n        format is according to [ISO\n        8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed\n        in a combined date, time and time zone format. A more readable version\n        of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n        \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z\n        indicates Zulu time zone, same as UTC).\n      example: '2016-05-24T08:38:08.699-04:00'\n    Latitude:\n      title: Latitude\n      type: string\n      pattern: \u003e-\n        ^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$\n      description: \u003e-\n        The API data type Latitude is a JSON String in a lexical format that is\n        restricted by a regular expression for interoperability reasons.\n      example: '+45.4215'\n    Longitude:\n      title: Longitude\n      type: string\n      pattern: \u003e-\n        ^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$\n      description: \u003e-\n        The API data type Longitude is a JSON String in a lexical format that is\n        restricted by a regular expression for interoperability reasons.\n      example: '+75.6972'\n    GeoCode:\n      title: GeoCode\n      type: object\n      description: \u003e-\n        Data model for the complex type GeoCode. Indicates the geographic\n        location from where the transaction was initiated.\n      properties: *ref_11\n      required: *ref_12\n    IlpPacket:\n      title: IlpPacket\n      type: string\n      pattern: ^[A-Za-z0-9-_]+[=]{0,2}$\n      minLength: 1\n      maxLength: 32768\n      description: Information for recipient (transport layer information).\n      example: \u003e-\n        AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA\n    IlpCondition:\n      title: IlpCondition\n      type: string\n      pattern: ^[A-Za-z0-9-_]{43}$\n      maxLength: 48\n      description: Condition that must be attached to the transfer by the Payer.\n    QuotesIDPutResponse:\n      title: QuotesIDPutResponse\n      type: object\n      description: The object sent in the PUT /quotes/{ID} callback.\n      properties: *ref_84\n      required: *ref_85\n    TransactionRequestState:\n      title: TransactionRequestState\n      type: string\n      enum: *ref_69\n      description: |-\n        Below are the allowed values for the enumeration.\n        - RECEIVED - Payer FSP has received the transaction from the Payee FSP.\n        - PENDING - Payer FSP has sent the transaction request to the Payer.\n        - ACCEPTED - Payer has approved the transaction.\n        - REJECTED - Payer has rejected the transaction.\n      example: RECEIVED\n    TransactionState:\n      title: TransactionState\n      type: string\n      enum: *ref_86\n      description: |-\n        Below are the allowed values for the enumeration.\n        - RECEIVED - Payee FSP has received the transaction from the Payer FSP.\n        - PENDING - Payee FSP has validated the transaction.\n        - COMPLETED - Payee FSP has successfully performed the transaction.\n        - REJECTED - Payee FSP has failed to perform the transaction.\n      example: RECEIVED\n    ThirdpartyRequestsTransactionsIDPatchResponse:\n      title: ThirdpartyRequestsTransactionsIDPatchResponse\n      type: object\n      description: \u003e-\n        Used by: DFSP\n\n        The issuing PISP will expect a response to their request for a transfer\n        which describes the finalized state of the requested transfer.\n\n        This response will be given by a PATCH call on the\n        /thirdpartyRequests/transactions/{ID} resource.\n\n        The {ID} given in the query string should be the transactionRequestId\n        which was originally used by the PISP to identify the transaction\n        request.\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31612-post-thirdpartyrequestsauthorizations\n      properties: *ref_70\n      required: *ref_71\n    AuthorizationResponseType:\n      title: AuthorizationResponseType\n      description: |\n        Enum containing authorization response information; if the customer \n        accepted the terms of the transfer, or rejected the terms.\n      type: string\n      enum: *ref_87\n    ConsentStatusIssued:\n      title: ConsentStatusIssued\n      type: string\n      enum: *ref_51\n      description: |-\n        Allowed values for the enumeration ConsentStatus\n        - ISSUED - The consent has been issued by the DFSP\n    IlpFulfilment:\n      title: IlpFulfilment\n      type: string\n      pattern: ^[A-Za-z0-9-_]{43}$\n      maxLength: 48\n      description: Fulfilment that must be attached to the transfer by the Payee.\n      example: WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8\n    Integer:\n      title: Integer\n      type: string\n      pattern: ^[1-9]\\d*$\n      description: \u003e-\n        The API data type Integer is a JSON String consisting of digits only.\n        Negative numbers and leading zeroes are not allowed. The data type is\n        always limited to a specific number of digits.\n    Note:\n      title: Note\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Memo assigned to transaction.\n      example: Note sent to Payee.\n    PartyIdTypeTPLink:\n      title: PartyIdTypeTPLink\n      type: string\n      enum: *ref_88\n      description: \u003e\n        - THIRD_PARTY_LINK - is the DFSP's internal reference which allows DFSP\n        to find out the corresponding consent\n      example: PERSONAL_ID\n    PartyIdInfoTPLink:\n      title: PartyIdInfo\n      type: object\n      description: Data model for the complex type PartyIdInfo.\n      properties: *ref_89\n      required: *ref_90\n    ServiceType:\n      title: ServiceType\n      type: string\n      description: \u003e-\n        The ServiceType enumeration describes the types of role for which a DFSP\n        may query using the /services resource.\n\n        Below are the allowed values for the enumeration ServiceType -\n        THIRD_PARTY_DFSP - Enum used to query for DFSPs that have thirdparty\n        features enabled. - PISP - Enum used to query for PISPs. - AUTH_SERVICE\n        - Participants which provide Authentication Services.\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3229-servicetype\n      enum: *ref_91\n    CorrelationId:\n      title: CorrelationId\n      type: string\n      pattern: \u003e-\n        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n      description: \u003e-\n        Identifier that correlates all messages of the same sequence. The API\n        data type UUID (Universally Unique Identifier) is a JSON String in\n        canonical format, conforming to [RFC\n        4122](https://tools.ietf.org/html/rfc4122), that is restricted by a\n        regular expression for interoperability reasons. A UUID is always 36\n        characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).\n      example: b51ec534-ee48-4575-b6a9-ead2955b8069\n    ParticipantsPostRequest:\n      title: ParticipantsPostRequest\n      type: object\n      description: The object sent in the POST /participants request.\n      properties: *ref_60\n      required: *ref_61\n    AmountType:\n      title: AmountType\n      type: string\n      enum: *ref_66\n      description: \u003e-\n        Below are the allowed values for the enumeration AmountType.\n\n        - SEND - Amount the Payer would like to send, that is, the amount that\n        should be withdrawn from the Payer account including any fees.\n\n        - RECEIVE - Amount the Payer would like the Payee to receive, that is,\n        the amount that should be sent to the receiver exclusive of any fees.\n      example: RECEIVE\n    TransactionScenario:\n      title: TransactionScenario\n      type: string\n      enum: *ref_92\n      description: \u003e-\n        Below are the allowed values for the enumeration.\n\n        - DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a\n        normal scenario, electronic funds are transferred from a Business\n        account to a Consumer account, and physical cash is given from the\n        Consumer to the Business User.\n\n        - WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction.\n        In a normal scenario, electronic funds are transferred from a Consumer’s\n        account to a Business account, and physical cash is given from the\n        Business User to the Consumer.\n\n        - TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to\n        Consumer) transaction.\n\n        - PAYMENT - Usually used for performing a transaction from a Consumer to\n        a Merchant or Organization, but could also be for a B2B (Business to\n        Business) payment. The transaction could be online for a purchase in an\n        Internet store, in a physical store where both the Consumer and Business\n        User are present, a bill payment, a donation, and so on.\n\n        - REFUND - Used for performing a refund of transaction.\n      example: DEPOSIT\n    TransactionSubScenario:\n      title: TransactionSubScenario\n      type: string\n      pattern: ^[A-Z_]{1,32}$\n      description: \u003e-\n        Possible sub-scenario, defined locally within the scheme (UndefinedEnum\n        Type).\n      example: LOCALLY_DEFINED_SUBSCENARIO\n    TransactionInitiator:\n      title: TransactionInitiator\n      type: string\n      enum: *ref_93\n      description: \u003e-\n        Below are the allowed values for the enumeration.\n\n        - PAYER - Sender of funds is initiating the transaction. The account to\n        send from is either owned by the Payer or is connected to the Payer in\n        some way.\n\n        - PAYEE - Recipient of the funds is initiating the transaction by\n        sending a transaction request. The Payer must approve the transaction,\n        either automatically by a pre-generated OTP or by pre-approval of the\n        Payee, or by manually approving in his or her own Device.\n      example: PAYEE\n    TransactionInitiatorType:\n      title: TransactionInitiatorType\n      type: string\n      enum: *ref_94\n      description: |-\n        Below are the allowed values for the enumeration.\n        - CONSUMER - Consumer is the initiator of the transaction.\n        - AGENT - Agent is the initiator of the transaction.\n        - BUSINESS - Business is the initiator of the transaction.\n        - DEVICE - Device is the initiator of the transaction.\n      example: CONSUMER\n    RefundReason:\n      title: RefundReason\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Reason for the refund.\n      example: Free text indicating reason for the refund.\n    Refund:\n      title: Refund\n      type: object\n      description: Data model for the complex type Refund.\n      properties: *ref_95\n      required: *ref_96\n    BalanceOfPayments:\n      title: BalanceOfPayments\n      type: string\n      pattern: ^[1-9]\\d{2}$\n      description: \u003e-\n        (BopCode) The API data type\n        [BopCode](https://www.imf.org/external/np/sta/bopcode/) is a JSON String\n        of 3 characters, consisting of digits only. Negative numbers are not\n        allowed. A leading zero is not allowed.\n      example: '123'\n    TransactionType:\n      title: TransactionType\n      type: object\n      description: Data model for the complex type TransactionType.\n      properties: *ref_67\n      required: *ref_68\n    QuotesPostRequest:\n      title: QuotesPostRequest\n      type: object\n      description: The object sent in the POST /quotes request.\n      properties: *ref_97\n      required: *ref_98\n    ErrorInformationResponse:\n      title: ErrorInformationResponse\n      type: object\n      description: \u003e-\n        Data model for the complex type object that contains an optional element\n        ErrorInformation used along with 4xx and 5xx responses.\n      properties: *ref_15\n    Name:\n      title: Name\n      type: string\n      pattern: ^(?!\\s*$)[\\w .,'-]{1,128}$\n      description: \u003e-\n        The API data type Name is a JSON String, restricted by a regular\n        expression to avoid characters which are generally not used in a name.\n\n\n        Regular Expression - The regular expression for restricting the Name\n        type is \"^(?!\\s*$)[\\w .,'-]{1,128}$\". The restriction does not allow a\n        string consisting of whitespace only, all Unicode characters are\n        allowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,)\n        and space characters ( ).\n\n\n        **Note:** In some programming languages, Unicode support must be\n        specifically enabled. For example, if Java is used, the flag\n        UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters.\n    AccountAddress:\n      title: AccountAddress\n      type: string\n      description: \u003e-\n        The AccountAddress data type is a variable length string with a maximum\n        size of 1023 characters and consists of:\n\n        Alphanumeric characters, upper or lower case. (Addresses are\n        case-sensitive so that they can contain data encoded in formats such as\n        base64url.)\n\n        - Underscore (_) - Tilde (~) - Hyphen (-) - Period (.) Addresses MUST\n        NOT end in a period (.) character\n\n        An entity providing accounts to parties (i.e. a participant) can provide\n        any value for an AccountAddress that is meaningful to that entity. It\n        does not need to provide an address that makes the account identifiable\n        outside the entity's domain.\n\n        IMPORTANT: The policy for defining addresses and the life-cycle of these\n        is at the discretion of the address space owner (the payer DFSP in this\n        case).\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3212-accountaddress\n      pattern: ^([0-9A-Za-z_~\\-\\.]+[0-9A-Za-z_~\\-])$\n      minLength: 1\n      maxLength: 1023\n    Account:\n      title: Account\n      type: object\n      description: \u003e-\n        Data model for the complex type Account.\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3211-account\n      properties: *ref_99\n      required: *ref_100\n    AccountList:\n      title: AccountList\n      type: array\n      description: \u003e-\n        The AccountList data model is used to hold information about the\n        accounts that a party controls.\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3213-accountlist\n      items: *ref_101\n      minItems: 1\n      maxItems: 256\n    AccountsIDPutResponse:\n      title: AccountsIDPutResponse\n      type: object\n      description: \u003e-\n        Callback and data model information for GET /accounts/{ID}:\n\n        Callback - PUT /accounts/{ID} Error Callback - PUT /accounts/{ID}/error\n        Data Model - Empty body\n\n        The PUT /accounts/{ID} response is used to inform the requester of the\n        result of a request for accounts information. The identifier ID given in\n        the call are the values given in the original request.\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31121--put-accountsid\n      properties: *ref_102\n      required: *ref_103\n    ErrorInformationObject:\n      title: ErrorInformationObject\n      type: object\n      description: Data model for the complex type object that contains ErrorInformation.\n      properties: *ref_48\n      required: *ref_49\n    ScopeAction:\n      title: ScopeAction\n      type: string\n      description: \u003e\n        The ScopeAction element contains an access type which a PISP can request\n\n        from a DFSP, or which a DFSP can grant to a PISP.\n\n        It must be a member of the appropriate enumeration.\n\n\n        - ACCOUNTS_GET_BALANCE: PISP can request a balance for the linked\n        account\n\n        - ACCOUNTS_TRANSFER: PISP can request a transfer of funds from the\n        linked account in the DFSP\n\n        - ACCOUNTS_STATEMENT: PISP can request a statement of individual\n        transactions on a user's account\n      enum: *ref_104\n    Scope:\n      title: Scope\n      type: object\n      description: \u003e-\n        The Scope element contains an identifier defining, in the terms of a\n        DFSP, an account on which access types can be requested or granted. It\n        also defines the access types which are requested or granted.\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32121-scope\n      properties: *ref_46\n      required: *ref_47\n    ConsentRequestChannelType:\n      title: ConsentRequestChannelType\n      type: string\n      enum: *ref_105\n      description: |\n        The auth channel being used for the consent request.\n        - WEB - DFSP can support authorization via a web-based login.\n        - OTP - DFSP can support authorization via a One Time PIN.\n    Uri:\n      title: Uri\n      type: string\n      pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n      minLength: 1\n      maxLength: 512\n      description: \u003e\n        The API data type Uri is a JSON string in a canonical format that is\n        restricted by a regular expression for interoperability reasons.\n    ConsentRequestsPostRequest:\n      title: ConsentRequestsPostRequest\n      type: object\n      description: \u003e-\n        Used by: PISP\n\n        The HTTP request POST /consentRequests is used to request a DFSP to\n        grant access to one or more accounts owned by a customer of the DFSP for\n        the PISP who sends the request.\n\n        Callback and data model for POST /consentRequests:\n\n        Callback: PUT /consentRequests/{ID} Error callback: PUT\n        /consentRequests/{ID}/error Data model - see below url\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31212-post-consentrequests\n      properties: *ref_106\n      required: *ref_107\n    ConsentRequestChannelTypeWeb:\n      title: ConsentRequestChannelTypeWeb\n      type: string\n      enum: *ref_108\n      description: |\n        The web auth channel being used for `PUT /consentRequest/{ID}` request.\n    ConsentRequestsIDPutResponseWeb:\n      title: ConsentRequestsIDPutResponseWeb\n      type: object\n      description: \u003e\n        The object sent in a `PUT /consentRequests/{ID}` request.\n\n\n        Schema used in the request consent phase of the account linking web\n        flow,\n\n        the result is the PISP being instructed on a specific URL where this\n\n        supposed user should be redirected. This URL should be a place where\n\n        the user can prove their identity (e.g., by logging in).\n      properties: *ref_109\n      required: *ref_110\n      additionalProperties: false\n    ConsentRequestChannelTypeOTP:\n      title: ConsentRequestChannelTypeOTP\n      type: string\n      enum: *ref_111\n      description: |\n        The OTP auth channel being used for `PUT /consentRequests/{ID}` request.\n    ConsentRequestsIDPutResponseOTP:\n      title: ConsentRequestsIDPutResponseOTP\n      type: object\n      description: \u003e\n        The object sent in a `PUT /consentRequests/{ID}` request.\n\n\n        Schema used in the request consent phase of the account linking OTP/SMS\n        flow.\n      properties: *ref_112\n      required: *ref_113\n      additionalProperties: false\n    BinaryString:\n      type: string\n      pattern: ^[A-Za-z0-9-_]+[=]{0,2}$\n      description: \u003e-\n        The API data type BinaryString is a JSON String. The string is a\n        base64url  encoding of a string of raw bytes, where padding (character\n        ‘=’) is added at the end of the data if needed to ensure that the string\n        is a multiple of 4 characters. The length restriction indicates the\n        allowed number of characters.\n    ConsentRequestsIDPatchRequest:\n      title: ConsentRequestsIDPatchRequest\n      type: object\n      description: \u003e-\n        Used by: PISP\n\n        After the user completes an out-of-band authorization with the DFSP, the\n        PISP will receive a token which they can use to prove to the DFSP that\n        the user trusts this PISP.\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31222-patch-consentrequestsid\n      properties: *ref_114\n      required: *ref_115\n    CredentialType:\n      title: CredentialType\n      type: string\n      enum: *ref_54\n      description: \u003e-\n        The type of the Credential. - \"FIDO\" - The credential is based on a FIDO\n        challenge. Its payload is a FIDOPublicKeyCredentialAttestation object. -\n        \"GENERIC\" - The credential is based on a simple public key validation.\n        Its payload is a GenericCredential object.\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#3226-credentialtype\n    CredentialStatusPending:\n      title: CredentialStatusPending\n      type: string\n      enum: *ref_116\n      description: |\n        The status of the Credential.\n        - \"PENDING\" - The credential has been created, but has not been verified\n    GenericCredential:\n      title: GenericCredential\n      type: object\n      description: \u003e\n        A publicKey + signature of a challenge for a generic public/private\n        keypair.\n      properties: *ref_56\n      required: *ref_57\n      additionalProperties: false\n    FIDOPublicKeyCredentialAttestation:\n      title: FIDOPublicKeyCredentialAttestation\n      type: object\n      description: \u003e\n        A data model representing a FIDO Attestation result. Derived from \n\n        [`PublicKeyCredential`\n        Interface](https://w3c.github.io/webauthn/#iface-pkcredential).\n\n\n        The `PublicKeyCredential` interface represents the below fields with\n\n        a Type of Javascript\n        [ArrayBuffer](https://heycam.github.io/webidl/#idl-ArrayBuffer).\n\n        For this API, we represent ArrayBuffers as base64 encoded utf-8 strings.\n      properties: *ref_58\n      required: *ref_59\n      additionalProperties: false\n    SignedCredential:\n      title: SignedCredential\n      type: object\n      description: \u003e\n        A credential used to allow a user to prove their identity and access\n\n        to an account with a DFSP.\n\n\n        SignedCredential is a special formatting of the credential to allow us\n        to be\n\n        more explicit about the `status` field - it should only ever be PENDING\n        when\n\n        updating a credential.\n      properties: *ref_52\n      required: *ref_53\n      additionalProperties: false\n    ConsentStatus:\n      title: ConsentStatus\n      type: string\n      enum: *ref_50\n      description: |-\n        Allowed values for the enumeration ConsentStatus\n        - ISSUED - The consent has been issued by the DFSP\n        - REVOKED - The consent has been revoked\n    ConsentsPostRequestAUTH:\n      title: ConsentPostRequestAUTH\n      type: object\n      description: |\n        The object sent in a `POST /consents` request to the Auth-Service\n        by a DFSP to store registered Consent and credential\n      properties: *ref_117\n      required: *ref_118\n      additionalProperties: false\n    ConsentsPostRequestPISP:\n      title: ConsentPostRequestPISP\n      type: object\n      description: |\n        The provisional Consent object sent by the DFSP in `POST /consents`.\n      properties: *ref_119\n      required: *ref_120\n    ConsentsIDPutResponseSigned:\n      title: ConsentsIDPutResponseSigned\n      type: object\n      description: \u003e\n        The HTTP request `PUT /consents/{ID}` is used by the PISP to update a\n        Consent with a signed challenge and register a credential.\n\n        Called by a `PISP` to after signing a challenge. Sent to a DFSP for\n        verification.\n      properties: *ref_121\n      required: *ref_122\n      additionalProperties: false\n    CredentialStatusVerified:\n      title: CredentialStatusVerified\n      type: string\n      enum: *ref_55\n      description: |\n        The status of the Credential.\n        - \"VERIFIED\" - The Credential is valid and verified.\n    VerifiedCredential:\n      title: VerifiedCredential\n      type: object\n      description: \u003e\n        A credential used to allow a user to prove their identity and access\n\n        to an account with a DFSP.\n\n\n        VerifiedCredential is a special formatting of Credential to allow us to\n        be\n\n        more explicit about the `status` field - it should only ever be VERIFIED\n        when\n\n        updating a credential.\n      properties: *ref_123\n      required: *ref_124\n      additionalProperties: false\n    ConsentsIDPutResponseVerified:\n      title: ConsentsIDPutResponseVerified\n      type: object\n      description: \u003e\n        The HTTP request `PUT /consents/{ID}` is used by the DFSP or\n        Auth-Service to update a Consent object once it has been Verified.\n\n        Called by a `auth-service` to notify a DFSP that a credential has been\n        verified and registered.\n      properties: *ref_125\n      required: *ref_126\n      additionalProperties: false\n    ConsentsIDPatchResponseVerified:\n      title: ConsentsIDPatchResponseVerified\n      description: |\n        PATCH /consents/{ID} request object.\n\n        Sent by the DFSP to the PISP when a consent is issued and verified.\n        Used in the \"Register Credential\" part of the Account linking flow.\n      type: object\n      properties: *ref_127\n      required: *ref_128\n    ConsentStatusRevoked:\n      title: ConsentStatusRevoked\n      type: string\n      enum: *ref_129\n      description: |-\n        Allowed values for the enumeration ConsentStatus\n        - REVOKED - The consent has been revoked\n    ConsentsIDPatchResponseRevoked:\n      title: ConsentsIDPatchResponseRevoked\n      description: |\n        PATCH /consents/{ID} request object.\n\n        Sent to both the PISP and DFSP when a consent is revoked.\n        Used in the \"Unlinking\" part of the Account Unlinking flow.\n      type: object\n      properties: *ref_130\n      required: *ref_131\n    ParticipantsTypeIDPutResponse:\n      title: ParticipantsTypeIDPutResponse\n      type: object\n      description: \u003e-\n        The object sent in the PUT /participants/{Type}/{ID}/{SubId} and\n        /participants/{Type}/{ID} callbacks.\n      properties: *ref_132\n    ParticipantsTypeIDSubIDPostRequest:\n      title: ParticipantsTypeIDSubIDPostRequest\n      type: object\n      description: \u003e-\n        The object sent in the POST /participants/{Type}/{ID}/{SubId} and\n        /participants/{Type}/{ID} requests. An additional optional ExtensionList\n        element has been added as part of v1.1 changes.\n      properties: *ref_133\n      required: *ref_134\n    ServicesServiceTypePutResponse:\n      title: ServicesServiceTypePutResponse\n      type: object\n      description: \u003e-\n        Used by: Switch\n\n        The callback PUT /services/{ServiceType} is used to inform the client of\n        a successful result of the service information lookup.\n\n        Callback and data model information for GET /services/{ServiceType}:\n\n        Callback - PUT /services/{ServiceType} Error Callback - PUT\n        /services/{ServiceType}/error Data Model - Empty body\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31531-put-servicesservicetype\n      properties: *ref_135\n      required: *ref_136\n    ThirdpartyRequestsTransactionsPostRequest:\n      title: ThirdpartyRequestsTransactionsPostRequest\n      type: object\n      description: \u003e-\n        Used by: PISP\n\n        The HTTP request POST /thirdpartyRequests/transactions is used to\n        request the creation of a transaction request on the server for the\n        transfer described in the request.\n\n        Callback and data model information for POST\n        /thirdpartyRequests/transactions:\n\n        Callback - PUT /thirdpartyRequests/transactions/{ID} Error Callback -\n        PUT /thirdpartyRequests/transactions/{ID}/error Data Model - See link\n        below\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31712-post-thirdpartyrequeststransactions\n      properties: *ref_137\n      required: *ref_138\n    ThirdpartyRequestsTransactionsIDPutResponse:\n      title: ThirdpartyRequestsTransactionsIDPutResponse\n      type: object\n      description: \u003e-\n        Used by: DFSP\n\n        After a PISP requests the creation of a Third Party Transaction request\n        (POST /thirdpartyRequests/transactions) or the status of a previously\n        created Third Party Transaction request (GET\n        /thirdpartyRequests/transactions/{ID}), the DFSP will send this\n        callback.\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31721-put-thirdpartyrequeststransactionsid\n      properties: *ref_139\n      required: *ref_140\n    ThirdpartyRequestsAuthorizationsPostRequest:\n      title: ThirdpartyRequestsAuthorizationsPostRequest\n      description: \u003e-\n        Used by: DFSP\n\n        The HTTP request POST /thirdpartyRequests/authorizations is used to\n        request the validation by a customer for the transfer described in the\n        request.\n\n        Callback and data model information for POST\n        /thirdpartyRequests/authorizations:\n\n        Callback - PUT /thirdpartyRequests/authorizations/{ID} Error Callback -\n        PUT /thirdpartyRequests/authorizations/{ID}/error Data Model - See below\n        url\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31612-post-thirdpartyrequestsauthorizations\n      type: object\n      properties: *ref_141\n      required: *ref_142\n      additionalProperties: false\n    AuthorizationResponseTypeRejected:\n      title: AuthorizationResponseTypeRejected\n      description: |\n        The customer rejected the terms of the transfer.\n      type: string\n      enum: *ref_143\n    ThirdpartyRequestsAuthorizationsIDPutResponseRejected:\n      title: ThirdpartyRequestsAuthorizationsIDPutResponseRejected\n      type: object\n      description: \u003e-\n        The object sent in the PUT /thirdpartyRequests/authorizations/{ID}\n        callback.\n      properties: *ref_144\n      required: *ref_145\n    AuthorizationResponseTypeAccepted:\n      title: AuthorizationResponseType\n      description: |\n        The customer accepted the terms of the transfer\n      type: string\n      enum: *ref_72\n    SignedPayloadTypeFIDO:\n      title: SignedPayloadTypeFIDO\n      type: string\n      enum: *ref_73\n      description: Describes a challenge that has been signed with FIDO Attestation flows\n    FIDOPublicKeyCredentialAssertion:\n      title: FIDOPublicKeyCredentialAssertion\n      type: object\n      description: \u003e\n        A data model representing a FIDO Assertion result.\n\n        Derived from PublicKeyCredential Interface in WebAuthN.\n\n\n        The PublicKeyCredential interface represents the below fields with a\n        Type of\n\n        Javascript ArrayBuffer.\n\n        For this API, we represent ArrayBuffers as base64 encoded utf-8 strings.\n\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#32128-fidopublickeycredentialassertion\n      properties: *ref_74\n      required: *ref_75\n      additionalProperties: false\n    SignedPayloadFIDO:\n      title: SignedPayloadFIDO\n      type: object\n      properties: *ref_146\n      required: *ref_147\n      additionalProperties: false\n    ThirdpartyRequestsAuthorizationsIDPutResponseFIDO:\n      title: ThirdpartyRequestsAuthorizationsIDPutResponseFIDO\n      type: object\n      description: \u003e-\n        The object sent in the PUT /thirdpartyRequests/authorizations/{ID}\n        callback.\n      properties: *ref_148\n      required: *ref_149\n      additionalProperties: false\n    SignedPayloadTypeGeneric:\n      title: SignedPayloadTypeGeneric\n      type: string\n      enum: *ref_76\n      description: Describes a challenge that has been signed with a private key\n    SignedPayloadGeneric:\n      title: SignedPayloadGeneric\n      type: object\n      properties: *ref_150\n      required: *ref_151\n      additionalProperties: false\n    ThirdpartyRequestsAuthorizationsIDPutResponseGeneric:\n      title: ThirdpartyRequestsAuthorizationsIDPutResponseGeneric\n      type: object\n      description: \u003e-\n        The object sent in the PUT /thirdpartyRequests/authorizations/{ID}\n        callback.\n      properties: *ref_152\n      required: *ref_153\n      additionalProperties: false\n    ThirdpartyRequestsVerificationsPostRequestFIDO:\n      title: ThirdpartyRequestsVerificationsPostRequestFIDO\n      type: object\n      description: The object sent in the POST /thirdpartyRequests/verifications request.\n      properties: *ref_154\n      required: *ref_155\n    ThirdpartyRequestsVerificationsPostRequestGeneric:\n      title: ThirdpartyRequestsVerificationsPostRequestGeneric\n      type: object\n      description: The object sent in the POST /thirdpartyRequests/verifications request.\n      properties: *ref_156\n      required: *ref_157\n    AuthenticationResponse:\n      title: AuthenticationResponse\n      type: string\n      enum: *ref_158\n      description: \u003e-\n        The AuthenticationResponse enumeration describes the result of\n        authenticating verification request.\n\n        Below are the allowed values for the enumeration AuthenticationResponse.\n        - VERIFIED - The challenge was correctly signed.\n    ThirdpartyRequestsVerificationsIDPutResponse:\n      title: ThirdpartyRequestsVerificationsIDPutResponse\n      type: object\n      description: \u003e-\n        Used by: Auth Service\n\n        The callback PUT /thirdpartyRequests/verifications/{ID} is used to\n        inform the client of the result of an authorization check. The {ID} in\n        the URI should contain the authorizationRequestId which was used to\n        request the check, or the {ID} that was used in the GET\n        /thirdpartyRequests/verifications/{ID}.\n\n        https://github.com/mojaloop/documentation/blob/master/website/versioned_docs/v1.0.1/api/thirdparty/data-models.md#31821-put-thirdpartyrequestsverificationsid\n      properties: *ref_159\n      required: *ref_160\n  parameters:\n    ID:\n      name: ID\n      in: path\n      required: true\n      schema: *ref_34\n      description: The identifier value.\n    Content-Type:\n      name: Content-Type\n      in: header\n      schema: *ref_35\n      required: true\n      description: \u003e-\n        The `Content-Type` header indicates the specific version of the API used\n        to send the payload body.\n    Date:\n      name: Date\n      in: header\n      schema: *ref_36\n      required: true\n      description: The `Date` header field indicates the date when the request was sent.\n    X-Forwarded-For:\n      name: X-Forwarded-For\n      in: header\n      schema: *ref_37\n      required: false\n      description: \u003e-\n        The `X-Forwarded-For` header field is an unofficially accepted standard\n        used for informational purposes of the originating client IP address, as\n        a request might pass multiple proxies, firewalls, and so on. Multiple\n        `X-Forwarded-For` values should be expected and supported by\n        implementers of the API.\n\n\n        **Note:** An alternative to `X-Forwarded-For` is defined in [RFC\n        7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC\n        7239 is less-used and supported than `X-Forwarded-For`.\n    FSPIOP-Source:\n      name: FSPIOP-Source\n      in: header\n      schema: *ref_38\n      required: true\n      description: \u003e-\n        The `FSPIOP-Source` header field is a non-HTTP standard field used by\n        the API for identifying the sender of the HTTP request. The field should\n        be set by the original sender of the request. Required for routing and\n        signature verification (see header field `FSPIOP-Signature`).\n    FSPIOP-Destination:\n      name: FSPIOP-Destination\n      in: header\n      schema: *ref_39\n      required: false\n      description: \u003e-\n        The `FSPIOP-Destination` header field is a non-HTTP standard field used\n        by the API for HTTP header based routing of requests and responses to\n        the destination. The field must be set by the original sender of the\n        request if the destination is known (valid for all services except GET\n        /parties) so that any entities between the client and the server do not\n        need to parse the payload for routing purposes. If the destination is\n        not known (valid for service GET /parties), the field should be left\n        empty.\n    FSPIOP-Encryption:\n      name: FSPIOP-Encryption\n      in: header\n      schema: *ref_40\n      required: false\n      description: \u003e-\n        The `FSPIOP-Encryption` header field is a non-HTTP standard field used\n        by the API for applying end-to-end encryption of the request.\n    FSPIOP-Signature:\n      name: FSPIOP-Signature\n      in: header\n      schema: *ref_41\n      required: false\n      description: \u003e-\n        The `FSPIOP-Signature` header field is a non-HTTP standard field used by\n        the API for applying an end-to-end request signature.\n    FSPIOP-URI:\n      name: FSPIOP-URI\n      in: header\n      schema: *ref_42\n      required: false\n      description: \u003e-\n        The `FSPIOP-URI` header field is a non-HTTP standard field used by the\n        API for signature verification, should contain the service URI. Required\n        if signature verification is used, for more information, see [the API\n        Signature\n        document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    FSPIOP-HTTP-Method:\n      name: FSPIOP-HTTP-Method\n      in: header\n      schema: *ref_43\n      required: false\n      description: \u003e-\n        The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field used\n        by the API for signature verification, should contain the service HTTP\n        method. Required if signature verification is used, for more\n        information, see [the API Signature\n        document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n    Accept:\n      name: Accept\n      in: header\n      required: true\n      schema: *ref_45\n      description: \u003e-\n        The `Accept` header field indicates the version of the API the client\n        would like the server to use.\n    Content-Length:\n      name: Content-Length\n      in: header\n      required: false\n      schema: *ref_44\n      description: \u003e-\n        The `Content-Length` header field indicates the anticipated size of the\n        payload body. Only sent if there is a body.\n\n\n        **Note:** The API supports a maximum size of 5242880 bytes (5\n        Megabytes).\n    Type:\n      name: Type\n      in: path\n      required: true\n      schema: *ref_64\n      description: The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`.\n    ServiceType:\n      name: ServiceType\n      in: path\n      required: true\n      schema: *ref_65\n      description: The type of the service identifier. For example, `THIRD_PARTY_DFSP`\n  responses:\n    '200':\n      description: OK\n    '202':\n      description: Accepted\n    '400':\n      description: Bad Request\n      content: *ref_18\n      headers: *ref_19\n    '401':\n      description: Unauthorized\n      content: *ref_20\n      headers: *ref_21\n    '403':\n      description: Forbidden\n      content: *ref_22\n      headers: *ref_23\n    '404':\n      description: Not Found\n      content: *ref_24\n      headers: *ref_25\n    '405':\n      description: Method Not Allowed\n      content: *ref_26\n      headers: *ref_27\n    '406':\n      description: Not Acceptable\n      content: *ref_28\n      headers: *ref_29\n    '501':\n      description: Not Implemented\n      content: *ref_30\n      headers: *ref_31\n    '503':\n      description: Service Unavailable\n      content: *ref_32\n      headers: *ref_33\n  headers:\n    Content-Length:\n      required: false\n      schema: *ref_16\n      description: \u003e-\n        The `Content-Length` header field indicates the anticipated size of the\n        payload body. Only sent if there is a body.\n\n\n        **Note:** The API supports a maximum size of 5242880 bytes (5\n        Megabytes).\n    Content-Type:\n      schema: *ref_17\n      required: true\n      description: \u003e-\n        The `Content-Type` header indicates the specific version of the API used\n        to send the payload body.\n",
			"canonicalURL": "/npm/mojaloop/api-snippets@e02a0c46f118d562574fdac1c09a000df0b55bc9/-/blob/docs/thirdparty-openapi3-snippets.yaml",
			"externalURLs": []
		}
	},
	"Error": "buildIR: make ir: operations: path \"/interface\": post: requestBody: contents: media: \"application/json\": generate schema: oneOf: collect variants: oneOf[1]: field party: field personalInfo: field complexName: field firstName: string validator: pattern: regexp2: error parsing regexp: incomplete \\p{X} character escape in `^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control} .,''-]{1,128}$`",
	"NotImplemented": [
		"discriminator inference"
	]
}