{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-datalake-store-filesystem-2016-11-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-datalake-store-filesystem-2016-11-01-swagger.yaml",
			"byteSize": 73986,
			"content": "openapi: 3.0.0\ninfo:\n  description: Creates an Azure Data Lake Store filesystem client.\n  title: DataLakeStoreFileSystemManagementClient\n  version: 2016-11-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/datalake-store/data-plane/Microsoft.DataLakeStore/stable/2016-11-01/filesystem.json\n      version: \"2.0\"\n  x-preferred: true\n  x-providerName: azure.com\n  x-serviceName: datalake-store-filesystem\n  x-tags:\n    - Azure\n    - Microsoft\npaths:\n  \"/WebHdfsExt/{path}\":\n    post:\n      description: \"Appends to the specified file, optionally first creating the file if it\n        does not yet exist. This method supports multiple concurrent appends to\n        the file. NOTE: The target must not contain data added by Create or\n        normal (serial) Append. ConcurrentAppend and Append cannot be used\n        interchangeably; once a target file has been modified using either of\n        these append options, the other append option cannot be used on the\n        target file. ConcurrentAppend does not guarantee order and can result in\n        duplicated data landing in the target file.\"\n      operationId: FileSystem_ConcurrentAppend\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file to which to\n            append using concurrent append.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            \"Appends to the specified file, optionally first creating the file if it does not yet exist. This method supports multiple concurrent appends to the file. NOTE: The target must not contain data added by Create or normal (serial) Append. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file. ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file\":\n              value: test_file_path\n        - description: Indicates the concurrent append call should create the file if it\n            doesn't exist or just open the existing file for append\n          in: query\n          name: appendMode\n          required: false\n          x-ms-enum:\n            modelAsString: false\n            name: AppendModeType\n          schema:\n            type: string\n            enum:\n              - autocreate\n          examples:\n            \"Appends to the specified file, optionally first creating the file if it does not yet exist. This method supports multiple concurrent appends to the file. NOTE: The target must not contain data added by Create or normal (serial) Append. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file. ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file\":\n              value: autocreate\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - CONCURRENTAPPEND\n          examples:\n            \"Appends to the specified file, optionally first creating the file if it does not yet exist. This method supports multiple concurrent appends to the file. NOTE: The target must not contain data added by Create or normal (serial) Append. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file. ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file\":\n              value: CONCURRENTAPPEND\n        - description: Indicates the data being sent to the server is being streamed in\n            chunks.\n          in: header\n          name: Transfer-Encoding\n          required: true\n          schema:\n            type: string\n            enum:\n              - chunked\n          examples:\n            \"Appends to the specified file, optionally first creating the file if it does not yet exist. This method supports multiple concurrent appends to the file. NOTE: The target must not contain data added by Create or normal (serial) Append. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file. ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file\":\n              value: chunked\n        - description: Optionally indicates what to do after completion of the concurrent\n            append. DATA indicates that more data will be sent immediately by\n            the client, the file handle should remain open/locked, and file\n            metadata (including file length, last modified time) should NOT get\n            updated. METADATA indicates that more data will be sent immediately\n            by the client, the file handle should remain open/locked, and file\n            metadata should get updated. CLOSE indicates that the client is done\n            sending data, the file handle should be closed/unlocked, and file\n            metadata should get updated.\n          in: query\n          name: syncFlag\n          required: false\n          x-ms-enum:\n            modelAsString: false\n            name: SyncFlag\n          schema:\n            type: string\n            enum:\n              - DATA\n              - METADATA\n              - CLOSE\n            default: DATA\n          examples:\n            \"Appends to the specified file, optionally first creating the file if it does not yet exist. This method supports multiple concurrent appends to the file. NOTE: The target must not contain data added by Create or normal (serial) Append. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file. ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file\":\n              value: DATA\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        $ref: \"#/components/requestBodies/FileSystem_ConcurrentAppendStreamcontents\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n    put:\n      description: Sets or removes the expiration time on the specified file. This\n        operation can only be executed against files. Folders are not supported.\n      operationId: FileSystem_SetFileExpiry\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file on which to\n            set or remove the expiration time.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Sets or removes the expiration time on the specified file. This operation can only be executed against files. Folders are not supported:\n              value: test_file_path\n        - description: \"Indicates the type of expiration to use for the file: 1.\n            NeverExpire: ExpireTime is ignored. 2. RelativeToNow: ExpireTime is\n            an integer in milliseconds representing the expiration date relative\n            to when file expiration is updated. 3. RelativeToCreationDate:\n            ExpireTime is an integer in milliseconds representing the expiration\n            date relative to file creation. 4. Absolute: ExpireTime is an\n            integer in milliseconds, as a Unix timestamp relative to 1/1/1970\n            00:00:00.\"\n          in: query\n          name: expiryOption\n          required: true\n          x-ms-enum:\n            modelAsString: false\n            name: ExpiryOptionType\n          schema:\n            type: string\n            enum:\n              - NeverExpire\n              - RelativeToNow\n              - RelativeToCreationDate\n              - Absolute\n          examples:\n            Sets or removes the expiration time on the specified file. This operation can only be executed against files. Folders are not supported:\n              value: NeverExpire\n        - description: The time that the file will expire, corresponding to the\n            ExpiryOption that was set.\n          in: query\n          name: expireTime\n          required: false\n          schema:\n            type: integer\n            format: int64\n          examples:\n            Sets or removes the expiration time on the specified file. This operation can only be executed against files. Folders are not supported:\n              value: 1\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - SETEXPIRY\n          examples:\n            Sets or removes the expiration time on the specified file. This operation can only be executed against files. Folders are not supported:\n              value: SETEXPIRY\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully set the expiration time on the specified file.\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}\":\n    get:\n      description: Checks if the specified access is available at the given path.\n      operationId: FileSystem_CheckAccess\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory for which to check access.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Checks if the specified access is available at the given path:\n              value: test_file_path\n        - description: File system operation read/write/execute in string form, matching\n            regex pattern '[rwx-]{3}'\n          in: query\n          name: fsaction\n          required: true\n          schema:\n            type: string\n          examples:\n            Checks if the specified access is available at the given path:\n              value: test_fsaction\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - CHECKACCESS\n          examples:\n            Checks if the specified access is available at the given path:\n              value: CHECKACCESS\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\nx-ms-paths:\n  \"/webhdfs/v1/{path}?op=APPEND\":\n    post:\n      description: \"Used for serial appends to the specified file. NOTE: The target must\n        not contain data added by ConcurrentAppend. ConcurrentAppend and Append\n        cannot be used interchangeably; once a target file has been modified\n        using either of these append options, the other append option cannot be\n        used on the target file.\"\n      operationId: FileSystem_Append\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file to which to\n            append.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            \"Used for serial appends to the specified file. NOTE: The target must not contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file\":\n              value: test_file_path\n        - description: The optional offset in the stream to begin the append operation.\n            Default is to append at the end of the stream.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int64\n          examples:\n            \"Used for serial appends to the specified file. NOTE: The target must not contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file\":\n              value: 1\n        - description: Optionally indicates what to do after completion of the concurrent\n            append. DATA indicates that more data will be sent immediately by\n            the client, the file handle should remain open/locked, and file\n            metadata (including file length, last modified time) should NOT get\n            updated. METADATA indicates that more data will be sent immediately\n            by the client, the file handle should remain open/locked, and file\n            metadata should get updated. CLOSE indicates that the client is done\n            sending data, the file handle should be closed/unlocked, and file\n            metadata should get updated.\n          in: query\n          name: syncFlag\n          required: false\n          x-ms-enum:\n            modelAsString: false\n            name: SyncFlag\n          schema:\n            type: string\n            enum:\n              - DATA\n              - METADATA\n              - CLOSE\n            default: CLOSE\n          examples:\n            \"Used for serial appends to the specified file. NOTE: The target must not contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file\":\n              value: DATA\n        - description: Optional unique GUID per file to ensure single writer semantics,\n            meaning that only clients that append to the file with the same\n            leaseId will be allowed to do so.\n          in: query\n          name: leaseId\n          required: false\n          schema:\n            type: string\n            format: uuid\n          examples:\n            \"Used for serial appends to the specified file. NOTE: The target must not contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file\":\n              value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345\n        - description: Optional unique GUID per file indicating all the appends with the\n            same fileSessionId are from the same client and same session. This\n            will give a performance benefit when syncFlag is DATA or METADATA.\n          in: query\n          name: fileSessionId\n          required: false\n          schema:\n            type: string\n            format: uuid\n          examples:\n            \"Used for serial appends to the specified file. NOTE: The target must not contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file\":\n              value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab346\n        - description: Flag to skip redirection. When append=false or not specified, the\n            request is redirected. Submit another HTTP PUT request using the URL\n            in the Location header with the file data to be written. When\n            append=true, this redirection is skipped.\n          in: query\n          name: append\n          required: true\n          schema:\n            type: string\n            enum:\n              - \"true\"\n          examples:\n            \"Used for serial appends to the specified file. NOTE: The target must not contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file\":\n              value: \"true\"\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - APPEND\n          examples:\n            \"Used for serial appends to the specified file. NOTE: The target must not contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file\":\n              value: APPEND\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        $ref: \"#/components/requestBodies/FileSystem_ConcurrentAppendStreamcontents\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=CONCAT\":\n    post:\n      description: Concatenates the list of source files into the destination file,\n        removing all source files upon success.\n      operationId: FileSystem_Concat\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the destination file\n            resulting from the concatenation.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            \"Concatenates the list of source files into the destination file, removing all source files upon success\":\n              value: test_file_path\n        - description: A list of comma separated Data Lake Store paths (starting with '/')\n            of the files to concatenate, in the order in which they should be\n            concatenated.\n          in: query\n          name: sources\n          required: true\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            \"Concatenates the list of source files into the destination file, removing all source files upon success\":\n              value:\n                - test_source_1\n                - test_source_2\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - CONCAT\n          examples:\n            \"Concatenates the list of source files into the destination file, removing all source files upon success\":\n              value: CONCAT\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=CREATE\":\n    put:\n      description: \"Creates a file with optionally specified content. NOTE: If content is\n        provided, the resulting file cannot be modified using ConcurrentAppend.\"\n      operationId: FileSystem_Create\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file to create.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            \"Creates a file with optionally specified content. NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend\":\n              value: test_file_path\n        - description: The indication of if the file should be overwritten.\n          in: query\n          name: overwrite\n          required: false\n          schema:\n            type: boolean\n          examples:\n            \"Creates a file with optionally specified content. NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend\":\n              value: false\n        - description: Optionally indicates what to do after completion of the create. DATA\n            indicates that more data will be sent immediately by the client, the\n            file handle should remain open/locked, and file metadata (including\n            file length, last modified time) should NOT get updated. METADATA\n            indicates that more data will be sent immediately by the client, the\n            file handle should remain open/locked, and file metadata should get\n            updated. CLOSE indicates that the client is done sending data, the\n            file handle should be closed/unlocked, and file metadata should get\n            updated.\n          in: query\n          name: syncFlag\n          required: false\n          x-ms-enum:\n            modelAsString: false\n            name: SyncFlag\n          schema:\n            type: string\n            enum:\n              - DATA\n              - METADATA\n              - CLOSE\n            default: CLOSE\n          examples:\n            \"Creates a file with optionally specified content. NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend\":\n              value: DATA\n        - description: Optional unique GUID per file to ensure single writer semantics,\n            meaning that only clients that append to the file with the same\n            leaseId will be allowed to do so.\n          in: query\n          name: leaseId\n          required: false\n          schema:\n            type: string\n            format: uuid\n          examples:\n            \"Creates a file with optionally specified content. NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend\":\n              value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345\n        - description: The octal representation of the unnamed user, mask and other\n            permissions that should be set for the file when created. If not\n            specified, it inherits these from the container.\n          in: query\n          name: permission\n          schema:\n            type: integer\n            format: int32\n          examples:\n            \"Creates a file with optionally specified content. NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend\":\n              value: 1\n        - description: Flag to skip redirection. When write=false or not specified, the\n            request is redirected. Submit another HTTP PUT request using the URL\n            in the Location header with the file data to be written. When\n            write=true, this redirection is skipped.\n          in: query\n          name: write\n          required: true\n          schema:\n            type: string\n            enum:\n              - \"true\"\n          examples:\n            \"Creates a file with optionally specified content. NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend\":\n              value: \"true\"\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - CREATE\n          examples:\n            \"Creates a file with optionally specified content. NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend\":\n              value: CREATE\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: file\n              type: object\n        description: The file contents to include when creating the file. This parameter is\n          optional, resulting in an empty file if not specified.  The maximum\n          content size is 4MB.  For content larger than 4MB you must append the\n          content in 4MB chunks.\n      responses:\n        \"201\":\n          description: CREATED\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=DELETE\":\n    delete:\n      description: Deletes the requested file or directory, optionally recursively.\n      operationId: FileSystem_Delete\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory to delete.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            \"Deletes the requested file or directory, optionally recursively\":\n              value: test_file_path\n        - description: The optional switch indicating if the delete should be recursive\n          in: query\n          name: recursive\n          required: false\n          schema:\n            type: boolean\n          examples:\n            \"Deletes the requested file or directory, optionally recursively\":\n              value: false\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - DELETE\n          examples:\n            \"Deletes the requested file or directory, optionally recursively\":\n              value: DELETE\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileOperationResult\"\n              examples:\n                \"Deletes the requested file or directory, optionally recursively\":\n                  $ref: \"#/components/examples/Deletes_the_requested_file_or_direct\\\n                    ory_optionally_recursively\"\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=GETACLSTATUS\":\n    get:\n      description: Gets Access Control List (ACL) entries for the specified file or\n        directory.\n      operationId: FileSystem_GetAclStatus\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory for which to get the ACL.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Gets Access Control List (ACL) entries for the specified file or directory:\n              value: test_file_path\n        - description: An optional switch to return friendly names in place of object ID\n            for ACL entries. tooId=false returns friendly names instead of the\n            AAD Object ID. Default value is true, returning AAD object IDs.\n          in: query\n          name: tooId\n          required: false\n          schema:\n            type: boolean\n          examples:\n            Gets Access Control List (ACL) entries for the specified file or directory:\n              value: false\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - GETACLSTATUS\n          examples:\n            Gets Access Control List (ACL) entries for the specified file or directory:\n              value: GETACLSTATUS\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AclStatusResult\"\n              examples:\n                Gets Access Control List (ACL) entries for the specified file or directory:\n                  $ref: \"#/components/examples/Gets_Access_Control_List_ACL_entries\\\n                    _for_the_specified_file_or_directory\"\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=GETCONTENTSUMMARY\":\n    get:\n      description: Gets the file content summary object specified by the file path.\n      operationId: FileSystem_GetContentSummary\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file for which\n            to retrieve the summary.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Gets the file content summary object specified by the file path:\n              value: test_file_path\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - GETCONTENTSUMMARY\n          examples:\n            Gets the file content summary object specified by the file path:\n              value: GETCONTENTSUMMARY\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContentSummaryResult\"\n              examples:\n                Gets the file content summary object specified by the file path:\n                  $ref: \"#/components/examples/Gets_the_file_content_summary_object\\\n                    _specified_by_the_file_path\"\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=GETFILESTATUS\":\n    get:\n      description: Get the file status object specified by the file path.\n      operationId: FileSystem_GetFileStatus\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory for which to retrieve the status.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Get the file status object specified by the file path:\n              value: test_file_path\n        - description: An optional switch to return friendly names in place of owner and\n            group. tooId=false returns friendly names instead of the AAD Object\n            ID. Default value is true, returning AAD object IDs.\n          in: query\n          name: tooId\n          required: false\n          schema:\n            type: boolean\n          examples:\n            Get the file status object specified by the file path:\n              value: false\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - GETFILESTATUS\n          examples:\n            Get the file status object specified by the file path:\n              value: GETFILESTATUS\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileStatusResult\"\n              examples:\n                Get the file status object specified by the file path:\n                  $ref: \"#/components/examples/Get_the_file_status_object_specified\\\n                    _by_the_file_path\"\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=LISTSTATUS\":\n    get:\n      description: Get the list of file status objects specified by the file path, with\n        optional pagination parameters\n      operationId: FileSystem_ListFileStatus\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the directory to\n            list.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            \"Get the list of file status objects specified by the file path, with optional pagination parameters\":\n              value: test_file_path\n        - description: Gets or sets the number of items to return. Optional.\n          in: query\n          name: listSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n          examples:\n            \"Get the list of file status objects specified by the file path, with optional pagination parameters\":\n              value: 1\n        - description: Gets or sets the item or lexicographical index after which to begin\n            returning results. For example, a file list of 'a','b','d' and\n            listAfter='b' will return 'd', and a listAfter='c' will also return\n            'd'. Optional.\n          in: query\n          name: listAfter\n          required: false\n          schema:\n            type: string\n          examples:\n            \"Get the list of file status objects specified by the file path, with optional pagination parameters\":\n              value: test_list_after\n        - description: Gets or sets the item or lexicographical index before which to begin\n            returning results. For example, a file list of 'a','b','d' and\n            listBefore='d' will return 'a','b', and a listBefore='c' will also\n            return 'a','b'. Optional.\n          in: query\n          name: listBefore\n          required: false\n          schema:\n            type: string\n          examples:\n            \"Get the list of file status objects specified by the file path, with optional pagination parameters\":\n              value: test_list_before\n        - description: An optional switch to return friendly names in place of owner and\n            group. tooId=false returns friendly names instead of the AAD Object\n            ID. Default value is true, returning AAD object IDs.\n          in: query\n          name: tooId\n          required: false\n          schema:\n            type: boolean\n          examples:\n            \"Get the list of file status objects specified by the file path, with optional pagination parameters\":\n              value: false\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - LISTSTATUS\n          examples:\n            \"Get the list of file status objects specified by the file path, with optional pagination parameters\":\n              value: LISTSTATUS\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileStatusesResult\"\n              examples:\n                \"Get the list of file status objects specified by the file path, with optional pagination parameters\":\n                  $ref: \"#/components/examples/Get_the_list_of_file_status_objects_\\\n                    specified_by_the_file_path_with_optional_pagination_paramet\\\n                    ers\"\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=MKDIRS\":\n    put:\n      description: Creates a directory.\n      operationId: FileSystem_Mkdirs\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the directory to\n            create.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Creates a directory:\n              value: test_file_path\n        - description: Optional octal permission with which the directory should be created.\n          in: query\n          name: permission\n          required: false\n          schema:\n            type: integer\n            format: int32\n          examples:\n            Creates a directory:\n              value: 1\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - MKDIRS\n          examples:\n            Creates a directory:\n              value: MKDIRS\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileOperationResult\"\n              examples:\n                Creates a directory:\n                  $ref: \"#/components/examples/Creates_a_directory\"\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=MODIFYACLENTRIES\":\n    put:\n      description: Modifies existing Access Control List (ACL) entries on a file or folder.\n      operationId: FileSystem_ModifyAclEntries\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory with the ACL being modified.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Modifies existing Access Control List (ACL) entries on a file or folder:\n              value: test_file_path\n        - description: The ACL specification included in ACL modification operations in the\n            format '[default:]user|group|other::r|-w|-x|-'\n          in: query\n          name: aclspec\n          required: true\n          schema:\n            type: string\n          examples:\n            Modifies existing Access Control List (ACL) entries on a file or folder:\n              value: user:2666084e-edd4-4276-9a8c-d1024a5e3d94:rwx\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - MODIFYACLENTRIES\n          examples:\n            Modifies existing Access Control List (ACL) entries on a file or folder:\n              value: MODIFYACLENTRIES\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=MSCONCAT\":\n    post:\n      description: Concatenates the list of source files into the destination file,\n        deleting all source files upon success. This method accepts more source\n        file paths than the Concat method. This method and the parameters it\n        accepts are subject to change for usability in an upcoming version.\n      operationId: FileSystem_MsConcat\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the destination file\n            resulting from the concatenation.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            \"Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version\":\n              value: test_file_path\n        - description: \"Indicates that as an optimization instead of deleting each\n            individual source stream, delete the source stream folder if all\n            streams are in the same folder instead. This results in a\n            substantial performance improvement when the only streams in the\n            folder are part of the concatenation operation. WARNING: This\n            includes the deletion of any other files that are not source files.\n            Only set this to true when source files are the only files in the\n            source directory.\"\n          in: query\n          name: deleteSourceDirectory\n          required: false\n          schema:\n            type: boolean\n          examples:\n            \"Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version\":\n              value: false\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - MSCONCAT\n          examples:\n            \"Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version\":\n              value: MSCONCAT\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: file\n              type: object\n        description: \"A list of Data Lake Store paths (starting with '/') of the source\n          files. Must be a comma-separated path list in the format:\n          sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=OPEN\":\n    get:\n      description: Opens and reads from the specified file.\n      operationId: FileSystem_Open\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file to open.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Opens and reads from the specified file:\n              value: test_file_path\n        - description: The number of bytes that the server will attempt to retrieve. It\n            will retrieve \u003c= length bytes.\n          in: query\n          name: length\n          required: false\n          schema:\n            type: integer\n            format: int64\n          examples:\n            Opens and reads from the specified file:\n              value: 1\n        - description: The byte offset to start reading data from.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int64\n          examples:\n            Opens and reads from the specified file:\n              value: 1\n        - description: Optional unique GUID per file indicating all the reads with the same\n            fileSessionId are from the same client and same session. This will\n            give a performance benefit.\n          in: query\n          name: fileSessionId\n          required: false\n          schema:\n            type: string\n            format: uuid\n          examples:\n            Opens and reads from the specified file:\n              value: 34adfa4f-cedf-4dc0-ba29-b6d1a69ab345\n        - description: Flag to skip redirection. When read=false or not specified, the\n            request is redirected. Submit another HTTP PUT request using the URL\n            in the Location header with the file data to be read. When\n            read=true, this redirection is skipped.\n          in: query\n          name: read\n          required: true\n          schema:\n            type: string\n            enum:\n              - \"true\"\n          examples:\n            Opens and reads from the specified file:\n              value: \"true\"\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - OPEN\n          examples:\n            Opens and reads from the specified file:\n              value: OPEN\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n              examples:\n                Opens and reads from the specified file:\n                  $ref: \"#/components/examples/Opens_and_reads_from_the_specified_f\\\n                    ile\"\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/octet-stream:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=REMOVEACL\":\n    put:\n      description: Removes the existing Access Control List (ACL) of the specified file or\n        directory.\n      operationId: FileSystem_RemoveAcl\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory with the ACL being removed.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Removes the existing Access Control List (ACL) of the specified file or directory:\n              value: test_file_path\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - REMOVEACL\n          examples:\n            Removes the existing Access Control List (ACL) of the specified file or directory:\n              value: REMOVEACL\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully removed the Access Control List on the specified file\n            or directory.\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=REMOVEACLENTRIES\":\n    put:\n      description: Removes existing Access Control List (ACL) entries for a file or folder.\n      operationId: FileSystem_RemoveAclEntries\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory with the ACL being removed.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Removes existing Access Control List (ACL) entries for a file or folder:\n              value: test_file_path\n        - description: The ACL spec included in ACL removal operations in the format\n            '[default:]user|group|other'\n          in: query\n          name: aclspec\n          required: true\n          schema:\n            type: string\n          examples:\n            Removes existing Access Control List (ACL) entries for a file or folder:\n              value: user:2666084e-edd4-4276-9a8c-d1024a5e3d94\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - REMOVEACLENTRIES\n          examples:\n            Removes existing Access Control List (ACL) entries for a file or folder:\n              value: REMOVEACLENTRIES\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=REMOVEDEFAULTACL\":\n    put:\n      description: Removes the existing Default Access Control List (ACL) of the specified\n        directory.\n      operationId: FileSystem_RemoveDefaultAcl\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the directory with\n            the default ACL being removed.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Removes the existing Default Access Control List (ACL) of the specified directory:\n              value: test_file_path\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - REMOVEDEFAULTACL\n          examples:\n            Removes the existing Default Access Control List (ACL) of the specified directory:\n              value: REMOVEDEFAULTACL\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully Removed the Default Access Control List on the\n            specified directory.\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=RENAME\":\n    put:\n      description: Rename a file or directory.\n      operationId: FileSystem_Rename\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory to move/rename.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Rename a file or directory:\n              value: test_file_path\n        - description: The path to move/rename the file or folder to\n          in: query\n          name: destination\n          required: true\n          schema:\n            type: string\n          examples:\n            Rename a file or directory:\n              value: /test_destination_path\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - RENAME\n          examples:\n            Rename a file or directory:\n              value: RENAME\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileOperationResult\"\n              examples:\n                Rename a file or directory:\n                  $ref: \"#/components/examples/Rename_a_file_or_directory\"\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=SETACL\":\n    put:\n      description: Sets the Access Control List (ACL) for a file or folder.\n      operationId: FileSystem_SetAcl\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory on which to set the ACL.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Sets the Access Control List (ACL) for a file or folder:\n              value: test_file_path\n        - description: The ACL spec included in ACL creation operations in the format\n            '[default:]user|group|other::r|-w|-x|-'\n          in: query\n          name: aclspec\n          required: true\n          schema:\n            type: string\n          examples:\n            Sets the Access Control List (ACL) for a file or folder:\n              value: user:2666084e-edd4-4276-9a8c-d1024a5e3d94:rwx\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - SETACL\n          examples:\n            Sets the Access Control List (ACL) for a file or folder:\n              value: SETACL\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=SETOWNER\":\n    put:\n      description: Sets the owner of a file or directory.\n      operationId: FileSystem_SetOwner\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory for which to set the owner.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Sets the owner of a file or directory:\n              value: test_file_path\n        - description: The AAD Object ID of the user owner of the file or directory. If\n            empty, the property will remain unchanged.\n          in: query\n          name: owner\n          required: false\n          schema:\n            type: string\n          examples:\n            Sets the owner of a file or directory:\n              value: test_owner\n        - description: The AAD Object ID of the group owner of the file or directory. If\n            empty, the property will remain unchanged.\n          in: query\n          name: group\n          required: false\n          schema:\n            type: string\n          examples:\n            Sets the owner of a file or directory:\n              value: test_group\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - SETOWNER\n          examples:\n            Sets the owner of a file or directory:\n              value: SETOWNER\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\n  \"/webhdfs/v1/{path}?op=SETPERMISSION\":\n    put:\n      description: Sets the permission of the file or folder.\n      operationId: FileSystem_SetPermission\n      parameters:\n        - description: The Data Lake Store path (starting with '/') of the file or\n            directory for which to set the permission.\n          in: path\n          name: path\n          required: true\n          schema:\n            type: string\n          examples:\n            Sets the owner of a file or directory:\n              value: test_file_path\n        - description: A string representation of the permission (i.e 'rwx'). If empty,\n            this property remains unchanged.\n          in: query\n          name: permission\n          required: false\n          schema:\n            type: string\n          examples:\n            Sets the owner of a file or directory:\n              value: rwx\n        - description: The constant value for the operation.\n          in: query\n          name: op\n          required: true\n          schema:\n            type: string\n            enum:\n              - SETPERMISSION\n          examples:\n            Sets the owner of a file or directory:\n              value: SETPERMISSION\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: An unexpected error from the server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdlsError\"\n      tags:\n        - FileSystem\nservers:\n  - url: https://azure.local\n  - url: https://{accountName}.{adlsFileSystemDnsSuffix}\n    variables:\n      accountName:\n        description: The Azure Data Lake Store account to execute filesystem operations on.\n        x-ms-skip-url-encoding: true\n        default: \"\"\n      adlsFileSystemDnsSuffix:\n        default: azuredatalakestore.net\n        description: Gets the URI used as the base for all cloud service requests.\n        x-ms-parameter-location: client\n        x-ms-skip-url-encoding: true\ncomponents:\n  examples:\n    Deletes_the_requested_file_or_directory_optionally_recursively:\n      value:\n        boolean: false\n    Gets_Access_Control_List_ACL_entries_for_the_specified_file_or_directory:\n      value:\n        aclStatus:\n          entries:\n            - test_entry_1\n            - test_entry_2\n          group: test_group\n          owner: test_owner\n          permission: \"1\"\n          stickyBit: false\n    Gets_the_file_content_summary_object_specified_by_the_file_path:\n      value:\n        contentSummary:\n          directoryCount: 1\n          fileCount: 1\n          length: 1\n          spaceConsumed: 1\n    Get_the_file_status_object_specified_by_the_file_path:\n      value:\n        fileStatus:\n          accessTime: 1\n          aclBit: false\n          blockSize: 1\n          group: test_group\n          length: 1\n          modificationTime: 1\n          msExpirationTime: 1\n          owner: test_owner\n          pathSuffix: test_path_suffix\n          permission: test_permission\n          type: FILE\n    Get_the_list_of_file_status_objects_specified_by_the_file_path_with_optional_pagination_parameters:\n      value:\n        fileStatuses:\n          fileStatus:\n            - accessTime: 1\n              aclBit: false\n              blockSize: 1\n              group: test_group\n              length: 1\n              modificationTime: 1\n              msExpirationTime: 1\n              owner: test_owner\n              pathSuffix: test_path_suffix\n              permission: test_permission\n              type: FILE\n    Creates_a_directory:\n      value:\n        boolean: false\n    Opens_and_reads_from_the_specified_file:\n      value: This is actually a byte stream. This request/response is being presented\n        as a string for readability in the example\n    Rename_a_file_or_directory:\n      value:\n        boolean: false\n  parameters:\n    ApiVersionParameter:\n      description: Client Api Version.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n      examples:\n        \"Appends to the specified file, optionally first creating the file if it does not yet exist. This method supports multiple concurrent appends to the file. NOTE: The target must not contain data added by Create or normal (serial) Append. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file. ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file\":\n          value: 2016-11-01\n        Sets or removes the expiration time on the specified file. This operation can only be executed against files. Folders are not supported:\n          value: 2016-11-01\n        Checks if the specified access is available at the given path:\n          value: 2016-11-01\n        \"Used for serial appends to the specified file. NOTE: The target must not contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file\":\n          value: 2016-11-01\n        \"Concatenates the list of source files into the destination file, removing all source files upon success\":\n          value: 2016-11-01\n        \"Creates a file with optionally specified content. NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend\":\n          value: 2016-11-01\n        \"Deletes the requested file or directory, optionally recursively\":\n          value: 2016-11-01\n        Gets Access Control List (ACL) entries for the specified file or directory:\n          value: 2016-11-01\n        Gets the file content summary object specified by the file path:\n          value: 2016-11-01\n        Get the file status object specified by the file path:\n          value: 2016-11-01\n        \"Get the list of file status objects specified by the file path, with optional pagination parameters\":\n          value: 2016-11-01\n        Creates a directory:\n          value: 2016-11-01\n        Modifies existing Access Control List (ACL) entries on a file or folder:\n          value: 2016-11-01\n        \"Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version\":\n          value: 2016-11-01\n        Opens and reads from the specified file:\n          value: 2016-11-01\n        Removes the existing Access Control List (ACL) of the specified file or directory:\n          value: 2016-11-01\n        Removes existing Access Control List (ACL) entries for a file or folder:\n          value: 2016-11-01\n        Removes the existing Default Access Control List (ACL) of the specified directory:\n          value: 2016-11-01\n        Rename a file or directory:\n          value: 2016-11-01\n        Sets the Access Control List (ACL) for a file or folder:\n          value: 2016-11-01\n        Sets the owner of a file or directory:\n          value: 2016-11-01\n    adlsFilesystemDnsSuffixInPath:\n      description: Gets the URI used as the base for all cloud service requests.\n      in: path\n      name: adlsFileSystemDnsSuffix\n      required: true\n      x-ms-parameter-location: client\n      x-ms-skip-url-encoding: true\n      schema:\n        type: string\n        default: azuredatalakestore.net\n  requestBodies:\n    FileSystem_ConcurrentAppendStreamcontents:\n      content:\n        application/octet-stream:\n          schema:\n            format: file\n            type: object\n      description: The file contents to include when appending to the file.  The maximum\n        content size is 4MB.  For content larger than 4MB you must append the\n        content in 4MB chunks.\n      required: true\n  schemas:\n    AclStatus:\n      description: Data Lake Store file or directory Access Control List information.\n      properties:\n        entries:\n          description: the list of ACLSpec entries on a file or directory.\n          items:\n            type: string\n          type: array\n        group:\n          description: the group owner, an AAD Object ID.\n          type: string\n        owner:\n          description: the user owner, an AAD Object ID.\n          type: string\n        permission:\n          description: The octal representation of the unnamed user, mask and other\n            permissions.\n          type: string\n        stickyBit:\n          description: the indicator of whether the sticky bit is on or off.\n          readOnly: true\n          type: boolean\n    AclStatusResult:\n      description: Data Lake Store file or directory Access Control List information.\n      properties:\n        aclStatus:\n          $ref: \"#/components/schemas/AclStatus\"\n    AdlsAccessControlException:\n      allOf:\n        - $ref: \"#/components/schemas/AdlsRemoteException\"\n      description: A WebHDFS exception thrown indicating that access is denied due to\n        insufficient permissions. Thrown when a 403 error response code is\n        returned (forbidden).\n      x-ms-discriminator-value: AccessControlException\n    AdlsBadOffsetException:\n      allOf:\n        - $ref: \"#/components/schemas/AdlsRemoteException\"\n      description: A WebHDFS exception thrown indicating the append or read is from a bad\n        offset. Thrown when a 400 error response code is returned for append and\n        open operations (Bad request).\n      x-ms-discriminator-value: BadOffsetException\n    AdlsError:\n      description: Data Lake Store filesystem error containing a specific WebHDFS exception.\n      properties:\n        remoteException:\n          $ref: \"#/components/schemas/AdlsRemoteException\"\n    AdlsFileAlreadyExistsException:\n      allOf:\n        - $ref: \"#/components/schemas/AdlsRemoteException\"\n      description: A WebHDFS exception thrown indicating the file or folder already exists.\n        Thrown when a 403 error response code is returned (forbidden).\n      x-ms-discriminator-value: FileAlreadyExistsException\n    AdlsFileNotFoundException:\n      allOf:\n        - $ref: \"#/components/schemas/AdlsRemoteException\"\n      description: A WebHDFS exception thrown indicating the file or folder could not be\n        found. Thrown when a 404 error response code is returned (not found).\n      x-ms-discriminator-value: FileNotFoundException\n    AdlsIOException:\n      allOf:\n        - $ref: \"#/components/schemas/AdlsRemoteException\"\n      description: A WebHDFS exception thrown indicating there was an IO (read or write)\n        error. Thrown when a 403 error response code is returned (forbidden).\n      x-ms-discriminator-value: IOException\n    AdlsIllegalArgumentException:\n      allOf:\n        - $ref: \"#/components/schemas/AdlsRemoteException\"\n      description: A WebHDFS exception thrown indicating that one more arguments is\n        incorrect. Thrown when a 400 error response code is returned (bad\n        request).\n      x-ms-discriminator-value: IllegalArgumentException\n    AdlsRemoteException:\n      description: Data Lake Store filesystem exception based on the WebHDFS definition for\n        RemoteExceptions. This is a WebHDFS 'catch all' exception\n      discriminator:\n        propertyName: exception\n      properties:\n        exception:\n          description: the class name of the exception thrown, such as\n            'IllegalArgumentException'.\n          type: string\n        javaClassName:\n          description: the full class package name for the exception thrown, such as\n            'java.lang.IllegalArgumentException'.\n          readOnly: true\n          type: string\n        message:\n          description: the message associated with the exception that was thrown, such as\n            'Invalid value for webhdfs parameter \"permission\":...'.\n          readOnly: true\n          type: string\n      required:\n        - exception\n    AdlsRuntimeException:\n      allOf:\n        - $ref: \"#/components/schemas/AdlsRemoteException\"\n      description: A WebHDFS exception thrown when an unexpected error occurs during an\n        operation. Thrown when a 500 error response code is returned (Internal\n        server error).\n      x-ms-discriminator-value: RuntimeException\n    AdlsSecurityException:\n      allOf:\n        - $ref: \"#/components/schemas/AdlsRemoteException\"\n      description: A WebHDFS exception thrown indicating that access is denied. Thrown when\n        a 401 error response code is returned (Unauthorized).\n      x-ms-discriminator-value: SecurityException\n    AdlsThrottledException:\n      allOf:\n        - $ref: \"#/components/schemas/AdlsRemoteException\"\n      description: A WebHDFS exception thrown indicating that the request is being\n        throttled. Reducing the number of requests or request size helps to\n        mitigate this error.\n      x-ms-discriminator-value: ThrottledException\n    AdlsUnsupportedOperationException:\n      allOf:\n        - $ref: \"#/components/schemas/AdlsRemoteException\"\n      description: A WebHDFS exception thrown indicating that the requested operation is\n        not supported. Thrown when a 400 error response code is returned (bad\n        request).\n      x-ms-discriminator-value: UnsupportedOperationException\n    ContentSummary:\n      description: Data Lake Store content summary information\n      properties:\n        directoryCount:\n          description: the number of directories.\n          format: int64\n          readOnly: true\n          type: integer\n        fileCount:\n          description: the number of files.\n          format: int64\n          readOnly: true\n          type: integer\n        length:\n          description: the number of bytes used by the content.\n          format: int64\n          readOnly: true\n          type: integer\n        spaceConsumed:\n          description: the disk space consumed by the content.\n          format: int64\n          readOnly: true\n          type: integer\n    ContentSummaryResult:\n      description: Data Lake Store filesystem content summary information response.\n      properties:\n        contentSummary:\n          $ref: \"#/components/schemas/ContentSummary\"\n    FileOperationResult:\n      description: The result of the request or operation.\n      properties:\n        boolean:\n          description: the result of the operation or request.\n          readOnly: true\n          type: boolean\n          x-ms-client-name: operationResult\n    FileStatusProperties:\n      description: Data Lake Store file or directory information.\n      properties:\n        accessTime:\n          description: the last access time as ticks since the epoch.\n          format: int64\n          readOnly: true\n          type: integer\n        aclBit:\n          description: \"flag to indicate if extended acls are enabled \"\n          readOnly: true\n          type: boolean\n        blockSize:\n          description: the block size for the file.\n          format: int64\n          readOnly: true\n          type: integer\n        group:\n          description: the group owner.\n          readOnly: true\n          type: string\n        length:\n          description: the number of bytes in a file.\n          format: int64\n          readOnly: true\n          type: integer\n        modificationTime:\n          description: the modification time as ticks since the epoch.\n          format: int64\n          readOnly: true\n          type: integer\n        msExpirationTime:\n          description: Gets the expiration time, if any, as ticks since the epoch. If the\n            value is 0 or DateTime.MaxValue there is no expiration.\n          format: int64\n          readOnly: true\n          type: integer\n          x-ms-client-name: expirationTime\n        owner:\n          description: the user who is the owner.\n          readOnly: true\n          type: string\n        pathSuffix:\n          description: the path suffix.\n          readOnly: true\n          type: string\n        permission:\n          description: the permission represented as an string.\n          readOnly: true\n          type: string\n        type:\n          description: the type of the path object.\n          enum:\n            - FILE\n            - DIRECTORY\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: FileType\n    FileStatusResult:\n      description: Data Lake Store filesystem file status information response.\n      properties:\n        fileStatus:\n          $ref: \"#/components/schemas/FileStatusProperties\"\n    FileStatuses:\n      description: Data Lake Store file status list information.\n      properties:\n        fileStatus:\n          description: the object containing the list of properties of the files.\n          items:\n            $ref: \"#/components/schemas/FileStatusProperties\"\n          readOnly: true\n          type: array\n    FileStatusesResult:\n      description: Data Lake Store filesystem file status list information response.\n      properties:\n        fileStatuses:\n          $ref: \"#/components/schemas/FileStatuses\"\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-datalake-store-filesystem-2016-11-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-datalake-store-filesystem-2016-11-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/WebHdfsExt/{path}\": post: requestBody: contents: application/octet-stream: octet stream with \"object\" schema not supported"
}