{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/papinet/papiNet-API"
		},
		"file": {
			"name": "papiNet-API.yaml",
			"size": 0,
			"path": "1.2.0/papiNet-API.yaml",
			"byteSize": 32420,
			"content": "openapi: 3.0.3\ninfo:\n  title: papiNet API\n  description: papinet API is a global initiative for the Forst and Paper supply chain.\n  contact:\n    name: papiNet API CWG\n    url: https://github.com/papinet/papiNet-API/issues\n  license:\n    name: Apache 2.0\n    url: https://github.com/papinet/papiNet-API/blob/master/LICENSE\n  version: 1.2.0\nservers:\n  - url: https://papinet.papinet.io\n    description: papiNet Mock Server\npaths:\n\n  '/orders':\n    # get /orders\n    get:\n      summary: List `orders`\n      description: Gets a paginated list of all `orders`.\n      parameters:\n        - in: query\n          name: orderStatus\n          description: Filter by status\n          required: false\n          schema:\n            type: string\n            enum:\n            - Active\n            - Cancelled\n            - Completed\n        - in: query\n          name: offset\n          description: The number of items to skip before starting to collect the result set.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: limit\n          description: The maximum number of items to return. If the value exceeds the maximum, then the maximum value will be used.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfOrders'\n\n  '/orders/{orderId}':\n    # get /orders/{orderId}\n    get:\n      summary: Get an `order`\n      description: Gets the details of a specific `order`, including a paginated list of all its lines.\n      parameters:\n        - in: path\n          name: orderId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the `order` to get\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOrder'\n\n  '/shipments':\n    # get /shipments\n    get:\n      summary: List `shipments`\n      description: Gets a paginated list of all `shipments`.\n      parameters:\n        - in: query\n          name: shipmentStatus\n          description: Filter by status\n          required: false\n          schema:\n            type: string\n            enum:\n              - Active\n              - Rejected\n              - Completed\n        - in: query\n          name: offset\n          description: The number of items to skip before starting to collect the result set.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: limit\n          description: The maximum number of items to return. If the value exceeds the maximum, then the maximum value will be used.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfShipments'\n\n  '/shipments/{shipmentId}':\n    # get /shipments/{shipmentId}\n    get:\n      summary: Get a `shipment`\n      description: Gets the details of a specific `shipment`.\n      parameters:\n        - in: path\n          name: shipmentId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the `shipment` to get\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetShipment'\n\n  '/seller-products':\n    # GET /seller-products\n    get:\n      summary: List `seller-products`\n      description: Gets a paginated list of all `seller-products` defined by the `seller`.\n      parameters:\n        - in: query\n          name: status\n          description: Filter by status\n          required: false\n          schema:\n            type: string\n            enum:\n              - Active\n              - Inactive\n        - in: query\n          name: otherIdentifier.value\n          description: Filter by otherIdentifier\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: otherIdentifier.assignedBy\n          description: Filter by otherIdentifier\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: offset\n          description: The number of items to skip before starting to collect the result set.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: limit\n          description: The maximum number of items to return. If the value exceeds the maximum, then the maximum value will be used.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfSellerProducts'\n        '204':\n          description: No Content\n\n  '/seller-products/{sellerProductId}':\n    # GET /seller-products/{sellerProductId}\n    get:\n      summary: Get a `seller-product`\n      description: Gets the details of a specific `seller-product`.\n      parameters:\n        - in: path\n          name: sellerProductId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the `seller-product` to get\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SellerProduct'\n        '404':\n          description: Not Found\n\n  '/customer-articles':\n    # POST /customer-articles\n    post:\n      summary: Create a `customer-article`\n      description: Creates a `customer-article` defined by the `customer` based on a `seller-product`.\n      requestBody:\n        description: The definition of the `customer-article` to create.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerArticle'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerArticle'\n\n    # GET /customer-articles\n    get:\n      summary: List `customer-articles`\n      description: Gets a paginated list of all `customer-articles` defined by the `customer`.\n      parameters:\n        - in: query\n          name: status\n          description: Filter by status\n          required: false\n          schema:\n            type: string\n            enum:\n              - Active\n              - Inactive\n        - in: query\n          name: otherIdentifier.value\n          description: Filter by otherIdentifier\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: otherIdentifier.assignedBy\n          description: Filter by otherIdentifier\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: offset\n          description: The number of items to skip before starting to collect the result set.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: limit\n          description: The maximum number of items to return. If the value exceeds the maximum, then the maximum value will be used.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfCustomerArticles'\n        '204':\n          description: No Content\n\n  '/customer-articles/{customerArticleId}':\n    # PUT /customer-articles/{customerArticleId}\n    put:\n      summary: Create or modify a `customer-article`\n      description: Creates or modifies (with a full representation) a `customer-article` defined by the `customer` based on a `seller-product`.\n      parameters:\n        - in: path\n          name: customerArticleId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the `customer-article` to create or modify\n      requestBody:\n        description: The definition of the `customer-article` to create or modify.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerArticle'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerArticle'\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerArticle'\n\n    # PATCH /customer-articles/{customerArticleId}\n    patch:\n      summary: Modify a `customer-article`\n      description: Modifies (with a partial representation) a specific `customer-article`.\n      parameters:\n        - in: path\n          name: customerArticleId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the `customer-article` to modify\n      requestBody:\n        description: The definition of the `customer-article` to modify.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerArticle'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerArticle'\n\n    # GET /customer-articles/{customerArticleId}\n    get:\n      summary: Get a `customer-article`\n      description: Gets the details of a specific `customer-article`.\n      parameters:\n        - in: path\n          name: customerArticleId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the `customer-article` to get\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerArticle'\n        '404':\n          description: Not Found\n\n    # DELETE /customer-articles/{customerArticleId}\n    delete:\n      summary: Delete a `customer-article`\n      description: Deletes a specific `customer-article`.\n      parameters:\n        - in: path\n          name: customerArticleId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: UUID of the `customer-article` to delete.\n      responses:\n        '204':\n          description: No Content\n\ncomponents:\n  schemas:\n\n    PaginationLinks:\n      type: object\n      properties:\n        first:\n          type: object\n          properties:\n            href:\n              type: string\n        prev:\n          type: object\n          properties:\n            href:\n              type: string\n        next:\n          type: object\n          properties:\n            href:\n              type: string\n        last:\n          type: object\n          properties:\n            href:\n              type: string\n\n    ListOfOrders:\n      type: object\n      properties:\n        orders:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderHeader'\n        links:\n          $ref: '#/components/schemas/PaginationLinks'\n\n    GetOrder:\n      $ref: '#/components/schemas/Order'\n\n    OrderHeader:\n      type: object\n      required:\n        - id\n        - orderNumber\n        - orderStatus\n        - numberOfLineItems\n      properties:\n        id:\n          type: string\n          format: uuid\n        orderNumber:\n          type: string\n        orderStatus:\n          type: string\n          # Enumeration for 'orderStatus':\n          enum:\n            - Active\n            - Cancelled\n            - Completed\n        numberOfLineItems:\n          type: integer\n          minimum: 0\n\n    OrderLineItem:\n      type: object\n      required:\n        - id\n        - orderLineItemNumber\n        - orderLineItemStatus\n      properties:\n        id:\n          type: string\n          format: uuid\n        orderLineItemNumber:\n          type: integer\n          minimum: 0\n        orderLineItemStatus:\n          type: string\n          # Enumeration for 'orderLineItemStatus':\n          enum:\n            - Cancelled\n            - Completed\n            - Confirmed\n            - Pending\n            - ProductionCompleted\n            - ShipmentCompleted\n        changeable:\n          type: boolean\n        quantities:\n          type: array\n          items:\n            type: object\n            properties:\n              quantityContext:\n                type: string\n                # Enumeration for 'quantityContext':\n                enum:\n                  - Confirmed\n                  - Invoiced\n                  - Ordered\n                  - Produced\n                  - Shipped\n              quantityType:\n                type: string\n                # Enumeration for 'quantityType':\n                enum:\n                  - Area\n                  - Count\n                  - GrossWeight\n                  - Length\n                  - NetNetWeight\n                  - NetWeight\n                  - NominalWeight\n                  - TareWeight\n              quantityValue:\n                type: number\n              quantityUOM:\n                type: string\n                # Enumeration for 'quantityUOM':\n                enum:\n                  - Bale\n                  - Box\n                  - Centimeter\n                  - Decimeter\n                  - Foot\n                  - Gram\n                  - HundredPounds\n                  - Inch\n                  - Kilogram\n                  - Kilometer\n                  - Meter\n                  - MetricTon\n                  - Millimeter\n                  - Package\n                  - PalletUnit\n                  - Piece\n                  - Pound\n                  - PulpUnit\n                  - Ream\n                  - Reel\n                  - Sheet\n                  - ShortTon\n                  - Skid\n                  - SquareDecimeter\n                  - SquareFoot\n                  - SquareInch\n                  - SquareMeter\n                  - ThousandPieces\n                  - ThousandSquareCentimeters\n                  - ThousandSquareFeet\n                  - ThousandSquareInches\n                  - Yard\n\n    Order:\n      allOf:\n        - $ref: '#/components/schemas/OrderHeader'\n        - properties:\n            orderLineItems:\n              type: array\n              items:\n                $ref: '#/components/schemas/OrderLineItem'\n            links:\n              $ref: '#/components/schemas/PaginationLinks'\n\n    Event:\n      type: object\n      required:\n        - id\n        - type\n        - dateTime\n      properties:\n        id:\n          type: string\n          format: uuid\n        type:\n          type: string\n          # Enumeration for 'Event.type'\n          enum:\n            - Scheduled\n            - ReadyToLoad\n            - LoadingStarted\n            - LoadingCompleted\n            - Departed\n            - TrafficJam\n            - Transshipment\n            - Arrived\n            - Measured\n            - UnloadingStarted\n            - UnloadingCompleted\n            - Completed\n        dateTime:\n          type: string\n          format: date-time\n        location:\n          type: object\n          properties:\n            latitude:\n              type: number\n            longitude:\n              type: number\n            name:\n              type: string\n\n    ShipmentHeader:\n      type: object\n      required:\n        - id\n        - shipmentNumber\n        - shipmentStatus\n      properties:\n        id:\n          type: string\n          format: uuid\n        shipmentNumber:\n          type: string\n        shipmentReferences:\n          type: array\n          items:\n            $ref: '#/components/schemas/shipmentReference'\n        shipmentStatus:\n          type: string\n          # Enumeration for 'shipmentStatus':\n          enum:\n            - Active\n            - Rejected\n            - Completed\n        shipmentArrivalStatus:\n          type: string\n          # Enumeration for 'shipmentArrivalStatus'\n          enum:\n            - OnTime\n            - Early\n            - Delayed\n        scheduledDateTimeOfArrival:\n          type: string\n          format: date-time\n        estimatedDateTimeOfArrival:\n          type: string\n          format: date-time\n        actualDateTimeOfArrival:\n          type: string\n          format: date-time\n\n    shipmentReference:\n      type: object\n      required:\n        - type\n        - assignedBy\n        - value\n      properties:\n        type:\n          type: string\n          enum:\n            - ShipmentNumber\n            - DeliveryInstructionNumber\n            - DeliveryInstructionSequenceNumber\n            - OrderNumber\n            - OrderLineItemNumber\n        assignedBy:\n          type: string\n          enum:\n            - Supplier\n            - Forwarder\n            - Carrier\n            - OrderIssuer\n        value:\n          type: string\n\n    ListOfShipments:\n      type: object\n      required:\n        - shipments\n      properties:\n        shipments:\n          type: array\n          items:\n            $ref: '#/components/schemas/ShipmentHeader'\n        links:\n          $ref: '#/components/schemas/PaginationLinks'\n\n    GetShipment:\n      $ref: '#/components/schemas/Shipment'\n\n    Shipment:\n      allOf:\n        - $ref: '#/components/schemas/ShipmentHeader'\n        - properties:\n            latestEvent:\n              $ref: '#/components/schemas/Event'\n\n    OtherIdentifier:\n      type: object\n      required:\n        - value\n      properties:\n        value:\n          type: string\n        assignedBy:\n          type: string\n          enum:\n            - Customer\n            - Seller\n\n    OtherIdentifiers:\n      type: array\n      items:\n        $ref: '#/components/schemas/OtherIdentifier'\n\n    Description:\n      type: object\n      required:\n        - value\n      properties:\n        language:\n          type: string\n          description: The (three-letter) value - e.g. \"eng\", \"fra\", ... - MUST exist in the ISO 639-2 standard list.\n\n    Descriptions:\n      type: array\n      items:\n        $ref: '#/components/schemas/Description'\n\n    # [BEGING] Paper's properties\n\n    Coating:\n      type: string\n      enum:\n        - Acrylic\n        - Flexolyn\n        - FoilCoated\n        - GreaseBarrier\n        - Metallic\n        - MetalizedPolyester\n        - MoistureBarrier\n        - MoldInhibitor\n        - None\n        - OilBarrier\n        - OxygenBarrier\n        - Plastic\n        - PolyCoating\n        - Polyethylene\n        - Pyroxylin\n        - Silicone\n\n    Coatings:\n      type: array\n      items:\n        $ref: '#/components/schemas/Coating'\n\n    FinishType:\n      type: string\n      enum:\n        - Dull\n        - English\n        - Gloss\n        - Laid\n        - Linen\n        - Machine\n        - Matte\n        - Satin\n        - SCA\n        - SCB\n        - SCC\n        - Silk\n        - Smooth\n        - SoftGloss\n        - Vellum\n        - Velvet\n\n    FinishTypes:\n      type: array\n      items:\n        $ref: '#/components/schemas/FinishType'\n\n    PrintType:\n      type: string\n      enum:\n        - ColdsetOffset\n        - ContinuousForms\n        - Digital\n        - Flexography\n        - FoilPrint\n        - Forms\n        - Gravure\n        - HeatsetOffset\n        - InkJet\n        - InstantOffset\n        - Laser\n        - Letterpress\n        - LightPrint\n        - MiniWeb\n        - RotoFlexography\n        - RotoGravure\n        - RotoLetterpress\n        - RotoSilkScreen\n        - SheetfedOffset\n        - SilkScreen\n        - WebOffset\n\n    PrintTypes:\n      type: array\n      items:\n        $ref: '#/components/schemas/PrintType'\n\n    BasisWeight:\n      type: object\n      required:\n        - value\n        - UOM\n      properties:\n        sizeType:\n          type: string\n          enum:\n            - 24x36\n            - 25x38\n        value:\n          type: number\n        UOM:\n          type: string\n          enum:\n            - GramsPerSquareMeter\n            - Pound\n\n    BasisWeights:\n      type: array\n      items:\n        $ref: '#/components/schemas/BasisWeight'\n\n    BasisWeightRange:\n      type: object\n      required:\n        - min\n        - max\n      properties:\n        min:\n          $ref: '#/components/schemas/BasisWeight'\n        max:\n          $ref: '#/components/schemas/BasisWeight'\n\n    Bulk:\n      type: object\n      required:\n        - value\n        - UOM\n      properties:\n        value:\n          type: string\n          enum:\n            - CubicCentimeterPerGram\n\n    Bulks:\n      type: array\n      items:\n        $ref: '#/components/schemas/Bulk'\n\n    Caliper:\n      type: object\n      required:\n        - value\n        - UOM\n      properties:\n        value:\n          type: number\n        UOM:\n          type: string\n          enum:\n            - Micron\n            - Millimeter\n\n    Calipers:\n      type: array\n      items:\n        $ref: '#/components/schemas/Caliper'\n\n    ColourShade:\n      type: object\n      required:\n        - value\n        - agency\n      properties:\n        value:\n          type: string\n        agency:\n          type: string\n          enum:\n            - Buyer\n            - Customer\n            - EndUser\n            - Seller\n            - Supplier\n\n    ColourShades:\n      type: array\n      items:\n        $ref: '#/components/schemas/ColourShade'\n\n    ColourDescriptions:\n      type: array\n      items:\n        type: string\n\n    Recycled:\n      type: array\n      items:\n        type: object\n        required:\n          - value\n          - UOM\n        properties:\n          value:\n            type: number\n          UOM:\n            type: string\n            enum:\n              - Percentage\n\n    PaperFormat:\n      type: string\n      enum:\n        - Reel\n        - Sheet\n\n    Width:\n      type: object\n      required:\n        - value\n        - UOM\n      properties:\n        value:\n          type: number\n        UOM:\n          type: string\n          enum:\n            - Centimeter\n            - Inch\n            - Millimeter\n\n    Widths:\n      type: array\n      items:\n        $ref: '#/components/schemas/Width'\n\n    WidthRange:\n      type: object\n      required:\n        - min\n        - max\n      properties:\n        min:\n          $ref: '#/components/schemas/Width'\n        max:\n          $ref: '#/components/schemas/Width'\n\n    Length:\n      type: object\n      required:\n        - value\n        - UOM\n      properties:\n        value:\n          type: number\n        UOM:\n          type: string\n          enum:\n            - Centimeter\n            - Foot\n            - Inch\n            - Meter\n            - Millimeter\n            - Yard\n\n    Lengths:\n      type: array\n      items:\n        $ref: '#/components/schemas/Length'\n\n    LengthRange:\n      type: object\n      required:\n        - min\n        - max\n      properties:\n        min:\n          $ref: '#/components/schemas/Length'\n        max:\n          $ref: '#/components/schemas/Length'\n\n    WindingDirection:\n      type: string\n      enum:\n        - WireSideIn\n        - WireSideOut\n\n    WindingDirections:\n      type: array\n      items:\n        $ref: '#/components/schemas/WindingDirection'\n\n    ReelMakeToConstraint:\n      type: string\n      enum:\n        - Length\n        - Diameter\n\n    ReelMakeToConstraints:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReelMakeToConstraint'\n\n    ReelDiameter:\n      type: object\n      required:\n        - value\n        - UOM\n      properties:\n        value:\n          type: number\n        UOM:\n          type: string\n          enum:\n            - Centimeter\n            - Inch\n            - Millimeter\n\n    ReelDiameters:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReelDiameter'\n\n    ReelDiameterRange:\n      type: object\n      properties:\n        min:\n          $ref: '#/components/schemas/ReelDiameter'\n        max:\n          $ref: '#/components/schemas/ReelDiameter'\n\n    CoreEndType:\n      type: string\n      enum:\n        - Adaptor\n        - Bevelled\n        - Bridge\n        - Notched\n        - NotchedFullMetal\n        - Plain\n        - PlainFullMetal\n        - Tapered\n\n    CoreEndTypes:\n      type: array\n      items:\n        $ref: '#/components/schemas/CoreEndType'\n\n    CoreMaterialType:\n      type: string\n      enum:\n        - Aluminium\n        - Composite\n        - Fibre\n        - Iron\n        - Paper\n        - Plastic\n        - Steel\n\n    CoreMaterialTypes:\n      type: array\n      items:\n        $ref: '#/components/schemas/CoreMaterialType'\n\n    CoreDiameter:\n      type: object\n      required:\n        - value\n        - UOM\n      properties:\n        value:\n          type: number\n        UOM:\n          type: string\n          enum:\n            - Centimeter\n            - Inch\n            - Millimeter\n\n    CoreDiameters:\n      type: array\n      items:\n        $ref: '#/components/schemas/CoreDiameter'\n\n    CoreDiameterRange:\n      type: object\n      properties:\n        min:\n          $ref: '#/components/schemas/CoreDiameter'\n        max:\n          $ref: '#/components/schemas/CoreDiameter'\n\n    CoreStrengthCode:\n      type: object\n      required:\n        - value\n        - agency\n      properties:\n        value:\n          type: string\n        agency:\n          type: string\n          enum:\n            - Buyer\n            - Customer\n            - EndUser\n            - Seller\n            - Supplier\n\n    CoreStrengthCodes:\n      type: array\n      items:\n        $ref: '#/components/schemas/CoreStrengthCode'\n\n    GrainDirection:\n      type: string\n      enum:\n        - Long\n        - Short\n\n    GrainDirections:\n      type: array\n      items:\n        $ref: '#/components/schemas/GrainDirection'\n\n    Paper:\n      type: object\n      required:\n        - format\n      properties:\n        # Properties that do not depend on the reel or sheet format:\n        coatingTop:\n          $ref: '#/components/schemas/Coating'\n        coatingTops:\n          $ref: '#/components/schemas/Coatings'\n        coatingBottom:\n          $ref: '#/components/schemas/Coating'\n        coatingBottoms:\n          $ref: '#/components/schemas/Coatings'\n        finishType:\n          $ref: '#/components/schemas/FinishType'\n        finishTypes:\n          $ref: '#/components/schemas/FinishTypes'\n        printType:\n          $ref: '#/components/schemas/PrintType'\n        printTypes:\n          $ref: '#/components/schemas/PrintTypes'\n        basisWeight:\n          $ref: '#/components/schemas/BasisWeight'\n        basisWeights:\n          $ref: '#/components/schemas/BasisWeights'\n        basisWeightRange:\n          $ref: '#/components/schemas/BasisWeightRange'\n        bulk:\n          $ref: '#/components/schemas/Bulk'\n        bulks:\n          $ref: '#/components/schemas/Bulks'\n        caliper:\n          $ref: '#/components/schemas/Caliper'\n        calipers:\n          $ref: '#/components/schemas/Calipers'\n        colourShade:\n          $ref: '#/components/schemas/ColourShade'\n        colourShades:\n          $ref: '#/components/schemas/ColourShades'\n        colourDescriptions:\n          $ref: '#/components/schemas/ColourDescriptions'\n        recycled:\n          $ref: '#/components/schemas/Recycled'\n        format:\n          $ref: '#/components/schemas/PaperFormat'\n\n        # Properties that are common to reel or sheet format:\n        width:\n          $ref: '#/components/schemas/Width'\n        widths:\n          $ref: '#/components/schemas/Widths'\n        widthRange:\n          $ref: '#/components/schemas/WidthRange'\n        length:\n          $ref: '#/components/schemas/Length'\n        lengths:\n          $ref: '#/components/schemas/Lengths'\n        lengthRange:\n          $ref: '#/components/schemas/LengthRange'\n\n        # Properties that are specific to reel format:\n        windingDirection:\n          $ref: '#/components/schemas/WindingDirection'\n        windingDirections:\n          $ref: '#/components/schemas/WindingDirections'\n        reelMakeToConstraint:\n          $ref: '#/components/schemas/ReelMakeToConstraint'\n        reelMakeToConstraints:\n          $ref: '#/components/schemas/ReelMakeToConstraints'\n        reelDiameter:\n          $ref: '#/components/schemas/ReelDiameter'\n        reelDiameters:\n          $ref: '#/components/schemas/ReelDiameters'\n        reelDiameterRange:\n          $ref: '#/components/schemas/ReelDiameterRange'\n        coreEndType:\n          $ref: '#/components/schemas/CoreEndType'\n        coreEndTypes:\n          $ref: '#/components/schemas/CoreEndTypes'\n        coreMaterialType:\n          $ref: '#/components/schemas/CoreMaterialType'\n        coreMaterialTypes:\n          $ref: '#/components/schemas/CoreMaterialTypes'\n        coreDiameterInside:\n          $ref: '#/components/schemas/CoreDiameter'\n        coreDiameterInsides:\n          $ref: '#/components/schemas/CoreDiameters'\n        coreDiameterInsideRange:\n          $ref: '#/components/schemas/CoreDiameterRange'\n        coreStrengthCode:\n          $ref: '#/components/schemas/CoreStrengthCode'\n        coreStrengthCodes:\n          $ref: '#/components/schemas/CoreStrengthCodes'\n\n        # Properties that are specific to sheet format:\n        grainDirection:\n          $ref: '#/components/schemas/GrainDirection'\n        grainDirections:\n          $ref: '#/components/schemas/GrainDirections'\n\n    # [END] Paper's properties\n\n    SellerProductBasic:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n          format: uuid\n        otherIdentifier:\n          $ref: '#/components/schemas/OtherIdentifier'\n        status:\n          type: string\n          enum:\n            - Active\n            - Inactive\n        name:\n          type: string\n        link:\n          type: string\n          format: uri-reference\n        descriptions:\n          $ref: '#/components/schemas/Descriptions'\n        productType:\n          type: string\n          enum:\n            - Paper\n\n    SellerProduct:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/SellerProductBasic'\n        - anyOf:\n          - $ref: '#/components/schemas/Paper'\n\n    ListOfSellerProducts:\n      type: object\n      required:\n        - numberOfSellerProducts\n        - sellerProducts\n      properties:\n        numberOfSellerProducts:\n          type: integer\n        sellerProducts:\n          type: array\n          items:\n            $ref: '#/components/schemas/SellerProductBasic'\n        links:\n          $ref: '#/components/schemas/PaginationLinks'\n\n    CustomerArticleBasic:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n          format: uuid\n        otherIdentifier:\n          $ref: '#/components/schemas/OtherIdentifier'\n        sellerProductId:\n          type: string\n          format: uuid\n        sellerProductOtherIdentifier:\n          $ref: '#/components/schemas/OtherIdentifier'\n        sellerProductStatus:\n          type: string\n          enum:\n            - Active\n            - Inactive\n        status:\n          type: string\n          enum:\n            - Active\n            - Inactive\n        name:\n          type: string\n        link:\n          type: string\n          format: uri-reference\n        descriptions:\n          $ref: '#/components/schemas/Descriptions'\n        productType:\n          type: string\n          enum:\n            - Paper\n\n    CustomerArticle:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CustomerArticleBasic'\n        - anyOf:\n          - $ref: '#/components/schemas/Paper'\n\n    ListOfCustomerArticles:\n      type: object\n      required:\n        - numberOfCustomerArticles\n        - customerArticles\n      properties:\n        numberOfCustomerArticles:\n          type: integer\n        customerArticles:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerArticle'\n        links:\n          $ref: '#/components/schemas/PaginationLinks'",
			"canonicalURL": "/github.com/papinet/papiNet-API@c94a2642f829467d8878471acbf85dd1940082b4/-/blob/1.2.0/papiNet-API.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/papinet/papiNet-API/blob/c94a2642f829467d8878471acbf85dd1940082b4/1.2.0/papiNet-API.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/customer-articles\": get: responses: code 200: contents: media: \"application/json\": generate schema: field customerArticles: item: allOf: schema type mismatch: object and "
}