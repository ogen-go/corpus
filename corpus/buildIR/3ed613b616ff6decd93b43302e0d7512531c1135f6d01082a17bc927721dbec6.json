{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/celo-org/payments"
		},
		"file": {
			"name": "payment-protocol.yaml",
			"size": 0,
			"path": "packages/types/src/payment-protocol.yaml",
			"byteSize": 35292,
			"content": "x-send-defaults: true\nopenapi: 3.0.0\ninfo:\n  title: First Payment Protocol\n  version: 1.0.0\n  description: |-\n    An OpenAPI spec to describe First/Celo JSON-RPC payment protocol.\n\n    This protocol adheres to JSON RPC 2.0 with the following specific instructions:\n    - Parameters are sent by-name, i.e. params MUST be an Object, with member names that match the Server expected parameter names. The absence of expected names will result in an error being generated. The names must match exactly, including case, to the method's expected parameters\n    - Request id cannot be Null (this protocol does not make use of JSON RPC notifications)\n    - Request id cannot be fractional\n    - No usage of batches (i.e. each request is sent individually)\n\n    <div style='background-color: #dfeaf5; border-left: 6px solid #2196F3; margin-top: 16px; margin-bottom: 16px; padding: 16px;'>\n    Please note that due to lack of ability to describe different json-rpc methods under the exact same path (REST limitation), we use the hidden spaces as path suffix.\n    When reading the documentation, it should not be visible, but for code generation one should carfuly inspect the generated code for these spaces.\n\n    The endpoint itself should be called without that suffix (e.g. `/rpc` instead of <code>/rpc&nbsp;&nbsp;</code>)\n    </div>\n\n    ## Authentication\n    All requests are signed by the <a href='https://docs.celo.org/command-line-interface/commands/account#celocli-account-register-data-encryption-key'>data encryption key (DEK)</a> of the sending wallet.<br/>\n    We use <a href='https://eips.ethereum.org/EIPS/eip-712'>EIP712</a> as a signing schema, but limited only to the data models described in this document.<br/>\n    For the `domain separator` we use the structure definitions from this document for the various data types with the following modifications:<br/>\n    * `int32` and `uint32` are indicated as `int256`\n    * `uint64` is indicated as `uint256`\n    * `addresses` are treated as `strings`\n\n    Before signing a message, one must sort it alphabetically (ordering by the object keys), to ensure signature consistency.<br/>\n    For the `types` property, the array should be sorted using the name parameters of every field<br/>\n    For an example, even if the message is\n    ```json\n    {\n      types: {\n        EIP712Domain: [\n          { name: 'version', type: 'string' },\n          { name: 'name', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n        ],\n        GetPaymentInfoParams: [{ name: 'referenceId', type: 'string' }],\n        Request: [\n          { name: 'method', type: 'string' },\n          { name: 'id', type: 'int256' },\n          { name: 'params', type: 'GetPaymentInfoParams' },\n          { name: 'jsonrpc', type: 'string' },\n        ],\n      },\n      domain: { name: 'Celo Payments', version: '1', chainId: 44787 },\n      primaryType: 'Request',\n      message: {\n        id: 106072111072212,\n        jsonrpc: '2.0',\n        method: 'getPaymentInfo',\n        params: { referenceId: '00000000-0000-0000-0000000000' },\n      }\n    }\n    ```\n    The signature is expected to be calculated from:\n    ```json\n    {\n      domain: { name: 'Celo Payments', version: '1', chainId: 44787 },\n      message: {\n        id: 106072111072212,\n        jsonrpc: '2.0',\n        method: 'getPaymentInfo',\n        params: { referenceId: '00000000-0000-0000-0000000000' },\n      },\n      primaryType: 'Request',\n      types: {\n        EIP712Domain: [\n          { name: 'chainId', type: 'uint256' },\n          { name: 'name', type: 'string' },\n          { name: 'version', type: 'string' },\n        ],\n        GetPaymentInfoParams: [{ name: 'referenceId', type: 'string' }],\n        Request: [\n          { name: 'id', type: 'int256' },\n          { name: 'jsonrpc', type: 'string' },\n          { name: 'method', type: 'string' },\n          { name: 'params', type: 'GetPaymentInfoParams' },\n        ],\n      }\n    }\n    ```\n\n    Every offchain message must include an HTTP `X-Signature` and `X-Address` headers:<br/>\n    * `X-Signature` contains the EIP712 signature\n    * `X-Address` contains the sending wallet address\n\n    When receiving an offchain message, one should query the blockchain for the sender address (`X-Address`) and fetch its most update DEK<br/>\n    Now it should calculate the EIP712 typed data structure and verify the given signature (`X-Signature`) using the retreived DEK<br/>\n    <b>The offchain response must be signed in the same way</b><br/>\n\n    For all invalid signature errors we recommend PSPs return a 400 error code.<br/>\n  x-logo:\n    url: ./logo.png\n    altText: First/Celo logo\n\nservers:\n  - url: http://127.0.0.1:3000\npaths:\n  \"/rpc\":\n    post:\n      operationId: getPaymentInfo\n      deprecated: false\n      summary: Get Payment Info\n      description:\n        Allows the wallet to obtain payment information from First, given\n        a reference id. In most cases, this would be the first method invoked by the\n        wallet\n      tags:\n        - Payments\n      parameters: []\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GetPaymentInfoResponse\"\n        \"404\":\n          description: The method does not exist / is not available\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/JsonRpcMethodNotFoundErrorResponse\"\n        \"400\":\n          description: One or more parameters are invalid (including reference ID not found)\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidSignatureErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidParameterErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcReferenceIdNotFoundErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidCommandTypeErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcUnspecifiedErrorResponse\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/GetPaymentInfo\"\n  \"/rpc\\ \":\n    post:\n      operationId: initCharge\n      deprecated: false\n      summary: Init Charge\n      description:\n        This functionality allows the wallet to initiate the payment process\n        with First, based on the payment details provided.\n      tags:\n        - Payments\n      parameters: []\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/InitChargeResponse\"\n        \"404\":\n          description: The method does not exist / is not available\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/JsonRpcMethodNotFoundErrorResponse\"\n        \"400\":\n          description: One or more parameters are invalid (including reference ID not found)\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidSignatureErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidParameterErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcReferenceIdNotFoundErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcRiskChecksFailedErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcMissingInformationErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcPaymentTypeMismatchErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidCommandTypeErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcUnspecifiedErrorResponse\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/InitCharge\"\n  \"/rpc\\ \\ \":\n    post:\n      operationId: readyForSettlement\n      deprecated: false\n      summary: Ready For Settlement\n      description: Allows the wallet to indicate the payment was put on- chain and is ready for settlement. The wallet is expected to submit a transaction on-chain\n      tags:\n        - Payments\n      parameters: []\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ReadyForSettlementResponse\"\n        \"404\":\n          description: The method does not exist / is not available\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/JsonRpcMethodNotFoundErrorResponse\"\n        \"400\":\n          description: One or more parameters are invalid (including reference ID not found)\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidSignatureErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidParameterErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcReferenceIdNotFoundErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcPaymentTypeMismatchErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidCommandTypeErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcUnspecifiedErrorResponse\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ReadyForSettlement\"\n  \"/rpc\\ \\ \\ \":\n    post:\n      operationId: abort\n      deprecated: false\n      summary: Abort Payment\n      description: Allows the wallet to abort a payment\n      tags:\n        - Payments\n      parameters: []\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AbortResponse\"\n        \"404\":\n          description: The method does not exist / is not available\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/JsonRpcMethodNotFoundErrorResponse\"\n        \"400\":\n          description: One or more parameters are invalid (including reference ID not found)\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidSignatureErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidParameterErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcReferenceIdNotFoundErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcPaymentTypeMismatchErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcInvalidCommandTypeErrorResponse\"\n                  - \"$ref\": \"#/components/schemas/JsonRpcUnspecifiedErrorResponse\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Abort\"\n\nx-headers: []\ncomponents:\n  schemas:\n    JsonRpcProtocol:\n      type: object\n      required:\n        - id\n        - jsonrpc\n      properties:\n        id:\n          type: integer\n          format: int32\n          description: Request ID\n        jsonrpc:\n          type: string\n          default: \"2.0\"\n          description: JSON-RPC Version (2.0)\n    JsonRpcRequired:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcProtocol\"\n        - type: object\n          required:\n            - method\n          properties:\n            method:\n              type: string\n              description: Method name\n    JsonRpcSuccessResponse:\n      type: object\n      required:\n        - id\n        - jsonrpc\n        - result\n      properties:\n        id:\n          type: integer\n          format: int32\n          description: Request ID\n        jsonrpc:\n          type: string\n          default: \"2.0\"\n          description: JSON-RPC Version (2.0)\n        result:\n          type: 'null'\n    JsonRpcErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcProtocol\"\n        - type: object\n          required:\n            - error\n          properties:\n            error:\n              \"$ref\": \"#/components/schemas/JsonRpcError\"\n    Any:\n      description: something\n    JsonRpcError:\n      type: object\n      required:\n        - code\n      properties:\n        code:\n          type: integer\n          minimum: -32700\n          maximum: -32000\n          format: int32\n        message:\n          type: string\n        data:\n          \"$ref\": \"#/components/schemas/Any\"\n    JsonRpcInvalidRequestError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - -32600\n          description: Invalid request\n        message:\n          type: string\n        data:\n          \"$ref\": \"#/components/schemas/Any\"\n      required:\n        - code\n    JsonRpcInvalidRequestErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcErrorResponse\"\n        - type: object\n          properties:\n            error:\n              allOf:\n                - $ref: \"#/components/schemas/JsonRpcInvalidRequestError\"\n          required:\n            - error\n    JsonRpcMethodNotFoundError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - -32601\n          description: Method not found\n        message:\n          type: string\n        data:\n            \"$ref\": \"#/components/schemas/Any\"\n      required:\n        - code\n    JsonRpcMethodNotFoundErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcErrorResponse\"\n        - type: object\n          properties:\n            error:\n              \"$ref\": \"#/components/schemas/JsonRpcMethodNotFoundError\"\n          required:\n            - error\n    JsonRpcInvalidParameterError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - -32602\n          description: Invalid method parameter(s)\n        message:\n          type: string\n        data:\n            \"$ref\": \"#/components/schemas/Any\"\n      required:\n        - code\n    JsonRpcInvalidParameterErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcErrorResponse\"\n        - type: object\n          properties:\n            error:\n              $ref: \"#/components/schemas/JsonRpcInvalidParameterError\"\n          required:\n            - error\n    JsonRpcUnspecifiedError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - -32000\n          description: |\n            Unspecified error\n        message:\n          type: string\n        data:\n          \"$ref\": \"#/components/schemas/Any\"\n      required:\n        - code\n    JsonRpcUnspecifiedErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcErrorResponse\"\n        - type: object\n          properties:\n            error:\n              $ref: \"#/components/schemas/JsonRpcUnspecifiedError\"\n          example:\n            code: -32000\n            message: Unspecified error\n            data:\n              referenceId: 5a655425-1d30-4e39-bd26-6b02875f2f0d\n          required:\n            - error\n    JsonRpcReferenceIdNotFoundError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - -32001\n          description: |\n            The reference id provided in the request was not found\n        message:\n          type: string\n        data:\n          \"$ref\": \"#/components/schemas/Any\"\n      required:\n        - code\n    JsonRpcReferenceIdNotFoundErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcErrorResponse\"\n        - type: object\n          properties:\n            error:\n              $ref: \"#/components/schemas/JsonRpcReferenceIdNotFoundError\"\n          example:\n            code: -32001\n            message: The reference id provided in the request was not found\n            data:\n              referenceId: 5a655425-1d30-4e39-bd26-6b02875f2f0d\n          required:\n            - error\n    JsonRpcRiskChecksFailedError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - -32002\n          description: |\n            The risk checks did not pass successfully\n        message:\n          type: string\n        data:\n          \"$ref\": \"#/components/schemas/Any\"\n      required:\n        - code\n    JsonRpcRiskChecksFailedErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcErrorResponse\"\n        - type: object\n          properties:\n            error:\n              $ref: \"#/components/schemas/JsonRpcRiskChecksFailedError\"\n          example:\n            code: -32002\n            message: The risk checks did not pass successfully\n            data:\n              reason: Sanctions list\n          required:\n            - error\n    JsonRpcMissingInformationError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - -32003\n          description: |\n            A mandatory field or element are missing from the request\n        message:\n          type: string\n        data:\n          \"$ref\": \"#/components/schemas/Any\"\n      required:\n        - code\n    JsonRpcMissingInformationErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcErrorResponse\"\n        - type: object\n          properties:\n            error:\n              \"$ref\": \"#/components/schemas/JsonRpcMissingInformationError\"\n          example:\n            code: -32003\n            message: A mandatory field or element are missing from the request\n            data:\n              missingFields:\n                - \"phoneNumber\"\n          required:\n            - error\n    JsonRpcPaymentTypeMismatchError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - -32004\n          description: |\n            Consumer tried to invoke an action that is irrelevant for the payment type\n        message:\n          type: string\n        data:\n          \"$ref\": \"#/components/schemas/Any\"\n      required:\n        - code\n    JsonRpcPaymentTypeMismatchErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcErrorResponse\"\n        - type: object\n          properties:\n            error:\n              \"$ref\": \"#/components/schemas/JsonRpcPaymentTypeMismatchError\"\n          example:\n            code: -32004\n            message: Consumer tried to invoke an action that is irrelevant for the payment type\n            data:\n              requestedAction: capture\n          required:\n            - error\n    JsonRpcInvalidCommandTypeError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - -32005\n          description: |\n            When trying to invoke an action out of its expected order (e.g. The wallet invoked ReadyForSettlement before payment was initialized)\n        message:\n          type: string\n        data:\n          \"$ref\": \"#/components/schemas/Any\"\n      required:\n        - code\n    JsonRpcInvalidCommandTypeErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcErrorResponse\"\n        - type: object\n          properties:\n            error:\n              \"$ref\": \"#/components/schemas/JsonRpcInvalidCommandTypeError\"\n          example:\n            code: -32005\n            message: ReadyForSettlement sent before payment was initialized\n          required:\n            - error\n    JsonRpcInvalidSignatureError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - -32006\n          description: |\n            Signature header missing or could not be verified\n        message:\n          type: string\n        data:\n          \"$ref\": \"#/components/schemas/Any\"\n      required:\n        - code\n    JsonRpcInvalidSignatureErrorResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcErrorResponse\"\n        - type: object\n          properties:\n            error:\n              \"$ref\": \"#/components/schemas/JsonRpcInvalidSignatureError\"\n          example:\n            code: -32006\n            message: Signature header missing or could not be verified\n          required:\n            - error\n    ReferenceId:\n      type: string\n      description:\n        Unique reference ID of this payment. This value should be globally\n        unique\n      format: uuid\n    GetPaymentInfo:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcRequired\"\n        - \"$ref\": \"#/components/schemas/GetPaymentInfoRequest\"\n    GetPaymentInfoParams:\n      title: Parameters\n      type: object\n      required:\n        - referenceId\n      properties:\n        referenceId:\n          \"$ref\": \"#/components/schemas/ReferenceId\"\n    GetPaymentInfoRequest:\n      type: object\n      required:\n        - method\n        - params\n      properties:\n        method:\n          type: string\n          description: Method name\n          enum:\n            - getPaymentInfo\n        params:\n          \"$ref\": \"#/components/schemas/GetPaymentInfoParams\"\n    GetPaymentInfoResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcSuccessResponse\"\n        - type: object\n          required:\n            - result\n          properties:\n            result:\n              \"$ref\": \"#/components/schemas/PaymentInfo\"\n    PaymentInfo:\n      type: object\n      properties:\n        requiredPayerData:\n          \"$ref\": \"#/components/schemas/RequiredPayerData\"\n        receiver:\n          \"$ref\": \"#/components/schemas/ReceiverData\"\n        action:\n          \"$ref\": \"#/components/schemas/PaymentAction\"\n        referenceId:\n          \"$ref\": \"#/components/schemas/ReferenceId\"\n        description:\n          type: string\n          description: Description of the payment. To be displayed to the customer\n          example: payment request description\n      required:\n        - action\n        - receiver\n        - referenceId\n    RequiredAddressData:\n      type: object\n      description: |\n        Defines which elements of the payer address data are required for this payment.\n        The absence of properties indicates their optionality (default to false)\n      properties:\n        city:\n          type: boolean\n        country:\n          type: boolean\n        line1:\n          type: boolean\n        line2:\n          type: boolean\n        postalCode:\n          type: boolean\n        state:\n          type: boolean\n    Address:\n      type: object\n      properties:\n        city:\n          type: string\n          example: San Francisco\n          description: The city, district, suburb, town, or village\n        country:\n          type: string\n          example: US\n          minLength: 2\n          maxLength: 3\n          description: Two-letter (ISO 3166-1 country code)[https://en.wikipedia.org/wiki/ISO_3166-1]\n        line1:\n          type: string\n          example: 1260 Market Street\n          description: Address line 1\n        line2:\n          type: string\n          example: Suite 450\n          description: Address line 2 - apartment, unit, etc.\n        postalCode:\n          type: string\n          example: \"94103\"\n          description: ZIP or postal code\n        state:\n          type: string\n          example: CA\n          description: State, county, province, region\n    RequiredNationalIdData:\n      type: object\n      description: |\n        Defines which elements of the payer national ID data are required for this payment.\n        The absence of properties indicates their optionality (default to false)\n      properties:\n        idValue:\n          type: boolean\n        country:\n          type: boolean\n        type:\n          type: boolean\n    NationalIdData:\n      type: object\n      properties:\n        idValue:\n          type: string\n          description:\n            Indicates the national ID value - for example, a social security\n            number\n        country:\n          type: string\n          minLength: 2\n          maxLength: 2\n          description: Two-letter (ISO country code)[https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2]\n        type:\n          type: string\n          description: Indicates the type of the ID\n    RequiredPayerData:\n      type: object\n      description: |\n        Defines which elements of the payer data are required for this payment.\n        The absence of properties indicates their optionality (default to false)\n      properties:\n        givenName:\n          type: boolean\n        surname:\n          type: boolean\n        phoneNumber:\n          type: boolean\n        address:\n          \"$ref\": \"#/components/schemas/RequiredAddressData\"\n        nationalIdData:\n          \"$ref\": \"#/components/schemas/RequiredNationalIdData\"\n    PayerData:\n      type: object\n      properties:\n        givenName:\n          type: string\n          description: Given name of the payer\n        surname:\n          type: string\n          description: Surname of the payer\n        phoneNumber:\n          type: string\n          description: Phone number of the payer\n        address:\n          \"$ref\": \"#/components/schemas/Address\"\n        nationalIdData:\n          \"$ref\": \"#/components/schemas/NationalIdData\"\n    BusinessData:\n      type: object\n      required:\n        - name\n        - legalName\n        - address\n      description: Includes the details of the merchant to be displayed to the payer\n      properties:\n        name:\n          type: string\n          example: Acme\n          description: Merchant's display name. Should be recognizable by the payer\n        legalName:\n          type: string\n          example: Acme Technologies Inc.\n          description: The legal entity name\n        imageUrl:\n          type: string\n          format: url\n          description: URL with the business logo\n          example: https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Acme_Markets_lolo.svg/1200px-Acme_Markets_lolo.svg.png\n        address:\n          \"$ref\": \"#/components/schemas/Address\"\n    ReceiverData:\n      type: object\n      required:\n        - accountAddress\n        - businessData\n      description: The details of the payment receiver (e.g. merchant)\n      properties:\n        accountAddress:\n          type: string\n          format: hex\n          description: The blockchain address of the receiver account\n          example: \"0x9A648e76bCa0Bc3A0Ac44C37Db6Af133B57b8896\"\n        businessData:\n          \"$ref\": \"#/components/schemas/BusinessData\"\n    PaymentAction:\n      type: object\n      required:\n        - amount\n        - currency\n        - action\n        - timestamp\n      description: Information regarding the type of payment and payment amount\n      properties:\n        amount:\n          oneOf:\n            - type: integer\n              minimum: 0\n              format: uint64\n              example: 452\n              description:\n                Amount of the transfer. Base units are the same as for on-chain\n                transactions for this currency.\n            - type: string\n              example: \"100000000000000000\"\n              description:\n                A string representation of the Amount of the transfer. Base units are the same as for on-chain\n                transactions for this currency. Strings should be used only for BigNumbers\n        currency:\n          type: string\n          enum:\n            - cUSD\n          default: cUSD\n          description:\n            One of the supported on-chain currency types, e.g. cUSD. At\n            the moment, cUSD is the only allowed value.\n        action:\n          type: string\n          enum:\n            - charge\n          default: charge\n          description:\n            This value indicates the requested action to perform. At the\n            moment, charge is the only allowed value.\n        timestamp:\n          type: integer\n          minimum: 0\n          format: uint32\n          description: Unix timestamp indicating the time that the payment was created\n    InitCharge:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcRequired\"\n        - \"$ref\": \"#/components/schemas/InitChargeRequest\"\n    InitChargeParams:\n      title: Parameters\n      type: object\n      required:\n        - sender\n        - referenceId\n        - transactionHash\n      properties:\n        sender:\n          \"$ref\": \"#/components/schemas/PaymentSender\"\n        referenceId:\n          \"$ref\": \"#/components/schemas/ReferenceId\"\n        transactionHash:\n          type: string\n          format: hex\n          description: Transaction hash (pre-calculated), in Hex format\n    InitChargeRequest:\n      type: object\n      required:\n        - method\n        - params\n      properties:\n        method:\n          type: string\n          description: Method name\n          enum:\n            - initCharge\n        params:\n          \"$ref\": \"#/components/schemas/InitChargeParams\"\n    PaymentSender:\n      type: object\n      description: Minimal payer information required\n      required:\n        - accountAddress\n        - payerData\n      properties:\n        accountAddress:\n          type: string\n          format: hex\n          description: Address of the customer/wallet\n        payerData:\n          \"$ref\": \"#/components/schemas/PayerData\"\n    InitChargeResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcSuccessResponse\"\n    ReadyForSettlement:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcRequired\"\n        - \"$ref\": \"#/components/schemas/ReadyForSettlementRequest\"\n    ReadyForSettlementParams:\n      title: Parameters\n      type: object\n      required:\n        - referenceId\n      properties:\n        referenceId:\n          \"$ref\": \"#/components/schemas/ReferenceId\"\n    ReadyForSettlementRequest:\n      type: object\n      required:\n        - method\n        - params\n      properties:\n        method:\n          type: string\n          description: Method name\n          enum:\n            - readyForSettlement\n        params:\n          \"$ref\": \"#/components/schemas/ReadyForSettlementParams\"\n    ReadyForSettlementResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcSuccessResponse\"\n    Abort:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcRequired\"\n        - \"$ref\": \"#/components/schemas/AbortRequest\"\n    AbortCodes:\n      type: string\n      enum:\n        - general\n        - customer_declined\n        - insufficient_funds\n        - could_not_put_transaction\n        - business_not_verified\n    AbortParams:\n      title: Parameters\n      type: object\n      required:\n        - referenceId\n      properties:\n        referenceId:\n          \"$ref\": \"#/components/schemas/ReferenceId\"\n        abortCode:\n          \"$ref\": \"#/components/schemas/AbortCodes\"\n        abortMessage:\n          type: string\n          description: a descriptive message regarding the root cause for the abortion\n    AbortRequest:\n      type: object\n      required:\n        - method\n        - params\n      properties:\n        method:\n          type: string\n          description: Method name\n          enum:\n            - abort\n        params:\n          \"$ref\": \"#/components/schemas/AbortParams\"\n    AbortResponse:\n      allOf:\n        - \"$ref\": \"#/components/schemas/JsonRpcSuccessResponse\"\n\ntags:\n  - name: Payments\n  - name: GetPaymentInfoRequest\n    x-displayName: GetPaymentInfo Request (GetPaymentInfoParams)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/GetPaymentInfoParams\"/>\n  - name: GetPaymentInfoResponse\n    x-displayName: GetPaymentInfo Response (PaymentInfo)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/PaymentInfo\"/>\n  - name: InitChargeModel\n    x-displayName: InitCharge Request (InitChargeParams)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/InitChargeParams\"/>\n  - name: ReadyForSettlementModel\n    x-displayName: ReadyForSettlement Request (ReadyForSettlementParams)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/ReadyForSettlementParams\"/>\n  - name: AbortModel\n    x-displayName: Abort Request (AbortParams)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/AbortParams\"/>\n  - name: JsonRpcInvalidRequestErrorModel\n    x-displayName: Invalid Request (JsonRpcInvalidRequestError)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/JsonRpcInvalidRequestError\"/>\n  - name: JsonRpcInvalidParameterErrorModel\n    x-displayName: Invalid Parameter (JsonRpcInvalidParameterError)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/JsonRpcInvalidParameterError\"/>\n  - name: JsonRpcMethodNotFoundErrorModel\n    x-displayName: Method Not Found (JsonRpcMethodNotFoundError)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/JsonRpcMethodNotFoundError\"/>\n  - name: JsonRpcReferenceIdNotFoundErrorModel\n    x-displayName: Reference Id Not Found (JsonRpcReferenceIdNotFoundError)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/JsonRpcReferenceIdNotFoundError\"/>\n  - name: JsonRpcRiskChecksFailedErrorModel\n    x-displayName: Risk Checks Failed (JsonRpcRiskChecksFailedError)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/JsonRpcRiskChecksFailedError\"/>\n  - name: JsonRpcMissingInformationErrorModel\n    x-displayName: Missing Information (JsonRpcMissingInformationError)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/JsonRpcMissingInformationError\"/>\n  - name: JsonRpcPaymentTypeMismatchErrorModel\n    x-displayName: Payment Type Mismatch (JsonRpcPaymentTypeMismatchError)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/JsonRpcPaymentTypeMismatchError\"/>\n  - name: JsonRpcInvalidCommandTypeErrorModel\n    x-displayName: Invalid Command Type (JsonRpcInvalidCommandTypeError)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/JsonRpcInvalidCommandTypeError\"/>\n  - name: JsonRpcUnspecifiedErrorModel\n    x-displayName: Unspecified Error (JsonRpcUnspecifiedError)\n    description: <SchemaDefinition schemaRef=\"#/components/schemas/JsonRpcUnspecifiedError\"/>\nx-tagGroups:\n  - name: Payments\n    tags:\n      - Payments\n  - name: RequestModels\n    x-displayName: Models\n    tags:\n      - GetPaymentInfoRequest\n      - GetPaymentInfoResponse\n      - InitChargeModel\n      - ReadyForSettlementModel\n      - AbortModel\n  - name: ErrorModels\n    x-displayName: Errors\n    tags:\n      - JsonRpcInvalidRequestErrorModel\n      - JsonRpcInvalidParameterErrorModel\n      - JsonRpcMethodNotFoundErrorModel\n      - JsonRpcReferenceIdNotFoundErrorModel\n      - JsonRpcRiskChecksFailedErrorModel\n      - JsonRpcMissingInformationErrorModel\n      - JsonRpcPaymentTypeMismatchErrorModel\n      - JsonRpcInvalidCommandTypeErrorModel\n      - JsonRpcUnspecifiedErrorModel\n",
			"canonicalURL": "/github.com/celo-org/payments@81d74244a7d06ca07879a91dfea2caf29d4b8371/-/blob/packages/types/src/payment-protocol.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/celo-org/payments/blob/81d74244a7d06ca07879a91dfea2caf29d4b8371/packages/types/src/payment-protocol.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/rpc   \": post: requestBody: contents: application/json: generate schema: allOf: schema type mismatch:  and object"
}