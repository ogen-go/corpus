{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bcgov/nr-get-token"
		},
		"file": {
			"name": "v1.api-spec.yaml",
			"size": 0,
			"path": "app/src/docs/v1.api-spec.yaml",
			"byteSize": 30800,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  version: 1.0.0\n  title: GetOK API\n  description: \u003e-\n    This API automates the process for getting setup to use NR Common Services\n  license:\n    name: Apache 2.0\n    url: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n  contact:\n    name: NR Common Service Showcase\n    email: NR.CommonServiceShowcase@gov.bc.ca\nservers:\n  - url: /api/v1\n    description: This Server\nsecurity:\n  - BearerAuth: []\n    OpenID: []\npaths:\n  \"/acronyms/\":\n    get:\n      summary: An administrative call to fetch all acronyms\n      operationId: getAllAcronyms\n      tags:\n        - Acronyms\n      security:\n        - OpenID:\n          - realm:GETOK_ADMIN_ADD_USER\n      responses:\n        \"200\":\n          description: Acronyms list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcronymList\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/acronyms/{acronym}\":\n    get:\n      summary: Returns the details that GETOK stores about an application acronym\n      operationId: getAcronym\n      tags:\n        - Acronyms\n      parameters:\n        - name: acronym\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Acronym details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcronymDetail\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/acronyms/{acronym}/addUser/{username}\":\n    post:\n      summary: A special administrative call to add users to acronym and email them.\n      operationId: addUser\n      tags:\n        - Acronyms\n      security:\n        - OpenID:\n          - realm:GETOK_ADMIN_ADD_USER\n      parameters:\n        - name: acronym\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n        - name: username\n          in: path\n          description: IDIR of the user to add\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Details of the contact to email to the user being added\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddUserEmailDetails\"\n      responses:\n        \"200\":\n          description: User acronym details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserAcronymDetail\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/acronyms/{acronym}/clients\":\n    get:\n      summary: Returns all YAMS (Common Service KeyCloak realm) service clients that the supplied acronym has.\n      operationId: getAcronymClients\n      tags:\n        - Acronyms\n      parameters:\n        - name: acronym\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Acronym clients (Dev, Test, and Prod)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcronymClients\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/acronyms/{acronym}/history\":\n    get:\n      summary: Returns records from the audit of client deployments for the acronym.\n      operationId: getAcronymHistory\n      tags:\n        - Acronyms\n      parameters:\n        - name: acronym\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Acronym history (Dev, Test, and Prod)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcronymHistory\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/audit/{acronym}\":\n    get:\n      summary: \u003e-\n        Returns the history that GETOK stores about actions done on behalf of an\n        acronym\n      operationId: getAudit\n      tags:\n        - Audit\n      parameters:\n        - name: acronym\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Audit history details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuditHistoryList\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/acronyms/{acronym}/users\":\n    get:\n      summary: Returns all Users from the GETOK database associated with the acronym with their user data from Keycloak\n      operationId: getAcronymUsers\n      tags:\n        - Acronyms\n      parameters:\n        - name: acronym\n          in: path\n          description: Name of the project\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: User list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcronymUsersList\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /checks/status:\n    get:\n      summary: Returns status of correspondent APIs\n      description: Fetch the health statuses of associated endpoints\n      operationId: checkStatus\n      tags:\n        - Checks\n      responses:\n        \"200\":\n          description: Responds if the correspondent API endpoint(s) are healthy\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EndpointList\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /email:\n    post:\n      summary: Sends an application registration request email\n      description: Leverages the CHES API to issue an email\n      operationId: email\n      tags:\n        - Email\n      requestBody:\n        description: Form fields representing the contact information to email\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ContactForm\"\n      responses:\n        \"201\":\n          description: Email Successfully Sent\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/keycloak/serviceClients\":\n    get:\n      summary: Returns all registered service clients\n      operationId: kcServiceClientsGet\n      tags:\n        - KeyCloak Service Clients\n      responses:\n        \"200\":\n          description: Returns an array of the registered service clients\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KcClients\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /keyCloak/configForm:\n    post:\n      summary: Submit a proposed application to KeyCloak\n      operationId: kcConfigFormPost\n      tags:\n        - KeyCloak Service Client Configuration\n      requestBody:\n        description: Form fields required to generate a KeyCloak Service Client\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KcConfigForm\"\n      responses:\n        \"200\":\n          description: Service Client Credentials and Endpoint information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KcConfigResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/users/{keycloakId}/acronyms\":\n    get:\n      summary: Returns acronyms associated with a user\n      operationId: userAcronymGet\n      tags:\n        - Users\n      parameters:\n        - name: keycloakId\n          in: path\n          description: Keycloak user UUID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of associated acronyms\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserAcronymList\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/users/{keycloakId}/acronyms/{acronym}\":\n    delete:\n      summary: Removes an acronym associated with a user\n      operationId: userAcronymDelete\n      tags:\n        - Users\n      parameters:\n        - name: keycloakId\n          in: path\n          description: Keycloak user UUID\n          required: true\n          schema:\n            type: string\n        - name: acronym\n          in: path\n          description: Acronym\n          required: true\n          schema:\n            type: string\n      responses:\n        \"202\":\n          $ref: \"#/components/responses/Accepted\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/users/{keycloakId}/acronyms/clients\":\n    get:\n      summary: Returns service clients for all realms for all acronyms associated with a user\n      operationId: userAcronymClientGet\n      tags:\n        - Users\n      parameters:\n        - name: keycloakId\n          in: path\n          description: Keycloak user UUID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of associated acronyms' clients\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcronymClientsList\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    OpenID:\n      type: openIdConnect\n      openIdConnectUrl: \"https://oidc.gov.bc.ca/auth/realms/vehizw2t/.well-known/openid-configuration\"\n  schemas:\n    AuditHistoryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AuditHistory\"\n      description: An array of audit history items\n    AuditHistory:\n      type: object\n      properties:\n        date:\n          type: string\n          example: 2019-08-22T18:43:07.393Z\n        acronym:\n          type: string\n          example: MSSC\n        user:\n          type: string\n          example: jsmith@idir\n        environment:\n          type: string\n          example: DEV\n        details:\n          type: string\n          example: \"details string/object, subject to change\"\n    AcronymClients:\n      type: object\n      properties:\n        acronym:\n          type: string\n          example: MSSC\n        dev:\n          $ref: \"#/components/schemas/KcClientDetail\"\n        test:\n          $ref: \"#/components/schemas/KcClientDetail\"\n        prod:\n          $ref: \"#/components/schemas/KcClientDetail\"\n    AcronymClientsList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AcronymClients\"\n    AcronymDetail:\n      type: object\n      properties:\n        acronym:\n          type: string\n          example: MSSC\n        description:\n          type: string\n          example: This application sends emails for the common service team\n        name:\n          type: string\n          example: Messaging Service Showcase\n    AcronymHistory:\n      type: object\n      properties:\n        acronym:\n          $ref: \"#/components/schemas/AcronymDetail\"\n        DeploymentHistories:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DeploymentHistory\"\n    AcronymList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AcronymDetail\"\n    AcronymUsersList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AcronymUserMapping\"\n    AcronymUserMapping:\n      type: object\n      properties:\n        userAcronymDetails:\n            $ref: \"#/components/schemas/UserAcronymDetail\"\n        user:\n            $ref: \"#/components/schemas/User\"\n    AppConfigKC:\n      type: object\n      properties:\n        applicationAcronym:\n          type: string\n          example: MSSC\n        applicationDescription:\n          type: string\n          example: An example application to send emails\n        applicationName:\n          type: string\n          example: Messaging service showcase app\n        clientEnvironment:\n          type: string\n          example: TEST\n        commonServices:\n          type: array\n          items:\n            type: string\n            example: CHES\n          description: An array of applicationAcronyms\n    AddUserEmailDetails:\n      type: object\n      properties:\n        comment:\n          type: string\n          description: Unformatted comment text\n          example: Thanks for contacting us\n        status:\n          type: string\n          description: A status to display in the email\n          example: APPROVED\n        nextSteps:\n          type: string\n          description: The email field called Next Steps\n          example: Finish Registration\n    BadRequest:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 400\n            title:\n              example: Bad Request\n            type:\n              example: \"https://httpstatuses.com/400\"\n    Conflict:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 409\n            title:\n              example: Conflict\n            type:\n              example: \"https://httpstatuses.com/409\"\n    ContactForm:\n      type: object\n      required:\n        - applicationAcronym\n        - comments\n        - from\n        - idir\n      properties:\n        applicationAcronym:\n          type: string\n          description: The requested application acronym\n          example: MSSC\n        comments:\n          type: string\n          description: Unformatted comment text\n          example: My team has 10 members\n        from:\n          type: string\n          description: The sender's registered email\n          example: jsmith@gov.bc.ca\n        idir:\n          type: string\n          description: The sender's IDIR\n          example: jsmith@idir\n    DeploymentHistory:\n      type: object\n      properties:\n        acronymId:\n          type: string\n          example: d288f328-3d0e-4bd0-8d89-8beccdace260\n        appConfig:\n          $ref: \"#/components/schemas/AppConfigKC\"\n        createdAt:\n          type: string\n          description: The datestamp the deployment happened\n          example: \"2019-08-22T18:43:07.393Z\"\n        env:\n          type: string\n          description: The environment the client was deployed to\n          example: \"TEST\"\n        historyId:\n          type: integer\n          example: 56\n        User:\n          $ref: \"#/components/schemas/User\"\n        userId:\n          type: string\n          example: a199f328-3d0e-4bd0-8d89-8beccdace745\n    EndpointStatus:\n      type: object\n      required:\n        - name\n        - endpoint\n        - healthCheck\n        - authenticated\n        - authorized\n      properties:\n        name:\n          type: string\n          description: The name of the endpoint\n          example: Keycloak API\n        endpoint:\n          type: string\n          description: Base endpoint URL\n          example: \"https://example.com/v1/\"\n        healthCheck:\n          type: boolean\n          description: Is the endpoint reachable\n        authenticated:\n          type: boolean\n          description: Are credentials valid to access endpoint\n        authorized:\n          type: boolean\n          description: Do the credentials have the right permissions\n    EndpointList:\n      type: object\n      required:\n        - endpoints\n      properties:\n        endpoints:\n          type: array\n          items:\n            $ref: \"#/components/schemas/EndpointStatus\"\n          description: A list of Endpoint Statuses\n    Error:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 500\n            title:\n              example: Internal Server Error\n            type:\n              example: \"https://httpstatuses.com/500\"\n    KcClientDetail:\n      type: object\n      required:\n        - environment\n        - id\n        - clientId\n        - enabled\n        - name\n        - description\n        - commonServiceRoles\n      properties:\n        environment:\n          type: string\n          enum:\n            - DEV\n            - TEST\n            - PROD\n          description: \u003e-\n            Which KeyCloak environment the client is in - one of DEV, TEST or\n            PROD\n          example: TEST\n        id:\n          type: string\n          example: d288f328-3d0e-4bd0-8d89-8beccdace260\n        clientId:\n          type: string\n          example: ZZZZ_SERVICE_CLIENT\n        enabled:\n          type: boolean\n          example: true\n        name:\n          type: string\n          example: ZZZ Application\n        description:\n          type: string\n          example: This application does some work\n        serviceAccountEmail:\n          type: string\n          example: bob.alice@gov.bc.ca\n        commonServiceRoles:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Role\"\n          description: An array of Common Service roles the client currently has\n    KcClientDetailFull:\n      type: object\n      description: \"Keycloak's representation of a client. see: https://www.keycloak.org/docs-api/5.0/rest-api/index.html#_clientrepresentation\"\n      properties:\n        access:\n          type: object\n          example: { view: true, configure: true, manage: true }\n        attributes:\n          type: object\n          example:\n            saml.assertion.signature: 'false'\n            saml.multivalued.roles: 'false'\n            saml.force.post.binding: 'false'\n            saml.encrypt: 'false'\n            saml.server.signature: 'false'\n            saml.server.signature.keyinfo.ext: 'false'\n            exclude.session.state.from.auth.response: 'false'\n            saml_force_name_id_format: 'false'\n            saml.client.signature: 'false'\n            tls.client.certificate.bound.access.tokens: 'false'\n            saml.authnstatement: 'false'\n            display.on.consent.screen: 'false'\n            saml.onetimeuse.condition: 'false'\n        authenticationFlowBindingOverrides:\n          type: object\n        authorizationServicesEnabled:\n          type: boolean\n        bearerOnly:\n          type: boolean\n        clientAuthenticatorType:\n          type: string\n          example: client-secret\n        clientId:\n          type: string\n          example: TEST_SERVICE_CLIENT\n        consentRequired:\n          type: boolean\n        defaultClientScopes:\n          type: string\n        description:\n          type: string\n          example: Test Service Client\n        directAccessGrantsEnabled:\n          type: boolean\n        enabled:\n          type: boolean\n        environment:\n          type: string\n          example: test\n        frontchannelLogout:\n          type: boolean\n        fullScopeAllowed:\n          type: boolean\n        id:\n          type: string\n          example: 12345-abcde-67890-fghijk\n        implicitFlowEnabled:\n          type: boolean\n        name:\n          type: string\n          example: TEST\n        nodeReRegistrationTimeout:\n          type: integer\n          example: -1\n        notBefore:\n          type: integer\n        optionalClientScopes:\n          type: string\n        protocol:\n          type: string\n          example: 'openid-connect'\n        protocolMappers:\n          type: array\n          items:\n            type: string\n        publicClient:\n          type: boolean\n        redirectUris:\n          type: string\n        serviceAccountsEnabled:\n          type: boolean\n        standardFlowEnabled:\n          type: boolean\n        surrogateAuthRequired:\n          type: boolean\n        webOrigins:\n          type: string\n    KcClients:\n      type: array\n      items:\n        $ref: \"#/components/schemas/KcClientDetailFull\"\n      description: An array of registered service clients\n    KcConfigForm:\n      type: object\n      required:\n        - applicationAcronym\n        - applicationName\n        - applicationDescription\n        - commonServices\n        - clientEnvironment\n        - passwordPublicKey\n      properties:\n        applicationAcronym:\n          type: string\n          example: MSSC\n        applicationName:\n          type: string\n          example: Application Name\n        applicationDescription:\n          type: string\n          example: Application Description\n        clientEnvironment:\n          type: string\n          enum:\n            - DEV\n            - TEST\n            - PROD\n          description: \"Which KeyCloak environment to work on - one of DEV, TEST or PROD\"\n          example: INT\n        commonServices:\n          type: array\n          items:\n            type: string\n            example: CHES\n          description: An array of applicationAcronyms\n        passwordPublicKey:\n          type: string\n          description: A public key in PEM format without the headers\n          example: MIGfMA0GCSqGS...\n    KcConfigResponse:\n      required:\n        - oidcTokenUrl\n        - generatedPassword\n        - generatedServiceClient\n      properties:\n        oidcTokenUrl:\n          type: string\n          description: \u003e-\n            Contains the OpenID Connect token url for the generated Service\n            Client to get authenticated\n          example: ABC123XYZ\n        generatedPassword:\n          type: string\n          description: \u003e-\n            Contains the generated password, encrypted with the user-supplied\n            public key\n          example: ABC123XYZ\n        generatedServiceClient:\n          type: string\n          description: Contains the service client name that was written\n          example: CHES_SERVICE_CLIENT\n    NotFound:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          properties:\n            status:\n              example: 404\n            title:\n              example: Not Found\n            type:\n              example: \"https://httpstatuses.com/404\"\n    Problem:\n      required:\n        - type\n        - title\n        - status\n        - detail\n      properties:\n        type:\n          type: string\n          description: \"What type of problem, link to explanation of problem\"\n        title:\n          type: string\n          description: \"Title of problem, generally the Http Status Code description\"\n        status:\n          type: string\n          description: The Http Status code\n        detail:\n          type: string\n          description: Short description of why this problem was raised.\n    Role:\n      type: object\n      required:\n        - roleName\n        - description\n      properties:\n        roleName:\n          type: string\n          example: EMAILER\n        description:\n          type: string\n          example: This role allows email sending via CHES\n    UserAcronymList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UserAcronymDetail\"\n      description: An array of acronym detail items\n    UserAcronymDetail:\n      type: object\n      properties:\n        acronym:\n          type: string\n          description: The application acronym\n          example: MSSC\n        owner:\n          type: boolean\n          description: User is an owner of this acronym\n          example: false\n        createdAt:\n          type: string\n          description: The datestamp the user-\u003eacronym mapping was created\n          example: \"2019-08-22T18:43:07.393Z\"\n    User:\n      type: object\n      properties:\n        userId:\n          type: string\n          description: Primary key from the user table\n          example: cc745445-e221-4a9a-8758-2d7d20c1decf\n        keycloakGuid:\n          type: string\n          description: Identifier for the user in KC\n          example: 5b5d0a2f-93a0-4c18-9d70-753648b8e7b9\n        username:\n          type: string\n          description: Username from KC\n          example: jsmith@idir\n        firstName:\n          type: string\n          description: First name from KC\n          example: John\n        lastName:\n          type: string\n          description: Last name from KC\n          example: Smith\n        email:\n          type: string\n          description: Email from KC\n          example: jsmith@gov.bc.ca\n    ValidationError:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - type: object\n          required:\n            - errors\n          properties:\n            errors:\n              type: array\n              items:\n                type: object\n                required:\n                  - message\n                properties:\n                  value:\n                    type: object\n                    description: Contents of the field that was in error.\n                    example: utf-8x\n                  message:\n                    type: string\n                    description: The error message for the field.\n                    example: Invalid value `encoding`.\n            status:\n              example: 422\n            title:\n              example: Unprocessable Entity\n            type:\n              example: \"https://httpstatuses.com/422\"\n  responses:\n    Accepted:\n      description: Accepted\n    BadRequest:\n      description: Request is missing content or is malformed\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BadRequest\"\n    Conflict:\n      description: Request conflicts with server state\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Conflict\"\n    Error:\n      description: Unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Forbidden:\n      description: Lack required role to perform action\n    NoContent:\n      description: Accepted and no content\n    NotFound:\n      description: Not found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotFound\"\n    UnauthorizedError:\n      description: Access token is missing or invalid\n    UnprocessableEntity:\n      description: \u003e-\n        The server was unable to process the contained instructions. Generally\n        validation error(s).\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ValidationError\"\n",
			"canonicalURL": "/github.com/bcgov/nr-get-token@3ee80ff8fb3e109479f479df16a2e36e31367f66/-/blob/app/src/docs/v1.api-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bcgov/nr-get-token/blob/3ee80ff8fb3e109479f479df16a2e36e31367f66/app/src/docs/v1.api-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/acronyms/{acronym}\": get: responses: 404: contents: application/json: generate schema: allOf: merge properties: try to merge conflicting property schemas: schema type mismatch:  and string"
}