{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/rumble.run/2.0.3/openapi.yaml",
			"byteSize": 102222,
			"content": "openapi: 3.0.0\nservers:\n  - description: Rumble Console\n    url: https://console.rumble.run/api/v1.0\ninfo:\n  contact:\n    email: support@rumble.run\n  description: Rumble Network Discovery API\n  license:\n    name: Commercial\n    url: https://www.rumble.run/terms\n  title: Rumble API\n  version: 2.0.3\n  x-apisguru-categories:\n    - monitoring\n  x-logo:\n    url: //www.rumble.run/img/rumble-twitter-card.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/RumbleDiscovery/rumble-api/main/rumble-api.yml\n      version: \"3.0\"\n  x-providerName: rumble.run\ntags:\n  - description: Requires Organization Key\n    name: Organization\n  - description: Requires Export Token or Organization Key\n    name: Export\n  - description: Unauthenticated\n    name: Public\npaths:\n  /account/agents:\n    get:\n      operationId: getAccountAgents\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Agent\"\n                type: array\n          description: array of tasks\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all agents across all organizations\n      tags:\n        - Account\n  /account/credentials:\n    get:\n      operationId: getAccountCredentials\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Credential\"\n                type: array\n          description: array of credentials\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all account credentials\n      tags:\n        - Account\n    put:\n      operationId: createAccountCredential\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CredentialOptions\"\n        description: credential parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Credential\"\n          description: credential details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Create a new credential\n      tags:\n        - Account\n  \"/account/credentials/{credential_id}\":\n    delete:\n      operationId: removeAccountCredential\n      parameters:\n        - description: UUID of the credential to delete\n          in: path\n          name: credential_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Remove this credential\n      tags:\n        - Account\n    get:\n      operationId: getAccountCredential\n      parameters:\n        - description: UUID of the credential to retrieve\n          in: path\n          name: credential_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Credential\"\n          description: credential details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Get credential details\n      tags:\n        - Account\n  /account/events.json:\n    get:\n      operationId: exportEventsJSON\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Event\"\n                type: array\n          description: filtered event results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: System event log as JSON\n      tags:\n        - Account\n  /account/events.jsonl:\n    get:\n      operationId: exportEventsJSONL\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Event\"\n                type: array\n          description: filtered event results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: System event log as JSON line-delimited\n      tags:\n        - Account\n  /account/keys:\n    get:\n      operationId: getAccountKeys\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/APIKey\"\n                type: array\n          description: array of keys\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all active API keys\n      tags:\n        - Account\n    put:\n      operationId: createAccountKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/APIKeyOptions\"\n        description: key parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKey\"\n          description: key details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Create a new key\n      tags:\n        - Account\n  \"/account/keys/{key_id}\":\n    delete:\n      operationId: removeAccountKey\n      parameters:\n        - description: UUID of the key to retrieve\n          in: path\n          name: key_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Remove this key\n      tags:\n        - Account\n    get:\n      operationId: getAccountKey\n      parameters:\n        - description: UUID of the key to retrieve\n          in: path\n          name: key_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/APIKey\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get key details\n      tags:\n        - Account\n  \"/account/keys/{key_id}/rotate\":\n    patch:\n      operationId: rotateAccountKey\n      parameters:\n        - description: UUID of the key to retrieve\n          in: path\n          name: key_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKey\"\n          description: key details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Rotates the key secret\n      tags:\n        - Account\n  /account/license:\n    get:\n      operationId: getAccountLicense\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/License\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get license details\n      tags:\n        - Account\n  /account/orgs:\n    get:\n      operationId: getAccountOrganizations\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Organization\"\n                type: array\n          description: array of organizations\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all organization details\n      tags:\n        - Account\n    put:\n      operationId: createAccountOrganization\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrgOptions\"\n        description: organization definition\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n          description: organization details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Create a new organization\n      tags:\n        - Account\n  \"/account/orgs/{org_id}\":\n    delete:\n      operationId: removeAccountOrganization\n      parameters:\n        - description: UUID of the organization to retrieve\n          in: path\n          name: org_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Remove this organization\n      tags:\n        - Account\n    get:\n      operationId: getAccountOrganization\n      parameters:\n        - description: UUID of the organization to retrieve\n          in: path\n          name: org_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get organization details\n      tags:\n        - Account\n    patch:\n      operationId: updateAccountOrganization\n      parameters:\n        - description: UUID of the organization to retrieve\n          in: path\n          name: org_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrgOptions\"\n        description: organization options\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n          description: organization details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Update organization details\n      tags:\n        - Account\n  \"/account/orgs/{org_id}/exportToken\":\n    delete:\n      operationId: deleteAccountOrganizationExportToken\n      parameters:\n        - description: UUID of the organization to retrieve\n          in: path\n          name: org_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Removes the export token from the specified organization\n      tags:\n        - Account\n  \"/account/orgs/{org_id}/exportToken/rotate\":\n    patch:\n      operationId: rotateAccountOrganizationExportToken\n      parameters:\n        - description: UUID of the organization to retrieve\n          in: path\n          name: org_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n          description: organization details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Rotates the organization export token and returns the updated organization\n      tags:\n        - Account\n  /account/sites:\n    get:\n      operationId: getAccountSites\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Site\"\n                type: array\n          description: array of sites\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all sites details across all organizations\n      tags:\n        - Account\n  /account/tasks:\n    get:\n      operationId: getAccountTasks\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Task\"\n                type: array\n          description: array of tasks\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all task details across all organizations (up to 1000)\n      tags:\n        - Account\n  /account/users:\n    get:\n      operationId: getAccountUsers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/User\"\n                type: array\n          description: array of users\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all users\n      tags:\n        - Account\n    put:\n      operationId: createAccountUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserOptions\"\n        description: user parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: key details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Create a new user account\n      tags:\n        - Account\n  /account/users/invite:\n    put:\n      operationId: createAccountUserInvite\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserInviteOptions\"\n        description: user invite parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: key details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Create a new user account and send an email invite\n      tags:\n        - Account\n  \"/account/users/{user_id}\":\n    delete:\n      operationId: removeAccountUser\n      parameters:\n        - description: UUID of the user to delete\n          in: path\n          name: user_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Remove this user\n      tags:\n        - Account\n    get:\n      operationId: getAccountUser\n      parameters:\n        - description: UUID of the user to retrieve\n          in: path\n          name: user_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get user details\n      tags:\n        - Account\n    patch:\n      operationId: updateAccountUser\n      parameters:\n        - description: UUID of the user to retrieve\n          in: path\n          name: user_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserOptions\"\n        description: user parameters\n        required: true\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Update a user's details\n      tags:\n        - Account\n  \"/account/users/{user_id}/resetLockout\":\n    patch:\n      operationId: resetAccountUserLockout\n      parameters:\n        - description: UUID of the user to retrieve\n          in: path\n          name: user_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Resets the user's lockout status\n      tags:\n        - Account\n  \"/account/users/{user_id}/resetMFA\":\n    patch:\n      operationId: resetAccountUserMFA\n      parameters:\n        - description: UUID of the user to retrieve\n          in: path\n          name: user_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Resets the user's MFA tokens\n      tags:\n        - Account\n  \"/account/users/{user_id}/resetPassword\":\n    patch:\n      operationId: resetAccountUserPassword\n      parameters:\n        - description: UUID of the user to retrieve\n          in: path\n          name: user_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Sends the user a password reset email\n      tags:\n        - Account\n  /export/org/assets.cisco.csv:\n    get:\n      operationId: exportAssetsCiscoCSV\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            text/csv:\n              schema:\n                format: binary\n                type: string\n          description: filtered asset results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Cisco serial number and model name export for Cisco Smart Net Total Care Service.\n      tags:\n        - Cisco SNTC\n  /export/org/assets.csv:\n    get:\n      operationId: exportAssetsCSV\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            text/csv:\n              schema:\n                format: binary\n                type: string\n          description: filtered asset results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Asset inventory as CSV\n      tags:\n        - Export\n  /export/org/assets.json:\n    get:\n      operationId: exportAssetsJSON\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Asset\"\n                type: array\n          description: filtered asset results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Exports the asset inventory\n      tags:\n        - Export\n  /export/org/assets.jsonl:\n    get:\n      operationId: exportAssetsJSONL\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: binary\n                type: string\n          description: filtered asset results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Asset inventory as JSON line-delimited\n      tags:\n        - Export\n  /export/org/assets.nmap.xml:\n    get:\n      operationId: exportAssetsNmapXML\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            text/xml:\n              schema:\n                format: binary\n                type: string\n          description: filtered asset results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Asset inventory as Nmap-style XML\n      tags:\n        - Export\n  /export/org/assets.servicenow.csv:\n    get:\n      operationId: snowExportAssetsCSV\n      responses:\n        \"200\":\n          content:\n            text/csv:\n              schema:\n                format: binary\n                type: string\n          description: asset export\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Export an asset inventory as CSV for ServiceNow integration\n      tags:\n        - ServiceNow\n  /export/org/assets.servicenow.json:\n    get:\n      operationId: snowExportAssetsJSON\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AssetServiceNow\"\n                type: array\n          description: filtered asset results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Exports the asset inventory as JSON\n      tags:\n        - ServiceNow\n  /export/org/assets/sync/created/assets.json:\n    get:\n      operationId: splunkAssetSyncCreatedJSON\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: an optional unix timestamp to use as a checkpoint\n          in: query\n          name: since\n          required: false\n          schema:\n            example: 1576300370\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssetsWithCheckpoint\"\n          description: filtered asset results with a checkpoint wrapper\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Exports the asset inventory in a sync-friendly manner using created_at as a checkpoint. Requires the Splunk entitlement.\n      tags:\n        - Splunk\n  /export/org/assets/sync/updated/assets.json:\n    get:\n      operationId: splunkAssetSyncUpdatedJSON\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: an optional unix timestamp to use as a checkpoint\n          in: query\n          name: since\n          required: false\n          schema:\n            example: 1576300370\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssetsWithCheckpoint\"\n          description: filtered asset results with a checkpoint wrapper\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Exports the asset inventory in a sync-friendly manner using updated_at as a checkpoint. Requires the Splunk entitlement.\n      tags:\n        - Splunk\n  /export/org/services.csv:\n    get:\n      operationId: exportServicesCSV\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            text/csv:\n              schema:\n                format: binary\n                type: string\n          description: filtered service results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Service inventory as CSV\n      tags:\n        - Export\n  /export/org/services.json:\n    get:\n      operationId: exportServicesJSON\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Service\"\n                type: array\n          description: filtered service results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Service inventory as JSON\n      tags:\n        - Export\n  /export/org/services.jsonl:\n    get:\n      operationId: exportServicesJSONL\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: binary\n                type: string\n          description: filtered service results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Service inventory as JSON line-delimited\n      tags:\n        - Export\n  /export/org/services.servicenow.csv:\n    get:\n      operationId: snowExportServicesCSV\n      responses:\n        \"200\":\n          content:\n            text/csv:\n              schema:\n                format: binary\n                type: string\n          description: services export\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Export a service inventory as CSV for ServiceNow integration\n      tags:\n        - ServiceNow\n  /export/org/sites.csv:\n    get:\n      operationId: exportSitesCSV\n      responses:\n        \"200\":\n          content:\n            text/csv:\n              schema:\n                format: binary\n                type: string\n          description: all sites\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Site list as CSV\n      tags:\n        - Export\n  /export/org/sites.json:\n    get:\n      operationId: exportSitesJSON\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Site\"\n                type: array\n          description: all sites\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Export all sites\n      tags:\n        - Export\n  /export/org/sites.jsonl:\n    get:\n      operationId: exportSitesJSONL\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: binary\n                type: string\n          description: all sites\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Site list as JSON line-delimited\n      tags:\n        - Export\n  /export/org/wireless.csv:\n    get:\n      operationId: exportWirelessCSV\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            text/csv:\n              schema:\n                format: binary\n                type: string\n          description: filtered wireless results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Wireless inventory as CSV\n      tags:\n        - Export\n  /export/org/wireless.json:\n    get:\n      operationId: exportWirelessJSON\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Wireless\"\n                type: array\n          description: filtered wireless results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Wireless inventory as JSON\n      tags:\n        - Export\n  /export/org/wireless.jsonl:\n    get:\n      operationId: exportWirelessJSONL\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: an optional list of fields to export, comma-separated\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: binary\n                type: string\n          description: filtered wireless results\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Wireless inventory as JSON line-delimited\n      tags:\n        - Export\n  /org:\n    get:\n      operationId: getOrganization\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n          description: organization details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get organization details\n      tags:\n        - Organization\n    patch:\n      operationId: updateOrganization\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrgOptions\"\n        description: organization options\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n          description: organization details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Update organization details\n      tags:\n        - Organization\n  /org/agents:\n    get:\n      operationId: getAgents\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Agent\"\n                type: array\n          description: array of agents\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all agents\n      tags:\n        - Organization\n  \"/org/agents/{agent_id}\":\n    delete:\n      operationId: removeAgent\n      parameters:\n        - description: UUID of the agent to remove\n          in: path\n          name: agent_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Remove and uninstall an agent\n      tags:\n        - Organization\n    get:\n      operationId: getAgent\n      parameters:\n        - description: UUID of the agent\n          in: path\n          name: agent_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Agent\"\n          description: agent details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Get details for a single agent\n      tags:\n        - Organization\n    patch:\n      operationId: updateAgentSite\n      parameters:\n        - description: UUID of the agent to update\n          in: path\n          name: agent_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AgentSiteID\"\n        description: site_id to associate with the agent\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Agent\"\n          description: agent details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Update the site associated with agent\n      tags:\n        - Organization\n  \"/org/agents/{agent_id}/update\":\n    post:\n      operationId: upgradeAgent\n      parameters:\n        - description: UUID of the agent to update\n          in: path\n          name: agent_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Force an agent to update and restart\n      tags:\n        - Organization\n  /org/assets:\n    get:\n      operationId: getAssets\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Asset\"\n                type: array\n          description: array of assets\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all assets\n      tags:\n        - Organization\n  \"/org/assets/{asset_id}\":\n    delete:\n      operationId: removeAsset\n      parameters:\n        - description: UUID of the asset to remove\n          in: path\n          name: asset_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Remove an asset\n      tags:\n        - Organization\n    get:\n      operationId: getAsset\n      parameters:\n        - description: UUID of the asset to retrieve\n          in: path\n          name: asset_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Asset\"\n          description: asset details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Get asset details\n      tags:\n        - Organization\n  \"/org/assets/{asset_id}/comments\":\n    patch:\n      operationId: updateAssetComments\n      parameters:\n        - description: UUID of the asset to update\n          in: path\n          name: asset_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssetComments\"\n        description: comments to apply to the asset\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Asset\"\n          description: asset details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Update asset comments\n      tags:\n        - Organization\n  \"/org/assets/{asset_id}/tags\":\n    patch:\n      operationId: updateAssetTags\n      parameters:\n        - description: UUID of the agent to update\n          in: path\n          name: asset_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssetTags\"\n        description: tags to apply to the asset\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Asset\"\n          description: asset details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Update asset tags\n      tags:\n        - Organization\n  /org/key:\n    delete:\n      operationId: removeKey\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Remove the current API key\n      tags:\n        - Organization\n    get:\n      operationId: getKey\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKey\"\n          description: api key details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get API key details\n      tags:\n        - Organization\n  /org/key/rotate:\n    patch:\n      operationId: rotateKey\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIKey\"\n          description: api key details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Rotate the API key secret and return the updated key\n      tags:\n        - Organization\n  /org/services:\n    get:\n      operationId: getServices\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Service\"\n                type: array\n          description: array of services\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all services\n      tags:\n        - Organization\n  \"/org/services/{service_id}\":\n    delete:\n      operationId: removeService\n      parameters:\n        - description: UUID of the service to remove\n          in: path\n          name: service_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Remove a service\n      tags:\n        - Organization\n    get:\n      operationId: getService\n      parameters:\n        - description: UUID of the service to retrieve\n          in: path\n          name: service_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Service\"\n          description: service details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Get service details\n      tags:\n        - Organization\n  /org/sites:\n    get:\n      operationId: getSites\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Site\"\n                type: array\n          description: array of sites\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all sites\n      tags:\n        - Organization\n    put:\n      operationId: createSite\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SiteOptions\"\n        description: site definition\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n          description: site details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Create a new site\n      tags:\n        - Organization\n  \"/org/sites/{site_id}\":\n    delete:\n      operationId: removeSite\n      parameters:\n        - description: UUID or name of the site to remove\n          in: path\n          name: site_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Remove a site and associated assets\n      tags:\n        - Organization\n    get:\n      operationId: getSite\n      parameters:\n        - description: UUID or name of the site\n          in: path\n          name: site_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n          description: site details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Get site details\n      tags:\n        - Organization\n    patch:\n      operationId: updateSite\n      parameters:\n        - description: UUID or name of the site to update\n          in: path\n          name: site_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SiteOptions\"\n        description: site object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n          description: site details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Update a site definition\n      tags:\n        - Organization\n  \"/org/sites/{site_id}/import\":\n    put:\n      operationId: importScanData\n      parameters:\n        - description: UUID or name of the site to import scan data into\n          in: path\n          name: site_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: binary\n              type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: import task\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/LicenseExpiredError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n        \"500\":\n          $ref: \"#/components/responses/ProcessingError\"\n      security:\n        - bearerAuth: []\n      summary: Import a scan data file into a site\n      tags:\n        - Organization\n  \"/org/sites/{site_id}/scan\":\n    put:\n      operationId: createScan\n      parameters:\n        - description: UUID or name of the site to scan\n          in: path\n          name: site_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ScanOptions\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: a created scan task\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/LicenseExpiredError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n        \"500\":\n          $ref: \"#/components/responses/ProcessingError\"\n      security:\n        - bearerAuth: []\n      summary: Create a scan task for a given site\n      tags:\n        - Organization\n  /org/tasks:\n    get:\n      operationId: getTasks\n      parameters:\n        - description: an optional status string for filtering results\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Task\"\n                type: array\n          description: array of tasks\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all tasks (last 1000)\n      tags:\n        - Organization\n  \"/org/tasks/{task_id}\":\n    get:\n      operationId: getTask\n      parameters:\n        - description: UUID of the task to retrieve\n          in: path\n          name: task_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: task details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get task details\n      tags:\n        - Organization\n    patch:\n      operationId: updateTask\n      parameters:\n        - description: UUID of the task to update\n          in: path\n          name: task_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Task\"\n        description: task object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: task details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Update task parameters\n      tags:\n        - Organization\n  \"/org/tasks/{task_id}/changes\":\n    get:\n      operationId: getTaskChangeReport\n      parameters:\n        - description: UUID of the task\n          in: path\n          name: task_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/URL\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Returns a temporary task change report data url\n      tags:\n        - Organization\n  \"/org/tasks/{task_id}/data\":\n    get:\n      operationId: getTaskScanData\n      parameters:\n        - description: UUID of the task\n          in: path\n          name: task_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/URL\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Returns a temporary task scan data url\n      tags:\n        - Organization\n  \"/org/tasks/{task_id}/hide\":\n    post:\n      operationId: hideTask\n      parameters:\n        - description: UUID of the task to hide\n          in: path\n          name: task_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Signal that a completed task should be hidden\n      tags:\n        - Organization\n  \"/org/tasks/{task_id}/stop\":\n    post:\n      operationId: stopTask\n      parameters:\n        - description: UUID of the task to stop\n          in: path\n          name: task_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: Automatically created\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Signal that a task should be stopped or canceledThis will also remove recurring and scheduled tasks\n      tags:\n        - Organization\n  /org/wireless:\n    get:\n      operationId: getWirelessLANs\n      parameters:\n        - description: an optional search string for filtering results\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Wireless\"\n                type: array\n          description: array of wireless LANs\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get all wireless LANs\n      tags:\n        - Organization\n  \"/org/wirelesss/{wireless_id}\":\n    delete:\n      operationId: removeWirelessLAN\n      parameters:\n        - description: UUID of the wireless LAN to remove\n          in: path\n          name: wireless_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: empty response\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n      security:\n        - bearerAuth: []\n      summary: Remove a wireless LAN\n      tags:\n        - Organization\n    get:\n      operationId: getWirelessLAN\n      parameters:\n        - description: UUID of the wireless LAN to retrieve\n          in: path\n          name: wireless_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Wireless\"\n          description: wireless details\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n      security:\n        - bearerAuth: []\n      summary: Get wireless LAN details\n      tags:\n        - Organization\n  /releases/agent/version:\n    get:\n      operationId: getLatestAgentVersion\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ComponentVersion\"\n          description: component version\n      summary: Returns latest agent version\n      tags:\n        - Public\n  /releases/platform/version:\n    get:\n      operationId: getLatestPlatformVersion\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ComponentVersion\"\n          description: component version\n      summary: Returns latest platform version\n      tags:\n        - Public\n  /releases/scanner/version:\n    get:\n      operationId: getLatestScannerVersion\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ComponentVersion\"\n          description: component version\n      summary: Returns latest scanner version\n      tags:\n        - Public\ncomponents:\n  responses:\n    LicenseExpiredError:\n      description: License has expired\n    NotFoundError:\n      description: Resource not found\n    ProcessingError:\n      description: Request could not be processed\n    UnauthorizedError:\n      description: Access token is missing or invalid\n  schemas:\n    APIKey:\n      properties:\n        client_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        comment:\n          example: API key used for Splunk integration\n          type: string\n        counter:\n          example: 1\n          format: int64\n          type: integer\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        created_by:\n          example: user@example.com\n          format: email\n          type: string\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        inactive:\n          example: tue\n          type: boolean\n        last_used_at:\n          example: 0\n          format: int64\n          type: integer\n        last_used_ip:\n          example: 127.0.0.1\n          type: string\n        last_used_ua:\n          example: curl/7.44.1\n          type: string\n        organization_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        token:\n          example: CTXXXXXXXXXXXXX\n          type: string\n        type:\n          example: org\n          type: string\n        usage_limit:\n          example: 10000\n          format: int64\n          type: integer\n        usage_today:\n          example: 100\n          format: int64\n          type: integer\n      required:\n        - id\n      type: object\n    APIKeyOptions:\n      properties:\n        comment:\n          example: Splunk integration key\n          type: string\n        organization_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n      type: object\n    AWSCredentialFields:\n      properties:\n        access_key:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: string\n          type: string\n        regions:\n          example: us-west-1, us-east-2\n          format: string\n          type: string\n        secret_access_key:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: string\n          type: string\n      required:\n        - access_key\n        - secret_access_key\n      type: object\n    Agent:\n      properties:\n        arch:\n          example: amd64\n          type: string\n        client_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        connected:\n          example: true\n          type: boolean\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        deactivated_at:\n          example: 0\n          format: int64\n          type: integer\n        external_ip:\n          example: 1.1.1.1\n          type: string\n        host_id:\n          example: 6f9e6fe52271da70962e007183c5c9c9\n          type: string\n        hub_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        inactive:\n          example: false\n          type: boolean\n        internal_ip:\n          example: 192.168.0.1\n          type: string\n        last_checkin:\n          example: 1576300370\n          format: int64\n          type: integer\n        name:\n          example: RUMBLE-AGENT\n          format: hostname\n          type: string\n        organization_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        os:\n          example: Windows\n          type: string\n        site_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        system_info:\n          additionalProperties: true\n          type: object\n        updated_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        version:\n          example: 1.2.3 (build 20191219224016) [fc50c5eefdc3ff5c60533c3c345d14d336396272]\n          type: string\n      required:\n        - id\n      type: object\n    AgentSiteID:\n      properties:\n        site_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n      required:\n        - site_id\n      type: object\n    Asset:\n      properties:\n        addresses:\n          items:\n            example: 192.168.0.1\n            type: string\n          type: array\n        addresses_extra:\n          items:\n            example: 192.168.100.1\n            type: string\n          type: array\n        agent_name:\n          example: LAPTOP-F4P1R6\n          type: string\n        alive:\n          example: true\n          format: boolean\n          type: boolean\n        attributes:\n          additionalProperties:\n            type: string\n          type: object\n        comments:\n          example: File Server\n          type: string\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        credentials:\n          additionalProperties:\n            additionalProperties:\n              type: boolean\n            type: string\n          type: object\n        detected_by:\n          example: icmp\n          type: string\n        domains:\n          items:\n            example: www\n            type: string\n          type: array\n        first_seen:\n          example: 1576300370\n          format: int64\n          type: integer\n        hw:\n          example: Dell PowerEdge 2500\n          type: string\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        last_agent_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        last_seen:\n          example: 1576300370\n          format: int64\n          type: integer\n        last_task_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        lowest_rtt:\n          example: 1\n          format: int64\n          type: integer\n        lowest_ttl:\n          example: 0\n          format: int64\n          type: integer\n        mac_vendors:\n          items:\n            example: Dell\n            type: string\n          type: array\n        macs:\n          items:\n            example: 11:22:33:44:55:66\n            format: mac\n            type: string\n          type: array\n        names:\n          items:\n            example: www\n            type: string\n          type: array\n        newest_mac:\n          example: 11:22:33:44:55:66\n          format: mac\n          type: string\n        newest_mac_age:\n          example: 1304035200000000000\n          format: int64\n          type: integer\n        newest_mac_vendor:\n          example: Intel Corporate\n          type: string\n        org_name:\n          example: Test Labs\n          type: string\n        organization_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        os:\n          example: Ubuntu Linux\n          type: string\n        os_version:\n          example: 18.04\n          type: string\n        rtts:\n          additionalProperties: true\n          type: object\n        service_count:\n          example: 10\n          format: int64\n          type: integer\n        service_count_arp:\n          example: 1\n          format: int64\n          type: integer\n        service_count_icmp:\n          example: 1\n          format: int64\n          type: integer\n        service_count_tcp:\n          example: 7\n          format: int64\n          type: integer\n        service_count_udp:\n          example: 1\n          format: int64\n          type: integer\n        service_ports_products:\n          items:\n            example: bind\n            type: string\n          type: array\n        service_ports_protocols:\n          items:\n            example: ssh\n            type: string\n          type: array\n        service_ports_tcp:\n          items:\n            example: 22\n            format: port\n            type: string\n          type: array\n        service_ports_udp:\n          items:\n            example: 53\n            format: port\n            type: string\n          type: array\n        services:\n          additionalProperties:\n            additionalProperties:\n              type: string\n            type: object\n          type: object\n        site_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        site_name:\n          example: Primary\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n        type:\n          example: Server\n          type: string\n        updated_at:\n          example: 1576300370\n          format: int64\n          type: integer\n      required:\n        - id\n        - version\n      type: object\n    AssetComments:\n      properties:\n        comments:\n          example: Sales Laptop\n          type: string\n      required:\n        - comments\n      type: object\n    AssetServiceNow:\n      properties:\n        addresses_extra:\n          example: 192.168.0.5;192.168.0.3\n          type: string\n        addresses_scope:\n          example: 192.168.100.1;192.168.100.2\n          type: string\n        alive:\n          example: true\n          format: boolean\n          type: boolean\n        asset_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        comments:\n          example: File Server\n          type: string\n        detected_by:\n          example: icmp\n          type: string\n        domains:\n          example: rumble.run;rumble.local.lan\n          type: string\n        first_discovered:\n          example: 2006-01-02 15:04:05\n          type: string\n        hw_product:\n          example: PowerEdge\n          type: string\n        hw_vendor:\n          example: Dell\n          type: string\n        hw_version:\n          example: 2\n          type: string\n        ip_address:\n          example: 192.168.0.1\n          type: string\n        last_discovered:\n          example: 2006-01-02 15:04:05\n          type: string\n        last_updated:\n          example: 2006-01-02 15:04:05\n          type: string\n        lowest_rtt:\n          example: 1\n          format: int64\n          type: integer\n        lowest_ttl:\n          example: 0\n          format: int64\n          type: integer\n        mac_address:\n          example: 11:22:33:44:55:66\n          format: mac\n          type: string\n        mac_manufacturer:\n          example: Dell\n          type: string\n        mac_vendors:\n          example: Dell\n          type: string\n        macs:\n          example: 11:22:33:44:55:66\n          format: mac\n          type: string\n        name:\n          example: www;server\n          type: string\n        newest_mac_age:\n          example: 2020-01-01\n          type: string\n        organization:\n          example: Headquarters\n          type: string\n        os_product:\n          example: Windows 10\n          type: string\n        os_vendor:\n          example: Microsoft\n          type: string\n        os_version:\n          example: 1903\n          type: string\n        service_count:\n          example: 10\n          format: int64\n          type: integer\n        service_count_arp:\n          example: 1\n          format: int64\n          type: integer\n        service_count_icmp:\n          example: 1\n          format: int64\n          type: integer\n        service_count_tcp:\n          example: 7\n          format: int64\n          type: integer\n        service_count_udp:\n          example: 1\n          format: int64\n          type: integer\n        site:\n          example: Primary\n          type: string\n        sys_class_name:\n          example: cmdb_ci_iot\n          type: string\n        tags:\n          example: owner=IT;location=Austin\n          type: string\n        type:\n          example: Server\n          type: string\n      required:\n        - asset_id\n      type: object\n    AssetTags:\n      properties:\n        tags:\n          additionalProperties:\n            example: TagValue\n            type: string\n          type: object\n      required:\n        - tags\n      type: object\n    AssetsWithCheckpoint:\n      properties:\n        assets:\n          items:\n            $ref: \"#/components/schemas/Asset\"\n          type: array\n        since:\n          example: 1576300370\n          format: int64\n          type: integer\n      required:\n        - since\n        - assets\n      type: object\n    ComponentVersion:\n      description: A component ID and version\n      properties:\n        id:\n          example: agent\n          format: string\n          type: string\n        version:\n          example: 1.0.0\n          format: string\n          type: string\n      required:\n        - id\n        - version\n      type: object\n    Credential:\n      properties:\n        acl:\n          additionalProperties: true\n          example:\n            e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8: user\n          type: object\n        cidrs:\n          example:\n            - 10.0.0.47/32\n            - 192.168.1.0/24\n          items:\n            type: string\n          type: array\n        client_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        created_by_email:\n          example: user@example.com\n          format: email\n          type: string\n        created_by_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        global:\n          example: false\n          type: boolean\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        last_used_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        last_used_by_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        name:\n          example: credentials_name\n          type: string\n        type:\n          description: The service the credentials are for.\n          enum:\n            - miradore_api_key_v1\n            - aws_access_secret\n          type: string\n      required:\n        - id\n      type: object\n    CredentialOptions:\n      properties:\n        acl:\n          additionalProperties: true\n          example:\n            e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8: user\n            e77602e0-3fb8-4734-aef9-fbc6fdcb0fa9: none\n          type: object\n        cidrs:\n          example: 10.0.0.17/32, 192.168.1.0/24\n          type: string\n        global:\n          example: false\n          type: boolean\n        name:\n          example: credentials_name\n          type: string\n        secret:\n          additionalProperties: true\n          example:\n            api_key: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n            hostname: yourcompanyinc.online.miradore.com\n          oneOf:\n            - $ref: \"#/components/schemas/AWSCredentialFields\"\n            - $ref: \"#/components/schemas/MiradoreCredentialFields\"\n          type: object\n        type:\n          enum:\n            - miradore_api_key_v1\n            - aws_access_secret\n          example: miradore_api_key_v1\n          type: string\n      type: object\n    Event:\n      properties:\n        action:\n          example: login\n          type: string\n        client_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        details:\n          additionalProperties: true\n          type: object\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        organization_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        processed_at:\n          example: 0\n          format: int64\n          type: integer\n        processor_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        site_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        source_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        source_name:\n          example: SiteName\n          type: string\n        source_type:\n          example: api\n          type: string\n        state:\n          example: SiteName\n          type: string\n        success:\n          example: true\n          type: boolean\n        target_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        target_name:\n          example: SiteName\n          type: string\n        target_type:\n          example: api\n          type: string\n      type: object\n    License:\n      properties:\n        activated_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        address_city:\n          example: Austin\n          type: string\n        address_country:\n          example: US\n          type: string\n        address_postal:\n          example: 78700\n          type: string\n        address_region:\n          example: Texas\n          type: string\n        address_street:\n          example: 1111 Main St\n          type: string\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        license_expiration:\n          example: 1576300370\n          format: int64\n          type: integer\n        license_live_asset_count:\n          example: 1000\n          format: int64\n          type: integer\n        license_max_assets:\n          example: 1000000\n          format: int64\n          type: integer\n        license_project_asset_count:\n          example: 5000\n          format: int64\n          type: integer\n        license_type:\n          example: platform\n          type: string\n        name:\n          example: My Company\n          type: string\n        partner:\n          example: Rumble\n          type: string\n        phone:\n          example: 512-555-5555\n          type: string\n        settings:\n          additionalProperties: true\n          type: object\n        sso_default_role:\n          example: viewer\n          type: string\n        sso_domain:\n          example: rumble.run\n          type: string\n        sso_login_issuer_url:\n          example: https://accounts.google.com/o/saml2?idpid=issuer\n          type: string\n        sso_login_login_url:\n          example: https://accounts.google.com/o/saml2?idpid=login\n          type: string\n        sso_login_logout_url:\n          example: https://accounts.google.com/o/saml2?idpid=logout\n          type: string\n        sso_login_message:\n          example: Hello\n          type: string\n        sso_mode:\n          example: required\n          type: string\n        sso_type:\n          example: saml20\n          type: string\n        subscription_cancel_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        subscription_canceled_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        subscription_period_end:\n          example: 1576300370\n          format: int64\n          type: integer\n        subscription_period_start:\n          example: 1576300370\n          format: int64\n          type: integer\n        updated_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        via_reseller:\n          example: false\n          type: boolean\n      type: object\n    MiradoreCredentialFields:\n      properties:\n        api_key:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: string\n          type: string\n        hostname:\n          example: yourcompanyinc.online.miradore.com\n          format: string\n          type: string\n      required:\n        - hostname\n        - api_key\n      type: object\n    OrgOptions:\n      properties:\n        description:\n          example: Wobbly Widgets, Inc.\n          type: string\n        expiration_assets_offline:\n          example: \"365\"\n          format: number\n          type: string\n        expiration_assets_stale:\n          example: \"365\"\n          format: number\n          type: string\n        expiration_scans:\n          example: \"365\"\n          format: number\n          type: string\n        export_token:\n          example: ETXXXXXXXXXXXXXXXX\n          type: string\n        name:\n          example: My Organization\n          type: string\n        parent_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        project:\n          example: false\n          format: boolean\n          type: string\n      type: object\n    Organization:\n      properties:\n        asset_count:\n          example: 100\n          format: int64\n          type: integer\n        client_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        deactivated_at:\n          example: 0\n          format: int64\n          type: integer\n        description:\n          example: All subdivisions of my company\n          type: string\n        download_token:\n          example: DT11226D9EEEA2B035D42569585900\n          type: string\n        download_token_created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        expiration_assets_offline:\n          example: 365\n          format: int64\n          type: integer\n        expiration_assets_stale:\n          example: 365\n          format: int64\n          type: integer\n        expiration_scans:\n          example: 365\n          format: int64\n          type: integer\n        export_token:\n          example: ET11226D9EEEA2B035D42569585900\n          type: string\n        export_token_counter:\n          example: 0\n          format: int64\n          type: integer\n        export_token_created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        export_token_last_used_at:\n          example: 0\n          format: int64\n          type: integer\n        export_token_last_used_by:\n          example: 127.0.0.1\n          type: string\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        inactive:\n          example: false\n          type: boolean\n        name:\n          example: My Company\n          type: string\n        parent_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        permanent:\n          example: true\n          type: boolean\n        project:\n          example: false\n          type: boolean\n        service_count:\n          example: 10\n          format: int64\n          type: integer\n        service_count_arp:\n          example: 1\n          format: int64\n          type: integer\n        service_count_icmp:\n          example: 1\n          format: int64\n          type: integer\n        service_count_tcp:\n          example: 7\n          format: int64\n          type: integer\n        service_count_udp:\n          example: 1\n          format: int64\n          type: integer\n        updated_at:\n          example: 1576300370\n          format: int64\n          type: integer\n      required:\n        - id\n        - name\n      type: object\n    ScanOptions:\n      properties:\n        agent:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        excludes:\n          type: string\n        max-group-size:\n          example: \"4096\"\n          type: string\n        max-host-rate:\n          example: \"100\"\n          type: string\n        max-sockets:\n          example: \"500\"\n          type: string\n        nameservers:\n          example: 8.8.8.8\n          type: string\n        passes:\n          example: \"3\"\n          type: string\n        probes:\n          description: Optional probe list, otherwise all probes are used\n          example: arp,bacnet,connect,dns,echo,ike,ipmi,mdns,memcache,mssql,natpmp,netbios,pca,rdns,rpcbind,sip,snmp,ssdp,syn,ubnt,wlan-list,wsd\n          type: string\n        rate:\n          example: \"10000\"\n          type: string\n        scan-description:\n          example: Scan of Wireless\n          type: string\n        scan-frequency:\n          enum:\n            - once\n            - hourly\n            - daily\n            - weekly\n            - monthly\n            - continuous\n          type: string\n        scan-grace-period:\n          example: \"4\"\n          type: string\n        scan-name:\n          example: My Scan\n          type: string\n        scan-start:\n          example: \"0\"\n          format: unixtime\n          type: string\n        scan-tags:\n          example: owner=IT location=Texas\n          type: string\n        screenshots:\n          example: \"true\"\n          type: string\n        targets:\n          example: defaults\n          type: string\n        tcp-ports:\n          example: 1-1000,5000-6000\n          type: string\n      required:\n        - targets\n      type: object\n    Service:\n      properties:\n        addresses:\n          items:\n            example: 192.168.0.1\n            type: string\n          type: array\n        addresses_extra:\n          items:\n            example: 192.168.100.1\n            type: string\n          type: array\n        agent_name:\n          example: LAPTOP-F4P1R6\n          type: string\n        alive:\n          example: true\n          format: boolean\n          type: boolean\n        attributes:\n          additionalProperties:\n            type: string\n          type: object\n        comments:\n          example: File Server\n          type: string\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        credentials:\n          additionalProperties:\n            additionalProperties:\n              type: boolean\n            type: string\n          type: object\n        detected_by:\n          example: icmp\n          type: string\n        domains:\n          items:\n            example: CORPNET\n            type: string\n          type: array\n        first_seen:\n          example: 1576300370\n          format: int64\n          type: integer\n        hw:\n          example: Dell PowerEdge 2500\n          type: string\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        last_agent_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        last_seen:\n          example: 1576300370\n          format: int64\n          type: integer\n        last_task_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        lowest_rtt:\n          example: 1\n          format: int64\n          type: integer\n        lowest_ttl:\n          example: 0\n          format: int64\n          type: integer\n        mac_vendors:\n          items:\n            example: Dell\n            type: string\n          type: array\n        macs:\n          items:\n            example: 11:22:33:44:55:66\n            format: mac\n            type: string\n          type: array\n        names:\n          items:\n            example: www\n            type: string\n          type: array\n        newest_mac:\n          example: 11:22:33:44:55:66\n          format: mac\n          type: string\n        newest_mac_age:\n          example: 1304035200000000000\n          format: int64\n          type: integer\n        newest_mac_vendor:\n          example: Intel Corporate\n          type: string\n        org_name:\n          example: Test Labs\n          type: string\n        organization_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        os:\n          example: Ubuntu Linux\n          type: string\n        os_version:\n          example: 18.04\n          type: string\n        rtts:\n          additionalProperties: true\n          type: object\n        service_address:\n          example: 192.168.0.1\n          type: string\n        service_asset_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        service_count:\n          example: 10\n          format: int64\n          type: integer\n        service_count_arp:\n          example: 1\n          format: int64\n          type: integer\n        service_count_icmp:\n          example: 1\n          format: int64\n          type: integer\n        service_count_tcp:\n          example: 7\n          format: int64\n          type: integer\n        service_count_udp:\n          example: 1\n          format: int64\n          type: integer\n        service_created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        service_data:\n          additionalProperties:\n            type: string\n          type: object\n        service_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        service_link:\n          example: http://192.168.0.1:80/\n          type: string\n        service_port:\n          example: 80\n          format: port\n          type: string\n        service_ports_products:\n          items:\n            example: bind\n            type: string\n          type: array\n        service_ports_protocols:\n          items:\n            example: ssh\n            type: string\n          type: array\n        service_ports_tcp:\n          items:\n            example: 22\n            format: port\n            type: string\n          type: array\n        service_ports_udp:\n          items:\n            example: 53\n            format: port\n            type: string\n          type: array\n        service_protocol:\n          example: http tls\n          type: string\n        service_screenshot_link:\n          type: string\n        service_summary:\n          example: Login Page\n          type: string\n        service_transport:\n          example: tcp\n          type: string\n        service_updated_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        service_vhost:\n          example: www\n          type: string\n        services:\n          additionalProperties:\n            additionalProperties:\n              type: string\n            type: object\n          type: object\n        site_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        site_name:\n          example: Primary\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n        type:\n          example: Server\n          type: string\n        updated_at:\n          example: 1576300370\n          format: int64\n          type: integer\n      required:\n        - id\n        - service_id\n      type: object\n    Site:\n      properties:\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        description:\n          example: Headquarters\n          type: string\n        excludes:\n          example: 192.168.0.5\n          type: string\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        name:\n          example: Primary\n          type: string\n        permanent:\n          example: true\n          type: boolean\n        scope:\n          example: 192.168.0.0/24\n          type: string\n        updated_at:\n          example: 1576300370\n          format: int64\n          type: integer\n      required:\n        - id\n        - name\n      type: object\n    SiteOptions:\n      properties:\n        description:\n          example: County Office\n          type: string\n        excludes:\n          example: 192.168.10.1\n          type: string\n        name:\n          example: New Site\n          type: string\n        scope:\n          example: 192.168.10.0/24\n          type: string\n      required:\n        - name\n      type: object\n    Task:\n      properties:\n        agent_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        client_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        created_by:\n          example: user@example.com\n          format: email\n          type: string\n        created_by_user_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        cruncher_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        description:\n          example: Scan the headquarters hourly\n          type: string\n        error:\n          example: agent unavailable\n          type: string\n        hidden:\n          example: false\n          type: boolean\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        name:\n          example: Hourly Scan\n          type: string\n        organization_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        params:\n          additionalProperties:\n            type: string\n          type: object\n        parent_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        recur:\n          example: false\n          type: boolean\n        recur_frequency:\n          example: hour\n          type: string\n        recur_last:\n          example: 1576300370\n          format: int64\n          type: integer\n        recur_last_task_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        recur_next:\n          example: 1576300370\n          format: int64\n          type: integer\n        site_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        start_time:\n          example: 1576300370\n          format: int64\n          type: integer\n        stats:\n          additionalProperties: true\n          type: object\n        status:\n          example: processed\n          type: string\n        type:\n          example: scan\n          type: string\n        updated_at:\n          example: 1576300370\n          format: int64\n          type: integer\n      required:\n        - id\n      type: object\n    URL:\n      description: A URL to a resource\n      properties:\n        id:\n          example: https://www.rumble.run/docs/\n          format: url\n          type: string\n      required:\n        - url\n      type: object\n    User:\n      properties:\n        client_admin:\n          example: true\n          type: boolean\n        client_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        email:\n          example: jsmith@example.com\n          type: string\n        first_name:\n          example: James\n          type: string\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        invite_token_expiration:\n          example: 1576300370\n          format: int64\n          type: integer\n        last_login_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        last_login_ip:\n          example: 192.168.0.1\n          type: string\n        last_login_ua:\n          example: curl/1.0\n          type: string\n        last_name:\n          example: Smith\n          type: string\n        login_failures:\n          example: 0\n          format: int64\n          type: integer\n        org_default_role:\n          example: admin\n          type: string\n        org_roles:\n          additionalProperties: true\n          type: object\n        reset_token_expiration:\n          example: 1576300370\n          format: int64\n          type: integer\n        sso_only:\n          example: false\n          type: boolean\n        updated_at:\n          example: 1576300370\n          format: int64\n          type: integer\n      required:\n        - id\n      type: object\n    UserInviteOptions:\n      properties:\n        client_admin:\n          example: true\n          type: boolean\n        email:\n          example: jsmith@example.com\n          type: string\n        first_name:\n          example: James\n          type: string\n        last_name:\n          example: Smith\n          type: string\n        message:\n          example: You have been invited to the Rumble Network Discovery platform\n          type: string\n        org_default_role:\n          example: admin\n          type: string\n        org_roles:\n          additionalProperties: true\n          type: object\n        subject:\n          example: Welcome to Rumble\n          type: string\n      type: object\n    UserOptions:\n      properties:\n        client_admin:\n          example: true\n          type: boolean\n        email:\n          example: jsmith@example.com\n          type: string\n        first_name:\n          example: James\n          type: string\n        last_name:\n          example: Smith\n          type: string\n        org_default_role:\n          example: admin\n          type: string\n        org_roles:\n          additionalProperties: true\n          type: object\n      type: object\n    Wireless:\n      properties:\n        agent_name:\n          example: LAPTOP-F4P1R6\n          type: string\n        authentication:\n          example: wpa2-psk\n          type: string\n        bssid:\n          example: 11:22:33:44:55:66\n          format: mac\n          type: string\n        channels:\n          example: 11, 158+1\n          type: string\n        created_at:\n          example: 1576300370\n          format: int64\n          type: integer\n        data:\n          additionalProperties:\n            type: string\n          type: object\n        encryption:\n          example: aes\n          type: string\n        essid:\n          example: Free WiFi\n          format: uuid\n          type: string\n        family:\n          example: 223344\n          type: string\n        id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        interface:\n          example: wlan0\n          type: string\n        last_agent_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        last_seen:\n          example: 1576300370\n          format: int64\n          type: integer\n        last_task_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        org_name:\n          example: Test Labs\n          type: string\n        organization_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        signal:\n          example: 99\n          maximum: 100\n          minimum: 0\n          type: integer\n        site_id:\n          example: e77602e0-3fb8-4734-aef9-fbc6fdcb0fa8\n          format: uuid\n          type: string\n        site_name:\n          example: Primary\n          type: string\n        type:\n          example: infrastructure\n          type: string\n        vendor:\n          example: Ubiquiti Networks\n          type: string\n      required:\n        - id\n      type: object\n  securitySchemes:\n    bearerAuth:\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/rumble.run/2.0.3/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/rumble.run/2.0.3/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: reference type \"#/components/schemas/AssetTags\" name conflict: \"AssetTags\"",
	"NotImplemented": [
		"unsupported content types"
	]
}