{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/IBM/openapi-validator"
		},
		"file": {
			"name": "clean.yml",
			"size": 0,
			"path": "packages/validator/test/cli-validator/mock-files/oas3/clean.yml",
			"byteSize": 5531,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: Sample API definition that validates cleanly\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n  contact:\n    email: \"apiteam@swagger.io\"\nservers:\n  - url: http://petstore.swagger.io/v1\ntags:\n  - name: pets\n    description: A pet\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      description: List all pets\n      operationId: list_pets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 10\n            maximum: 100\n        - name: offset\n          in: query\n          description: Offset of first element to return in results.\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of pets\n          headers:\n            x-next:\n              schema:\n                type: string\n                description: A link to the next page of responses\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a pet\n      description: Create a pet\n      operationId: create_pets\n      tags:\n        - pets\n      responses:\n        '201':\n          description: success!\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /pets/{pet_id}:\n    get:\n      summary: Info for a specific pet\n      description: Get information about a specific pet\n      operationId: get_pet_by_id\n      tags:\n        - pets\n      parameters:\n        - name: pet_id\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n            pattern: '[0-9]+'\n            minLength: 1\n            maxLength: 100\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  schemas:\n    Pet:\n      type: object\n      description:\n        A pet\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n          description: \"id property\"\n        name:\n          type: string\n          description: \"name property\"\n          pattern: '[a-zA-Z0-9]+'\n          minLength: 1\n          maxLength: 50\n        tag:\n          type: string\n          description: \"tag property\"\n          pattern: '[a-zA-Z0-9]+'\n          minLength: 1\n          maxLength: 50\n      example:\n        id: 1\n        name: doggie\n        tag: dog\n    Pets:\n      type: object\n      description:\n        A list of pets\n      required:\n        - pets\n        - limit\n        - offset\n      properties:\n        pets:\n          type: array\n          minItems: 0\n          maxItems: 20\n          description: \"object containing a list of pets\"\n          items:\n            $ref: \"#/components/schemas/Pet\"\n        limit:\n          type: integer\n          format: int32\n          description: limit\n        offset:\n          type: integer\n          format: int32\n          description: offset\n        next_token:\n          type: string\n          description: next token\n        first:\n          allOf:\n            - $ref: '#/components/schemas/PageLink'\n            - description: Link to the first page of results\n        last:\n          allOf:\n            - $ref: '#/components/schemas/PageLink'\n            - description: Link to the last page of results\n        previous:\n          allOf:\n            - $ref: '#/components/schemas/PageLink'\n            - description: Link to the previous page of results\n        next:\n          allOf:\n            - $ref: '#/components/schemas/PageLink'\n            - description: Link to the next page of results\n      example:\n        pets:\n        - id: 1\n          name: doggie\n          tag: dog\n        next_url: 'https://www.nexturl.com'\n        limit: 50\n        offset: 20\n        next_token: TOKEN_STRING\n    PageLink:\n      type: object\n      description: Link to a page of results\n      properties:\n        href:\n          description: Request URL string\n          type: string\n    Error:\n      type: object\n      description:\n        An error in processing a service request\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n          description: \"code property\"\n        message:\n          type: string\n          description: \"message property\"\n          pattern: '^[a-zA-Z0-9_ ]*$'\n          minLength: 1\n          maxLength: 300\n      example:\n        code: 123\n        message: \"error occurred\"\n",
			"canonicalURL": "/github.com/IBM/openapi-validator@c7978d436699ca1ee9c247958dc0fa172df7a1b5/-/blob/packages/validator/test/cli-validator/mock-files/oas3/clean.yml",
			"externalURLs": [
				{
					"url": "https://github.com/IBM/openapi-validator/blob/c7978d436699ca1ee9c247958dc0fa172df7a1b5/packages/validator/test/cli-validator/mock-files/oas3/clean.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/pets\": get: responses: code 200: contents: media: \"application/json\": generate schema: field first: allOf: schema type mismatch: object and "
}