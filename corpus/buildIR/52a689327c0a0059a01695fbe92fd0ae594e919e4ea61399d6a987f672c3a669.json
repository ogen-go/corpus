{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/prisma.pan.dev"
		},
		"file": {
			"name": "UserRoles.yaml",
			"size": 0,
			"path": "static/oas/cspm/UserRoles.yaml",
			"byteSize": 11166,
			"content": "components:\n  requestBodies:\n    UserRoleModel:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserRoleModel'\n      description: User Role\n      required: true\n  securitySchemes:\n    x-redlock-auth:\n      description: The x-redlock-auth value is a JSON Web Token (JWT).\n      in: header\n      name: x-redlock-auth\n      type: apiKey\n  schemas:\n    Attributes:\n      description: Additional attributes of the the user role\n      properties:\n        hasDefenderPermissions:\n          description: User has compute defender permissions\n          type: boolean\n        onlyAllowCIAccess:\n          description: User can only use access keys to use Prisma Cloud. UI access\n            will be unavailable.\n          type: boolean\n        onlyAllowComputeAccess:\n          description: User can only access the Prisma Cloud Compute Console\n          type: boolean\n      type: object\n    PermissionGroup:\n      properties:\n        custom:\n          type: boolean\n        id:\n          type: string\n        name:\n          type: string\n        systemAdmin:\n          type: boolean\n        systemAdminOrComputeAdmin:\n          type: boolean\n      type: object\n    UserRoleModel:\n      description: Model for User Role\n      properties:\n        accountGroupIds:\n          description: Accessible Account Group IDs\n          items:\n            type: string\n          type: array\n        additionalAttributes:\n          allOf:\n          - $ref: '#/components/schemas/Attributes'\n          - description: Additional attributes of the the user role\n        associatedUsers:\n          description: Associated application users which cannot exist in the system\n            without the user role\n          items:\n            type: string\n          readOnly: true\n          type: array\n        codeRepositoryIds:\n          description: Accessible Code Repository IDs\n          items:\n            type: string\n          type: array\n        description:\n          description: Description\n          type: string\n        id:\n          description: User Role ID\n          readOnly: true\n          type: string\n        lastModifiedBy:\n          description: Last Modified By\n          readOnly: true\n          type: string\n        lastModifiedTs:\n          description: Last Modified Time\n          format: int64\n          readOnly: true\n          type: integer\n        name:\n          description: Name\n          type: string\n        permissionGroup:\n          $ref: '#/components/schemas/PermissionGroup'\n        resourceListIds:\n          description: Accessible Resource List IDs\n          items:\n            type: string\n          type: array\n        restrictDismissalAccess:\n          type: boolean\n        roleType:\n          description: User Role Type\n          enum:\n          - System Admin\n          - Account Group Admin\n          - Account Group Read Only\n          - Cloud Provisioning Admin\n          - Account and Cloud Provisioning Admin\n          - Build and Deploy Security\n          type: string\n      required:\n      - name\n      - roleType\n      type: object\n    UserRoleViewModel:\n      description: Model for User Role View\n      properties:\n        accountGroupIds:\n          description: Accessible Account Group IDs\n          items:\n            type: string\n          type: array\n        accountGroups:\n          description: Associated Account Groups\n          items:\n            additionalProperties:\n              type: string\n            type: object\n          readOnly: true\n          type: array\n        additionalAttributes:\n          allOf:\n          - $ref: '#/components/schemas/Attributes'\n          - description: Additional attributes of the the user role\n        associatedUsers:\n          description: Associated application users which cannot exist in the system\n            without the user role\n          items:\n            type: string\n          readOnly: true\n          type: array\n        codeRepositoryIds:\n          description: Accessible Code Repository IDs\n          items:\n            type: string\n          type: array\n        description:\n          description: Description\n          type: string\n        id:\n          description: User Role ID\n          readOnly: true\n          type: string\n        lastModifiedBy:\n          description: Last Modified By\n          readOnly: true\n          type: string\n        lastModifiedTs:\n          description: Last Modified Time\n          format: int64\n          readOnly: true\n          type: integer\n        name:\n          description: Name\n          type: string\n        permissionGroup:\n          $ref: '#/components/schemas/PermissionGroup'\n        resourceListIds:\n          description: Accessible Resource List IDs\n          items:\n            type: string\n          type: array\n        restrictDismissalAccess:\n          type: boolean\n        roleType:\n          description: User Role Type\n          enum:\n          - System Admin\n          - Account Group Admin\n          - Account Group Read Only\n          - Cloud Provisioning Admin\n          - Account and Cloud Provisioning Admin\n          - Build and Deploy Security\n          type: string\n      required:\n      - name\n      - roleType\n      type: object\ninfo:\n  contact: {}\n  description: \"Manage your Prisma Cloud user roles.            \\n\"\n  title: Prisma Cloud User Roles API Overview\n  version: Latest\nopenapi: 3.0.0\npaths:\n  /user/role:\n    get:\n      description: Returns an array of user roles.\n      operationId: get-user-roles\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserRoleViewModel'\n                type: array\n          description: successful operation\n        '403':\n          description: unauthorized_access\n        '500':\n          description: internal_error\n      security:\n      - x-redlock-auth: []\n      summary: List User Roles\n      tags:\n      - User Roles\n    post:\n      description: \"Creates a new user role.  \\r\\n\\r\\nSee [Prisma Cloud Administrator\\\n        \\ Permissions](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/manage-prisma-cloud-administrators/prisma-cloud-admin-permissions.html)\\\n        \\ \\nfor the permissions associated with each role.\\n\\nNote that the request\\\n        \\ body parameter **accountGroupIds** is required but can be an empty array.\\n\"\n      operationId: add-user-role\n      requestBody:\n        $ref: '#/components/requestBodies/UserRoleModel'\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: invalid_user_role_name / invalid_user_role_type / invalid_account_group_ids\n            / user_role_name_already_exists\n        '403':\n          description: unauthorized_access\n        '500':\n          description: internal_error\n      security:\n      - x-redlock-auth: []\n      summary: Add User Role\n      tags:\n      - User Roles\n  /user/role/name:\n    get:\n      description: Returns list of user role IDs and names.\n      operationId: get-user-role-name\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  additionalProperties:\n                    type: string\n                  type: object\n                type: array\n          description: successful operation\n        '403':\n          description: unauthorized_access\n        '500':\n          description: internal_error\n      security:\n      - x-redlock-auth: []\n      summary: List User Role Names\n      tags:\n      - User Roles\n  /user/role/type:\n    get:\n      description: Returns a list of permission groups to which users can belong.\n      operationId: get-user-role-types\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  enum:\n                  - SYSTEM_ADMIN\n                  - ACCOUNT_ADMIN\n                  - ACCOUNT_READ_ONLY\n                  - SSO_ADMIN\n                  - CLOUD_PROVISIONING_ADMIN\n                  - TENANT_PROVISIONING_ADMIN\n                  - PRISMA_SERVICE_USER\n                  - ACCOUNT_AND_CLOUD_PROVISIONING_ADMIN\n                  - BUILD_AND_DEPLOY_SECURITY\n                  - BUILD_AND_DEPLOY_SECURITY_CI\n                  - COMPUTE_ADMIN\n                  - NETWORK_SECURITY_OPERATOR\n                  - NETWORK_SECURITY_OPERATOR_READ_ONLY\n                  - COMPUTE_ACCOUNT_ADMIN\n                  - DEVELOPER\n                  - COMPUTE_ACCOUNT_READ_ONLY\n                  type: string\n                type: array\n          description: successful operation\n      security:\n      - x-redlock-auth: []\n      summary: List User Role Types\n      tags:\n      - User Roles\n  /user/role/{id}:\n    get:\n      description: Returns user role information for a specified ID.\n      operationId: get-user-role\n      parameters:\n      - description: User Role ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserRoleViewModel'\n          description: successful operation\n        '400':\n          description: invalid_id\n        '403':\n          description: unauthorized_access\n        '500':\n          description: internal_error\n      security:\n      - x-redlock-auth: []\n      summary: User Role Info\n      tags:\n      - User Roles\n    put:\n      description: Updates information for an existing user role.\n      operationId: update-user-role\n      parameters:\n      - description: User Role ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/UserRoleModel'\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: invalid_id / invalid_user_role_name / invalid_user_role_type\n            / invalid_account_group_ids / user_role_name_already_exists\n        '403':\n          description: unauthorized_access\n        '500':\n          description: internal_error\n      security:\n      - x-redlock-auth: []\n      summary: Update User Role\n      tags:\n      - User Roles\n    delete:\n      description: Deletes a user role with the specified ID.\n      operationId: delete-user-role\n      parameters:\n      - description: User Role ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: invalid_id / cannot_delete_role_users_associated / invalid_id\n        '403':\n          description: unauthorized_access\n        '500':\n          description: internal_error\n      security:\n      - x-redlock-auth: []\n      summary: Delete User Role\n      tags:\n      - User Roles\nservers:\n- url: https://api.prismacloud.io\ntags:\n- description: The User Role endpoints are listed below.\n  name: User Roles\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/prisma.pan.dev@c8b4c70ab34032ffaac4a212ed1f6152117bccb6/-/blob/static/oas/cspm/UserRoles.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/prisma.pan.dev/blob/c8b4c70ab34032ffaac4a212ed1f6152117bccb6/static/oas/cspm/UserRoles.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/user/role\": get: responses: code 200: contents: media: \"application/json\": generate schema: item: field additionalAttributes: allOf: schema type mismatch: object and "
}