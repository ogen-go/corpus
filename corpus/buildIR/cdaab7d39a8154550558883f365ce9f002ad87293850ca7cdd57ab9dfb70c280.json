{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pagopa/io-infra"
		},
		"file": {
			"name": "_openapi.yaml",
			"size": 0,
			"path": "src/domains/payments-common/api/payments_updater/v1/_openapi.yaml",
			"byteSize": 3814,
			"content": "openapi: 3.0.0\ninfo:\n  title: Microservice JAVA API\n  description: Microservice JAVA API\n  version: 1.0.1\nservers:\n  - url: https://api.io.pagopa.it/api/v1/payment\n    description: Production\ntags:\n  - name: API  Payment\n    description: API  Payment\npaths:\n  /check/{rptId}:\n    get:\n      tags:\n        - API  Payment\n      summary: Check by rptId\n      operationId: checkProxy\n      parameters:\n        - name: rptId\n          in: path\n          required: true\n          schema:\n            type: string\n          description: concatenation between fiscalCode and noticeNumber\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  isPaid:\n                    type: boolean\n          description: \"check if the message has been paid\"\n        \"400\":\n          $ref: \"#/components/responses/400BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/401Unauthorized\"\n        \"503\":\n          $ref: \"#/components/responses/503ServiceUnavailable\"\n        default:\n          $ref: \"#/components/responses/default\"\n  /check/messages/{messageId}:\n    get:\n      tags:\n        - API  Payment\n      summary: Check payment by messageId\n      operationId: isMessagePaid\n      parameters:\n        - name: messageId\n          in: path\n          required: true\n          schema:\n            type: string\n          description: payment's messageId\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  isPaid:\n                    type: boolean\n          description: \"check if the message has been paid\"\n        \"404\":\n          $ref: \"#/components/responses/404NotFound\"\n        \"400\":\n          $ref: \"#/components/responses/400BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/401Unauthorized\"\n        \"503\":\n          $ref: \"#/components/responses/503ServiceUnavailable\"\n        default:\n          $ref: \"#/components/responses/default\"\ncomponents:\n  schemas:\n    Problem:\n      properties:\n        timestamp:\n          description: |\n            timestamp of the error\n          type: number\n        status:\n          description: |\n            Status code description.\n          type: string\n        error:\n          description: |\n            error description.\n          format: uri\n          type: string\n        path:\n          description: |\n            An absolute URI that identifies the specific occurrence of the problem.\n            It may or may not yield further information if dereferenced.\n          type: string\n      type: object\n  responses:\n    500InternalServerError:\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n      description: Internal Server Error\n    400BadRequest:\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n      description: Bad Request\n    404NotFound:\n      description: Not Found\n    429TooManyRequests:\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n      description: Too many requests\n    503ServiceUnavailable:\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n      description: Service Unavailable\n    401Unauthorized:\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n      description: Unauthorized\n    default:\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n      description: Unexpected error\n",
			"canonicalURL": "/github.com/pagopa/io-infra@342445e28496277dfa4031a6aa8428c96e4761e9/-/blob/src/domains/payments-common/api/payments_updater/v1/_openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/pagopa/io-infra/blob/342445e28496277dfa4031a6aa8428c96e4761e9/src/domains/payments-common/api/payments_updater/v1/_openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: reduce default: default: contents: unsupported content types: [application/problem+json]"
}