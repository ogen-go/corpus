{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/pan.dev"
		},
		"file": {
			"name": "DataResources.yaml",
			"size": 0,
			"path": "static/sase/spec/mt-monitor/DataResources.yaml",
			"byteSize": 70157,
			"content": "components:\n  schemas:\n    AlertFilter:\n      description: \"Alert count filter. Consists of a required operator and an array\\\n        \\ of rules objects. \\n\"\n      properties:\n        operator: {description: \"Must be `AND`. \\n\", type: string}\n        rules:\n          anyOf:\n          - {$ref: '#/components/schemas/AlertRule'}\n          - {$ref: '#/components/schemas/TimeFilter'}\n          description: 'See [AlertRule](/sase/docs/filters#alertrule) and [TimeFilter](/sase/docs/filters#timefilter).\n\n            '\n          items: {type: object}\n          type: array\n      required: [operator]\n      type: object\n    AlertProperty:\n      description: 'Alert count property fields will be returned in the API response.\n\n        '\n      properties:\n        alias: {type: string}\n        property: {description: \"Alert count property fields will be returned in the\\\n            \\ API response. See [AlertProperty](/sase/docs/filters#alertproperty).\\\n            \\ \\n\", example: 'sub_tenant_id, total_count, mu_count, rn_count, sc_count',\n          type: string}\n      type: object\n    AlertRule:\n      description: 'Filter property field that is one of the example values.\n\n        '\n      properties:\n        operator: {description: Filter operator that is one of the example values\n            and is run on the property field, example: in, type: string}\n        property: {description: \"Filter operator that is one of the example values\\\n            \\ and is run on the property field. \\n\", example: domain, type: string}\n        values:\n          description: Filter property value\n          example: External, external if property is domain\n          items: {type: string}\n          type: array\n      type: object\n    AppSrcFilter:\n      description: \"Applications by source filter. Consists of a required operator\\\n        \\ and an array of rules objects. \\n\"\n      properties:\n        operator: {description: \"Must be `AND`. \\n\", type: string}\n        rules:\n          anyOf:\n          - {$ref: '#/components/schemas/AppSrcRule'}\n          - {$ref: '#/components/schemas/TimeFilter'}\n          description: 'See [AppSrcRule](/sase/docs/filters#appsrcrule) and [TimeFilter](/sase/docs/filters#timefilter).\n\n            '\n          items: {type: object}\n          type: array\n      required: [operator]\n      type: object\n    AppSrcProperty:\n      description: \"Property field name.  \\n\"\n      properties:\n        alias: {type: string}\n        property: {description: 'Property fields will be returned in the API response.\n            See [AppSrcProperty](/sase/docs/filters#appsrcproperty)\n\n            ', example: 'sub_tenant_id, total_app_count, total_app_remote_network,\n            total_app_mobile_users,total_app_proxy_nodes', type: string}\n      type: object\n    AppSrcRule:\n      description: \"Applications by source rule.  \\n\"\n      properties:\n        rule: {description: 'Rule name that is set to one of the example values. See\n            See [AppSrcRule](/sase/docs/filters#appsrcrule)\n\n            ', example: app_risky, type: string}\n      type: object\n    AppSummaryFilter:\n      description: \"App summary filter. Consists of a required operator and an array\\\n        \\ of rules objects. \\n\"\n      properties:\n        operator: {description: \"Must be `AND`. \\n\", type: string}\n        rules:\n          anyOf:\n          - {$ref: '#/components/schemas/AppSummaryRule'}\n          - {$ref: '#/components/schemas/TimeFilter'}\n          description: \"See [AppSummaryRule](/sase/docs/filters#appsummaryrule) and\\\n            \\ [TimeFilter](/sase/docs/filters#timefilter). \\n\"\n          items: {type: object}\n          type: array\n      required: [operator]\n      type: object\n    AppSummaryProperty:\n      description: 'Property field name.\n\n        '\n      properties:\n        alias: {type: string}\n        property: {description: \"App summary property fields will be returned in the\\\n            \\ API response. See [AppSummaryProperty](/sase/docs/filters#appsummaryproperty).\\\n            \\ \\n\", example: 'sub_tenant_id, total_app_count, total_app_remote_network,\n            total_app_mobile_users,total_app_proxy_nodes', type: string}\n      type: object\n    AppSummaryRule:\n      description: \"Applications summary rule.  \\n\"\n      properties:\n        rule: {description: 'Rule name that is set to one of the example values. See\n            See [AppSummaryRule](/sase/docs/filters#appsummaryrule).\n\n            ', example: app_risky, type: string}\n      type: object\n    ApplicationFilter:\n      description: \"Applications list filter. Consists of a required operator and\\\n        \\ an array of rules objects. \\n\"\n      properties:\n        operator: {description: \"Must be `AND`. \\n\", type: string}\n        rules:\n          anyOf:\n          - {$ref: '#/components/schemas/ApplicationRule'}\n          - {$ref: '#/components/schemas/TimeFilter'}\n          description: 'See [ApplicationRule](/sase/docs/filters#applicationrule)\n            and [TimeFilter](/sase/docs/filters#timefilter).\n\n            '\n          items: {$ref: '#/components/schemas/FilterRule'}\n          type: array\n      required: [operator]\n      type: object\n    ApplicationProperty:\n      description: 'Applications list property.\n\n        '\n      properties:\n        alias: {type: string}\n        function: {description: Operations that need to be run on the property field.\n            Operations can be run only on number properties., example: 'count, sum,\n            avg', type: string}\n        property: {description: \"App list property. Property fields will be returned\\\n            \\ in the API response. See [ApplicationProperty](/sase/docs/filters#applicationproperty).\\\n            \\ \\n\", example: 'tenant_id, tenant_name, app, unique_app_count, app_count',\n          type: string}\n        sort: {$ref: '#/components/schemas/Sort'}\n      type: object\n    ApplicationRule:\n      description: \"Applications list rule.  \\n\"\n      properties:\n        rule: {description: 'Rule name that is set to one of the example values. See\n            See [ApplicationRule](/sase/docs/filters#applicationrule).\n\n            ', example: 'app_risky, blocked', type: string}\n      type: object\n    FilterRule: {type: object}\n    RequestBody_Alert:\n      properties:\n        filter:\n          allOf:\n          - {$ref: '#/components/schemas/AlertFilter'}\n          - {description: filter json object}\n        properties:\n          description: List of property json objects\n          items: {$ref: '#/components/schemas/AlertProperty'}\n          type: array\n      required: [properties, filter]\n      type: object\n    RequestBody_AppSrc:\n      properties:\n        filter:\n          allOf:\n          - {$ref: '#/components/schemas/AppSrcFilter'}\n          - {description: filter json object}\n        properties:\n          description: List of property json objects\n          items: {$ref: '#/components/schemas/AppSrcProperty'}\n          type: array\n      required: [properties, filter]\n      type: object\n    RequestBody_AppSummary:\n      properties:\n        filter:\n          allOf:\n          - {$ref: '#/components/schemas/AppSummaryFilter'}\n          - {description: filter json object}\n        properties:\n          description: List of property json objects\n          items: {$ref: '#/components/schemas/AppSummaryProperty'}\n          type: array\n      required: [properties, filter]\n      type: object\n    RequestBody_Application:\n      properties:\n        filter:\n          allOf:\n          - {$ref: '#/components/schemas/ApplicationFilter'}\n          - {description: filter json object}\n        properties:\n          description: List of property json objects\n          items: {$ref: '#/components/schemas/ApplicationProperty'}\n          type: array\n      required: [properties, filter]\n      type: object\n    RequestBody_Resource:\n      properties:\n        filter:\n          allOf:\n          - {$ref: '#/components/schemas/ResourceFilter'}\n          - {description: filter json object}\n        properties:\n          description: List of property json objects\n          items: {$ref: '#/components/schemas/ResourceProperty'}\n          type: array\n      required: [properties, filter]\n      type: object\n    RequestBody_Threat:\n      properties:\n        filter:\n          allOf:\n          - {$ref: '#/components/schemas/ThreatFilter'}\n          - {description: filter json object}\n        properties:\n          description: List of property json objects\n          items: {$ref: '#/components/schemas/ThreatProperty'}\n          type: array\n      required: [properties, filter]\n      type: object\n    RequestBody_ThreatSrc:\n      properties:\n        filter:\n          allOf:\n          - {$ref: '#/components/schemas/ThreatSrcFilter'}\n          - {description: filter json object}\n        properties:\n          description: List of property json objects\n          items: {$ref: '#/components/schemas/ThreatSrcProperty'}\n          type: array\n      required: [properties, filter]\n      type: object\n    RequestBody_ThreatSummary:\n      properties:\n        filter:\n          allOf:\n          - {$ref: '#/components/schemas/ThreatSummaryFilter'}\n          - {description: filter json object}\n        properties:\n          description: List of property json objects\n          items: {$ref: '#/components/schemas/ThreatSummaryProperty'}\n          type: array\n      required: [properties, filter]\n      type: object\n    RequestBody_UrlSummary:\n      properties:\n        filter:\n          allOf:\n          - {$ref: '#/components/schemas/UrlSummaryFilter'}\n          - {description: filter json object}\n        properties:\n          description: List of property json objects\n          items: {$ref: '#/components/schemas/UrlSummaryProperty'}\n          type: array\n      required: [properties, filter]\n      type: object\n    ResourceFilter:\n      description: \"Resource count filter. Consists of a required operator and an\\\n        \\ array of rules objects. \\n\"\n      properties:\n        operator: {description: \"Must be `AND`. \\n\", type: string}\n        rules:\n          anyOf:\n          - {$ref: '#/components/schemas/TimeFilter'}\n          - {$ref: '#/components/schemas/UrlLogsRule'}\n          description: 'See [UrlLogsRule](/sase/docs/filters#urllogsrule) and [TimeFilter](/sase/docs/filters#timefilter).\n\n            '\n          items: {type: object}\n          type: array\n      required: [operator]\n      type: object\n    ResourceProperty:\n      description: 'Test\n\n        '\n      properties:\n        alias: {type: string}\n        property: {description: 'App summary property. See [ResourceProperty](/sase/docs/filters#resourceproperty).\n\n            ', example: 'severity,alert_id,node_type,node_count', type: string}\n      type: object\n    Sort:\n      properties:\n        order: {description: Sort Order for the property, example: 'desc, asc', type: string}\n      type: object\n    ThreatFilter:\n      description: \"Threats list filter. Consists of a required operator and an array\\\n        \\ of rules objects. \\n\"\n      properties:\n        operator: {description: \"Must be `AND`. \\n\", type: string}\n        rules:\n          anyOf:\n          - {$ref: '#/components/schemas/ThreatRule'}\n          - {$ref: '#/components/schemas/TimeFilter'}\n          description: \"See [ThreatRule](/sase/docs/filters#threatrule) and [TimeFilter](/sase/docs/filters#timefilter).\\\n            \\ \\n\"\n          items: {$ref: '#/components/schemas/FilterRule'}\n          type: array\n      required: [operator]\n      type: object\n    ThreatProperty:\n      description: 'Test\n\n        '\n      properties:\n        alias: {type: string}\n        function: {description: Operations that need to be run on the property field.\n            Operations can be run only on number properties., example: \"distinct_count\\\n            \\ (used with threat_id property), \\navg (used with threat_count property)\",\n          type: string}\n        property: {description: \"Threat list property. See [ThreatProperty](/sase/docs/filters#threatproperty).\\\n            \\  \\n\", example: 'tenant_id, tenant_name, threat_severity, threat_severity_count,url_type,\n            url_count, threat_id, threat_count', type: string}\n        sort: {$ref: '#/components/schemas/Sort'}\n      type: object\n    ThreatRule:\n      description: \"Threat list rule.  \\n\"\n      properties:\n        operator: {description: \"Must be `AND`.                     \\n\", example: equals,\n          type: string}\n        property: {description: Filter property field that is one of the example values,\n          example: threat_severity, type: string}\n        values:\n          description: Filter property value\n          example: critical\n          items: {type: string}\n          type: array\n      type: object\n    ThreatSrcFilter:\n      description: \"Threats by source filter. Consists of a required operator and\\\n        \\ an array of rules objects. \\n\"\n      properties:\n        operator: {description: \"Must be `AND`. \\n\", type: string}\n        rules:\n          anyOf:\n          - {$ref: '#/components/schemas/ThreatSrcRule'}\n          - {$ref: '#/components/schemas/TimeFilter'}\n          description: \"See [ThreatSrcRule](/sase/docs/filters#threatsrcrule) and\\\n            \\ [TimeFilter](/sase/docs/filters#timefilter).                       \\\n            \\     \\n\"\n          items: {$ref: '#/components/schemas/FilterRule'}\n          type: array\n      required: [operator]\n      type: object\n    ThreatSrcProperty:\n      description: 'Test\n\n        '\n      properties:\n        alias: {type: string}\n        property: {description: \"Threats by source property. See [ThreatSrcProperty](/sase/docs/filters#threatsrcproperty).\\\n            \\  \\n\", example: 'sub_tenant_id, total_app_count, total_app_remote_network,\n            total_app_mobile_users,total_app_proxy_nodes', type: string}\n      type: object\n    ThreatSrcRule:\n      properties:\n        operator: {description: Filter operator that is one of the example values\n            and is run on the property field, example: in, type: string}\n        property: {description: Filter property field that is one of the example values,\n          example: threat_severity, type: string}\n        values:\n          description: Filter property values\n          example: \"Critical, High, Medium \\n(used with severity in)\"\n          items: {type: string}\n          type: array\n      type: object\n    ThreatSummaryFilter:\n      description: \"Threats summary filter. Consists of a required operator and an\\\n        \\ array of rules objects. \\n\"\n      properties:\n        operator: {description: \"Must be `AND`. \\n\", type: string}\n        rules:\n          anyOf:\n          - {$ref: '#/components/schemas/ThreatSummaryRule'}\n          - {$ref: '#/components/schemas/TimeFilter'}\n          description: 'See [ThreatSummaryRule](/sase/docs/filters#threatsummaryrule)\n            and [TimeFilter](/sase/docs/filters#timefilter).\n\n            '\n          items: {$ref: '#/components/schemas/FilterRule'}\n          type: array\n      required: [operator]\n      type: object\n    ThreatSummaryProperty:\n      properties:\n        alias: {type: string}\n        property: {description: \"Threat summary property. See [ThreatSummaryProperty](/sase/docs/filters#threatsummaryproperty).\\\n            \\ \\n\", example: 'sub_tenant_id, total_threats, blocked_count, unblocked_count,malicious_count',\n          type: string}\n      type: object\n    ThreatSummaryRule:\n      properties:\n        operator: {description: Filter operator that is one of the example values\n            and is run on the property field, example: in, type: string}\n        property: {description: Filter property field that is one of the example values,\n          example: severity, type: string}\n        values:\n          description: Filter property values\n          example: \"Critical, High, Medium \\n(used with severity in)\"\n          items: {type: string}\n          type: array\n      type: object\n    TimeFilter:\n      properties:\n        operator: {description: Filter operator that is one of the example values\n            and is run on the property field, example: 'gt, lt, last_n_minutes, last_n_hours,\n            last_n_days', type: string}\n        property: {description: Filter property field that is one of the example values,\n          example: 'event_time, update_time, updated_time', type: string}\n        values:\n          description: Filter property value\n          example: minute, hour or day counts if property is event_time\n          items: {type: string}\n          type: array\n      type: object\n    UrlLogsRule:\n      properties:\n        operator: {description: Filter operator that is one of the example values\n            and is run on the property field, example: in, type: string}\n        property: {description: Filter property field that is one of the example values,\n          example: url_category_value, type: string}\n        values:\n          description: Filter property values\n          example: \"high-risk, malware \\n(used with url_category_value in)\"\n          items: {type: string}\n          type: array\n      type: object\n    UrlSummaryFilter:\n      description: \"URL summary filter. Consists of a required operator and an array\\\n        \\ of rules objects. \\n\"\n      properties:\n        operator: {description: \"Must be `AND`. \\n\", type: string}\n        rules:\n          anyOf:\n          - {$ref: '#/components/schemas/UrlSummaryRule'}\n          - {$ref: '#/components/schemas/TimeFilter'}\n          description: 'See [UrlSummaryRule](/sase/docs/filters#urlsummaryrule) and\n            [TimeFilter](/sase/docs/filters#timefilter).\n\n            '\n          items: {$ref: '#/components/schemas/FilterRule'}\n          type: array\n      required: [operator]\n      type: object\n    UrlSummaryProperty:\n      properties:\n        alias: {type: string}\n        function: {description: Operations that need to be run on the property field.\n            Operations can be run only on number properties., example: sum, type: string}\n        property: {description: 'URL summary property. See [UrlSummaryProperty](/sase/docs/filters#urlsummaryproperty).\n\n            ', example: 'sub_tenant_id, uri_count', type: string}\n        sort: {$ref: '#/components/schemas/Sort'}\n      type: object\n    UrlSummaryRule:\n      properties:\n        rule: {description: Rule name that is set to one of the example values, example: 'url_high_risk,\n            blocked', type: string}\n      type: object\n  securitySchemes:\n    Bearer: {scheme: bearer, type: http}\ninfo:\n  contact: {}\n  description: 'Use the Data Resource API for retrieving aggregated summaries and\n    counts across tenants for threats, alerts, risky applications, URLs, and upgrades.\n\n    '\n  title: Data Resource API\n  version: '1.0'\nopenapi: 3.0.2\npaths:\n  /mt/monitor/v1/agg/alerts:\n    post:\n      description: \"Retrieve an aggregated count of alerts across tenants.       \\\n        \\        \\n\"\n      operationId: post-mt-monitor-v1-agg-alerts\n      parameters:\n      - description: 'Must be `tenant`. Using the query parameter returns all the\n          aggregated responses for the current parent tenant and its child tenants.\n          If not used, the results for just the current tenant are returned.\n\n          '\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.  \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Alerts Count By Tenant:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: in\n                      property: domain\n                      values: [External, external]\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - {property: total_count}\n              Alerts Distribution By Severity:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: in\n                      property: domain\n                      values: [External, external]\n                    - operator: last_n_days\n                      property: updated_time\n                      values: [7]\n                  properties:\n                  - {property: severity}\n                  - alias: count\n                    function: count\n                    property: alert_id\n                    sort: {order: desc}\n              Alerts Trend:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: in\n                      property: domain\n                      values: [External, external]\n                    - operator: last_n_days\n                      property: updated_time\n                      values: [7]\n                  histogram: {enableEmptyInterval: false, property: updated_time,\n                    range: day, value: '1'}\n                  properties:\n                  - alias: count\n                    function: count\n                    property: alert_id\n                    sort: {order: desc}\n            schema: {$ref: '#/components/schemas/RequestBody_Resource'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Alerts Count By Tenant:\n                  value:\n                  - {sub_tenant_id: \u003csub_tenant_id\u003e, total_count: 10}\n                Alerts Distribution By Severity:\n                  value:\n                  - {count: 3, severity: \u003cseverity\u003e}\n                Alerts Trend:\n                  value:\n                  - {count: 1, updated_time: 1657238400000}\n                  - {count: 1, updated_time: 1657411200000}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List alert count\n      tags: [DataResources]\n  /mt/monitor/v1/agg/alerts/list:\n    post:\n      description: \"Retrieve an aggregated list of alert counts by source across tenants.\\\n        \\               \\n\"\n      operationId: post-mt-monitor-v1-agg-alerts-list\n      parameters:\n      - description: 'Must be `tenant`. Using the query parameter returns all the\n          aggregated responses for the current parent tenant and its child tenants.\n          If not used, the results for just the current tenant are returned.\n\n          '\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.  \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Alerts Count By Source:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: in\n                      property: domain\n                      values: [External, external]\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: total_count}\n                  - {property: mu_count}\n                  - {property: rn_count}\n                  - {property: sc_count}\n            schema: {$ref: '#/components/schemas/RequestBody_Alert'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Alerts Count By Source:\n                  value:\n                  - {mu_count: 10, rn_count: 10, sc_count: 10, total_count: 10}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List alerts by source\n      tags: [DataResources]\n  /mt/monitor/v1/agg/applicationUsage:\n    post:\n      description: \"Retrieve a list of application usage by application type.    \\\n        \\               \\n\"\n      operationId: post-mt-monitor-v1-agg-applicationusage\n      parameters:\n      - description: \"Must be `tenant`. Using the query parameter returns all the\\\n          \\ aggregated responses for the current parent tenant and its child tenants.\\\n          \\ If not used, the results for just the current tenant are returned. \\n\"\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.  \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Risky Application Usage Trend:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                    - {rule: app_risky}\n                  histogram: {enableEmptyInterval: false, property: event_time, range: day,\n                    value: '1'}\n                  properties:\n                  - {alias: total_bytes_usage, function: sum, property: total_bytes}\n              Top Application Categories by Data Usage:\n                value:\n                  count: 5\n                  filter:\n                    operator: AND\n                    rules:\n                    - {operator: is_not_null, property: app_sub_category}\n                    - operator: not_equals\n                      property: app_sub_category\n                      values: ['']\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                  properties:\n                  - alias: app_usage\n                    function: sum\n                    property: total_bytes\n                    sort: {order: desc}\n                  - {property: app_sub_category}\n              Top Apps by Data:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                    - {operator: is_not_null, property: app}\n                    - operator: not_equals\n                      property: app\n                      values: ['']\n                  properties:\n                  - {property: app}\n                  - {alias: unique_count, function: distinct_count, property: app}\n                  - {alias: total_bytes_usage, function: sum, property: total_bytes}\n            schema: {$ref: '#/components/schemas/RequestBody_Resource'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Risky Application Usage Trend:\n                  value:\n                  - {event_time: \u003ctime in ms\u003e, total_bytes_usage: 100}\n                Top Application Categories by Data Usage:\n                  value:\n                  - {app_sub_category: \u003capp-sub-category\u003e, app_usage: 100}\n                Top Apps by Data:\n                  value:\n                  - {app: \u003capp-name\u003e, total_bytes_usage: 10, unique_count: 1}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List application usage by type\n      tags: [DataResources]\n  /mt/monitor/v1/agg/applications:\n    post:\n      description: \"Retrieve an aggregated count of applications across tenants. \\\n        \\                \\n\"\n      operationId: post-mt-monitor-v1-agg-applications\n      parameters:\n      - description: \"Must be `tenant`. Using the query parameter returns all the\\\n          \\ aggregated responses for the current parent tenant and its child tenants.\\\n          \\ If not used, the results for just the current tenant are returned. \\n\"\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.   \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Security Rules and Risky Apps:\n                value:\n                  properties:\n                  - {property: sub_tenant_id}\n                  - alias: count\n                    function: sum\n                    property: app_count\n                    sort: {order: desc}\n                  - {alias: rule_name, property: rule_matched}\n              Top Applications By Connection:\n                value:\n                  count: 5\n                  filter:\n                    operator: AND\n                    rules:\n                    - {operator: is_not_null, property: app_category}\n                    - operator: not_equals\n                      property: app_category\n                      values: ['']\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                  properties:\n                  - alias: total_sessions\n                    function: count\n                    property: session_id\n                    sort: {order: desc}\n                  - {property: app_category}\n                  - {property: sub_tenant_id}\n              Top Users Accessing Risky Apps:\n                value:\n                  count: 4\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: not_equals\n                      property: source_user_info_name\n                      values: ['']\n                    - {operator: is_not_null, property: source_user_info_name}\n                    - {rule: app_risky}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                  properties:\n                  - alias: count\n                    function: sum\n                    property: app_count\n                    sort: {order: desc}\n                  - {alias: user_name, property: source_user_info_name}\n                  - {property: sub_tenant_id}\n            schema: {$ref: '#/components/schemas/RequestBody_Resource'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Security Rules and Risky Apps:\n                  value:\n                  - {count: 100, rule_name: \u003crule-name\u003e, sub_tenant_id: \u003csub-tenant-id\u003e}\n                Top Applications By Connection:\n                  value:\n                  - {app_category: \u003capp-category\u003e, sub_tenant_id: \u003csub-tenant-id\u003e,\n                    total_sessions: 100}\n                Top Users Accessing Risky Apps:\n                  value:\n                  - {count: 12, sub_tenant_id: \u003csub-tenant-id\u003e, user_name: \u003cuser-name\u003e}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List application count\n      tags: [DataResources]\n  /mt/monitor/v1/agg/applications/list:\n    post:\n      description: \"Retrieve an aggregated list of applications across tenants.  \\\n        \\               \\n\"\n      operationId: post-mt-monitor-v1-agg-applications-list\n      parameters:\n      - description: \"Must be `tenant`. Using the query parameter returns all the\\\n          \\ aggregated responses for the current parent tenant and its child tenants.\\\n          \\ If not used, the results for just the current tenant are returned. \\n\"\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.  \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Applications List:\n                value:\n                  properties:\n                  - {property: tenant_id}\n                  - {property: tenant_name}\n                  - {property: app}\n                  - {function: avg, property: unique_app_count}\n                  - function: sum\n                    property: app_count\n                    sort: {order: desc}\n              Risky Applications List:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: app_risky}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: tenant_id}\n                  - {property: tenant_name}\n                  - {property: app}\n                  - {function: avg, property: unique_app_count}\n                  - function: sum\n                    property: app_count\n                    sort: {order: desc}\n            schema: {$ref: '#/components/schemas/RequestBody_Application'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Applications List:\n                  value:\n                  - {app: App1, app_count: 100, tenant_id: '1234', tenant_name: Tenant_1234,\n                    unique_app_count: 10}\n                Risky Applications List:\n                  value:\n                  - {app: App1, app_count: 100, tenant_id: '1234', tenant_name: Tenant_1234,\n                    unique_app_count: 10}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List applications\n      tags: [DataResources]\n  /mt/monitor/v1/agg/applications/source:\n    post:\n      description: \"Retrieve an aggregated count of applications by source across\\\n        \\ tenants, such as: remote networks, mobile users, or proxy nodes.       \\\n        \\            \\n\"\n      operationId: post-mt-monitor-v1-agg-applications-source\n      parameters:\n      - description: \"Must be `tenant`. Using the query parameter returns all the\\\n          \\ aggregated responses for the current parent tenant and its child tenants.\\\n          \\ If not used, the results for just the current tenant are returned. \\n\"\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.  \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Risky Application Count by Source:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: app_risky}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: total_app_count}\n                  - {property: total_app_remote_network}\n                  - {property: total_app_mobile_users}\n                  - {property: total_app_proxy_nodes}\n              Risky Application Count by Source per Tenant:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: app_risky}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - {property: total_app_count}\n                  - {property: total_app_remote_network}\n                  - {property: total_app_mobile_users}\n                  - {property: total_app_proxy_nodes}\n            schema: {$ref: '#/components/schemas/RequestBody_AppSrc'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Risky Application Count by Source:\n                  value:\n                  - {total_app_count: 10, total_app_mobile_users: 10, total_app_proxy_nodes: 10,\n                    total_app_remote_network: 10}\n                Risky Application Count by Source per Tenant:\n                  value:\n                  - {sub_tenant_id: \u003csub_tenant_id\u003e, total_app_count: 10, total_app_mobile_users: 10,\n                    total_app_proxy_nodes: 10, total_app_remote_network: 10}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List applications by source\n      tags: [DataResources]\n  /mt/monitor/v1/agg/applications/summary:\n    post:\n      description: \"Retrieve an aggregated summary count of risky applications across\\\n        \\ tenants.                   \\n\"\n      operationId: post-mt-monitor-v1-agg-applications-summary\n      parameters:\n      - description: \"Must be `tenant`. Using the query parameter returns all the\\\n          \\ aggregated responses for the current parent tenant and its child tenants.\\\n          \\ If not used, the results for just the current tenant are returned. \\n\"\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.  \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Blocked Risky Apps:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: blocked}\n                    - {rule: app_risky}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: total_app_count}\n                  - {property: risk_of_app_count}\n                  - {property: blocked_app_count}\n              Top Tenants using Risky Applications:\n                value:\n                  count: 4\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - alias: value\n                    property: risk_of_app_count\n                    sort: {order: desc}\n              Total Risky Apps:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: app_risky}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: total_app_count}\n                  - {property: risk_of_app_count}\n              Total Risky Apps Per Tenant:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: blocked}\n                    - {rule: app_risky}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - {property: total_app_count}\n                  - {property: risk_of_app_count}\n              Unblocked Risky Apps:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: unblocked}\n                    - {rule: app_risky}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: total_app_count}\n                  - {property: risk_of_app_count}\n                  - {property: unblocked_app_count}\n            schema: {$ref: '#/components/schemas/RequestBody_AppSummary'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Blocked Risky Apps:\n                  value:\n                  - {blocked_apps_count: 10, risk_of_app_count: 10, total_app_count: 10}\n                Top Tenants using Risky Applications:\n                  value:\n                  - {sub_tenant_id: \u003csub-tenant-id\u003e, value: 6}\n                Total Risky Apps:\n                  value:\n                  - {risk_of_app_count: 10, total_app_count: 10}\n                Total Risky Apps Per Tenant:\n                  value:\n                  - {risk_of_app_count: 10, sub_tenant_id: \u003csub_tenant_id\u003e, total_app_count: 10}\n                Unblocked Risky Apps:\n                  value:\n                  - {risk_of_app_count: 10, total_app_count: 10, unblocked_apps_count: 10}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List app summary\n      tags: [DataResources]\n  /mt/monitor/v1/agg/resource:\n    post:\n      description: \"Retrieve aggregated network inventory across tenants.        \\\n        \\            \\n\"\n      operationId: post-mt-monitor-v1-agg-resource\n      parameters:\n      - description: \"Must be `tenant`. Using the query parameter returns all the\\\n          \\ aggregated responses for the current parent tenant and its child tenants.\\\n          \\ If not used, the results for just the current tenant are returned. \\n\"\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.   \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Network Inventory Count:\n                value:\n                  properties:\n                  - {property: node_type}\n                  - {alias: node_count, function: count, property: node_type}\n            schema: {$ref: '#/components/schemas/RequestBody_Resource'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Network Inventory Count:\n                  value:\n                  - {node_count: 30, node_type: 48}\n                  - {node_count: 10, node_type: 49}\n                  - {node_count: 10, node_type: 50}\n                  - {node_count: 4, node_type: 51}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List network inventory count\n      tags: [DataResources]\n  /mt/monitor/v1/agg/threats:\n    post:\n      description: \"Retrieve an aggregated count of threats across tenants.      \\\n        \\              \\n\"\n      operationId: post-mt-monitor-v1-agg-threats\n      parameters:\n      - description: 'Must be `tenant`. Using the query parameter returns all the\n          aggregated responses for the current parent tenant and its child tenants.\n          If not used, the results for just the current tenant are returned.\n\n          '\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.    \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Security Rules and Unblocked Threats:\n                value:\n                  count: 4\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                    - {operator: is_not_null, property: rule_matched}\n                    - operator: not_equals\n                      property: rule_matched\n                      values: ['']\n                  properties:\n                  - {property: sub_tenant_id}\n                  - alias: threat_count\n                    function: count\n                    property: threat_id\n                    sort: {order: desc}\n                  - {alias: rule_name, property: rule_matched}\n              Threats Distribution by Threat Type:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                    - {operator: is_not_null, property: threat_sub_type}\n                    - operator: not_equals\n                      property: threat_sub_type\n                      values: ['']\n                  properties:\n                  - {property: threat_sub_type}\n                  - {alias: unique_threat_count, function: distinct_count, property: threat_id}\n                  - {function: sum, property: threat_count}\n              Threats Trend:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                  histogram: {enableEmptyInterval: false, property: event_time, range: day,\n                    value: '1'}\n                  properties:\n                  - {alias: count, function: sum, property: threat_count}\n              Top Users with Critical Threats:\n                value:\n                  count: 4\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: in\n                      property: severity\n                      values: [Critical]\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                    - {operator: is_not_null, property: source_user}\n                    - operator: not_equals\n                      property: source_user\n                      values: ['']\n                  properties:\n                  - {alias: unique_threat_count, function: count, property: threat_id}\n                  - alias: total_threat_count\n                    function: sum\n                    property: threat_count\n                    sort: {order: desc}\n                  - {property: source_user}\n                  - {property: source_user_info_name}\n            schema: {$ref: '#/components/schemas/RequestBody_Resource'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Threats Distribution by Threat Type:\n                  value:\n                  - {threat_count: 10, threat_sub_type: \u003cthreat_sub_type\u003e, unique_threat_count: 5}\n                Threats Trend:\n                  value:\n                  - {count: 10, event_time: \u003cevent_time_ms\u003e}\n                Top Users with Critical Threats:\n                  value:\n                  - {source_user: \u003csource-user\u003e, source_user_info_name: \u003csource-user-info-name\u003e,\n                    total_threat_count: 3999, unique_threat_count: 3924}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List threat count\n      tags: [DataResources]\n  /mt/monitor/v1/agg/threats/list:\n    post:\n      description: \"Retrieve an aggregated list of all threats across tenants.   \\\n        \\                 \\n\"\n      operationId: post-mt-monitor-v1-agg-threats-list\n      parameters:\n      - description: 'Must be `tenant`. Using the query parameter returns all the\n          aggregated responses for the current parent tenant and its child tenants.\n          If not used, the results for just the current tenant are returned.\n\n          '\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.                             \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Threat List:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: equals\n                      property: threat_severity\n                      values: [critical]\n                  properties:\n                  - {property: tenant_id}\n                  - {property: tenant_name}\n                  - {property: threat_severity}\n                  - {property: threat_severity_count}\n                  - {property: url_type}\n                  - {property: url_count}\n                  - {alias: unique_threat_count, function: distinct_count, property: threat_id}\n                  - {function: avg, property: threat_count}\n              Threats Summary Full:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                    - operator: in\n                      property: url_category_unknown\n                      values: [unknown]\n                    - operator: in\n                      property: url_category_malicious\n                      values: [grayware, malware, command-and-control, phishing]\n                    - operator: in\n                      property: action_value\n                      values: [deny, drop, drop-reset, block, block-url, block-ip,\n                        drop-packet, drop-all, drop-icmp, reset-both, reset-client,\n                        reset-server, block-continue, block-override, override-lockout,\n                        random-drop, syncookie-sent, sinkhole]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - {property: total_threats}\n                  - {property: blocked_count}\n                  - {property: unblocked_count}\n                  - {property: malicious_count}\n                  - {property: unknown_count}\n            schema: {$ref: '#/components/schemas/RequestBody_Threat'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Threat List:\n                  value:\n                  - {tenant_id: '1234', tenant_name: Tenant_1234, threat_count: 100,\n                    threat_severity: critical, threat_severity_count: 10, unique_threat_count: 10,\n                    url_count: 10, url_type: URL Type}\n                Threats Summary Full:\n                  value:\n                  - {blocked_count: 10, malicious_count: 10, sub_tenant_id: \u003csub_tenant_id\u003e,\n                    total_threats: 10, unblocked_count: 10, unknown_count: 10}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List threats\n      tags: [DataResources]\n  /mt/monitor/v1/agg/threats/source:\n    post:\n      description: \"Retrieve an aggregated count of critical threats by source across\\\n        \\ tenants, such as: remote networks, mobile users, or proxy nodes.       \\\n        \\              \\n\"\n      operationId: post-mt-monitor-v1-agg-threats-source\n      parameters:\n      - description: \"Must be `tenant`. Using the query parameter returns all the\\\n          \\ aggregated responses for the current parent tenant and its child tenants.\\\n          \\ If not used, the results for just the current tenant are returned. \\n\"\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.                             \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Threat Count by Source:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: total_app_count}\n                  - {property: total_app_remote_network}\n                  - {property: total_app_mobile_users}\n                  - {property: total_app_proxy_nodes}\n              Threat Count by Source per Tenant:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - {property: total_app_count}\n                  - {property: total_app_remote_network}\n                  - {property: total_app_mobile_users}\n                  - {property: total_app_proxy_nodes}\n            schema: {$ref: '#/components/schemas/RequestBody_ThreatSrc'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Threat Count by Source:\n                  value:\n                  - {total_app_count: 10, total_app_mobile_users: 10, total_app_proxy_nodes: 10,\n                    total_app_remote_network: 10}\n                Threat Count by Source per Tenant:\n                  value:\n                  - {sub_tenant_id: \u003csub_tenant_id\u003e, total_app_count: 10, total_app_mobile_users: 10,\n                    total_app_proxy_nodes: 10, total_app_remote_network: 10}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List threats by source\n      tags: [DataResources]\n  /mt/monitor/v1/agg/threats/summary:\n    post:\n      description: \"Retrieve an aggregated summary of threats across tenants.    \\\n        \\              \\n\"\n      operationId: post-mt-monitor-v1-agg-threats-summary\n      parameters:\n      - description: 'Must be `tenant`. Using the query parameter returns all the\n          aggregated responses for the current parent tenant and its child tenants.\n          If not used, the results for just the current tenant are returned.\n\n          '\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.                              \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Blocked Threats:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                    - {rule: blocked}\n                  properties:\n                  - {property: total_threats}\n                  - {property: blocked_count}\n              Threat Summary:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - {property: total_threats}\n                  - {property: blocked_count}\n                  - {property: unblocked_count}\n                  - {property: malicious_count}\n                  - {property: unknown_count}\n                  - {property: wildfire_verdict}\n              Top Tenants with Unblocked Threats:\n                value:\n                  count: 2\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - {alias: total, property: total_threats}\n                  - alias: value\n                    property: unblocked_count\n                    sort: {order: desc}\n              Total Critical Threats:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                  properties:\n                  - {property: total_threats}\n              Total Critical Threats Per Tenant:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - {property: total_threats}\n              Unblocked Threats:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                    - {rule: unblocked}\n                  properties:\n                  - {property: total_threats}\n                  - {property: unblocked_count}\n            schema: {$ref: '#/components/schemas/RequestBody_ThreatSummary'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Blocked Threats:\n                  value:\n                  - {blocked_count: 10, total_threats: 10}\n                Threat Summary:\n                  value:\n                  - {blocked_count: 79760, malicious_count: 16654, sub_tenant_id: \u003csub-tenant-id\u003e,\n                    total_threats: 99574, unblocked_count: 19814, unknown_count: 0,\n                    wildfire_verdict: 0}\n                Top Tenants with Unblocked Threats:\n                  value:\n                  - {sub_tenant_id: \u003csub-tenant-id\u003e, total: 99574, value: 19814}\n                Total Critical Threats:\n                  value:\n                  - {total_threats: 10}\n                Total Critical Threats Per Tenant:\n                  value:\n                  - {sub_tenant_id: \u003csub_tenant_id\u003e, total_threats: 10}\n                Unblocked Threats:\n                  value:\n                  - {total_threats: 10, unblocked_count: 10}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List threat summary\n      tags: [DataResources]\n  /mt/monitor/v1/agg/url/summary:\n    post:\n      description: \"Retrieve an aggregated summary count of URLs across tenants. \\\n        \\                 \\n\"\n      operationId: post-mt-monitor-v1-agg-url-summary\n      parameters:\n      - description: \"Must be `tenant`. Using the query parameter returns all the\\\n          \\ aggregated responses for the current parent tenant and its child tenants.\\\n          \\ If not used, the results for just the current tenant are returned. \\n\"\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.   \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Blocked Risky URL Count:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: url_high_risk}\n                    - {rule: blocked}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - alias: count\n                    function: sum\n                    property: uri_count\n                    sort: {order: desc}\n              Blocked Risky URL Count By Tenant:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: url_high_risk}\n                    - {rule: blocked}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - alias: count\n                    function: sum\n                    property: uri_count\n                    sort: {order: desc}\n              Risky URL Count By Tenant:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: url_high_risk}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - alias: count\n                    function: sum\n                    property: uri_count\n                    sort: {order: desc}\n            schema: {$ref: '#/components/schemas/RequestBody_UrlSummary'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Blocked Risky URL Count:\n                  value: {count: 10}\n                Blocked Risky URL Count By Tenant:\n                  value:\n                  - {count: 10, sub_tenant_id: \u003csub_tenant_id\u003e}\n                Risky URL Count By Tenant:\n                  value:\n                  - {count: 10, sub_tenant_id: \u003csub_tenant_id\u003e}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List URL count summary\n      tags: [DataResources]\n  /mt/monitor/v1/agg/urlLogs:\n    post:\n      description: \"Retrieve top tenants with risky URLs.                  \\n\"\n      operationId: post-mt-monitor-v1-agg-urllogs\n      parameters:\n      - description: \"Must be `tenant`. Using the query parameter returns all the\\\n          \\ aggregated responses for the current parent tenant and its child tenants.\\\n          \\ If not used, the results for just the current tenant are returned. \\n\"\n        in: query\n        name: agg_by\n        schema: {type: string}\n      - description: \"Must be one of the following: `de`, `americas`, `europe`, `uk`,\\\n          \\ `sg`, `ca`, `jp`, `au`, `in`. Returns details from the Cortex Data Lake\\\n          \\ (CDL) region specified.                                              \\\n          \\         \\n\"\n        in: header\n        name: X-PANW-Region\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Security Rules and Unblocked Risky Urls:\n                value:\n                  count: 4\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: url_high_risk}\n                    - {rule: unblocked}\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                    - {operator: is_not_null, property: rule_matched}\n                    - operator: not_equals\n                      property: rule_matched\n                      values: ['']\n                  properties:\n                  - {property: sub_tenant_id}\n                  - function: sum\n                    property: uri_count\n                    sort: {order: desc}\n                  - {alias: rule_name, property: rule_matched}\n              Top Tenants with Risky URLs:\n                value:\n                  filter:\n                    operator: AND\n                    rules:\n                    - operator: in\n                      property: url_category_value\n                      values: [high-risk, malware]\n                    - operator: last_n_days\n                      property: event_time\n                      values: [7]\n                  properties:\n                  - {property: sub_tenant_id}\n                  - alias: value\n                    function: sum\n                    property: uri_count\n                    sort: {order: desc}\n              Top Users Accessing Unblocked Risky Urls:\n                value:\n                  count: 4\n                  filter:\n                    operator: AND\n                    rules:\n                    - {rule: url_high_risk}\n                    - operator: last_n_days\n                      property: event_time\n                      values: [30]\n                    - operator: in\n                      property: severity\n                      values: [Critical, High, Medium]\n                    - {operator: is_not_null, property: source_user_info_name}\n                    - operator: not_equals\n                      property: source_user_info_name\n                      values: ['']\n                  properties:\n                  - {property: sub_tenant_id}\n                  - function: sum\n                    property: uri_count\n                    sort: {order: desc}\n                  - {alias: user_name, property: source_user_info_name}\n            schema: {$ref: '#/components/schemas/RequestBody_Resource'}\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Security Rules and Unblocked Risky Urls:\n                  value:\n                  - {rule_name: \u003crule-name\u003e, sub_tenant_id: \u003csub-tenant-id\u003e, uri_count: 300}\n                Top Tenants with Risky URLs:\n                  value:\n                  - {sub_tenant_id: \u003csub_tenant_id\u003e, value: 340}\n                Top Users Accessing Unblocked Risky Urls:\n                  value:\n                  - {sub_tenant_id: \u003csub-tenant-id\u003e, uri_count: 596, user_name: \u003cuser-name\u003e}\n          description: Success\n        '400': {description: Bad Request}\n        '500': {description: Server Error}\n      security:\n      - Bearer: []\n      summary: List top tenants with risky URLs\n      tags: [DataResources]\nservers:\n- {url: 'https://api.sase.paloaltonetworks.com'}\ntags:\n- {name: DataResources}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/pan.dev@596c1c4f159f1f379ba5145fb4a7f44fcc4cb37b/-/blob/static/sase/spec/mt-monitor/DataResources.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/pan.dev/blob/596c1c4f159f1f379ba5145fb4a7f44fcc4cb37b/static/sase/spec/mt-monitor/DataResources.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/mt/monitor/v1/agg/alerts\": post: requestBody: contents: media: \"application/json\": generate schema: field filter: allOf: schema type mismatch: object and "
}