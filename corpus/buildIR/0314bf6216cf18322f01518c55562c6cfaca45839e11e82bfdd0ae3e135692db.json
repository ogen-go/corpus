{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ZenWave360/zenwave-code-generator"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "examples/spring-boot-mongo-elasticsearch/src/main/resources/model/openapi.yml",
			"byteSize": 9460,
			"content": "openapi: 3.0.1\ninfo:\n  title: Zenwave 360 Generated API\n  version: 0.0.1\nservers:\n  - url: http://localhost:8080/api/\ntags:\n  - name: \"Default\"\n  - name: \"Customer\"\n  - name: \"CustomerOrder\"\n\npaths:\n  /customers:\n    get:\n      summary: Find Customers\n      operationId: findCustomers\n      tags: [Customer]\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"200\":\n          description: Customers\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerPaginated\"\n    post:\n      summary: Create Customer\n      operationId: createCustomer\n      tags: [Customer]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"201\":\n          description: Customer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n\n  /customers/{id}:\n    parameters:\n    - name: id\n      in: path\n      description: Customer id\n      required: true\n      schema:\n        type: string\n    get:\n      summary: Get Customer by id\n      operationId: getCustomer\n      tags: [Customer]\n      responses:\n        \"200\":\n          description: Customer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n    put:\n      summary: Update Customer\n      operationId: updateCustomer\n      tags: [Customer]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"200\":\n          description: Customer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n  \n\n  /customer-orders:\n    get:\n      summary: Find CustomerOrders\n      operationId: findCustomerOrders\n      tags: [CustomerOrder]\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerOrder\"\n      responses:\n        \"200\":\n          description: CustomerOrders\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerOrderPaginated\"\n    post:\n      summary: Create CustomerOrder\n      operationId: createCustomerOrder\n      tags: [CustomerOrder]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerOrder\"\n      responses:\n        \"201\":\n          description: CustomerOrder\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerOrder\"\n\n  /customer-orders/{id}:\n    parameters:\n    - name: id\n      in: path\n      description: CustomerOrder id\n      required: true\n      schema:\n        type: string\n    get:\n      summary: Get CustomerOrder by id\n      operationId: getCustomerOrder\n      tags: [CustomerOrder]\n      responses:\n        \"200\":\n          description: CustomerOrder\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerOrder\"\n    put:\n      summary: Update CustomerOrder\n      operationId: updateCustomerOrder\n      tags: [CustomerOrder]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerOrder\"\n      responses:\n        \"200\":\n          description: CustomerOrder\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerOrder\"\n  \n\n\n\n\ncomponents:\n  schemas:\n    Customer:\n      type: \"object\"\n      x-business-entity: \"Customer\"\n      required:\n      - \"firstName\"\n      - \"lastName\"\n      - \"password\"\n      - \"email\"\n      - \"username\"\n      properties:\n        id:\n          type: \"string\"\n        firstName:\n          type: \"string\"\n          minLength: 3\n          maxLength: 250\n        lastName:\n          type: \"string\"\n          minLength: 3\n          maxLength: 250\n        password:\n          type: \"string\"\n          minLength: 3\n          maxLength: 250\n        email:\n          type: \"string\"\n          minLength: 3\n          maxLength: 250\n        username:\n          type: \"string\"\n          minLength: 3\n          maxLength: 250\n    CustomerPaginated:\n      allOf:\n      - $ref: \"#/components/schemas/Page\"\n      - x-business-entity-paginated: \"Customer\"\n      - properties:\n          content:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/Customer\"\n    CustomerOrder:\n      type: \"object\"\n      x-business-entity: \"CustomerOrder\"\n      properties:\n        id:\n          type: \"string\"\n        date:\n          type: \"string\"\n          format: \"date-time\"\n        shippingDetails:\n          $ref: \"#/components/schemas/ShippingDetails\"\n        orderedItems:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/OrderedItem\"\n        paymentDetails:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/PaymentDetails\"\n        status:\n          $ref: \"#/components/schemas/OrderStatus\"\n        customer:\n          $ref: \"#/components/schemas/Customer\"\n    CustomerOrderPaginated:\n      allOf:\n      - $ref: \"#/components/schemas/Page\"\n      - x-business-entity-paginated: \"CustomerOrder\"\n      - properties:\n          content:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/CustomerOrder\"\n    ShippingDetails:\n      type: \"object\"\n      x-business-entity: \"ShippingDetails\"\n      properties:\n        address:\n          type: \"string\"\n    ShippingDetailsPaginated:\n      allOf:\n      - $ref: \"#/components/schemas/Page\"\n      - x-business-entity-paginated: \"ShippingDetails\"\n      - properties:\n          content:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/ShippingDetails\"\n    CustomerOrderSearchCriteria:\n      type: \"object\"\n      x-business-entity: \"CustomerOrderSearchCriteria\"\n      properties:\n        id:\n          type: \"string\"\n        dateTo:\n          type: \"string\"\n          format: \"date-time\"\n        dateFrom:\n          type: \"string\"\n          format: \"date-time\"\n        status:\n          $ref: \"#/components/schemas/OrderStatus\"\n    CustomerOrderSearchCriteriaPaginated:\n      allOf:\n      - $ref: \"#/components/schemas/Page\"\n      - x-business-entity-paginated: \"CustomerOrderSearchCriteria\"\n      - properties:\n          content:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/CustomerOrderSearchCriteria\"\n    PaymentDetails:\n      type: \"object\"\n      x-business-entity: \"PaymentDetails\"\n      properties:\n        creditCardNumber:\n          type: \"string\"\n    PaymentDetailsPaginated:\n      allOf:\n      - $ref: \"#/components/schemas/Page\"\n      - x-business-entity-paginated: \"PaymentDetails\"\n      - properties:\n          content:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/PaymentDetails\"\n    OrderedItem:\n      type: \"object\"\n      x-business-entity: \"OrderedItem\"\n      required:\n      - \"name\"\n      - \"price\"\n      properties:\n        catalogItemId:\n          type: \"integer\"\n          format: \"int64\"\n        name:\n          type: \"string\"\n          minLength: 3\n          maxLength: 250\n        quantity:\n          type: \"integer\"\n          format: \"int32\"\n        price:\n          type: \"number\"\n          format: \"double\"\n    OrderedItemPaginated:\n      allOf:\n      - $ref: \"#/components/schemas/Page\"\n      - x-business-entity-paginated: \"OrderedItem\"\n      - properties:\n          content:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/OrderedItem\"\n    OrderStatus:\n      type: \"string\"\n      x-business-entity: \"OrderStatus\"\n      enum:\n      - \"DELIVERED\"\n      - \"CONFIRMED\"\n      - \"SHIPPED\"\n\n    Page:\n      type: object\n      required:\n        - \"content\"\n        - \"totalElements\"\n        - \"totalPages\"\n        - \"size\"\n        - \"number\"\n      properties:\n        number:\n          type: integer\n          minimum: 0\n        numberOfElements:\n          type: integer\n          minimum: 0\n        size:\n          type: integer\n          minimum: 0\n          maximum: 200\n          multipleOf: 25\n        totalElements:\n          type: integer\n        totalPages:\n          type: integer\n\n  parameters:\n    page:\n      name: page\n      in: query\n      description: The number of results page\n      schema:\n        type: integer\n        format: int32\n        default: 0\n    limit:\n      name: limit\n      in: query\n      description: The number of results in a single page\n      schema:\n        type: integer\n        format: int32\n        default: 20\n    sort:\n      name: sort\n      in: query\n      description: The number of results page\n      schema:\n        type: array\n        items:\n          format: string\n",
			"canonicalURL": "/github.com/ZenWave360/zenwave-code-generator@e45c99c645f058ed10db288dd814eec05b6d6c2c/-/blob/examples/spring-boot-mongo-elasticsearch/src/main/resources/model/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ZenWave360/zenwave-code-generator/blob/e45c99c645f058ed10db288dd814eec05b6d6c2c/examples/spring-boot-mongo-elasticsearch/src/main/resources/model/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/customer-orders\": get: responses: code 200: contents: media: \"application/json\": generate schema: allOf: schema type mismatch: object and ",
	"NotImplemented": [
		"any type parameter"
	]
}