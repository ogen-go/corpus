{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fleetspace/missioncontrol"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "missioncontrol/openapi/openapi.yaml",
			"byteSize": 37060,
			"content": "openapi: 3.0.2\ninfo:\n  version: 0.0.0\n  title: mission control\nservers:\n  - url: /api/v0\n\nsecurity:\n  - jwt: ['operators']\n\npaths:\n  /auth/jwt:\n    get:\n      tags: ['auth']\n      security:\n        - jwt: []\n        - basic: []\n      summary: Return JWT token\n      operationId: v0.auth.generate_token\n      responses:\n        '200':\n          description: JWT token\n          content:\n            'text/plain':\n              schema:\n                type: string\n  /satellites/:\n    get:\n      tags: ['satellites']\n      description: get a list of satellites\n      operationId: v0.satellites.search\n      parameters:\n       - in: query\n         name: limit\n         schema:\n           type: integer\n           default: 100\n      responses:\n        200:\n          description: A list of Satellites\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Satellites\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /satellites/{hwid}/:\n    get:\n      tags: ['satellites']\n      description: get a Satellite by hwid\n      operationId: v0.satellites.get_hwid\n      parameters:\n       - in: path\n         required: true\n         name: hwid\n         schema:\n           type: string\n      responses:\n        200:\n          description: A Satellite\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Satellite\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags: ['satellites']\n      description: update satellite fields\n      operationId: v0.satellites.patch\n      parameters:\n       - in: path\n         required: true\n         name: hwid\n         schema:\n           type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: satellite\n              \"$ref\": \"#/components/schemas/Satellite\"\n      responses:\n        200:\n          description: A Satellite\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Satellite\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags: ['satellites']\n      description: update a satellite\n      operationId: v0.satellites.put\n      parameters:\n       - in: path\n         required: true\n         name: hwid\n         schema:\n           type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: satellite\n              \"$ref\": \"#/components/schemas/Satellite\"\n      responses:\n        200:\n          description: A Satellite\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Satellite\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags: ['satellites']\n      description: delete a satellite\n      operationId: v0.satellites.delete\n      parameters:\n       - in: path\n         required: true\n         name: hwid\n         schema:\n           type: string\n      responses:\n        204:\n          description: No Content\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /task-stacks/:\n    get:\n      tags: ['task-stacks']\n      description: get a list of active task-stacks\n      operationId: v0.task_stacks.search\n      parameters:\n       - in: query\n         name: limit\n         schema:\n           type: integer\n           default: 100\n       - in: query\n         name: name\n         schema:\n           type: string\n       - in: query\n         name: environment\n         schema:\n           type: string\n      responses:\n        200:\n          description: A list of TaskStacks\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskStacks\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /satellites/{hwid}/task-stack/:\n    get:\n      tags: ['satellites', 'task-stacks']\n      description: get a task-stack by satellite\n      operationId: v0.satellite_task_stack.get_task_stack\n      parameters:\n       - in: path\n         required: true\n         name: hwid\n         schema:\n           type: string\n      responses:\n        200:\n          description: A TaskStack\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskStack\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags: ['satellites', 'task-stacks']\n      description: |\n        Create a TaskStack for a Satellite.\n      operationId: v0.satellite_task_stack.put\n      parameters:\n       - in: path\n         required: true\n         name: hwid\n         schema:\n           type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: task_stack\n              $ref: \"#/components/schemas/TaskStack\"\n      responses:\n        200:\n          description: A TaskStack\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskStack\"\n        409:\n          description: conflict!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /task-stacks/{uuid}/:\n    get:\n      tags: ['task-stacks']\n      description: get a task-stack by uuid\n      operationId: v0.task_stacks.get_task_stack\n      parameters:\n       - in: path\n         required: true\n         name: uuid\n         schema:\n           type: string\n           format: uuid\n      responses:\n        200:\n          description: A TaskStack\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskStack\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags: ['task-stacks']\n      description: |\n        Create a TaskStack.\n        TaskStacks are immutable, and cannot be updated\n      operationId: v0.task_stacks.put\n      parameters:\n       - in: path\n         required: true\n         name: uuid\n         schema:\n           type: string\n           format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: task_stack\n              $ref: \"#/components/schemas/TaskStack\"\n      responses:\n        200:\n          description: A TaskStack\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskStack\"\n        409:\n          description: conflict!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /groundstations/:\n    get:\n      tags: ['groundstations']\n      description: get a list of groundstations\n      operationId: v0.groundstations.search\n      parameters:\n       - in: query\n         name: limit\n         schema:\n           type: integer\n           default: 100\n      responses:\n        200:\n          description: A list of GroundStations\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GroundStations\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /groundstations/{hwid}/:\n    get:\n      tags: ['groundstations']\n      description: get a GroundStation by hwid\n      operationId: v0.groundstations.get_hwid\n      parameters:\n       - in: path\n         required: true\n         name: hwid\n         schema:\n           type: string\n      responses:\n        200:\n          description: A GroundStation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GroundStation\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags: ['groundstations']\n      description: update GroundStation fields\n      operationId: v0.groundstations.patch\n      parameters:\n       - in: path\n         required: true\n         name: hwid\n         schema:\n           type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: groundstation\n              \"$ref\": \"#/components/schemas/GroundStation\"\n      responses:\n        200:\n          description: A GroundStation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GroundStation\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags: ['groundstations']\n      description: create a GroundStation\n      operationId: v0.groundstations.put\n      parameters:\n       - in: path\n         required: true\n         name: hwid\n         schema:\n           type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: groundstation\n              \"$ref\": \"#/components/schemas/GroundStation\"\n      responses:\n        200:\n          description: A GroundStation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GroundStation\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags: ['groundstations']\n      description: delete a groundstation\n      operationId: v0.groundstations.delete\n      parameters:\n       - in: path\n         required: true\n         name: hwid\n         schema:\n           type: string\n      responses:\n        204:\n          description: No Content\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /passes/:\n    get:\n      tags: ['passes']\n      description: get a list of passes\n      operationId: v0.passes.search\n      parameters:\n       - in: query\n         name: limit\n         schema:\n           type: integer\n           default: 100\n       - in: query\n         name: range_start\n         schema:\n           type: string\n         description: |\n           If neither range_start nor range_end are specified, then the\n           default range of now->2days in the future is applied.\n           Otherwise, the range_start parameter always comes before the\n           range_end paramter.\n           You can either specificy an ISO8601 datetime, or \"now\".\n       - in: query\n         name: range_end\n         schema:\n           type: string\n         description: |\n           If neither range_start nor range_end are specified, then the\n           default range of now->2days in the future is applied.\n           Otherwise, the range_start parameter always comes before the\n           range_end paramter.\n           You can either specificy an ISO8601 datetime, or \"now\".\n       - in: query\n         name: range_inclusive\n         description: |\n           If the time range should include accesses that partially overlap\n           the range_start or range_end.\n\n           * both - all accesses that overlap the range are returned\n           * start - accesses overlapping the range_start time are returned\n           * end - accesses overlapping the range_end time are returned\n           * neither - only returns accesses that are fully contained by the range\n         schema:\n           type: string\n           default: both\n           enum:\n             - start\n             - end\n             - both\n             - neither\n       - in: query\n         name: satellites\n         description: list of satellites to include (default is all satellites)\n         style: form\n         explode: false\n         schema:\n           type: array\n           items:\n             type: string\n       - in: query\n         name: groundstations\n         description: list of groundstations to include (default is all groundstations)\n         style: form\n         explode: false\n         schema:\n           type: array\n           items:\n             type: string\n       - in: query\n         name: show_stale\n         description: shows passes even if they are undesired and unscheduled\n         schema:\n           type: boolean\n           default: False\n       - in: query\n         name: order_by\n         description: |\n           Order the results by this field. Use `-` to reverse the ordering.\n         schema:\n           type: string\n           default: start_time\n           enum:\n           - \"start_time\"\n           - \"-start_time\"\n      responses:\n        200:\n          description: A list of Passes\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Passes\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /passes/{uuid}/:\n    get:\n      tags: ['passes']\n      description: get a pass by id\n      operationId: v0.passes.get_pass\n      parameters:\n      - in: path\n        required: true\n        name: uuid\n        schema:\n           type: string\n           format: uuid\n      responses:\n        200:\n          description: a Pass\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Pass\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags: ['passes']\n      description: create or update a pass\n      operationId: v0.passes.put\n      parameters:\n       - in: path\n         required: true\n         name: uuid\n         schema:\n           type: string\n           format: uuid\n      requestBody:\n        description: \"Use **either** an `access_id` or all of `satellite` `groundstation` `start_time` and `end_time` to specify the Pass.\"\n        content:\n          application/json:\n            schema:\n              x-body-name: _pass\n              allOf:\n              # we want all of the pass fields\n              - \"$ref\": \"#/components/schemas/Pass\"\n              # and some of them are required\n              - oneOf:\n                # either they passed an access id\n                # for a full-length pass\n                - required:\n                  - access_id\n                # or they passed the full pass params\n                # for a partial pass\n                - required:\n                  - satellite\n                  - groundstation\n                  - start_time\n                  - end_time\n      responses:\n        200:\n          description: A Pass\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Pass\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags: ['passes']\n      description: update fields in a pass\n      operationId: v0.passes.patch\n      parameters:\n       - in: path\n         required: true\n         name: uuid\n         schema:\n           type: string\n           format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: _pass\n              \"$ref\": \"#/components/schemas/Pass\"\n      responses:\n        200:\n          description: A Pass\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Pass\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags: ['passes']\n      description: delete a pass (if it hasn't been scheduled)\n      operationId: v0.passes.delete\n      parameters:\n       - in: path\n         required: true\n         name: uuid\n         schema:\n           type: string\n           format: uuid\n      responses:\n        204:\n          description: No Content\n        400:\n          description: Pass has already been scheduled\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /passes/{uuid}/track/:\n    get:\n      tags: ['passes']\n      description: get an altaz track for a given pass\n      operationId: v0.passes.get_track\n      parameters:\n      - in: path\n        required: true\n        name: uuid\n        schema:\n           type: string\n      - in: query\n        name: step\n        description: The step size (in seconds) between each track point.\n        schema:\n          type: integer\n          default: 5\n      responses:\n        200:\n          description: an altaz track for a given access id\n          content:\n            application/vnd.leaf+text:\n              schema:\n                type: string\n            application/vnd.leaf+json:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /passes/{uuid}/recalculate/:\n    post:\n      tags: ['passes']\n      description: get an altaz track for a given pass\n      operationId: v0.passes.recalculate\n      parameters:\n      - in: path\n        required: true\n        name: uuid\n        schema:\n           type: string\n      responses:\n        200:\n          description: an altaz track for a given pass id\n        409:\n          description: conflict!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /passes/{uuid}/attributes/:\n    get:\n      tags: ['passes']\n      description: get the attributes for a given pass\n      operationId: v0.passes.get_attributes\n      parameters:\n       - in: path\n         required: true\n         name: uuid\n         schema:\n           type: string\n           format: uuid\n      responses:\n        200:\n          description: An object of attributes for a given pass\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attributes'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags: ['passes']\n      description: Add some attributes to a given pass\n      operationId: v0.passes.patch_attributes\n      parameters:\n       - in: path\n         required: true\n         name: uuid\n         schema:\n           type: string\n           format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: attributes\n              \"$ref\": \"#/components/schemas/Attributes\"\n      responses:\n        200:\n          description: A list of attributes on the pass after adding these ones\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attributes'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags: ['passes']\n      description: Replace the list of attributes with this list\n      operationId: v0.passes.put_attributes\n      parameters:\n       - in: path\n         required: true\n         name: uuid\n         schema:\n           type: string\n           format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: attributes\n              \"$ref\": \"#/components/schemas/Attributes\"\n      responses:\n        200:\n          description: A list of attributes on the pass\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attributes'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /passes/{uuid}/task-stack/:\n    get:\n      tags: ['passes', 'task-stacks']\n      description: get a task-stack for a pass\n      operationId: v0.pass_task_stack.get_task_stack\n      parameters:\n       - in: path\n         required: true\n         name: uuid\n         schema:\n           type: string\n           format: uuid\n      responses:\n        200:\n          description: A TaskStack\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskStack\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      tags: ['passes', 'task-stacks']\n      description: |\n        Create a TaskStack override for this pass.\n      operationId: v0.pass_task_stack.put\n      parameters:\n       - in: path\n         required: true\n         name: uuid\n         schema:\n           type: string\n           format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: task_stack\n              $ref: \"#/components/schemas/TaskStack\"\n      responses:\n        200:\n          description: A TaskStack\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskStack\"\n        409:\n          description: conflict!\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /accesses/:\n    get:\n      tags: ['accesses']\n      description: get a list of accesses\n      operationId: v0.accesses.search\n      parameters:\n       - in: query\n         name: limit\n         schema:\n           type: integer\n           default: 100\n       - in: query\n         name: range_start\n         schema:\n           type: string\n           format: date-time\n       - in: query\n         name: range_end\n         schema:\n           type: string\n           format: date-time\n       - in: query\n         name: range_inclusive\n         description: |\n           If the time range should include accesses that partially overlap\n           the range_start or range_end.\n\n           * both - all accesses that overlap the range are returned\n           * start - accesses overlapping the range_start time are returned\n           * end - accesses overlapping the range_end time are returned\n           * neither - only returns accesses that are fully contained by the range\n         schema:\n           type: string\n           default: both\n           enum:\n             - start\n             - end\n             - both\n             - neither\n       - in: query\n         name: satellites\n         description: list of satellites to include (default is all satellites)\n         style: form  # use csv\n         explode: false\n         schema:\n           type: array\n           items:\n             type: string\n       - in: query\n         name: groundstations\n         description: list of groundstations to include (default is all groundstations)\n         style: form  # use csv\n         explode: false\n         schema:\n           type: array\n           items:\n             type: string\n      responses:\n        200:\n          description: A list of Accesses\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Accesses\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /accesses/{access_id}/:\n    get:\n      tags: ['accesses']\n      description: get an recomputed access from an access id\n      operationId: v0.accesses.get_access\n      parameters:\n      - in: path\n        required: true\n        name: access_id\n        schema:\n           type: string\n      responses:\n        200:\n          description: an Access\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Access\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /accesses/{access_id}/track/:\n    get:\n      tags: ['accesses']\n      description: get an altaz track for a given access id\n      operationId: v0.accesses.get_track\n      parameters:\n      - in: path\n        required: true\n        name: access_id\n        schema:\n           type: string\n      - in: query\n        name: step\n        description: The step size (in seconds) between each track point.\n        schema:\n          type: integer\n          default: 5\n      responses:\n        200:\n          description: an altaz track for a given access id\n          content:\n            application/vnd.leaf+text:\n              schema:\n                type: string\n            application/vnd.leaf+json:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  securitySchemes:\n    jwt:\n      x-bearerInfoFunc: v0.auth.decode_jwt\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    basic:\n      type: http\n      scheme: basic\n      x-basicInfoFunc: v0.auth.basic_auth\n  schemas:\n    Satellites:\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/Satellite\"\n    Satellite:\n      properties:\n        hwid:\n          description: the authoritative identifier for this asset\n          type: string\n        catid:\n          description: the (external) CSpOC identifier for this asset\n          type: string\n        tle:\n          description: the two line element model of the satellite position\n          nullable: true\n          type: array\n          maxItems: 2\n          minItems: 2\n          items:\n            type: string\n        logger_state:\n          description: A json field for storing the current state of the loggers on the satellite\n          type: object\n          nullable: true\n        task_stack:\n          description: link to the task-stack for this satellite\n          type: string\n          format: uri\n          nullable: true\n\n    GroundStations:\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/GroundStation\"\n    GroundStation:\n      properties:\n        hwid:\n          description: the authoritative identifier for this asset\n          type: string\n        latitude:\n          description: the latitude component of the GPS location\n          type: number\n        longitude:\n          description: the longitude component of the GPS location\n          type: number\n        elevation:\n          description: the elevation component of the GPS location\n          type: number\n        horizon_mask:\n          description: an array of the altitude of the horizon (in deg) for each degree of azimuth\n          nullable: true\n          type: array\n          maxItems: 360\n          minItems: 360\n          items:\n            type: number\n        passes_read_only:\n          description: if true then passes are scheduled externally and cannot be chosen using this api\n          type: boolean\n\n    Accesses:\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/Access\"\n    Access:\n      properties:\n        id:\n          description: the id of this access\n          type: string\n          readOnly: true\n        satellite:\n          description: the hwid of the satellite\n          readOnly: true\n          type: string\n        groundstation:\n          description: the hwid of the groundstation\n          readOnly: true\n          type: string\n        start_time:\n          description: the start_time of the access\n          readOnly: true\n          type: string\n          format: date-time\n        end_time:\n          description: the end_time of the access\n          readOnly: true\n          type: string\n          format: date-time\n        max_alt:\n          description: the maximum altitude of the access (deg)\n          readOnly: true\n          type: number\n        _track:\n          description: link to AltAz track for this access\n          readOnly: true\n          type: string\n        _href:\n          description: link to this access\n          readOnly: true\n          type: string\n\n    Passes:\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/Pass\"\n    Pass:\n      properties:\n        uuid:\n          description: the unique identifier for the pass\n          type: string\n          format: uuid\n        satellite:\n          description: the hwid of the satellite\n          type: string\n        groundstation:\n          description: the hwid of the groundstation\n          type: string\n        tle:\n          description: the two line element model of the satellite position\n          nullable: true\n          type: array\n          maxItems: 2\n          minItems: 2\n          items:\n            type: string\n        access_id:\n          description: link to the corresponding access for this pass\n          type: string\n        start_time:\n          description: the start_time of the pass\n          type: string\n          format: date-time\n        end_time:\n          description: the end_time of the pass\n          type: string\n          format: date-time\n        is_desired:\n          description: if operators want the pass to happen\n          type: boolean\n        scheduled_on_sat:\n          description: if this pass has been scheduled onboard\n          type: boolean\n        scheduled_on_gs:\n          description: if this pass has been scheduled onboard\n          type: boolean\n        is_valid:\n          description: if the pass times still match up with a valid access\n          readOnly: true\n          type: boolean\n        max_alt:\n          description: the maximum altitude of the pass (deg)\n          readOnly: true\n          type: number\n        external_id:\n          description: 3rd parties may reference this pass by a different name, save it here\n          type: string\n        task_stack:\n          description: |\n            link to the task-stack for this pass. If null, then the\n            satellite's task-stack is used.\n          type: string\n          format: uri\n          nullable: true\n        attributes:\n          description: A list of attributes for this pass\n          allOf:\n          - \"$ref\": \"#/components/schemas/Attributes\"\n          - readOnly: true\n        _track:\n          description: link to the AltAz track for this access\n          type: string\n          readOnly: true\n        _href:\n          description: link to this pass\n          readOnly: true\n          type: string\n\n    TaskStacks:\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/TaskStack\"\n\n    TaskStack:\n      properties:\n        name:\n          description: a non-unique name for this task stack\n          type: string\n        uuid:\n          description: the unique identifier for the TaskStack\n          type: string\n          format: uuid\n        environment:\n          description: |\n            The environment that the tasks are run in.\n            This might be a container, or a git branch/sha\n          type: string\n        tasks:\n          description: |\n            The tasks to be run, in order.\n            This should be the name of an executable in your environment\n          type: array\n          items:\n            type: string\n        pinned:\n          description: pin this task-stack for future use\n          type: boolean\n          default: False\n        _href:\n          description: link to this TaskStack\n          readOnly: true\n          type: string\n\n    TaskRun:\n      properties:\n        uuid:\n          description: the unique identifier for the TaskRun\n          type: string\n          format: uuid\n        task:\n          description: The task that was run\n          type: string\n        task_stack:\n          description: The task stack that spawned this task\n          type: string\n          format: uri\n        pass:\n          description: A link to the pass that this task was run on\n          type: string\n          format: uri\n        start_time:\n          description: the start_time of the pass\n          type: string\n          format: date-time\n        end_time:\n          description: the end_time of the pass\n          type: string\n          format: date-time\n        exit_code:\n          description: the exit code of the process\n          type: integer\n        stdout:\n          description: a link to the stdout log\n          readOnly: true\n          type: string\n          format: uri\n        stderr:\n          description: a link to the stderr log\n          readOnly: true\n          type: string\n          format: uri\n        _href:\n          description: link to this TaskStack\n          readOnly: true\n          type: string\n          format: uri\n\n    Attributes:\n      type: object\n      additionalProperties:\n        type: string\n\n    Error:\n      description: schema for problem+json (RFC 7807)\n      type: object\n      required:\n      - type\n      properties:\n        type:\n          description: A URI reference [RFC3986] that identifies the problem type.\n          type: string\n          format: uri\n        title:\n          description: A short, human-readable summary of the problem type.\n          type: string\n        status:\n          description: The HTTP status code ([RFC7231], Section 6) generated by the\n            origin server for this occurrence of the problem.\n          type: number\n        instance:\n          description: A URI reference that identifies the specific occurrence of the\n            problem.\n          type: string\n        detail:\n          description: A human-readable explanation specific to this occurrence of the\n            problem.\n          type: string\n        debugging:\n          description: Debugging information for DEV and QA environments.\n          type: string\n        invalid-params:\n          description: An array of validation errors.\n          type: array\n          items:\n            description: The validation error descriptor.\n            type: object\n            required:\n            - path\n            - name\n            - reason\n            properties:\n              path:\n                type: string\n              name:\n                type: string\n              reason:\n                type: string\n            additionalProperties: false\n",
			"canonicalURL": "/github.com/fleetspace/missioncontrol@c5b06e6d81ace1957161ebf2f9dacec05badde7d/-/blob/missioncontrol/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/fleetspace/missioncontrol/blob/c5b06e6d81ace1957161ebf2f9dacec05badde7d/missioncontrol/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/passes/\": get: responses: 200: contents: application/json: generate schema: item: field attributes: allOf: schema type mismatch: object and "
}