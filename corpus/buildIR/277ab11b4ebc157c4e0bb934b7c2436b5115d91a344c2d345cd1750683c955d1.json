{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/readme/oas-examples"
		},
		"file": {
			"name": "discriminators.yaml",
			"size": 0,
			"path": "3.0/yaml/discriminators.yaml",
			"byteSize": 12396,
			"content": "openapi: 3.0.3\ninfo:\n  title: Discriminator support\n  description: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#discriminatorObject\n  version: 1.0.0\nservers:\n  - url: https://httpbin.org/anything\ntags:\n  - name: Quirks\npaths:\n  '/discriminator-with-mapping':\n    patch:\n      operationId: oneOfWithTopLevelDiscriminatorAndMapping\n      summary: oneOf with discriminator and mapping\n      description: Polymorphic `oneOf` schema with a top-level discriminator and a\n        mapping definition.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - '$ref': '#/components/schemas/OptionOneNoDisc'\n                - '$ref': '#/components/schemas/OptionTwoNoDisc'\n              discriminator:\n                propertyName: discrim\n                mapping:\n                  Option One: '#/components/schemas/OptionOneNoDisc'\n                  Option Two: '#/components/schemas/OptionTwoNoDisc'\n      responses:\n        '200':\n          description: Updated\n  '/discriminator-with-no-mapping':\n    patch:\n      operationId: oneOfWithTopLevelDiscriminatorNoMapping\n      summary: oneOf with top-level discriminator (no mapping)\n      description: Polymorphic `oneOf` schema with a top-level discriminator and **no**\n        mapping definition.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - '$ref': '#/components/schemas/OptionOneNoDisc'\n                - '$ref': '#/components/schemas/OptionTwoNoDisc'\n              discriminator:\n                propertyName: discrim\n      responses:\n        '200':\n          description: Updated\n  '/embedded-discriminator':\n    patch:\n      summary: oneOf request with a nested allOf and embedded discriminator\n      description: This operation contains a request schema of a `oneOf` that itself\n        contains an `allOf` with a discriminator for the afformentioned `allOf`. This\n        is considered an embedded discriminator.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - '$ref': '#/components/schemas/Cat'\n                - '$ref': '#/components/schemas/Dog'\n      responses:\n        '200':\n          description: Updated\n  '/oneof-allof-top-level-disc':\n    patch:\n      summary: oneOf request with a nested allOf and top level discriminator\n      description: This operation has a `oneOf`, with a discriminator, but its `oneOf`\n        contents contain an `allOf` where that discriminator `propertyName` is in\n        reference to.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - '$ref': '#/components/schemas/CatNoDisc'\n                - '$ref': '#/components/schemas/DogNoDisc'\n              discriminator:\n                propertyName: pet_type\n      responses:\n        '200':\n          description: Updated\n  '/nested-one-of-object-with-nested-one-of':\n    patch:\n      summary: oneOf request with a nested oneOf, and embedded discriminator\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                config:\n                  oneOf:\n                    - '$ref': '#/components/schemas/object1'\n                    - '$ref': '#/components/schemas/object2'\n                    - oneOf:\n                        - '$ref': '#/components/schemas/Cat'\n                        - '$ref': '#/components/schemas/Dog'\n              additionalProperties: false\n      responses:\n        '200':\n          description: OK\n  '/mapping-with-duplicate-schemas':\n    patch:\n      summary: Handle a schema with duplicate mapping schemas\n      description: |-\n        Render a schema with a discriminator, where the mapping reuses a schema more than once.\n        \u003e **Note:** the discriminator is `discrimValue`, not `discrim`.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                discrimValue:\n                  type: string\n                  enum:\n                    - oneA\n                    - oneB\n                    - oneC\n                    - twoA\n                    - twoB\n                    - three\n              discriminator:\n                propertyName: discrimValue\n                mapping:\n                  oneA: '#/components/schemas/OptionOneNoDisc'\n                  oneB: '#/components/schemas/OptionOneNoDisc'\n                  oneC: '#/components/schemas/OptionOneNoDisc'\n                  twoA: '#/components/schemas/OptionTwoNoDisc'\n                  twoB: '#/components/schemas/OptionTwoNoDisc'\n                  three: '#/components/schemas/OptionThreeNoDisc'\n              oneOf:\n                - '$ref': '#/components/schemas/OptionOneNoDisc'\n                - '$ref': '#/components/schemas/OptionTwoNoDisc'\n                - '$ref': '#/components/schemas/OptionThreeNoDisc'\n      responses:\n        '201':\n          description: OK\n  '/mapping-of-schema-names':\n    patch:\n      summary: Discriminator with a schema name mapping\n      description: Schema names, instead of `$ref` pointers, can be used in discriminator\n        mappings.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - '$ref': '#/components/schemas/OptionOneNoDisc'\n                - '$ref': '#/components/schemas/OptionTwoNoDisc'\n              discriminator:\n                propertyName: discrim\n                mapping:\n                  Option One: OptionOneNoDisc\n                  Option Two: OptionTwoNoDisc\n      responses:\n        '200':\n          description: Updated\n  '/improper-discriminator-placement':\n    patch:\n      operationId: oneOfWithImproperlyPlacedDiscriminator\n      summary: oneOf with a discriminator that is referencing a property up a level\n      description: This operation has a `discriminator` that's in reference to a property\n        a level above it. **This is an improper use of discriminators.** Though this\n        is improper, in this case we should ignore the discriminator instead of failing\n        to render the operation.\n      tags:\n        - Quirks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                connector_type:\n                  type: string\n                  enum:\n                    - s3Import\n                    - gcsImport\n                connector_properties:\n                  type: object\n                  oneOf:\n                    - '$ref': '#/components/schemas/gcsImport'\n                    - '$ref': '#/components/schemas/s3Import'\n                  discriminator:\n                    propertyName: connector_type\n      responses:\n        '200':\n          description: OK\n  '/potentially-undefined-formData':\n    post:\n      summary: Handling for potentially undefined formData\n      description: This operation contains a schema that at one point produced an\n        edgecase within the form system where `formData` was `undefined`.\n      tags:\n        - Quirks\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - '$ref': '#/components/schemas/ApplicationApprovedEvent'\n                - '$ref': '#/components/schemas/ApplicationDeniedEvent'\n              discriminator:\n                propertyName: event_type\n                mapping:\n                  application_approved: '#/components/schemas/ApplicationApprovedEvent'\n                  application_denied: '#/components/schemas/ApplicationDeniedEvent'\n      responses:\n        '200':\n          description: OK\ncomponents:\n  requestBodies:\n    nested-one-of-ref:\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              config:\n                oneOf:\n                  - '$ref': '#/components/schemas/string1'\n                  - '$ref': '#/components/schemas/string2'\n            additionalProperties: false\n  schemas:\n    OptionOneNoDisc:\n      title: Schema title option one\n      type: object\n      required:\n        - discrim\n      properties:\n        discrim:\n          type: string\n        optionone:\n          type: number\n    OptionTwoNoDisc:\n      title: Schema title option two\n      type: object\n      required:\n        - discrim\n      properties:\n        discrim:\n          type: string\n        optiontwo:\n          type: string\n    OptionThreeNoDisc:\n      title: Schema title option three\n      type: object\n      required:\n        - discrim\n      properties:\n        discrim:\n          type: string\n        optionthree:\n          type: string\n    Pet:\n      type: object\n      required:\n        - pet_type\n      properties:\n        pet_type:\n          type: string\n      discriminator:\n        propertyName: pet_type\n    Dog:\n      title: Woof\n      allOf:\n        - '$ref': '#/components/schemas/Pet'\n        - type: object\n          properties:\n            bark:\n              type: boolean\n            breed:\n              type: string\n              enum:\n                - Dingo\n                - Husky\n                - Retriever\n                - Shepherd\n    Cat:\n      title: Meow\n      type: object\n      allOf:\n        - '$ref': '#/components/schemas/Pet'\n        - type: object\n          properties:\n            hunts:\n              type: boolean\n            age:\n              type: integer\n    object1:\n      title: First type of object\n      type: object\n      properties:\n        a:\n          type: string\n        b:\n          type: string\n    object2:\n      title: Second type of object\n      type: object\n      properties:\n        c:\n          type: string\n        d:\n          type: string\n    string1:\n      type: string\n    string2:\n      type: string\n    PetNoDisc:\n      type: object\n      required:\n        - pet_type\n      properties:\n        pet_type:\n          type: string\n    DogNoDisc:\n      title: Woof\n      allOf:\n        - '$ref': '#/components/schemas/PetNoDisc'\n        - type: object\n          properties:\n            bark:\n              type: boolean\n            breed:\n              type: string\n              enum:\n                - Dingo\n                - Husky\n                - Retriever\n                - Shepherd\n    CatNoDisc:\n      title: Meow\n      type: object\n      allOf:\n        - '$ref': '#/components/schemas/PetNoDisc'\n        - type: object\n          properties:\n            hunts:\n              type: boolean\n            age:\n              type: integer\n    gcsImport:\n      type: object\n      properties:\n        gcs_bucket:\n          type: string\n        gcs_prefix:\n          type: string\n    s3Import:\n      type: object\n      properties:\n        s3_bucket:\n          type: string\n        s3_prefix:\n          type: string\n    ApplicationApprovedEvent:\n      title: ApplicationApprovedEvent\n      description: Emitted when an application is underwritten and approved.\n      allOf:\n        - '$ref': '#/components/schemas/BasePurchaseWebhookEvent'\n    ApplicationDeniedEvent:\n      title: ApplicationDeniedEvent\n      description: Emitted when an application is underwritten and denied.\n      allOf:\n        - '$ref': '#/components/schemas/BasePurchaseWebhookEvent'\n    BasePurchaseWebhookEvent:\n      allOf:\n        - '$ref': '#/components/schemas/BaseBuyerWebhookEvent'\n        - type: object\n          properties:\n            order_id:\n              type: string\n              description: Provided Partner Order ID.\n    BaseBuyerWebhookEvent:\n      allOf:\n        - '$ref': '#/components/schemas/BaseWebhookEvent'\n        - type: object\n          properties:\n            buyer_id:\n              type: string\n              description: ID of the buyer the event corresponds to.\n          required:\n            - buyer_id\n    BaseWebhookEvent:\n      type: object\n      properties:\n        event_type:\n          type: string\n          description: Type of the webhook event.\n          enum:\n            - application_approved\n            - application_denied\n        event_id:\n          type: string\n          description: ID of the event.\n      required:\n        - event_type\n        - event_id\n",
			"canonicalURL": "/npm/readme/oas-examples@c1172d94f9ee52c3c1847b73f9ae1ad55945824b/-/blob/3.0/yaml/discriminators.yaml",
			"externalURLs": []
		}
	},
	"Error": "buildIR: make ir: path \"/potentially-undefined-formData\": post: requestBody: contents: media: \"application/json\": generate schema: oneOf: collect variants: oneOf[0]: allOf: allOf: schema type mismatch:  and object",
	"NotImplemented": [
		"discriminator inference"
	]
}