{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/personio/api-docs"
		},
		"file": {
			"name": "personio-personnel-data-api-oa3.yaml",
			"size": 0,
			"path": "personio-personnel-data-api-oa3.yaml",
			"byteSize": 122309,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"1.0\"\n  title: Personnel Data\n  description: API for reading and writing personnel data including data about attendances, absences, documents, etc\nx-readme:\n  samples-languages:\n    - \"curl\"\n    - \"python\"\n    - \"ruby\"\n    - \"java\"\n    - \"php\"\n    - \"node\"\npaths:\n  /auth:\n    post:\n      tags:\n        - Auth\n      description: 'Request Authentication Token'\n      parameters:\n        - $ref: \"#/components/parameters/XPersonioPartnerID\"\n        - $ref: \"#/components/parameters/XPersonioAppID\"\n        - name: client_id\n          in: query\n          required: true\n          description: Client id of the downloaded credentials file\n          schema:\n            type: string\n        - name: client_secret\n          in: query\n          required: true\n          description: Client secret of the downloaded credentials file\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Bearer token\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/AuthenticationTokenResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      token: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vYXBpLmRldi5wZXJzb25pby5kZTozMDAwMS92MS9hdXRoIiwiaWF0IjoxNDg5MDkxMzA2LCJleHAiOjE0ODkxNzc3MDYsIm5iZiI6MTQ4OTA5MTMwNiwianRpIjoiZmU1ZjkxOGY2MDZjOWI4OGMwMzM0ZmJkZjkyYzkwMzgiLCJzdWIiOiJPR014TVdRd1kySmxZbVF6Tm1RNVpqQmxOell6WmpsaSJ9.QZZCdlDjmL-LYdoDx2XLUfhwTdcjDgm9h4t-6JoACiM\"\n\n  /company/employees:\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Employees\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: Pagination attribute to limit the number of employees returned per page.\n          schema:\n            type: integer\n            minimum: 1\n            default: 200\n        - name: offset\n          in: query\n          required: false\n          description: Pagination attribute to identify the first item in the collection to return.\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n        - name: email\n          in: query\n          required: false\n          description: Find an employee with the given email address. The response is still a list, containing only the filtered employee.\n          schema:\n            type: string\n        - name: attributes[]\n          in: query\n          description: Define a list of whitelisted attributes that shall be returned for all employees.\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n      description: List Company Employees\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmployeesResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    metadata:\n                      total_elements: 2\n                      current_page: 0\n                      total_pages: 3\n                    offset: 0\n                    limit: 20\n                    data:\n                      - type: Employee\n                        attributes:\n                          id:\n                            label: ID\n                            value: 1\n                            type: integer\n                            universal_id: id\n                          first_name:\n                            label: First name\n                            value: Alexander\n                            type: standard\n                            universal_id: first_name\n                          last_name:\n                            label: Last name\n                            value: Bergmann\n                            type: standard\n                            universal_id: last_name\n                          email:\n                            label: Email\n                            value: alexander.bergmann@demo.email\n                            type: standard\n                            universal_id: email\n                          gender:\n                            label: Gender\n                            value: male\n                            type: standard\n                            universal_id: gender\n                          status:\n                            label: Status\n                            value: active\n                            type: standard\n                            universal_id: status\n                          position:\n                            label: Position\n                            value: CTO\n                            type: standard\n                            universal_id: position\n                          supervisor:\n                            label: Supervisor\n                            value:\n                              type: Employee\n                              attributes:\n                                id:\n                                  label: ID\n                                  value: 2\n                                  type: integer\n                                  universal_id: id\n                            type: standard\n                            universal_id: supervisor\n                          employment_type:\n                            label: Employment type\n                            value: external\n                            type: standard\n                            universal_id: employment_type\n                          weekly_working_hours:\n                            label: Weekly hours\n                            value: '40'\n                            type: standard\n                            universal_id: weekly_working_hours\n                          hire_date:\n                            label: Hire date\n                            value: 2014-11-09T00:00:00+01:00\n                            type: date\n                            universal_id: hire_date\n                          contract_end_date:\n                            label: Contract ends\n                            value: null\n                            type: date\n                            universal_id: contract_end_date\n                          termination_date:\n                            label: Termination date\n                            value: null\n                            type: date\n                            universal_id: termination_date\n                          termination_type:\n                            label: Termination type\n                            value: null\n                            type: standard\n                            universal_id: termination_type\n                          termination_reason:\n                            label: Termination reason\n                            value: null\n                            type: standard\n                            universal_id: termination_reason\n                          probation_period_end:\n                            label: Probation period end\n                            value: null\n                            type: date\n                            universal_id: probation_period_end\n                          created_at:\n                            label: created_at\n                            value: '2017-05-23T09:49:03+02:00'\n                            type: date\n                            universal_id: created_at\n                          last_modified_at:\n                            label: Last modified\n                            value: '2020-11-18T17:33:55+01:00'\n                            type: date\n                            universal_id: last_modified_at\n                          subcompany:\n                            label: Subcompany\n                            value:\n                              type: Subcompany\n                              attributes:\n                                id: 7033\n                                name: CS Demo GmbH\n                            type: standard\n                            universal_id: subcompany\n                          office:\n                            label: Office\n                            value:\n                              type: Office\n                              attributes:\n                                id: 131014\n                                name: Munich\n                            type: standard\n                            universal_id: office\n                          department:\n                            label: Department\n                            value:\n                              type: Department\n                              attributes:\n                                id: 281521\n                                name: Customer Support\n                            type: standard\n                            universal_id: department\n                          cost_centers:\n                            label: Cost center\n                            value:\n                              - type: CostCenter\n                                attributes:\n                                  id: 82957\n                                  name: Cost center 1\n                                  percentage: 100\n                            type: standard\n                            universal_id: cost_centers\n                          holiday_calendar:\n                            label: Public holidays\n                            value:\n                              type: HolidayCalendar\n                              attributes:\n                                id: 2\n                                name: Deutschland (Bayern) Feiertage\n                                country: DE\n                                state: Bayern\n                            type: standard\n                            universal_id: holiday_calendar\n                          absence_entitlement:\n                            label: Absence entitlement\n                            value:\n                              - type: TimeOffType\n                                attributes:\n                                  id: 113437\n                                  name: Paid vacation\n                                  category: paid_vacation\n                                  entitlement: 24\n                            type: standard\n                            universal_id: absence_entitlement\n                          work_schedule:\n                            label: Work schedule\n                            value:\n                              type: WorkSchedule\n                              attributes:\n                                id: 97188\n                                name: Full-time, 40 hours without time tracking, (mon,tue,wed,thu,fri)\n                                valid_from:\n                                monday: '08:00'\n                                tuesday: '08:00'\n                                wednesday: '08:00'\n                                thursday: '08:00'\n                                friday: '08:00'\n                                saturday: '00:00'\n                                sunday: '00:00'\n                            type: standard\n                            universal_id: work_schedule\n                          fix_salary:\n                            label: Fix salary\n                            value: 3000\n                            type: decimal\n                            universal_id: fix_salary\n                            currency: EUR\n                          fix_salary_interval:\n                            label: Salary interval\n                            value: monthly\n                            type: standard\n                            universal_id: fix_salary_interval\n                          hourly_salary:\n                            label: Hourly salary\n                            value: 0\n                            type: decimal\n                            universal_id: hourly_salary\n                            currency: EUR\n                          vacation_day_balance:\n                            label: Vacation day balance\n                            value: 2\n                            type: decimal\n                            universal_id: vacation_day_balance\n                          last_working_day:\n                            label: Last day of work\n                            value:\n                            type: date\n                            universal_id: last_working_day\n                          profile_picture:\n                            label: Profile Picture\n                            value: https://api.personio.de/v1/company/employees/1132888/profile-picture\n                            type: standard\n                            universal_id: profile_picture\n                          team:\n                            label: Team\n                            value:\n                              type: Team\n                              attributes:\n                                id: 59026\n                                name: T_X\n                            type: standard\n                            universal_id: team\n                          dynamic_24407:\n                            label: Titel\n                            value: Dr\n                            universal_id: null\n                            type: standard\n                          dynamic_21827:\n                            label: IBAN\n                            value: DE98 8989 9898 0000 8989 00\n                            universal_id: iban\n                            type: standard\n                          dynamic_33400:\n                            label: Anniversary Date\n                            value: 2021-01-01\n                            universal_id: null\n                            type: date\n    post:\n      security:\n        - BearerAuth: []\n      tags:\n        - Employees\n      summary: Create an employee\n      description: >\n        Creates new employee. Status of the employee will be set to `active` if `hire_date` provided is in the past. Otherwise status will be set to `onboarding`. This endpoint responds with `id` of created employee in case of success.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                employee:\n                  type: object\n                  properties:\n                    email:\n                      type: string\n                      example: \"john.dou@demo.com\"\n                      description: The e-mail field is required for the employee creation. Updating of this field is not currently supported.\n                    first_name:\n                      type: string\n                      example: \"John\"\n                    last_name:\n                      type: string\n                      example: \"Dou\"\n                    gender:\n                      type: string\n                      example: male\n                    position:\n                      type: string\n                      example: developer\n                    subcompany:\n                      type: string\n                      description: The subcompany employee belongs to. Should be predefined in Personio. Otherwise will be ignored with showing meta error in the response.\n                      example: ACME\n                    department:\n                      type: string\n                      description: The department employee belongs to. Should be predefined in Personio. Otherwise will be ignored with showing meta error in the response.\n                      example: IT\n                    office:\n                      type: string\n                      description: The office employee belongs to. Should be predefined in Personio. Otherwise will be ignored with showing meta error in the response.\n                      example: Madrid\n                    hire_date:\n                      type: string\n                      example: '2020-01-31'\n                      format: date\n                      description: \"Employee hire date. Format: yyyy-mm-dd\"\n                      pattern: ^\\d{4}-\\d{2}-\\d{2}$\n                    weekly_hours:\n                      type: number\n                      example: 40\n                    custom_attributes:\n                      type: object\n                      properties:\n                        dynamic_{{ field uid }}:\n                          type: string\n                          description: Dynamic field, represented by unique id.\n                          example: \"German\"\n                  required:\n                    - email\n                    - first_name\n                    - last_name\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                \"employee[email]\":\n                  description: Employee email\n                  type: string\n                \"employee[first_name]\":\n                  description: Employee first name\n                  type: string\n                \"employee[last_name]\":\n                  description: Employee last name\n                  type: string\n                \"employee[gender]\":\n                  description: Employee gender\n                  type: string\n                  enum:\n                    - male\n                    - female\n                    - diverse\n                \"employee[position]\":\n                  description: Employee position\n                  type: string\n                \"employee[department]\":\n                  description: Employee department\n                  type: string\n                \"employee[hire_date]\":\n                  type: string\n                  example: '2020-01-31'\n                  format: date\n                  description: \"Employee hire date. Format: yyyy-mm-dd\"\n                  pattern: ^\\d{4}-\\d{2}-\\d{2}$\n                \"employee[weekly_hours]\":\n                  description: Employee weekly working hours\n                  type: number\n              required:\n                - employee[email]\n                - employee[first_name]\n                - employee[last_name]\n      responses:\n        \"200\":\n          description: Successful creation of a employee\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/EmployeeCreatedResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      id: 81723\n                      message: \"success\"\n  \"/company/employees/{employee_id}\":\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    patch:\n      security:\n        - BearerAuth: []\n      tags:\n        - Employees\n      summary: Update an employee\n      description: >\n        Update existing employee. Note: Updating of Email field is not currently supported.\n      parameters:\n        - name: employee_id\n          in: path\n          required: true\n          description: Numeric `id` of the employee\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                employee:\n                  type: object\n                  properties:\n                    first_name:\n                      type: string\n                      example: \"John\"\n                    last_name:\n                      type: string\n                      example: \"Dou\"\n                    gender:\n                      type: string\n                      example: male\n                    position:\n                      type: string\n                      example: developer\n                    subcompany:\n                      type: string\n                      description: The subcompany employee belongs to. Should be predefined in Personio. Otherwise will be ignored with showing meta error in the response.\n                      example: ACME\n                    department:\n                      type: string\n                      description: The department employee belongs to. Should be predefined in Personio. Otherwise will be ignored with showing meta error in the response.\n                      example: IT\n                    office:\n                      type: string\n                      description: The office employee belongs to. Should be predefined in Personio. Otherwise will be ignored with showing meta error in the response.\n                      example: Madrid\n                    hire_date:\n                      type: string\n                      example: '2020-01-31'\n                      format: date\n                      description: \"Employee hire date. Format: yyyy-mm-dd\"\n                      pattern: ^\\d{4}-\\d{2}-\\d{2}$\n                    weekly_hours:\n                      type: number\n                      example: 40\n                    custom_attributes:\n                      type: object\n                      properties:\n                        dynamic_{{ field uid }}:\n                          type: string\n                          description: Dynamic field, represented by unique id.\n                          example: \"German\"\n                  required:\n                    - email\n                    - first_name\n                    - last_name\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                \"employee[first_name]\":\n                  description: Employee first name\n                  type: string\n                \"employee[last_name]\":\n                  description: Employee last name\n                  type: string\n                \"employee[gender]\":\n                  description: Employee gender\n                  type: string\n                  enum:\n                    - male\n                    - female\n                    - diverse\n                \"employee[position]\":\n                  description: Employee position\n                  type: string\n                \"employee[department]\":\n                  description: Employee department\n                  type: string\n                \"employee[hire_date]\":\n                  type: string\n                  example: '2020-01-31'\n                  format: date\n                  description: \"Employee hire date. Format: yyyy-mm-dd\"\n                  pattern: ^\\d{4}-\\d{2}-\\d{2}$\n                \"employee[weekly_hours]\":\n                  description: Employee weekly working hours\n                  type: number\n      responses:\n        \"200\":\n          description: Employee is updated\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/EmployeeCreatedResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      id: 81723\n                      message: \"success\"\n\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Employees\n      description: Show employee by ID\n      parameters:\n        - name: employee_id\n          in: path\n          required: true\n          description: Numeric `id` of the employee\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmployeeResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      type: Employee\n                      attributes:\n                        id:\n                          label: ID\n                          value: 1\n                          type: integer\n                          universal_id: id\n                        first_name:\n                          label: First name\n                          value: Alexander\n                          type: standard\n                          universal_id: first_name\n                        last_name:\n                          label: Last name\n                          value: Bergmann\n                          type: standard\n                          universal_id: last_name\n                        email:\n                          label: Email\n                          value: alexander.bergmann@demo.email\n                          type: standard\n                          universal_id: email\n                        gender:\n                          label: Gender\n                          value: male\n                          type: standard\n                          universal_id: gender\n                        status:\n                          label: Status\n                          value: active\n                          type: standard\n                          universal_id: status\n                        position:\n                          label: Position\n                          value: CTO\n                          type: standard\n                          universal_id: position\n                        supervisor:\n                          label: Supervisor\n                          value:\n                            type: Employee\n                            attributes:\n                              id:\n                                label: ID\n                                value: 2\n                                type: integer\n                                universal_id: id\n                          type: standard\n                          universal_id: supervisor\n                        employment_type:\n                          label: Employment type\n                          value: external\n                          type: standard\n                          universal_id: employment_type\n                        weekly_working_hours:\n                          label: Weekly hours\n                          value: '40'\n                          type: standard\n                          universal_id: weekly_working_hours\n                        hire_date:\n                          label: Hire date\n                          value: 2014-11-09T00:00:00+01:00\n                          type: date\n                          universal_id: hire_date\n                        contract_end_date:\n                          label: Contract ends\n                          value: null\n                          type: date\n                          universal_id: contract_end_date\n                        termination_date:\n                          label: Termination date\n                          value: null\n                          type: date\n                          universal_id: termination_date\n                        termination_type:\n                          label: Termination type\n                          value: null\n                          type: standard\n                          universal_id: termination_type\n                        termination_reason:\n                          label: Termination reason\n                          value: null\n                          type: standard\n                          universal_id: termination_reason\n                        probation_period_end:\n                          label: Probation period end\n                          value: null\n                          type: date\n                          universal_id: probation_period_end\n                        created_at:\n                          label: created_at\n                          value: '2017-05-23T09:49:03+02:00'\n                          type: date\n                          universal_id: created_at\n                        last_modified_at:\n                          label: Last modified\n                          value: '2020-11-18T17:33:55+01:00'\n                          type: date\n                          universal_id: last_modified_at\n                        subcompany:\n                          label: Subcompany\n                          value:\n                            type: Subcompany\n                            attributes:\n                              id: 7033\n                              name: CS Demo GmbH\n                          type: standard\n                          universal_id: subcompany\n                        office:\n                          label: Office\n                          value:\n                            type: Office\n                            attributes:\n                              id: 131014\n                              name: Munich\n                          type: standard\n                          universal_id: office\n                        department:\n                          label: Department\n                          value:\n                            type: Department\n                            attributes:\n                              id: 281521\n                              name: Customer Support\n                          type: standard\n                          universal_id: department\n                        cost_centers:\n                          label: Cost center\n                          value:\n                            - type: CostCenter\n                              attributes:\n                                id: 82957\n                                name: Cost center 1\n                                percentage: 100\n                          type: standard\n                          universal_id: cost_centers\n                        holiday_calendar:\n                          label: Public holidays\n                          value:\n                            type: HolidayCalendar\n                            attributes:\n                              id: 2\n                              name: Deutschland (Bayern) Feiertage\n                              country: DE\n                              state: Bayern\n                          type: standard\n                          universal_id: holiday_calendar\n                        absence_entitlement:\n                          label: Absence entitlement\n                          value:\n                            - type: TimeOffType\n                              attributes:\n                                id: 113437\n                                name: Paid vacation\n                                category: paid_vacation\n                                entitlement: 24\n                          type: standard\n                          universal_id: absence_entitlement\n                        work_schedule:\n                          label: Work schedule\n                          value:\n                            type: WorkSchedule\n                            attributes:\n                              id: 97188\n                              name: Full-time, 40 hours without time tracking, (mon,tue,wed,thu,fri)\n                              valid_from:\n                              monday: '08:00'\n                              tuesday: '08:00'\n                              wednesday: '08:00'\n                              thursday: '08:00'\n                              friday: '08:00'\n                              saturday: '00:00'\n                              sunday: '00:00'\n                          type: standard\n                          universal_id: work_schedule\n                        fix_salary:\n                          label: Fix salary\n                          value: 3000\n                          type: decimal\n                          universal_id: fix_salary\n                          currency: EUR\n                        fix_salary_interval:\n                          label: Salary interval\n                          value: monthly\n                          type: standard\n                          universal_id: fix_salary_interval\n                        hourly_salary:\n                          label: Hourly salary\n                          value: 0\n                          type: decimal\n                          universal_id: hourly_salary\n                          currency: EUR\n                        vacation_day_balance:\n                          label: Vacation day balance\n                          value: 2\n                          type: decimal\n                          universal_id: vacation_day_balance\n                        last_working_day:\n                          label: Last day of work\n                          value:\n                          type: date\n                          universal_id: last_working_day\n                        profile_picture:\n                          label: Profile Picture\n                          value: https://api.personio.de/v1/company/employees/1132888/profile-picture\n                          type: standard\n                          universal_id: profile_picture\n                        team:\n                          label: Team\n                          value:\n                            type: Team\n                            attributes:\n                              id: 59026\n                              name: T_X\n                          type: standard\n                          universal_id: team\n                        dynamic_24407:\n                          label: Titel\n                          value: Dr\n                          universal_id: null\n                          type: standard\n                        dynamic_21827:\n                          label: IBAN\n                          value: DE98 8989 9898 0000 8989 00\n                          universal_id: iban\n                          type: standard\n                        dynamic_33400:\n                          label: Anniversary Date\n                          value: 2021-01-01\n                          universal_id: null\n                          type: date\n                        dynamic_180883:\n                          label: Birthday\n                          value: 1983-08-18\n                          universal_id: date_of_birth\n                          type: date\n        \"404\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Employee404ErrorResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 404\n                      message: 'Es ist ein Problem aufgetreten '\n\n  \"/company/employees/{employee_id}/absences/balance\":\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Employees\n      description: Retrieve the absence balance for a specific employee\n      parameters:\n        - name: employee_id\n          in: path\n          required: true\n          description: Numeric `id` of the employee\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmployeeAbsenceBalance\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      - id: 21799\n                        name: \"Paid Vacation\"\n                        category: null\n                        balance: 14\n                      - id: 33523\n                        name: \"Sick Days\"\n                        category: null\n                        balance: 0\n        \"404\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Employee404ErrorResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 404\n                      message: 'Es ist ein Problem aufgetreten '\n\n  \"/company/employees/custom-attributes\":\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Employees\n      description: \"This endpoint is an alias for `/company/employees/attributes`.\"\n      parameters:\n        - $ref: \"#/components/parameters/XPersonioPartnerID\"\n        - $ref: \"#/components/parameters/XPersonioAppID\"\n      responses:\n        \"200\":\n          description: \"Please refer to `/company/employees/attributes`\"\n\n  \"/company/employees/attributes\":\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Employees\n      description: Lists all the allowed atrributes per API credentials including custom (dynamic) attributes.\n      parameters:\n        - $ref: \"#/components/parameters/XPersonioPartnerID\"\n        - $ref: \"#/components/parameters/XPersonioAppID\"\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      - key: first_name\n                        label: First Name\n                        type: standard\n                        universal_id: first_name\n                      - key: last_name\n                        label: Last Name\n                        type: standard\n                        universal_id: last_name\n                      - key: dynamic_1\n                        label: IBAN\n                        type: standard\n                        universal_id: iban\n\n  \"/company/employees/{employee_id}/profile-picture/{width}\":\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Employees\n      description: \"Show employee's profile picture. If profile picture is missing, the 404 error will be thrown. The `Profile Picture` attribute has to be whitelisted.\"\n      parameters:\n        - name: employee_id\n          in: path\n          required: true\n          description: Numeric `id` of the employee\n          schema:\n            type: integer\n            format: int32\n        - name: width\n          in: path\n          required: true\n          description: Width of the image. Default is original size\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\n        \"404\":\n          description: \"When the employee doesn't exist or employee doesn't have profile picture set or Profile Picture attribute is not whitelisted, this error occurs.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Employee404ErrorResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 404\n                      message: 'Etwas ist schiefgelaufen ...'\n\n  /company/attendances:\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Attendances\n      description: Fetch attendance data for the company employees. The result can be `paginated` and `filtered` by period, the date and/or time they were updated, and/or specific employee/employees. The result contains a list of attendances.\n      parameters:\n        - name: start_date\n          in: query\n          required: true\n          description: First day of the period to be queried. It is inclusive, so the day specified as start_date will also be considered on the results\n          schema:\n            type: string\n            format: date\n        - name: end_date\n          in: query\n          required: true\n          description: Last day of the period to be queried. It is inclusive, so the day specified as end_date will also be considered on the results.\n          schema:\n            type: string\n            format: date\n        - name: updated_from\n          in: query\n          required: false\n          description: Datetime from when the queried periods have been updated. Same format as updated_at.\n            It is inclusive, so the day specified as updated_from will also be considered on the results.\n            Can be just the date, or the date and the time, with or without the timezone.\n          schema:\n            type: string\n            format: datetime\n        - name: updated_to\n          in: query\n          required: false\n          schema:\n            type: string\n            format: datetime\n          description: Datetime until when the queried periods have been updated. Same format as updated_at.\n            It is inclusive, so the day specified as updated_to will also be considered on the results.\n            Can be just the date, or the date and the time, with or without the timezone.\n        - name: includePending\n          in: query\n          required: false\n          description: Returns AttendancePeriods with a status of pending, rejected and confirmed. For pending periods, the end_date attribute is nullable. The status of each period is included in the response.\n          schema:\n            type: boolean\n        - name: employees[]\n          in: query\n          required: false\n          description: A list of Personio employee ID's to filter the results. The result filters including only attendances of provided employees.\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n            example: ?employees[]=1&employees[]=2\n          allowReserved: true\n        - name: limit\n          in: query\n          required: false\n          description: Pagination attribute to limit how many attendances are per page\n          schema:\n            type: integer\n            minimum: 1\n            default: 200\n        - name: offset\n          in: query\n          required: false\n          description: Pagination attribute to identify which page you are requesting, by the form of telling an offset from the first record that would be returned.\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AttendancePeriodsResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    metadata:\n                      total_elements: 2\n                      current_page: 0\n                      total_pages: 3\n                    offset: 0\n                    limit: 200\n                    data:\n                      - id: 1234\n                        type: AttendancePeriod\n                        attributes:\n                          employee: 325659\n                          date: '2017-01-17'\n                          start_time: '09:00'\n                          end_time: '18:00'\n                          updated_at: '2017-01-17T16:41:08+00:00'\n                          status: 'confirmed'\n                          break: 50\n                          comment: I was super productive\n                          is_holiday: false\n                          is_on_time_off: false,\n                          project:\n                            id: 567\n                            type: \"Project\"\n                            attributes:\n                              name: \"A project name\"\n                              active: true\n                      - id: 1235\n                        type: AttendancePeriod\n                        attributes:\n                          employee: 325660\n                          date: '2017-01-18'\n                          start_time: '09:30'\n                          end_time: '18:30'\n                          updated_at: '2017-01-18T16:41:08+01:00'\n                          status: 'pending'\n                          break: 60\n                          comment: I wasn't productive\n                          is_holiday: false\n                          is_on_time_off: true\n                          project: null\n\n    post:\n      security:\n        - BearerAuth: []\n      tags:\n        - Attendances\n      description: This endpoint is responsible for adding attendance data for the company employees. It is possible to add attendances for one or many employees at the same time. The payload sent on the request should be a list of attendance periods, in the form of an array containing attendance period objects.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: \"#/components/schemas/AttendanceCreateRequest\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/NewAttendancePeriodParametersRequest\"\n        description: List of attendance periods to create\n        required: true\n      responses:\n        \"200\":\n          description: The attendance periods are successfullycreated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NewAttendancePeriodResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      id: [\n                          1,\n                          2,\n                      ]\n                      message: 'success'\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorCreateAttendanceResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 400\n                      message: 'Error when trying to insert Attendances periods rows'\n                      detailed_message: [\n                        {\n                          success: true,\n                          error_msg: null,\n                          id: 1,\n                          employee: 1234,\n                          date: \"2017-01-01\",\n                          start_time: \"09:00\",\n                          end_time: \"18:00\",\n                          break: 60,\n                          comment: \"\",\n                          project_id: 5\n                        },\n                        {\n                          success: false,\n                          error_msg: \"Existing overlapping attendances periods\",\n                          id: null,\n                          employee: 1234,\n                          date: \"2017-01-01\",\n                          start_time: \"09:00\",\n                          end_time: \"18:00\",\n                          break: 60,\n                          comment: \"\",\n                          project_id: null\n                        }\n                      ]\n\n  \"/company/attendances/{id}\":\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    delete:\n      security:\n        - BearerAuth: []\n      tags:\n        - Attendances\n      description: This endpoint is responsible for deleting attendance data for the\n        company employees.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the attendance period to delete\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: skip_approval\n          in: query\n          required: false\n          description: \"Optional, default value is true. If set to false, the approval status of the attendance period will be \\\"pending\\\" if an approval rule is set for the attendances type. The respective approval flow will be triggered.\"\n          schema:\n            type: boolean\n            default: true\n      responses:\n        \"200\":\n          description: Success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedAtendanceResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      message: 'The attendance period was deleted.'\n        \"404\":\n          description: Not found response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorAttendanceResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 404\n                      message: 'The attendance period was not found.'\n\n    patch:\n      security:\n        - BearerAuth: []\n      tags:\n        - Attendances\n      description: This endpoint is responsible for updating attendance data for the company employees. Attributes are not required and if not specified, the current value will be used. It is not possible to change the employee id.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the attendance period to update\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AttendanceUpdateRequest\"\n        description: attendance period data to update\n        required: true\n      responses:\n        \"200\":\n          description: Success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdatedAttendanceResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      message: The attendance period was updated.\n        \"404\":\n          description: Not found response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorAttendanceResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 404\n                      message: 'The attendance period was not found.'\n\n  /company/attendances/projects:\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Projects\n      description: Provides a list of all company projects.\n      responses:\n        \"200\":\n          description: List of projects returned\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Project\"\n    post:\n      security:\n        - BearerAuth: []\n      tags:\n        - Projects\n      description: Creates a project into the company account\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n              properties:\n                name:\n                  type: string\n                  example: \"A project name\"\n                active:\n                  type: boolean\n                  example: true\n                  default: false\n      responses:\n        \"200\":\n          description: Project created successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    $ref: \"#/components/schemas/Project\"\n        \"400\":\n          description: Invalid data was sent\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: false\n                  error:\n                    type: object\n                    properties:\n                      name:\n                        type: array\n                        items:\n                          type: string\n                          example: \"Project name cannot be empty\"\n\n  /company/attendances/projects/{id}:\n    delete:\n      security:\n        - BearerAuth: []\n      tags:\n        - Projects\n      description: Deletes a project from the company account\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: Numeric `id` of the project\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"204\":\n          description: Project was successfully deleted\n        \"404\":\n          description: Project does not exist\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: false\n                  message:\n                    type: string\n                    example: \"Project 5 not found\"\n\n    patch:\n      security:\n        - BearerAuth: []\n      tags:\n        - Projects\n      description: Updates a project with the given data\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: Numeric `id` of the project\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: \"A project name\"\n                active:\n                  type: boolean\n                  description: \"Marks the availability of the project\"\n                  example: true\n      responses:\n        \"200\":\n          description: Project updated successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    $ref: \"#/components/schemas/Project\"\n        \"400\":\n          description: Invalid data was sent\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: false\n                  error:\n                    type: object\n                    properties:\n                      active:\n                        type: array\n                        items:\n                          type: string\n                          example: \"Active field needs to be of type boolean\"\n        \"404\":\n          description: Project not found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: false\n                  message:\n                    type: string\n                    example: \"Project 5 not found\"\n\n\n  /company/time-off-types:\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Absences\n      description: Provides a list of available absences types. For example 'Paid vacation', 'Parental leave' or 'Home office'\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: Pagination attribute to limit how many records will be returned per page\n          schema:\n            type: integer\n            minimum: 1\n            default: 200\n        - name: offset\n          in: query\n          required: false\n          description: Pagination attribute to identify which page you are requesting, by the form of telling an offset from the first record that would be returned.\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/TimeOffTypeResource\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      - type: TimeOffType\n                        attributes:\n                          id: 1234\n                          name: 'Paid vacation'\n                          category: null\n                          unit: 'day'\n                          half_day_requests_enabled: true\n                          certification_required: false\n                          substitute_option: disabled\n                          approval_required: true\n\n                      - type: TimeOffType\n                        attributes:\n                          id: 1235\n                          name: 'Home office'\n                          category: 'offsite_work'\n                          unit: 'hour'\n                          half_day_requests_enabled: true\n                          certification_required: true\n                          certification_submission_timeframe: 2\n                          substitute_option: optional\n                          approval_required: true\n\n  /company/time-offs:\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Absences\n      description: This endpoint is responsible for fetching absence data for the company employees.The result can be `paginated` and `filtered` by period and/or specific employee/employees. The result contains a list of absence periods.\n      parameters:\n        - name: start_date\n          in: query\n          required: false\n          description: First day of the period to be queried. It is inclusive, so the result starts from and including the provided `start_date`\n          schema:\n            type: string\n            format: date\n        - name: end_date\n          in: query\n          required: false\n          description: Last day of the period to be queried. It is inclusive, so the result ends on `end_date` including absences from the `end_date`\n          schema:\n            type: string\n            format: date\n        - name: updated_from\n          in: query\n          required: false\n          description: Query the periods that created or modified from the date `updated_from`. It is inclusive, so all the periods created or modified from the beginning of the `updated_from` will be included in the results\n          schema:\n            type: string\n            format: date\n        - name: updated_to\n          in: query\n          required: false\n          description: Query the periods that created or modified until the date `updated_to`. It is inclusive, so all the periods created or modified until the end of the `updated_to` will be included in the results\n          schema:\n            type: string\n            format: date\n        - name: employees[]\n          in: query\n          required: false\n          description: A list of Personio employee ID's to filter the results. The result filters including only absences of provided employees\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n          allowReserved: true\n        - name: limit\n          in: query\n          required: false\n          description: Pagination attribute to limit how many attendances is returning per page\n          schema:\n            type: integer\n            minimum: 1\n            default: 200\n        - name: offset\n          in: query\n          required: false\n          description: Pagination attribute to identify which page you are requesting, by the form of telling an offset from the first record that would be returned.\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AbsencePeriodsResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    metadata:\n                      total_elements: 1\n                      current_page: 1\n                      total_pages: 1\n                    data:\n                      - type: TimeOffPeriod\n                        attributes:\n                          id: 12345\n                          status: approved\n                          start_date: '2017-12-27T00:00:00+0100'\n                          end_date: '2017-12-29T00:00:00+0100'\n                          days_count: 3\n                          half_day_start: false\n                          half_day_end: false\n                          time_off_type:\n                            type: TimeOffType\n                            attributes:\n                              id: 54321\n                              name: Vacation\n                              category: offsite_work\n                          employee:\n                            type: Employee\n                            attributes:\n                              id:\n                                label: id\n                                value: 4567\n                                type: integer\n                                universal_id: id\n                              first_name:\n                                label: First name\n                                value: Michael\n                                type: standard\n                                universal_id: first_name\n                              last_name:\n                                label: Last name\n                                value: Miller\n                                type: standard\n                                universal_id: last_name\n                              email:\n                                label: Email\n                                value: michael.miller@demo.com\n                                type: standard\n                                universal_id: email\n                          certificate:\n                            status: not-required\n                          created_at: '2017-01-17T10:32:18+0100'\n                          updated_at: '2017-01-17T10:32:18+0100'\n                    offset: 0,\n                    limit: 200,\n    post:\n      security:\n        - BearerAuth: []\n      tags:\n        - Absences\n      description: This endpoint is responsible for adding absence data for the company employees.\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/CreateTimeOffPeriodRequest\"\n        description: Absense data\n        required: true\n      x-readme:\n        code-samples:\n          - language: \"powershell\"\n            code: \"Auto-generated code snippets for this language may not be supported\"\n          - language: \"php\"\n            code: \"Auto-generated code snippets for this language may not be supported\"\n      responses:\n        \"201\":\n          description: The absence period is successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/AbsencePeriodResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      type: TimeOffPeriod\n                      attributes:\n                        id: 12345\n                        status: approved\n                        start_date: '2017-12-27T00:00:00+0100'\n                        end_date: '2017-12-29T00:00:00+0100'\n                        days_count: 3\n                        half_day_start: false\n                        half_day_end: false\n                        time_off_type:\n                          type: TimeOffType\n                          attributes:\n                            id: 54321\n                            name: Vacation\n                            category: offsite_work\n                        employee:\n                          type: Employee\n                          attributes:\n                            id:\n                              label: id\n                              value: 4567\n                              type: integer\n                              universal_id: id\n                            first_name:\n                              label: First name\n                              value: Michael\n                              type: standard\n                              universal_id: first_name\n                            last_name:\n                              label: Last name\n                              value: Miller\n                              type: standard\n                              universal_id: last_name\n                            email:\n                              label: Email\n                              value: michael.miller@demo.com\n                              type: standard\n                              universal_id: email\n                        certificate:\n                          status: not-required\n                        created_at: '2017-01-17T10:32:18+0100'\n                        updated_at: '2017-01-17T10:32:18+0100'\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorInsertingAbsenceResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 400\n                      message: 'Error when trying to insert absence period'\n\n        \"404\":\n          description: Employee or Absence type not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 0\n                      message: 'Something went wrong'\n\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorCreateAbsenceResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 0\n                      message: 'The given data failed to pass validation.'\n                      error_data: '{...}'\n\n  \"/company/time-offs/{id}\":\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    delete:\n      security:\n        - BearerAuth: []\n      tags:\n        - Absences\n      description: This endpoint is responsible for deleting absence period data for the company employees.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the absence period to delete\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Success response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeletedAbsenceResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      message: The absence period was deleted.\n        \"404\":\n          description: Not found response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorAbsenceResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 404\n                      message: 'The absence period was not found.'\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Absences\n      description: Show Absence Period\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: Numeric `id` of the absence period\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AbsencePeriodResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      type: TimeOffPeriod\n                      attributes:\n                        id: 12345\n                        status: approved\n                        start_date: '2017-12-27T00:00:00+0100'\n                        end_date: '2017-12-29T00:00:00+0100'\n                        days_count: 3\n                        half_day_start: false\n                        half_day_end: false\n                        time_off_type:\n                          type: TimeOffType\n                          attributes:\n                            id: 45678\n                            name: Vacation\n                            category: offsite_work\n                        employee:\n                          type: Employee\n                          attributes:\n                            id:\n                              label: id\n                              value: 2367\n                              type: integer\n                              universal_id: id\n                            first_name:\n                              label: First name\n                              value: Michael\n                              type: standard\n                              universal_id: first_name\n                            last_name:\n                              label: Last name\n                              value: Miller\n                              type: standard\n                              universal_id: last_name\n                            email:\n                              label: Email\n                              value: michael.miller@demo.com\n                              type: standard\n                              universal_id: email\n                        certificate:\n                          status: not-required\n                        created_at: '2017-01-17T10:32:18+0100'\n                        updated_at: '2017-01-17T10:32:18+0100'\n\n        \"404\":\n          description: Not found response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorAbsenceResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      code: 404\n                      message: 'The absence period was not found.'\n\n  \"/company/document-categories\":\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    get:\n      security:\n        - BearerAuth: []\n      tags:\n        - Documents\n      description: This endpoint is responsible for fetching all document categories of the company. The result contains a list of document categories.\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentCategoriesResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      - id: 1\n                        type: \"DocumentCategory\"\n                        attributes:\n                          name: \"Certificates of employment\"\n                      - id: 2\n                        type: \"DocumentCategory\"\n                        attributes:\n                          name: \"Other documents\"\n  \"/company/documents\":\n    parameters:\n      - $ref: \"#/components/parameters/XPersonioPartnerID\"\n      - $ref: \"#/components/parameters/XPersonioAppID\"\n    post:\n      security:\n        - BearerAuth: []\n      tags:\n        - Documents\n      description: This endpoint is responsible for uploading documents for the company employees.\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/DocumentUploadRequest\"\n        description: Needed data to upload a document\n      x-readme:\n        code-samples:\n          - language: \"powershell\"\n            code: \"Auto-generated code snippets for this language may not be supported\"\n          - language: \"php\"\n            code: \"Auto-generated code snippets for this language may not be supported\"\n          - language: \"ruby\"\n            code: \"Auto-generated code snippets for this language may not be supported\"\n          - language: \"java\"\n            code: \"Auto-generated code snippets for this language may not be supported\"\n      responses:\n        \"201\":\n          description: \"The document was successfully uploaded to the employees profile\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentUploadSuccessResponse\"\n              examples:\n                response:\n                  value:\n                    success: true\n                    data:\n                      id: 1\n                      type: \"Document\"\n                      attributes:\n                        title: \"Personio\"\n                        date: \"2022-02-02\"\n                        comment: \"Enable better organisations\"\n                        employee:\n                          type: \"Employee\"\n                          attributes:\n                            id:\n                              label: \"ID\"\n                              value: 1\n                              type: integer\n                              universal_id: \"id\"\n                            first_name:\n                              label: \"First name\"\n                              value: \"Demo\"\n                              type: standard\n                              universal_id: \"first_name\"\n                            last_name:\n                              label: \"Last name\"\n                              value: \"Account\"\n                              type: standard\n                              universal_id: \"last_name\"\n                            email:\n                              label: \"Email\"\n                              value: \"demo.account@demo.de\"\n                              type: standard\n                              universal_id: \"email\"\n                        category:\n                          id: 1\n                          type: \"DocumentCategory\"\n                          attributes:\n                            name: \"Other documents\"\n        \"404\":\n          description: \"This status code is returned if the provided employee_id or category_id are not found within the company.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentUploadFailedWithBadDocumentCategoryResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      message: \"No query results for model [DocumentCategory] 1\"\n                      code: 0 \n        \"422\":\n          description: \"This status code is returned if the provided request parameters cannot be processed or if the parameters are invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentUploadFailedWithUnsupportedFileTypeResponse\"\n              examples:\n                response:\n                  value:\n                    success: false\n                    error:\n                      message: \"The given data was invalid.\"\n                      code: 0\n                      error_data: \n                        file: [\n                          \"The file must be a file of type: pdf, docx, doc, jpg, zip, png, txt, jpeg, odt, xlsx, rtf, htm, xls, p7s, pptx, pages, rar, ppt, gif, tif, html, msg, asc, tiff, wps, bmp, 7z, csv, ics, vcf, dotx, numbers, eps, gz, ods, otf, odp, odg, rtfd, txz, webarchive, xml, xps, md, fax.\"\n                        ]\n\nservers:\n  - url: https://api.personio.de/v1\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n  parameters:\n    XPersonioPartnerID:\n      name: X-Personio-Partner-ID\n      in: header\n      required: false\n      description: The partner identifier\n      schema:\n        type: string\n    XPersonioAppID:\n      name: X-Personio-App-ID\n      in: header\n      required: false\n      description: The application identifier\n      schema:\n        type: string\n  schemas:\n    Response:\n      title: Default response object\n      type: object\n      properties:\n        success:\n          type: boolean\n        data:\n          type: object\n      required:\n        - success\n        - data\n\n    DocumentUploadRequest:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Title of the document. Maximum length is 255 characters.\n        comment:\n          type: string\n          description: Optional comment that can be added to the uploaded document.\n        employee_id:\n          type: integer\n          description: Employee identifier\n        category_id:\n          type: integer\n          description: Document Category identifier\n        date:\n          type: string\n          format: date\n          description: \"Optional date can be added to the uploaded document. Must follow the format: Y-m-d\"\n        file:\n          type: string\n          format: binary\n          description: The document that shall be uploaded to an employees profile\n      required:\n        - title\n        - employee_id\n        - category_id\n        - file\n\n    DocumentUploadFailedWithBadDocumentCategoryResponse:\n      type: object\n      allOf:\n        - type: object\n          properties:\n            success:\n              type: boolean\n              example: false\n            error:\n              type: object\n              properties:\n                message:\n                  type: string\n                  example: \"No query results for model [DocumentCategory] 1\"\n                code:\n                  type: integer\n                  example: 0\n\n    DocumentUploadFailedWithUnsupportedFileTypeResponse:\n      type: object\n      allOf:\n        - type: object\n          properties:\n            success:\n              type: boolean\n              example: false\n            error:\n              type: object\n              properties:\n                message:\n                  type: string\n                  example: \"The given data was invalid.\"\n                code:\n                  type: integer\n                  example: 0\n                error_data:\n                  type: object\n                  properties:\n                    file:\n                      type: array\n                      items:\n                        type: string \n                        example: \"The file must be a file of type: pdf, docx, doc, jpg, zip, png, txt, jpeg, odt, xlsx, rtf, htm, xls, p7s, pptx, pages, rar, ppt, gif, tif, html, msg, asc, tiff, wps, bmp, 7z, csv, ics, vcf, dotx, numbers, eps, gz, ods, otf, odp, odg, rtfd, txz, webarchive, xml, xps, md, fax.\"\n\n    DocumentUploadSuccessResponse:\n      type: object\n      allOf:\n        - type: object\n          properties:\n            success:\n              type: boolean\n              example: true\n            data:\n              type: object\n              properties:\n                id: \n                  type: integer\n                  example: 1\n                type:\n                  type: string\n                  example: \"Document\"\n                attributes:\n                  type: object\n                  properties:\n                    title:\n                      type: string\n                      example: \"Document Title\"\n                    date:\n                      type: string\n                      example: \"2022-01-01\"\n                    comment:\n                      type: string\n                      example: \"Optional Test Comment\"\n                    employee:\n                      $ref: \"#/components/schemas/DocumentEmployeeResponseObject\"\n                    category_id:\n                      $ref: \"#/components/schemas/DocumentCategory\"\n\n    DocumentEmployeeResponseObject:\n      type: object\n      properties:\n        id:\n          type: object\n          properties:\n            label:\n              type: string\n              example: \"ID\"\n            value:\n              type: integer\n              example: 1\n            type:\n              type: string\n              example: \"standard\"\n            universal_id:\n              type: string\n              example: \"id\"\n        first_name:\n          type: object\n          properties:\n            label:\n              type: string\n              example: \"First name\"\n            value:\n              type: string\n              example: \"Michael\"\n            type:\n              type: string\n              example: \"standard\"\n            universal_id:\n              type: string\n              example: \"first_name\"\n        last_name:\n          type: object\n          properties:\n            label:\n              type: string\n              example: \"Last name\"\n            value:\n              type: string\n              example: \"Dou\"\n            type:\n              type: string\n              example: \"standard\"\n            universal_id:\n              type: string\n              example: \"last_name\"\n        email:\n          type: object\n          properties:\n            label:\n              type: string\n              example: \"Email\"\n            value:\n              type: string\n              example: \"michaeldou@demo.de\"\n            type:\n              type: string\n              example: \"standard\"\n            universal_id:\n              type: string\n              example: \"email\"\n\n    DocumentCategoriesResponse:\n      type: object\n      allOf:\n        - type: object\n          properties:\n            success:\n              type: boolean\n              example: true\n            data:\n              type: array\n              items:\n                $ref: \"#/components/schemas/DocumentCategory\"\n\n    DocumentCategory:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n          example: \"DocumentCategory\"\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n              example: \"Certificates of employment\"\n\n    DeletedAbsenceResponse:\n      title: Default response object\n      type: object\n      properties:\n        success:\n          type: boolean\n        data:\n          type: object\n          properties:\n            message:\n              example: The absence period was deleted.\n\n    DeletedAtendanceResponse:\n      title: Default response object\n      type: object\n      properties:\n        success:\n          type: boolean\n        data:\n          type: object\n          properties:\n            message:\n              example: The attendance period was deleted\n\n    UpdatedAttendanceResponse:\n      title: Default response object\n      type: object\n      properties:\n        success:\n          type: boolean\n        data:\n          type: object\n          properties:\n            message:\n              example: The attendance period was updated.\n\n    ErrorResponse:\n      title: Default error response\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: false\n        error:\n          type: object\n          properties:\n            code:\n              type: integer\n              example: 0\n            message:\n              example: Something went wrong\n\n    ErrorCreateAbsenceResponse:\n      title: Default error response\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: false\n        error:\n          type: object\n          properties:\n            code:\n              type: integer\n              example: 0\n            message:\n              example: The given data failed to pass validation.\n\n    ErrorAbsenceResponse:\n      title: 404 absense error\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: false\n        error:\n          type: object\n          properties:\n            code:\n              type: integer\n              example: 404\n            message:\n              example: The absence period was not found.\n\n    ErrorInsertingAbsenceResponse:\n      title: 400 absense error\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: false\n        error:\n          type: object\n          properties:\n            code:\n              type: integer\n              example: 400\n            message:\n              example: Error when trying to insert absence period\n\n    ErrorCreateAttendanceResponse:\n      title: 400 attendances error\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: false\n        error:\n          type: object\n          properties:\n            code:\n              type: integer\n              example: 400\n            message:\n              type: string\n              example: Error when trying to insert Attendances periods rows\n            detailed_message:\n              type: array\n              items:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: false\n                  error_msg:\n                    type: string\n                    example: Existing overlapping attendances periods\n                  'id':\n                    type: integer\n                    nullable: true\n                    example: null\n                  employee:\n                    type: integer\n                    example: 1234\n                  date:\n                    type: string\n                    example: 2017-01-01\n                  start_time:\n                    type: string\n                    example: 09:00\n                  end_time:\n                    type: string\n                    example: 18:00\n                  break:\n                    type: integer\n                    example: 60\n                  comment:\n                    type: string\n                    example: \"Optional Test Comment\"\n                  project_id:\n                    type: integer\n                    nullable: true\n                    example: null\n\n    ErrorAttendanceResponse:\n      title: 404 absense error\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: false\n        error:\n          type: object\n          properties:\n            code:\n              type: integer\n              example: 404\n            message:\n              example: The attendance period was not found.\n\n    Employee404ErrorResponse:\n      title: 404 absense error\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: false\n        error:\n          type: object\n          properties:\n            code:\n              type: integer\n              example: 0\n            message:\n              example: Es ist ein Problem aufgetreten\n\n    EmployeeCreatedResponse:\n      title: Sucsefully created employee response\n      type: object\n      properties:\n        success:\n          type: boolean\n        data:\n          type: object\n          properties:\n            id:\n              type: number\n              example: 1\n            message:\n              example: success\n\n    Office:\n      type: object\n      properties:\n        label:\n          example: Office\n        value:\n          type: object\n          properties:\n            type:\n              type: string\n              example: Office\n            attributes:\n              type: object\n              properties:\n                name:\n                  example: Munich\n        type:\n          $ref: '#/components/schemas/TypeEnum'\n        universal_id:\n          example: office\n\n    Department:\n      type: object\n      properties:\n        label:\n          example: Department\n        value:\n          type: object\n          properties:\n            type:\n              type: string\n              example: Department\n            attributes:\n              type: object\n              required:\n                - id\n                - name\n              properties:\n                id:\n                  type: integer\n                  example: 1\n                name:\n                  type: string\n                  example: Marketing\n        type:\n          $ref: '#/components/schemas/TypeEnum'\n        universal_id:\n          example: department\n    CostCenters:\n      type: object\n      properties:\n        label:\n          example: Cost center\n        value:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                example: CostCenter\n              attributes:\n                type: object\n                properties:\n                  name:\n                    example: Cost Center One\n                  id:\n                    type: number\n                    example: 1\n                  percentage:\n                    type: number\n                    example: 50\n        type:\n          $ref: '#/components/schemas/TypeEnum'\n        universal_id:\n          example: cost_center\n    HolidayCalendar:\n      type: object\n      properties:\n        label:\n          example: Holiday Calendar\n        value:\n          type: object\n          properties:\n            type:\n              example: HolidayCalendar\n            attributes:\n              type: object\n              properties:\n                id:\n                  type: number\n                  example: 1\n                name:\n                  example: DE (Hamburg) Feiertage\n                country:\n                  example: DE\n                state:\n                  example: Hamburg\n        type:\n          $ref: '#/components/schemas/TypeEnum'\n        universal_id:\n          example: holiday_calendar\n    WorkSchedule:\n      type: object\n      properties:\n        label:\n          example: WorkSchedule\n        value:\n          type: object\n          properties:\n            type:\n              example: WorkSchedule\n            attributes:\n              type: object\n              properties:\n                id:\n                  type: number\n                  example: 1\n                name:\n                  example: Standard Hours\n                monday:\n                  example: 08:30\n                  pattern: ^\\d\\d:\\d\\d$\n                tuesday:\n                  example: 08:30\n                  pattern: ^\\d\\d:\\d\\d$\n                wednesday:\n                  example: 08:30\n                  pattern: ^\\d\\d:\\d\\d$\n                thursday:\n                  example: 08:30\n                  pattern: ^\\d\\d:\\d\\d$\n                friday:\n                  example: 08:30\n                  pattern: ^\\d\\d:\\d\\d$\n                saturday:\n                  example: 00:00\n                  pattern: ^\\d\\d:\\d\\d$\n                sunday:\n                  example: 00:00\n                  pattern: ^\\d\\d:\\d\\d$\n        type:\n          $ref: '#/components/schemas/TypeEnum'\n        universal_id:\n          example: work_schedule\n    Team:\n      type: object\n      properties:\n        label:\n          example: Team\n        value:\n          type: object\n          properties:\n            type:\n              type: string\n              example: Team\n            attributes:\n              type: object\n              properties:\n                name:\n                  example: Management\n        type:\n          $ref: '#/components/schemas/TypeEnum'\n        universal_id:\n          example: team\n\n    AbsenceEntitlement:\n      type: object\n      properties:\n        label:\n          example: Absence entitlement\n        value:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - TimeOffType\n              attributes:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                  name:\n                    example: Paid Vacation\n                  entitlement:\n                    example: 30\n      required:\n        - label\n        - value\n    Supervisor:\n      type: object\n      properties:\n        label:\n          type: string\n          example: Supervisor\n        value:\n          $ref: \"#/components/schemas/ShortEmployee\"\n\n    Employee:\n      type: object\n      properties:\n        id:\n          type: object\n          properties:\n            label:\n              example: ID\n            value:\n              example: 1\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: id\n        first_name:\n          type: object\n          properties:\n            label:\n              example: First name\n            value:\n              example: Michael\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: first_name\n        last_name:\n          type: object\n          properties:\n            label:\n              example: Last name\n            value:\n              example: Dou\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: last_name\n        email:\n          type: object\n          properties:\n            label:\n              example: Email\n            value:\n              example: michael.dou@personio.de\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: email\n        gender:\n          type: object\n          properties:\n            label:\n              example: Gender\n            value:\n              example: male\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: gender\n        status:\n          type: object\n          properties:\n            label:\n              example: Status\n            value:\n              example: active\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: status\n        position:\n          type: object\n          properties:\n            label:\n              example: Position\n            value:\n              example: Online Marketing Specialist\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: position\n        supervisor:\n          $ref: \"#/components/schemas/Supervisor\"\n        employment_type:\n          type: object\n          properties:\n            label:\n              example: Employment type\n            value:\n              example: internal\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: employment_type\n        weekly_working_hours:\n          type: object\n          properties:\n            label:\n              example: Weekly hours\n            value:\n              example: 40\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: weekly_working_hours\n        hire_date:\n          type: object\n          properties:\n            label:\n              example: Hire date\n            value:\n              example: 2012-02-01T00:00:00+0100\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: hire_date\n        contract_end_date:\n          type: object\n          properties:\n            label:\n              example: Contact end date\n            value:\n              example: 2020-02-01T00:00:00+0100\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: contract_end_date\n        termination_date:\n          type: object\n          properties:\n            label:\n              example: Termonation date\n            value:\n              example: 2020-02-01T00:00:00+0100\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: termination_date\n        termination_type:\n          type: object\n          properties:\n            label:\n              example: Termonation type\n            value:\n              example:\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: termination_type\n        termination_reason:\n          type: object\n          properties:\n            label:\n              example: Termonation reason\n            value:\n              example:\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: termination_reason\n        probation_period_end:\n          type: object\n          properties:\n            label:\n              example: Probation period end\n            value:\n              example: 2020-02-01T00:00:00+0100\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: probation_period_end\n        created_at:\n          type: object\n          properties:\n            label:\n              example: Created at\n            value:\n              example: 2018-02-01T00:00:00+0100\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: created_at\n        last_modified_at:\n          type: object\n          properties:\n            label:\n              example: Last modified\n            value:\n              example: '2020-11-18T17:33:55+01:00'\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: last_modified_at\n        subcompany:\n          $ref: \"#/components/schemas/Office\"\n        office:\n          $ref: \"#/components/schemas/Office\"\n        department:\n          $ref: \"#/components/schemas/Department\"\n        cost_centers:\n          $ref: \"#/components/schemas/CostCenters\"\n        holiday_calendar:\n          $ref: \"#/components/schemas/HolidayCalendar\"\n        work_schedule:\n          $ref: \"#/components/schemas/WorkSchedule\"\n        absence_entitlement:\n          $ref: \"#/components/schemas/AbsenceEntitlement\"\n        team:\n          $ref: \"#/components/schemas/Team\"\n        fix_salary:\n          type: object\n          properties:\n            label:\n              example: Fix salary\n            value:\n              example: 4000\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: fix_salary\n            currency:\n              example: EUR\n              type: string\n        fix_salary_interval:\n          type: object\n          properties:\n            label:\n              example: Salary interval\n            value:\n              example: monthly\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: fix_salary_interval\n        hourly_salary:\n          type: object\n          properties:\n            label:\n              example: Hourly salary\n            value:\n              example: 0\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: hourly_salary\n            currency:\n              example: EUR\n              type: string\n        vacation_day_balance:\n          type: object\n          properties:\n            label:\n              example: Vacation day balance\n            value:\n              example: 20.5\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: vacation_day_balance\n        last_working_day:\n          type: object\n          properties:\n            label:\n              example: Last day of work\n            value:\n              example:\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: last_working_day\n        profile_picture:\n          type: object\n          properties:\n            label:\n              example: Profile Picture\n            value:\n              example: http://api.dev.personio.de/v1/company/employees/1/profile-picture\n            type:\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: profile_picture\n        dynamic_21827:\n          type: object\n          properties:\n            label:\n              example: IBAN\n            value:\n              example: DE98 8989 9898 0000 8989 00\n            type:\n              description: The type of the field.\n              $ref: '#/components/schemas/TypeEnum'\n            universal_id:\n              example: iban\n\n    EmployeesResponse:\n      title: List of Employees\n      allOf:\n        - $ref: \"#/components/schemas/Response\"\n        - type: object\n          properties:\n            metadata:\n              type: object\n              required:\n                - total_elements\n                - current_page\n                - total_pages\n              properties:\n                total_elements:\n                  type: integer\n                  description: The total number of items matching the query filters.\n                total_pages:\n                  type: integer\n                  description: The total number of pages distributing sets of items matching the query filters.\n                current_page:\n                  type: integer\n                  description: Current page number containing the returned set of items matching with the query filters. The page number range is from 0 to total_pages - 1\n            offset:\n              type: integer\n            limit:\n              type: integer\n            data:\n              type: array\n              items:\n                type: object\n                properties:\n                  type:\n                    example: Employee\n                  attributes:\n                    $ref: \"#/components/schemas/Employee\"\n\n    EmployeeResponse:\n      title: Employee\n      allOf:\n        - $ref: \"#/components/schemas/Response\"\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                type: object\n                properties:\n                  type:\n                    example: Employee\n                  attributes:\n                    $ref: \"#/components/schemas/Employee\"\n\n    EmployeeAbsenceBalance:\n      title: Employee Absence Balance\n      type: object\n      properties:\n        success:\n          type: boolean\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n                example: 1234\n              name:\n                type: string\n                example: Paid Vacation\n              category:\n                type: string\n                example: custom_absence\n              balance:\n                type: number\n                example: 10.5\n\n    Project:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n          example: \"Project\"\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n              example: \"Project name\"\n            active:\n              example: true\n              description: \"Marks the availability of the project. The default value is false.\"\n              type: boolean\n            created_at:\n              example: \"2022-02-01T12:00:00+0100\"\n              type: string\n              format: datetime\n            updated_at:\n              example: \"2022-02-01T12:00:00+0100\"\n              type: string\n              format: datetime\n\n    AttendanceProject:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n          example: \"Project\"\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n              example: \"Project name\"\n            active:\n              example: true\n              description: \"Marks the availability of the project. When a new project is created, it's set by default to false.\"\n              type: boolean\n\n    Attendance:\n      type: object\n      properties:\n        employee:\n          example: 1\n          type: integer\n        date:\n          type: string\n          format: date\n        start_time:\n          type: string\n          pattern: ^\\d\\d:\\d\\d$\n          example: \"08:00\"\n        end_time:\n          type: string\n          pattern: ^\\d\\d:\\d\\d$\n          example: \"17:00\"\n        break:\n          type: integer\n          example: 60\n        comment:\n          type: string\n          example: \"I was productive as hell\"\n        is_holiday:\n          type: boolean\n          example: false\n        is_on_time_off:\n          type: boolean\n          example: false\n        status:\n          type: string\n          enum:\n            - confirmed\n            - pending\n            - rejected\n        project:\n          type: object\n          properties:\n            id:\n              type: integer\n              example: 5\n            type:\n              type: string\n              example: \"Project\"\n            attributes:\n                type: object\n                properties:\n                  name:\n                    type: string\n                    example: \"A project name\"\n                  active:\n                    type: boolean\n                    example: true\n\n    AttendanceCreateRequest:\n      type: object\n      properties:\n        attendances:\n          type: array\n          items:\n            type: object\n            properties:\n              employee:\n                type: integer\n                example: 1\n              date:\n                type: string\n                format: date\n              start_time:\n                type: string\n                pattern: ^\\d\\d:\\d\\d$\n                example: \"08:00\"\n                description: \"Format: hh:mm\"\n              end_time:\n                type: string\n                pattern: ^\\d\\d:\\d\\d$\n                example: \"17:00\"\n                description: \"Format: hh:mm\"\n              break:\n                type: integer\n                example: 60\n              comment:\n                type: string\n                example: \"I was productive as hell\"\n              project_id:\n                type: integer\n                nullable: true\n                example: 5\n        skip_approval:\n          type: boolean\n          description: \"Optional, default value is true. If set to false, the approval status of the attendance period will be \\\"pending\\\" if an approval rule is set for the attendances type. The respective approval flow will be triggered.\"\n\n    AttendanceUpdateRequest:\n      type: object\n      properties:\n        date:\n          type: string\n          format: date\n        start_time:\n          type: string\n          pattern: ^\\d\\d:\\d\\d$\n          example: \"08:00\"\n          description: \"Format: hh:mm\"\n        end_time:\n          type: string\n          pattern: ^\\d\\d:\\d\\d$\n          example: \"17:00\"\n          description: \"Format: hh:mm\"\n        break:\n          type: integer\n          example: 60\n        comment:\n          type: string\n          example: \"I was productive as hell\"\n        project_id:\n          type: integer\n          nullable: true\n          example: 5\n        skip_approval:\n          type: boolean\n          description: \"Optional, default value is true. If set to false, the approval status of the attendance period will be \\\"pending\\\" if an approval rule is set for the attendances type. The respective approval flow will be triggered.\"\n\n    AttendancePeriodsResponse:\n      title: List All Attenance Periods response\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/Response\"\n        - type: object\n          properties:\n            metadata:\n              type: object\n              required:\n                - total_elements\n                - current_page\n                - total_pages\n              properties:\n                total_elements:\n                  type: integer\n                  description: The total number of items matching the query filters.\n                total_pages:\n                  type: integer\n                  description: The total number of pages distributing sets of items matching the query filters.\n                current_page:\n                  type: integer\n                  description: Current page number containing the returned set of items matching with the query filters. The page number range is from 0 to total_pages - 1\n            offset:\n              type: integer\n            limit:\n              type: integer\n            data:\n              type: array\n              items:\n                type: object\n                required:\n                  - id\n                  - type\n                  - attributes\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                  type:\n                    example: AttendancePeriod\n                  attributes:\n                    $ref: \"#/components/schemas/Attendance\"\n\n    NewAttendancePeriodParametersRequest:\n      title: Create a New Attendance Period request\n      type: object\n      properties:\n        attendances[][employee]:\n          type: integer\n          description: Employee identifier\n        attendances[][date]:\n          type: string\n          format: date\n          description: \"Attendance date. Format: yyyy-mm-dd\"\n          example: '2020-01-31'\n        attendances[][start_time]:\n          type: string\n          pattern: ^\\d\\d:\\d\\d$\n          description: \"Start time. Format: hh:mm\"\n          example: '08:00'\n        attendances[][end_time]:\n          type: string\n          pattern: ^\\d\\d:\\d\\d$\n          description: \"End time. Format: hh:mm\"\n          example: '12:00'\n        attendances[]break:\n          type: integer\n          format: int32\n          description: Break in minutes\n        attendances[][comment]:\n          type: string\n          description: Optional comment\n        skip_approval:\n          type: boolean\n          description: \"Optional, default value is true. If set to false, the approval status of the attendance period will be \\\"pending\\\" if an approval rule is set for the attendances type. The respective approval flow will be triggered.\"\n        project_id:\n          type: integer\n          format: int32\n          description: The ID of the project\n          example: 5\n      required:\n        - attendances[][employee]\n        - attendances[][date]\n        - attendances[][start_time]\n        - attendances[][end_time]\n        - attendances[]break\n        - attendances[][comment]\n\n    NewAttendancePeriodResponse:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/Response\"\n        - type: object\n          properties:\n            data:\n              type: object\n              properties:\n                id:\n                  type: array\n                  items:\n                    type: integer\n                    example: 1\n                message:\n                  example: Success\n\n    TimeOffTypeResource:\n      title: Type of time-off resource\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - TimeOffType\n          description: Time-off type resource name\n        attributes:\n          type: object\n          properties:\n            id:\n              type: integer\n              description: identifier\n              example: 1\n            name:\n              type: string\n              example: Paid vacation\n            category:\n              type: string\n              nullable: true\n              example: offsite_work\n            unit:\n              type: string\n              enum:\n                - day\n                - hour\n              example: day\n            half_day_requests_enabled:\n              type: boolean\n              example: true\n            certification_required:\n              type: boolean\n              example: false\n            certification_submission_timeframe:\n              description: The timeframe in days under which the employee needs to submit the certification\n              type: integer\n              example: 2\n            substitute_option:\n              type: string\n              enum:\n                - disabled\n                - optional\n                - required\n              example: optional\n            approval_required:\n              type: boolean\n              example: true\n\n    CreateTimeOffPeriodRequest:\n      title: Create time-off periods\n      type: object\n      properties:\n        employee_id:\n          type: integer\n          description: Employee identifier\n        time_off_type_id:\n          type: integer\n          description: Time-off type identifier\n        start_date:\n          type: string\n          format: date\n          description: \"Absence start date. Format: yyyy-mm-dd\"\n          example: '2020-01-31'\n        end_date:\n          type: string\n          format: date\n          description: \"Absence end date. Format: yyyy-mm-dd\"\n          example: '2020-01-31'\n        half_day_start:\n          type: boolean\n          example: false\n          description: Weather the start date is a half-day off.\n        half_day_end:\n          type: boolean\n          example: false\n          description: Weather the end date is a half-day off.\n        comment:\n          type: string\n          example: Some Comment\n          description: Optional comment\n        skip_approval:\n          type: boolean\n          example: false\n          description: Optional, default value is true. If set to false, the approval status of the absence request will be \"pending\" if an approval rule is set for the absence type in Personio. The respective approval flow will be triggered.\n      required:\n        - employee_id\n        - time_off_type_id\n        - start_date\n        - end_date\n        - half_day_start\n        - half_day_end\n    AbsencePeriodsResponse:\n      title: List All Absence Periods response\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/Response\"\n        - type: object\n          properties:\n            metadata:\n              type: object\n              required:\n                - total_elements\n                - current_page\n                - total_pages\n              properties:\n                total_elements:\n                  type: integer\n                  description: The total number of items matching the query filters.\n                total_pages:\n                  type: integer\n                  description: The total number of pages distributing sets of items matching the query filters.\n                current_page:\n                  type: integer\n                  description: Current page number containing the returned set of items matching with the query filters. The page number range is from 0 to total_pages - 1\n            offset:\n              type: integer\n            limit:\n              type: integer\n            data:\n              type: array\n              items:\n                type: object\n                required:\n                  - type\n                  - attributes\n                properties:\n                  type:\n                    example: TimeOffPeriod\n                  attributes:\n                    $ref: \"#/components/schemas/Absence\"\n\n    AbsencePeriodResponse:\n      title: Absence Periods response\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/Response\"\n        - type: object\n          properties:\n            data:\n              type: object\n              required:\n                - type\n                - attributes\n              properties:\n                type:\n                  example: TimeOffPeriod\n                attributes:\n                  $ref: \"#/components/schemas/Absence\"\n\n    Absence:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        status:\n          type: string\n          example: approved\n        start_date:\n          type: string\n          example: 2017-12-27T00:00:00+0100\n        end_date:\n          type: string\n          example: 2017-12-79T00:00:00+0100\n        days_count:\n          type: number\n          example: 3\n        half_day_start:\n          type: boolean\n          example: false\n        half_day_end:\n          type: boolean\n          example: false\n        time_off_type:\n          type: object\n          properties:\n            type:\n              type: string\n              example: TimeOffType\n            attributes:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 1\n                name:\n                  type: string\n                  example: Vacation\n                category:\n                  type: string\n                  example: offsite_work\n        employee:\n          $ref: \"#/components/schemas/ShortEmployee\"\n        certificate:\n          type: object\n          properties:\n            status:\n              example: not-required\n              type: string\n        created_at:\n          type: string\n          example: 2017-01-17T10:32:18+0100\n        updated_at:\n          type: string\n          example: 2017-01-17T10:32:18+0100\n    ShortEmployee:\n      type: object\n      properties:\n        type:\n          type: string\n          example: Employee\n        attributes:\n          type: object\n          properties:\n            id:\n              type: object\n              properties:\n                label:\n                  example: 1\n                value:\n                  example: id\n                type:\n                  $ref: '#/components/schemas/TypeEnum'\n                universal_id:\n                  example: id\n            first_name:\n              type: object\n              properties:\n                label:\n                  example: First Name\n                value:\n                  example: Michael\n                type:\n                  $ref: '#/components/schemas/TypeEnum'\n                universal_id:\n                  example: first_name\n            last_name:\n              type: object\n              properties:\n                label:\n                  example: Last Name\n                value:\n                  example: Dou\n                type:\n                  $ref: '#/components/schemas/TypeEnum'\n                universal_id:\n                  example: last_name\n            email:\n              type: object\n              properties:\n                label:\n                  example: Email\n                value:\n                  example: michael.dou@personio.de\n                type:\n                  $ref: '#/components/schemas/TypeEnum'\n                universal_id:\n                  example: email\n\n    AuthenticationTokenResponse:\n      title: Request Authentication Token response\n      allOf:\n        - $ref: '#/components/schemas/Response'\n        - type: object\n          properties:\n            data:\n              type: object\n              required:\n                - token\n              properties:\n                token:\n                  type: string\n\n    TypeEnum:\n      type: string\n      example: standard\n      enum:\n        - standard\n        - date\n        - integer\n        - decimal\n        - list\n        - link\n        - tags\n        - multiline\n",
			"canonicalURL": "/github.com/personio/api-docs@25bf1569b25fbb10cc68fff1cf6340cd8e8f7845/-/blob/personio-personnel-data-api-oa3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/personio/api-docs/blob/25bf1569b25fbb10cc68fff1cf6340cd8e8f7845/personio-personnel-data-api-oa3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/company/time-offs\": get: responses: 200: contents: application/json: generate schema: allOf: merge properties: try to merge conflicting property schemas: schema type mismatch: array and object"
}