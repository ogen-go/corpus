{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Uier/examhub"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "server/src/config/swagger.yaml",
			"byteSize": 14944,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: ExamHub API\n  description: 師大資工考古題系統 API\n  version: 0.1.0\nservers:\n  - url: http://localhost:3000/api\ntags:\n- name: Announcement\n  description: 顯示於首頁的系統公告\n- name: Ranking\n  description: 顯示於首頁的貢獻排行榜\n- name: Course\n  description: 課程，分類考古題的資料夾\n- name: Exam\n  description: 考古題\n- name: Comment\n  description: 留言\n- name: Auth\n  description: 驗證使用者\n- name: User\n  description: 使用者資訊\npaths:\n  /announcements:\n    get:\n      tags:\n      - Announcement\n      summary: 拿取所有公告\n      description: 回傳一個陣列包含所有的公告及其資訊\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    annId:\n                      type: number\n                    userId:\n                      type: number\n                    title:\n                      type: string\n                    content:\n                      type: string\n                    pinned:\n                      type: boolean\n                    createTime:\n                      type: string\n                      format: date-time\n                    lastUpdateTime:\n                      type: string\n                      format: date-time\n    post:\n      tags:\n      - Announcement\n      summary: 建立一篇公告\n      description: Require role \u003c= 1\n      requestBody:\n        description: 欲建立的公告的內容\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnnouncementCreate'\n      responses:\n        200:\n          description: 成功，回傳新增的公告之 annId\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  annId:\n                    type: number\n        403:\n          description: 失敗，權限不足\n  /announcements/{annId}:\n    get:\n      tags:\n      - Announcement\n      summary: 拿取特定的公告\n      description: 回傳一個物件包含此公告的資訊\n      parameters:\n        - in: path\n          name: annId\n          required: true\n          schema:\n            type: number\n          description: 該公告的 annId\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Announcement'\n    patch:\n      tags:\n      - Announcement\n      summary: 修改特定的公告\n      description: Require role \u003c= 1\n      parameters:\n        - in: path\n          name: annId\n          required: true\n          schema:\n            type: number\n          description: 欲修改的公告的 addId\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnnouncementCreate'\n      responses:\n        200:\n          description: 成功\n    delete:\n      tags:\n      - Announcement\n      summary: 刪除特定的公告\n      description: Require role \u003c= 1\n      parameters:\n        - in: path\n          name: annId\n          required: true\n          schema:\n            type: number\n          description: 欲刪除的公告的 addId\n      responses:\n        200:\n          description: 成功\n        403:\n          description: 失敗，權限不符\n  /ranking:\n    get:\n      tags:\n      - Ranking\n      summary: 拿取排行榜\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                    contribution:\n                      type: number\n  /courses:\n    get:\n      tags:\n      - Course\n      summary: 拿取所有課程\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                allOf:\n                - type: object\n                  properties:\n                    courseId:\n                      type: number\n                - $ref: '#/components/schemas/Course'\n    post:\n      tags:\n      - Course\n      summary: 創建一個課程\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Course'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  courseId:\n                    type: number\n  /courses/{courseId}:\n    get:\n      tags:\n      - Course\n      summary: 拿取一個課程\n      parameters:\n      - in: path\n        name: courseId\n        required: true\n        schema:\n          type: number\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Course'\n    patch:\n      tags:\n      - Course\n      summary: 修改一個課程\n      parameters:\n      - in: path\n        name: courseId\n        required: true\n        schema:\n          type: number\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Course'\n      responses:\n        200:\n          description: 成功\n    delete:\n      tags:\n      - Course\n      summary: 刪除一個課程\n      parameters:\n      - in: path\n        name: courseId\n        required: true\n        schema:\n          type: number\n      responses:\n        200:\n          description: 成功\n  /exam:\n    get:\n      tags:\n      - Exam\n      summary: 拿取所有考古題\n      parameters:\n      - in: query\n        name: courseId\n        schema:\n          type: number\n        description: 拿取特定的課程的考古題\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                allOf:\n                - type: object\n                  properties:\n                    docId:\n                      type: number\n                - $ref: '#/components/schemas/Exam'\n    post:\n      tags:\n      - Exam\n      summary: 新增考古題\n      requestBody:\n        description: 欲建立的考古題\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExamCreate'\n      responses:\n        200:\n          description: 成功\n  /exam/{docId}:\n    get:\n      tags:\n      - Exam\n      summary: 拿取特定的考古題\n      parameters:\n        - in: path\n          name: docId\n          required: true\n          schema:\n            type: number\n          description: 欲拿取的考古題 docId\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exam'\n    delete:\n      tags:\n      - Exam\n      summary: 刪除特定的考古題\n      description: Require role \u003c= 1 or useId = doc.userId\n      parameters:\n        - in: path\n          name: docId\n          required: true\n          schema:\n            type: number\n          description: 欲刪除的考古題 docId\n      responses:\n        200:\n          description: 成功\n        403:\n          description: 失敗，權限不符\n    patch:\n      tags:\n      - Exam\n      summary: 修改特定的考古題\n      parameters:\n        - in: path\n          name: docId\n          required: true\n          schema:\n            type: number\n          description: 欲修改的考古題 docId\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExamCreate'\n      responses:\n        200:\n          description: 成功\n  /exam/{docId}/vote:\n    post:\n      tags:\n      - Exam\n      summary: 評分特定的考古題，若已評過分則會覆蓋\n      parameters:\n        - in: path\n          name: docId\n          required: true\n          schema:\n            type: number\n          description: 欲評分的考古題的 docId\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                score:\n                  type: number\n      responses:\n        200:\n          description: 成功\n  /comments:\n    get:\n      tags:\n      - Comment\n      summary: 拿取考古題下或某留言下的留言\n      parameters:\n      - in: query\n        name: areaId\n        schema:\n          type: number\n        description: 拿取特定 areaId 底下的留言 (replyId 為 areaId 的留言)\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'  \n    post:\n      tags:\n      - Comment\n      summary: 創建一個留言\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                replyId:\n                  type: number\n                content:\n                  type: string\n      responses:\n        200:\n          description: 成功\n  /comments/{comId}:\n    patch:\n      tags:\n      - Comment\n      summary: 修改一則留言\n      parameters:\n      - in: path\n        required: true\n        name: comId\n        schema:\n          type: number\n        description: 欲修改的留言的 comId\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                content:\n                  type: string\n      responses:\n        200:\n          description: 成功\n    delete:\n      tags:\n      - Comment\n      summary: 刪除一則留言\n      parameters:\n      - in: path\n        required: true\n        name: comId\n        schema:\n          type: number\n        description: 欲刪除的留言的 comId\n      responses:\n        200:\n          description: 成功\n  /users:\n    get:\n      tags:\n      - User\n      summary: 拿取所有使用者資訊\n      description: Require role \u003c= 0\n      responses:\n        '200':\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserDetail'\n  /users/me:\n    get:\n      tags:\n      - User\n      summary: 自己的資訊\n      description: 回傳一個物件包含請求者的使用者資訊\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n  /users/{userId}:\n    get:\n      tags:\n      - User\n      summary: 拿取使用者的資訊\n      description: Require role \u003c= 0\n      parameters:\n      - $ref: '#/components/parameters/userIdParam'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDetail'\n    patch:\n      tags:\n      - User\n      summary: 修改使用者的資訊\n      description: Require role \u003c= 0\n      parameters:\n      - $ref: '#/components/parameters/userIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                role:\n                  type: number\n      responses:\n        200:\n          description: 成功\n  /auth/google:\n    get:\n      tags:\n      - Auth\n      summary: 透過 Google OAuth 2.0 登入\n      description: 開啟此頁面後將重新導向 Google 登入\n      responses:\n        302:\n          description: 登入成功將重新導向回首頁 ('/')，失敗則重新導向回登入畫面 ('/login?err=true')\n  /auth/logout:\n    get:\n      tags:\n      - Auth\n      summary: 登出\n      description: 將使用者登出、清除 session\n      responses:\n        200:\n          description: 成功\n        500:\n          description: 失敗，伺服器發生未知錯誤\ncomponents:\n  schemas:\n    AnnouncementCreate:\n      properties:\n        title:\n          type: string\n        content:\n          type: string\n        pinned:\n          type: boolean\n    Announcement:\n      allOf:\n        - $ref: '#/components/schemas/AnnouncementCreate'\n        - type: object\n          properties:\n            userId:\n              type: number\n            createTime:\n              type: string\n              format: date-time\n            lastUpdateTime:\n              type: string\n              format: date-time\n    ExamCreate:\n      properties:\n        courseId:\n          type: number\n        year:\n          type: number\n        semester:\n          type: number\n        title:\n          type: string\n        description:\n          type: string\n    Exam:\n      allOf:\n        - $ref: '#/components/schemas/ExamCreate'\n        - type: object\n          properties:\n            userId:\n              type: number\n            createTime:\n              type: string\n              format: date-time\n            lastUpdateTime:\n              type: string\n              format: date-time\n            upvote:\n              type: integer\n            downvote:\n              type: integer\n            folderPath:\n              type: string\n    Comment:\n      properties:\n        comId:\n          type: number\n        docId:\n          type: number\n        replyId:\n          type: number\n        userID:\n          type: number\n        content:\n          type: string\n        createTime:\n          type: string\n          format: date-time\n        lastUpdateTime:\n          type: string\n          format: date-time\n    UserDetail:\n      properties:\n        userId:\n          type: number\n        name:\n          type: string\n        role:\n          type: number\n        contribution:\n          type: number\n        email:\n          type: string\n        createTime:\n          type: string\n          format: date-time\n    User:\n      properties:\n        userId:\n          type: number\n        name:\n          type: string\n        role:\n          type: number\n    Course:\n      properties:\n        courseName:\n          type: string\n        deptName:\n          type: string\n        category:\n          type: string\n        description:\n          type: string\n  parameters:\n    userIdParam:\n      in: path\n      name: userId\n      required: true\n      schema:\n        type: number",
			"canonicalURL": "/github.com/Uier/examhub@1683821215b5faca4e2e3bae449d23b1e6f1bcbd/-/blob/server/src/config/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/uier/examhub/blob/1683821215b5faca4e2e3bae449d23b1e6f1bcbd/server/src/config/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/exam\": get: responses: 200: contents: application/json: generate schema: allOf: schema type mismatch: object and "
}