{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gematik/api-vzd"
		},
		"file": {
			"name": "I_VZD_TIM_Provider_Services.yaml",
			"size": 0,
			"path": "src/openapi/I_VZD_TIM_Provider_Services.yaml",
			"byteSize": 14337,
			"content": "openapi: 3.0.1\ninfo:\n  title: I_VZD_TIM_Provider_Services\n  description: REST interface to retrieve the TI-Messenger federation list and the PASSporT signing certificate.\n  version: 1.1.2\n  # version 1.1.2\n  #  - error handling improved:\n  #    o Schema Error: Optional error message added\n  #    o added error code 400 for getFederationList, updateTiMessengerDomain\n  #  - corrected schema schemaPASSporTCertificates\n  #\n  # version 1.1.1\n    # - corrected isEnsurance -\u003eisInsurance\n  # version 1.1.0\n    # - removed operation getPASSporTCertificates.\n    # - new REST crud operations for TI-Messenger domains\n  # version 1.0.2\n    # - Operation getPASSporTCertificates returns now an array of certificates in pem format\n  # version 1.0.1\n    # - added hashAlgorithm to schemaFederationList\n  # initiale Version\n\nexternalDocs:\n  description: I_VZD_TIMessenger_services REST interface\n  url: https://www.gematik.de\nservers:\n- url: https://vzd-fhir-directory.vzd.ti-dienste.de/tim-provider-services\ntags:\n- name: getInfo\n  description: This operation returns meta data about this interface\n- name: getFederationList\n  description: Returns the TI-Messenger federation list. If a version parameter is given then the federation list will be returned only if there is a newer version available.\n- name: getPASSporTCertificates\n  description: Returns the list of certificates which are used for signing Personal Assertion Tokens (PASSporT)\n\npaths:\n  /:\n    get:\n      tags:\n      - getInfo\n      summary: This operation returns the meta data of this interface\n      description: Returns the meta data of this interface.\n      operationId: getInfo\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/InfoObject'\n        401:\n          description: Unauthorized\n                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\n  /FederationList:\n    get:\n      tags:\n      - getFederationList\n      summary: This operation is used to get the TI-Messenger federation list.\n      description: Returns the TI-Messenger federation list. If a version parameter is given then the federation list will be only returned if there is a newer version available.\n      operationId: getFederationList\n      parameters:\n      - name: version\n        in: query\n        description: Version of the known federation list\n        schema:\n          type: integer\n\n      responses:\n        200:\n          description: OK\n                    #  The federation list.\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/schemaFederationList'\n        204:\n          description: No Content\n                    # if the version of the list is less than or equal to the version parameter of the request\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Unauthorized\n                    #  The WWW-Authenticate header in the response is OAuth.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /PASSporTCertificates:\n    get:\n      tags:\n      - getPASSporTCertificates\n      summary: Returns the list of certificates that signs Personal Assertion Tokens (PASSporT)\n      description: Returns the certificate that signs Personal Assertion Tokens (PASSporT)\n      operationId: getPASSporTCertificates\n\n      responses:\n        200:\n          description: OK\n                    #  The list of X.509 certificates in pem format.\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/schemaPASSporTCertificates'\n\n        401:\n          description: Unauthorized\n                    #  The WWW-Authenticate header in the response is OAuth.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /federation/{domain}:\n\n    put:\n      tags:\n      - updateTiMessengerDomain\n      summary: Update a domain in the TI-Messenger federation\n      description: A update to a domain in the TI-Messenger federation.\n      operationId: updateTiMessengerDomain\n      parameters:\n        - name: domain\n          in: path\n          description: |\n            Domain\n            Has to be equal to the domain in the requestBody\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Domain'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/Domain'\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Unauthorized\n                    #  The WWW-Authenticate header in the response is OAuth.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n    delete:\n      tags:\n      - deleteTiMessengerDomain\n      summary: Deletes a domain in the TI-Messenger federation\n      description: Deletes a domain in the TI-Messenger federation.\n      operationId: deleteTiMessengerDomain\n      parameters:\n        - name: domain\n          in: path\n          description: Domain\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: No content\n        401:\n          description: Unauthorized\n                    #  The WWW-Authenticate header in the response is OAuth.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /federationCheck:\n    get:\n      tags:\n      - checkTiMessengerDomains\n      summary: This operation verifies that all managed domains belong to active Organization ressources in the FHIR-Directory.\n      description: |\n        This operation verifies that all managed domains belong to active Organization ressources in the FHIR-Directory.\n        Returns a list of all domains which belong to inactive Organizations.\n      operationId: checkTiMessengerDomains\n      responses:\n        200:\n          description: |\n           OK\n           Returns the list of all domains which belong to inactive Organizations\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                 inactiveOrganizationDomains:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Domain'\n        204:\n          description: |\n            No content\n            All domains of the client are OK\n        401:\n          description: Unauthorized\n                    #  The WWW-Authenticate header in the response is OAuth.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\ncomponents:\n\n  schemas:\n\n    schemaFederationList:\n      type: object\n      readOnly: true\n      properties:\n        version:\n          description: The version of the federation list\n          type: integer\n          readOnly: true\n        hashAlgorithm:\n          description: The hash algorithm that was used to create the hashes. Currently only SHA-256 is supported.\n          type: string\n          readOnly: true\n        domainList:\n          description: The list of hashed TI-Messenger domain names\n          type: array\n          items:\n            $ref: '#/components/schemas/DomainList'\n\n    DomainList:\n        description: The list of hashed TI-Messenger domain names\n        type: object\n        properties:\n           domain:\n             type: string \n             description: |\n               hashed TI-Messenger domain name\n           isInsurance:\n             description: |\n               Indicates if it is a domain of an health insurance for insured persons\n             type: boolean\n             example: false\n\n\n    schemaPASSporTCertificates:\n      type: object\n      properties:\n        domain:\n          description: The TI-Messenger domain\n          type: string\n        telematikID:\n          description: The telematikID of the organization that uses the TI-Messenger domain\n          type: string\n        isInsurance:\n          description: |\n              Indicates if it is a domain of an health insurance for insured persons\n          type: boolean\n          example: false\n\n    Domain:\n      type: object\n      properties:\n        domain:\n          description: The TI-Messenger domain\n          type: string\n        telematikID:\n          description: The telematikID of the organization that uses the TI-Messenger domain\n          type: string\n\n    Error:\n      type: object\n      properties:\n        message: \n          type: string\n          description: (optionale) Fehlernachricht\n        errors:\n          maxItems: 50\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/InnerError'\n\n    InnerError:\n      type: object\n      properties:\n        attributeName:\n          description: Name des Attributs, in dem ein Fehler erkannt wurde\n          type: string\n        attributeError:\n          description: Beschreibung des erkannten Fehlers\n          type: string\n\n    InfoObject:\n      required:\n      - title\n      - version\n      readOnly: true\n      type: object\n      properties:\n        title:\n          type: string\n          description: Der Titel der Anwendung\n          example: \"FederationList\"\n        description:\n          type: string\n          description: Eine kurze Beschreibung der Anwendung\n          example: \"REST Schnittstelle zur Abfrage der Föderationsliste.\"\n        termsOfService:\n          type: string\n          format: uri\n          description: Eine URL zu den Terms of Service für dieses API.\n          example: \"http://example.com/terms/\"\n        contact:\n          $ref: '#/components/schemas/Contact'\n        license:\n          $ref: '#/components/schemas/License'\n        version:\n          type: string\n          description: Die Version von dem OpenAPI Document (YAML Datei)\n          example: \"1.1.0\"\n\n    Contact:\n      readOnly: true\n      description: Die Kontaktinformationen für diese Schnittstelle.\n      type: object\n      properties:\n        name:\n          type: string\n          description: Der Name von der Kontaktperson / -Organisation\n          example: \"Firma 123\"\n        url:\n          type: string\n          format: uri\n          description: Eine URL zu den Kontaktinformationen für dieses API.\n                       In dem Dokument unter dieser URL muss ein Link zum Download der aktuell genutzten YAML Datei dieser Schnittstelle hinterlegt sein.\n          example: \"http://www.example.com/support\"\n        email:\n          type: string\n          format: email\n          description: Der E-Mail Adresse der Kontaktperson / -Organisation.\n          example: \"support@example.com\"\n\n    License:\n      required:\n      - name\n      readOnly: true\n      description: Der Lizenzinformationen für diese Schnittstelle.\n      type: object\n      properties:\n        name:\n          type: string\n          description: Der Lizenzname\n          example: \"Apache 2.0\"\n        url:\n          type: string\n          description: Eine URL zu den Lizenzinformationen für dieses API.\n          example: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: https://to.be.defined/oauth/token\n          refreshUrl: https://to.be.defined/oauth/refreshToken\n          scopes:\n            VZD-FHIR-Directory:FederatioList: Client Scope\n              Only TI-Messenger Registrierungsdienste are allowed to use this interface.\n              The AccessToken contains in the \"sub\" claim the client identifier. The client identifier is written to to log file for each access.\n\nsecurity:\n  - OAuth2:\n      - FederationList\n"
		}
	},
	"Error": "buildIR: make ir: path \"/PASSporTCertificates\": get: security: security \"OAuth2\" (index 0): flow \"clientCredentials\": unknown scope \"FederationList\""
}