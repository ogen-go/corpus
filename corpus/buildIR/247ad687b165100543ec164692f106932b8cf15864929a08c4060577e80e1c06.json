{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "gitlab.com/operator-ict/golemio/code/modules/parkings"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/openapi.yaml",
			"byteSize": 16550,
			"content": "openapi: 3.0.3\ninfo:\n    title: üÖøÔ∏è Parking\n    description: \u003e-\n        \u003cp\u003eüí° Parkings, parking zones, tarifs, measurements.\u003c/p\u003e\n    version: 1.0.0\n    contact:\n        name: Golemio Prague Data Plaform\n        email: golemio@operatorict.cz\n        url: https://golemio.cz\nservers:\n    - url: https://rabin.golemio.cz/v2\n      description: Test (development) server\n    - url: https://api.golemio.cz/v2\n      description: Main (production) server\ntags:\n    - name: üÖøÔ∏è Parking\n      description: \u003e-\n        \u003cp\u003eüí° Parkings, parking zones, tarifs, measurements.\u003c/p\u003e\npaths:\n  /parking/:\n    get:\n      tags:\n        - üÖøÔ∏è Parking\n      summary: GET All Parking Spaces\n      parameters:\n      - name: latlng\n        in: query\n        description: Sorting by location (Latitude and Longitude separated by comma,\n          latitude first).\n        schema:\n          type: string\n          example: 50.124935,14.457204\n      - name: range\n        in: query\n        description: Filter by distance from latlng in meters (range query). Depends\n          on the latlng parameter.\n        schema:\n          type: number\n          example: 5000\n      - name: source\n        in: query\n        description: Filter by data provider.\n        schema:\n          type: string\n          example: korid\n      - name: sourceId\n        in: query\n        description: Filter by parking group id. Unique per data provider.\n        schema:\n          type: string\n          example: 1\n      - name: category\n        in: query\n        description: Filter by parking type. Use with square brackets `category[]`\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: object\n          example: park_and_ride\n      - name: limit\n        in: query\n        description: Limits number of retrieved items.\n        schema:\n          type: number\n          example: 10\n      - name: offset\n        in: query\n        description: Number of the first items that are skipped.\n        schema:\n          type: number\n          example: 0\n\n      responses:\n        200:\n          description: OK\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  features:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ParkingSpaceFeature'\n                  type:\n                    type: string\n                    example: FeatureCollection\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n        404:\n          description: Not found\n  /parking/{id}:\n    get:\n      tags:\n        - üÖøÔ∏è Parking\n      summary: GET Parking Space\n      parameters:\n      - name: id\n        in: path\n        description: Id of parking location.\n        required: true\n        schema:\n          type: string\n          example: 6\n      responses:\n        200:\n          description: OK\n          content:\n            application/json; charset=utf-8:\n              schema:\n                  $ref: '#/components/schemas/ParkingSpaceFeature'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n        404:\n          description: Not found\n  /parking/measurements:\n    get:\n      tags:\n        - üÖøÔ∏è Parking\n      summary: GET All Parking Spaces Measurements\n      parameters:\n      - name: source\n        in: query\n        description: Filter by data provider.\n        schema:\n          type: string\n          example: korid\n      - name: sourceId\n        in: query\n        description: Filter by parking group id. Unique per data provider.\n        schema:\n          type: string\n          example: 1\n      - name: from\n        in: query\n        description: Date in ISO8601, limits data measured from this datetime.\n        schema:\n          type: string\n          example: \"2021-02-26T12:01:00.000Z\"\n      - name: to\n        in: query\n        description: Date in ISO8601, limits data measured up until this datetime.\n        schema:\n          type: string\n          example: \"2021-02-26T12:03:00.000Z\"\n      - name: page\n        in: query\n        description: Number of result page.\n        schema:\n          type: number\n          example: 1\n      - name: pageSize\n        in: query\n        description: Result page size.\n        schema:\n          type: number\n          example: 10000\n      responses:\n        200:\n          description: OK\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ParkingMeasurement'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n        404:\n          description: Not found\n                \n        400:\n          description: Bad request\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  error_message:\n                    type: string\n                    example: Bad request\n                  error_status:\n                    type: number\n                    example: 400\n                  error_info:\n                    type: string\n                    example: '{\"pageSize\":{\"location\":\"query\",\"param\":\"pageSize\",\"value\":\"-2\",\"msg\":\"pageSize should be a positive int and should not exceed 10,000\"}}'\n\n  /parking/tariffs/:\n    get:\n      tags:\n        - üÖøÔ∏è Parking\n      summary: GET All Parking Spaces Tariffs\n      parameters:\n      - name: x-access-token\n        in: header\n        description: e.g. YOUR_ACCESS_TOKEN\n        schema:\n          type: string\n          example: YOUR_ACCESS_TOKEN\n      - name: source\n        in: query\n        description: Filter by data provider.\n        schema:\n          type: string\n          example: korid\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json; charset=utf-8:\n              schema:\n                type: array\n                items:\n                  type: object\n              example:\n              - tariff_id: b184865e-5a5e-5465-abc1-4fab6bc56a77\n                source: korid\n                last_updated: \"2020-10-12T15:19:21+02:00\"\n                payment_mode: '\"\"'\n                payment_additional_description: Parkov√°n√≠ Liberec\n                free_of_charge: false\n                url_link_address: https://parking.liberec.cz/\n                charge_band_name: A\n                accepts_payment_card: true\n                accepts_cash: false\n                accepts_mobile_payment: false\n                charge_currency: CZK\n                allowed_vehicle_type: carSharing, taxi\n                allowed_fuel_type: electricity, petrol, lpg\n                charge:\n                - charge: 20\n                  charge_order_index: 0\n                  charge_type: minimum\n                  charge_interval: 1800\n                  max_iterations_of_charge: 1\n                  min_iterations_of_charge: 1\n                  start_time_of_period: Mon-Fri 09:00\n                  end_time_of_period: Mon-Sun 14:30\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n        404:\n          description: Not found\n  /parking/tariffs/{tariffId}:\n    get:\n      tags:\n        - üÖøÔ∏è Parking\n      summary: GET Parking Space Tariff\n      parameters:\n      - name: tariffId\n        in: path\n        description: Id of parking tariff.\n        required: true\n        schema:\n          type: string\n          example: b184865e-5a5e-5465-abc1-4fab6bc56a77\n      responses:\n        200:\n          description: OK\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ParkingSpaceTariff'\n        401:\n          $ref: \"#/components/responses/UnauthorizedError\"\n        404:\n          description: Not found\ncomponents:\n  responses:\n    UnauthorizedError:\n      description: API key is missing or invalid\n      headers:\n        x-access-token:\n          schema:\n            type: string\n  schemas:\n    ParkingSpaceFeature:\n      type: object\n      properties:\n        geometry:\n          type: object\n          description: GeoJSon geometry\n          properties:\n          \n            coordinates:\n              oneOf:\n                - type: array          \n                  items:\n                    type: number\n                  example: [14.441252, 50.109318]\n                - type: array          \n                  items:\n                    type: array\n                    items:\n                      type: number\n                    example: [14.441252, 50.109318]\n            type:\n              type: string\n              enum:\n                - Point\n                - Polygon\n        properties:\n          type: object\n          properties:\n            id:\n              type: string\n              example: 1768\n            source:\n              type: string\n              example: TSK\n            source_id:\n              type: string\n              example: 534002\n            data_provider:\n              type: string\n              nullable: true\n              example: www.tsk-praha.cz\n            name:\n              type: string\n              example: Hole≈°ovice\n            category:\n              type: string\n              nullable: true\n              example: park_and_ride\n            date_modified:\n              type: string\n              example: '2020-05-18T07:38:37.000Z'\n            address_formatted:\n              type: string\n              nullable: true\n              example: 'Vrbensk√©ho, 17000 Praha Hole≈°ovice, ƒåesko'\n            address:\n              type: object\n              nullable: true\n              properties:\n                address_country:\n                  type: string\n                  example: ƒåesko\n                address_formatted:\n                  type: string\n                  example: Vrbensk√©ho, 17000 Praha Hole≈°ovice, ƒåesko\n                address_locality:\n                  type: string\n                  example: Praha \n                address_region:\n                  type: string\n                  example: Hole≈°ovice\n                postal_code:\n                  type: string\n                  example: 17000\n                street_address:\n                  type: string\n                  example: Vrbensk√©ho\n            area_served:\n              type: string\n              nullable: true\n            web_app_payment_url:\n              type: string\n              nullable: true\n              example: 'https://ke-utc.appspot.com/static/select_offstreet.html?shortname=139'\n            android_app_payment_url:\n              type: string\n              nullable: true\n            ios_app_payment_url:\n              type: string\n              nullable: true\n            total_spot_number:\n              type: number\n              example: 74\n            tariff_id:\n              type: string\n              nullable: true\n              example: 20\n            valid_from:\n              type: string\n              nullable: true\n              example: '2020-05-31T00:00:00.000Z'\n            valid_to:\n              type: string\n              nullable: true\n              example: '2022-05-31T00:00:00.000Z' \n            parking_type:\n              type: string\n              enum:\n                - park_and_ride\n                - park_paid_private\n                - on_street\n                - other\n                - park_sharing\n                - disabled_parking\n            zone_type:\n              type: string\n              nullable: true\n              enum:\n                - zone_residential\n                - zone_mixed\n                - zone_visitors\n                - zone_other\n                - zone_free\n            centroid:\n              type: object\n              properties:\n                type:\n                  type: string\n                  example: Point\n                coordinates:\n                  type: array\n                  items:\n                    type: number\n                    example: [14.441252, 50.109318]\n            available_spots_last_updated:\n              type: number\n              example: 1650642003000\n            available_spots_number:\n              type: number\n              example: 17\n          required:\n            - id\n            - source\n            - source_id\n            - name\n            - date_modified\n            - parking_type\n            - centroid\n            - available_spots_last_updated\n            - available_spots_number\n        type:\n          type: string\n          example: Feature\n    ParkingMeasurement:\n      title: Parking Measurement\n      type: object\n      properties:\n        source:\n          type: string\n          example: korid\n        source_id:\n          type: string\n          example: 1\n        available_spot_number:\n          type: number\n          example: 2\n        closed_spot_number:\n          type: number\n          example: 0\n        occupied_spot_number:\n          type: number\n          example: 12\n        total_spot_number:\n          type: number\n          example: 14\n        date_modified:\n          type: string\n          example: \"2021-02-28T23:19:47.384Z\"\n      required:\n      - source\n      - source_id      \n      - available_spot_number\n      - closed_spot_number\n      - occupied_spot_number\n      - total_spot_number\n      - date_modified\n    ParkingSpaceTariff:\n      title: Parking Space Tariff\n      required:\n      - tariff_id\n      - source\n      - last_updated\n      - payment_mode\n      - free_of_charge\n      - charge_band_name\n      - charge_currency\n      type: object\n      properties:\n        tariff_id:\n          type: string\n          example: b184865e-5a5e-5465-abc1-4fab6bc56a77\n        source:\n          type: string\n          example: korid\n        last_updated:\n          type: string\n          example: \"2020-10-12T15:19:21+02:00\"\n        payment_mode:\n          type: string\n          example: \"\\\"\\\"\"\n        payment_additional_description:\n          type: string\n          nullable: true\n          example: Parkov√°n√≠ Liberec\n        free_of_charge:\n          type: boolean\n          example: false\n        url_link_address:\n          type: string\n          nullable: true\n          example: https://parking.liberec.cz/\n        charge_band_name:\n          type: string\n          example: E\n        payment_methods:\n          type: array\n          items:\n            type: string\n            enum:\n              - card_online\n              - card_offline\n              - cash\n              - coins_only\n              - mobile_app\n              - litacka\n              - sms_payment\n              - apple_pay\n              - google_pay\n              - unknown\n            \n        charge_currency:\n          type: string\n          example: CZK\n        allowed_vehicle_type:\n          type: string\n          nullable: true\n          example: carSharing, taxi\n        allowed_fuel_type:\n          type: string\n          nullable: true\n          example: electricity, petrol, lpg\n        charges:\n          type: array\n          items:\n            $ref: '#/components/schemas/ParkingSpaceTariffCharge'\n        reservation_url:\n          type: string\n          nullable: true\n    ParkingSpaceTariffCharge:\n      title: Parking Space Tariff Charge\n      required:\n      - charge\n      - charge_order_index\n      type: object\n      properties:\n        charge:\n          type: number\n          example: 20\n        charge_type:\n          type: string\n          nullable: true\n          enum:\n            - minimum\n            - maximum\n            - additional_interval_price\n            - season_ticket\n            - temporary_price\n            - first_interval_price\n            - free_parking\n            - flat\n            - unknown\n            - other\n        charge_order_index:\n          type: number\n          example: 0\n        charge_interval:\n          type: number\n          nullable: true\n          example: 1800\n        max_iterations_of_charge:\n          type: number\n          nullable: true\n          example: 1\n        min_iterations_of_charge:\n          type: number\n          nullable: true\n          example: 1\n        start_time_of_period:\n          type: string\n          nullable: true\n          example: Mon-Fri 09:00\n        end_time_of_period:\n          type: string\n          nullable: true\n          example: Mon-Sun 14:30\n          "
		}
	},
	"Error": "buildIR: make ir: path \"/parking/\": get: parameters: nested objects not allowed"
}