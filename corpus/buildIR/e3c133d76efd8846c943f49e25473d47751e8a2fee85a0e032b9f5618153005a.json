{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/amplifybackend/2020-08-11/openapi.yaml",
			"byteSize": 144839,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2020-08-11'\n  x-release: v4\n  title: AmplifyBackend\n  description: AWS Amplify Admin API\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: amplifybackend\n  x-aws-signingName: amplifybackend\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amplifybackend-2020-08-11.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/amplifybackend/'\nservers:\n  - url: 'http://amplifybackend.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AmplifyBackend multi-region endpoint\n  - url: 'https://amplifybackend.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AmplifyBackend multi-region endpoint\n  - url: 'http://amplifybackend.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AmplifyBackend endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://amplifybackend.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AmplifyBackend endpoint for China (Beijing) and China (Ningxia)\npaths:\n  '/backend/{appId}/environments/{backendEnvironmentName}/clone':\n    post:\n      operationId: CloneBackend\n      description: This operation clones an existing backend.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloneBackendResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - targetEnvironmentName\n              properties:\n                targetEnvironmentName:\n                  description: The name of the destination backend environment to be created.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /backend:\n    post:\n      operationId: CreateBackend\n      description: This operation creates a backend for an Amplify app. Backends are automatically created at the time of app creation.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBackendResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - appId\n                - appName\n                - backendEnvironmentName\n              properties:\n                appId:\n                  description: The app ID.\n                  type: string\n                appName:\n                  description: The name of the app.\n                  type: string\n                backendEnvironmentName:\n                  description: The name of the backend environment.\n                  type: string\n                resourceConfig:\n                  description: Defines the resource configuration for the data model in your Amplify project.\n                  type: object\n                  properties: {}\n                resourceName:\n                  description: The name of the resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/api':\n    post:\n      operationId: CreateBackendAPI\n      description: Creates a new backend API resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBackendAPIResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - backendEnvironmentName\n                - resourceConfig\n                - resourceName\n              properties:\n                backendEnvironmentName:\n                  description: The name of the backend environment.\n                  type: string\n                resourceConfig:\n                  description: 'The resource config for the data model, configured as a part of the Amplify project.'\n                  type: object\n                  properties:\n                    AdditionalAuthTypes:\n                      allOf:\n                        - $ref: '#/components/schemas/ListOfBackendAPIAuthType'\n                        - xml:\n                            name: additionalAuthTypes\n                          description: Additional authentication methods used to interact with your data models.\n                    ApiName:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: apiName\n                          description: 'The API name used to interact with the data model, configured as a part of your Amplify project.'\n                    ConflictResolution:\n                      allOf:\n                        - $ref: '#/components/schemas/BackendAPIConflictResolution'\n                        - xml:\n                            name: conflictResolution\n                          description: The conflict resolution strategy for your data stored in the data models.\n                    DefaultAuthType:\n                      allOf:\n                        - $ref: '#/components/schemas/BackendAPIAuthType'\n                        - xml:\n                            name: defaultAuthType\n                          description: The default authentication type for interacting with the configured data models in your Amplify project.\n                    Service:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: service\n                          description: The service used to provision and interact with the data model.\n                    TransformSchema:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: transformSchema\n                          description: The definition of the data model in the annotated transform of the GraphQL schema.\n                resourceName:\n                  description: The name of this resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/auth':\n    post:\n      operationId: CreateBackendAuth\n      description: Creates a new backend authentication resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBackendAuthResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - backendEnvironmentName\n                - resourceConfig\n                - resourceName\n              properties:\n                backendEnvironmentName:\n                  description: The name of the backend environment.\n                  type: string\n                resourceConfig:\n                  description: Defines the resource configuration when creating an auth resource in your Amplify project.\n                  type: object\n                  properties:\n                    AuthResources:\n                      allOf:\n                        - $ref: '#/components/schemas/AuthResources'\n                        - xml:\n                            name: authResources\n                          description: Defines whether you want to configure only authentication or both authentication and authorization settings.\n                    IdentityPoolConfigs:\n                      allOf:\n                        - $ref: '#/components/schemas/CreateBackendAuthIdentityPoolConfig'\n                        - xml:\n                            name: identityPoolConfigs\n                          description: 'Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.'\n                    Service:\n                      allOf:\n                        - $ref: '#/components/schemas/Service'\n                        - xml:\n                            name: service\n                          description: Defines the service name to use when configuring an authentication resource in your Amplify project.\n                    UserPoolConfigs:\n                      allOf:\n                        - $ref: '#/components/schemas/CreateBackendAuthUserPoolConfig'\n                        - xml:\n                            name: userPoolConfigs\n                          description: 'Describes authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.'\n                resourceName:\n                  description: The name of this resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/config':\n    post:\n      operationId: CreateBackendConfig\n      description: Creates a config object for a backend.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBackendConfigResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                backendManagerAppId:\n                  description: The app ID for the backend manager.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/challenge':\n    post:\n      operationId: CreateToken\n      description: Generates a one-time challenge code to authenticate a user into your Amplify Admin UI.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTokenResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/environments/{backendEnvironmentName}/remove':\n    post:\n      operationId: DeleteBackend\n      description: Removes an existing environment from your Amplify project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBackendResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/api/{backendEnvironmentName}/remove':\n    post:\n      operationId: DeleteBackendAPI\n      description: Deletes an existing backend API resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBackendAPIResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceName\n              properties:\n                resourceConfig:\n                  description: 'The resource config for the data model, configured as a part of the Amplify project.'\n                  type: object\n                  properties:\n                    AdditionalAuthTypes:\n                      allOf:\n                        - $ref: '#/components/schemas/ListOfBackendAPIAuthType'\n                        - xml:\n                            name: additionalAuthTypes\n                          description: Additional authentication methods used to interact with your data models.\n                    ApiName:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: apiName\n                          description: 'The API name used to interact with the data model, configured as a part of your Amplify project.'\n                    ConflictResolution:\n                      allOf:\n                        - $ref: '#/components/schemas/BackendAPIConflictResolution'\n                        - xml:\n                            name: conflictResolution\n                          description: The conflict resolution strategy for your data stored in the data models.\n                    DefaultAuthType:\n                      allOf:\n                        - $ref: '#/components/schemas/BackendAPIAuthType'\n                        - xml:\n                            name: defaultAuthType\n                          description: The default authentication type for interacting with the configured data models in your Amplify project.\n                    Service:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: service\n                          description: The service used to provision and interact with the data model.\n                    TransformSchema:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: transformSchema\n                          description: The definition of the data model in the annotated transform of the GraphQL schema.\n                resourceName:\n                  description: The name of this resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/auth/{backendEnvironmentName}/remove':\n    post:\n      operationId: DeleteBackendAuth\n      description: Deletes an existing backend authentication resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBackendAuthResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceName\n              properties:\n                resourceName:\n                  description: The name of this resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/challenge/{sessionId}/remove':\n    post:\n      operationId: DeleteToken\n      description: Deletes the challenge token based on the given appId and sessionId.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteTokenResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: sessionId\n          in: path\n          required: true\n          description: The session ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/api/{backendEnvironmentName}/generateModels':\n    post:\n      operationId: GenerateBackendAPIModels\n      description: Generates a model schema for an existing backend API resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateBackendAPIModelsResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceName\n              properties:\n                resourceName:\n                  description: The name of this resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/details':\n    post:\n      operationId: GetBackend\n      description: Provides project-level details for your Amplify UI project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackendResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                backendEnvironmentName:\n                  description: The name of the backend environment.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/api/{backendEnvironmentName}/details':\n    post:\n      operationId: GetBackendAPI\n      description: Gets the details for a backend API.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackendAPIResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceName\n              properties:\n                resourceConfig:\n                  description: 'The resource config for the data model, configured as a part of the Amplify project.'\n                  type: object\n                  properties:\n                    AdditionalAuthTypes:\n                      allOf:\n                        - $ref: '#/components/schemas/ListOfBackendAPIAuthType'\n                        - xml:\n                            name: additionalAuthTypes\n                          description: Additional authentication methods used to interact with your data models.\n                    ApiName:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: apiName\n                          description: 'The API name used to interact with the data model, configured as a part of your Amplify project.'\n                    ConflictResolution:\n                      allOf:\n                        - $ref: '#/components/schemas/BackendAPIConflictResolution'\n                        - xml:\n                            name: conflictResolution\n                          description: The conflict resolution strategy for your data stored in the data models.\n                    DefaultAuthType:\n                      allOf:\n                        - $ref: '#/components/schemas/BackendAPIAuthType'\n                        - xml:\n                            name: defaultAuthType\n                          description: The default authentication type for interacting with the configured data models in your Amplify project.\n                    Service:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: service\n                          description: The service used to provision and interact with the data model.\n                    TransformSchema:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: transformSchema\n                          description: The definition of the data model in the annotated transform of the GraphQL schema.\n                resourceName:\n                  description: The name of this resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/api/{backendEnvironmentName}/getModels':\n    post:\n      operationId: GetBackendAPIModels\n      description: Generates a model schema for existing backend API resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackendAPIModelsResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceName\n              properties:\n                resourceName:\n                  description: The name of this resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/auth/{backendEnvironmentName}/details':\n    post:\n      operationId: GetBackendAuth\n      description: Gets a backend auth details.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackendAuthResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceName\n              properties:\n                resourceName:\n                  description: The name of this resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/job/{backendEnvironmentName}/{jobId}':\n    get:\n      operationId: GetBackendJob\n      description: Returns information about a specific job.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackendJobResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n        - name: jobId\n          in: path\n          required: true\n          description: The ID for the job.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: UpdateBackendJob\n      description: Updates a specific job.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateBackendJobResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n        - name: jobId\n          in: path\n          required: true\n          description: The ID for the job.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                operation:\n                  description: Filters the list of response objects to include only those with the specified operation name.\n                  type: string\n                status:\n                  description: Filters the list of response objects to include only those with the specified status.\n                  type: string\n  '/backend/{appId}/challenge/{sessionId}':\n    get:\n      operationId: GetToken\n      description: Gets the challenge token based on the given appId and sessionId.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTokenResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: sessionId\n          in: path\n          required: true\n          description: The session ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/auth/{backendEnvironmentName}/import':\n    post:\n      operationId: ImportBackendAuth\n      description: Imports an existing backend authentication resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportBackendAuthResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - nativeClientId\n                - userPoolId\n                - webClientId\n              properties:\n                identityPoolId:\n                  description: The ID of the Amazon Cognito identity pool.\n                  type: string\n                nativeClientId:\n                  description: The ID of the Amazon Cognito native client.\n                  type: string\n                userPoolId:\n                  description: The ID of the Amazon Cognito user pool.\n                  type: string\n                webClientId:\n                  description: The ID of the Amazon Cognito web client.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/job/{backendEnvironmentName}':\n    post:\n      operationId: ListBackendJobs\n      description: Lists the jobs for the backend of an Amplify app.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackendJobsResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                jobId:\n                  description: The ID for the job.\n                  type: string\n                maxResults:\n                  description: The maximum number of results that you want in the response.\n                  type: integer\n                  minimum: 1\n                  maximum: 25\n                nextToken:\n                  description: The token for the next set of results.\n                  type: string\n                operation:\n                  description: Filters the list of response objects to include only those with the specified operation name.\n                  type: string\n                status:\n                  description: Filters the list of response objects to include only those with the specified status.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/remove':\n    post:\n      operationId: RemoveAllBackends\n      description: Removes all backend environments from your Amplify project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveAllBackendsResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                cleanAmplifyApp:\n                  description: Cleans up the Amplify Console app if this value is set to true.\n                  type: boolean\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/config/remove':\n    post:\n      operationId: RemoveBackendConfig\n      description: Removes the AWS resources required to access the Amplify Admin UI.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveBackendConfigResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/api/{backendEnvironmentName}':\n    post:\n      operationId: UpdateBackendAPI\n      description: Updates an existing backend API resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateBackendAPIResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceName\n              properties:\n                resourceConfig:\n                  description: 'The resource config for the data model, configured as a part of the Amplify project.'\n                  type: object\n                  properties:\n                    AdditionalAuthTypes:\n                      allOf:\n                        - $ref: '#/components/schemas/ListOfBackendAPIAuthType'\n                        - xml:\n                            name: additionalAuthTypes\n                          description: Additional authentication methods used to interact with your data models.\n                    ApiName:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: apiName\n                          description: 'The API name used to interact with the data model, configured as a part of your Amplify project.'\n                    ConflictResolution:\n                      allOf:\n                        - $ref: '#/components/schemas/BackendAPIConflictResolution'\n                        - xml:\n                            name: conflictResolution\n                          description: The conflict resolution strategy for your data stored in the data models.\n                    DefaultAuthType:\n                      allOf:\n                        - $ref: '#/components/schemas/BackendAPIAuthType'\n                        - xml:\n                            name: defaultAuthType\n                          description: The default authentication type for interacting with the configured data models in your Amplify project.\n                    Service:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: service\n                          description: The service used to provision and interact with the data model.\n                    TransformSchema:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: transformSchema\n                          description: The definition of the data model in the annotated transform of the GraphQL schema.\n                resourceName:\n                  description: The name of this resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/auth/{backendEnvironmentName}':\n    post:\n      operationId: UpdateBackendAuth\n      description: Updates an existing backend authentication resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateBackendAuthResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n        - name: backendEnvironmentName\n          in: path\n          required: true\n          description: The name of the backend environment.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceConfig\n                - resourceName\n              properties:\n                resourceConfig:\n                  description: Defines the resource configuration when updating an authentication resource in your Amplify project.\n                  type: object\n                  properties:\n                    AuthResources:\n                      allOf:\n                        - $ref: '#/components/schemas/AuthResources'\n                        - xml:\n                            name: authResources\n                          description: Defines the service name to use when configuring an authentication resource in your Amplify project.\n                    IdentityPoolConfigs:\n                      allOf:\n                        - $ref: '#/components/schemas/UpdateBackendAuthIdentityPoolConfig'\n                        - xml:\n                            name: identityPoolConfigs\n                          description: 'Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.'\n                    Service:\n                      allOf:\n                        - $ref: '#/components/schemas/Service'\n                        - xml:\n                            name: service\n                          description: Defines the service name to use when configuring an authentication resource in your Amplify project.\n                    UserPoolConfigs:\n                      allOf:\n                        - $ref: '#/components/schemas/UpdateBackendAuthUserPoolConfig'\n                        - xml:\n                            name: userPoolConfigs\n                          description: 'Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.'\n                resourceName:\n                  description: The name of this resource.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backend/{appId}/config/update':\n    post:\n      operationId: UpdateBackendConfig\n      description: Updates the AWS resources required to access the Amplify Admin UI.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateBackendConfigResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: GatewayTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatewayTimeoutException'\n        '482':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n        '483':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          description: The app ID.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                loginAuthConfig:\n                  description: The request object for this operation.\n                  type: object\n                  properties:\n                    AwsCognitoIdentityPoolId:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: aws_cognito_identity_pool_id\n                          description: The Amazon Cognito identity pool ID used for the Amplify Admin UI login authorization.\n                    AwsCognitoRegion:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: aws_cognito_region\n                          description: The AWS Region for the Amplify Admin UI login.\n                    AwsUserPoolsId:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: aws_user_pools_id\n                          description: The Amazon Cognito user pool ID used for Amplify Admin UI login authentication.\n                    AwsUserPoolsWebClientId:\n                      allOf:\n                        - $ref: '#/components/schemas/__string'\n                        - xml:\n                            name: aws_user_pools_web_client_id\n                          description: The web client ID for the Amazon Cognito user pools.\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CloneBackendResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    NotFoundException: {}\n    GatewayTimeoutException: {}\n    TooManyRequestsException: {}\n    BadRequestException: {}\n    CreateBackendResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    CreateBackendAPIResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    ListOfBackendAPIAuthType:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackendAPIAuthType'\n    __string:\n      type: string\n    BackendAPIConflictResolution:\n      type: object\n      properties:\n        ResolutionStrategy:\n          allOf:\n            - $ref: '#/components/schemas/ResolutionStrategy'\n            - xml:\n                name: resolutionStrategy\n              description: The strategy for conflict resolution.\n      description: Describes the conflict resolution configuration for your data model configured in your Amplify project.\n    BackendAPIAuthType:\n      type: object\n      properties:\n        Mode:\n          allOf:\n            - $ref: '#/components/schemas/Mode'\n            - xml:\n                name: mode\n              description: Describes the authentication mode.\n        Settings:\n          allOf:\n            - $ref: '#/components/schemas/BackendAPIAppSyncAuthSettings'\n            - xml:\n                name: settings\n              description: Describes settings for the authentication mode.\n      description: Describes the auth types for your configured data models.\n    CreateBackendAuthResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    AuthResources:\n      type: string\n      enum:\n        - USER_POOL_ONLY\n        - IDENTITY_POOL_AND_USER_POOL\n    CreateBackendAuthIdentityPoolConfig:\n      type: object\n      required:\n        - UnauthenticatedLogin\n        - IdentityPoolName\n      properties:\n        IdentityPoolName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: identityPoolName\n              description: Name of the Amazon Cognito identity pool used for authorization.\n        UnauthenticatedLogin:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - xml:\n                name: unauthenticatedLogin\n              description: Set to true or false based on whether you want to enable guest authorization to your Amplify app.\n      description: 'Describes authorization configurations for the auth resources, configured as a part of your Amplify project.'\n    Service:\n      type: string\n      enum:\n        - COGNITO\n    CreateBackendAuthUserPoolConfig:\n      type: object\n      required:\n        - RequiredSignUpAttributes\n        - SignInMethod\n        - UserPoolName\n      properties:\n        ForgotPassword:\n          allOf:\n            - $ref: '#/components/schemas/CreateBackendAuthForgotPasswordConfig'\n            - xml:\n                name: forgotPassword\n              description: 'Describes the forgotten password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.'\n        Mfa:\n          allOf:\n            - $ref: '#/components/schemas/CreateBackendAuthMFAConfig'\n            - xml:\n                name: mfa\n              description: Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.\n        OAuth:\n          allOf:\n            - $ref: '#/components/schemas/CreateBackendAuthOAuthConfig'\n            - xml:\n                name: oAuth\n              description: 'Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.'\n        PasswordPolicy:\n          allOf:\n            - $ref: '#/components/schemas/CreateBackendAuthPasswordPolicyConfig'\n            - xml:\n                name: passwordPolicy\n              description: 'Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.'\n        RequiredSignUpAttributes:\n          allOf:\n            - $ref: '#/components/schemas/ListOfRequiredSignUpAttributesElement'\n            - xml:\n                name: requiredSignUpAttributes\n              description: The required attributes to sign up new users in the user pool.\n        SignInMethod:\n          allOf:\n            - $ref: '#/components/schemas/SignInMethod'\n            - xml:\n                name: signInMethod\n              description: 'Describes the sign-in methods that your Amplify app users use to log in using the Amazon Cognito user pool, configured as a part of your Amplify project.'\n        UserPoolName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: userPoolName\n              description: The Amazon Cognito user pool name.\n      description: Describes the Amazon Cognito user pool configuration for the auth resource to be configured for your Amplify project.\n    CreateBackendConfigResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    CreateTokenResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        ChallengeCode:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: challengeCode\n              description: One-time challenge code for authenticating into the Amplify Admin UI.\n        SessionId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: sessionId\n              description: A unique ID provided when creating a new challenge token.\n        Ttl:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: ttl\n              description: The expiry time for the one-time generated token code.\n    DeleteBackendResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    DeleteBackendAPIResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    DeleteBackendAuthResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    DeleteTokenResponse:\n      type: object\n      properties:\n        IsSuccess:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - xml:\n                name: isSuccess\n              description: Indicates whether the request succeeded or failed.\n    GenerateBackendAPIModelsResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    GetBackendResponse:\n      type: object\n      properties:\n        AmplifyMetaConfig:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: amplifyMetaConfig\n              description: A stringified version of the current configs for your Amplify project.\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        AppName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appName\n              description: The name of the app.\n        BackendEnvironmentList:\n          allOf:\n            - $ref: '#/components/schemas/ListOf__string'\n            - xml:\n                name: backendEnvironmentList\n              description: A list of backend environments in an array.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request failed, this is the returned error.'\n    GetBackendAPIResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        ResourceConfig:\n          allOf:\n            - $ref: '#/components/schemas/BackendAPIResourceConfig'\n            - xml:\n                name: resourceConfig\n              description: The resource configuration for this response object.\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n    GetBackendAPIModelsResponse:\n      type: object\n      properties:\n        Models:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: models\n              description: Stringified JSON of the datastore model.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/Status'\n            - xml:\n                name: status\n              description: The current status of the request.\n    GetBackendAuthResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        ResourceConfig:\n          allOf:\n            - $ref: '#/components/schemas/CreateBackendAuthResourceConfig'\n            - xml:\n                name: resourceConfig\n              description: The resource configuration for authorization requests to the backend of your Amplify project.\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n    GetBackendJobResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        CreateTime:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: createTime\n              description: The time when the job was created.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n        UpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: updateTime\n              description: The time when the job was last updated.\n    GetTokenResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        ChallengeCode:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: challengeCode\n              description: The one-time challenge code for authenticating into the Amplify Admin UI.\n        SessionId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: sessionId\n              description: A unique ID provided when creating a new challenge token.\n        Ttl:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: ttl\n              description: The expiry time for the one-time generated token code.\n    ImportBackendAuthResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    ListBackendJobsResponse:\n      type: object\n      properties:\n        Jobs:\n          allOf:\n            - $ref: '#/components/schemas/ListOfBackendJobRespObj'\n            - xml:\n                name: jobs\n              description: An array of jobs and their properties.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: nextToken\n              description: The token for the next set of results.\n    RemoveAllBackendsResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    RemoveBackendConfigResponse:\n      type: object\n      properties:\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n    UpdateBackendAPIResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    UpdateBackendAuthResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n    UpdateBackendAuthIdentityPoolConfig:\n      type: object\n      properties:\n        UnauthenticatedLogin:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - xml:\n                name: unauthenticatedLogin\n              description: A boolean value that can be set to allow or disallow guest-level authorization into your Amplify app.\n      description: 'Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.'\n    UpdateBackendAuthUserPoolConfig:\n      type: object\n      properties:\n        ForgotPassword:\n          allOf:\n            - $ref: '#/components/schemas/UpdateBackendAuthForgotPasswordConfig'\n            - xml:\n                name: forgotPassword\n              description: 'Describes the forgot password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.'\n        Mfa:\n          allOf:\n            - $ref: '#/components/schemas/UpdateBackendAuthMFAConfig'\n            - xml:\n                name: mfa\n              description: Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.\n        OAuth:\n          allOf:\n            - $ref: '#/components/schemas/UpdateBackendAuthOAuthConfig'\n            - xml:\n                name: oAuth\n              description: 'Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.'\n        PasswordPolicy:\n          allOf:\n            - $ref: '#/components/schemas/UpdateBackendAuthPasswordPolicyConfig'\n            - xml:\n                name: passwordPolicy\n              description: 'Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.'\n      description: Describes the Amazon Cognito user pool configuration for the authorization resource to be configured for your Amplify project on an update.\n    UpdateBackendConfigResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendManagerAppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendManagerAppId\n              description: The app ID for the backend manager.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        LoginAuthConfig:\n          allOf:\n            - $ref: '#/components/schemas/LoginAuthConfigReqObj'\n            - xml:\n                name: loginAuthConfig\n              description: Describes the Amazon Cognito configurations for the Admin UI auth resource to log in with.\n    UpdateBackendJobResponse:\n      type: object\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        CreateTime:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: createTime\n              description: The time when the job was created.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n        UpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: updateTime\n              description: The time when the job was last updated.\n    __double:\n      type: number\n      format: double\n    BackendAPIAppSyncAuthSettings:\n      type: object\n      properties:\n        CognitoUserPoolId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: cognitoUserPoolId\n              description: 'The Amazon Cognito user pool ID, if Amazon Cognito was used as an authentication setting to access your data models.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: description\n              description: 'The API key description for API_KEY, if it was used as an authentication mechanism to access your data models.'\n        ExpirationTime:\n          allOf:\n            - $ref: '#/components/schemas/__double'\n            - xml:\n                name: expirationTime\n              description: 'The API key expiration time for API_KEY, if it was used as an authentication mechanism to access your data models.'\n        OpenIDAuthTTL:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: openIDAuthTTL\n              description: The expiry time for the OpenID authentication mechanism.\n        OpenIDClientId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: openIDClientId\n              description: 'The clientID for openID, if openID was used as an authentication setting to access your data models.'\n        OpenIDIatTTL:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: openIDIatTTL\n              description: The expiry time for the OpenID authentication mechanism.\n        OpenIDIssueURL:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: openIDIssueURL\n              description: 'The openID issuer URL, if openID was used as an authentication setting to access your data models.'\n        OpenIDProviderName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: openIDProviderName\n              description: 'The OpenID provider name, if OpenID was used as an authentication mechanism to access your data models.'\n      description: The authentication settings for accessing provisioned data models in your Amplify project.\n    Mode:\n      type: string\n      enum:\n        - API_KEY\n        - AWS_IAM\n        - AMAZON_COGNITO_USER_POOLS\n        - OPENID_CONNECT\n    ResolutionStrategy:\n      type: string\n      enum:\n        - OPTIMISTIC_CONCURRENCY\n        - LAMBDA\n        - AUTOMERGE\n        - NONE\n    BackendAPIResourceConfig:\n      type: object\n      properties:\n        AdditionalAuthTypes:\n          allOf:\n            - $ref: '#/components/schemas/ListOfBackendAPIAuthType'\n            - xml:\n                name: additionalAuthTypes\n              description: Additional authentication methods used to interact with your data models.\n        ApiName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: apiName\n              description: 'The API name used to interact with the data model, configured as a part of your Amplify project.'\n        ConflictResolution:\n          allOf:\n            - $ref: '#/components/schemas/BackendAPIConflictResolution'\n            - xml:\n                name: conflictResolution\n              description: The conflict resolution strategy for your data stored in the data models.\n        DefaultAuthType:\n          allOf:\n            - $ref: '#/components/schemas/BackendAPIAuthType'\n            - xml:\n                name: defaultAuthType\n              description: The default authentication type for interacting with the configured data models in your Amplify project.\n        Service:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: service\n              description: The service used to provision and interact with the data model.\n        TransformSchema:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: transformSchema\n              description: The definition of the data model in the annotated transform of the GraphQL schema.\n      description: 'The resource config for the data model, configured as a part of the Amplify project.'\n    BackendAuthAppleProviderConfig:\n      type: object\n      properties:\n        ClientId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: client_id\n              description: Describes the client_id (also called Services ID) that comes from Apple.\n        KeyId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: key_id\n              description: Describes the key_id that comes from Apple.\n        PrivateKey:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: private_key\n              description: Describes the private_key that comes from Apple.\n        TeamId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: team_id\n              description: Describes the team_id that comes from Apple.\n      description: Describes Apple social federation configurations for allowing your app users to sign in using OAuth.\n    BackendAuthSocialProviderConfig:\n      type: object\n      properties:\n        ClientId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: client_id\n              description: 'Describes the client_id, which can be obtained from the third-party social federation provider.'\n        ClientSecret:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: client_secret\n              description: 'Describes the client_secret, which can be obtained from third-party social federation providers.'\n      description: Describes third-party social federation configurations for allowing your app users to sign in using OAuth.\n    BackendJobRespObj:\n      type: object\n      required:\n        - AppId\n        - BackendEnvironmentName\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        CreateTime:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: createTime\n              description: The time when the job was created.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: error\n              description: 'If the request fails, this error is returned.'\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: The name of the operation.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: The current status of the request.\n        UpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: updateTime\n              description: The time when the job was last updated.\n      description: The response object for this operation.\n    CloneBackendRequest:\n      type: object\n      required:\n        - TargetEnvironmentName\n      title: CloneBackendRequest\n      properties:\n        TargetEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: targetEnvironmentName\n              description: The name of the destination backend environment to be created.\n      description: The request body for CloneBackend.\n    CreateBackendAPIRequest:\n      type: object\n      required:\n        - ResourceName\n        - BackendEnvironmentName\n        - ResourceConfig\n      title: CreateBackendAPIRequest\n      properties:\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        ResourceConfig:\n          allOf:\n            - $ref: '#/components/schemas/BackendAPIResourceConfig'\n            - xml:\n                name: resourceConfig\n              description: The resource configuration for this request.\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n      description: The request body for CreateBackendAPI.\n    DeliveryMethod:\n      type: string\n      enum:\n        - EMAIL\n        - SMS\n    EmailSettings:\n      type: object\n      properties:\n        EmailMessage:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: emailMessage\n              description: The body of the email.\n        EmailSubject:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: emailSubject\n              description: The subject of the email.\n      description: The configuration for the email sent when an app user forgets their password.\n    SmsSettings:\n      type: object\n      properties:\n        SmsMessage:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: smsMessage\n              description: The body of the SMS message.\n      description: SMS settings for authentication.\n    CreateBackendAuthForgotPasswordConfig:\n      type: object\n      required:\n        - DeliveryMethod\n      properties:\n        DeliveryMethod:\n          allOf:\n            - $ref: '#/components/schemas/DeliveryMethod'\n            - xml:\n                name: deliveryMethod\n              description: Describes which mode to use (either SMS or email) to deliver messages to app users who want to recover their password.\n        EmailSettings:\n          allOf:\n            - $ref: '#/components/schemas/EmailSettings'\n            - xml:\n                name: emailSettings\n              description: The configuration for the email sent when an app user forgets their password.\n        SmsSettings:\n          allOf:\n            - $ref: '#/components/schemas/SmsSettings'\n            - xml:\n                name: smsSettings\n              description: The configuration for the SMS message sent when an app user forgets their password.\n      description: Describes the forgot password policy for authenticating into the Amplify app.\n    __boolean:\n      type: boolean\n    MFAMode:\n      type: string\n      enum:\n        - 'ON'\n        - 'OFF'\n        - OPTIONAL\n    Settings:\n      type: object\n      properties:\n        MfaTypes:\n          allOf:\n            - $ref: '#/components/schemas/ListOfMfaTypesElement'\n            - xml:\n                name: mfaTypes\n              description: The supported MFA types.\n        SmsMessage:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: smsMessage\n              description: The body of the SMS message.\n      description: The settings of your MFA configuration for the backend of your Amplify project.\n    CreateBackendAuthMFAConfig:\n      type: object\n      required:\n        - MFAMode\n      properties:\n        MFAMode:\n          allOf:\n            - $ref: '#/components/schemas/MFAMode'\n            - description: 'Describes whether MFA should be [ON, OFF, or OPTIONAL] for authentication in your Amplify project.'\n        Settings:\n          allOf:\n            - $ref: '#/components/schemas/Settings'\n            - xml:\n                name: settings\n              description: Describes the configuration settings and methods for your Amplify app users to use MFA.\n      description: Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.\n    OAuthGrantType:\n      type: string\n      enum:\n        - CODE\n        - IMPLICIT\n    ListOfOAuthScopesElement:\n      type: array\n      items:\n        $ref: '#/components/schemas/OAuthScopesElement'\n    ListOf__string:\n      type: array\n      items:\n        $ref: '#/components/schemas/__string'\n    SocialProviderSettings:\n      type: object\n      properties:\n        Facebook:\n          $ref: '#/components/schemas/BackendAuthSocialProviderConfig'\n        Google:\n          $ref: '#/components/schemas/BackendAuthSocialProviderConfig'\n        LoginWithAmazon:\n          $ref: '#/components/schemas/BackendAuthSocialProviderConfig'\n        SignInWithApple:\n          $ref: '#/components/schemas/BackendAuthAppleProviderConfig'\n      description: The settings for using the social identity providers for access to your Amplify app.\n    CreateBackendAuthOAuthConfig:\n      type: object\n      required:\n        - RedirectSignOutURIs\n        - RedirectSignInURIs\n        - OAuthGrantType\n        - OAuthScopes\n      properties:\n        DomainPrefix:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: domainPrefix\n              description: The domain prefix for your Amplify app.\n        OAuthGrantType:\n          allOf:\n            - $ref: '#/components/schemas/OAuthGrantType'\n            - xml:\n                name: oAuthGrantType\n              description: The OAuth grant type that you use to allow app users to authenticate from your Amplify app.\n        OAuthScopes:\n          allOf:\n            - $ref: '#/components/schemas/ListOfOAuthScopesElement'\n            - xml:\n                name: oAuthScopes\n              description: List of OAuth-related flows used to allow your app users to authenticate from your Amplify app.\n        RedirectSignInURIs:\n          allOf:\n            - $ref: '#/components/schemas/ListOf__string'\n            - xml:\n                name: redirectSignInURIs\n              description: The redirected URI for signing in to your Amplify app.\n        RedirectSignOutURIs:\n          allOf:\n            - $ref: '#/components/schemas/ListOf__string'\n            - xml:\n                name: redirectSignOutURIs\n              description: Redirect URLs that OAuth uses when a user signs out of an Amplify app.\n        SocialProviderSettings:\n          allOf:\n            - $ref: '#/components/schemas/SocialProviderSettings'\n            - xml:\n                name: socialProviderSettings\n              description: The settings for using social providers to access your Amplify app.\n      description: Creates the OAuth configuration for your Amplify project.\n    ListOfAdditionalConstraintsElement:\n      type: array\n      items:\n        $ref: '#/components/schemas/AdditionalConstraintsElement'\n    CreateBackendAuthPasswordPolicyConfig:\n      type: object\n      required:\n        - MinimumLength\n      properties:\n        AdditionalConstraints:\n          allOf:\n            - $ref: '#/components/schemas/ListOfAdditionalConstraintsElement'\n            - xml:\n                name: additionalConstraints\n              description: Additional constraints for the password used to access the backend of your Amplify project.\n        MinimumLength:\n          allOf:\n            - $ref: '#/components/schemas/__double'\n            - xml:\n                name: minimumLength\n              description: The minimum length of the password used to access the backend of your Amplify project.\n      description: The password policy configuration for the backend to your Amplify project.\n    CreateBackendAuthResourceConfig:\n      type: object\n      required:\n        - AuthResources\n        - UserPoolConfigs\n        - Service\n      properties:\n        AuthResources:\n          allOf:\n            - $ref: '#/components/schemas/AuthResources'\n            - xml:\n                name: authResources\n              description: Defines whether you want to configure only authentication or both authentication and authorization settings.\n        IdentityPoolConfigs:\n          allOf:\n            - $ref: '#/components/schemas/CreateBackendAuthIdentityPoolConfig'\n            - xml:\n                name: identityPoolConfigs\n              description: 'Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.'\n        Service:\n          allOf:\n            - $ref: '#/components/schemas/Service'\n            - xml:\n                name: service\n              description: Defines the service name to use when configuring an authentication resource in your Amplify project.\n        UserPoolConfigs:\n          allOf:\n            - $ref: '#/components/schemas/CreateBackendAuthUserPoolConfig'\n            - xml:\n                name: userPoolConfigs\n              description: 'Describes authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.'\n      description: Defines the resource configuration when creating an auth resource in your Amplify project.\n    CreateBackendAuthRequest:\n      type: object\n      required:\n        - ResourceName\n        - BackendEnvironmentName\n        - ResourceConfig\n      title: CreateBackendAuthRequest\n      properties:\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        ResourceConfig:\n          allOf:\n            - $ref: '#/components/schemas/CreateBackendAuthResourceConfig'\n            - xml:\n                name: resourceConfig\n              description: The resource configuration for this request object.\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n      description: The request body for CreateBackendAuth.\n    ListOfRequiredSignUpAttributesElement:\n      type: array\n      items:\n        $ref: '#/components/schemas/RequiredSignUpAttributesElement'\n    SignInMethod:\n      type: string\n      enum:\n        - EMAIL\n        - EMAIL_AND_PHONE_NUMBER\n        - PHONE_NUMBER\n        - USERNAME\n    CreateBackendConfigRequest:\n      type: object\n      title: CreateBackendConfigRequest\n      properties:\n        BackendManagerAppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendManagerAppId\n              description: The app ID for the backend manager.\n      description: The request body for CreateBackendConfig.\n    ResourceConfig:\n      type: object\n      properties: {}\n      description: Defines the resource configuration for the data model in your Amplify project.\n    CreateBackendRequest:\n      type: object\n      required:\n        - AppId\n        - BackendEnvironmentName\n        - AppName\n      title: CreateBackendRequest\n      properties:\n        AppId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appId\n              description: The app ID.\n        AppName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: appName\n              description: The name of the app.\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n        ResourceConfig:\n          allOf:\n            - $ref: '#/components/schemas/ResourceConfig'\n            - xml:\n                name: resourceConfig\n              description: The resource configuration for the create backend request.\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of the resource.\n      description: The request body for CreateBackend.\n    CreateTokenRequest:\n      type: object\n      title: CreateTokenRequest\n      properties: {}\n    DeleteBackendAPIRequest:\n      type: object\n      required:\n        - ResourceName\n      title: DeleteBackendAPIRequest\n      properties:\n        ResourceConfig:\n          allOf:\n            - $ref: '#/components/schemas/BackendAPIResourceConfig'\n            - xml:\n                name: resourceConfig\n              description: Defines the resource configuration for the data model in your Amplify project.\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n      description: The request body for DeleteBackendAPI.\n    DeleteBackendAuthRequest:\n      type: object\n      required:\n        - ResourceName\n      title: DeleteBackendAuthRequest\n      properties:\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n      description: The request body for DeleteBackendAuth.\n    DeleteBackendRequest:\n      type: object\n      title: DeleteBackendRequest\n      properties: {}\n    DeleteTokenRequest:\n      type: object\n      title: DeleteTokenRequest\n      properties: {}\n    GenerateBackendAPIModelsRequest:\n      type: object\n      required:\n        - ResourceName\n      title: GenerateBackendAPIModelsRequest\n      properties:\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n      description: The request body for GenerateBackendAPIModels.\n    GetBackendAPIModelsRequest:\n      type: object\n      required:\n        - ResourceName\n      title: GetBackendAPIModelsRequest\n      properties:\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n      description: The request body for GetBackendAPIModels.\n    Status:\n      type: string\n      enum:\n        - LATEST\n        - STALE\n    GetBackendAPIRequest:\n      type: object\n      required:\n        - ResourceName\n      title: GetBackendAPIRequest\n      properties:\n        ResourceConfig:\n          allOf:\n            - $ref: '#/components/schemas/BackendAPIResourceConfig'\n            - xml:\n                name: resourceConfig\n              description: Defines the resource configuration for the data model in your Amplify project.\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n      description: The request body for GetBackendAPI.\n    GetBackendAuthRequest:\n      type: object\n      required:\n        - ResourceName\n      title: GetBackendAuthRequest\n      properties:\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n      description: The request body for GetBackendAuth.\n    GetBackendJobRequest:\n      type: object\n      title: GetBackendJobRequest\n      properties: {}\n    GetBackendRequest:\n      type: object\n      title: GetBackendRequest\n      properties:\n        BackendEnvironmentName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: backendEnvironmentName\n              description: The name of the backend environment.\n      description: The request body for GetBackend.\n    GetTokenRequest:\n      type: object\n      title: GetTokenRequest\n      properties: {}\n    ImportBackendAuthRequest:\n      type: object\n      required:\n        - UserPoolId\n        - NativeClientId\n        - WebClientId\n      title: ImportBackendAuthRequest\n      properties:\n        IdentityPoolId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: identityPoolId\n              description: The ID of the Amazon Cognito identity pool.\n        NativeClientId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: nativeClientId\n              description: The ID of the Amazon Cognito native client.\n        UserPoolId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: userPoolId\n              description: The ID of the Amazon Cognito user pool.\n        WebClientId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: webClientId\n              description: The ID of the Amazon Cognito web client.\n      description: The request body for ImportBackendAuth.\n    __integerMin1Max25:\n      type: integer\n      minimum: 1\n      maximum: 25\n    ListBackendJobsRequest:\n      type: object\n      title: ListBackendJobsRequest\n      properties:\n        JobId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: jobId\n              description: The ID for the job.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/__integerMin1Max25'\n            - xml:\n                name: maxResults\n              description: The maximum number of results that you want in the response.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: nextToken\n              description: The token for the next set of results.\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: Filters the list of response objects to include only those with the specified operation name.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: Filters the list of response objects to include only those with the specified status.\n      description: The request body for ListBackendJobs.\n    ListOfBackendJobRespObj:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackendJobRespObj'\n    LoginAuthConfigReqObj:\n      type: object\n      properties:\n        AwsCognitoIdentityPoolId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: aws_cognito_identity_pool_id\n              description: The Amazon Cognito identity pool ID used for the Amplify Admin UI login authorization.\n        AwsCognitoRegion:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: aws_cognito_region\n              description: The AWS Region for the Amplify Admin UI login.\n        AwsUserPoolsId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: aws_user_pools_id\n              description: The Amazon Cognito user pool ID used for Amplify Admin UI login authentication.\n        AwsUserPoolsWebClientId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: aws_user_pools_web_client_id\n              description: The web client ID for the Amazon Cognito user pools.\n      description: The request object for this operation.\n    RemoveAllBackendsRequest:\n      type: object\n      title: RemoveAllBackendsRequest\n      properties:\n        CleanAmplifyApp:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - xml:\n                name: cleanAmplifyApp\n              description: Cleans up the Amplify Console app if this value is set to true.\n      description: The request body for RemoveAllBackends.\n    RemoveBackendConfigRequest:\n      type: object\n      title: RemoveBackendConfigRequest\n      properties: {}\n    ListOfMfaTypesElement:\n      type: array\n      items:\n        $ref: '#/components/schemas/MfaTypesElement'\n    UpdateBackendAPIRequest:\n      type: object\n      required:\n        - ResourceName\n      title: UpdateBackendAPIRequest\n      properties:\n        ResourceConfig:\n          allOf:\n            - $ref: '#/components/schemas/BackendAPIResourceConfig'\n            - xml:\n                name: resourceConfig\n              description: Defines the resource configuration for the data model in your Amplify project.\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n      description: The request body for UpdateBackendAPI.\n    UpdateBackendAuthForgotPasswordConfig:\n      type: object\n      properties:\n        DeliveryMethod:\n          allOf:\n            - $ref: '#/components/schemas/DeliveryMethod'\n            - xml:\n                name: deliveryMethod\n              description: Describes which mode to use (either SMS or email) to deliver messages to app users that want to recover their password.\n        EmailSettings:\n          allOf:\n            - $ref: '#/components/schemas/EmailSettings'\n            - xml:\n                name: emailSettings\n              description: The configuration for the email sent when an app user forgets their password.\n        SmsSettings:\n          allOf:\n            - $ref: '#/components/schemas/SmsSettings'\n            - xml:\n                name: smsSettings\n              description: The configuration for the SMS message sent when an Amplify app user forgets their password.\n      description: Describes the forgot password policy for authenticating into the Amplify app.\n    UpdateBackendAuthMFAConfig:\n      type: object\n      properties:\n        MFAMode:\n          allOf:\n            - $ref: '#/components/schemas/MFAMode'\n            - description: The MFA mode for the backend of your Amplify project.\n        Settings:\n          allOf:\n            - $ref: '#/components/schemas/Settings'\n            - xml:\n                name: settings\n              description: The settings of your MFA configuration for the backend of your Amplify project.\n      description: Updates the multi-factor authentication (MFA) configuration for the backend of your Amplify project.\n    UpdateBackendAuthOAuthConfig:\n      type: object\n      properties:\n        DomainPrefix:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: domainPrefix\n              description: The Amazon Cognito domain prefix used to create a hosted UI for authentication.\n        OAuthGrantType:\n          allOf:\n            - $ref: '#/components/schemas/OAuthGrantType'\n            - xml:\n                name: oAuthGrantType\n              description: The OAuth grant type to allow app users to authenticate from your Amplify app.\n        OAuthScopes:\n          allOf:\n            - $ref: '#/components/schemas/ListOfOAuthScopesElement'\n            - xml:\n                name: oAuthScopes\n              description: The list of OAuth-related flows that can allow users to authenticate from your Amplify app.\n        RedirectSignInURIs:\n          allOf:\n            - $ref: '#/components/schemas/ListOf__string'\n            - xml:\n                name: redirectSignInURIs\n              description: Redirect URLs that OAuth uses when a user signs in to an Amplify app.\n        RedirectSignOutURIs:\n          allOf:\n            - $ref: '#/components/schemas/ListOf__string'\n            - xml:\n                name: redirectSignOutURIs\n              description: Redirect URLs that OAuth uses when a user signs out of an Amplify app.\n        SocialProviderSettings:\n          allOf:\n            - $ref: '#/components/schemas/SocialProviderSettings'\n            - xml:\n                name: socialProviderSettings\n              description: Describes third-party social federation configurations for allowing your users to sign in with OAuth.\n      description: The OAuth configurations for authenticating users into your Amplify app.\n    UpdateBackendAuthPasswordPolicyConfig:\n      type: object\n      properties:\n        AdditionalConstraints:\n          allOf:\n            - $ref: '#/components/schemas/ListOfAdditionalConstraintsElement'\n            - xml:\n                name: additionalConstraints\n              description: 'Describes additional constraints on password requirements to sign in to the auth resource, configured as a part of your Amplify project.'\n        MinimumLength:\n          allOf:\n            - $ref: '#/components/schemas/__double'\n            - xml:\n                name: minimumLength\n              description: 'Describes the minimum length of the password required to sign in to the auth resource, configured as a part of your Amplify project.'\n      description: Describes the password policy for your Amazon Cognito user pool configured as a part of your Amplify project.\n    UpdateBackendAuthResourceConfig:\n      type: object\n      required:\n        - AuthResources\n        - UserPoolConfigs\n        - Service\n      properties:\n        AuthResources:\n          allOf:\n            - $ref: '#/components/schemas/AuthResources'\n            - xml:\n                name: authResources\n              description: Defines the service name to use when configuring an authentication resource in your Amplify project.\n        IdentityPoolConfigs:\n          allOf:\n            - $ref: '#/components/schemas/UpdateBackendAuthIdentityPoolConfig'\n            - xml:\n                name: identityPoolConfigs\n              description: 'Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.'\n        Service:\n          allOf:\n            - $ref: '#/components/schemas/Service'\n            - xml:\n                name: service\n              description: Defines the service name to use when configuring an authentication resource in your Amplify project.\n        UserPoolConfigs:\n          allOf:\n            - $ref: '#/components/schemas/UpdateBackendAuthUserPoolConfig'\n            - xml:\n                name: userPoolConfigs\n              description: 'Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.'\n      description: Defines the resource configuration when updating an authentication resource in your Amplify project.\n    UpdateBackendAuthRequest:\n      type: object\n      required:\n        - ResourceName\n        - ResourceConfig\n      title: UpdateBackendAuthRequest\n      properties:\n        ResourceConfig:\n          allOf:\n            - $ref: '#/components/schemas/UpdateBackendAuthResourceConfig'\n            - xml:\n                name: resourceConfig\n              description: The resource configuration for this request object.\n        ResourceName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: resourceName\n              description: The name of this resource.\n      description: The request body for UpdateBackendAuth.\n    UpdateBackendConfigRequest:\n      type: object\n      title: UpdateBackendConfigRequest\n      properties:\n        LoginAuthConfig:\n          allOf:\n            - $ref: '#/components/schemas/LoginAuthConfigReqObj'\n            - xml:\n                name: loginAuthConfig\n              description: Describes the Amazon Cognito configuration for Admin UI access.\n      description: The request body for UpdateBackendConfig.\n    UpdateBackendJobRequest:\n      type: object\n      title: UpdateBackendJobRequest\n      properties:\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: operation\n              description: Filters the list of response objects to include only those with the specified operation name.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - xml:\n                name: status\n              description: Filters the list of response objects to include only those with the specified status.\n      description: The request body for GetBackendJob.\n    AdditionalConstraintsElement:\n      type: string\n      enum:\n        - REQUIRE_DIGIT\n        - REQUIRE_LOWERCASE\n        - REQUIRE_SYMBOL\n        - REQUIRE_UPPERCASE\n    MfaTypesElement:\n      type: string\n      enum:\n        - SMS\n        - TOTP\n    OAuthScopesElement:\n      type: string\n      enum:\n        - PHONE\n        - EMAIL\n        - OPENID\n        - PROFILE\n        - AWS_COGNITO_SIGNIN_USER_ADMIN\n    RequiredSignUpAttributesElement:\n      type: string\n      enum:\n        - ADDRESS\n        - BIRTHDATE\n        - EMAIL\n        - FAMILY_NAME\n        - GENDER\n        - GIVEN_NAME\n        - LOCALE\n        - MIDDLE_NAME\n        - NAME\n        - NICKNAME\n        - PHONE_NUMBER\n        - PICTURE\n        - PREFERRED_USERNAME\n        - PROFILE\n        - UPDATED_AT\n        - WEBSITE\n        - ZONE_INFO\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@57168637e057c3e5ebe933717019f6f25bc1886e/-/blob/APIs/amazonaws.com/amplifybackend/2020-08-11/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/57168637e057c3e5ebe933717019f6f25bc1886e/APIs/amazonaws.com/amplifybackend/2020-08-11/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/backend/{appId}/api\": post: requestBody: contents: media: \"application/json\": generate schema: field resourceConfig: field AdditionalAuthTypes: allOf: merge item schema: schema is null or empty"
}