{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/algolia/api-clients-automation"
		},
		"file": {
			"name": "insights.yml",
			"size": 0,
			"path": "specs/bundled/insights.yml",
			"byteSize": 11336,
			"content": "openapi: 3.0.2\ninfo:\n  title: Insights API\n  description: API powering the Insights feature of Algolia.\n  version: 1.0.0\ncomponents:\n  securitySchemes:\n    appId:\n      type: apiKey\n      in: header\n      name: X-Algolia-Application-Id\n    apiKey:\n      type: apiKey\n      in: header\n      name: X-Algolia-API-Key\n  parameters:\n    PathInPath:\n      name: path\n      in: path\n      description: \u003e-\n        The path of the API endpoint to target, anything after the /1 needs to\n        be specified.\n      required: true\n      schema:\n        type: string\n        example: /keys\n    Parameters:\n      name: parameters\n      in: query\n      description: Query parameters to be applied to the current query.\n      schema:\n        type: object\n        additionalProperties: true\n  schemas:\n    ErrorBase:\n      description: Error.\n      type: object\n      additionalProperties: true\n      properties:\n        message:\n          type: string\n          example: Invalid Application-Id or API-Key\n    eventType:\n      type: string\n      enum:\n        - click\n        - conversion\n        - view\n  responses:\n    BadRequest:\n      description: Bad request or request arguments.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    FeatureNotEnabled:\n      description: This feature is not enabled on your Algolia account.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    MethodNotAllowed:\n      description: Method not allowed with this API key.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    IndexNotFound:\n      description: Index not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    UnprocessableEntity:\n      description: Unprocessable Entity.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\n    RequestEntityTooLarge:\n      description: Request Entity Too Large.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorBase'\nservers:\n  - url: https://insights.{region}.algolia.io\n    variables:\n      region:\n        enum:\n          - us\n          - de\n        default: us\n  - url: https://insights.algolia.io\nsecurity:\n  - appId: []\n    apiKey: []\ntags:\n  - name: events\n    x-displayName: Events\n    description: Events operations.\nx-tagGroups:\n  - name: General\n    tags:\n      - events\npaths:\n  /1{path}:\n    get:\n      operationId: get\n      summary: Send requests to the Algolia REST API.\n      description: This method allow you to send requests to the Algolia REST API.\n      parameters:\n        - $ref: '#/components/parameters/PathInPath'\n        - $ref: '#/components/parameters/Parameters'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '402':\n          $ref: '#/components/responses/FeatureNotEnabled'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '404':\n          $ref: '#/components/responses/IndexNotFound'\n      tags:\n        - insights\n    post:\n      operationId: post\n      requestBody:\n        description: The parameters to send with the custom request.\n        content:\n          application/json:\n            schema:\n              type: object\n      summary: Send requests to the Algolia REST API.\n      description: This method allow you to send requests to the Algolia REST API.\n      parameters:\n        - $ref: '#/components/parameters/PathInPath'\n        - $ref: '#/components/parameters/Parameters'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '402':\n          $ref: '#/components/responses/FeatureNotEnabled'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '404':\n          $ref: '#/components/responses/IndexNotFound'\n      tags:\n        - insights\n    put:\n      operationId: put\n      requestBody:\n        description: The parameters to send with the custom request.\n        content:\n          application/json:\n            schema:\n              type: object\n      summary: Send requests to the Algolia REST API.\n      description: This method allow you to send requests to the Algolia REST API.\n      parameters:\n        - $ref: '#/components/parameters/PathInPath'\n        - $ref: '#/components/parameters/Parameters'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '402':\n          $ref: '#/components/responses/FeatureNotEnabled'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '404':\n          $ref: '#/components/responses/IndexNotFound'\n      tags:\n        - insights\n    delete:\n      operationId: del\n      summary: Send requests to the Algolia REST API.\n      description: This method allow you to send requests to the Algolia REST API.\n      parameters:\n        - $ref: '#/components/parameters/PathInPath'\n        - $ref: '#/components/parameters/Parameters'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '402':\n          $ref: '#/components/responses/FeatureNotEnabled'\n        '403':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '404':\n          $ref: '#/components/responses/IndexNotFound'\n      tags:\n        - insights\n  /1/events:\n    post:\n      tags:\n        - insights\n      operationId: pushEvents\n      summary: Push events.\n      description: |\n        This command pushes an array of events.\n\n        An event is\n          - an action: `eventName`\n          - performed in a context: `eventType`\n          - at some point in time provided: `timestamp`\n          - by an end user: `userToken`\n          - on something: `index`\n\n\n        Notes:\n          - To be accepted, all events sent must be valid.\n          - The size of the body must be *less than 2 MB*.\n          - When an event is tied to an Algolia search, it must also provide a `queryID`. If that event is a `click`, their absolute `positions` should also be passed.\n          - We consider that an `index` provides access to 2 resources: objects and filters. An event can only interact with a single resource type, but not necessarily on a single item. As such an event will accept an array of `objectIDs` or `filters`.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              title: InsightEvents\n              type: object\n              description: Object containing the events sent.\n              additionalProperties: false\n              required:\n                - events\n              properties:\n                events:\n                  type: array\n                  description: Array of events sent.\n                  items:\n                    title: InsightEvent\n                    type: object\n                    description: Insights event.\n                    additionalProperties: false\n                    maximum: 1000\n                    properties:\n                      eventType:\n                        $ref: '#/components/schemas/eventType'\n                      eventName:\n                        type: string\n                        maximum: 64\n                        description: A user-defined string used to categorize events.\n                      index:\n                        type: string\n                        description: Name of the targeted index.\n                      userToken:\n                        type: string\n                        pattern: '[a-zA-Z0-9_-=/+]{1,128}'\n                        description: \u003e-\n                          A user identifier. Depending if the user is logged-in\n                          or not, several strategies can be used from a\n                          sessionId to a technical identifier. You should always\n                          send pseudonymous or anonymous userTokens.\n                      timestamp:\n                        type: integer\n                        format: int64\n                        description: \u003e-\n                          Time of the event expressed in milliseconds since the\n                          Unix epoch.\n                      queryID:\n                        type: string\n                        description: \u003e-\n                          Algolia queryID. This is required when an event is\n                          tied to a search.\n                      objectIDs:\n                        type: array\n                        description: \u003e-\n                          An array of index objectID. Limited to 20 objects. An\n                          event can’t have both objectIDs and filters at the\n                          same time.\n                        items:\n                          type: string\n                      filters:\n                        type: array\n                        description: \u003e-\n                          An array of filters. Limited to 10 filters. An event\n                          can’t have both objectIDs and filters at the same\n                          time.\n                        items:\n                          type: string\n                      positions:\n                        type: array\n                        description: \u003e-\n                          Position of the click in the list of Algolia search\n                          results. This field is required if a queryID is\n                          provided. One position must be provided for each\n                          objectID.\n                        items:\n                          type: integer\n                    required:\n                      - eventType\n                      - eventName\n                      - index\n                      - userToken\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                title: pushEventsResponse\n                type: object\n                additionalProperties: false\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n                    description: A message confirming the event push.\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '413':\n          $ref: '#/components/responses/UnprocessableEntity'\n        '422':\n          $ref: '#/components/responses/RequestEntityTooLarge'\n",
			"canonicalURL": "/github.com/algolia/api-clients-automation@86c6168fbf836c9ef55cb1d0b4e053327ccff590/-/blob/specs/bundled/insights.yml",
			"externalURLs": [
				{
					"url": "https://github.com/algolia/api-clients-automation/blob/86c6168fbf836c9ef55cb1d0b4e053327ccff590/specs/bundled/insights.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/1/events\": post: requestBody: contents: media: \"application/json\": generate schema: field events: item: field userToken: string validator: pattern: regexp2: error parsing regexp: [_-=] range in reverse order in `[a-zA-Z0-9_-=/+]{1,128}`"
}