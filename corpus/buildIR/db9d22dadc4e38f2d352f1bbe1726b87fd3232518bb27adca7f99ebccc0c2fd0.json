{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/spaship/spaship"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "packages/api/openapi.yml",
			"byteSize": 8191,
			"content": "openapi: 3.0.0\ninfo:\n  title: SPAship API\n  description: The RESTFul API of SPAship\n  termsOfService: http://spaship.io/terms/\n  contact:\n    name: SPAship\n    url: http://github.com/spaship/spaship\n    email: spaship@redhat.com\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  version: 1.0.0\nservers:\n  - url:\n    description: Current server\ntags:\n  - name: application\n    description: Everything about your SPA\n  - name: apiKey\n    description: Everything about your API Key\npaths:\n  /applications:\n    get:\n      summary: Get all applications\n      tags:\n        - application\n      responses:\n        200:\n          description: A list of applications.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/APIResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/Application\"\n      security:\n        - bearerAuth: []\n        - api_key: []\n    post:\n      summary: Create an application entity only\n      tags:\n        - application\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Application\"\n      responses:\n        201:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/APIResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        $ref: \"#/components/schemas/Application\"\n      security:\n        - bearerAuth: []\n        - api_key: []\n  /applications/deploy:\n    post:\n      summary: Create an application entity and upload file\n      tags:\n        - application\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                path:\n                  type: string\n                ref:\n                  type: string\n                upload:\n                  type: string\n                  format: binary\n              required:\n                - name\n                - path\n                - ref\n                - upload\n      responses:\n        201:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/APIResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        $ref: \"#/components/schemas/Application\"\n      security:\n        - bearerAuth: []\n        - api_key: []\n  /applications/{name}:\n    get:\n      summary: Get an application details\n      tags:\n        - application\n      parameters:\n        - name: name\n          in: path\n          description: Name of application to use\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/APIResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        $ref: \"#/components/schemas/Application\"\n    put:\n      summary: Update an application entity\n      tags:\n        - application\n      parameters:\n        - name: name\n          in: path\n          description: Name of application to use\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Application\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/APIResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        $ref: \"#/components/schemas/Application\"\n      security:\n        - bearerAuth: []\n        - api_key: []\n    delete:\n      summary: Remove an application\n      tags:\n        - application\n      parameters:\n        - name: name\n          in: path\n          description: Name of application to use\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/APIResponse\"\n      security:\n        - bearerAuth: []\n        - api_key: []\n  /apiKeys:\n    get:\n      summary: Get all API Keys\n      tags:\n        - apiKey\n      responses:\n        200:\n          description: A list of API Keys.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/APIResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/APIKey\"\n      security:\n        - bearerAuth: []\n    post:\n      summary: Create an API Key\n      tags:\n        - apiKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/APIKey\"\n      responses:\n        201:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/APIResponse\"\n                  - type: object\n                    properties:\n                      data:\n                        $ref: \"#/components/schemas/APIKey\"\n      security:\n        - bearerAuth: []\n  /apiKeys/{label}:\n    delete:\n      summary: Delete an API Key\n      tags:\n        - apiKey\n      parameters:\n        - name: label\n          in: path\n          description: Label of API Key to use\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/APIResponse\"\n      security:\n        - bearerAuth: []\n\ncomponents:\n  schemas:\n    Application:\n      type: object\n      properties:\n        name:\n          type: string\n        path:\n          type: string\n        ref:\n          type: string\n        timestamp:\n          type: string\n          format: date\n          readOnly: true\n      required:\n        - name\n        - path\n        - ref\n    APIKey:\n      type: object\n      properties:\n        label:\n          type: string\n        shortKey:\n          type: string\n          readOnly: true\n        hashKey:\n          type: string\n          readOnly: true\n        expiredDate:\n          type: string\n          format: date\n          nullable: true\n        createdAt:\n          type: string\n          format: date\n          readOnly: true\n      required:\n        - label\n    APIResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n            - success\n            - fail\n            - error\n        data:\n          oneOf:\n            - $ref: \"#/components/schemas/Application\"\n            - $ref: \"#/components/schemas/APIKey\"\n            - type: array\n              items:\n                $ref: \"#/components/schemas/Application\"\n            - type: array\n              items:\n                $ref: \"#/components/schemas/APIKey\"\n        message:\n          type: string\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: x-api-key\n      in: header\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/spaship/spaship@e31db43e6023e1e039bf67c85ad9caaa2381927d/-/blob/packages/api/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/spaship/spaship/blob/e31db43e6023e1e039bf67c85ad9caaa2381927d/packages/api/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/applications\": get: responses: 200: contents: application/json: generate schema: allOf: merge properties: try to merge conflicting property schemas: schema type mismatch: array and "
}