{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/backup/2018-11-15/openapi.yaml",
			"byteSize": 325457,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-11-15'\n  x-release: v4\n  title: AWS Backup\n  description: '<fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: backup\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/backup-2018-11-15.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/backup/'\nservers:\n  - url: 'http://backup.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS Backup multi-region endpoint\n  - url: 'https://backup.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS Backup multi-region endpoint\n  - url: 'http://backup.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Backup endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://backup.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Backup endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /backup/plans/:\n    put:\n      operationId: CreateBackupPlan\n      description: '<p>Creates a backup plan using a backup plan name and backup rules. A backup plan is a document that contains information that Backup uses to schedule tasks that create recovery points for resources.</p> <p>If you call <code>CreateBackupPlan</code> with a plan that already exists, you receive an <code>AlreadyExistsException</code> exception.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBackupPlanOutput'\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '481':\n          description: AlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlreadyExistsException'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - BackupPlan\n              properties:\n                BackupPlan:\n                  description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of Amazon Web Services resources. '\n                  type: object\n                  properties:\n                    BackupPlanName:\n                      allOf:\n                        - $ref: '#/components/schemas/BackupPlanName'\n                        - description: The optional display name of a backup plan.\n                    Rules:\n                      allOf:\n                        - $ref: '#/components/schemas/BackupRulesInput'\n                        - description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'\n                    AdvancedBackupSettings:\n                      allOf:\n                        - $ref: '#/components/schemas/AdvancedBackupSettings'\n                        - description: Specifies a list of <code>BackupOptions</code> for each resource type. These settings are only available for Windows Volume Shadow Copy Service (VSS) backup jobs.\n                BackupPlanTags:\n                  description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.'\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                CreatorRequestId:\n                  description: 'Identifies the request and allows failed requests to be retried without the risk of running the operation twice. If the request includes a <code>CreatorRequestId</code> that matches an existing backup plan, that plan is returned. This parameter is optional.'\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListBackupPlans\n      description: 'Returns a list of all active backup plans for an authenticated account. The list contains information such as Amazon Resource Names (ARNs), plan IDs, creation and deletion dates, version IDs, plan names, and creator request IDs.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackupPlansOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: includeDeleted\n          in: query\n          required: false\n          description: A Boolean value with a default value of <code>FALSE</code> that returns deleted backup plans when set to <code>TRUE</code>.\n          schema:\n            type: boolean\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  '/backup/plans/{backupPlanId}/selections/':\n    put:\n      operationId: CreateBackupSelection\n      description: '<p>Creates a JSON document that specifies a set of resources to assign to a backup plan. Resources can be included by specifying patterns for a <code>ListOfTags</code> and selected <code>Resources</code>. </p> <p>For example, consider the following patterns:</p> <ul> <li> <p> <code>Resources: \"arn:aws:ec2:region:account-id:volume/volume-id\"</code> </p> </li> <li> <p> <code>ConditionKey:\"department\"</code> </p> <p> <code>ConditionValue:\"finance\"</code> </p> <p> <code>ConditionType:\"StringEquals\"</code> </p> </li> <li> <p> <code>ConditionKey:\"importance\"</code> </p> <p> <code>ConditionValue:\"critical\"</code> </p> <p> <code>ConditionType:\"StringEquals\"</code> </p> </li> </ul> <p>Using these patterns would back up all Amazon Elastic Block Store (Amazon EBS) volumes that are tagged as <code>\"department=finance\"</code>, <code>\"importance=critical\"</code>, in addition to an EBS volume with the specified volume ID.</p> <p>Resources and conditions are additive in that all resources that match the pattern are selected. This shouldn''t be confused with a logical AND, where all conditions must match. The matching patterns are logically put together using the OR operator. In other words, all patterns that match are selected for backup.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBackupSelectionOutput'\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '481':\n          description: AlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlreadyExistsException'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupPlanId\n          in: path\n          required: true\n          description: Uniquely identifies the backup plan to be associated with the selection of resources.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - BackupSelection\n              properties:\n                BackupSelection:\n                  description: Used to specify a set of resources to a backup plan.\n                  type: object\n                  properties:\n                    SelectionName:\n                      allOf:\n                        - $ref: '#/components/schemas/BackupSelectionName'\n                        - description: The display name of a resource selection document.\n                    IamRoleArn:\n                      allOf:\n                        - $ref: '#/components/schemas/IAMRoleArn'\n                        - description: 'The ARN of the IAM role that Backup uses to authenticate when backing up the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n                    Resources:\n                      allOf:\n                        - $ref: '#/components/schemas/ResourceArns'\n                        - description: An array of strings that contain Amazon Resource Names (ARNs) of resources to assign to a backup plan.\n                    ListOfTags:\n                      allOf:\n                        - $ref: '#/components/schemas/ListOfTags'\n                        - description: 'An array of conditions used to specify a set of resources to assign to a backup plan; for example, <code>\"StringEquals\": {\"ec2:ResourceTag/Department\": \"accounting\"</code>. Assigns the backup plan to every resource with at least one matching tag.'\n                CreatorRequestId:\n                  description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListBackupSelections\n      description: Returns an array containing metadata of the resources associated with the target backup plan.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackupSelectionsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupPlanId\n          in: path\n          required: true\n          description: Uniquely identifies a backup plan.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  '/backup-vaults/{backupVaultName}':\n    put:\n      operationId: CreateBackupVault\n      description: '<p>Creates a logical container where backups are stored. A <code>CreateBackupVault</code> request includes a name, optionally one or more resource tags, an encryption key, and a request ID.</p> <note> <p>Do not include sensitive data, such as passport numbers, in the name of a backup vault.</p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBackupVaultOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '484':\n          description: AlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlreadyExistsException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                BackupVaultTags:\n                  description: Metadata that you can assign to help organize the resources that you create. Each tag is a key-value pair.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                EncryptionKeyArn:\n                  description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'\n                  type: string\n                CreatorRequestId:\n                  description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DeleteBackupVault\n      description: Deletes the backup vault identified by its name. A vault can be deleted only if it is empty.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n    get:\n      operationId: DescribeBackupVault\n      description: Returns metadata about a backup vault specified by its name.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeBackupVaultOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n  /audit/frameworks:\n    post:\n      operationId: CreateFramework\n      description: 'Creates a framework with one or more controls. A framework is a collection of controls that you can use to evaluate your backup practices. By using pre-built customizable controls to define your policies, you can evaluate whether your backup practices comply with your policies. To get insights into the compliance status of your frameworks, you can set up automatic daily reports.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateFrameworkOutput'\n        '480':\n          description: AlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlreadyExistsException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FrameworkName\n                - FrameworkControls\n              properties:\n                FrameworkName:\n                  description: 'The unique name of the framework. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).'\n                  type: string\n                  pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n                  minLength: 1\n                  maxLength: 256\n                FrameworkDescription:\n                  description: 'An optional description of the framework with a maximum of 1,024 characters.'\n                  type: string\n                  pattern: .*\\S.*\n                  minLength: 0\n                  maxLength: 1024\n                FrameworkControls:\n                  description: 'A list of the controls that make up the framework. Each control in the list has a name, input parameters, and scope.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/FrameworkControl'\n                IdempotencyToken:\n                  description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>CreateFrameworkInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n                  type: string\n                FrameworkTags:\n                  description: Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListFrameworks\n      description: Returns a list of all frameworks for an Amazon Web Services account and Amazon Web Services Region.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListFrameworksOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: MaxResults\n          in: query\n          required: false\n          description: 'The number of desired results from 1 to 1000. Optional. If unspecified, the query will return 1 MB of data.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: NextToken\n          in: query\n          required: false\n          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'\n          schema:\n            type: string\n  /audit/report-plans:\n    post:\n      operationId: CreateReportPlan\n      description: '<p>Creates a report plan. A report plan is a document that contains information about the contents of the report and where Backup will deliver it.</p> <p>If you call <code>CreateReportPlan</code> with a plan that already exists, you receive an <code>AlreadyExistsException</code> exception.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateReportPlanOutput'\n        '480':\n          description: AlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlreadyExistsException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ReportPlanName\n                - ReportDeliveryChannel\n                - ReportSetting\n              properties:\n                ReportPlanName:\n                  description: 'The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).'\n                  type: string\n                  pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n                  minLength: 1\n                  maxLength: 256\n                ReportPlanDescription:\n                  description: 'An optional description of the report plan with a maximum of 1,024 characters.'\n                  type: string\n                  pattern: .*\\S.*\n                  minLength: 0\n                  maxLength: 1024\n                ReportDeliveryChannel:\n                  description: 'Contains information from your report plan about where to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.'\n                  type: object\n                  properties:\n                    S3BucketName:\n                      allOf:\n                        - $ref: '#/components/schemas/string'\n                        - description: The unique name of the S3 bucket that receives your reports.\n                    S3KeyPrefix:\n                      allOf:\n                        - $ref: '#/components/schemas/string'\n                        - description: 'The prefix for where Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/<code>prefix</code>/Backup/us-west-2/year/month/day/report-name. If not specified, there is no prefix.'\n                    Formats:\n                      allOf:\n                        - $ref: '#/components/schemas/FormatList'\n                        - description: 'A list of the format of your reports: <code>CSV</code>, <code>JSON</code>, or both. If not specified, the default format is <code>CSV</code>.'\n                ReportSetting:\n                  description: Contains detailed information about a report setting.\n                  type: object\n                  properties:\n                    ReportTemplate:\n                      allOf:\n                        - $ref: '#/components/schemas/string'\n                        - description: '<p>Identifies the report template for the report. Reports are built using a report template. The report templates are:</p> <p> <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>'\n                ReportPlanTags:\n                  description: Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/string'\n                IdempotencyToken:\n                  description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>CreateReportPlanInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListReportPlans\n      description: 'Returns a list of your report plans. For detailed information about a single report plan, use <code>DescribeReportPlan</code>.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListReportPlansOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: MaxResults\n          in: query\n          required: false\n          description: 'The number of desired results from 1 to 1000. Optional. If unspecified, the query will return 1 MB of data.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: NextToken\n          in: query\n          required: false\n          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'\n          schema:\n            type: string\n  '/backup/plans/{backupPlanId}':\n    delete:\n      operationId: DeleteBackupPlan\n      description: 'Deletes a backup plan. A backup plan can only be deleted after all associated selections of resources have been deleted. Deleting a backup plan deletes the current version of a backup plan. Previous versions, if any, will still exist.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBackupPlanOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters:\n        - name: backupPlanId\n          in: path\n          required: true\n          description: Uniquely identifies a backup plan.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: UpdateBackupPlan\n      description: Updates an existing backup plan identified by its <code>backupPlanId</code> with the input document in JSON format. The new version is uniquely identified by a <code>VersionId</code>.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateBackupPlanOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupPlanId\n          in: path\n          required: true\n          description: Uniquely identifies a backup plan.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - BackupPlan\n              properties:\n                BackupPlan:\n                  description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of Amazon Web Services resources. '\n                  type: object\n                  properties:\n                    BackupPlanName:\n                      allOf:\n                        - $ref: '#/components/schemas/BackupPlanName'\n                        - description: The optional display name of a backup plan.\n                    Rules:\n                      allOf:\n                        - $ref: '#/components/schemas/BackupRulesInput'\n                        - description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'\n                    AdvancedBackupSettings:\n                      allOf:\n                        - $ref: '#/components/schemas/AdvancedBackupSettings'\n                        - description: Specifies a list of <code>BackupOptions</code> for each resource type. These settings are only available for Windows Volume Shadow Copy Service (VSS) backup jobs.\n  '/backup/plans/{backupPlanId}/selections/{selectionId}':\n    delete:\n      operationId: DeleteBackupSelection\n      description: Deletes the resource selection associated with a backup plan that is specified by the <code>SelectionId</code>.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupPlanId\n          in: path\n          required: true\n          description: Uniquely identifies a backup plan.\n          schema:\n            type: string\n        - name: selectionId\n          in: path\n          required: true\n          description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetBackupSelection\n      description: Returns selection metadata and a document in JSON format that specifies a list of resources that are associated with a backup plan.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackupSelectionOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupPlanId\n          in: path\n          required: true\n          description: Uniquely identifies a backup plan.\n          schema:\n            type: string\n        - name: selectionId\n          in: path\n          required: true\n          description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.\n          schema:\n            type: string\n  '/backup-vaults/{backupVaultName}/access-policy':\n    delete:\n      operationId: DeleteBackupVaultAccessPolicy\n      description: Deletes the policy document that manages permissions on a backup vault.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetBackupVaultAccessPolicy\n      description: Returns the access policy document that is associated with the named backup vault.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackupVaultAccessPolicyOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n    put:\n      operationId: PutBackupVaultAccessPolicy\n      description: Sets a resource-based policy that is used to manage access permissions on the target backup vault. Requires a backup vault name and an access policy document in JSON format.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Policy:\n                  description: The backup vault access policy document in JSON format.\n                  type: string\n  '/backup-vaults/{backupVaultName}/notification-configuration':\n    delete:\n      operationId: DeleteBackupVaultNotifications\n      description: Deletes event notifications for the specified backup vault.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetBackupVaultNotifications\n      description: Returns event notifications for the specified backup vault.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackupVaultNotificationsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n    put:\n      operationId: PutBackupVaultNotifications\n      description: Turns on notifications on a backup vault for the specified topic and events.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - SNSTopicArn\n                - BackupVaultEvents\n              properties:\n                SNSTopicArn:\n                  description: 'The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events; for example, <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>.'\n                  type: string\n                BackupVaultEvents:\n                  description: '<p>An array of events that indicate the status of jobs to back up resources to the backup vault.</p> <note> <p>The following events are supported:</p> <p> <code>BACKUP_JOB_STARTED</code>, <code>BACKUP_JOB_COMPLETED</code>,</p> <p> <code>COPY_JOB_STARTED</code>, <code>COPY_JOB_SUCCESSFUL</code>, <code>COPY_JOB_FAILED</code>,</p> <p> <code>RESTORE_JOB_STARTED</code>, <code>RESTORE_JOB_COMPLETED</code>, and <code>RECOVERY_POINT_MODIFIED</code>.</p> <p>To find failed backup jobs, use <code>BACKUP_JOB_COMPLETED</code> and filter using event metadata.</p> <p>Other events in the following list are deprecated.</p> </note>'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/BackupVaultEvent'\n  '/audit/frameworks/{frameworkName}':\n    delete:\n      operationId: DeleteFramework\n      description: Deletes the framework specified by a framework name.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: frameworkName\n          in: path\n          required: true\n          description: The unique name of a framework.\n          schema:\n            type: string\n            pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n            minLength: 1\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeFramework\n      description: Returns the framework details for the specified <code>FrameworkName</code>.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeFrameworkOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: frameworkName\n          in: path\n          required: true\n          description: The unique name of a framework.\n          schema:\n            type: string\n            pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n            minLength: 1\n            maxLength: 256\n    put:\n      operationId: UpdateFramework\n      description: Updates an existing framework identified by its <code>FrameworkName</code> with the input document in JSON format.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateFrameworkOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: frameworkName\n          in: path\n          required: true\n          description: 'The unique name of a framework. This name is between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).'\n          schema:\n            type: string\n            pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n            minLength: 1\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                FrameworkDescription:\n                  description: 'An optional description of the framework with a maximum 1,024 characters.'\n                  type: string\n                  pattern: .*\\S.*\n                  minLength: 0\n                  maxLength: 1024\n                FrameworkControls:\n                  description: 'A list of the controls that make up the framework. Each control in the list has a name, input parameters, and scope.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/FrameworkControl'\n                IdempotencyToken:\n                  description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>UpdateFrameworkInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n                  type: string\n  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}':\n    delete:\n      operationId: DeleteRecoveryPoint\n      description: '<p>Deletes the recovery point specified by a recovery point ID.</p> <p>If the recovery point ID belongs to a continuous backup, calling this endpoint deletes the existing continuous backup and stops future continuous backup.</p>'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: InvalidResourceStateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidResourceStateException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n        - name: recoveryPointArn\n          in: path\n          required: true\n          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeRecoveryPoint\n      description: 'Returns metadata associated with a recovery point, including ID, status, encryption, and lifecycle.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeRecoveryPointOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n        - name: recoveryPointArn\n          in: path\n          required: true\n          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n          schema:\n            type: string\n    post:\n      operationId: UpdateRecoveryPointLifecycle\n      description: '<p>Sets the transition lifecycle of a recovery point.</p> <p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p> <p>Does not support continuous backups.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRecoveryPointLifecycleOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n        - name: recoveryPointArn\n          in: path\n          required: true\n          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Lifecycle:\n                  description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n                  type: object\n                  properties:\n                    MoveToColdStorageAfterDays:\n                      allOf:\n                        - $ref: '#/components/schemas/Long'\n                        - description: Specifies the number of days after creation that a recovery point is moved to cold storage.\n                    DeleteAfterDays:\n                      allOf:\n                        - $ref: '#/components/schemas/Long'\n                        - description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.\n  '/audit/report-plans/{reportPlanName}':\n    delete:\n      operationId: DeleteReportPlan\n      description: Deletes the report plan specified by a report plan name.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: reportPlanName\n          in: path\n          required: true\n          description: The unique name of a report plan.\n          schema:\n            type: string\n            pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n            minLength: 1\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeReportPlan\n      description: Returns a list of all report plans for an Amazon Web Services account and Amazon Web Services Region.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeReportPlanOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: reportPlanName\n          in: path\n          required: true\n          description: The unique name of a report plan.\n          schema:\n            type: string\n            pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n            minLength: 1\n            maxLength: 256\n    put:\n      operationId: UpdateReportPlan\n      description: Updates an existing report plan identified by its <code>ReportPlanName</code> with the input document in JSON format.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateReportPlanOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: reportPlanName\n          in: path\n          required: true\n          description: 'The unique name of the report plan. This name is between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).'\n          schema:\n            type: string\n            pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n            minLength: 1\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ReportPlanDescription:\n                  description: 'An optional description of the report plan with a maximum 1,024 characters.'\n                  type: string\n                  pattern: .*\\S.*\n                  minLength: 0\n                  maxLength: 1024\n                ReportDeliveryChannel:\n                  description: 'Contains information from your report plan about where to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.'\n                  type: object\n                  properties:\n                    S3BucketName:\n                      allOf:\n                        - $ref: '#/components/schemas/string'\n                        - description: The unique name of the S3 bucket that receives your reports.\n                    S3KeyPrefix:\n                      allOf:\n                        - $ref: '#/components/schemas/string'\n                        - description: 'The prefix for where Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/<code>prefix</code>/Backup/us-west-2/year/month/day/report-name. If not specified, there is no prefix.'\n                    Formats:\n                      allOf:\n                        - $ref: '#/components/schemas/FormatList'\n                        - description: 'A list of the format of your reports: <code>CSV</code>, <code>JSON</code>, or both. If not specified, the default format is <code>CSV</code>.'\n                ReportSetting:\n                  description: Contains detailed information about a report setting.\n                  type: object\n                  properties:\n                    ReportTemplate:\n                      allOf:\n                        - $ref: '#/components/schemas/string'\n                        - description: '<p>Identifies the report template for the report. Reports are built using a report template. The report templates are:</p> <p> <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>'\n                IdempotencyToken:\n                  description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>UpdateReportPlanInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n                  type: string\n  '/backup-jobs/{backupJobId}':\n    get:\n      operationId: DescribeBackupJob\n      description: Returns backup job details for the specified <code>BackupJobId</code>.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeBackupJobOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: DependencyFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyFailureException'\n      parameters:\n        - name: backupJobId\n          in: path\n          required: true\n          description: Uniquely identifies a request to Backup to back up a resource.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: StopBackupJob\n      description: Attempts to cancel a job to create a one-time backup of a resource.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupJobId\n          in: path\n          required: true\n          description: Uniquely identifies a request to Backup to back up a resource.\n          schema:\n            type: string\n  '/copy-jobs/{copyJobId}':\n    get:\n      operationId: DescribeCopyJob\n      description: Returns metadata associated with creating a copy of a resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeCopyJobOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: copyJobId\n          in: path\n          required: true\n          description: Uniquely identifies a copy job.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /global-settings:\n    get:\n      operationId: DescribeGlobalSettings\n      description: 'Describes whether the Amazon Web Services account is opted in to cross-account backup. Returns an error if the account is not a member of an Organizations organization. Example: <code>describe-global-settings --region us-west-2</code> '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeGlobalSettingsOutput'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters: []\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    put:\n      operationId: UpdateGlobalSettings\n      description: Updates whether the Amazon Web Services account is opted in to cross-account backup. Returns an error if the account is not an Organizations management account. Use the <code>DescribeGlobalSettings</code> API to determine the current settings.\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                GlobalSettings:\n                  description: 'A value for <code>isCrossAccountBackupEnabled</code> and a Region. Example: <code>update-global-settings --global-settings isCrossAccountBackupEnabled=false --region us-west-2</code>.'\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/GlobalSettingsValue'\n  '/resources/{resourceArn}':\n    get:\n      operationId: DescribeProtectedResource\n      description: 'Returns information about a saved resource, including the last time it was backed up, its Amazon Resource Name (ARN), and the Amazon Web Services service type of the saved resource.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeProtectedResourceOutput'\n        '480':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /account-settings:\n    get:\n      operationId: DescribeRegionSettings\n      description: 'Returns the current service opt-in settings for the Region. If service opt-in is enabled for a service, Backup tries to protect that service''s resources in this Region, when the resource is included in an on-demand backup or scheduled backup plan. Otherwise, Backup does not try to protect that service''s resources in this Region.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeRegionSettingsOutput'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters: []\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    put:\n      operationId: UpdateRegionSettings\n      description: 'Updates the current service opt-in settings for the Region. If service-opt-in is enabled for a service, Backup tries to protect that service''s resources in this Region, when the resource is included in an on-demand backup or scheduled backup plan. Otherwise, Backup does not try to protect that service''s resources in this Region. Use the <code>DescribeRegionSettings</code> API to determine the resource types that are supported.'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ResourceTypeOptInPreference:\n                  description: Updates the list of services along with the opt-in preferences for the Region.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/IsEnabled'\n  '/audit/report-jobs/{reportJobId}':\n    get:\n      operationId: DescribeReportJob\n      description: Returns the details associated with creating a report as specified by its <code>ReportJobId</code>.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeReportJobOutput'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: reportJobId\n          in: path\n          required: true\n          description: 'The identifier of the report job. A unique, randomly generated, Unicode, UTF-8 encoded string that is at most 1,024 bytes long. The report job ID cannot be edited.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/restore-jobs/{restoreJobId}':\n    get:\n      operationId: DescribeRestoreJob\n      description: Returns metadata associated with a restore job that is specified by a job ID.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeRestoreJobOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: DependencyFailureException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DependencyFailureException'\n      parameters:\n        - name: restoreJobId\n          in: path\n          required: true\n          description: Uniquely identifies the job that restores a recovery point.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/disassociate':\n    post:\n      operationId: DisassociateRecoveryPoint\n      description: '<p>Deletes the specified continuous backup recovery point from Backup and releases control of that continuous backup to the source service, such as Amazon RDS. The source service will continue to create and retain continuous backups using the lifecycle that you specified in your original backup plan.</p> <p>Does not support snapshot backup recovery points.</p>'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: InvalidResourceStateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidResourceStateException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: The unique name of an Backup vault.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n        - name: recoveryPointArn\n          in: path\n          required: true\n          description: An Amazon Resource Name (ARN) that uniquely identifies an Backup recovery point.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backup/plans/{backupPlanId}/toTemplate/':\n    get:\n      operationId: ExportBackupPlanTemplate\n      description: Returns the backup plan that is specified by the plan ID as a backup template.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExportBackupPlanTemplateOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: backupPlanId\n          in: path\n          required: true\n          description: Uniquely identifies a backup plan.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backup/plans/{backupPlanId}/':\n    get:\n      operationId: GetBackupPlan\n      description: 'Returns <code>BackupPlan</code> details for the specified <code>BackupPlanId</code>. The details are the body of a backup plan in JSON format, in addition to plan metadata.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackupPlanOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupPlanId\n          in: path\n          required: true\n          description: Uniquely identifies a backup plan.\n          schema:\n            type: string\n        - name: versionId\n          in: query\n          required: false\n          description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /backup/template/json/toPlan:\n    post:\n      operationId: GetBackupPlanFromJSON\n      description: Returns a valid JSON document specifying a backup plan or an error.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackupPlanFromJSONOutput'\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - BackupPlanTemplateJson\n              properties:\n                BackupPlanTemplateJson:\n                  description: A customer-supplied backup plan document in JSON format.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backup/template/plans/{templateId}/toPlan':\n    get:\n      operationId: GetBackupPlanFromTemplate\n      description: Returns the template specified by its <code>templateId</code> as a backup plan.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackupPlanFromTemplateOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: templateId\n          in: path\n          required: true\n          description: Uniquely identifies a stored backup plan template.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/restore-metadata':\n    get:\n      operationId: GetRecoveryPointRestoreMetadata\n      description: Returns a set of metadata key-value pairs that were used to create the backup.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRecoveryPointRestoreMetadataOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n        - name: recoveryPointArn\n          in: path\n          required: true\n          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /supported-resource-types:\n    get:\n      operationId: GetSupportedResourceTypes\n      description: Returns the Amazon Web Services resource types supported by Backup.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSupportedResourceTypesOutput'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /backup-jobs/:\n    get:\n      operationId: ListBackupJobs\n      description: 'Returns a list of existing backup jobs for an authenticated account for the last 30 days. For a longer period of time, consider using these <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html\">monitoring tools</a>.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackupJobsOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: resourceArn\n          in: query\n          required: false\n          description: Returns only backup jobs that match the specified resource Amazon Resource Name (ARN).\n          schema:\n            type: string\n        - name: state\n          in: query\n          required: false\n          description: Returns only backup jobs that are in the specified state.\n          schema:\n            type: string\n            enum:\n              - CREATED\n              - PENDING\n              - RUNNING\n              - ABORTING\n              - ABORTED\n              - COMPLETED\n              - FAILED\n              - EXPIRED\n        - name: backupVaultName\n          in: query\n          required: false\n          description: 'Returns only backup jobs that will be stored in the specified backup vault. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n        - name: createdBefore\n          in: query\n          required: false\n          description: Returns only backup jobs that were created before the specified date.\n          schema:\n            type: string\n            format: date-time\n        - name: createdAfter\n          in: query\n          required: false\n          description: Returns only backup jobs that were created after the specified date.\n          schema:\n            type: string\n            format: date-time\n        - name: resourceType\n          in: query\n          required: false\n          description: '<p>Returns only backup jobs for the specified resources:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for Storage Gateway</p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n        - name: accountId\n          in: query\n          required: false\n          description: '<p>The account ID to list the jobs from. Returns only backup jobs associated with the specified account ID.</p> <p>If used from an Organizations management account, passing <code>*</code> returns all jobs across the organization.</p>'\n          schema:\n            type: string\n            pattern: '^[0-9]{12}$'\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /backup/template/plans:\n    get:\n      operationId: ListBackupPlanTemplates\n      description: 'Returns metadata of your saved backup plan templates, including the template ID, name, and the creation and deletion dates.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackupPlanTemplatesOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '482':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backup/plans/{backupPlanId}/versions/':\n    get:\n      operationId: ListBackupPlanVersions\n      description: 'Returns version metadata of your backup plans, including Amazon Resource Names (ARNs), backup plan IDs, creation and deletion dates, plan names, and version IDs.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackupPlanVersionsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupPlanId\n          in: path\n          required: true\n          description: Uniquely identifies a backup plan.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /backup-vaults/:\n    get:\n      operationId: ListBackupVaults\n      description: Returns a list of recovery point storage containers along with information about them.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackupVaultsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /copy-jobs/:\n    get:\n      operationId: ListCopyJobs\n      description: Returns metadata about your copy jobs.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListCopyJobsOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return maxResults number of items, NextToken allows you to return more items in your list starting at the location pointed to by the next token. '\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: resourceArn\n          in: query\n          required: false\n          description: 'Returns only copy jobs that match the specified resource Amazon Resource Name (ARN). '\n          schema:\n            type: string\n        - name: state\n          in: query\n          required: false\n          description: Returns only copy jobs that are in the specified state.\n          schema:\n            type: string\n            enum:\n              - CREATED\n              - RUNNING\n              - COMPLETED\n              - FAILED\n        - name: createdBefore\n          in: query\n          required: false\n          description: Returns only copy jobs that were created before the specified date.\n          schema:\n            type: string\n            format: date-time\n        - name: createdAfter\n          in: query\n          required: false\n          description: Returns only copy jobs that were created after the specified date.\n          schema:\n            type: string\n            format: date-time\n        - name: resourceType\n          in: query\n          required: false\n          description: '<p>Returns only backup jobs for the specified resources:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for Storage Gateway</p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n        - name: destinationVaultArn\n          in: query\n          required: false\n          description: 'An Amazon Resource Name (ARN) that uniquely identifies a source backup vault to copy from; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>. '\n          schema:\n            type: string\n        - name: accountId\n          in: query\n          required: false\n          description: The account ID to list the jobs from. Returns only copy jobs associated with the specified account ID.\n          schema:\n            type: string\n            pattern: '^[0-9]{12}$'\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /resources/:\n    get:\n      operationId: ListProtectedResources\n      description: 'Returns an array of resources successfully backed up by Backup, including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListProtectedResourcesOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/backup-vaults/{backupVaultName}/recovery-points/':\n    get:\n      operationId: ListRecoveryPointsByBackupVault\n      description: Returns detailed information about the recovery points stored in a backup vault.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRecoveryPointsByBackupVaultOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: backupVaultName\n          in: path\n          required: true\n          description: '<p>The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.</p> <note> <p>Backup vault name might not be available when a supported service creates the backup.</p> </note>'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: resourceArn\n          in: query\n          required: false\n          description: Returns only recovery points that match the specified resource Amazon Resource Name (ARN).\n          schema:\n            type: string\n        - name: resourceType\n          in: query\n          required: false\n          description: Returns only recovery points that match the specified resource type.\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n        - name: backupPlanId\n          in: query\n          required: false\n          description: Returns only recovery points that match the specified backup plan ID.\n          schema:\n            type: string\n        - name: createdBefore\n          in: query\n          required: false\n          description: Returns only recovery points that were created before the specified timestamp.\n          schema:\n            type: string\n            format: date-time\n        - name: createdAfter\n          in: query\n          required: false\n          description: Returns only recovery points that were created after the specified timestamp.\n          schema:\n            type: string\n            format: date-time\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/resources/{resourceArn}/recovery-points/':\n    get:\n      operationId: ListRecoveryPointsByResource\n      description: '<p>Returns detailed information about all the recovery points of the type specified by a resource Amazon Resource Name (ARN).</p> <note> <p>For Amazon EFS and Amazon EC2, this action only lists recovery points created by Backup.</p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRecoveryPointsByResourceOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: <p>The maximum number of items to be returned.</p> <note> <p>Amazon RDS requires a value of at least 20.</p> </note>\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /audit/report-jobs:\n    get:\n      operationId: ListReportJobs\n      description: Returns details about your report jobs.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListReportJobsOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: ReportPlanName\n          in: query\n          required: false\n          description: Returns only report jobs with the specified report plan name.\n          schema:\n            type: string\n            pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n            minLength: 1\n            maxLength: 256\n        - name: CreationBefore\n          in: query\n          required: false\n          description: 'Returns only report jobs that were created before the date and time specified in Unix format and Coordinated Universal Time (UTC). For example, the value 1516925490 represents Friday, January 26, 2018 12:11:30 AM.'\n          schema:\n            type: string\n            format: date-time\n        - name: CreationAfter\n          in: query\n          required: false\n          description: 'Returns only report jobs that were created after the date and time specified in Unix format and Coordinated Universal Time (UTC). For example, the value 1516925490 represents Friday, January 26, 2018 12:11:30 AM.'\n          schema:\n            type: string\n            format: date-time\n        - name: Status\n          in: query\n          required: false\n          description: '<p>Returns only report jobs that are in the specified status. The statuses are:</p> <p> <code>CREATED | RUNNING | COMPLETED | FAILED</code> </p>'\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          required: false\n          description: 'The number of desired results from 1 to 1000. Optional. If unspecified, the query will return 1 MB of data.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: NextToken\n          in: query\n          required: false\n          description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /restore-jobs/:\n    get:\n      operationId: ListRestoreJobs\n      description: 'Returns a list of jobs that Backup initiated to restore a saved resource, including details about the recovery process.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRestoreJobsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: accountId\n          in: query\n          required: false\n          description: The account ID to list the jobs from. Returns only restore jobs associated with the specified account ID.\n          schema:\n            type: string\n            pattern: '^[0-9]{12}$'\n        - name: createdBefore\n          in: query\n          required: false\n          description: Returns only restore jobs that were created before the specified date.\n          schema:\n            type: string\n            format: date-time\n        - name: createdAfter\n          in: query\n          required: false\n          description: Returns only restore jobs that were created after the specified date.\n          schema:\n            type: string\n            format: date-time\n        - name: status\n          in: query\n          required: false\n          description: Returns only restore jobs associated with the specified job status.\n          schema:\n            type: string\n            enum:\n              - PENDING\n              - RUNNING\n              - COMPLETED\n              - ABORTED\n              - FAILED\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}/':\n    get:\n      operationId: ListTags\n      description: '<p>Returns a list of key-value pairs assigned to a target recovery point, backup plan, or backup vault.</p> <note> <p> <code>ListTags</code> are currently only supported with Amazon EFS backups.</p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: 'An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the type of resource. Valid targets for <code>ListTags</code> are recovery points, backup plans, and backup vaults.'\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /backup-jobs:\n    put:\n      operationId: StartBackupJob\n      description: Starts an on-demand backup job for the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartBackupJobOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - BackupVaultName\n                - ResourceArn\n                - IamRoleArn\n              properties:\n                BackupVaultName:\n                  description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n                  type: string\n                  pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n                ResourceArn:\n                  description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n                  type: string\n                IamRoleArn:\n                  description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n                  type: string\n                IdempotencyToken:\n                  description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartBackupJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n                  type: string\n                StartWindowMinutes:\n                  description: 'A value in minutes after a backup is scheduled before a job will be canceled if it doesn''t start successfully. This value is optional, and the default is 8 hours.'\n                  type: integer\n                CompleteWindowMinutes:\n                  description: 'A value in minutes during which a successfully started backup must complete, or else AWS Backup will cancel the job. This value is optional. This value begins counting down from when the backup was scheduled. It does not add additional time for <code>StartWindowMinutes</code>, or if the backup started later than scheduled.'\n                  type: integer\n                Lifecycle:\n                  description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n                  type: object\n                  properties:\n                    MoveToColdStorageAfterDays:\n                      allOf:\n                        - $ref: '#/components/schemas/Long'\n                        - description: Specifies the number of days after creation that a recovery point is moved to cold storage.\n                    DeleteAfterDays:\n                      allOf:\n                        - $ref: '#/components/schemas/Long'\n                        - description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.\n                RecoveryPointTags:\n                  description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                BackupOptions:\n                  description: '<p>Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs.</p> <p>Valid values: Set to <code>\"WindowsVSS\":\"enabled\"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup. Set to <code>\"WindowsVSS\"\"disabled\"</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p>'\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/BackupOptionValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /copy-jobs:\n    put:\n      operationId: StartCopyJob\n      description: <p>Starts a job to create a one-time copy of the specified resource.</p> <p>Does not support continuous backups.</p>\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartCopyJobOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '485':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - RecoveryPointArn\n                - SourceBackupVaultName\n                - DestinationBackupVaultArn\n                - IamRoleArn\n              properties:\n                RecoveryPointArn:\n                  description: 'An ARN that uniquely identifies a recovery point to use for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. '\n                  type: string\n                SourceBackupVaultName:\n                  description: 'The name of a logical source container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n                  type: string\n                  pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n                DestinationBackupVaultArn:\n                  description: 'An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to copy to; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n                  type: string\n                IamRoleArn:\n                  description: 'Specifies the IAM role ARN used to copy the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n                  type: string\n                IdempotencyToken:\n                  description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartCopyJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n                  type: string\n                Lifecycle:\n                  description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n                  type: object\n                  properties:\n                    MoveToColdStorageAfterDays:\n                      allOf:\n                        - $ref: '#/components/schemas/Long'\n                        - description: Specifies the number of days after creation that a recovery point is moved to cold storage.\n                    DeleteAfterDays:\n                      allOf:\n                        - $ref: '#/components/schemas/Long'\n                        - description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/audit/report-jobs/{reportPlanName}':\n    post:\n      operationId: StartReportJob\n      description: Starts an on-demand report job for the specified report plan.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartReportJobOutput'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: reportPlanName\n          in: path\n          required: true\n          description: The unique name of a report plan.\n          schema:\n            type: string\n            pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n            minLength: 1\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                IdempotencyToken:\n                  description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartReportJobInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /restore-jobs:\n    put:\n      operationId: StartRestoreJob\n      description: Recovers the saved resource identified by an Amazon Resource Name (ARN).\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartRestoreJobOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - RecoveryPointArn\n                - Metadata\n                - IamRoleArn\n              properties:\n                RecoveryPointArn:\n                  description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n                  type: string\n                Metadata:\n                  description: '<p>A set of metadata key-value pairs. Contains information, such as a resource name, required to restore a recovery point.</p> <p> You can get configuration metadata about a resource at the time it was backed up by calling <code>GetRecoveryPointRestoreMetadata</code>. However, values in addition to those provided by <code>GetRecoveryPointRestoreMetadata</code> might be required to restore a resource. For example, you might need to provide a new resource name if the original already exists.</p> <p>You need to specify specific metadata to restore an Amazon Elastic File System (Amazon EFS) instance:</p> <ul> <li> <p> <code>file-system-id</code>: The ID of the Amazon EFS file system that is backed up by Backup. Returned in <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li> <p> <code>Encrypted</code>: A Boolean value that, if true, specifies that the file system is encrypted. If <code>KmsKeyId</code> is specified, <code>Encrypted</code> must be set to <code>true</code>.</p> </li> <li> <p> <code>KmsKeyId</code>: Specifies the Amazon Web Services KMS key that is used to encrypt the restored file system. You can specify a key from another Amazon Web Services account provided that key it is properly shared with your account via Amazon Web Services KMS.</p> </li> <li> <p> <code>PerformanceMode</code>: Specifies the throughput mode of the file system.</p> </li> <li> <p> <code>CreationToken</code>: A user-supplied value that ensures the uniqueness (idempotency) of the request.</p> </li> <li> <p> <code>newFileSystem</code>: A Boolean value that, if true, specifies that the recovery point is restored to a new Amazon EFS file system.</p> </li> <li> <p> <code>ItemsToRestore</code>: An array of one to five strings where each string is a file path. Use <code>ItemsToRestore</code> to restore specific files or directories rather than the entire file system. This parameter is optional. For example, <code>\"itemsToRestore\":\"[\\\"/my.test\\\"]\"</code>.</p> </li> </ul>'\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/MetadataValue'\n                IamRoleArn:\n                  description: 'The Amazon Resource Name (ARN) of the IAM role that Backup uses to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n                  type: string\n                IdempotencyToken:\n                  description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartRestoreJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n                  type: string\n                ResourceType:\n                  description: '<p>Starts a job to restore a recovery point for one of the following resources:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for Storage Gateway</p> </li> </ul>'\n                  type: string\n                  pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    post:\n      operationId: TagResource\n      description: 'Assigns a set of key-value pairs to a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN).'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '484':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the type of the tagged resource.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Tags\n              properties:\n                Tags:\n                  description: Key-value pairs that are used to help organize your resources. You can assign your own metadata to the resources you create.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/untag/{resourceArn}':\n    post:\n      operationId: UntagResource\n      description: 'Removes a set of key-value pairs from a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN)'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: MissingParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MissingParameterValueException'\n        '483':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the type of the tagged resource.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - TagKeyList\n              properties:\n                TagKeyList:\n                  description: A list of keys to identify which key-value tags to remove from a resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateBackupPlanOutput:\n      type: object\n      properties:\n        BackupPlanId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a backup plan.\n        BackupPlanArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        VersionId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.'\n        AdvancedBackupSettings:\n          allOf:\n            - $ref: '#/components/schemas/AdvancedBackupSettings'\n            - description: A list of <code>BackupOptions</code> settings for a resource type. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs.\n    BackupPlanName:\n      type: string\n    BackupRulesInput:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackupRuleInput'\n    AdvancedBackupSettings:\n      type: array\n      items:\n        $ref: '#/components/schemas/AdvancedBackupSetting'\n    TagValue:\n      type: string\n    LimitExceededException: {}\n    AlreadyExistsException: {}\n    InvalidParameterValueException: {}\n    MissingParameterValueException: {}\n    ServiceUnavailableException: {}\n    CreateBackupSelectionOutput:\n      type: object\n      properties:\n        SelectionId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.\n        BackupPlanId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a backup plan.\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a backup selection is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n    BackupSelectionName:\n      type: string\n      pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n    IAMRoleArn:\n      type: string\n    ResourceArns:\n      type: array\n      items:\n        $ref: '#/components/schemas/ARN'\n    ListOfTags:\n      type: array\n      items:\n        $ref: '#/components/schemas/Condition'\n    CreateBackupVaultOutput:\n      type: object\n      properties:\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a backup vault is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n    CreateFrameworkOutput:\n      type: object\n      properties:\n        FrameworkName:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkName'\n            - description: 'The unique name of the framework. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).'\n        FrameworkArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n    FrameworkControl:\n      type: object\n      required:\n        - ControlName\n      properties:\n        ControlName:\n          allOf:\n            - $ref: '#/components/schemas/ControlName'\n            - description: The name of a control. This name is between 1 and 256 characters.\n        ControlInputParameters:\n          allOf:\n            - $ref: '#/components/schemas/ControlInputParameters'\n            - description: A list of <code>ParameterName</code> and <code>ParameterValue</code> pairs.\n        ControlScope:\n          allOf:\n            - $ref: '#/components/schemas/ControlScope'\n            - description: 'The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans. For more information, see <code>ControlScope</code>.'\n      description: Contains detailed information about all of the controls of a framework. Each framework must contain at least one control.\n    string:\n      type: string\n    CreateReportPlanOutput:\n      type: object\n      properties:\n        ReportPlanName:\n          allOf:\n            - $ref: '#/components/schemas/ReportPlanName'\n            - description: The unique name of the report plan.\n        ReportPlanArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n    FormatList:\n      type: array\n      items:\n        $ref: '#/components/schemas/string'\n    DeleteBackupPlanOutput:\n      type: object\n      properties:\n        BackupPlanId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a backup plan.\n        BackupPlanArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'\n        DeletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        VersionId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'\n    ResourceNotFoundException: {}\n    InvalidRequestException: {}\n    ConflictException: {}\n    InvalidResourceStateException: {}\n    DescribeBackupJobOutput:\n      type: object\n      properties:\n        AccountId:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: Returns the account ID that owns the backup job.\n        BackupJobId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a request to Backup to back up a resource.\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An ARN that uniquely identifies a saved resource. The format of the ARN depends on the resource type.\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CompletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a job to create a backup job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        State:\n          allOf:\n            - $ref: '#/components/schemas/BackupJobState'\n            - description: The current state of a resource recovery point.\n        StatusMessage:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A detailed message explaining the status of the job to back up a resource.\n        PercentDone:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Contains an estimated percentage that is complete of a job at the time the job status was queried.\n        BackupSizeInBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The size, in bytes, of a backup.'\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/RecoveryPointCreator'\n            - description: 'Contains identifying information about the creation of a backup job, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan that is used to create it.'\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: 'The type of Amazon Web Services resource to be backed up; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'\n        BytesTransferred:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The size in bytes transferred to a backup vault at the time that the job status was queried.\n        ExpectedCompletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a job to back up resources is expected to be completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>ExpectedCompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        StartBy:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'Specifies the time in Unix format and Coordinated Universal Time (UTC) when a backup job must be started before it is canceled. The value is calculated by adding the start window to the scheduled time. So if the scheduled time were 6:00 PM and the start window is 2 hours, the <code>StartBy</code> time would be 8:00 PM on the date specified. The value of <code>StartBy</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        BackupOptions:\n          allOf:\n            - $ref: '#/components/schemas/BackupOptions'\n            - description: Represents the options specified as part of backup plan or on-demand backup job.\n        BackupType:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'Represents the actual backup type selected for a backup job. For example, if a successful Windows Volume Shadow Copy Service (VSS) backup was taken, <code>BackupType</code> returns <code>\"WindowsVSS\"</code>. If <code>BackupType</code> is empty, then the backup type was a regular backup.'\n    DependencyFailureException: {}\n    DescribeBackupVaultOutput:\n      type: object\n      properties:\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a backup vault is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CreatorRequestId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n        NumberOfRecoveryPoints:\n          allOf:\n            - $ref: '#/components/schemas/long'\n            - description: The number of recovery points that are stored in a backup vault.\n    DescribeCopyJobOutput:\n      type: object\n      properties:\n        CopyJob:\n          allOf:\n            - $ref: '#/components/schemas/CopyJob'\n            - description: Contains detailed information about a copy job.\n    DescribeFrameworkOutput:\n      type: object\n      properties:\n        FrameworkName:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkName'\n            - description: The unique name of a framework.\n        FrameworkArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        FrameworkDescription:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkDescription'\n            - description: An optional description of the framework.\n        FrameworkControls:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkControls'\n            - description: 'A list of the controls that make up the framework. Each control in the list has a name, input parameters, and scope.'\n        CreationTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        DeploymentStatus:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: '<p>The deployment status of a framework. The statuses are:</p> <p> <code>CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED | FAILED</code> </p>'\n        FrameworkStatus:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: '<p>A framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn Config recording on or off for each resource. The statuses are:</p> <ul> <li> <p> <code>ACTIVE</code> when recording is turned on for all resources governed by the framework.</p> </li> <li> <p> <code>PARTIALLY_ACTIVE</code> when recording is turned off for at least one resource governed by the framework.</p> </li> <li> <p> <code>INACTIVE</code> when recording is turned off for all resources governed by the framework.</p> </li> <li> <p> <code>UNAVAILABLE</code> when Backup is unable to validate recording status at this time.</p> </li> </ul>'\n        IdempotencyToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>DescribeFrameworkOutput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n    DescribeGlobalSettingsOutput:\n      type: object\n      properties:\n        GlobalSettings:\n          allOf:\n            - $ref: '#/components/schemas/GlobalSettings'\n            - description: The status of the flag <code>isCrossAccountBackupEnabled</code>.\n        LastUpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that the flag <code>isCrossAccountBackupEnabled</code> was last updated. This update is in Unix format and Coordinated Universal Time (UTC). The value of <code>LastUpdateTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n    DescribeProtectedResourceOutput:\n      type: object\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: 'The type of Amazon Web Services resource saved as a recovery point; for example, an Amazon EBS volume or an Amazon RDS database.'\n        LastBackupTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a resource was last backed up, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastBackupTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n    DescribeRecoveryPointOutput:\n      type: object\n      properties:\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        SourceBackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies the source vault where the resource was originally backed up in; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:BackupVault</code>. If the recovery is restored to the same Amazon Web Services account or Region, this value will be <code>null</code>.'\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An ARN that uniquely identifies a saved resource. The format of the ARN depends on the resource type.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: 'The type of Amazon Web Services resource to save as a recovery point; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/RecoveryPointCreator'\n            - description: 'Contains identifying information about the creation of a recovery point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan used to create it.'\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/RecoveryPointStatus'\n            - description: '<p>A status code specifying the state of the recovery point.</p> <p> <code>PARTIAL</code> status indicates Backup could not create the recovery point before the backup window closed. To increase your backup plan window using the API, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateBackupPlan.html\">UpdateBackupPlan</a>. You can also increase your backup plan window using the Console by choosing and editing your backup plan.</p> <p> <code>EXPIRED</code> status indicates that the recovery point has exceeded its retention period, but Backup lacks permission or is otherwise unable to delete it. To manually delete these recovery points, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/gs-cleanup-resources.html#cleanup-backups\"> Step 3: Delete the recovery points</a> in the <i>Clean up resources</i> section of <i>Getting started</i>.</p>'\n        StatusMessage:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A status message explaining the reason for the recovery point deletion failure.\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CompletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a job to create a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        BackupSizeInBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The size, in bytes, of a backup.'\n        CalculatedLifecycle:\n          allOf:\n            - $ref: '#/components/schemas/CalculatedLifecycle'\n            - description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.\n        Lifecycle:\n          allOf:\n            - $ref: '#/components/schemas/Lifecycle'\n            - description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups that are transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'The server-side encryption key used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'\n        IsEncrypted:\n          allOf:\n            - $ref: '#/components/schemas/boolean'\n            - description: 'A Boolean value that is returned as <code>TRUE</code> if the specified recovery point is encrypted, or <code>FALSE</code> if the recovery point is not encrypted.'\n        StorageClass:\n          allOf:\n            - $ref: '#/components/schemas/StorageClass'\n            - description: Specifies the storage class of the recovery point. Valid values are <code>WARM</code> or <code>COLD</code>.\n        LastRestoreTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a recovery point was last restored, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastRestoreTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n    DescribeRegionSettingsOutput:\n      type: object\n      properties:\n        ResourceTypeOptInPreference:\n          allOf:\n            - $ref: '#/components/schemas/ResourceTypeOptInPreference'\n            - description: Returns a list of all services along with the opt-in preferences in the Region.\n    DescribeReportJobOutput:\n      type: object\n      properties:\n        ReportJob:\n          allOf:\n            - $ref: '#/components/schemas/ReportJob'\n            - description: 'A list of information about a report job, including its completion and creation times, report destination, unique report job ID, Amazon Resource Name (ARN), report template, status, and status message.'\n    DescribeReportPlanOutput:\n      type: object\n      properties:\n        ReportPlan:\n          allOf:\n            - $ref: '#/components/schemas/ReportPlan'\n            - description: 'Returns details about the report plan that is specified by its name. These details include the report plan''s Amazon Resource Name (ARN), description, settings, delivery channel, deployment status, creation time, and last attempted and successful run times.'\n    DescribeRestoreJobOutput:\n      type: object\n      properties:\n        AccountId:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: Returns the account ID that owns the restore job.\n        RestoreJobId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies the job that restores a recovery point.\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a restore job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CompletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/RestoreJobStatus'\n            - description: Status code specifying the state of the job that is initiated by Backup to restore a recovery point.\n        StatusMessage:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A message showing the status of a job to restore a recovery point.\n        PercentDone:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Contains an estimated percentage that is complete of a job at the time the job status was queried.\n        BackupSizeInBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The size, in bytes, of the restored resource.'\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n        ExpectedCompletionTimeMinutes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The amount of time in minutes that a job restoring a recovery point is expected to take.\n        CreatedResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource whose recovery point is being restored. The format of the ARN depends on the resource type of the backed-up resource.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: Returns metadata associated with a restore job listed by resource type.\n    ExportBackupPlanTemplateOutput:\n      type: object\n      properties:\n        BackupPlanTemplateJson:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: <p>The body of a backup plan template in JSON format.</p> <note> <p>This is a signed JSON document that cannot be modified before being passed to <code>GetBackupPlanFromJSON.</code> </p> </note>\n    GetBackupPlanOutput:\n      type: object\n      properties:\n        BackupPlan:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlan'\n            - description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.\n        BackupPlanId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a backup plan.\n        BackupPlanArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'\n        VersionId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'\n        CreatorRequestId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        DeletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        LastExecutionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The last time a job to back up resources was run with this backup plan. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastExecutionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        AdvancedBackupSettings:\n          allOf:\n            - $ref: '#/components/schemas/AdvancedBackupSettings'\n            - description: Contains a list of <code>BackupOptions</code> for each resource type. The list is populated only if the advanced option is set for the backup plan.\n    GetBackupPlanFromJSONOutput:\n      type: object\n      properties:\n        BackupPlan:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlan'\n            - description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.\n    GetBackupPlanFromTemplateOutput:\n      type: object\n      properties:\n        BackupPlanDocument:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlan'\n            - description: 'Returns the body of a backup plan based on the target template, including the name, rules, and backup vault of the plan.'\n    GetBackupSelectionOutput:\n      type: object\n      properties:\n        BackupSelection:\n          allOf:\n            - $ref: '#/components/schemas/BackupSelection'\n            - description: Specifies the body of a request to assign a set of resources to a backup plan.\n        SelectionId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.\n        BackupPlanId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a backup plan.\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a backup selection is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CreatorRequestId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n    GetBackupVaultAccessPolicyOutput:\n      type: object\n      properties:\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        Policy:\n          allOf:\n            - $ref: '#/components/schemas/IAMPolicy'\n            - description: The backup vault access policy document in JSON format.\n    GetBackupVaultNotificationsOutput:\n      type: object\n      properties:\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        SNSTopicArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies an Amazon Simple Notification Service (Amazon SNS) topic; for example, <code>arn:aws:sns:us-west-2:111122223333:MyTopic</code>.'\n        BackupVaultEvents:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultEvents'\n            - description: An array of events that indicate the status of jobs to back up resources to the backup vault.\n    GetRecoveryPointRestoreMetadataOutput:\n      type: object\n      properties:\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        RestoreMetadata:\n          allOf:\n            - $ref: '#/components/schemas/Metadata'\n            - description: The set of metadata key-value pairs that describe the original configuration of the backed-up resource. These values vary depending on the service that is being restored.\n    GetSupportedResourceTypesOutput:\n      type: object\n      properties:\n        ResourceTypes:\n          allOf:\n            - $ref: '#/components/schemas/ResourceTypes'\n            - description: '<p>Contains a string with the supported Amazon Web Services resource types:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for Storage Gateway</p> </li> </ul>'\n    ListBackupJobsOutput:\n      type: object\n      properties:\n        BackupJobs:\n          allOf:\n            - $ref: '#/components/schemas/BackupJobsList'\n            - description: An array of structures containing metadata about your backup jobs returned in JSON format.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n    ListBackupPlanTemplatesOutput:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n        BackupPlanTemplatesList:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlanTemplatesList'\n            - description: An array of template list items containing metadata about your saved templates.\n    ListBackupPlanVersionsOutput:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n        BackupPlanVersionsList:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlanVersionsList'\n            - description: An array of version list items containing metadata about your backup plans.\n    ListBackupPlansOutput:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n        BackupPlansList:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlansList'\n            - description: An array of backup plan list items containing metadata about your saved backup plans.\n    ListBackupSelectionsOutput:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n        BackupSelectionsList:\n          allOf:\n            - $ref: '#/components/schemas/BackupSelectionsList'\n            - description: An array of backup selection list items containing metadata about each resource in the list.\n    ListBackupVaultsOutput:\n      type: object\n      properties:\n        BackupVaultList:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultList'\n            - description: 'An array of backup vault list members containing vault metadata, including Amazon Resource Name (ARN), display name, creation date, number of saved recovery points, and encryption information if the resources saved in the backup vault are encrypted.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n    ListCopyJobsOutput:\n      type: object\n      properties:\n        CopyJobs:\n          allOf:\n            - $ref: '#/components/schemas/CopyJobsList'\n            - description: 'An array of structures containing metadata about your copy jobs returned in JSON format. '\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return maxResults number of items, NextToken allows you to return more items in your list starting at the location pointed to by the next token. '\n    ListFrameworksOutput:\n      type: object\n      properties:\n        Frameworks:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkList'\n            - description: 'A list of frameworks with details for each framework, including the framework name, Amazon Resource Name (ARN), description, number of controls, creation time, and deployment status.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'\n    ListProtectedResourcesOutput:\n      type: object\n      properties:\n        Results:\n          allOf:\n            - $ref: '#/components/schemas/ProtectedResourcesList'\n            - description: 'An array of resources successfully backed up by Backup including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n    ListRecoveryPointsByBackupVaultOutput:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n        RecoveryPoints:\n          allOf:\n            - $ref: '#/components/schemas/RecoveryPointByBackupVaultList'\n            - description: An array of objects that contain detailed information about recovery points saved in a backup vault.\n    ListRecoveryPointsByResourceOutput:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n        RecoveryPoints:\n          allOf:\n            - $ref: '#/components/schemas/RecoveryPointByResourceList'\n            - description: <p>An array of objects that contain detailed information about recovery points of the specified resource type.</p> <note> <p>Only Amazon EFS and Amazon EC2 recovery points return BackupVaultName.</p> </note>\n    ListReportJobsOutput:\n      type: object\n      properties:\n        ReportJobs:\n          allOf:\n            - $ref: '#/components/schemas/ReportJobList'\n            - description: Details about your report jobs in JSON format.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'\n    ListReportPlansOutput:\n      type: object\n      properties:\n        ReportPlans:\n          allOf:\n            - $ref: '#/components/schemas/ReportPlanList'\n            - description: 'A list of your report plans with detailed information for each plan. This information includes the Amazon Resource Name (ARN), report plan name, description, settings, delivery channel, deployment status, creation time, and last times the report plan attempted to and successfully ran.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'\n    ListRestoreJobsOutput:\n      type: object\n      properties:\n        RestoreJobs:\n          allOf:\n            - $ref: '#/components/schemas/RestoreJobsList'\n            - description: An array of objects that contain detailed information about jobs to restore saved resources.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n    ListTagsOutput:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'To help organize your resources, you can assign your own metadata to the resources you create. Each tag is a key-value pair.'\n    BackupVaultEvent:\n      type: string\n      enum:\n        - BACKUP_JOB_STARTED\n        - BACKUP_JOB_COMPLETED\n        - BACKUP_JOB_SUCCESSFUL\n        - BACKUP_JOB_FAILED\n        - BACKUP_JOB_EXPIRED\n        - RESTORE_JOB_STARTED\n        - RESTORE_JOB_COMPLETED\n        - RESTORE_JOB_SUCCESSFUL\n        - RESTORE_JOB_FAILED\n        - COPY_JOB_STARTED\n        - COPY_JOB_SUCCESSFUL\n        - COPY_JOB_FAILED\n        - RECOVERY_POINT_MODIFIED\n        - BACKUP_PLAN_CREATED\n        - BACKUP_PLAN_MODIFIED\n    StartBackupJobOutput:\n      type: object\n      properties:\n        BackupJobId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a request to Backup to back up a resource.\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n    Long:\n      type: integer\n    BackupOptionValue:\n      type: string\n      pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n    StartCopyJobOutput:\n      type: object\n      properties:\n        CopyJobId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a copy job.\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n    StartReportJobOutput:\n      type: object\n      properties:\n        ReportJobId:\n          allOf:\n            - $ref: '#/components/schemas/ReportJobId'\n            - description: 'The identifier of the report job. A unique, randomly generated, Unicode, UTF-8 encoded string that is at most 1,024 bytes long. The report job ID cannot be edited.'\n    StartRestoreJobOutput:\n      type: object\n      properties:\n        RestoreJobId:\n          allOf:\n            - $ref: '#/components/schemas/RestoreJobId'\n            - description: Uniquely identifies the job that restores a recovery point.\n    MetadataValue:\n      type: string\n    UpdateBackupPlanOutput:\n      type: object\n      properties:\n        BackupPlanId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a backup plan.\n        BackupPlanArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        VersionId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version Ids cannot be edited.'\n        AdvancedBackupSettings:\n          allOf:\n            - $ref: '#/components/schemas/AdvancedBackupSettings'\n            - description: Contains a list of <code>BackupOptions</code> for each resource type.\n    UpdateFrameworkOutput:\n      type: object\n      properties:\n        FrameworkName:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkName'\n            - description: 'The unique name of a framework. This name is between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).'\n        FrameworkArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        CreationTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n    GlobalSettingsValue:\n      type: string\n    UpdateRecoveryPointLifecycleOutput:\n      type: object\n      properties:\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        Lifecycle:\n          allOf:\n            - $ref: '#/components/schemas/Lifecycle'\n            - description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n        CalculatedLifecycle:\n          allOf:\n            - $ref: '#/components/schemas/CalculatedLifecycle'\n            - description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.\n    IsEnabled:\n      type: boolean\n    UpdateReportPlanOutput:\n      type: object\n      properties:\n        ReportPlanName:\n          allOf:\n            - $ref: '#/components/schemas/ReportPlanName'\n            - description: The unique name of the report plan.\n        ReportPlanArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        CreationTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a report plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n    ARN:\n      type: string\n    AccountId:\n      type: string\n      pattern: '^[0-9]{12}$'\n    ResourceType:\n      type: string\n      pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n    BackupOptions:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/BackupOptionValue'\n    AdvancedBackupSetting:\n      type: object\n      properties:\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: '<p>Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows Volume Shadow Copy Service (VSS). For a CloudFormation example, see the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html\">sample CloudFormation template to enable Windows VSS</a> in the <i>Backup User Guide</i>.</p> <p>Valid values: <code>EC2</code>.</p>'\n        BackupOptions:\n          allOf:\n            - $ref: '#/components/schemas/BackupOptions'\n            - description: '<p>Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.</p> <p>Valid values: </p> <p>Set to <code>\"WindowsVSS\":\"enabled\"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup. </p> <p>Set to <code>\"WindowsVSS\":\"disabled\"</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p> <p>If you specify an invalid option, you get an <code>InvalidParameterValueException</code> exception.</p> <p>For more information about Windows VSS backups, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html\">Creating a VSS-Enabled Windows Backup</a>.</p>'\n      description: A list of backup options for each resource type.\n    BackupVaultName:\n      type: string\n      pattern: '^[a-zA-Z0-9\\-\\_]{2,50}$'\n    timestamp:\n      type: string\n      format: date-time\n    BackupJobState:\n      type: string\n      enum:\n        - CREATED\n        - PENDING\n        - RUNNING\n        - ABORTING\n        - ABORTED\n        - COMPLETED\n        - FAILED\n        - EXPIRED\n    RecoveryPointCreator:\n      type: object\n      properties:\n        BackupPlanId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a backup plan.\n        BackupPlanArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'\n        BackupPlanVersion:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.'\n        BackupRuleId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a rule used to schedule the backup of a selection of resources.\n      description: Contains information about the backup plan and rule that Backup used to initiate the recovery point backup.\n    BackupJob:\n      type: object\n      properties:\n        AccountId:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The account ID that owns the backup job.\n        BackupJobId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a request to Backup to back up a resource.\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CompletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a job to create a backup job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        State:\n          allOf:\n            - $ref: '#/components/schemas/BackupJobState'\n            - description: The current state of a resource recovery point.\n        StatusMessage:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A detailed message explaining the status of the job to back up a resource.\n        PercentDone:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Contains an estimated percentage complete of a job at the time the job status was queried.\n        BackupSizeInBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The size, in bytes, of a backup.'\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'Specifies the IAM role ARN used to create the target recovery point. IAM roles other than the default role must include either <code>AWSBackup</code> or <code>AwsBackup</code> in the role name. For example, <code>arn:aws:iam::123456789012:role/AWSBackupRDSAccess</code>. Role names without those strings lack permissions to perform backup jobs.'\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/RecoveryPointCreator'\n            - description: 'Contains identifying information about the creation of a backup job, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan used to create it.'\n        ExpectedCompletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a job to back up resources is expected to be completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>ExpectedCompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        StartBy:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'Specifies the time in Unix format and Coordinated Universal Time (UTC) when a backup job must be started before it is canceled. The value is calculated by adding the start window to the scheduled time. So if the scheduled time were 6:00 PM and the start window is 2 hours, the <code>StartBy</code> time would be 8:00 PM on the date specified. The value of <code>StartBy</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: 'The type of Amazon Web Services resource to be backed up; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For Windows Volume Shadow Copy Service (VSS) backups, the only supported resource type is Amazon EC2.'\n        BytesTransferred:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The size in bytes transferred to a backup vault at the time that the job status was queried.\n        BackupOptions:\n          allOf:\n            - $ref: '#/components/schemas/BackupOptions'\n            - description: '<p>Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs.</p> <p>Valid values: Set to <code>\"WindowsVSS\":\"enabled\"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup. Set to <code>\"WindowsVSS\":\"disabled\"</code> to create a regular backup. If you specify an invalid option, you get an <code>InvalidParameterValueException</code> exception.</p>'\n        BackupType:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Represents the type of backup for a backup job.\n      description: Contains detailed information about a backup job.\n    BackupJobsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackupJob'\n    BackupOptionKey:\n      type: string\n      pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n    BackupRules:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackupRule'\n    BackupPlan:\n      type: object\n      required:\n        - BackupPlanName\n        - Rules\n      properties:\n        BackupPlanName:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlanName'\n            - description: The display name of a backup plan.\n        Rules:\n          allOf:\n            - $ref: '#/components/schemas/BackupRules'\n            - description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources. '\n        AdvancedBackupSettings:\n          allOf:\n            - $ref: '#/components/schemas/AdvancedBackupSettings'\n            - description: Contains a list of <code>BackupOptions</code> for each resource type.\n      description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of Amazon Web Services resources.'\n    BackupPlanInput:\n      type: object\n      required:\n        - BackupPlanName\n        - Rules\n      properties:\n        BackupPlanName:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlanName'\n            - description: The optional display name of a backup plan.\n        Rules:\n          allOf:\n            - $ref: '#/components/schemas/BackupRulesInput'\n            - description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'\n        AdvancedBackupSettings:\n          allOf:\n            - $ref: '#/components/schemas/AdvancedBackupSettings'\n            - description: Specifies a list of <code>BackupOptions</code> for each resource type. These settings are only available for Windows Volume Shadow Copy Service (VSS) backup jobs.\n      description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of Amazon Web Services resources. '\n    BackupPlanTemplatesListMember:\n      type: object\n      properties:\n        BackupPlanTemplateId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a stored backup plan template.\n        BackupPlanTemplateName:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: The optional display name of a backup plan template.\n      description: An object specifying metadata associated with a backup plan template.\n    BackupPlanTemplatesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackupPlanTemplatesListMember'\n    BackupPlansListMember:\n      type: object\n      properties:\n        BackupPlanArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'\n        BackupPlanId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a backup plan.\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a resource backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        DeletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        VersionId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'\n        BackupPlanName:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlanName'\n            - description: The display name of a saved backup plan.\n        CreatorRequestId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n        LastExecutionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The last time a job to back up resources was run with this rule. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastExecutionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        AdvancedBackupSettings:\n          allOf:\n            - $ref: '#/components/schemas/AdvancedBackupSettings'\n            - description: Contains a list of <code>BackupOptions</code> for a resource type.\n      description: Contains metadata about a backup plan.\n    BackupPlanVersionsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackupPlansListMember'\n    BackupPlansList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackupPlansListMember'\n    BackupRuleName:\n      type: string\n      pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n    CronExpression:\n      type: string\n    WindowMinutes:\n      type: integer\n    Lifecycle:\n      type: object\n      properties:\n        MoveToColdStorageAfterDays:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: Specifies the number of days after creation that a recovery point is moved to cold storage.\n        DeleteAfterDays:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.\n      description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n    Tags:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    CopyActions:\n      type: array\n      items:\n        $ref: '#/components/schemas/CopyAction'\n    Boolean:\n      type: boolean\n    BackupRule:\n      type: object\n      required:\n        - RuleName\n        - TargetBackupVaultName\n      properties:\n        RuleName:\n          allOf:\n            - $ref: '#/components/schemas/BackupRuleName'\n            - description: An optional display name for a backup rule.\n        TargetBackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        ScheduleExpression:\n          allOf:\n            - $ref: '#/components/schemas/CronExpression'\n            - description: 'A cron expression in UTC specifying when Backup initiates a backup job. For more information about cron expressions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">Schedule Expressions for Rules</a> in the <i>Amazon CloudWatch Events User Guide.</i>. Prior to specifying a value for this parameter, we recommend testing your cron expression using one of the many available cron generator and testing tools.'\n        StartWindowMinutes:\n          allOf:\n            - $ref: '#/components/schemas/WindowMinutes'\n            - description: A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional.\n        CompletionWindowMinutes:\n          allOf:\n            - $ref: '#/components/schemas/WindowMinutes'\n            - description: A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by Backup. This value is optional.\n        Lifecycle:\n          allOf:\n            - $ref: '#/components/schemas/Lifecycle'\n            - description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n        RecoveryPointTags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: An array of key-value pair strings that are assigned to resources that are associated with this rule when restored from backup.\n        RuleId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a rule that is used to schedule the backup of a selection of resources.\n        CopyActions:\n          allOf:\n            - $ref: '#/components/schemas/CopyActions'\n            - description: 'An array of <code>CopyAction</code> objects, which contains the details of the copy operation.'\n        EnableContinuousBackup:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Specifies whether Backup creates continuous backups. True causes Backup to create continuous backups capable of point-in-time restore (PITR). False (or not specified) causes Backup to create snapshot backups.\n      description: Specifies a scheduled task used to back up a selection of resources.\n    BackupRuleInput:\n      type: object\n      required:\n        - RuleName\n        - TargetBackupVaultName\n      properties:\n        RuleName:\n          allOf:\n            - $ref: '#/components/schemas/BackupRuleName'\n            - description: An optional display name for a backup rule.\n        TargetBackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        ScheduleExpression:\n          allOf:\n            - $ref: '#/components/schemas/CronExpression'\n            - description: A CRON expression in UTC specifying when Backup initiates a backup job.\n        StartWindowMinutes:\n          allOf:\n            - $ref: '#/components/schemas/WindowMinutes'\n            - description: A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional.\n        CompletionWindowMinutes:\n          allOf:\n            - $ref: '#/components/schemas/WindowMinutes'\n            - description: A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by Backup. This value is optional.\n        Lifecycle:\n          allOf:\n            - $ref: '#/components/schemas/Lifecycle'\n            - description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup will transition and expire backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n        RecoveryPointTags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'\n        CopyActions:\n          allOf:\n            - $ref: '#/components/schemas/CopyActions'\n            - description: 'An array of <code>CopyAction</code> objects, which contains the details of the copy operation.'\n        EnableContinuousBackup:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Specifies whether Backup creates continuous backups. True causes Backup to create continuous backups capable of point-in-time restore (PITR). False (or not specified) causes Backup to create snapshot backups.\n      description: Specifies a scheduled task used to back up a selection of resources.\n    BackupSelection:\n      type: object\n      required:\n        - SelectionName\n        - IamRoleArn\n      properties:\n        SelectionName:\n          allOf:\n            - $ref: '#/components/schemas/BackupSelectionName'\n            - description: The display name of a resource selection document.\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'The ARN of the IAM role that Backup uses to authenticate when backing up the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n        Resources:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArns'\n            - description: An array of strings that contain Amazon Resource Names (ARNs) of resources to assign to a backup plan.\n        ListOfTags:\n          allOf:\n            - $ref: '#/components/schemas/ListOfTags'\n            - description: 'An array of conditions used to specify a set of resources to assign to a backup plan; for example, <code>\"StringEquals\": {\"ec2:ResourceTag/Department\": \"accounting\"</code>. Assigns the backup plan to every resource with at least one matching tag.'\n      description: Used to specify a set of resources to a backup plan.\n    BackupSelectionsListMember:\n      type: object\n      properties:\n        SelectionId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a request to assign a set of resources to a backup plan.\n        SelectionName:\n          allOf:\n            - $ref: '#/components/schemas/BackupSelectionName'\n            - description: The display name of a resource selection document.\n        BackupPlanId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a backup plan.\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CreatorRequestId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'Specifies the IAM role Amazon Resource Name (ARN) to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n      description: Contains metadata about a <code>BackupSelection</code> object.\n    BackupSelectionsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackupSelectionsListMember'\n    BackupVaultEvents:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackupVaultEvent'\n    BackupVaultListMember:\n      type: object\n      properties:\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a resource backup is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'\n        CreatorRequestId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n        NumberOfRecoveryPoints:\n          allOf:\n            - $ref: '#/components/schemas/long'\n            - description: The number of recovery points that are stored in a backup vault.\n      description: Contains metadata about a backup vault.\n    BackupVaultList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackupVaultListMember'\n    long:\n      type: integer\n    CalculatedLifecycle:\n      type: object\n      properties:\n        MoveToColdStorageAt:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: A timestamp that specifies when to transition a recovery point to cold storage.\n        DeleteAt:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: A timestamp that specifies when to delete a recovery point.\n      description: '<p>Contains <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps, which are used to specify a lifecycle for a recovery point.</p> <p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n    ComplianceResourceIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/string'\n      minItems: 1\n      maxItems: 100\n    ConditionType:\n      type: string\n      enum:\n        - STRINGEQUALS\n    ConditionKey:\n      type: string\n    ConditionValue:\n      type: string\n    Condition:\n      type: object\n      required:\n        - ConditionType\n        - ConditionKey\n        - ConditionValue\n      properties:\n        ConditionType:\n          allOf:\n            - $ref: '#/components/schemas/ConditionType'\n            - description: 'An operation, such as <code>StringEquals</code>, that is applied to a key-value pair used to filter resources in a selection.'\n        ConditionKey:\n          allOf:\n            - $ref: '#/components/schemas/ConditionKey'\n            - description: 'The key in a key-value pair. For example, in <code>\"ec2:ResourceTag/Department\": \"accounting\"</code>, <code>\"ec2:ResourceTag/Department\"</code> is the key.'\n        ConditionValue:\n          allOf:\n            - $ref: '#/components/schemas/ConditionValue'\n            - description: 'The value in a key-value pair. For example, in <code>\"ec2:ResourceTag/Department\": \"accounting\"</code>, <code>\"accounting\"</code> is the value.'\n      description: 'Contains an array of triplets made up of a condition type (such as <code>StringEquals</code>), a key, and a value. Conditions are used to filter resources in a selection that is assigned to a backup plan.'\n    ParameterName:\n      type: string\n    ParameterValue:\n      type: string\n    ControlInputParameter:\n      type: object\n      properties:\n        ParameterName:\n          allOf:\n            - $ref: '#/components/schemas/ParameterName'\n            - description: 'The name of a parameter, for example, <code>BackupPlanFrequency</code>.'\n        ParameterValue:\n          allOf:\n            - $ref: '#/components/schemas/ParameterValue'\n            - description: 'The value of parameter, for example, <code>hourly</code>.'\n      description: 'A list of parameters for a control. A control can have zero, one, or more than one parameter. An example of a control with two parameters is: \"backup plan frequency is at least <code>daily</code> and the retention period is at least <code>1 year</code>\". The first parameter is <code>daily</code>. The second parameter is <code>1 year</code>.'\n    ControlInputParameters:\n      type: array\n      items:\n        $ref: '#/components/schemas/ControlInputParameter'\n    ControlName:\n      type: string\n    ResourceTypeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ARN'\n    stringMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/string'\n    ControlScope:\n      type: object\n      properties:\n        ComplianceResourceIds:\n          allOf:\n            - $ref: '#/components/schemas/ComplianceResourceIdList'\n            - description: Describes whether the control scope includes a specific resource identified by its unique Amazon Resource Name (ARN).\n        ComplianceResourceTypes:\n          allOf:\n            - $ref: '#/components/schemas/ResourceTypeList'\n            - description: 'Describes whether the control scope includes one or more types of resources, such as <code>EFS</code> or <code>RDS</code>.'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/stringMap'\n            - description: Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.\n      description: '<p>A framework consists of one or more controls. Each control has its own control scope. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans.</p> <note> <p>To set a control scope that includes all of a particular resource, leave the <code>ControlScope</code> empty or do not pass it when calling <code>CreateFramework</code>.</p> </note>'\n    CopyAction:\n      type: object\n      required:\n        - DestinationBackupVaultArn\n      properties:\n        Lifecycle:\n          $ref: '#/components/schemas/Lifecycle'\n        DestinationBackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup. For example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n      description: The details of the copy operation.\n    CopyJobState:\n      type: string\n      enum:\n        - CREATED\n        - RUNNING\n        - COMPLETED\n        - FAILED\n    CopyJob:\n      type: object\n      properties:\n        AccountId:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The account ID that owns the copy job.\n        CopyJobId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies a copy job.\n        SourceBackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a source copy vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>. '\n        SourceRecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a source recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        DestinationBackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a destination copy vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        DestinationRecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a destination recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'The Amazon Web Services resource to be copied; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CompletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a copy job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        State:\n          allOf:\n            - $ref: '#/components/schemas/CopyJobState'\n            - description: The current state of a copy job.\n        StatusMessage:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A detailed message explaining the status of the job to copy a resource.\n        BackupSizeInBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The size, in bytes, of a copy job.'\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'Specifies the IAM role ARN used to copy the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n        CreatedBy:\n          $ref: '#/components/schemas/RecoveryPointCreator'\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: 'The type of Amazon Web Services resource to be copied; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'\n      description: Contains detailed information about a copy job.\n    CopyJobsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/CopyJob'\n    CreateBackupPlanInput:\n      type: object\n      required:\n        - BackupPlan\n      title: CreateBackupPlanInput\n      properties:\n        BackupPlan:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlanInput'\n            - description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.\n        BackupPlanTags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.'\n        CreatorRequestId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'Identifies the request and allows failed requests to be retried without the risk of running the operation twice. If the request includes a <code>CreatorRequestId</code> that matches an existing backup plan, that plan is returned. This parameter is optional.'\n    CreateBackupSelectionInput:\n      type: object\n      required:\n        - BackupSelection\n      title: CreateBackupSelectionInput\n      properties:\n        BackupSelection:\n          allOf:\n            - $ref: '#/components/schemas/BackupSelection'\n            - description: Specifies the body of a request to assign a set of resources to a backup plan.\n        CreatorRequestId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n    CreateBackupVaultInput:\n      type: object\n      title: CreateBackupVaultInput\n      properties:\n        BackupVaultTags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: Metadata that you can assign to help organize the resources that you create. Each tag is a key-value pair.\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'\n        CreatorRequestId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.\n    FrameworkName:\n      type: string\n      pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n      minLength: 1\n      maxLength: 256\n    FrameworkDescription:\n      type: string\n      pattern: .*\\S.*\n      minLength: 0\n      maxLength: 1024\n    FrameworkControls:\n      type: array\n      items:\n        $ref: '#/components/schemas/FrameworkControl'\n    CreateFrameworkInput:\n      type: object\n      required:\n        - FrameworkName\n        - FrameworkControls\n      title: CreateFrameworkInput\n      properties:\n        FrameworkName:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkName'\n            - description: 'The unique name of the framework. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).'\n        FrameworkDescription:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkDescription'\n            - description: 'An optional description of the framework with a maximum of 1,024 characters.'\n        FrameworkControls:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkControls'\n            - description: 'A list of the controls that make up the framework. Each control in the list has a name, input parameters, and scope.'\n        IdempotencyToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>CreateFrameworkInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n        FrameworkTags:\n          allOf:\n            - $ref: '#/components/schemas/stringMap'\n            - description: Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.\n    ReportPlanName:\n      type: string\n      pattern: '[a-zA-Z][_a-zA-Z0-9]*'\n      minLength: 1\n      maxLength: 256\n    ReportPlanDescription:\n      type: string\n      pattern: .*\\S.*\n      minLength: 0\n      maxLength: 1024\n    ReportDeliveryChannel:\n      type: object\n      required:\n        - S3BucketName\n      properties:\n        S3BucketName:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: The unique name of the S3 bucket that receives your reports.\n        S3KeyPrefix:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: 'The prefix for where Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/<code>prefix</code>/Backup/us-west-2/year/month/day/report-name. If not specified, there is no prefix.'\n        Formats:\n          allOf:\n            - $ref: '#/components/schemas/FormatList'\n            - description: 'A list of the format of your reports: <code>CSV</code>, <code>JSON</code>, or both. If not specified, the default format is <code>CSV</code>.'\n      description: 'Contains information from your report plan about where to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.'\n    ReportSetting:\n      type: object\n      required:\n        - ReportTemplate\n      properties:\n        ReportTemplate:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: '<p>Identifies the report template for the report. Reports are built using a report template. The report templates are:</p> <p> <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>'\n      description: Contains detailed information about a report setting.\n    CreateReportPlanInput:\n      type: object\n      required:\n        - ReportPlanName\n        - ReportDeliveryChannel\n        - ReportSetting\n      title: CreateReportPlanInput\n      properties:\n        ReportPlanName:\n          allOf:\n            - $ref: '#/components/schemas/ReportPlanName'\n            - description: 'The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).'\n        ReportPlanDescription:\n          allOf:\n            - $ref: '#/components/schemas/ReportPlanDescription'\n            - description: 'An optional description of the report plan with a maximum of 1,024 characters.'\n        ReportDeliveryChannel:\n          allOf:\n            - $ref: '#/components/schemas/ReportDeliveryChannel'\n            - description: 'A structure that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.'\n        ReportSetting:\n          allOf:\n            - $ref: '#/components/schemas/ReportSetting'\n            - description: '<p>Identifies the report template for the report. Reports are built using a report template. The report templates are:</p> <p> <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>'\n        ReportPlanTags:\n          allOf:\n            - $ref: '#/components/schemas/stringMap'\n            - description: Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.\n        IdempotencyToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>CreateReportPlanInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n    DeleteBackupPlanInput:\n      type: object\n      title: DeleteBackupPlanInput\n      properties: {}\n    DeleteBackupSelectionInput:\n      type: object\n      title: DeleteBackupSelectionInput\n      properties: {}\n    DeleteBackupVaultAccessPolicyInput:\n      type: object\n      title: DeleteBackupVaultAccessPolicyInput\n      properties: {}\n    DeleteBackupVaultInput:\n      type: object\n      title: DeleteBackupVaultInput\n      properties: {}\n    DeleteBackupVaultNotificationsInput:\n      type: object\n      title: DeleteBackupVaultNotificationsInput\n      properties: {}\n    DeleteFrameworkInput:\n      type: object\n      title: DeleteFrameworkInput\n      properties: {}\n    DeleteRecoveryPointInput:\n      type: object\n      title: DeleteRecoveryPointInput\n      properties: {}\n    DeleteReportPlanInput:\n      type: object\n      title: DeleteReportPlanInput\n      properties: {}\n    DescribeBackupJobInput:\n      type: object\n      title: DescribeBackupJobInput\n      properties: {}\n    DescribeBackupVaultInput:\n      type: object\n      title: DescribeBackupVaultInput\n      properties: {}\n    DescribeCopyJobInput:\n      type: object\n      title: DescribeCopyJobInput\n      properties: {}\n    DescribeFrameworkInput:\n      type: object\n      title: DescribeFrameworkInput\n      properties: {}\n    DescribeGlobalSettingsInput:\n      type: object\n      title: DescribeGlobalSettingsInput\n      properties: {}\n    GlobalSettings:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/GlobalSettingsValue'\n    DescribeProtectedResourceInput:\n      type: object\n      title: DescribeProtectedResourceInput\n      properties: {}\n    DescribeRecoveryPointInput:\n      type: object\n      title: DescribeRecoveryPointInput\n      properties: {}\n    RecoveryPointStatus:\n      type: string\n      enum:\n        - COMPLETED\n        - PARTIAL\n        - DELETING\n        - EXPIRED\n    boolean:\n      type: boolean\n    StorageClass:\n      type: string\n      enum:\n        - WARM\n        - COLD\n        - DELETED\n    DescribeRegionSettingsInput:\n      type: object\n      title: DescribeRegionSettingsInput\n      properties: {}\n    ResourceTypeOptInPreference:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/IsEnabled'\n    ReportJobId:\n      type: string\n    DescribeReportJobInput:\n      type: object\n      title: DescribeReportJobInput\n      properties: {}\n    ReportJob:\n      type: object\n      properties:\n        ReportJobId:\n          allOf:\n            - $ref: '#/components/schemas/ReportJobId'\n            - description: 'The identifier for a report job. A unique, randomly generated, Unicode, UTF-8 encoded string that is at most 1,024 bytes long. Report job IDs cannot be edited.'\n        ReportPlanArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        ReportTemplate:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: '<p>Identifies the report template for the report. Reports are built using a report template. The report templates are: </p> <p> <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>'\n        CreationTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a report job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CompletionTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a report job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: '<p>The status of a report job. The statuses are:</p> <p> <code>CREATED | RUNNING | COMPLETED | FAILED</code> </p> <p> <code>COMPLETED</code> means that the report is available for your review at your designated destination. If the status is <code>FAILED</code>, review the <code>StatusMessage</code> for the reason.</p>'\n        StatusMessage:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A message explaining the status of the report job.\n        ReportDestination:\n          allOf:\n            - $ref: '#/components/schemas/ReportDestination'\n            - description: The S3 bucket name and S3 keys for the destination where the report job publishes the report.\n      description: Contains detailed information about a report job. A report job compiles a report based on a report plan and publishes it to Amazon S3.\n    DescribeReportPlanInput:\n      type: object\n      title: DescribeReportPlanInput\n      properties: {}\n    ReportPlan:\n      type: object\n      properties:\n        ReportPlanArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        ReportPlanName:\n          allOf:\n            - $ref: '#/components/schemas/ReportPlanName'\n            - description: 'The unique name of the report plan. This name is between 1 and 256 characters starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).'\n        ReportPlanDescription:\n          allOf:\n            - $ref: '#/components/schemas/ReportPlanDescription'\n            - description: 'An optional description of the report plan with a maximum 1,024 characters.'\n        ReportSetting:\n          allOf:\n            - $ref: '#/components/schemas/ReportSetting'\n            - description: '<p>Identifies the report template for the report. Reports are built using a report template. The report templates are:</p> <p> <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>'\n        ReportDeliveryChannel:\n          allOf:\n            - $ref: '#/components/schemas/ReportDeliveryChannel'\n            - description: 'Contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.'\n        DeploymentStatus:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: '<p>The deployment status of a report plan. The statuses are:</p> <p> <code>CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED</code> </p>'\n        CreationTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a report plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        LastAttemptedExecutionTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a report job associated with this report plan last attempted to run, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastAttemptedExecutionTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        LastSuccessfulExecutionTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a report job associated with this report plan last successfully ran, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastSuccessfulExecutionTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n      description: Contains detailed information about a report plan.\n    RestoreJobId:\n      type: string\n    DescribeRestoreJobInput:\n      type: object\n      title: DescribeRestoreJobInput\n      properties: {}\n    RestoreJobStatus:\n      type: string\n      enum:\n        - PENDING\n        - RUNNING\n        - COMPLETED\n        - ABORTED\n        - FAILED\n    DisassociateRecoveryPointInput:\n      type: object\n      title: DisassociateRecoveryPointInput\n      properties: {}\n    ExportBackupPlanTemplateInput:\n      type: object\n      title: ExportBackupPlanTemplateInput\n      properties: {}\n    integer:\n      type: integer\n    Framework:\n      type: object\n      properties:\n        FrameworkName:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkName'\n            - description: 'The unique name of a framework. This name is between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).'\n        FrameworkArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        FrameworkDescription:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkDescription'\n            - description: 'An optional description of the framework with a maximum 1,024 characters.'\n        NumberOfControls:\n          allOf:\n            - $ref: '#/components/schemas/integer'\n            - description: The number of controls contained by the framework.\n        CreationTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        DeploymentStatus:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: '<p>The deployment status of a framework. The statuses are:</p> <p> <code>CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED | FAILED</code> </p>'\n      description: 'Contains detailed information about a framework. Frameworks contain controls, which evaluate and report on your backup events and resources. Frameworks generate daily compliance results.'\n    FrameworkList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Framework'\n    GetBackupPlanFromJSONInput:\n      type: object\n      required:\n        - BackupPlanTemplateJson\n      title: GetBackupPlanFromJSONInput\n      properties:\n        BackupPlanTemplateJson:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A customer-supplied backup plan document in JSON format.\n    GetBackupPlanFromTemplateInput:\n      type: object\n      title: GetBackupPlanFromTemplateInput\n      properties: {}\n    GetBackupPlanInput:\n      type: object\n      title: GetBackupPlanInput\n      properties: {}\n    GetBackupSelectionInput:\n      type: object\n      title: GetBackupSelectionInput\n      properties: {}\n    GetBackupVaultAccessPolicyInput:\n      type: object\n      title: GetBackupVaultAccessPolicyInput\n      properties: {}\n    IAMPolicy:\n      type: string\n    GetBackupVaultNotificationsInput:\n      type: object\n      title: GetBackupVaultNotificationsInput\n      properties: {}\n    GetRecoveryPointRestoreMetadataInput:\n      type: object\n      title: GetRecoveryPointRestoreMetadataInput\n      properties: {}\n    Metadata:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/MetadataValue'\n    ResourceTypes:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceType'\n    GlobalSettingsName:\n      type: string\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    ListBackupJobsInput:\n      type: object\n      title: ListBackupJobsInput\n      properties: {}\n    ListBackupPlanTemplatesInput:\n      type: object\n      title: ListBackupPlanTemplatesInput\n      properties: {}\n    ListBackupPlanVersionsInput:\n      type: object\n      title: ListBackupPlanVersionsInput\n      properties: {}\n    ListBackupPlansInput:\n      type: object\n      title: ListBackupPlansInput\n      properties: {}\n    ListBackupSelectionsInput:\n      type: object\n      title: ListBackupSelectionsInput\n      properties: {}\n    ListBackupVaultsInput:\n      type: object\n      title: ListBackupVaultsInput\n      properties: {}\n    ListCopyJobsInput:\n      type: object\n      title: ListCopyJobsInput\n      properties: {}\n    MaxFrameworkInputs:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    ListFrameworksInput:\n      type: object\n      title: ListFrameworksInput\n      properties: {}\n    ListProtectedResourcesInput:\n      type: object\n      title: ListProtectedResourcesInput\n      properties: {}\n    ProtectedResourcesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ProtectedResource'\n    ListRecoveryPointsByBackupVaultInput:\n      type: object\n      title: ListRecoveryPointsByBackupVaultInput\n      properties: {}\n    RecoveryPointByBackupVaultList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RecoveryPointByBackupVault'\n    ListRecoveryPointsByResourceInput:\n      type: object\n      title: ListRecoveryPointsByResourceInput\n      properties: {}\n    RecoveryPointByResourceList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RecoveryPointByResource'\n    ListReportJobsInput:\n      type: object\n      title: ListReportJobsInput\n      properties: {}\n    ReportJobList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReportJob'\n    ListReportPlansInput:\n      type: object\n      title: ListReportPlansInput\n      properties: {}\n    ReportPlanList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReportPlan'\n    ListRestoreJobsInput:\n      type: object\n      title: ListRestoreJobsInput\n      properties: {}\n    RestoreJobsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RestoreJobsListMember'\n    ListTagsInput:\n      type: object\n      title: ListTagsInput\n      properties: {}\n    MetadataKey:\n      type: string\n    ProtectedResource:\n      type: object\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: 'The type of Amazon Web Services resource; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For Windows Volume Shadow Copy Service (VSS) backups, the only supported resource type is Amazon EC2.'\n        LastBackupTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a resource was last backed up, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastBackupTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n      description: A structure that contains information about a backed-up resource.\n    PutBackupVaultAccessPolicyInput:\n      type: object\n      title: PutBackupVaultAccessPolicyInput\n      properties:\n        Policy:\n          allOf:\n            - $ref: '#/components/schemas/IAMPolicy'\n            - description: The backup vault access policy document in JSON format.\n    PutBackupVaultNotificationsInput:\n      type: object\n      required:\n        - SNSTopicArn\n        - BackupVaultEvents\n      title: PutBackupVaultNotificationsInput\n      properties:\n        SNSTopicArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events; for example, <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>.'\n        BackupVaultEvents:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultEvents'\n            - description: '<p>An array of events that indicate the status of jobs to back up resources to the backup vault.</p> <note> <p>The following events are supported:</p> <p> <code>BACKUP_JOB_STARTED</code>, <code>BACKUP_JOB_COMPLETED</code>,</p> <p> <code>COPY_JOB_STARTED</code>, <code>COPY_JOB_SUCCESSFUL</code>, <code>COPY_JOB_FAILED</code>,</p> <p> <code>RESTORE_JOB_STARTED</code>, <code>RESTORE_JOB_COMPLETED</code>, and <code>RECOVERY_POINT_MODIFIED</code>.</p> <p>To find failed backup jobs, use <code>BACKUP_JOB_COMPLETED</code> and filter using event metadata.</p> <p>Other events in the following list are deprecated.</p> </note>'\n    RecoveryPointByBackupVault:\n      type: object\n      properties:\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        BackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        SourceBackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: The backup vault where the recovery point was originally copied from. If the recovery point is restored to the same account this value will be <code>null</code>.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: 'The type of Amazon Web Services resource saved as a recovery point; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For Windows Volume Shadow Copy Service (VSS) backups, the only supported resource type is Amazon EC2.'\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/RecoveryPointCreator'\n            - description: 'Contains identifying information about the creation of a recovery point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan that is used to create it.'\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/RecoveryPointStatus'\n            - description: A status code specifying the state of the recovery point.\n        StatusMessage:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A message explaining the reason of the recovery point deletion failure.\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CompletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        BackupSizeInBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The size, in bytes, of a backup.'\n        CalculatedLifecycle:\n          allOf:\n            - $ref: '#/components/schemas/CalculatedLifecycle'\n            - description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.\n        Lifecycle:\n          allOf:\n            - $ref: '#/components/schemas/Lifecycle'\n            - description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'\n        IsEncrypted:\n          allOf:\n            - $ref: '#/components/schemas/boolean'\n            - description: 'A Boolean value that is returned as <code>TRUE</code> if the specified recovery point is encrypted, or <code>FALSE</code> if the recovery point is not encrypted.'\n        LastRestoreTime:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a recovery point was last restored, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastRestoreTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n      description: Contains detailed information about the recovery points stored in a backup vault.\n    RecoveryPointByResource:\n      type: object\n      properties:\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/RecoveryPointStatus'\n            - description: A status code specifying the state of the recovery point.\n        StatusMessage:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A message explaining the reason of the recovery point deletion failure.\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'\n        BackupSizeBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The size, in bytes, of a backup.'\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n      description: Contains detailed information about a saved recovery point.\n    stringList:\n      type: array\n      items:\n        $ref: '#/components/schemas/string'\n    ReportDestination:\n      type: object\n      properties:\n        S3BucketName:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: The unique name of the Amazon S3 bucket that receives your reports.\n        S3Keys:\n          allOf:\n            - $ref: '#/components/schemas/stringList'\n            - description: The object key that uniquely identifies your reports in your S3 bucket.\n      description: Contains information from your report job about your report destination.\n    RestoreJobsListMember:\n      type: object\n      properties:\n        AccountId:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The account ID that owns the restore job.\n        RestoreJobId:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Uniquely identifies the job that restores a recovery point.\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a restore job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        CompletionDate:\n          allOf:\n            - $ref: '#/components/schemas/timestamp'\n            - description: 'The date and time a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/RestoreJobStatus'\n            - description: A status code specifying the state of the job initiated by Backup to restore a recovery point.\n        StatusMessage:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A detailed message explaining the status of the job to restore a recovery point.\n        PercentDone:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: Contains an estimated percentage complete of a job at the time the job status was queried.\n        BackupSizeInBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The size, in bytes, of the restored resource.'\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n        ExpectedCompletionTimeMinutes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The amount of time in minutes that a job restoring a recovery point is expected to take.\n        CreatedResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: 'The resource type of the listed restore jobs; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For Windows Volume Shadow Copy Service (VSS) backups, the only supported resource type is Amazon EC2.'\n      description: Contains metadata about a restore job.\n    StartBackupJobInput:\n      type: object\n      required:\n        - BackupVaultName\n        - ResourceArn\n        - IamRoleArn\n      title: StartBackupJobInput\n      properties:\n        BackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n        IdempotencyToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartBackupJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n        StartWindowMinutes:\n          allOf:\n            - $ref: '#/components/schemas/WindowMinutes'\n            - description: 'A value in minutes after a backup is scheduled before a job will be canceled if it doesn''t start successfully. This value is optional, and the default is 8 hours.'\n        CompleteWindowMinutes:\n          allOf:\n            - $ref: '#/components/schemas/WindowMinutes'\n            - description: 'A value in minutes during which a successfully started backup must complete, or else AWS Backup will cancel the job. This value is optional. This value begins counting down from when the backup was scheduled. It does not add additional time for <code>StartWindowMinutes</code>, or if the backup started later than scheduled.'\n        Lifecycle:\n          allOf:\n            - $ref: '#/components/schemas/Lifecycle'\n            - description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup will transition and expire backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'\n        RecoveryPointTags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'\n        BackupOptions:\n          allOf:\n            - $ref: '#/components/schemas/BackupOptions'\n            - description: '<p>Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs.</p> <p>Valid values: Set to <code>\"WindowsVSS\":\"enabled\"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup. Set to <code>\"WindowsVSS\"\"disabled\"</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p>'\n    StartCopyJobInput:\n      type: object\n      required:\n        - RecoveryPointArn\n        - SourceBackupVaultName\n        - DestinationBackupVaultArn\n        - IamRoleArn\n      title: StartCopyJobInput\n      properties:\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a recovery point to use for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. '\n        SourceBackupVaultName:\n          allOf:\n            - $ref: '#/components/schemas/BackupVaultName'\n            - description: 'The name of a logical source container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n        DestinationBackupVaultArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to copy to; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'Specifies the IAM role ARN used to copy the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n        IdempotencyToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartCopyJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n        Lifecycle:\n          $ref: '#/components/schemas/Lifecycle'\n    StartReportJobInput:\n      type: object\n      title: StartReportJobInput\n      properties:\n        IdempotencyToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartReportJobInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n    StartRestoreJobInput:\n      type: object\n      required:\n        - RecoveryPointArn\n        - Metadata\n        - IamRoleArn\n      title: StartRestoreJobInput\n      properties:\n        RecoveryPointArn:\n          allOf:\n            - $ref: '#/components/schemas/ARN'\n            - description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'\n        Metadata:\n          allOf:\n            - $ref: '#/components/schemas/Metadata'\n            - description: '<p>A set of metadata key-value pairs. Contains information, such as a resource name, required to restore a recovery point.</p> <p> You can get configuration metadata about a resource at the time it was backed up by calling <code>GetRecoveryPointRestoreMetadata</code>. However, values in addition to those provided by <code>GetRecoveryPointRestoreMetadata</code> might be required to restore a resource. For example, you might need to provide a new resource name if the original already exists.</p> <p>You need to specify specific metadata to restore an Amazon Elastic File System (Amazon EFS) instance:</p> <ul> <li> <p> <code>file-system-id</code>: The ID of the Amazon EFS file system that is backed up by Backup. Returned in <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li> <p> <code>Encrypted</code>: A Boolean value that, if true, specifies that the file system is encrypted. If <code>KmsKeyId</code> is specified, <code>Encrypted</code> must be set to <code>true</code>.</p> </li> <li> <p> <code>KmsKeyId</code>: Specifies the Amazon Web Services KMS key that is used to encrypt the restored file system. You can specify a key from another Amazon Web Services account provided that key it is properly shared with your account via Amazon Web Services KMS.</p> </li> <li> <p> <code>PerformanceMode</code>: Specifies the throughput mode of the file system.</p> </li> <li> <p> <code>CreationToken</code>: A user-supplied value that ensures the uniqueness (idempotency) of the request.</p> </li> <li> <p> <code>newFileSystem</code>: A Boolean value that, if true, specifies that the recovery point is restored to a new Amazon EFS file system.</p> </li> <li> <p> <code>ItemsToRestore</code>: An array of one to five strings where each string is a file path. Use <code>ItemsToRestore</code> to restore specific files or directories rather than the entire file system. This parameter is optional. For example, <code>\"itemsToRestore\":\"[\\\"/my.test\\\"]\"</code>.</p> </li> </ul>'\n        IamRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: 'The Amazon Resource Name (ARN) of the IAM role that Backup uses to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'\n        IdempotencyToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartRestoreJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: '<p>Starts a job to restore a recovery point for one of the following resources:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for Storage Gateway</p> </li> </ul>'\n    StopBackupJobInput:\n      type: object\n      title: StopBackupJobInput\n      properties: {}\n    TagKey:\n      type: string\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/string'\n    TagResourceInput:\n      type: object\n      required:\n        - Tags\n      title: TagResourceInput\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: Key-value pairs that are used to help organize your resources. You can assign your own metadata to the resources you create.\n    UntagResourceInput:\n      type: object\n      required:\n        - TagKeyList\n      title: UntagResourceInput\n      properties:\n        TagKeyList:\n          allOf:\n            - $ref: '#/components/schemas/TagKeyList'\n            - description: A list of keys to identify which key-value tags to remove from a resource.\n    UpdateBackupPlanInput:\n      type: object\n      required:\n        - BackupPlan\n      title: UpdateBackupPlanInput\n      properties:\n        BackupPlan:\n          allOf:\n            - $ref: '#/components/schemas/BackupPlanInput'\n            - description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.\n    UpdateFrameworkInput:\n      type: object\n      title: UpdateFrameworkInput\n      properties:\n        FrameworkDescription:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkDescription'\n            - description: 'An optional description of the framework with a maximum 1,024 characters.'\n        FrameworkControls:\n          allOf:\n            - $ref: '#/components/schemas/FrameworkControls'\n            - description: 'A list of the controls that make up the framework. Each control in the list has a name, input parameters, and scope.'\n        IdempotencyToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>UpdateFrameworkInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\n    UpdateGlobalSettingsInput:\n      type: object\n      title: UpdateGlobalSettingsInput\n      properties:\n        GlobalSettings:\n          allOf:\n            - $ref: '#/components/schemas/GlobalSettings'\n            - description: 'A value for <code>isCrossAccountBackupEnabled</code> and a Region. Example: <code>update-global-settings --global-settings isCrossAccountBackupEnabled=false --region us-west-2</code>.'\n    UpdateRecoveryPointLifecycleInput:\n      type: object\n      title: UpdateRecoveryPointLifecycleInput\n      properties:\n        Lifecycle:\n          allOf:\n            - $ref: '#/components/schemas/Lifecycle'\n            - description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'\n    UpdateRegionSettingsInput:\n      type: object\n      title: UpdateRegionSettingsInput\n      properties:\n        ResourceTypeOptInPreference:\n          allOf:\n            - $ref: '#/components/schemas/ResourceTypeOptInPreference'\n            - description: Updates the list of services along with the opt-in preferences for the Region.\n    UpdateReportPlanInput:\n      type: object\n      title: UpdateReportPlanInput\n      properties:\n        ReportPlanDescription:\n          allOf:\n            - $ref: '#/components/schemas/ReportPlanDescription'\n            - description: 'An optional description of the report plan with a maximum 1,024 characters.'\n        ReportDeliveryChannel:\n          allOf:\n            - $ref: '#/components/schemas/ReportDeliveryChannel'\n            - description: 'A structure that contains information about where to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.'\n        ReportSetting:\n          allOf:\n            - $ref: '#/components/schemas/ReportSetting'\n            - description: '<p>Identifies the report template for the report. Reports are built using a report template. The report templates are:</p> <p> <code>BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>'\n        IdempotencyToken:\n          allOf:\n            - $ref: '#/components/schemas/string'\n            - description: A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>UpdateReportPlanInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/amazonaws.com/backup/2018-11-15/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/amazonaws.com/backup/2018-11-15/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/audit/report-plans\": get: responses: 200: contents: application/json: generate schema: field NextToken: allOf: schema type mismatch: string and "
}