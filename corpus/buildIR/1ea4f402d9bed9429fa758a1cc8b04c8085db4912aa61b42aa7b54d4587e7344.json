{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/harness/harness-core"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "120-ng-manager/contracts/openapi/v1/openapi.yaml",
			"byteSize": 87712,
			"content": "openapi: 3.0.3\ninfo:\n  title: Harness NextGen Software Delivery Platform API Reference\n  version: '1'\n  description: This is the Open Api Spec 3 for NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub\n  contact:\n    email: contact@harness.io\nservers:\n  - url: 'https://api.harness.io'\n    description: Harness host URL.\ntags:\n  - name: Organization\n    description: This contains APIs for Organizations.\n  - name: Org Project\n    description: This contains APIs for Projects.\n    x-displayName: Project\n  - name: Account Secret\n    description: This contains APIs for Account-scoped Secrets.\n    x-displayName: Account Secrets\n  - name: Org Secret\n    description: This contains APIs for Organization-scoped Secrets.\n    x-displayName: Organization Secrets\n  - name: Project Secret\n    description: This contains APIs for Project-scoped Secrets.\n    x-displayName: Project Secrets\n  - name: Account Services\n    description: This contains APIs for Account-scoped Services.\n  - name: Org Services\n    description: This contains APIs for Organization-scoped Services.\n    x-displayName: Organization Services\n  - name: Project Services\n    description: This contains APIs for Project-scoped Services.\npaths:\n  '/v1/orgs/{org}/projects/{project}/services/{service}':\n    get:\n      summary: Retrieve a service\n      operationId: get-service\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      description: 'Retrieves the specified service'\n      security:\n        - x-api-key: []\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n      tags:\n        - Project Services\n    parameters:\n      - $ref: '#/components/parameters/OrgPathParam'\n      - $ref: '#/components/parameters/ProjectPathParam'\n      - $ref: '#/components/parameters/ServicePathParam'\n    put:\n      summary: Update Service\n      operationId: update-service\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      requestBody:\n        $ref: '#/components/requestBodies/ServiceRequest'\n      description: Updates the specified service\n      security:\n        - x-api-key: []\n      tags:\n        - Project Services\n    delete:\n      summary: Delete a Service\n      operationId: delete-service\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      description: Deletes the requested service\n      security:\n        - x-api-key: []\n      tags:\n        - Project Services\n  '/v1/orgs/{org}/projects/{project}/services':\n    get:\n      summary: List Services\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceListResponse'\n      operationId: get-services\n      parameters:\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/SearchTerm'\n        - $ref: '#/components/parameters/ServiceIdentifiers'\n        - $ref: '#/components/parameters/Sort'\n        - schema:\n            type: boolean\n          in: query\n          name: is_access_list\n          description: Specifies whether the list is an access list. An access list is a list of services that you are permitted to use in a pipeline.\n        - schema:\n            type: string\n            enum:\n              - Kubernetes\n              - NativeHelm\n              - Ssh\n              - WinRm\n              - ServerlessAwsLambda\n              - AzureWebApp\n          name: type\n          in: query\n          description: Service Definition type\n        - schema:\n            type: boolean\n          name: git_ops_enabled\n          in: query\n          description: Enables you to use the service in Harness GitOps PR pipelines.\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/Order'\n      security:\n        - x-api-key: []\n      description: Returns a list of the services for which you have view permissions in the given project.\n      tags:\n        - Project Services\n    post:\n      summary: Create a Service\n      operationId: create-service\n      responses:\n        '201':\n          $ref: '#/components/responses/ServiceResponse'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      requestBody:\n        $ref: '#/components/requestBodies/ServiceRequest'\n      description: Creates a service\n      security:\n        - x-api-key: []\n      tags:\n        - Project Services\n    parameters:\n      - $ref: '#/components/parameters/OrgPathParam'\n      - $ref: '#/components/parameters/ProjectPathParam'\n  '/v1/orgs/{org}/services/{service}':\n    get:\n      summary: Retrieve a service\n      operationId: get-org-scoped-service\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      description: 'Retrieves the specified service'\n      security:\n        - x-api-key: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n      tags:\n        - Org Services\n    parameters:\n      - $ref: '#/components/parameters/OrgPathParam'\n      - $ref: '#/components/parameters/ServicePathParam'\n    put:\n      summary: Update Service\n      operationId: update-org-scoped-service\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      requestBody:\n        $ref: '#/components/requestBodies/ServiceRequest'\n      description: Updates the specified service\n      security:\n        - x-api-key: [ ]\n      tags:\n        - Org Services\n    delete:\n      summary: Delete a service\n      operationId: delete-org-scoped-service\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      description: Deletes the requested service\n      security:\n        - x-api-key: [ ]\n      tags:\n        - Org Services\n  '/v1/orgs/{org}/services':\n    get:\n      summary: List Services\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceListResponse'\n      operationId: get-org-scoped-services\n      parameters:\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/SearchTerm'\n        - $ref: '#/components/parameters/ServiceIdentifiers'\n        - $ref: '#/components/parameters/Sort'\n        - schema:\n            type: boolean\n          in: query\n          name: is_access_list\n          description: Specifies whether the list is an access list. An access list is a list of services that you are permitted to use in a pipeline.\n        - schema:\n            type: string\n            enum:\n              - Kubernetes\n              - NativeHelm\n              - Ssh\n              - WinRm\n              - ServerlessAwsLambda\n              - AzureWebApp\n          name: type\n          in: query\n          description: Service Definition type\n        - schema:\n            type: boolean\n          name: git_ops_enabled\n          in: query\n          description: Enables you to use the service in Harness GitOps PR pipelines.\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/Order'\n      security:\n        - x-api-key: [ ]\n      description: Returns a list of the services for which you have view permissions in the given project.\n      tags:\n        - Org Services\n    post:\n      summary: Create a service\n      operationId: create-org-scoped-service\n      responses:\n        '201':\n          $ref: '#/components/responses/ServiceResponse'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      requestBody:\n        $ref: '#/components/requestBodies/ServiceRequest'\n      description: Creates a service\n      security:\n        - x-api-key: [ ]\n      tags:\n        - Org Services\n    parameters:\n      - $ref: '#/components/parameters/OrgPathParam'\n  '/v1/services/{service}':\n    get:\n      summary: Retrieve a service\n      operationId: get-account-scoped-service\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      description: 'Retrieves the specified service'\n      security:\n        - x-api-key: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n      tags:\n        - Account Services\n    parameters:\n      - $ref: '#/components/parameters/ServicePathParam'\n    put:\n      summary: Update service\n      operationId: update-account-scoped-service\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      requestBody:\n        $ref: '#/components/requestBodies/ServiceRequest'\n      description: Updates the specified service\n      security:\n        - x-api-key: [ ]\n      tags:\n        - Account Services\n    delete:\n      summary: Delete a service\n      operationId: delete-account-scoped-service\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceResponse'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      description: Deletes the requested service\n      security:\n        - x-api-key: [ ]\n      tags:\n        - Account Services\n  '/v1/services':\n    get:\n      summary: List services\n      responses:\n        '200':\n          $ref: '#/components/responses/ServiceListResponse'\n      operationId: get-account-scoped-services\n      parameters:\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/SearchTerm'\n        - $ref: '#/components/parameters/ServiceIdentifiers'\n        - $ref: '#/components/parameters/Sort'\n        - schema:\n            type: boolean\n          in: query\n          name: is_access_list\n          description: Specifies whether the list is an access list. An access list is a list of services that you are permitted to use in a pipeline.\n        - schema:\n            type: string\n            enum:\n              - Kubernetes\n              - NativeHelm\n              - Ssh\n              - WinRm\n              - ServerlessAwsLambda\n              - AzureWebApp\n          name: type\n          in: query\n          description: Service Definition type\n        - schema:\n            type: boolean\n          name: git_ops_enabled\n          in: query\n          description: Enables you to use the service in Harness GitOps PR pipelines.\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/Order'\n      security:\n        - x-api-key: [ ]\n      description: Returns a list of the services for which you have view permissions in the given project.\n      tags:\n        - Account Services\n    post:\n      summary: Create a service\n      operationId: create-account-scoped-service\n      responses:\n        '201':\n          $ref: '#/components/responses/ServiceResponse'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      requestBody:\n        $ref: '#/components/requestBodies/ServiceRequest'\n      description: Creates a service\n      security:\n        - x-api-key: [ ]\n      tags:\n        - Account Services\n    parameters: []\n  /v1/orgs:\n    post:\n      summary: Create an organization\n      operationId: create-organization\n      responses:\n        '201':\n          $ref: '#/components/responses/OrganizationResponse'\n      description: Creates a new organization.\n      security:\n        - x-api-key: []\n      tags:\n        - Organization\n      requestBody:\n        $ref: '#/components/requestBodies/CreateOrganizationRequest'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n    get:\n      summary: List organizations\n      operationId: get-organizations\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganizationListResponse'\n      description: Retrieves the information of the organizations.\n      security:\n        - x-api-key: []\n      tags:\n        - Organization\n      parameters:\n        - $ref: '#/components/parameters/OrgsQueryParam'\n        - $ref: '#/components/parameters/SearchTerm'\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/Sort'\n        - $ref: '#/components/parameters/Order'\n    parameters: []\n  '/v1/orgs/{org}':\n    parameters:\n      - schema:\n          type: string\n        name: org\n        in: path\n        required: true\n        description: Organization slug\n    get:\n      summary: Retrieve an organization\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganizationResponse'\n      operationId: get-organization\n      description: Retrieves the information of the organization with the matching organization slug.\n      security:\n        - x-api-key: []\n      tags:\n        - Organization\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n    put:\n      summary: Update an organization\n      operationId: update-organization\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganizationResponse'\n      description: Updates the information of the organization with the matching organization slug.\n      security:\n        - x-api-key: []\n      tags:\n        - Organization\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateOrganizationRequest'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n    delete:\n      summary: Delete an organization\n      operationId: delete-organization\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganizationResponse'\n      description: Deletes the information of the organization with the matching organization slug.\n      security:\n        - x-api-key: []\n      tags:\n        - Organization\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n  '/v1/orgs/{org}/projects':\n    post:\n      summary: Creates a project\n      responses:\n        '201':\n          $ref: '#/components/responses/ProjectResponse'\n      operationId: create-org-scoped-project\n      security:\n        - x-api-key: []\n      description: Creates a new project\n      requestBody:\n        $ref: '#/components/requestBodies/CreateProjectRequest'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Org Project\n    get:\n      summary: List projects\n      responses:\n        '200':\n          $ref: '#/components/responses/ProjectListResponse'\n      operationId: get-org-scoped-projects\n      description: Retrieves the information of the projects.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/ProjectsQueryParam'\n        - schema:\n            type: boolean\n            default: true\n          in: query\n          name: has_module\n          description: This boolean specifies whether to filter projects which has the module of type passed in the moduleType parameter or not\n        - schema:\n            type: string\n          in: query\n          name: module_type\n          description: Project's module type\n        - $ref: '#/components/parameters/SearchTerm'\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/Sort'\n        - $ref: '#/components/parameters/Order'\n      tags:\n        - Org Project\n    parameters:\n      - $ref: '#/components/parameters/OrgPathParam'\n  '/v1/orgs/{org}/projects/{project}':\n    get:\n      summary: Retrieve a project\n      responses:\n        '200':\n          $ref: '#/components/responses/ProjectResponse'\n      operationId: get-org-scoped-project\n      description: Retrieves the information of the project with the matching project slug.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Org Project\n    put:\n      summary: Update a project\n      responses:\n        '200':\n          $ref: '#/components/responses/ProjectResponse'\n      operationId: update-org-scoped-project\n      description: Updates the information of the project with the matching project slug.\n      security:\n        - x-api-key: []\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateProjectRequest'\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Org Project\n    delete:\n      summary: Delete a project\n      responses:\n        '200':\n          $ref: '#/components/responses/ProjectResponse'\n      operationId: delete-org-scoped-project\n      description: Deletes the information of the project with the matching project slug.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Org Project\n    parameters:\n      - $ref: '#/components/parameters/OrgPathParam'\n      - $ref: '#/components/parameters/ProjectPathParam'\n  /v1/secrets:\n    post:\n      summary: Create a secret\n      operationId: create-account-scoped-secret\n      responses:\n        '201':\n          $ref: '#/components/responses/SecretResponse'\n      description: Creates a new secret\n      parameters:\n        - $ref: '#/components/parameters/PrivateSecret'\n        - $ref: '#/components/parameters/AccountHeader'\n      security:\n        - x-api-key: []\n      requestBody:\n        $ref: '#/components/requestBodies/SecretRequest'\n      tags:\n        - Account Secret\n    get:\n      summary: List secrets\n      operationId: get-account-scoped-secrets\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretListResponse'\n      description: Retrieves the information of the secrets.\n      parameters:\n        - schema:\n            type: array\n            items:\n              type: string\n          in: query\n          name: secret\n          description: Slug field of secrets\n        - schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - SSHKeyPath\n                - SSHKeyReference\n                - SSHPassword\n                - SSHKerberosTGTKeyTabFile\n                - SSHKerberosTGTPassword\n                - SecretFile\n                - SecretText\n                - WinRmTGTKeyTabFile\n                - WinRmTGTPassword\n                - WinRmNTLM\n          in: query\n          name: type\n          description: Secret types on which the filter will be applied\n        - schema:\n            type: boolean\n            default: false\n          in: query\n          name: recursive\n          description: 'Expand current scope to include all child scopes '\n        - $ref: '#/components/parameters/SearchTerm'\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Account Secret\n      security:\n        - x-api-key: []\n  '/v1/orgs/{org}/secrets':\n    parameters:\n      - $ref: '#/components/parameters/OrgPathParam'\n    post:\n      summary: Create a secret\n      operationId: create-org-scoped-secret\n      responses:\n        '201':\n          $ref: '#/components/responses/SecretResponse'\n      description: Creates a new secret\n      requestBody:\n        $ref: '#/components/requestBodies/SecretRequest'\n      parameters:\n        - $ref: '#/components/parameters/PrivateSecret'\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Org Secret\n      security:\n        - x-api-key: []\n    get:\n      summary: List secrets\n      operationId: get-org-scoped-secrets\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretListResponse'\n      description: Retrieves the information of the secrets.\n      parameters:\n        - schema:\n            type: array\n            items:\n              type: string\n          in: query\n          name: secret\n          description: Slug field of secrets\n        - schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - SSHKeyPath\n                - SSHKeyReference\n                - SSHPassword\n                - SSHKerberosTGTKeyTabFile\n                - SSHKerberosTGTPassword\n                - SecretFile\n                - SecretText\n                - WinRmTGTKeyTabFile\n                - WinRmTGTPassword\n                - WinRmNTLM\n          in: query\n          name: type\n          description: Secret types on which the filter will be applied\n        - schema:\n            type: boolean\n            default: false\n          in: query\n          name: recursive\n          description: 'Expand current scope to include all child scopes '\n        - $ref: '#/components/parameters/SearchTerm'\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Org Secret\n      security:\n        - x-api-key: []\n  '/v1/orgs/{org}/projects/{project}/secrets':\n    parameters:\n      - $ref: '#/components/parameters/OrgPathParam'\n      - $ref: '#/components/parameters/ProjectPathParam'\n    post:\n      summary: Create a secret\n      operationId: create-project-scoped-secret\n      responses:\n        '201':\n          $ref: '#/components/responses/SecretResponse'\n      description: Creates a new secret\n      requestBody:\n        $ref: '#/components/requestBodies/SecretRequest'\n      parameters:\n        - $ref: '#/components/parameters/PrivateSecret'\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Project Secret\n      security:\n        - x-api-key: []\n    get:\n      summary: List secrets\n      operationId: get-project-scoped-secrets\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretListResponse'\n      description: Retrieves the information of the secrets.\n      parameters:\n        - schema:\n            type: array\n            items:\n              type: string\n          in: query\n          name: secret\n          description: Slug field of secrets\n        - schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - SSHKeyPath\n                - SSHKeyReference\n                - SSHPassword\n                - SSHKerberosTGTKeyTabFile\n                - SSHKerberosTGTPassword\n                - SecretFile\n                - SecretText\n                - WinRmTGTKeyTabFile\n                - WinRmTGTPassword\n                - WinRmNTLM\n          in: query\n          name: type\n          description: Secret types on which the filter will be applied\n        - schema:\n            type: boolean\n            default: false\n          in: query\n          name: recursive\n          description: 'Expand current scope to include all child scopes '\n        - $ref: '#/components/parameters/SearchTerm'\n        - $ref: '#/components/parameters/Page'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Project Secret\n      security:\n        - x-api-key: []\n  '/v1/secrets/{secret}':\n    parameters:\n      - schema:\n          type: string\n        name: secret\n        in: path\n        required: true\n        description: Slug field of the secret\n    get:\n      summary: Retrieve a secret\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretResponse'\n      operationId: get-account-scoped-secret\n      description: Retrieves the information of the secret.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Account Secret\n      security:\n        - x-api-key: []\n    delete:\n      summary: Deletes a secret\n      tags:\n        - Account Secret\n      operationId: delete-account-scoped-secret\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretResponse'\n      description: Deletes the information of the secret with the matching secret slug.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      security:\n        - x-api-key: []\n    put:\n      summary: Update a secret\n      operationId: update-account-scoped-secret\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretResponse'\n      description: Updates the information of the secret with the matching secret slug.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Account Secret\n      requestBody:\n        $ref: '#/components/requestBodies/SecretRequest'\n      security:\n        - x-api-key: []\n  '/v1/orgs/{org}/secrets/{secret}':\n    parameters:\n      - $ref: '#/components/parameters/OrgPathParam'\n      - schema:\n          type: string\n        name: secret\n        in: path\n        required: true\n        description: Slug field of the secret\n    get:\n      summary: Retrieve a secret\n      tags:\n        - Org Secret\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretResponse'\n      operationId: get-org-scoped-secret\n      description: Retrieves the information of the secret.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      security:\n        - x-api-key: []\n    delete:\n      summary: Delete a secret\n      tags:\n        - Org Secret\n      operationId: delete-org-scoped-secret\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretResponse'\n      description: Deletes the information of the secret with the matching secret slug.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      security:\n        - x-api-key: []\n    put:\n      summary: Update a secret\n      operationId: update-org-scoped-secret\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretResponse'\n      description: Updates the information of the secret with the matching secret slug.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      requestBody:\n        $ref: '#/components/requestBodies/SecretRequest'\n      tags:\n        - Org Secret\n      security:\n        - x-api-key: []\n  '/v1/orgs/{org}/projects/{project}/secrets/{secret}':\n    parameters:\n      - $ref: '#/components/parameters/OrgPathParam'\n      - $ref: '#/components/parameters/ProjectPathParam'\n      - schema:\n          type: string\n        name: secret\n        in: path\n        required: true\n        description: Slug field of the secret\n    get:\n      summary: Retrieve a secret\n      tags:\n        - Project Secret\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretResponse'\n      operationId: get-project-scoped-secret\n      description: Retrieves the information of the secret.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      security:\n        - x-api-key: []\n    delete:\n      summary: Delete a secret\n      tags:\n        - Project Secret\n      operationId: delete-project-scoped-secret\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretResponse'\n      description: Deletes the information of the secret with the matching secret slug.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      security:\n        - x-api-key: []\n    put:\n      summary: Update a secret\n      operationId: update-project-scoped-secret\n      responses:\n        '200':\n          $ref: '#/components/responses/SecretResponse'\n      description: Updates the information of the secret with the matching secret slug.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      requestBody:\n        $ref: '#/components/requestBodies/SecretRequest'\n      tags:\n        - Project Secret\n      security:\n        - x-api-key: []\ncomponents:\n  schemas:\n    Service:\n      type: object\n      x-examples:\n        example-1:\n          account: sample_account\n          slug: example_service\n          org: sample_organization\n          project: sample_project\n          name: Example_service\n          description: This is a example service\n          tags:\n            example-tag-1: example-tag-1-value\n            example-tag-2: example-tag-2-value\n          yaml: |\n            service:\n              name: \"Example_service\"\n              identifier: \"example_service\"\n              tags: {}\n      description: This is the Service entity defined in Harness\n      title: Service\n      properties:\n        account:\n          type: string\n          description: Account Identifier\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        slug:\n          type: string\n          description: Identifier of the Service Request.\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        org:\n          type: string\n          description: Organization Identifier for the Entity.\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        project:\n          type: string\n          description: Project Identifier for the Entity.\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        name:\n          type: string\n          description: Name of the Service Request.\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        description:\n          type: string\n          description: Description of the entity\n          maxLength: 1024\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: Service tags\n          maxProperties: 128\n        yaml:\n          type: string\n          description: Yaml related to service\n      required:\n        - slug\n        - name\n    ServiceResponse:\n      type: object\n      x-examples:\n        example-1:\n          service:\n            account: sample_account\n            slug: example_service\n            org: sample_organization\n            project: sample_project\n            name: Example_service\n            description: This is a example service\n            tags:\n              example-tag-1: example-tag-1-value\n              example-tag-2: example-tag-2-value\n            yaml: |\n              service:\n                name: \"Example_service\"\n                identifier: \"example_service\"\n                tags: {}\n          created: 1234567890\n          updated: 1234567890\n      description: Default response when a service is returned\n      title: ServiceResponse\n      properties:\n        service:\n          $ref: '#/components/schemas/Service'\n        created:\n          type: integer\n          format: int64\n          description: Creation timestamp for Service.\n        updated:\n          type: integer\n          format: int64\n          description: Last modification timestamp for Service.\n    ServiceRequest:\n      type: object\n      x-examples:\n        example-1:\n          slug: example_service\n          name: Example_service\n          description: This is a example service\n          tags:\n            example-tag-1: example-tag-1-value\n            example-tag-2: example-tag-2-value\n          yaml: |\n            service:\n              name: \"Example_service\"\n              identifier: \"example_service\"\n              tags: {}\n      title: ServiceRequest\n      description: 'Service Request Body '\n      properties:\n        slug:\n          type: string\n          description: Identifier of the Service\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        name:\n          type: string\n          description: Name of the Service\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        description:\n          type: string\n          description: Description of the entity\n          maxLength: 1024\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: Service tags\n          maxProperties: 128\n        yaml:\n          type: string\n          description: YAML for the Service Request\n      required:\n        - slug\n        - name\n    CreateOrganizationRequest:\n      type: object\n      properties:\n        org:\n          $ref: '#/components/schemas/Organization'\n      required:\n        - org\n    Organization:\n      description: Organization model\n      type: object\n      properties:\n        slug:\n          type: string\n          minLength: 1\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          description: Organization slug\n          maxLength: 64\n        name:\n          type: string\n          minLength: 1\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          description: Organization name\n          maxLength: 64\n        description:\n          type: string\n          maxLength: 1024\n          description: Organization description\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          maxProperties: 128\n          description: Organization tags\n      required:\n        - slug\n        - name\n    ModuleType:\n      type: string\n      description: Type of Modules\n      enum:\n        - CD\n        - CI\n        - CV\n        - CF\n        - CE\n        - STO\n        - CORE\n        - PMS\n        - TEMPLATESERVICE\n        - GOVERNANCE\n        - CHAOS\n    CreateProjectRequest:\n      description: Create project request\n      type: object\n      properties:\n        project:\n          $ref: '#/components/schemas/Project'\n      required:\n        - project\n    Project:\n      description: Project model\n      type: object\n      x-examples:\n        example-1:\n          slug: example_project_slug\n          name: example-project-name\n          color: '#0063F7'\n          modules:\n            - CD\n          description: This is a example project\n          tags:\n            property1: value1\n            property2: value2\n      properties:\n        slug:\n          type: string\n          minLength: 1\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          description: Project slug\n          maxLength: 64\n        name:\n          type: string\n          minLength: 1\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          description: Project name\n          maxLength: 64\n        org:\n          type: string\n          description: Organization slug for the project\n        color:\n          type: string\n          description: Project color\n        modules:\n          type: array\n          maxItems: 1024\n          description: List of modules for project\n          items:\n            $ref: '#/components/schemas/ModuleType'\n        description:\n          type: string\n          maxLength: 1024\n          description: Project description\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          maxProperties: 128\n          description: Project tags\n      required:\n        - slug\n        - name\n    ProjectResponse:\n      description: Project response model\n      type: object\n      properties:\n        project:\n          $ref: '#/components/schemas/Project'\n        created:\n          type: integer\n          format: int64\n          description: Creation timestamp for the project\n        updated:\n          type: integer\n          format: int64\n          description: Updated timestamp for the project\n    OrganizationResponse:\n      title: OrganizationResponse\n      type: object\n      description: Organization response Model\n      x-examples:\n        example-1:\n          org:\n            slug: example_organization\n            name: Example Organization\n            description: This is an Example Organization\n            tags:\n              example-tag-1: example-tag-1-value\n              example-tag-2: example-tag-2-value\n          created: 1234567890\n          updated: 1234567890\n          harness_managed: true\n      properties:\n        org:\n          $ref: '#/components/schemas/Organization'\n        created:\n          type: integer\n          description: Creation timestamp for organization\n          format: int64\n        updated:\n          type: integer\n          format: int64\n          description: Updated timestamp for organization\n        harness_managed:\n          type: boolean\n          description: 'This indicates if this organization is managed by Harness or not. If true, Harness can manage and modify this organization.'\n    UpdateOrganizationRequest:\n      description: Update oganization request\n      type: object\n      properties:\n        org:\n          $ref: '#/components/schemas/Organization'\n      required:\n        - org\n    UpdateProjectRequest:\n      description: Update project request\n      type: object\n      properties:\n        project:\n          $ref: '#/components/schemas/Project'\n      required:\n        - project\n    SecretSpec:\n      title: SecretSpec\n      type: object\n      description: Details of the secret defined in Harness\n      required:\n        - type\n      discriminator:\n        propertyName: type\n        mapping:\n          SSHKeyPath: '#/components/schemas/SSHKeyPathSpec'\n          SSHKeyReference: '#/components/schemas/SSHKeyReferenceSpec'\n          SSHPassword: '#/components/schemas/SSHPasswordSpec'\n          SSHKerberosTGTKeyTabFile: '#/components/schemas/SSHKerberosTGTKeyTabFileSpec'\n          SSHKerberosTGTPassword: '#/components/schemas/SSHKerberosTGTPasswordSpec'\n          SecretFile: '#/components/schemas/SecretFileSpec'\n          SecretText: '#/components/schemas/SecretTextSpec'\n          WinRmTGTKeyTabFile: '#/components/schemas/WinRmTGTKeyTabFileSpec'\n          WinRmTGTPassword: '#/components/schemas/WinRmTGTPasswordSpec'\n          WinRmNTLM: '#/components/schemas/WinRmNTLMSpec'\n      properties:\n        type:\n          type: string\n          enum:\n            - SSHKeyPath\n            - SSHKeyReference\n            - SSHPassword\n            - SSHKerberosTGTKeyTabFile\n            - SSHKerberosTGTPassword\n            - SecretFile\n            - SecretText\n            - WinRmTGTKeyTabFile\n            - WinRmTGTPassword\n            - WinRmNTLM\n          description: This specifies the type of secret\n    SSHKeyPathSpec:\n      title: SSHKeyPath\n      x-discriminator-value: SSHKeyPath\n      description: This is the SSH key authentication details defined in Harness.\n      allOf:\n        - $ref: '#/components/schemas/SecretSpec'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - SSHKeyPath\n              description: This specifies the type of secret\n            port:\n              type: integer\n              format: int32\n              description: SSH port\n            username:\n              type: string\n              description: SSH username\n            key_path:\n              type: string\n              description: Path of the key file\n            encrypted_passphrase:\n              type: string\n              description: This is the passphrase provided while creating the SSH key for local encryption\n          required:\n            - type\n            - username\n            - key_path\n    SSHKeyReferenceSpec:\n      title: SSHKeyReference\n      x-discriminator-value: SSHKeyReference\n      description: This is the SSH key authentication details defined in Harness.\n      allOf:\n        - $ref: '#/components/schemas/SecretSpec'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - SSHKeyReference\n              description: This specifies the type of secret\n            port:\n              type: integer\n              format: int32\n              description: SSH port\n            username:\n              type: string\n              description: SSH username\n            key:\n              type: string\n              description: SSH key\n            encrypted_passphrase:\n              type: string\n              description: This is the passphrase provided while creating the SSH key for local encryption\n          required:\n            - type\n            - username\n    SSHPasswordSpec:\n      title: SSHPassword\n      x-discriminator-value: SSHPassword\n      description: This is the SSH key authentication details defined in Harness.\n      allOf:\n        - $ref: '#/components/schemas/SecretSpec'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - SSHPassword\n              description: This specifies the type of secret\n            port:\n              type: integer\n              format: int32\n              description: SSH port\n            username:\n              type: string\n              description: SSH username\n            password:\n              type: string\n              description: SSH password\n          required:\n            - type\n            - username\n            - password\n    SSHKerberosTGTKeyTabFileSpec:\n      title: SSHKerberosTGTKeyTabFile\n      x-discriminator-value: SSHKerberosTGTKeyTabFile\n      description: This is the SSH key authentication details defined in Harness.\n      allOf:\n        - $ref: '#/components/schemas/SecretSpec'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - SSHKerberosTGTKeyTabFile\n              description: This specifies the type of secret\n            port:\n              type: integer\n              format: int32\n              description: SSH port\n            principal:\n              type: string\n              description: Kerberos principal\n            realm:\n              type: string\n              description: Kerberos realm\n            key_path:\n              type: string\n              description: Kerberos keytab file path\n          required:\n            - type\n    SSHKerberosTGTPasswordSpec:\n      title: SSHKerberosTGTPassword\n      x-discriminator-value: SSHKerberosTGTPassword\n      description: This is the SSH key authentication details defined in Harness.\n      allOf:\n        - $ref: '#/components/schemas/SecretSpec'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - SSHKerberosTGTPassword\n              description: This specifies the type of secret\n            port:\n              type: integer\n              format: int32\n              description: SSH port\n            principal:\n              type: string\n              description: Kerberos principal\n            realm:\n              type: string\n              description: Kerberos realm\n            password:\n              type: string\n              description: Kerberos password\n          required:\n            - type\n    SecretFileSpec:\n      title: SecretFile\n      x-discriminator-value: SecretFile\n      description: This is the SSH key authentication details defined in Harness.\n      allOf:\n        - $ref: '#/components/schemas/SecretSpec'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - SecretFile\n              description: This specifies the type of secret\n            secret_manager_slug:\n              type: string\n              description: Slug of the secret manager used to manage the secret\n          required:\n            - type\n            - secret_manager_slug\n    SecretTextSpec:\n      title: SecretText\n      x-discriminator-value: SecretText\n      description: This is the SSH key authentication details defined in Harness.\n      allOf:\n        - $ref: '#/components/schemas/SecretSpec'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - SecretText\n              description: This specifies the type of secret\n            secret_manager_slug:\n              type: string\n              description: Slug of the secret manager used to manage the secret\n            value_type:\n              type: string\n              enum:\n                - Inline\n                - Reference\n              description: This has details to specify if the secret value is inline or referenced\n            value:\n              type: string\n              description: Value of the Secret\n          required:\n            - type\n            - secret_manager_slug\n            - value_type\n    WinRmTGTKeyTabFileSpec:\n      title: WinRmTGTKeyTabFile\n      x-discriminator-value: WinRmTGTKeyTabFile\n      description: This is the SSH key authentication details defined in Harness.\n      allOf:\n        - $ref: '#/components/schemas/SecretSpec'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - WinRmTGTKeyTabFile\n              description: This specifies the type of secret\n            port:\n              type: integer\n              format: int32\n              default: 5986\n              description: WinRm port\n            principal:\n              type: string\n              description: Kerberos principal\n            realm:\n              type: string\n              description: Kerberos realm\n            key_path:\n              type: string\n              description: Keytab file path\n            use_ssl:\n              type: boolean\n              default: true\n              description: This is the Kerberos either to use SSL/https\n            skip_cert_checks:\n              type: boolean\n              default: true\n              description: This is the Kerberos either to skip certificate checks\n            use_no_profile:\n              type: boolean\n              description: This is the Kerberos powershell runs without loading profile\n          required:\n            - type\n    WinRmTGTPasswordSpec:\n      title: WinRmTGTPassword\n      x-discriminator-value: WinRmTGTPassword\n      description: This is the SSH key authentication details defined in Harness.\n      allOf:\n        - $ref: '#/components/schemas/SecretSpec'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - WinRmTGTPassword\n              description: This specifies the type of secret\n            port:\n              type: integer\n              format: int32\n              default: 5986\n              description: WinRm port\n            principal:\n              type: string\n              description: Kerberos principal\n            realm:\n              type: string\n              description: Kerberos realm\n            password:\n              type: string\n              description: Kerberos password\n            use_ssl:\n              type: boolean\n              default: true\n              description: This is the Kerberos either to use SSL/https\n            skip_cert_checks:\n              type: boolean\n              default: true\n              description: This is the Kerberos either to skip certificate checks\n            use_no_profile:\n              type: boolean\n              description: This is the Kerberos powershell runs without loading profile\n          required:\n            - type\n    WinRmNTLMSpec:\n      title: WinRmNTLM\n      x-discriminator-value: WinRmNTLM\n      description: This is the SSH key authentication details defined in Harness.\n      allOf:\n        - $ref: '#/components/schemas/SecretSpec'\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - WinRmNTLM\n              description: This specifies the type of secret\n            port:\n              type: integer\n              format: int32\n              default: 5986\n              description: WinRm port\n            domain:\n              type: string\n              description: This is the NTLM domain name\n            username:\n              type: string\n              description: This is the NTLM user name\n            password:\n              type: string\n              description: This is the NTLM password\n            use_ssl:\n              type: boolean\n              default: true\n              description: This is the NTLM either to use SSL/https\n            skip_cert_checks:\n              type: boolean\n              default: true\n              description: This is the Kerberos either to skip certificate checks\n            use_no_profile:\n              type: boolean\n              description: This is the Kerberos powershell runs without loading profile\n          required:\n            - type\n            - domain\n            - username\n            - password\n    SecretRequest:\n      type: object\n      properties:\n        secret:\n          $ref: '#/components/schemas/Secret'\n      required:\n        - secret\n    Secret:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Secret name\n          pattern: '^[0-9a-zA-Z-_ ]{0,63}$'\n        slug:\n          type: string\n          minLength: 1\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          description: Secret slug\n          maxLength: 64\n        org:\n          type: string\n          description: Organization slug for secret\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n        project:\n          type: string\n          description: Project slug for secret\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: Secret tags\n        description:\n          type: string\n          description: Secret description\n        spec:\n          $ref: '#/components/schemas/SecretSpec'\n      required:\n        - name\n        - slug\n        - spec\n    SecretResponse:\n      title: SecretResponse\n      type: object\n      properties:\n        secret:\n          $ref: '#/components/schemas/Secret'\n        created:\n          type: integer\n          format: int64\n          description: Creation timestamp for the secret\n        updated:\n          type: integer\n          format: int64\n          description: Updated timestamp for the secret\n        draft:\n          type: boolean\n        governance_metadata:\n          type: object\n          description: Governance metadata information\n      description: Secret response model\n  securitySchemes:\n    x-api-key:\n      name: x-api-key\n      type: apiKey\n      in: header\n  responses:\n    ServiceListResponse:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/ServiceResponse'\n          examples:\n            example-1:\n              value:\n                - service:\n                    account: sample_account\n                    slug: example_service\n                    org: sample_organization\n                    project: sample_project\n                    name: Example_service\n                    description: This is a example service\n                    tags:\n                      example-tag-1: example-tag-1-value\n                      example-tag-2: example-tag-2-value\n                    yaml: |\n                      service:\n                        name: \"Example_service\"\n                        identifier: \"example_service\"\n                        tags: {}\n                  created: 1234567890\n                  updated: 1234567890\n        application/yaml:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/ServiceResponse'\n          examples:\n            example-1:\n              value: |\n                - service:\n                    account: sample_account\n                    slug: example_service\n                    org: sample_organization\n                    project: sample_project\n                    name: Example_service\n                    description: This is a example service\n                    tags:\n                      example-tag-1: example-tag-1-value\n                      example-tag-2: example-tag-2-value\n                    yaml: |\n                      service:\n                        name: \"Example_service\"\n                        identifier: \"example_service\"\n                        tags: {}\n                  created: 1234567890\n                  updated: 1234567890\n      headers:\n        Link:\n          schema:\n            type: string\n          description: 'Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page, if there is a next page.'\n    ServiceResponse:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ServiceResponse'\n          examples:\n            example-1:\n              value:\n                service:\n                  account: sample_account\n                  slug: example_service\n                  org: sample_organization\n                  project: sample_project\n                  name: Example_service\n                  description: This is a example service\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n                  yaml: |\n                    service:\n                      name: \"Example_service\"\n                      identifier: \"example_service\"\n                      tags: {}\n                created: 1234567890\n                updated: 1234567890\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/ServiceResponse'\n          examples:\n            example-1:\n              value: |\n                service:\n                  account: sample_account\n                  slug: example_service\n                  org: sample_organization\n                  project: sample_project\n                  name: Example_service\n                  description: This is a example service\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n                  yaml: |\n                    service:\n                      name: \"Example_service\"\n                      identifier: \"example_service\"\n                      tags: {}\n                created: 1234567890\n                updated: 1234567890\n    OrganizationResponse:\n      description: Organization response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganizationResponse'\n          examples:\n            example-organization-response-json:\n              value:\n                org:\n                  slug: example_organization\n                  name: Example Organization\n                  description: This is an example organization\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n                created: 1234567890\n                updated: 1234567890\n                harness_managed: true\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/OrganizationResponse'\n          examples:\n            example-organization-response-yaml:\n              value: |\n                org:\n                  slug: example_organization\n                  name: Example Organization\n                  description: This is an example organization\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n                created: 1234567890\n                updated: 1234567890\n                harness_managed: true\n    ProjectResponse:\n      description: Project response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProjectResponse'\n          examples:\n            example-project-response-json:\n              value:\n                project:\n                  org: example_org_slug\n                  slug: example_project_slug\n                  name: example-project-name\n                  color: '#0063F7'\n                  modules:\n                    - CD\n                  description: This is a example project\n                  tags:\n                    property1: value1\n                    property2: value2\n                created: 1234567890\n                updated: 1234567890\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/ProjectResponse'\n          examples:\n            example-project-response-yaml:\n              value: |\n                project:\n                  org: example_org_slug\n                  slug: example_project_slug\n                  name: example-project-name\n                  color: '#0063F7'\n                  modules:\n                    - CD\n                  description: This is a example project\n                  tags:\n                    property1: value1\n                    property2: value2\n                created: 1234567890\n                updated: 1234567890\n    ProjectListResponse:\n      description: Project list response\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/ProjectResponse'\n          examples:\n            example-project-list-response-json:\n              value:\n                - project:\n                    org: example_org_slug\n                    slug: example_project_slug\n                    name: example-project-name\n                    color: '#0063F7'\n                    modules:\n                      - CD\n                    description: This is a example project\n                    tags:\n                      property1: value1\n                      property2: value2\n                  created: 1234567890\n                  updated: 1234567890\n        application/yaml:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/ProjectResponse'\n          examples:\n            example-project-list-response-yaml:\n              value: |\n                - project:\n                    org: example_org_slug\n                    slug: example_project_slug\n                    name: example-project-name\n                    color: '#0063F7'\n                    modules:\n                      - CD\n                    description: This is a example project\n                    tags:\n                      property1: value1\n                      property2: value2\n                  created: 1234567890\n                  updated: 1234567890\n      headers:\n        Link:\n          schema:\n            type: string\n          description: 'Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page, if there is a next page.Link'\n          examples:\n            sample:\n              value: '\u003c{url}?page=2\u0026limit=1\u003e; rel=\"next\", \u003c{url}?page=1\u0026limit=1\u003e; rel=\"self\", \u003c{url}?page=0\u0026limit=1\u003e; rel=\"previous\", '\n    OrganizationListResponse:\n      description: Organization list response\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/OrganizationResponse'\n          examples:\n            example-organizations-list-response-json:\n              value:\n                - org:\n                    slug: example_organization\n                    name: Example Organization\n                    description: This is an example organization\n                    tags:\n                      example-tag-1: example-tag-1-value\n                      example-tag-2: example-tag-2-value\n                  created: 1234567890\n                  updated: 1234567890\n                  harness_managed: true\n        application/yaml:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/OrganizationResponse'\n          examples:\n            example-organizations-list-response-yaml:\n              value: |\n                - org:\n                    slug: example_organization\n                    name: Example Organization\n                    description: This is an example organization\n                    tags:\n                      example-tag-1: example-tag-1-value\n                      example-tag-2: example-tag-2-value\n                  created: 1234567890\n                  updated: 1234567890\n                  harness_managed: true\n      headers:\n        Link:\n          schema:\n            type: string\n          description: 'Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page, if there is a next page.'\n          examples:\n            sample:\n              value: '\u003c{url}?page=2\u0026limit=1\u003e; rel=\"next\", \u003c{url}?page=1\u0026limit=1\u003e; rel=\"self\", \u003c{url}?page=0\u0026limit=1\u003e; rel=\"previous\", '\n    SecretResponse:\n      description: Secret response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SecretResponse'\n          examples:\n            example-secret-response-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHKeyPath\n                    port: 80\n                    username: example_secret\n                    key_path: example_secret\n                    encrypted_passphrase: account.example_secret\n                created: 1234567890\n                updated: 1234567890\n                draft: false\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/SecretResponse'\n          examples:\n            example-secret-response-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHKeyPath\n                    port: 80\n                    username: example_secret\n                    key_path: example_secret\n                    encrypted_passphrase: account.example_secret\n                created: 1234567890\n                updated: 1234567890\n                draft: false\n    SecretListResponse:\n      description: Secret list response\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/SecretResponse'\n          examples:\n            example-list-secret-response-json:\n              value:\n                - secret:\n                    name: example_secret\n                    slug: example_secret\n                    org: default\n                    project: example_project\n                    tags:\n                      property1: example_secret\n                    description: example_secret\n                    spec:\n                      type: SSHKeyPath\n                      port: 80\n                      username: example_secret\n                      key_path: example_secret\n                      encrypted_passphrase: account.example_secret\n                  created: 1234567890\n                  updated: 1234567890\n                  draft: false\n        application/yaml:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/SecretResponse'\n          examples:\n            example-list-secret-response-yaml:\n              value: |\n                - secret:\n                    name: example_secret\n                    slug: example_secret\n                    org: default\n                    project: example_project\n                    tags:\n                      property1: example_secret\n                    description: example_secret\n                    spec:\n                      type: SSHKeyPath\n                      port: 80\n                      username: example_secret\n                      key_path: example_secret\n                      encrypted_passphrase: account.example_secret\n                  created: 1234567890\n                  updated: 1234567890\n                  draft: false\n      headers:\n        Link:\n          schema:\n            type: string\n          description: 'Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page, if there is a next page.Link'\n          examples:\n            sample:\n              value: '\u003c{url}?page=2\u0026limit=1\u003e; rel=\"next\", \u003c{url}?page=1\u0026limit=1\u003e; rel=\"self\", \u003c{url}?page=0\u0026limit=1\u003e; rel=\"previous\", '\n  requestBodies:\n    ServiceRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ServiceRequest'\n          examples:\n            example-1:\n              value:\n                slug: example_service\n                name: Example_service\n                description: This is a example service\n                tags:\n                  example-tag-1: example-tag-1-value\n                  example-tag-2: example-tag-2-value\n                yaml: |\n                  service:\n                    name: \"Example_service\"\n                    identifier: \"example_service\"\n                    tags: {}\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/ServiceRequest'\n          examples:\n            example-1:\n              value: |\n                slug: example_service\n                name: Example_service\n                description: This is a example service\n                tags:\n                  example-tag-1: example-tag-1-value\n                  example-tag-2: example-tag-2-value\n                yaml: |\n                  service:\n                    name: \"Example_service\"\n                    identifier: \"example_service\"\n                    tags: {}\n      description: Create Service request body\n      required: true\n    UpdateProjectRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateProjectRequest'\n          examples:\n            example-project-update-request-json:\n              value:\n                project:\n                  slug: example_project_slug\n                  name: example-project-name\n                  color: '#0063F7'\n                  modules:\n                    - CD\n                  description: This is a example project\n                  tags:\n                    property1: value1\n                    property2: value2\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/UpdateProjectRequest'\n          examples:\n            example-project-update-request-yaml:\n              value: |\n                project:\n                  slug: example_project_slug\n                  name: example-project-name\n                  color: '#0063F7'\n                  modules:\n                    - CD\n                  description: This is a example project\n                  tags:\n                    property1: value1\n                    property2: value2\n      description: Put the necessary fields for the API to update a Project.\n      required: true\n    CreateOrganizationRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateOrganizationRequest'\n          examples:\n            example-create-organization-request-json:\n              value:\n                org:\n                  slug: example_organization\n                  name: Example Organization\n                  description: This is an Example organization\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/CreateOrganizationRequest'\n          examples:\n            example-create-organization-request-yaml:\n              value: |\n                org:\n                  slug: example_organization\n                  name: Example Organization\n                  description: This is an Example organization\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n      description: Post the necessary fields for the API to create an organization.\n      required: true\n    UpdateOrganizationRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateOrganizationRequest'\n          examples:\n            example-organization-update-request-json:\n              value:\n                org:\n                  slug: example_organization\n                  name: Example Organization\n                  description: This is an example organization\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/UpdateOrganizationRequest'\n          examples:\n            example-organization-update-request-json:\n              value: |\n                org:\n                  slug: example_organization\n                  name: Example Organization\n                  description: This is an example organization\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n      description: Put the necessary fields for the API to update a organization.\n      required: true\n    CreateProjectRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateProjectRequest'\n          examples:\n            example-create-project-request-json:\n              value:\n                project:\n                  slug: example_project_slug\n                  name: example-project-name\n                  color: '#0063F7'\n                  modules:\n                    - CD\n                  description: This is a example project\n                  tags:\n                    property1: value1\n                    property2: value2\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/CreateProjectRequest'\n          examples:\n            example-create-project-request-yaml:\n              value: |\n                project:\n                  slug: example_project_slug\n                  name: example-project-name\n                  color: '#0063F7'\n                  modules:\n                    - CD\n                  description: This is a example project\n                  tags:\n                    property1: value1\n                    property2: value2\n      description: Post the necessary fields for the API to create a project.\n      required: true\n    SecretRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SecretRequest'\n          examples:\n            example-ssh-kerberos-tgt-key-tab-file-secret-request-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHKerberosTGTKeyTabFile\n                    port: 22\n                    principal: example-principal\n                    realm: example-realm\n                    key_path: key/file/path\n            example-ssh-kerberos-tgt-password-secret-request-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHKerberosTGTPassword\n                    port: 22\n                    principal: example-principal\n                    realm: example-realm\n                    password: account.example-password\n            example-secret-file-secret-request-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SecretFile\n                    secret_manager_slug: example_secret_manager_slug\n            example-secret-text-secret-request-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SecretText\n                    secret_manager_slug: example_secret_manager_slug\n                    value_type: Inline\n                    value: example_secret_text_value\n            example-ssh-key-path-file-secret-request-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHKeyPath\n                    port: 22\n                    username: example_username\n                    key_path: ssh/key/path\n                    encrypted_passphrase: account.example_passphrase\n            example-ssh-key-reference-secret-request-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHKeyReference\n                    port: 22\n                    username: example_username\n                    key: example/secret/key/path\n                    encrypted_passphrase: account.example_passphrase\n            example-ssh-password-secret-request-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHPassword\n                    port: 22\n                    username: example_username\n                    password: account.example_password\n            example-winrm-ntlm-secret-request-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: WinRmNTLM\n                    port: 5986\n                    domain: example-domain\n                    username: example-username\n                    password: example-password\n                    use_ssl: true\n                    skip_cert_checks: true\n                    use_no_profile: true\n            example-winrm-tgt-key-file-tab-secret-request-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: WinRmTGTKeyTabFile\n                    port: 5986\n                    principal: example-principal\n                    realm: example-realm\n                    key_path: key/file/path\n                    use_ssl: true\n                    skip_cert_checks: true\n                    use_no_profile: true\n            example-winrm-tgt-password-secret-request-json:\n              value:\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: WinRmTGTPassword\n                    port: 5986\n                    principal: example-principal\n                    realm: example-realm\n                    password: example-password\n                    use_ssl: true\n                    skip_cert_checks: true\n                    use_no_profile: true\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/SecretRequest'\n          examples:\n            example-ssh-kerberos-tgt-key-tab-file-secret-request-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHKerberosTGTKeyTabFile\n                    port: 22\n                    principal: example-principal\n                    realm: example-realm\n                    key_path: key/file/path\n            example-ssh-kerberos-tgt-password-secret-request-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHKerberosTGTPassword\n                    port: 22\n                    principal: example-principal\n                    realm: example-realm\n                    password: account.example-password\n            example-secret-file-secret-request-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SecretFile\n                    secret_manager_slug: example_secret_manager_slug\n            example-secret-text-secret-request-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SecretText\n                    secret_manager_slug: example_secret_manager_slug\n                    value_type: Inline\n                    value: example_secret_text_value\n            example-ssh-key-path-file-secret-request-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHKeyPath\n                    port: 22\n                    username: example_username\n                    key_path: ssh/key/path\n                    encrypted_passphrase: account.example_passphrase\n            example-ssh-key-reference-secret-request-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHKeyReference\n                    port: 22\n                    username: example_username\n                    key: example/secret/key/path\n                    encrypted_passphrase: account.example_passphrase\n            example-ssh-password-secret-request-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: SSHPassword\n                    port: 22\n                    username: example_username\n                    password: account.example_password\n            example-winrm-ntlm-secret-request-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: WinRmNTLM\n                    port: 5986\n                    domain: example-domain\n                    username: example-username\n                    password: example-password\n                    use_ssl: true\n                    skip_cert_checks: true\n                    use_no_profile: true\n            example-winrm-tgt-key-file-tab-secret-request-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: WinRmTGTKeyTabFile\n                    port: 5986\n                    principal: example-principal\n                    realm: example-realm\n                    key_path: key/file/path\n                    use_ssl: true\n                    skip_cert_checks: true\n                    use_no_profile: true\n            example-winrm-tgt-password-secret-request-yaml:\n              value: |\n                secret:\n                  name: example_secret\n                  slug: example_secret\n                  org: default\n                  project: example_project\n                  tags:\n                    property1: example_secret\n                  description: example_secret\n                  spec:\n                    type: WinRmTGTPassword\n                    port: 5986\n                    principal: example-principal\n                    realm: example-realm\n                    password: example-password\n                    use_ssl: true\n                    skip_cert_checks: true\n                    use_no_profile: true\n        multipart/form-data:\n          schema:\n            properties:\n              spec:\n                $ref: '#/components/schemas/SecretRequest'\n              file:\n                type: string\n                format: binary\n            required:\n              - file\n              - spec\n      required: true\n  parameters:\n    Page:\n      name: page\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 0\n      description: \"Pagination page number strategy: Specify the page number within the paginated collection related to the number of items in each page\\t\"\n    Limit:\n      name: limit\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 30\n      description: 'Pagination: Number of items to return'\n    SearchTerm:\n      name: search_term\n      in: query\n      required: false\n      schema:\n        type: string\n      description: This would be used to filter resources having attributes matching with search term.\n    AccountHeader:\n      name: Harness-Account\n      in: header\n      required: false\n      schema:\n        type: string\n      description: 'Slug field of the account the resource is scoped to. This is required for Authorization methods other than the x-api-key header. If you are using the x-api-key header, this can be skipped.'\n    OrgsQueryParam:\n      name: org\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n      description: Slug field of the organizations the resource is scoped to\n    ProjectsQueryParam:\n      name: project\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n      description: Slug field of the projects the resource is scoped to\n    OrgPathParam:\n      name: org\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Slug field of the organization the resource is scoped to\n    PrivateSecret:\n      name: private_secret\n      in: query\n      schema:\n        type: boolean\n        default: false\n      description: This would be used to define secret as private.\n    ProjectPathParam:\n      name: project\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Slug field of the project the resource is scoped to\n    ServicePathParam:\n      name: service\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Slug field of the service the resource is scoped to\n    ServiceIdentifiers:\n      name: service_ids\n      in: query\n      required: false\n      schema:\n        type: array\n        uniqueItems: true\n        items:\n          type: string\n      description: List of Service Identifiers\n    Sort:\n      name: sort\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - name\n          - slug\n          - created\n          - updated\n      description: Parameter on the basis of which sorting is done.\n    Order:\n      name: order\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - ASC\n          - DESC\n      description: Order on the basis of which sorting is done.\n",
			"canonicalURL": "/github.com/harness/harness-core@6b21e1651a16ea54fc204f61157959589dfad0d1/-/blob/120-ng-manager/contracts/openapi/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/harness/harness-core/blob/6b21e1651a16ea54fc204f61157959589dfad0d1/120-ng-manager/contracts/openapi/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/v1/orgs/{org}/projects/{project}/secrets\": post: requestBody: contents: media: \"multipart/form-data\": form parameter \"spec\": field \"Secret\": nested objects not allowed"
}