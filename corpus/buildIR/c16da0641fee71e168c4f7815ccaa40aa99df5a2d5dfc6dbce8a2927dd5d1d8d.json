{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaystackOSS/openapi"
		},
		"file": {
			"name": "membership.yaml",
			"size": 0,
			"path": "dist/membership.yaml",
			"byteSize": 14471,
			"content": "openapi: 3.0.1\ninfo:\n  title: Create a membership app\n  description: The OpenAPI specification for creating a membership application using the Paystack API\n  version: 1.0.0\nservers:\n  - url: 'https://api.paystack.co'\n    description: Base API endpoint\npaths:\n  /plan:\n    post:\n      tags:\n        - Plan\n      summary: Create Plan\n      operationId: plan_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1plan/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - amount\n                - interval\n              properties:\n                name:\n                  description: Name of plan\n                  type: string\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                interval:\n                  description: 'Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually'\n                  type: string\n                description:\n                  description: A description for this plan\n                  type: boolean\n                send_invoices:\n                  description: Set to false if you don't want invoices to be sent to your customers\n                  type: boolean\n                send_sms:\n                  description: Set to false if you don't want text messages to be sent to your customers\n                  type: boolean\n                currency:\n                  description: 'Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD'\n                  type: string\n                invoice_limit:\n                  description: |-\n                    Number of invoices to raise during subscription to this plan. \n                    Can be overridden by specifying an invoice_limit while subscribing.\n                  type: integer\n      responses:\n        '200':\n          description: Request successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n        '401':\n          description: Unauthorized operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: boolean\n                  message:\n                    type: string\n        default:\n          description: Server error\n  /subscription:\n    post:\n      tags:\n        - Subscription\n      summary: Create Subscription\n      operationId: subscription_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1subscription/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - customer\n                - plan\n              properties:\n                customer:\n                  description: Customer's email address or customer code\n                  type: string\n                plan:\n                  description: Plan code\n                  type: string\n                authorization:\n                  description: |-\n                    If customer has multiple authorizations, you can set the desired authorization you wish to use for this subscription here. \n                    If this is not supplied, the customer's most recent authorization would be used\n                  type: string\n                start_date:\n                  description: 'Set the date for the first debit. (ISO 8601 format) e.g. 2017-05-16T00:30:13+01:00'\n                  type: string\n                  format: date-time\n      responses:\n        '200':\n          $ref: '#/paths/~1plan/post/responses/200'\n        '401':\n          $ref: '#/paths/~1plan/post/responses/401'\n        default:\n          description: Server error\n  /transaction/initialize:\n    post:\n      tags:\n        - Transaction\n      summary: Initialize Transaction\n      operationId: transaction_initialize\n      description: Create a new transaction\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transaction~1initialize/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - amount\n              properties:\n                email:\n                  description: Customer's email address\n                  type: string\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                currency:\n                  description: The transaction currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n                reference:\n                  description: 'Unique transaction reference. Only -, ., = and alphanumeric characters allowed.'\n                  type: string\n                callback_url:\n                  description: 'Fully qualified url, e.g. https://example.com/ . Use this to override the callback url provided on the dashboard for this transaction'\n                  type: string\n                plan:\n                  description: |-\n                    If transaction is to create a subscription to a predefined plan, provide plan code here. \n                    This would invalidate the value provided in amount\n                  type: string\n                invoice_limit:\n                  description: Number of times to charge customer during subscription to plan\n                  type: integer\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: string\n                channels:\n                  description: An array of payment channels to control what channels you want to make available to the user to make a payment with\n                  type: array\n                  items:\n                    type: string\n                    enum:\n                      - card\n                      - bank\n                      - ussd\n                      - qr\n                      - eft\n                      - mobile_money\n                      - bank_transfer\n                split_code:\n                  description: The split code of the transaction split\n                  type: string\n                subaccount:\n                  description: The code for the subaccount that owns the payment\n                  type: string\n                transaction_charge:\n                  description: |-\n                    A flat fee to charge the subaccount for a transaction. \n                    This overrides the split percentage set when the subaccount was created\n                  type: string\n                bearer:\n                  description: The beare of the transaction charge\n                  type: string\n                  enum:\n                    - account\n                    - subaccount\n      responses:\n        '200':\n          $ref: '#/paths/~1plan/post/responses/200'\n        '401':\n          $ref: '#/paths/~1plan/post/responses/401'\n        default:\n          description: Server error\n  /transaction/charge_authorization:\n    post:\n      tags:\n        - Transaction\n      summary: Charge Authorization\n      operationId: transaction_chargeAuthorization\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transaction~1charge_authorization/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - amount\n                - authorization_code\n              properties:\n                email:\n                  description: Customer's email address\n                  type: string\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                authorization_code:\n                  description: Valid authorization code to charge\n                  type: string\n                reference:\n                  description: 'Unique transaction reference. Only -, ., = and alphanumeric characters allowed.'\n                  type: string\n                currency:\n                  description: The transaction currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: string\n                split_code:\n                  description: The split code of the transaction split\n                  type: string\n                subaccount:\n                  description: The code for the subaccount that owns the payment\n                  type: string\n                transaction_charge:\n                  description: |-\n                    A flat fee to charge the subaccount for a transaction. \n                    This overrides the split percentage set when the subaccount was created\n                  type: string\n                bearer:\n                  description: The beare of the transaction charge\n                  type: string\n                  enum:\n                    - account\n                    - subaccount\n                queue:\n                  description: 'If you are making a scheduled charge call, it is a good idea to queue them so the processing system does not get overloaded causing transaction processing errors.'\n                  type: boolean\n      responses:\n        '200':\n          $ref: '#/paths/~1plan/post/responses/200'\n        '401':\n          $ref: '#/paths/~1plan/post/responses/401'\n        default:\n          description: Server error\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    Customer:\n      allOf:\n        - type: object\n          required:\n            - email\n          properties:\n            email:\n              description: Customer's email address\n              type: string\n        - type: object\n          properties:\n            first_name:\n              description: Customer's first name\n              type: string\n            last_name:\n              description: Customer's last name\n              type: string\n            phone:\n              description: Customer's phone number\n              type: string\n            metadata:\n              description: Stringified JSON object of custom data\n              type: string\n        - type: object\n          required:\n            - authorization_code\n          properties:\n            authorization_code:\n              description: Customer's authorization code to be deactivated\n              type: string\n        - type: object\n          required:\n            - customer\n          properties:\n            customer:\n              description: 'Customer''s code, or email address'\n              type: string\n            risk_action:\n              description: |\n                One of the possible risk actions [ default, allow, deny ]. allow to whitelist. \n                deny to blacklist. Customers start with a default risk action.\n              type: string\n              enum:\n                - default\n                - allow\n                - deny\n        - type: object\n          required:\n            - type\n            - country\n            - bvn\n            - bank_code\n            - account_number\n          properties:\n            type:\n              description: Predefined types of identification.\n              type: string\n              enum:\n                - bvn\n                - bank_account\n            country:\n              description: Two-letter country code of identification issuer\n              type: string\n            bvn:\n              description: Customer's Bank Verification Number\n              type: string\n            bank_code:\n              description: 'You can get the list of bank codes by calling the List Banks endpoint (https://api.paystack.co/bank).'\n              type: string\n            account_number:\n              description: Customer's bank account number.\n              type: string\n            value:\n              description: Customer's identification number. Required if type is bvn\n              type: string\n    Error:\n      type: object\n      properties:\n        status:\n          type: boolean\n        message:\n          type: string\n    Response:\n      type: object\n      properties:\n        status:\n          type: boolean\n        message:\n          type: string\n        data:\n          type: object\n  responses:\n    Ok:\n      description: Successful operation\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              status:\n                type: boolean\n              message:\n                type: string\n              data:\n                type: object\n    Created:\n      description: Resource created\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response'\n    NotFound:\n      description: Entity not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            status: false\n            message: Entity not found\n    Unauthorized:\n      description: Unauthorized operation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            status: false\n            message: Invalid key\n    GeneralError:\n      description: General Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\nsecurity:\n  - bearerAuth: []\n",
			"canonicalURL": "/github.com/PaystackOSS/openapi@eef55f43da8b1f342efb3edc5506cd942e580492/-/blob/dist/membership.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaystackOSS/openapi/blob/eef55f43da8b1f342efb3edc5506cd942e580492/dist/membership.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/plan\": post: responses: code 200: contents: media: \"application/json\": generate schema: save schema types: save referenced type: reference \"#/components/responses/Ok/content/application~1json/schema\" type name conflict: \"Schema\""
}