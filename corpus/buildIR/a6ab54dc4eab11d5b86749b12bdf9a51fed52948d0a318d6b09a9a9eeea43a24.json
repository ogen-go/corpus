{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-workdocs-2016-05-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-workdocs-2016-05-01-swagger.yaml",
			"byteSize": 177206,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2016-05-01\n  x-release: v4\n  title: Amazon WorkDocs\n  description: \"\u003cp\u003eThe WorkDocs API is designed for the following use cases:\u003c/p\u003e \u003cul\u003e \u003cli\u003e\n    \u003cp\u003eFile Migration: File migration applications are supported for users who\n    want to migrate their files from an on-premises or off-premises file system\n    or service. Users can insert files into a user directory structure, as well\n    as allow for basic metadata changes, such as modifications to the\n    permissions of files.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSecurity: Support security\n    applications are supported for users who have additional security needs,\n    such as antivirus or data loss prevention. The API actions, along with AWS\n    CloudTrail, allow these applications to detect when changes occur in Amazon\n    WorkDocs. Then, the application can take the necessary actions and replace\n    the target file. If the target file violates the policy, the application can\n    also choose to email the user.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eeDiscovery/Analytics:\n    General administrative applications are supported, such as eDiscovery and\n    analytics. These applications can choose to mimic or record the actions in\n    an Amazon WorkDocs site, along with AWS CloudTrail, to replicate data for\n    eDiscovery, backup, or analytical applications.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eAll\n    Amazon WorkDocs API actions are Amazon authenticated and certificate-signed.\n    They not only require the use of the AWS SDK, but also allow for the\n    exclusive use of IAM users and roles to help facilitate access, trust, and\n    permission policies. By creating a role and allowing an IAM user to access\n    the Amazon WorkDocs site, the IAM user gains full administrative visibility\n    into the entire Amazon WorkDocs site (or as set in the IAM policy). This\n    includes, but is not limited to, the ability to modify file permissions and\n    upload any file to any user. This allows developers to perform the three use\n    cases above, as well as give users the ability to grant access on a\n    selective basis using the IAM model.\u003c/p\u003e\"\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: workdocs\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workdocs-2016-05-01.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/workdocs/\nsecurity:\n  - hmac: []\npaths:\n  \"/api/v1/documents/{DocumentId}/versions/{VersionId}\":\n    delete:\n      operationId: AbortDocumentVersionUpload\n      description: Aborts the upload of the specified document version that was previously\n        initiated by \u003ca\u003eInitiateDocumentVersionUpload\u003c/a\u003e. The client should\n        make this call only when it no longer intends to upload the document\n        version, or fails to do so.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"482\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"483\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"484\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"485\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: VersionId\n          in: path\n          required: true\n          description: The ID of the version.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetDocumentVersion\n      description: Retrieves version metadata for the specified document.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDocumentVersionResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"485\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"486\":\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPasswordException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: VersionId\n          in: path\n          required: true\n          description: The version ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: fields\n          in: query\n          required: false\n          description: A comma-separated list of values. Specify \"SOURCE\" to include a URL\n            for the source document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\\\\w,]+\"\n        - name: includeCustomMetadata\n          in: query\n          required: false\n          description: Set this to TRUE to include custom metadata in the response.\n          schema:\n            type: boolean\n    patch:\n      operationId: UpdateDocumentVersion\n      description: \u003cp\u003eChanges the status of the document version to ACTIVE. \u003c/p\u003e \u003cp\u003eAmazon\n        WorkDocs also sets its document container to ACTIVE. This is the last\n        step in a document upload, after the client uploads the document to an\n        S3-presigned URL returned by \u003ca\u003eInitiateDocumentVersionUpload\u003c/a\u003e. \u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"482\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"483\":\n          description: InvalidOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidOperationException\"\n        \"484\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"485\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"486\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"487\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: VersionId\n          in: path\n          required: true\n          description: The version ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                VersionStatus:\n                  description: The status of the version.\n                  type: string\n                  enum:\n                    - ACTIVE\n        required: true\n  \"/api/v1/users/{UserId}/activation\":\n    post:\n      operationId: ActivateUser\n      description: Activates the specified user. Only active users can access Amazon\n        WorkDocs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActivateUserResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: UserId\n          in: path\n          required: true\n          description: The ID of the user.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    delete:\n      operationId: DeactivateUser\n      description: Deactivates the specified user, which revokes the user's access to\n        Amazon WorkDocs.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: UserId\n          in: path\n          required: true\n          description: The ID of the user.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n  \"/api/v1/resources/{ResourceId}/permissions\":\n    post:\n      operationId: AddResourcePermissions\n      description: Creates a set of permissions for the specified folder or document. The\n        resource permissions are overwritten if the principals already have\n        different permissions.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddResourcePermissionsResponse\"\n        \"480\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"481\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"482\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: ResourceId\n          in: path\n          required: true\n          description: The ID of the resource.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Principals\n              properties:\n                Principals:\n                  description: The users, groups, or organization being granted permission.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/SharePrincipal\"\n                NotificationOptions:\n                  description: Set of options which defines notification preferences of\n                    given action.\n                  type: object\n                  properties:\n                    SendEmail:\n                      $ref: \"#/components/schemas/BooleanType\"\n                    EmailMessage:\n                      $ref: \"#/components/schemas/MessageType\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: DescribeResourcePermissions\n      description: Describes the permissions of a specified resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeResourcePermissionsResponse\"\n        \"480\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"481\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"482\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: ResourceId\n          in: path\n          required: true\n          description: The ID of the resource.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: principalId\n          in: query\n          required: false\n          description: The ID of the principal to filter permissions by.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of items to return with this call.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n        - name: marker\n          in: query\n          required: false\n          description: The marker for the next set of results. (You received this marker\n            from a previous call)\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n    delete:\n      operationId: RemoveAllResourcePermissions\n      description: Removes all the permissions from the specified resource.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"481\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"482\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: ResourceId\n          in: path\n          required: true\n          description: The ID of the resource.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n  \"/api/v1/documents/{DocumentId}/versions/{VersionId}/comment\":\n    post:\n      operationId: CreateComment\n      description: Adds a new comment to the specified document version.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateCommentResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"482\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"483\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"484\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"485\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"486\":\n          description: DocumentLockedForCommentsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentLockedForCommentsException\"\n        \"487\":\n          description: InvalidCommentOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommentOperationException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: VersionId\n          in: path\n          required: true\n          description: The ID of the document version.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Text\n              properties:\n                ParentId:\n                  description: The ID of the parent comment.\n                  type: string\n                  pattern: \"[\\\\w+-.@]+\"\n                  minLength: 1\n                  maxLength: 128\n                ThreadId:\n                  description: The ID of the root comment in the thread.\n                  type: string\n                  pattern: \"[\\\\w+-.@]+\"\n                  minLength: 1\n                  maxLength: 128\n                Text:\n                  description: The text of the comment.\n                  type: string\n                  minLength: 1\n                  maxLength: 2048\n                  format: password\n                Visibility:\n                  description: The visibility of the comment. Options are either PRIVATE,\n                    where the comment is visible only to the comment author and\n                    document owner and co-owners, or PUBLIC, where the comment\n                    is visible to document owners, co-owners, and contributors.\n                  type: string\n                  enum:\n                    - PUBLIC\n                    - PRIVATE\n                NotifyCollaborators:\n                  description: Set this parameter to TRUE to send an email out to the\n                    document collaborators after the comment is created.\n                  type: boolean\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/api/v1/resources/{ResourceId}/customMetadata\":\n    put:\n      operationId: CreateCustomMetadata\n      description: Adds one or more custom properties to the specified resource (a folder,\n        document, or version).\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateCustomMetadataResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"484\":\n          description: CustomMetadataLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomMetadataLimitExceededException\"\n        \"485\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"486\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: ResourceId\n          in: path\n          required: true\n          description: The ID of the resource.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: versionid\n          in: query\n          required: false\n          description: The ID of the version, if the custom metadata is being added to a\n            document version.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - CustomMetadata\n              properties:\n                CustomMetadata:\n                  description: Custom metadata in the form of name-value pairs.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 8\n                  additionalProperties:\n                    $ref: \"#/components/schemas/CustomMetadataValueType\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    delete:\n      operationId: DeleteCustomMetadata\n      description: Deletes custom metadata from the specified resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteCustomMetadataResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"484\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"485\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: ResourceId\n          in: path\n          required: true\n          description: The ID of the resource, either a document or folder.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: versionId\n          in: query\n          required: false\n          description: The ID of the version, if the custom metadata is being deleted from\n            a document version.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: keys\n          in: query\n          required: false\n          description: List of properties to remove.\n          schema:\n            type: array\n            items:\n              type: string\n        - name: deleteAll\n          in: query\n          required: false\n          description: Flag to indicate removal of all custom metadata properties from the\n            specified resource.\n          schema:\n            type: boolean\n  /api/v1/folders:\n    post:\n      operationId: CreateFolder\n      description: Creates a folder with the specified name and parent folder.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateFolderResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityAlreadyExistsException\"\n        \"482\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"483\":\n          description: ConflictingOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictingOperationException\"\n        \"484\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"485\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"486\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"487\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"488\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ParentFolderId\n              properties:\n                Name:\n                  description: The name of the new folder.\n                  type: string\n                  pattern: \"[\\\\u0020-\\\\u202D\\\\u202F-\\\\uFFFF]+\"\n                  minLength: 1\n                  maxLength: 255\n                ParentFolderId:\n                  description: The ID of the parent folder.\n                  type: string\n                  pattern: \"[\\\\w+-.@]+\"\n                  minLength: 1\n                  maxLength: 128\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/api/v1/resources/{ResourceId}/labels\":\n    put:\n      operationId: CreateLabels\n      description: Adds the specified list of labels to the given resource (a document or\n        folder)\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateLabelsResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"485\":\n          description: TooManyLabelsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyLabelsException\"\n      parameters:\n        - name: ResourceId\n          in: path\n          required: true\n          description: The ID of the resource.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Labels\n              properties:\n                Labels:\n                  description: List of labels to add to the resource.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/SharedLabel\"\n                  maxItems: 20\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    delete:\n      operationId: DeleteLabels\n      description: Deletes the specified list of labels from a resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteLabelsResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: ResourceId\n          in: path\n          required: true\n          description: The ID of the resource.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: labels\n          in: query\n          required: false\n          description: List of labels to delete from the resource.\n          schema:\n            type: array\n            items:\n              type: string\n        - name: deleteAll\n          in: query\n          required: false\n          description: Flag to request removal of all labels from the specified resource.\n          schema:\n            type: boolean\n  \"/api/v1/organizations/{OrganizationId}/subscriptions\":\n    post:\n      operationId: CreateNotificationSubscription\n      description: \u003cp\u003eConfigure Amazon WorkDocs to use Amazon SNS notifications. The\n        endpoint receives a confirmation message, and must confirm the\n        subscription.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca\n        href=\"https://docs.aws.amazon.com/workdocs/latest/developerguide/subscribe-notifications.html\"\u003eSubscribe\n        to Notifications\u003c/a\u003e in the \u003ci\u003eAmazon WorkDocs Developer Guide\u003c/i\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateNotificationSubscriptionResponse\"\n        \"480\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"481\":\n          description: TooManySubscriptionsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManySubscriptionsException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: OrganizationId\n          in: path\n          required: true\n          description: The ID of the organization.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Endpoint\n                - Protocol\n                - SubscriptionType\n              properties:\n                Endpoint:\n                  description: The endpoint to receive the notifications. If the protocol\n                    is HTTPS, the endpoint is a URL that begins with\n                    \u003ccode\u003ehttps\u003c/code\u003e.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n                Protocol:\n                  description: The protocol to use. The supported value is https, which\n                    delivers JSON-encoded messages using HTTPS POST.\n                  type: string\n                  enum:\n                    - HTTPS\n                SubscriptionType:\n                  description: The notification type.\n                  type: string\n                  enum:\n                    - ALL\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: DescribeNotificationSubscriptions\n      description: Lists the specified notification subscriptions.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeNotificationSubscriptionsRespon\\\n                  se\"\n        \"480\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"481\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: OrganizationId\n          in: path\n          required: true\n          description: The ID of the organization.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: marker\n          in: query\n          required: false\n          description: The marker for the next set of results. (You received this marker\n            from a previous call.)\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of items to return with this call.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n  /api/v1/users:\n    post:\n      operationId: CreateUser\n      description: Creates a user in a Simple AD or Microsoft AD directory. The status of a\n        newly created user is \"ACTIVE\". New users can access Amazon WorkDocs.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateUserResponse\"\n        \"480\":\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityAlreadyExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Username\n                - GivenName\n                - Surname\n                - Password\n              properties:\n                OrganizationId:\n                  description: The ID of the organization.\n                  type: string\n                  pattern: \"[\u0026\\\\w+-.@]+\"\n                  minLength: 1\n                  maxLength: 256\n                Username:\n                  description: The login name of the user.\n                  type: string\n                  pattern: \"[\\\\w\\\\-+.]+(@[a-zA-Z0-9.\\\\-]+\\\\.[a-zA-Z]+)?\"\n                  minLength: 1\n                  maxLength: 256\n                EmailAddress:\n                  description: The email address of the user.\n                  type: string\n                  pattern: \"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}\"\n                  minLength: 1\n                  maxLength: 256\n                GivenName:\n                  description: The given name of the user.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Surname:\n                  description: The surname of the user.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Password:\n                  description: The password of the user.\n                  type: string\n                  pattern: \"[\\\\u0020-\\\\u00FF]+\"\n                  minLength: 4\n                  maxLength: 32\n                  format: password\n                TimeZoneId:\n                  description: The time zone ID of the user.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n                StorageRule:\n                  description: Describes the storage for a user.\n                  type: object\n                  properties:\n                    StorageAllocatedInBytes:\n                      $ref: \"#/components/schemas/PositiveSizeType\"\n                    StorageType:\n                      $ref: \"#/components/schemas/StorageType\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: DescribeUsers\n      description: \u003cp\u003eDescribes the specified users. You can describe all users or filter\n        the results (for example, by status or organization).\u003c/p\u003e \u003cp\u003eBy default,\n        Amazon WorkDocs returns the first 24 active or pending users. If there\n        are more results, the response includes a marker that you can use to\n        request the next set of results.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeUsersResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"485\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"486\":\n          description: RequestedEntityTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RequestedEntityTooLargeException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: organizationId\n          in: query\n          required: false\n          description: The ID of the organization.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: userIds\n          in: query\n          required: false\n          description: The IDs of the users.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2000\n            pattern: \"[\u0026\\\\w+-.@, ]+\"\n        - name: query\n          in: query\n          required: false\n          description: A query to filter users by user name.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 512\n            pattern: \"[\\\\u0020-\\\\uFFFF]+\"\n        - name: include\n          in: query\n          required: false\n          description: The state of the users. Specify \"ALL\" to include inactive users.\n          schema:\n            type: string\n            enum:\n              - ALL\n              - ACTIVE_PENDING\n        - name: order\n          in: query\n          required: false\n          description: The order for the results.\n          schema:\n            type: string\n            enum:\n              - ASCENDING\n              - DESCENDING\n        - name: sort\n          in: query\n          required: false\n          description: The sorting criteria.\n          schema:\n            type: string\n            enum:\n              - USER_NAME\n              - FULL_NAME\n              - STORAGE_LIMIT\n              - USER_STATUS\n              - STORAGE_USED\n        - name: marker\n          in: query\n          required: false\n          description: The marker for the next set of results. (You received this marker\n            from a previous call.)\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of items to return.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n        - name: fields\n          in: query\n          required: false\n          description: A comma-separated list of values. Specify \"STORAGE_METADATA\" to\n            include the user storage quota and utilization information.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\\\\w,]+\"\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: Marker\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n  \"/api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}\":\n    delete:\n      operationId: DeleteComment\n      description: Deletes the specified comment from the document version.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"482\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"483\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"484\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"485\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"486\":\n          description: DocumentLockedForCommentsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentLockedForCommentsException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: VersionId\n          in: path\n          required: true\n          description: The ID of the document version.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: CommentId\n          in: path\n          required: true\n          description: The ID of the comment.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/api/v1/documents/{DocumentId}\":\n    delete:\n      operationId: DeleteDocument\n      description: Permanently deletes the specified document and its associated metadata.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"482\":\n          description: ConflictingOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictingOperationException\"\n        \"483\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"484\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"485\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"486\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"487\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetDocument\n      description: Retrieves details of a document.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDocumentResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"484\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"485\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"486\":\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPasswordException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: includeCustomMetadata\n          in: query\n          required: false\n          description: Set this to \u003ccode\u003eTRUE\u003c/code\u003e to include custom metadata in the\n            response.\n          schema:\n            type: boolean\n    patch:\n      operationId: UpdateDocument\n      description: Updates the specified attributes of a document. The user must have\n        access to both the document and its parent folder, if applicable.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityAlreadyExistsException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"484\":\n          description: ConflictingOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictingOperationException\"\n        \"485\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"486\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"487\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"488\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"489\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Name:\n                  description: The name of the document.\n                  type: string\n                  pattern: \"[\\\\u0020-\\\\u202D\\\\u202F-\\\\uFFFF]+\"\n                  minLength: 1\n                  maxLength: 255\n                ParentFolderId:\n                  description: The ID of the parent folder.\n                  type: string\n                  pattern: \"[\\\\w+-.@]+\"\n                  minLength: 1\n                  maxLength: 128\n                ResourceState:\n                  description: The resource state of the document. Only ACTIVE and RECYCLED\n                    are supported.\n                  type: string\n                  enum:\n                    - ACTIVE\n                    - RESTORING\n                    - RECYCLING\n                    - RECYCLED\n        required: true\n  \"/api/v1/folders/{FolderId}\":\n    delete:\n      operationId: DeleteFolder\n      description: Permanently deletes the specified folder and its contents.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"482\":\n          description: ConflictingOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictingOperationException\"\n        \"483\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"484\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"485\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"486\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"487\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: FolderId\n          in: path\n          required: true\n          description: The ID of the folder.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetFolder\n      description: Retrieves the metadata of the specified folder.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFolderResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"484\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"485\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"486\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: FolderId\n          in: path\n          required: true\n          description: The ID of the folder.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: includeCustomMetadata\n          in: query\n          required: false\n          description: Set to TRUE to include custom metadata in the response.\n          schema:\n            type: boolean\n    patch:\n      operationId: UpdateFolder\n      description: Updates the specified attributes of the specified folder. The user must\n        have access to both the folder and its parent folder, if applicable.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityAlreadyExistsException\"\n        \"482\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"483\":\n          description: ConflictingOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictingOperationException\"\n        \"484\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"486\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"487\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"488\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"489\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: FolderId\n          in: path\n          required: true\n          description: The ID of the folder.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Name:\n                  description: The name of the folder.\n                  type: string\n                  pattern: \"[\\\\u0020-\\\\u202D\\\\u202F-\\\\uFFFF]+\"\n                  minLength: 1\n                  maxLength: 255\n                ParentFolderId:\n                  description: The ID of the parent folder.\n                  type: string\n                  pattern: \"[\\\\w+-.@]+\"\n                  minLength: 1\n                  maxLength: 128\n                ResourceState:\n                  description: The resource state of the folder. Only ACTIVE and RECYCLED\n                    are accepted values from the API.\n                  type: string\n                  enum:\n                    - ACTIVE\n                    - RESTORING\n                    - RECYCLING\n                    - RECYCLED\n        required: true\n  \"/api/v1/folders/{FolderId}/contents\":\n    delete:\n      operationId: DeleteFolderContents\n      description: Deletes the contents of the specified folder.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"482\":\n          description: ConflictingOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictingOperationException\"\n        \"483\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"484\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"485\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"486\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: FolderId\n          in: path\n          required: true\n          description: The ID of the folder.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: DescribeFolderContents\n      description: \u003cp\u003eDescribes the contents of the specified folder, including its\n        documents and subfolders.\u003c/p\u003e \u003cp\u003eBy default, Amazon WorkDocs returns the\n        first 100 active document and folder metadata items. If there are more\n        results, the response includes a marker that you can use to request the\n        next set of results. You can also request initialized documents.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeFolderContentsResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"485\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: FolderId\n          in: path\n          required: true\n          description: The ID of the folder.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: sort\n          in: query\n          required: false\n          description: The sorting criteria.\n          schema:\n            type: string\n            enum:\n              - DATE\n              - NAME\n        - name: order\n          in: query\n          required: false\n          description: The order for the contents of the folder.\n          schema:\n            type: string\n            enum:\n              - ASCENDING\n              - DESCENDING\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of items to return with this call.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n        - name: marker\n          in: query\n          required: false\n          description: The marker for the next set of results. This marker was received\n            from a previous call.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n        - name: type\n          in: query\n          required: false\n          description: The type of items.\n          schema:\n            type: string\n            enum:\n              - ALL\n              - DOCUMENT\n              - FOLDER\n        - name: include\n          in: query\n          required: false\n          description: The contents to include. Specify \"INITIALIZED\" to include\n            initialized documents.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\\\\w,]+\"\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: Marker\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n  \"/api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}\":\n    delete:\n      operationId: DeleteNotificationSubscription\n      description: Deletes the specified subscription from the specified organization.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"481\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n      parameters:\n        - name: SubscriptionId\n          in: path\n          required: true\n          description: The ID of the subscription.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: OrganizationId\n          in: path\n          required: true\n          description: The ID of the organization.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/api/v1/users/{UserId}\":\n    delete:\n      operationId: DeleteUser\n      description: Deletes the specified user from a Simple AD or Microsoft AD directory.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: UserId\n          in: path\n          required: true\n          description: The ID of the user.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    patch:\n      operationId: UpdateUser\n      description: Updates the specified attributes of the specified user, and grants or\n        revokes administrative privileges to the Amazon WorkDocs site.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateUserResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: IllegalUserStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IllegalUserStateException\"\n        \"484\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"485\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"486\":\n          description: DeactivatingLastSystemUserException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeactivatingLastSystemUserException\"\n        \"487\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: UserId\n          in: path\n          required: true\n          description: The ID of the user.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                GivenName:\n                  description: The given name of the user.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Surname:\n                  description: The surname of the user.\n                  type: string\n                  minLength: 1\n                  maxLength: 64\n                Type:\n                  description: The type of the user.\n                  type: string\n                  enum:\n                    - USER\n                    - ADMIN\n                    - POWERUSER\n                    - MINIMALUSER\n                    - WORKSPACESUSER\n                StorageRule:\n                  description: Describes the storage for a user.\n                  type: object\n                  properties:\n                    StorageAllocatedInBytes:\n                      $ref: \"#/components/schemas/PositiveSizeType\"\n                    StorageType:\n                      $ref: \"#/components/schemas/StorageType\"\n                TimeZoneId:\n                  description: The time zone ID of the user.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n                Locale:\n                  description: The locale of the user.\n                  type: string\n                  enum:\n                    - en\n                    - fr\n                    - ko\n                    - de\n                    - es\n                    - ja\n                    - ru\n                    - zh_CN\n                    - zh_TW\n                    - pt_BR\n                    - default\n                GrantPoweruserPrivileges:\n                  description: Boolean value to determine whether the user is granted\n                    Poweruser privileges.\n                  type: string\n                  enum:\n                    - \"TRUE\"\n                    - \"FALSE\"\n        required: true\n  /api/v1/activities:\n    get:\n      operationId: DescribeActivities\n      description: Describes the user activities in a specified time period.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeActivitiesResponse\"\n        \"480\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"481\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: startTime\n          in: query\n          required: false\n          description: The timestamp that determines the starting time of the activities.\n            The response includes the activities performed after the specified\n            timestamp.\n          schema:\n            type: string\n            format: date-time\n        - name: endTime\n          in: query\n          required: false\n          description: The timestamp that determines the end time of the activities. The\n            response includes the activities performed before the specified\n            timestamp.\n          schema:\n            type: string\n            format: date-time\n        - name: organizationId\n          in: query\n          required: false\n          description: The ID of the organization. This is a mandatory parameter when using\n            administrative API (SigV4) requests.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: activityTypes\n          in: query\n          required: false\n          description: Specifies which activity types to include in the response. If this\n            field is left empty, all activity types are returned.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1024\n            pattern: \"[\\\\w,]+\"\n        - name: resourceId\n          in: query\n          required: false\n          description: The document or folder ID for which to describe activity types.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: userId\n          in: query\n          required: false\n          description: The ID of the user who performed the action. The response includes\n            activities pertaining to this user. This is an optional parameter\n            and is only applicable for administrative API (SigV4) requests.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: includeIndirectActivities\n          in: query\n          required: false\n          description: Includes indirect activities. An indirect activity results from a\n            direct activity performed on a parent resource. For example, sharing\n            a parent folder (the direct activity) shares all of the subfolders\n            and documents within the parent folder (the indirect activity).\n          schema:\n            type: boolean\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of items to return.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n        - name: marker\n          in: query\n          required: false\n          description: The marker for the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n            pattern: \"[\\\\u0000-\\\\u00FF]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/api/v1/documents/{DocumentId}/versions/{VersionId}/comments\":\n    get:\n      operationId: DescribeComments\n      description: List all the comments for the specified document version.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeCommentsResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"482\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"483\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"484\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"485\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: VersionId\n          in: path\n          required: true\n          description: The ID of the document version.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of items to return.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n        - name: marker\n          in: query\n          required: false\n          description: The marker for the next set of results. This marker was received\n            from a previous call.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n            pattern: \"[\\\\u0000-\\\\u00FF]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/api/v1/documents/{DocumentId}/versions\":\n    get:\n      operationId: DescribeDocumentVersions\n      description: \u003cp\u003eRetrieves the document versions for the specified document.\u003c/p\u003e \u003cp\u003eBy\n        default, only active versions are returned.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeDocumentVersionsResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"484\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"485\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"486\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: marker\n          in: query\n          required: false\n          description: The marker for the next set of results. (You received this marker\n            from a previous call.)\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of versions to return with this call.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n        - name: include\n          in: query\n          required: false\n          description: A comma-separated list of values. Specify \"INITIALIZED\" to include\n            incomplete versions.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\\\\w,]+\"\n        - name: fields\n          in: query\n          required: false\n          description: Specify \"SOURCE\" to include initialized versions and a URL for the\n            source document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\\\\w,]+\"\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: Marker\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /api/v1/groups#searchQuery:\n    get:\n      operationId: DescribeGroups\n      description: Describes the groups specified by the query. Groups are defined by the\n        underlying Active Directory.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeGroupsResponse\"\n        \"480\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"481\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"482\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: searchQuery\n          in: query\n          required: true\n          description: A query to describe groups by group name.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 512\n            pattern: \"[\\\\u0020-\\\\uFFFF]+\"\n        - name: organizationId\n          in: query\n          required: false\n          description: The ID of the organization.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: marker\n          in: query\n          required: false\n          description: The marker for the next set of results. (You received this marker\n            from a previous call.)\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n            pattern: \"[\\\\u0000-\\\\u00FF]+\"\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of items to return with this call.\n          schema:\n            type: integer\n            minimum: 1\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /api/v1/me/root#Authentication:\n    get:\n      operationId: DescribeRootFolders\n      description: \u003cp\u003eDescribes the current user's special folders; the\n        \u003ccode\u003eRootFolder\u003c/code\u003e and the \u003ccode\u003eRecycleBin\u003c/code\u003e.\n        \u003ccode\u003eRootFolder\u003c/code\u003e is the root of user's files and folders and\n        \u003ccode\u003eRecycleBin\u003c/code\u003e is the root of recycled items. This is not a\n        valid action for SigV4 (administrative API) clients.\u003c/p\u003e \u003cp\u003eThis action\n        requires an authentication token. To get an authentication token,\n        register an application with Amazon WorkDocs. For more information, see\n        \u003ca\n        href=\"https://docs.aws.amazon.com/workdocs/latest/developerguide/wd-auth-user.html\"\u003eAuthentication\n        and Access Control for User Applications\u003c/a\u003e in the \u003ci\u003eAmazon WorkDocs\n        Developer Guide\u003c/i\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeRootFoldersResponse\"\n        \"480\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"481\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: true\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of items to return.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n        - name: marker\n          in: query\n          required: false\n          description: The marker for the next set of results. (You received this marker\n            from a previous call.)\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /api/v1/me#Authentication:\n    get:\n      operationId: GetCurrentUser\n      description: Retrieves details of the current user for whom the authentication token\n        was generated. This is not a valid action for SigV4 (administrative API)\n        clients.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCurrentUserResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: true\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/api/v1/documents/{DocumentId}/path\":\n    get:\n      operationId: GetDocumentPath\n      description: \u003cp\u003eRetrieves the path information (the hierarchy from the root folder)\n        for the requested document.\u003c/p\u003e \u003cp\u003eBy default, Amazon WorkDocs returns a\n        maximum of 100 levels upwards from the requested document and only\n        includes the IDs of the parent folders in the path. You can limit the\n        maximum number of levels. You can also request the names of the parent\n        folders.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDocumentPathResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: DocumentId\n          in: path\n          required: true\n          description: The ID of the document.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of levels in the hierarchy to return.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n        - name: fields\n          in: query\n          required: false\n          description: A comma-separated list of values. Specify \u003ccode\u003eNAME\u003c/code\u003e to\n            include the names of the parent folders.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\\\\w,]+\"\n        - name: marker\n          in: query\n          required: false\n          description: This value is not supported.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/api/v1/folders/{FolderId}/path\":\n    get:\n      operationId: GetFolderPath\n      description: \u003cp\u003eRetrieves the path information (the hierarchy from the root folder)\n        for the specified folder.\u003c/p\u003e \u003cp\u003eBy default, Amazon WorkDocs returns a\n        maximum of 100 levels upwards from the requested folder and only\n        includes the IDs of the parent folders in the path. You can limit the\n        maximum number of levels. You can also request the parent folder\n        names.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFolderPathResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: FolderId\n          in: path\n          required: true\n          description: The ID of the folder.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of levels in the hierarchy to return.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n        - name: fields\n          in: query\n          required: false\n          description: A comma-separated list of values. Specify \"NAME\" to include the\n            names of the parent folders.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\\\\w,]+\"\n        - name: marker\n          in: query\n          required: false\n          description: This value is not supported.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /api/v1/resources:\n    get:\n      operationId: GetResources\n      description: Retrieves a collection of resources, including folders and documents.\n        The only \u003ccode\u003eCollectionType\u003c/code\u003e supported is\n        \u003ccode\u003eSHARED_WITH_ME\u003c/code\u003e.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetResourcesResponse\"\n        \"480\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"481\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"483\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: The Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API operation\n            using AWS credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: userId\n          in: query\n          required: false\n          description: The user ID for the resource collection. This is a required field\n            for accessing the API operation using IAM credentials.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: collectionType\n          in: query\n          required: false\n          description: The collection type.\n          schema:\n            type: string\n            enum:\n              - SHARED_WITH_ME\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of resources to return.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 999\n        - name: marker\n          in: query\n          required: false\n          description: The marker for the next set of results. This marker was received\n            from a previous call.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /api/v1/documents:\n    post:\n      operationId: InitiateDocumentVersionUpload\n      description: \u003cp\u003eCreates a new document object and version object.\u003c/p\u003e \u003cp\u003eThe client\n        specifies the parent folder ID and name of the document to upload. The\n        ID is optionally specified when creating a new version of an existing\n        document. This is the first step to upload a document. Next, upload the\n        document to the URL returned from the call, and then call\n        \u003ca\u003eUpdateDocumentVersion\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eTo cancel the document upload, call\n        \u003ca\u003eAbortDocumentVersionUpload\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InitiateDocumentVersionUploadResponse\"\n        \"480\":\n          description: EntityNotExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityNotExistsException\"\n        \"481\":\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EntityAlreadyExistsException\"\n        \"482\":\n          description: StorageLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageLimitExceededException\"\n        \"483\":\n          description: StorageLimitWillExceedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageLimitWillExceedException\"\n        \"484\":\n          description: ProhibitedStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProhibitedStateException\"\n        \"485\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"486\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"487\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"488\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"489\":\n          description: DraftUploadOutOfSyncException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DraftUploadOutOfSyncException\"\n        \"490\":\n          description: ResourceAlreadyCheckedOutException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceAlreadyCheckedOutException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ParentFolderId\n              properties:\n                Id:\n                  description: The ID of the document.\n                  type: string\n                  pattern: \"[\\\\w+-.@]+\"\n                  minLength: 1\n                  maxLength: 128\n                Name:\n                  description: The name of the document.\n                  type: string\n                  pattern: \"[\\\\u0020-\\\\u202D\\\\u202F-\\\\uFFFF]+\"\n                  minLength: 1\n                  maxLength: 255\n                ContentCreatedTimestamp:\n                  description: The timestamp when the content of the document was\n                    originally created.\n                  type: string\n                  format: date-time\n                ContentModifiedTimestamp:\n                  description: The timestamp when the content of the document was modified.\n                  type: string\n                  format: date-time\n                ContentType:\n                  description: The content type of the document.\n                  type: string\n                  minLength: 1\n                  maxLength: 128\n                DocumentSizeInBytes:\n                  description: The size of the document, in bytes.\n                  type: integer\n                ParentFolderId:\n                  description: The ID of the parent folder.\n                  type: string\n                  pattern: \"[\\\\w+-.@]+\"\n                  minLength: 1\n                  maxLength: 128\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/api/v1/resources/{ResourceId}/permissions/{PrincipalId}\":\n    delete:\n      operationId: RemoveResourcePermission\n      description: Removes the permission for the specified principal from the specified\n        resource.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: UnauthorizedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedOperationException\"\n        \"481\":\n          description: UnauthorizedResourceAccessException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedResourceAccessException\"\n        \"482\":\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailedDependencyException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n      parameters:\n        - name: Authentication\n          in: header\n          required: false\n          description: Amazon WorkDocs authentication token. Do not set this field when\n            using administrative API actions, as in accessing the API using AWS\n            credentials.\n          schema:\n            type: string\n            format: password\n            minLength: 1\n            maxLength: 8199\n        - name: ResourceId\n          in: path\n          required: true\n          description: The ID of the resource.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: \"[\\\\w+-.@]+\"\n        - name: PrincipalId\n          in: path\n          required: true\n          description: The principal ID of the resource.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 256\n            pattern: \"[\u0026\\\\w+-.@]+\"\n        - name: type\n          in: query\n          required: false\n          description: The principal type of the resource.\n          schema:\n            type: string\n            enum:\n              - USER\n              - GROUP\n              - INVITE\n              - ANONYMOUS\n              - ORGANIZATION\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://workdocs.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon WorkDocs multi-region endpoint\n  - url: https://workdocs.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon WorkDocs multi-region endpoint\n  - url: http://workdocs.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon WorkDocs endpoint for China (Beijing) and China (Ningxia)\n  - url: https://workdocs.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon WorkDocs endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    EntityNotExistsException: {}\n    ProhibitedStateException: {}\n    UnauthorizedOperationException: {}\n    UnauthorizedResourceAccessException: {}\n    FailedDependencyException: {}\n    ServiceUnavailableException: {}\n    ActivateUserResponse:\n      type: object\n      properties:\n        User:\n          $ref: \"#/components/schemas/User\"\n    AddResourcePermissionsResponse:\n      type: object\n      properties:\n        ShareResults:\n          $ref: \"#/components/schemas/ShareResultsList\"\n    SharePrincipal:\n      type: object\n      required:\n        - Id\n        - Type\n        - Role\n      properties:\n        Id:\n          $ref: \"#/components/schemas/IdType\"\n        Type:\n          $ref: \"#/components/schemas/PrincipalType\"\n        Role:\n          $ref: \"#/components/schemas/RoleType\"\n      description: Describes the recipient type and ID, if available.\n    BooleanType:\n      type: boolean\n    MessageType:\n      type: string\n      minLength: 0\n      maxLength: 2048\n      format: password\n    CreateCommentResponse:\n      type: object\n      properties:\n        Comment:\n          $ref: \"#/components/schemas/Comment\"\n    DocumentLockedForCommentsException: {}\n    InvalidCommentOperationException: {}\n    CreateCustomMetadataResponse:\n      type: object\n      properties: {}\n    CustomMetadataValueType:\n      type: string\n      pattern: \"[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*\"\n      minLength: 1\n      maxLength: 256\n    CustomMetadataLimitExceededException: {}\n    CreateFolderResponse:\n      type: object\n      properties:\n        Metadata:\n          $ref: \"#/components/schemas/FolderMetadata\"\n    EntityAlreadyExistsException: {}\n    ConflictingOperationException: {}\n    LimitExceededException: {}\n    CreateLabelsResponse:\n      type: object\n      properties: {}\n    SharedLabel:\n      type: string\n      pattern: \"[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*\"\n      minLength: 1\n      maxLength: 32\n    TooManyLabelsException: {}\n    CreateNotificationSubscriptionResponse:\n      type: object\n      properties:\n        Subscription:\n          $ref: \"#/components/schemas/Subscription\"\n    TooManySubscriptionsException: {}\n    CreateUserResponse:\n      type: object\n      properties:\n        User:\n          $ref: \"#/components/schemas/User\"\n    PositiveSizeType:\n      type: integer\n      minimum: 0\n    StorageType:\n      type: string\n      enum:\n        - UNLIMITED\n        - QUOTA\n    DeleteCustomMetadataResponse:\n      type: object\n      properties: {}\n    CustomMetadataKeyType:\n      type: string\n      pattern: \"[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*\"\n      minLength: 1\n      maxLength: 56\n    ConcurrentModificationException: {}\n    DeleteLabelsResponse:\n      type: object\n      properties: {}\n    DescribeActivitiesResponse:\n      type: object\n      properties:\n        UserActivities:\n          $ref: \"#/components/schemas/UserActivities\"\n        Marker:\n          $ref: \"#/components/schemas/MarkerType\"\n    InvalidArgumentException: {}\n    DescribeCommentsResponse:\n      type: object\n      properties:\n        Comments:\n          $ref: \"#/components/schemas/CommentList\"\n        Marker:\n          $ref: \"#/components/schemas/MarkerType\"\n    DescribeDocumentVersionsResponse:\n      type: object\n      properties:\n        DocumentVersions:\n          $ref: \"#/components/schemas/DocumentVersionMetadataList\"\n        Marker:\n          $ref: \"#/components/schemas/PageMarkerType\"\n    DescribeFolderContentsResponse:\n      type: object\n      properties:\n        Folders:\n          $ref: \"#/components/schemas/FolderMetadataList\"\n        Documents:\n          $ref: \"#/components/schemas/DocumentMetadataList\"\n        Marker:\n          $ref: \"#/components/schemas/PageMarkerType\"\n    DescribeGroupsResponse:\n      type: object\n      properties:\n        Groups:\n          $ref: \"#/components/schemas/GroupMetadataList\"\n        Marker:\n          $ref: \"#/components/schemas/MarkerType\"\n    DescribeNotificationSubscriptionsResponse:\n      type: object\n      properties:\n        Subscriptions:\n          $ref: \"#/components/schemas/SubscriptionList\"\n        Marker:\n          $ref: \"#/components/schemas/PageMarkerType\"\n    DescribeResourcePermissionsResponse:\n      type: object\n      properties:\n        Principals:\n          $ref: \"#/components/schemas/PrincipalList\"\n        Marker:\n          $ref: \"#/components/schemas/PageMarkerType\"\n    DescribeRootFoldersResponse:\n      type: object\n      properties:\n        Folders:\n          $ref: \"#/components/schemas/FolderMetadataList\"\n        Marker:\n          $ref: \"#/components/schemas/PageMarkerType\"\n    DescribeUsersResponse:\n      type: object\n      properties:\n        Users:\n          $ref: \"#/components/schemas/OrganizationUserList\"\n        TotalNumberOfUsers:\n          $ref: \"#/components/schemas/SizeType\"\n        Marker:\n          $ref: \"#/components/schemas/PageMarkerType\"\n    RequestedEntityTooLargeException: {}\n    GetCurrentUserResponse:\n      type: object\n      properties:\n        User:\n          $ref: \"#/components/schemas/User\"\n    GetDocumentResponse:\n      type: object\n      properties:\n        Metadata:\n          $ref: \"#/components/schemas/DocumentMetadata\"\n        CustomMetadata:\n          $ref: \"#/components/schemas/CustomMetadataMap\"\n    InvalidPasswordException: {}\n    GetDocumentPathResponse:\n      type: object\n      properties:\n        Path:\n          $ref: \"#/components/schemas/ResourcePath\"\n    GetDocumentVersionResponse:\n      type: object\n      properties:\n        Metadata:\n          $ref: \"#/components/schemas/DocumentVersionMetadata\"\n        CustomMetadata:\n          $ref: \"#/components/schemas/CustomMetadataMap\"\n    GetFolderResponse:\n      type: object\n      properties:\n        Metadata:\n          $ref: \"#/components/schemas/FolderMetadata\"\n        CustomMetadata:\n          $ref: \"#/components/schemas/CustomMetadataMap\"\n    GetFolderPathResponse:\n      type: object\n      properties:\n        Path:\n          $ref: \"#/components/schemas/ResourcePath\"\n    GetResourcesResponse:\n      type: object\n      properties:\n        Folders:\n          $ref: \"#/components/schemas/FolderMetadataList\"\n        Documents:\n          $ref: \"#/components/schemas/DocumentMetadataList\"\n        Marker:\n          $ref: \"#/components/schemas/PageMarkerType\"\n    InitiateDocumentVersionUploadResponse:\n      type: object\n      properties:\n        Metadata:\n          $ref: \"#/components/schemas/DocumentMetadata\"\n        UploadMetadata:\n          $ref: \"#/components/schemas/UploadMetadata\"\n    StorageLimitExceededException: {}\n    StorageLimitWillExceedException: {}\n    DraftUploadOutOfSyncException: {}\n    ResourceAlreadyCheckedOutException: {}\n    InvalidOperationException: {}\n    UpdateUserResponse:\n      type: object\n      properties:\n        User:\n          $ref: \"#/components/schemas/User\"\n    IllegalUserStateException: {}\n    DeactivatingLastSystemUserException: {}\n    AuthenticationHeaderType:\n      type: string\n      minLength: 1\n      maxLength: 8199\n      format: password\n    ResourceIdType:\n      type: string\n      pattern: \"[\\\\w+-.@]+\"\n      minLength: 1\n      maxLength: 128\n    DocumentVersionIdType:\n      type: string\n      pattern: \"[\\\\w+-.@]+\"\n      minLength: 1\n      maxLength: 128\n    AbortDocumentVersionUploadRequest:\n      type: object\n      properties: {}\n    IdType:\n      type: string\n      pattern: \"[\u0026\\\\w+-.@]+\"\n      minLength: 1\n      maxLength: 256\n    ActivateUserRequest:\n      type: object\n      properties: {}\n    User:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/IdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        EmailAddress:\n          $ref: \"#/components/schemas/EmailAddressType\"\n        GivenName:\n          $ref: \"#/components/schemas/UserAttributeValueType\"\n        Surname:\n          $ref: \"#/components/schemas/UserAttributeValueType\"\n        OrganizationId:\n          $ref: \"#/components/schemas/IdType\"\n        RootFolderId:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        RecycleBinFolderId:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        Status:\n          $ref: \"#/components/schemas/UserStatusType\"\n        Type:\n          $ref: \"#/components/schemas/UserType\"\n        CreatedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        ModifiedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        TimeZoneId:\n          $ref: \"#/components/schemas/TimeZoneIdType\"\n        Locale:\n          $ref: \"#/components/schemas/LocaleType\"\n        Storage:\n          $ref: \"#/components/schemas/UserStorageMetadata\"\n      description: Describes a user.\n    ActivityType:\n      type: string\n      enum:\n        - DOCUMENT_CHECKED_IN\n        - DOCUMENT_CHECKED_OUT\n        - DOCUMENT_RENAMED\n        - DOCUMENT_VERSION_UPLOADED\n        - DOCUMENT_VERSION_DELETED\n        - DOCUMENT_VERSION_VIEWED\n        - DOCUMENT_VERSION_DOWNLOADED\n        - DOCUMENT_RECYCLED\n        - DOCUMENT_RESTORED\n        - DOCUMENT_REVERTED\n        - DOCUMENT_SHARED\n        - DOCUMENT_UNSHARED\n        - DOCUMENT_SHARE_PERMISSION_CHANGED\n        - DOCUMENT_SHAREABLE_LINK_CREATED\n        - DOCUMENT_SHAREABLE_LINK_REMOVED\n        - DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED\n        - DOCUMENT_MOVED\n        - DOCUMENT_COMMENT_ADDED\n        - DOCUMENT_COMMENT_DELETED\n        - DOCUMENT_ANNOTATION_ADDED\n        - DOCUMENT_ANNOTATION_DELETED\n        - FOLDER_CREATED\n        - FOLDER_DELETED\n        - FOLDER_RENAMED\n        - FOLDER_RECYCLED\n        - FOLDER_RESTORED\n        - FOLDER_SHARED\n        - FOLDER_UNSHARED\n        - FOLDER_SHARE_PERMISSION_CHANGED\n        - FOLDER_SHAREABLE_LINK_CREATED\n        - FOLDER_SHAREABLE_LINK_REMOVED\n        - FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED\n        - FOLDER_MOVED\n    TimestampType:\n      type: string\n      format: date-time\n    UserMetadata:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/IdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        GivenName:\n          $ref: \"#/components/schemas/UserAttributeValueType\"\n        Surname:\n          $ref: \"#/components/schemas/UserAttributeValueType\"\n        EmailAddress:\n          $ref: \"#/components/schemas/EmailAddressType\"\n      description: Describes the metadata of the user.\n    Participants:\n      type: object\n      properties:\n        Users:\n          $ref: \"#/components/schemas/UserMetadataList\"\n        Groups:\n          $ref: \"#/components/schemas/GroupMetadataList\"\n      description: Describes the users or user groups.\n    ResourceMetadata:\n      type: object\n      properties:\n        Type:\n          $ref: \"#/components/schemas/ResourceType\"\n        Name:\n          $ref: \"#/components/schemas/ResourceNameType\"\n        OriginalName:\n          $ref: \"#/components/schemas/ResourceNameType\"\n        Id:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        VersionId:\n          $ref: \"#/components/schemas/DocumentVersionIdType\"\n        Owner:\n          $ref: \"#/components/schemas/UserMetadata\"\n        ParentId:\n          $ref: \"#/components/schemas/ResourceIdType\"\n      description: Describes the metadata of a resource.\n    CommentMetadata:\n      type: object\n      properties:\n        CommentId:\n          $ref: \"#/components/schemas/CommentIdType\"\n        Contributor:\n          $ref: \"#/components/schemas/User\"\n        CreatedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        CommentStatus:\n          $ref: \"#/components/schemas/CommentStatusType\"\n        RecipientId:\n          $ref: \"#/components/schemas/IdType\"\n      description: Describes the metadata of a comment.\n    Activity:\n      type: object\n      properties:\n        Type:\n          $ref: \"#/components/schemas/ActivityType\"\n        TimeStamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        IsIndirectActivity:\n          $ref: \"#/components/schemas/BooleanType\"\n        OrganizationId:\n          $ref: \"#/components/schemas/IdType\"\n        Initiator:\n          $ref: \"#/components/schemas/UserMetadata\"\n        Participants:\n          $ref: \"#/components/schemas/Participants\"\n        ResourceMetadata:\n          $ref: \"#/components/schemas/ResourceMetadata\"\n        OriginalParent:\n          $ref: \"#/components/schemas/ResourceMetadata\"\n        CommentMetadata:\n          $ref: \"#/components/schemas/CommentMetadata\"\n      description: Describes the activity information.\n    ActivityNamesFilterType:\n      type: string\n      pattern: \"[\\\\w,]+\"\n      minLength: 1\n      maxLength: 1024\n    SharePrincipalList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SharePrincipal\"\n    NotificationOptions:\n      type: object\n      properties:\n        SendEmail:\n          $ref: \"#/components/schemas/BooleanType\"\n        EmailMessage:\n          $ref: \"#/components/schemas/MessageType\"\n      description: Set of options which defines notification preferences of given action.\n    AddResourcePermissionsRequest:\n      type: object\n      required:\n        - Principals\n      properties:\n        Principals:\n          $ref: \"#/components/schemas/SharePrincipalList\"\n        NotificationOptions:\n          $ref: \"#/components/schemas/NotificationOptions\"\n    ShareResultsList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ShareResult\"\n    BooleanEnumType:\n      type: string\n      enum:\n        - \"TRUE\"\n        - \"FALSE\"\n    CommentIdType:\n      type: string\n      pattern: \"[\\\\w+-.@]+\"\n      minLength: 1\n      maxLength: 128\n    CommentTextType:\n      type: string\n      minLength: 1\n      maxLength: 2048\n      format: password\n    CommentStatusType:\n      type: string\n      enum:\n        - DRAFT\n        - PUBLISHED\n        - DELETED\n    CommentVisibilityType:\n      type: string\n      enum:\n        - PUBLIC\n        - PRIVATE\n    Comment:\n      type: object\n      required:\n        - CommentId\n      properties:\n        CommentId:\n          $ref: \"#/components/schemas/CommentIdType\"\n        ParentId:\n          $ref: \"#/components/schemas/CommentIdType\"\n        ThreadId:\n          $ref: \"#/components/schemas/CommentIdType\"\n        Text:\n          $ref: \"#/components/schemas/CommentTextType\"\n        Contributor:\n          $ref: \"#/components/schemas/User\"\n        CreatedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        Status:\n          $ref: \"#/components/schemas/CommentStatusType\"\n        Visibility:\n          $ref: \"#/components/schemas/CommentVisibilityType\"\n        RecipientId:\n          $ref: \"#/components/schemas/IdType\"\n      description: Describes a comment.\n    CommentList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Comment\"\n    CreateCommentRequest:\n      type: object\n      required:\n        - Text\n      properties:\n        ParentId:\n          $ref: \"#/components/schemas/CommentIdType\"\n        ThreadId:\n          $ref: \"#/components/schemas/CommentIdType\"\n        Text:\n          $ref: \"#/components/schemas/CommentTextType\"\n        Visibility:\n          $ref: \"#/components/schemas/CommentVisibilityType\"\n        NotifyCollaborators:\n          $ref: \"#/components/schemas/BooleanType\"\n    CustomMetadataMap:\n      type: object\n      minProperties: 1\n      maxProperties: 8\n      additionalProperties:\n        $ref: \"#/components/schemas/CustomMetadataValueType\"\n    CreateCustomMetadataRequest:\n      type: object\n      required:\n        - CustomMetadata\n      properties:\n        CustomMetadata:\n          $ref: \"#/components/schemas/CustomMetadataMap\"\n    ResourceNameType:\n      type: string\n      pattern: \"[\\\\u0020-\\\\u202D\\\\u202F-\\\\uFFFF]+\"\n      minLength: 1\n      maxLength: 255\n    CreateFolderRequest:\n      type: object\n      required:\n        - ParentFolderId\n      properties:\n        Name:\n          $ref: \"#/components/schemas/ResourceNameType\"\n        ParentFolderId:\n          $ref: \"#/components/schemas/ResourceIdType\"\n    FolderMetadata:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        Name:\n          $ref: \"#/components/schemas/ResourceNameType\"\n        CreatorId:\n          $ref: \"#/components/schemas/IdType\"\n        ParentFolderId:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        CreatedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        ModifiedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        ResourceState:\n          $ref: \"#/components/schemas/ResourceStateType\"\n        Signature:\n          $ref: \"#/components/schemas/HashType\"\n        Labels:\n          $ref: \"#/components/schemas/SharedLabels\"\n        Size:\n          $ref: \"#/components/schemas/SizeType\"\n        LatestVersionSize:\n          $ref: \"#/components/schemas/SizeType\"\n      description: Describes a folder.\n    SharedLabels:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SharedLabel\"\n      maxItems: 20\n    CreateLabelsRequest:\n      type: object\n      required:\n        - Labels\n      properties:\n        Labels:\n          $ref: \"#/components/schemas/SharedLabels\"\n    SubscriptionEndPointType:\n      type: string\n      minLength: 1\n      maxLength: 256\n    SubscriptionProtocolType:\n      type: string\n      enum:\n        - HTTPS\n    SubscriptionType:\n      type: string\n      enum:\n        - ALL\n    CreateNotificationSubscriptionRequest:\n      type: object\n      required:\n        - Endpoint\n        - Protocol\n        - SubscriptionType\n      properties:\n        Endpoint:\n          $ref: \"#/components/schemas/SubscriptionEndPointType\"\n        Protocol:\n          $ref: \"#/components/schemas/SubscriptionProtocolType\"\n        SubscriptionType:\n          $ref: \"#/components/schemas/SubscriptionType\"\n    Subscription:\n      type: object\n      properties:\n        SubscriptionId:\n          $ref: \"#/components/schemas/IdType\"\n        EndPoint:\n          $ref: \"#/components/schemas/SubscriptionEndPointType\"\n        Protocol:\n          $ref: \"#/components/schemas/SubscriptionProtocolType\"\n      description: Describes a subscription.\n    UsernameType:\n      type: string\n      pattern: \"[\\\\w\\\\-+.]+(@[a-zA-Z0-9.\\\\-]+\\\\.[a-zA-Z]+)?\"\n      minLength: 1\n      maxLength: 256\n    EmailAddressType:\n      type: string\n      pattern: \"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}\"\n      minLength: 1\n      maxLength: 256\n    UserAttributeValueType:\n      type: string\n      minLength: 1\n      maxLength: 64\n    PasswordType:\n      type: string\n      pattern: \"[\\\\u0020-\\\\u00FF]+\"\n      minLength: 4\n      maxLength: 32\n      format: password\n    TimeZoneIdType:\n      type: string\n      minLength: 1\n      maxLength: 256\n    StorageRuleType:\n      type: object\n      properties:\n        StorageAllocatedInBytes:\n          $ref: \"#/components/schemas/PositiveSizeType\"\n        StorageType:\n          $ref: \"#/components/schemas/StorageType\"\n      description: Describes the storage for a user.\n    CreateUserRequest:\n      type: object\n      required:\n        - Username\n        - GivenName\n        - Surname\n        - Password\n      properties:\n        OrganizationId:\n          $ref: \"#/components/schemas/IdType\"\n        Username:\n          $ref: \"#/components/schemas/UsernameType\"\n        EmailAddress:\n          $ref: \"#/components/schemas/EmailAddressType\"\n        GivenName:\n          $ref: \"#/components/schemas/UserAttributeValueType\"\n        Surname:\n          $ref: \"#/components/schemas/UserAttributeValueType\"\n        Password:\n          $ref: \"#/components/schemas/PasswordType\"\n        TimeZoneId:\n          $ref: \"#/components/schemas/TimeZoneIdType\"\n        StorageRule:\n          $ref: \"#/components/schemas/StorageRuleType\"\n    CustomMetadataKeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/CustomMetadataKeyType\"\n      maxItems: 8\n    DeactivateUserRequest:\n      type: object\n      properties: {}\n    DeleteCommentRequest:\n      type: object\n      properties: {}\n    DeleteCustomMetadataRequest:\n      type: object\n      properties: {}\n    DeleteDocumentRequest:\n      type: object\n      properties: {}\n    DeleteFolderContentsRequest:\n      type: object\n      properties: {}\n    DeleteFolderRequest:\n      type: object\n      properties: {}\n    DeleteLabelsRequest:\n      type: object\n      properties: {}\n    DeleteNotificationSubscriptionRequest:\n      type: object\n      properties: {}\n    DeleteUserRequest:\n      type: object\n      properties: {}\n    LimitType:\n      type: integer\n      minimum: 1\n      maximum: 999\n    MarkerType:\n      type: string\n      pattern: \"[\\\\u0000-\\\\u00FF]+\"\n      minLength: 1\n      maxLength: 2048\n    DescribeActivitiesRequest:\n      type: object\n      properties: {}\n    UserActivities:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Activity\"\n    DescribeCommentsRequest:\n      type: object\n      properties: {}\n    PageMarkerType:\n      type: string\n      minLength: 1\n      maxLength: 2048\n    FieldNamesType:\n      type: string\n      pattern: \"[\\\\w,]+\"\n      minLength: 1\n      maxLength: 256\n    DescribeDocumentVersionsRequest:\n      type: object\n      properties: {}\n    DocumentVersionMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DocumentVersionMetadata\"\n    ResourceSortType:\n      type: string\n      enum:\n        - DATE\n        - NAME\n    OrderType:\n      type: string\n      enum:\n        - ASCENDING\n        - DESCENDING\n    FolderContentType:\n      type: string\n      enum:\n        - ALL\n        - DOCUMENT\n        - FOLDER\n    DescribeFolderContentsRequest:\n      type: object\n      properties: {}\n    FolderMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FolderMetadata\"\n    DocumentMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DocumentMetadata\"\n    SearchQueryType:\n      type: string\n      pattern: \"[\\\\u0020-\\\\uFFFF]+\"\n      minLength: 1\n      maxLength: 512\n      format: password\n    PositiveIntegerType:\n      type: integer\n      minimum: 1\n    DescribeGroupsRequest:\n      type: object\n      properties: {}\n    GroupMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/GroupMetadata\"\n    DescribeNotificationSubscriptionsRequest:\n      type: object\n      properties: {}\n    SubscriptionList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Subscription\"\n      maxItems: 256\n    DescribeResourcePermissionsRequest:\n      type: object\n      properties: {}\n    PrincipalList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Principal\"\n    DescribeRootFoldersRequest:\n      type: object\n      properties: {}\n    UserIdsType:\n      type: string\n      pattern: \"[\u0026\\\\w+-.@, ]+\"\n      minLength: 1\n      maxLength: 2000\n    UserFilterType:\n      type: string\n      enum:\n        - ALL\n        - ACTIVE_PENDING\n    UserSortType:\n      type: string\n      enum:\n        - USER_NAME\n        - FULL_NAME\n        - STORAGE_LIMIT\n        - USER_STATUS\n        - STORAGE_USED\n    DescribeUsersRequest:\n      type: object\n      properties: {}\n    OrganizationUserList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/User\"\n    SizeType:\n      type: integer\n    DocumentContentType:\n      type: string\n      minLength: 1\n      maxLength: 128\n    DocumentVersionMetadata:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/DocumentVersionIdType\"\n        Name:\n          $ref: \"#/components/schemas/ResourceNameType\"\n        ContentType:\n          $ref: \"#/components/schemas/DocumentContentType\"\n        Size:\n          $ref: \"#/components/schemas/SizeType\"\n        Signature:\n          $ref: \"#/components/schemas/HashType\"\n        Status:\n          $ref: \"#/components/schemas/DocumentStatusType\"\n        CreatedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        ModifiedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        ContentCreatedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        ContentModifiedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        CreatorId:\n          $ref: \"#/components/schemas/IdType\"\n        Thumbnail:\n          $ref: \"#/components/schemas/DocumentThumbnailUrlMap\"\n        Source:\n          $ref: \"#/components/schemas/DocumentSourceUrlMap\"\n      description: Describes a version of a document.\n    ResourceStateType:\n      type: string\n      enum:\n        - ACTIVE\n        - RESTORING\n        - RECYCLING\n        - RECYCLED\n    DocumentMetadata:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        CreatorId:\n          $ref: \"#/components/schemas/IdType\"\n        ParentFolderId:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        CreatedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        ModifiedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        LatestVersionMetadata:\n          $ref: \"#/components/schemas/DocumentVersionMetadata\"\n        ResourceState:\n          $ref: \"#/components/schemas/ResourceStateType\"\n        Labels:\n          $ref: \"#/components/schemas/SharedLabels\"\n      description: Describes the document.\n    DocumentSourceType:\n      type: string\n      enum:\n        - ORIGINAL\n        - WITH_COMMENTS\n    UrlType:\n      type: string\n      minLength: 1\n      maxLength: 1024\n      format: password\n    DocumentSourceUrlMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/UrlType\"\n    DocumentStatusType:\n      type: string\n      enum:\n        - INITIALIZED\n        - ACTIVE\n    DocumentThumbnailType:\n      type: string\n      enum:\n        - SMALL\n        - SMALL_HQ\n        - LARGE\n    DocumentThumbnailUrlMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/UrlType\"\n    HashType:\n      type: string\n      pattern: \"[\u0026\\\\w+-.@]+\"\n      minLength: 0\n      maxLength: 128\n    DocumentVersionStatus:\n      type: string\n      enum:\n        - ACTIVE\n    GetCurrentUserRequest:\n      type: object\n      properties: {}\n    GetDocumentPathRequest:\n      type: object\n      properties: {}\n    ResourcePath:\n      type: object\n      properties:\n        Components:\n          $ref: \"#/components/schemas/ResourcePathComponentList\"\n      description: Describes the path information of a resource.\n    GetDocumentRequest:\n      type: object\n      properties: {}\n    GetDocumentVersionRequest:\n      type: object\n      properties: {}\n    GetFolderPathRequest:\n      type: object\n      properties: {}\n    GetFolderRequest:\n      type: object\n      properties: {}\n    ResourceCollectionType:\n      type: string\n      enum:\n        - SHARED_WITH_ME\n    GetResourcesRequest:\n      type: object\n      properties: {}\n    GroupNameType:\n      type: string\n    GroupMetadata:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/IdType\"\n        Name:\n          $ref: \"#/components/schemas/GroupNameType\"\n      description: Describes the metadata of a user group.\n    HeaderNameType:\n      type: string\n      pattern: \"[\\\\w-]+\"\n      minLength: 1\n      maxLength: 256\n    HeaderValueType:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    InitiateDocumentVersionUploadRequest:\n      type: object\n      required:\n        - ParentFolderId\n      properties:\n        Id:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        Name:\n          $ref: \"#/components/schemas/ResourceNameType\"\n        ContentCreatedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        ContentModifiedTimestamp:\n          $ref: \"#/components/schemas/TimestampType\"\n        ContentType:\n          $ref: \"#/components/schemas/DocumentContentType\"\n        DocumentSizeInBytes:\n          $ref: \"#/components/schemas/SizeType\"\n        ParentFolderId:\n          $ref: \"#/components/schemas/ResourceIdType\"\n    UploadMetadata:\n      type: object\n      properties:\n        UploadUrl:\n          $ref: \"#/components/schemas/UrlType\"\n        SignedHeaders:\n          $ref: \"#/components/schemas/SignedHeaderMap\"\n      description: Describes the upload.\n    LocaleType:\n      type: string\n      enum:\n        - en\n        - fr\n        - ko\n        - de\n        - es\n        - ja\n        - ru\n        - zh_CN\n        - zh_TW\n        - pt_BR\n        - default\n    UserMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UserMetadata\"\n    RoleType:\n      type: string\n      enum:\n        - VIEWER\n        - CONTRIBUTOR\n        - OWNER\n        - COOWNER\n    RolePermissionType:\n      type: string\n      enum:\n        - DIRECT\n        - INHERITED\n    PermissionInfo:\n      type: object\n      properties:\n        Role:\n          $ref: \"#/components/schemas/RoleType\"\n        Type:\n          $ref: \"#/components/schemas/RolePermissionType\"\n      description: Describes the permissions.\n    PermissionInfoList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PermissionInfo\"\n    PrincipalType:\n      type: string\n      enum:\n        - USER\n        - GROUP\n        - INVITE\n        - ANONYMOUS\n        - ORGANIZATION\n    Principal:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/IdType\"\n        Type:\n          $ref: \"#/components/schemas/PrincipalType\"\n        Roles:\n          $ref: \"#/components/schemas/PermissionInfoList\"\n      description: Describes a resource.\n    RemoveAllResourcePermissionsRequest:\n      type: object\n      properties: {}\n    RemoveResourcePermissionRequest:\n      type: object\n      properties: {}\n    ResourceType:\n      type: string\n      enum:\n        - FOLDER\n        - DOCUMENT\n    ResourcePathComponentList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ResourcePathComponent\"\n    ResourcePathComponent:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/IdType\"\n        Name:\n          $ref: \"#/components/schemas/ResourceNameType\"\n      description: Describes the resource path.\n    ShareStatusType:\n      type: string\n      enum:\n        - SUCCESS\n        - FAILURE\n    ShareResult:\n      type: object\n      properties:\n        PrincipalId:\n          $ref: \"#/components/schemas/IdType\"\n        InviteePrincipalId:\n          $ref: \"#/components/schemas/IdType\"\n        Role:\n          $ref: \"#/components/schemas/RoleType\"\n        Status:\n          $ref: \"#/components/schemas/ShareStatusType\"\n        ShareId:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        StatusMessage:\n          $ref: \"#/components/schemas/MessageType\"\n      description: Describes the share results of a resource.\n    SignedHeaderMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/HeaderValueType\"\n    UpdateDocumentRequest:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/ResourceNameType\"\n        ParentFolderId:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        ResourceState:\n          $ref: \"#/components/schemas/ResourceStateType\"\n    UpdateDocumentVersionRequest:\n      type: object\n      properties:\n        VersionStatus:\n          $ref: \"#/components/schemas/DocumentVersionStatus\"\n    UpdateFolderRequest:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/ResourceNameType\"\n        ParentFolderId:\n          $ref: \"#/components/schemas/ResourceIdType\"\n        ResourceState:\n          $ref: \"#/components/schemas/ResourceStateType\"\n    UserType:\n      type: string\n      enum:\n        - USER\n        - ADMIN\n        - POWERUSER\n        - MINIMALUSER\n        - WORKSPACESUSER\n    UpdateUserRequest:\n      type: object\n      properties:\n        GivenName:\n          $ref: \"#/components/schemas/UserAttributeValueType\"\n        Surname:\n          $ref: \"#/components/schemas/UserAttributeValueType\"\n        Type:\n          $ref: \"#/components/schemas/UserType\"\n        StorageRule:\n          $ref: \"#/components/schemas/StorageRuleType\"\n        TimeZoneId:\n          $ref: \"#/components/schemas/TimeZoneIdType\"\n        Locale:\n          $ref: \"#/components/schemas/LocaleType\"\n        GrantPoweruserPrivileges:\n          $ref: \"#/components/schemas/BooleanEnumType\"\n    UserStatusType:\n      type: string\n      enum:\n        - ACTIVE\n        - INACTIVE\n        - PENDING\n    UserStorageMetadata:\n      type: object\n      properties:\n        StorageUtilizedInBytes:\n          $ref: \"#/components/schemas/SizeType\"\n        StorageRule:\n          $ref: \"#/components/schemas/StorageRuleType\"\n      description: Describes the storage for a user.\n"
		}
	},
	"Error": "buildIR: make ir: path \"/api/v1/users\": get: parameters: \"query\": string validator: pattern: error parsing regexp: invalid escape sequence: `\\u`"
}