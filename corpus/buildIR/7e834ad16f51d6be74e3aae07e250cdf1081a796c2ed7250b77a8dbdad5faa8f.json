{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ota42y/openapi_parser"
		},
		"file": {
			"name": "normal.yml",
			"size": 0,
			"path": "spec/data/normal.yml",
			"byteSize": 17266,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: OpenAPI3 Test\n  description: A Sample file\nservers:\n  - url: https://github.com/interagent/committee/\npaths:\n  /characters:\n    summary: summary_text\n    description: desc\n    get:\n      description: get characters\n      parameters:\n        - name: school_name\n          in: query\n          description: school name to filter by\n          required: false\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n        - name: limit\n          in: query\n          description: maximum number of characters\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  string_1:\n                    type: string\n                  array_1:\n                    type: array\n                    items:\n                      type: string\n    post:\n      description: new characters\n      responses:\n        '200':\n          description: correct\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  response_1:\n                    type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                string_post_1:\n                  type: string\n    delete:\n      description: new characters\n      responses:\n        '200':\n          description: correct\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  response_1:\n                    type: string\n      parameters:\n        - name: limit\n          in: query\n          description: maximum number of characters\n          required: false\n          schema:\n            type: integer\n            format: int32\n\n  /string_params_coercer:\n    get:\n      description: string_params_coercer test data\n      parameters:\n        - name: integer_1\n          in: query\n          description: integer 32\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: string_1\n          in: query\n          description: string data\n          required: false\n          schema:\n            type: string\n        - name: boolean_1\n          in: query\n          description: boolean data\n          required: false\n          schema:\n            type: boolean\n        - name: number_1\n          in: query\n          description: number data\n          required: false\n          schema:\n            nullable: true\n            type: number\n        - name: datetime_string\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: normal_array\n          in: query\n          description: number data\n          required: false\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: nested_array\n          in: query\n          description: nested_array\n          required: false\n          schema:\n            \"$ref\": '#/components/schemas/nested_array'\n        - name: any_of\n          in: query\n          description: coercing to any of types\n          required: false\n          schema:\n            anyOf:\n              - type: integer\n              - type: number\n              - type: boolean\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n    post:\n      description: string_params_coercer test data\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                any_of:\n                  anyOf:\n                    - type: number\n                    - type: integer\n                    - type: boolean\n                    - type: string\n                nested_array:\n                  \"$ref\": '#/components/schemas/nested_array'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /validate:\n    get:\n      description: get characters\n      parameters:\n        - name: query_string\n          in: query\n          required: true\n          style: form\n          schema:\n            type: string\n        - name: query_string\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: query_integer_list\n          in: query\n          required: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: optional_integer\n          in: query\n          required: false\n          schema:\n            type: integer\n        - name: queryString\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: no content\n    post:\n      description: validate test data\n      requestBody:\n        content:\n          application/json:\n            schema:\n              additionalProperties: false\n              type: object\n              properties:\n                string:\n                  type: string\n                datetime:\n                  type: string\n                  format: date-time\n                integer:\n                  type: integer\n                boolean:\n                  type: boolean\n                number:\n                  type: number\n                array:\n                  type: array\n                  items:\n                    type: integer\n                all_of_data:\n                  allOf:\n                    - $ref: '#/components/schemas/all_of_base'\n                    - type: object\n                      required:\n                        - id\n                      properties:\n                        id:\n                          type: integer\n                          format: int64\n                one_of_data:\n                  oneOf:\n                    - $ref: '#/components/schemas/one_of_object1'\n                    - $ref: '#/components/schemas/one_of_object2'\n                one_of_with_discriminator:\n                  oneOf:\n                    - $ref: '#/components/schemas/one_of_object1'\n                    - $ref: '#/components/schemas/one_of_object2'\n                  discriminator:\n                    propertyName: objType\n                    mapping:\n                      obj1: '#/components/schemas/one_of_object1'\n                      obj2: '#/components/schemas/one_of_object2'\n                object_1:\n                  type: object\n                  properties:\n                    string_1:\n                      nullable: true\n                      type: string\n                    integer_1:\n                      nullable: true\n                      type: integer\n                    boolean_1:\n                      nullable: true\n                      type: boolean\n                    number_1:\n                      nullable: true\n                      type: number\n                object_2:\n                  type: object\n                  required:\n                    - string_2\n                    - integer_2\n                    - boolean_2\n                    - number_2\n                  properties:\n                    string_2:\n                      type: string\n                    integer_2:\n                      type: integer\n                    boolean_2:\n                      type: boolean\n                    number_2:\n                      type: number\n                required_object:\n                  type: object\n                  required:\n                    - need_object\n                  properties:\n                    need_object:\n                      type: object\n                      required:\n                        - string\n                      properties:\n                        string:\n                          type: string\n                    no_need_object:\n                      type: object\n                      required:\n                        - integer\n                      properties:\n                        integer:\n                          type: integer\n                any_of:\n                  type: array\n                  items:\n                    anyOf:\n                      - type: string\n                      - type: boolean\n                unspecified_type: {}\n                enum_string:\n                  type: string\n                  enum:\n                    - a\n                    - b\n                enum_integer:\n                  type: integer\n                  enum:\n                    - 1\n                    - 2\n                enum_number:\n                  type: number\n                  enum:\n                    - 1.0\n                    - 2.1\n                enum_boolean:\n                  type: boolean\n                  enum:\n                    - true\n\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  string:\n                    type: string\n        '204':\n          description: no content\n        default:\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  integer:\n                    type: integer\n    put:\n      description: validate put metodhd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                string:\n                  type: string\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  string:\n                    type: string\n    patch:\n      description: validate patch metodhd\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                integer:\n                  type: integer\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  string:\n                    type: string\n\n  /validate_no_parameter:\n    patch:\n      description: validate no body\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  integer:\n                    type: integer\n\n  /validate_response_array:\n    get:\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n\n  /path_template_test/no_template:\n    get:\n      responses:\n        '204':\n          description: no content\n  /path_template_test/{template_name}:\n    parameters:\n      - name: template_name\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /path_template_test/{template_name}/nested:\n    parameters:\n      - name: template_name\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /path_template_test/{template_name}/nested/{nested_parameter}:\n    parameters:\n      - name: template_name\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: nested_parameter\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /path_template_test/{template_name}/{nested_parameter}:\n    parameters:\n      - name: template_name\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: nested_parameter\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /path_template_test/{template_name}/{nested_parameter}/finish:\n    parameters:\n      - name: template_name\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: nested_parameter\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /{ambiguous}/no_template:\n    parameters:\n      - name: ambiguous\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      responses:\n        '204':\n          description: no content\n  /coerce_query_prams_in_operation_and_path_item:\n    parameters:\n      - name: path_item_integer\n        in: query\n        required: true\n        schema:\n          type: integer\n    get:\n      parameters:\n      - name: operation_integer\n        in: query\n        required: true\n        schema:\n          type: integer\n      description: get characters\n      responses:\n        '204':\n          description: no content\n  /coerce_path_params/{integer}:\n    parameters:\n      - name: integer\n        in: path\n        required: true\n        schema:\n          type: integer\n    get:\n      description: get characters\n      responses:\n        '204':\n          description: no content\n  /coerce_path_params_in_path_item/{integer}:\n    get:\n      description: get characters\n      parameters:\n        - name: integer\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: no content\n  /reference:\n    get:\n      parameters:\n        - \"$ref\": '#/components/parameters/ref1'\n      responses:\n        default:\n          \"$ref\": '#/components/responses/ref1'\n\n    post:\n      requestBody:\n        \"$ref\": '#/components/requestBodies/ref1'\n      responses:\n        default:\n          \"$ref\": '#/components/responses/ref2'\n\n  /date_time:\n    get:\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  date:\n                    type: string\n                    format: date\n                  date-time:\n                    type: string\n                    format: date-time\n              example:\n                date: 2020-05-12\n                date-time: 2020-05-12T00:00:00.00Z\n\n\ncomponents:\n  parameters:\n    ref1:\n      name: integer\n      in: path\n      required: true\n      schema:\n        type: integer\n  requestBodies:\n    ref1:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              integer:\n                type: integer\n  responses:\n    ref1:\n      description: no content\n      content:\n        application/json:\n          schema:\n            \"$ref\": '#/components/schemas/nested_array'\n    ref2:\n      \"$ref\": '#/components/responses/ref1'\n  schemas:\n    all_of_base:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        tag:\n          type: string\n    nested_array:\n      type: array\n      items:\n        type: object\n        properties:\n          update_time:\n            type: string\n            format: date-time\n          per_page:\n            type: integer\n          threshold:\n            type: number\n          nested_coercer_object:\n            type: object\n            properties:\n              update_time:\n                type: string\n                format: date-time\n              threshold:\n                type: number\n          nested_no_coercer_object:\n            type: object\n          nested_coercer_array:\n            type: array\n            items:\n              type: object\n              properties:\n                update_time:\n                  type: string\n                  format: date-time\n                threshold:\n                  type: number\n          nested_no_coercer_array:\n            type: array\n            items:\n              type: object\n    one_of_object1:\n      type: object\n      required:\n        - name\n        - integer_1\n      properties:\n        name:\n          type: string\n        integer_1:\n          type: integer\n      additionalProperties: false\n    one_of_object2:\n      type: object\n      required:\n        - name\n        - string_1\n      properties:\n        name:\n          type: string\n        string_1:\n          type: string\n      additionalProperties: false\n",
			"canonicalURL": "/github.com/ota42y/openapi_parser@b8821c3d4e8c1f072862e6e245b9de2477555e42/-/blob/spec/data/normal.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ota42y/openapi_parser/blob/b8821c3d4e8c1f072862e6e245b9de2477555e42/spec/data/normal.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/string_params_coercer\": get: parameters: \"nested_array\": nested objects not allowed"
}