{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-tools"
		},
		"file": {
			"name": "deprecated_mix_params.yaml",
			"size": 0,
			"path": "openapi-cli/src/test/resources/generators/client/swagger/deprecated_mix_params.yaml",
			"byteSize": 5186,
			"content": "openapi: 3.0.1\nservers:\n  - url: \"https://api.soundcloud.com\"\ninfo:\n  x-ballerina-display:\n    label: SoundCloud\n    iconPath: \"resources/soundcloud.svg\"\n  contact:\n    name: API issue tracker\n    url: \"https://github.com/soundcloud/api\"\n  termsOfService: \"https://developers.soundcloud.com/docs/api/terms-of-use\"\n  title: SoundCloud Public API Specification\n  version: 1.0.0\n  x-apisguru-categories:\n    - media\n  x-logo:\n    url: \"https://a-v2.sndcdn.com/assets/images/sc-icons/ios-a62dfc8fe7.png\"\n  x-providerName: soundcloud.com\n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials.\n\n    Create an [SoundCloud account](https://soundcloud.com/)\n    and obtain tokens following [this guide](https://developers.soundcloud.com/docs/api/guide).\n  description: \u003e-\n    This is a generated connector for [SoundCloud API v1.0.0](https://developers.soundcloud.com/) OpenAPI Specification.\n\n    SoundCloud API provides capability to access the online audio distribution platform and music sharing website that enables\n    you to upload,promote, and share audio, as well as a digital signal processor enabling listeners to stream audio.\npaths:\n  \"/tracks/{track_id}/comments\":\n    get:\n      operationId: getCommentsOnTrack\n      parameters:\n        - $ref: \"#/components/parameters/track_id\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/linked_partitioning\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Comments\"\n      summary: Returns the comments posted on the track(track_id).\ncomponents:\n  parameters:\n    track_id:\n      description: SoundCloud Track id\n      example: 308946187\n      in: path\n      name: track_id\n      required: true\n      schema:\n        type: integer\n    offset:\n      deprecated: true\n      description: \"Offset of first result. Deprecated, use `linked_partitioning` instead.\"\n      example: 0\n      in: query\n      name: offset\n      required: false\n      schema:\n        default: 0\n        type: integer\n    limit:\n      description: Number of results to return in the collection.\n      example: 2\n      in: query\n      name: limit\n      required: false\n      schema:\n        default: 50\n        maximum: 200\n        minimum: 1\n        type: integer\n    linked_partitioning:\n      description: \u003e-\n        Returns paginated collection of items (recommended, returning a list\n        without pagination is deprecated and should not be used)\n      example: true\n      in: query\n      name: linked_partitioning\n      required: false\n      schema:\n        type: boolean\n  responses:\n    Comments:\n      content:\n        application/json; charset=utf-8:\n          schema:\n            oneOf:\n              - $ref: \"#/components/schemas/Comments\"\n              - $ref: \"#/components/schemas/CommentsList\"\n      description: Success\n  schemas:\n    Comment:\n      description: User's Comment\n      properties:\n        body:\n          description: Comment body.\n          type: string\n        created_at:\n          description: Created timestamp.\n          type: string\n        id:\n          description: Identifier.\n          type: integer\n        kind:\n          description: Kind (comment).\n          type: string\n        timestamp:\n          description: Timestamp.\n          type: string\n        track_id:\n          description: Track's identifier.\n          type: integer\n        uri:\n          description: Comment's URL.\n          type: string\n        user:\n          description: SoundCloud User object\n          properties:\n            avatar_url:\n              description: URL to a JPEG image.\n              type: string\n            followers_count:\n              description: number of followers.\n              type: integer\n            followings_count:\n              description: number of followed users.\n              type: integer\n            id:\n              description: unique identifier\n              type: integer\n            kind:\n              description: kind of resource.\n              type: string\n            last_modified:\n              description: last modified timestamp.\n              type: string\n            permalink:\n              description: permalink of the resource.\n              type: string\n            permalink_url:\n              description: URL to the SoundCloud.com page.\n              type: string\n            reposts_count:\n              description: number of reposts from user\n              type: integer\n            uri:\n              description: API resource URL.\n              type: string\n            username:\n              description: username\n              type: string\n          type: object\n        user_id:\n          description: User's identifier.\n          type: integer\n      type: object\n    Comments:\n      properties:\n        collection:\n          items:\n            $ref: \"#/components/schemas/Comment\"\n          type: array\n        next_href:\n          nullable: true\n          type: string\n      type: object\n    CommentsList:\n      deprecated: true\n      items:\n        $ref: \"#/components/schemas/Comment\"\n      type: array\n"
		}
	},
	"Error": "buildIR: make ir: path \"/tracks/{track_id}/comments\": get: responses: 200: contents: application/json; charset=utf-8: generate schema: save schema types: save referenced type: reference \"#/components/schemas/Comments\" type name conflict: \"Comments\""
}