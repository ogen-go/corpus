{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bangumi/dev-docs"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "api.yaml",
			"byteSize": 27858,
			"content": "openapi: 3.0.2\ninfo:\n  title: Bangumi Private API\n  version: ''\n  description: '`next.bgm.tv` 域名不支持跨域，'\ntags:\n  - name: Auth\npaths:\n  /p/login:\n    post:\n      tags:\n        - Auth\n      summary: 登录\n      operationId: login\n      description: \u003e\n        `h-captcha-response` 是 [hCaptcha\n        的验证码](https://docs.hcaptcha.com/#add-the-hcaptcha-widget-to-your-webpage)\n\n\n        site key 是 `4874acee-9c6e-4e47-99ad-e2ea1606961f`\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - password\n                - h-captcha-response\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n                h-captcha-response:\n                  type: string\n      responses:\n        '200':\n          description: 账号密码正确，设置 Cookies\n          headers:\n            Set-Cookie:\n              description: 设置 cookies session\n              schema:\n                type: string\n                example: sessionID=abcde12345; Path=/; HttpOnly\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          description: 请求错误或者验证码错误\n          content:\n            application/json:\n              example:\n                title: Bad Request\n                details:\n                  - Email为必填字段\n                  - Password为必填字段\n                  - HCaptchaResponse为必填字段\n                description: can't validate request body\n              schema:\n                title: ErrorDetail\n                required:\n                  - title\n                  - description\n                  - detail\n                type: object\n                properties:\n                  title:\n                    title: Title\n                    type: string\n                  description:\n                    title: Description\n                    type: string\n                  detail:\n                    title: Detail\n                    type: array\n                    items:\n                      type: string\n        '401':\n          description: 账号或密码错误\n          content:\n            application/json:\n              schema:\n                title: ErrorDetail\n                required:\n                  - title\n                  - description\n                  - detail\n                type: object\n                properties:\n                  title:\n                    title: Title\n                    type: string\n                  description:\n                    title: Description\n                    type: string\n                  detail:\n                    title: Detail\n                    type: object\n                    properties:\n                      remain:\n                        type: integer\n                        description: 剩余可用登录次数。\n        '415':\n          description: content-type 不是 `application/json`\n        '422':\n          description: JSON 语法错误\n        '502':\n          description: hCaptcha HTTP 请求失败\n  /p/logout:\n    post:\n      tags:\n        - Auth\n      summary: 登出\n      operationId: logout\n      security:\n        - CookiesSession: []\n      responses:\n        '204':\n          description: 正常登出\n        '401':\n          description: 用户未登录或者 session 已失效\n  /p/me:\n    get:\n      tags:\n        - Auth\n      summary: 获取当前用户\n      operationId: getCurrentUser\n      security:\n        - CookiesSession: []\n      responses:\n        '200':\n          description: 返回当前用户\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          description: 用户未登录或者 session 已失效\n  /p/groups/{group_id}/topics:\n    get:\n      tags:\n        - 小组\n        - 讨论\n      summary: 分页获取小组讨论列表，按照回复时间倒序分页\n      operationId: getGroupTopicsById\n      parameters:\n        - required: true\n          description: 小组ID\n          schema:\n            title: Group ID\n            minimum: 0\n            type: integer\n          name: group_id\n          in: path\n        - required: true\n          description: 小组 Limit\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 0\n            type: integer\n            default: 30\n          name: limit\n          in: query\n        - required: true\n          description: 小组 Offset\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            default: 0\n          name: offset\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Paged_Topic'\n        '400':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /p/subjects/{subject_id}/topics:\n    get:\n      tags:\n        - 条目\n        - 讨论\n      summary: 分页获取条目讨论列表，使用最新回复时间倒序分页\n      operationId: getSubjectTopicsById\n      parameters:\n        - required: true\n          description: 条目ID\n          schema:\n            title: Subject ID\n            minimum: 0\n            type: integer\n          name: subject_id\n          in: path\n        - required: true\n          description: 条目 Limit\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 0\n            type: integer\n            default: 30\n          name: limit\n          in: query\n        - required: true\n          description: 条目 Offset\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            default: 0\n          name: offset\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Paged_Topic'\n        '400':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /p/subjects/-/topics/{topic_id}:\n    get:\n      tags:\n        - 条目\n        - 讨论\n      summary: 条目讨论回复列表\n      description: 没有分页\n      operationId: getSubjectTopicById\n      parameters:\n        - required: true\n          description: 条目讨论ID\n          schema:\n            title: Topic ID\n            minimum: 0\n            type: integer\n          name: topic_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateTopicDetail'\n        '400':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /p/groups/-/topics/{topic_id}:\n    get:\n      tags:\n        - 小组\n        - 讨论\n      summary: 获取小组讨论回复列表\n      description: 没有分页\n      operationId: getGroupTopicById\n      parameters:\n        - required: true\n          description: 小组讨论ID\n          schema:\n            title: Topic ID\n            minimum: 0\n            type: integer\n          name: topic_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      group:\n                        $ref: '#/components/schemas/Group'\n                  - $ref: '#/components/schemas/PrivateTopicDetail'\n        '400':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /p/indices/{index_id}/comments:\n    get:\n      tags:\n        - 目录\n        - 讨论\n      summary: 获取目录讨论列表\n      description: 没有分页\n      operationId: getIndexCommentsById\n      parameters:\n        - required: true\n          description: 目录ID\n          schema:\n            title: Index ID\n            minimum: 0\n            type: integer\n          name: index_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comments'\n        '400':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /p/episodes/{episode_id}/comments:\n    get:\n      tags:\n        - 章节\n        - 讨论\n      summary: 获取章节讨论列表\n      description: 没有分页\n      operationId: getEpisodeCommentsById\n      parameters:\n        - required: true\n          description: 章节ID\n          schema:\n            title: Episode ID\n            minimum: 0\n            type: integer\n          name: episode_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comments'\n        '400':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /p/characters/{character_id}/comments:\n    get:\n      tags:\n        - 角色\n        - 讨论\n      summary: 获取角色讨论列表\n      description: 没有分页\n      operationId: getCharacterCommentsById\n      parameters:\n        - required: true\n          description: 角色ID\n          schema:\n            title: Character ID\n            minimum: 0\n            type: integer\n          name: character_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comments'\n        '400':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /p/persons/{person_id}/comments:\n    get:\n      tags:\n        - 人物\n        - 讨论\n      summary: 获取人物讨论列表\n      description: 没有分页\n      operationId: getPersonCommentsById\n      parameters:\n        - required: true\n          description: 人物ID\n          schema:\n            title: Persoon ID\n            minimum: 0\n            type: integer\n          name: person_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comments'\n        '400':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorDetail'\n  /p/groups/{name}:\n    get:\n      tags:\n        - 小组\n      summary: 获取小组首页信息\n      operationId: getGroupProfileByName\n      parameters:\n        - name: name\n          in: path\n          schema:\n            type: string\n          description: 小组名，类似于 `https://bgm.tv/groups/boring` 的 `boring`\n          required: true\n      responses:\n        '200':\n          description: 返回当前用户\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n        '404':\n          description: 小组不存在\n  /p/groups/{name}/members:\n    get:\n      tags:\n        - 小组\n      summary: 获取小组成员信息\n      operationId: listGroupMembersByName\n      parameters:\n        - name: name\n          in: path\n          schema:\n            type: string\n          description: 小组名，类似于 `https://bgm.tv/groups/boring` 的 `boring`\n          required: true\n        - name: type\n          in: query\n          schema:\n            type: string\n            default: all\n            enum:\n              - mod\n              - normal\n              - all\n          description: 成员类型，默认为 `all`\n          required: true\n        - $ref: '#/components/parameters/default_query_limit'\n        - $ref: '#/components/parameters/default_query_offset'\n      responses:\n        '200':\n          description: 列出用户\n          content:\n            application/json:\n              schema:\n                title: Paged[GroupMember]\n                allOf:\n                  - $ref: '#/components/schemas/Paged'\n                  - type: object\n                    properties:\n                      data:\n                        title: Data\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/GroupMember'\n        '404':\n          description: 小组不存在\ncomponents:\n  parameters:\n    default_query_limit:\n      required: false\n      schema:\n        title: Limit\n        maximum: 50\n        minimum: 1\n        type: integer\n        default: 30\n      name: limit\n      description: 分页参数\n      in: query\n    default_query_offset:\n      required: false\n      schema:\n        title: Offset\n        minimum: 0\n        type: integer\n        default: 0\n      description: 分页参数\n      name: offset\n      in: query\n  schemas:\n    User:\n      example:\n        avatar:\n          large: https://lain.bgm.tv/pic/user/l/000/00/00/1.jpg?r=1391790456\n          medium: https://lain.bgm.tv/pic/user/m/000/00/00/1.jpg?r=1391790456\n          small: https://lain.bgm.tv/pic/user/s/000/00/00/1.jpg?r=1391790456\n        sign: Awesome!\n        username: sai\n        nickname: Sai🖖\n        id: 1\n        user_group: 1\n      title: User\n      description: |\n        实际的返回值可能包括文档未声明的 `url` 字段，此字段主要用于开发者从 api 响应直接转跳到网页。\n        客户端开发者请不用依赖于此特性，此字段的值随时可能会改变。\n      required:\n        - id\n        - username\n        - nickname\n        - user_group\n        - avatar\n        - sign\n      type: object\n      properties:\n        id:\n          title: ID\n          type: integer\n        username:\n          title: Username\n          type: string\n          description: 唯一用户名，初始与 UID 相同，可修改一次\n        nickname:\n          title: Nickname\n          type: string\n        user_group:\n          title: UserGroup\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n            - 8\n            - 9\n            - 10\n            - 11\n          type: integer\n          description: \u003e-\n            用户组 - 1 = 管理员 - 2 = Bangumi 管理猿 - 3 = 天窗管理猿 - 4 = 禁言用户 - 5 = 禁止访问用户\n            - 8 = 人物管理猿 - 9 = 维基条目管理猿 - 10 = 用户 - 11 = 维基人\n          x-ms-enum:\n            name: UserGroup\n            modelAsString: false\n            values:\n              - Admin\n              - BangumiAdmin\n              - DoujinAdmin\n              - MutedUser\n              - BlockedUser\n              - PersonAdmin\n              - WikiAdmin\n              - User\n              - WikiUser\n          x-enum-varnames:\n            - Admin\n            - BangumiAdmin\n            - DoujinAdmin\n            - MutedUser\n            - BlockedUser\n            - PersonAdmin\n            - WikiAdmin\n            - User\n            - WikiUser\n        avatar:\n          $ref: '#/components/schemas/Avatar'\n        sign:\n          title: Sign\n          description: 个人签名\n          type: string\n    GroupProfile:\n      additionalProperties: false\n      properties:\n        id:\n          description: 小组的数字 ID\n          example: 11\n          type: integer\n        created_at:\n          format: date-time\n          example: '2008-08-01T06:11:29+08:00'\n          type: string\n        description:\n          example: \"本小组欢迎对各种技术有一定了解的人，\\r\\n比如像橘花热衷杀人技术……\\r\\n\\r\\n不过、本组主要谈论ＰＣ软硬件方面，\\r\\n想了解相关知识，结识可怕的技术宅，请进。\"\n          format: bbcode\n          type: string\n        icon:\n          format: url\n          type: string\n          example: https://lain.bgm.tv/pic/icon/l/000/00/00/11.jpg\n        name:\n          example: a\n          description: 小组的 string ID，原本出现在小组URL中\n          type: string\n        new_members:\n          description: 新加入的用户，最多 10 个。\n          type: array\n          items:\n            $ref: '#/components/schemas/GroupMember/items'\n        title:\n          type: string\n          example: ～技术宅真可怕～\n        total_members:\n          example: 9450\n          description: 用户数\n          type: integer\n      required:\n        - created_at\n        - name\n        - title\n        - description\n        - icon\n        - related_groups\n        - new_topics\n        - new_members\n        - total_members\n        - id\n      type: object\n    Avatar:\n      example:\n        large: https://lain.bgm.tv/pic/user/l/000/00/00/1.jpg?r=1391790456\n        medium: https://lain.bgm.tv/pic/user/m/000/00/00/1.jpg?r=1391790456\n        small: https://lain.bgm.tv/pic/user/s/000/00/00/1.jpg?r=1391790456\n      title: Avatar\n      required:\n        - large\n        - medium\n        - small\n      type: object\n      properties:\n        large:\n          title: Large\n          type: string\n          format: url\n        medium:\n          title: Medium\n          type: string\n          format: url\n        small:\n          title: Small\n          type: string\n          format: url\n    ErrorDetail:\n      title: ErrorDetail\n      required:\n        - title\n        - description\n      type: object\n      properties:\n        title:\n          title: Title\n          type: string\n        description:\n          title: Description\n          type: string\n        detail:\n          title: Detail\n          oneOf:\n            - type: string\n            - type: object\n              properties:\n                error:\n                  type: string\n                  description: error message\n                path:\n                  type: string\n                  description: request path\n    Group:\n      type: object\n      required:\n        - id\n        - name\n        - created_at\n        - title\n        - icon\n        - total_members\n        - description\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        title:\n          type: string\n        icon:\n          type: string\n          format: url\n        total_members:\n          type: integer\n        description:\n          type: string\n    PrivateTopicDetail:\n      allOf:\n        - type: object\n          required:\n            - comments\n          properties:\n            comments:\n              type: array\n              items:\n                $ref: '#/components/schemas/Comment'\n        - type: object\n          required:\n            - creator\n            - id\n            - reply_count\n            - text\n            - title\n            - state\n            - updated_at\n            - is_friend\n          properties:\n            state:\n              $ref: '#/components/schemas/Comment/properties/state'\n            is_friend:\n              type: boolean\n              description: 发帖人是否好友\n            created_at:\n              type: string\n              format: date-time\n              example: 2008-07-14T07:34:07.000Z\n            creator:\n              $ref: '#/components/schemas/User'\n            id:\n              type: integer\n              format: int32\n              example: 1\n            reply_count:\n              type: integer\n              format: int32\n              example: 76\n            text:\n              type: string\n              example: SAi看的也是红皮书吧\n            title:\n              type: string\n              example: 拿这个来测试\n            updated_at:\n              type: string\n              format: date-time\n              example: 2021-12-20T11:18:49.000Z\n    Topic:\n      title: Topic\n      type: object\n      required:\n        - created_at\n        - updated_at\n        - title\n        - creator\n        - id\n        - reply_count\n      properties:\n        created_at:\n          type: string\n          format: date-time\n          example: 2008-07-14T07:34:07.000Z\n        creator:\n          $ref: '#/components/schemas/User'\n        id:\n          type: integer\n          format: int32\n          example: 1\n        reply_count:\n          description: 全部回复，包括二级回复\n          type: integer\n          format: int32\n          example: 76\n        title:\n          type: string\n          example: 拿这个来测试\n        updated_at:\n          type: string\n          format: date-time\n          example: 2021-12-20T11:18:49.000Z\n    Comment:\n      title: Comment\n      type: object\n      required:\n        - created_at\n        - creator\n        - id\n        - replies\n        - text\n        - state\n        - is_friend\n      properties:\n        is_friend:\n          type: boolean\n          description: 发帖人是否好友\n        created_at:\n          type: string\n          format: date-time\n          example: 2008-07-14T07:38:35.000Z\n        creator:\n          $ref: '#/components/schemas/User'\n        id:\n          type: integer\n          format: int32\n          example: 2\n        replies:\n          type: array\n          items:\n            type: object\n            required:\n              - created_at\n              - creator\n              - is_friend\n              - test\n              - state\n              - id\n            properties:\n              created_at:\n                type: string\n                format: date-time\n                example: 2012-12-23T12:46:29.000Z\n              creator:\n                title: Creator\n                required:\n                  - username\n                  - nickname\n                type: object\n                properties:\n                  username:\n                    title: Username\n                    type: string\n                  nickname:\n                    title: Nickname\n                    type: string\n                description: 意义同\u003ca href=\"#model-Me\"\u003eMe\u003c/a\u003e\n              id:\n                type: integer\n                format: int32\n                example: 24360\n              text:\n                type: string\n                example: '[quote][b]15www[/b] 说: 檞寄生+1 我的明菁 T-T[/quote]\\n挖墳黨喪心病狂！'\n                description: 如果 `state` 不为 `0`，内容为空\n              state:\n                $ref: '#/components/schemas/Comment/properties/state'\n              is_friend:\n                type: boolean\n                description: 发帖人是否好友\n        text:\n          type: string\n          example: 你是猪 ... 鉴定完毕 ...\n          description: 如果 `state` 不为 `0`，内容为空\n        state:\n          title: CommentState\n          example: 0\n          enum:\n            - 0\n            - 1\n            - 5\n            - 6\n            - 7\n          type: integer\n          description: |-\n            回复和帖子共用的状态\n\n            表示帖子正常/下沉/关闭\n\n            如果是回复，表示管理员的下沉/关闭主题操作\n\n\n            - `0` 正常\n            - `1` 管理员关闭帖子\n            - `5` 管理员下沉帖子\n            - `6` 被用户删除\n            - `7` 违反社区指导原则，已被删除\n    GroupMember:\n      type: array\n      items:\n        additionalProperties: false\n        properties:\n          avatar:\n            $ref: '#/components/schemas/Avatar'\n          id:\n            type: integer\n            example: 1\n          nickname:\n            type: string\n            example: Sai🖖\n          username:\n            type: string\n            example: sai\n          joined_at:\n            type: string\n            format: date-time\n            example: '2022-06-25T21:07:38.466+08:00'\n        required:\n          - id\n          - username\n          - nickname\n          - avatar\n          - joined_at\n        type: object\n    Paged:\n      type: object\n      required:\n        - total\n        - limit\n        - offset\n        - data\n      properties:\n        total:\n          title: Total\n          type: integer\n        limit:\n          title: Limit\n          type: integer\n        offset:\n          title: Offset\n          type: integer\n        data:\n          title: Data\n          type: array\n          items:\n            type: object\n    Paged_GroupMember:\n      title: Paged[GroupMember]\n      allOf:\n        - $ref: '#/components/schemas/Paged'\n        - type: object\n          properties:\n            data:\n              title: Data\n              type: array\n              items:\n                $ref: '#/components/schemas/GroupMember'\n    Paged_Topic:\n      title: Paged[Topic]\n      allOf:\n        - $ref: '#/components/schemas/Paged'\n        - type: object\n          properties:\n            data:\n              title: Data\n              type: array\n              items:\n                $ref: '#/components/schemas/Topic'\n    Comments:\n      title: Comments\n      type: object\n      required:\n        - comments\n      properties:\n        comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Comment'\n  securitySchemes:\n    CookiesSession:\n      name: sessionID\n      type: apiKey\n      in: cookie\nservers:\n  - url: https://next.bgm.tv\n    description: Production server\n  - url: https://dev.bgm38.com/\n    description: 开发用服务器\n",
			"canonicalURL": "/github.com/bangumi/dev-docs@75f50fc33ac97a9451666c99dbb97551d989d5cd/-/blob/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bangumi/dev-docs/blob/75f50fc33ac97a9451666c99dbb97551d989d5cd/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/p/groups/-/topics/{topic_id}\": get: responses: code 200: contents: media: \"application/json\": generate schema: allOf: schema type mismatch: object and "
}