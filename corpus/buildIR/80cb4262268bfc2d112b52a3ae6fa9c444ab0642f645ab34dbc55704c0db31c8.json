{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zijianhuang/openapiclientgen"
		},
		"file": {
			"name": "xero-payroll-uk.yaml",
			"size": 0,
			"path": "Tests/SwagTests/SwagMock/xero-payroll-uk.yaml",
			"byteSize": 239395,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2.2.7'\n  title: 'Xero Payroll UK'\n  description: 'This is the Xero Payroll API for orgs in the UK region.'\n  termsOfService: \"https://developer.xero.com/xero-developer-platform-terms-conditions/\"\n  contact:\n    name: \"Xero Platform Team\"\n    email: \"api@xero.com\"\n    url: \"https://developer.xero.com\"\ntags:\n  - name: PayrollUk\nservers:\n  - description: Xero Payroll AU API\n    url: https://api.xero.com/payroll.xro/2.0\npaths:\n  /Employees:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read]\n      tags:\n        - PayrollUk\n      operationId: getEmployees\n      x-hasPayrollUkProblem: true\n      summary: searches employees\n      parameters:\n        - in: query\n          name: firstName\n          description: Filter by first name\n          schema:\n            type: string\n          example: John\n        - in: query\n          name: lastName\n          description: Filter by last name\n          schema:\n            type: string\n          example: Johnson\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Employees'\n              example: '{\n                          \"id\":\"1a14e877-773d-4cd3-b253-f559a4b4be65\",\n                          \"providerName\":\"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\":\"2020-03-24T18:43:43.860852\",\n                          \"httpStatusCode\":\"OK\",\n                          \"pagination\":{\n                              \"page\":1,\n                              \"pageSize\":100,\n                              \"pageCount\":1,\n                              \"itemCount\":3\n                          },\n                          \"problem\":null,\n                          \"employees\":[\n                              {\n                                \"employeeID\":\"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                                \"firstName\":\"Jack\",\n                                \"lastName\":\"Allan\",\n                                \"dateOfBirth\":\"1987-12-23T00:00:00\",\n                                \"gender\":\"M\",\n                                \"email\":null,\n                                \"phoneNumber\":null,\n                                \"startDate\":\"2020-02-03T00:00:00\",\n                                \"address\":{\n                                    \"addressLine1\":\"171 Midsummer Boulevard\",\n                                    \"addressLine2\":null,\n                                    \"city\":\"Milton Keynes\",\n                                    \"county\":null,\n                                    \"countryName\":\"UNITED KINGDOM\",\n                                    \"postCode\":\"MK9 1EB\"\n                                },\n                                \"payrollCalendarID\":\"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                                \"updatedDateUTC\":\"2020-02-13T16:23:31\",\n                                \"createdDateUTC\":\"2020-02-10T10:00:24\",\n                                \"endDate\":null\n                              },\n                              {\n                                \"employeeID\":\"67e545d4-e8a6-4f98-9f63-85c2383dfe12\",\n                                \"firstName\":\"Charlotte\",\n                                \"lastName\":\"Danes\",\n                                \"dateOfBirth\":\"1993-10-24T00:00:00\",\n                                \"gender\":\"F\",\n                                \"email\":null,\n                                \"phoneNumber\":null,\n                                \"startDate\":\"2020-02-03T00:00:00\",\n                                \"address\":{\n                                    \"addressLine1\":\"171 Midsummer Blvd\",\n                                    \"addressLine2\":null,\n                                    \"city\":\"Milton Keynes\",\n                                    \"county\":null,\n                                    \"countryName\":\"UNITED KINGDOM\",\n                                    \"postCode\":\"MK9 1EB\"\n                                },\n                                \"payrollCalendarID\":\"5e813d9e-949c-461f-8a89-e9ee8955a254\",\n                                \"updatedDateUTC\":\"2020-02-13T16:48:51\",\n                                \"createdDateUTC\":\"2020-02-13T16:32:12\",\n                                \"endDate\":null\n                              },\n                              {\n                                \"employeeID\":\"eb4a0c3b-b0d6-440d-bccc-348b7dc92321\",\n                                \"firstName\":\"Chelsea\",\n                                \"lastName\":\"Serati\",\n                                \"dateOfBirth\":\"1976-02-16T00:00:00\",\n                                \"gender\":\"F\",\n                                \"email\":null,\n                                \"phoneNumber\":null,\n                                \"startDate\":\"2019-07-02T00:00:00\",\n                                \"address\":{\n                                    \"addressLine1\":\"171 Midsummer Boulevard\",\n                                    \"addressLine2\":null,\n                                    \"city\":\"Milton Keynes\",\n                                    \"county\":null,\n                                    \"countryName\":\"UNITED KINGDOM\",\n                                    \"postCode\":\"MK9 1EB\"\n                                },\n                                \"payrollCalendarID\":\"d45bc68f-59d6-4000-929d-1058dcfa79e1\",\n                                \"updatedDateUTC\":\"2020-02-13T16:53:12\",\n                                \"createdDateUTC\":\"2020-02-13T16:46:41\",\n                                \"endDate\":null\n                              }\n                          ]\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    post: \n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: createEmployee\n      x-hasPayrollUkProblem: true\n      summary: creates employees\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeObject'\n              example: '{\n                          \"id\":\"660ff206-fc4a-42f5-8f7d-de886bc2a3d3\",\n                          \"providerName\":\"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\":\"2020-03-25T03:12:10.406476\",\n                          \"httpStatusCode\":\"OK\",\n                          \"pagination\":null,\n                          \"problem\":null,\n                          \"employee\":{\n                              \"employeeID\":\"316146c7-26a4-4065-b9bd-346d0557ea96\",\n                              \"title\":\"Mr\",\n                              \"firstName\":\"Mike\",\n                              \"lastName\":\"Fancy\",\n                              \"dateOfBirth\":\"1999-01-01T00:00:00\",\n                              \"gender\":\"M\",\n                              \"email\":\"mike@starkindustries.com\",\n                              \"phoneNumber\":null,\n                              \"startDate\":null,\n                              \"nationalInsuranceNumber\":null,\n                              \"address\":{\n                                \"addressLine1\":\"101 Green St\",\n                                \"addressLine2\":null,\n                                \"city\":\"San Francisco\",\n                                \"county\":null,\n                                \"countryName\":null,\n                                \"postCode\":\"6TGR4F\"\n                              },\n                              \"payrollCalendarID\":null,\n                              \"updatedDateUTC\":\"2020-03-25T03:12:10\",\n                              \"createdDateUTC\":\"2020-03-25T03:12:10\",\n                              \"niCategory\":null,\n                              \"employeeNumber\":null,\n                              \"endDate\":null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n            example: '{\n                        \"title\":\"Mr\",\n                        \"firstName\":\"Mike\",\n                        \"lastName\":\"Fancy\",\n                        \"dateOfBirth\":\"1999-01-01\",\n                        \"address\":{\n                            \"addressLine1\":\"101 Green St\",\n                            \"city\":\"San Francisco\",\n                            \"postCode\":\"6TGR4F\",\n                            \"country\":\"UK\"\n                        },\n                        \"email\":\"mike@starkindustries.com\",\n                        \"gender\":\"M\"\n                      }'\n  /Employees/{EmployeeId}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read,payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployee\n      x-hasPayrollUkProblem: true\n      summary: searches employees\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeObject'\n              example: '{\n                          \"id\":\"a8ef46c6-8191-43f6-a3c9-f42c7ca884b5\",\n                          \"providerName\":\"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\":\"2020-03-25T03:28:45.5524202\",\n                          \"httpStatusCode\":\"OK\",\n                          \"pagination\":null,\n                          \"problem\":null,\n                          \"employee\":{\n                              \"employeeID\":\"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                              \"title\":\"Mr.\",\n                              \"firstName\":\"Jack\",\n                              \"lastName\":\"Allan\",\n                              \"dateOfBirth\":\"1987-12-23T00:00:00\",\n                              \"gender\":\"M\",\n                              \"email\":null,\n                              \"phoneNumber\":null,\n                              \"startDate\":\"2020-02-03T00:00:00\",\n                              \"nationalInsuranceNumber\":\"AB123456C\",\n                              \"address\":{\n                                \"addressLine1\":\"171 Midsummer Boulevard\",\n                                \"addressLine2\":null,\n                                \"city\":\"Milton Keynes\",\n                                \"county\":null,\n                                \"countryName\":\"UNITED KINGDOM\",\n                                \"postCode\":\"MK9 1EB\"\n                              },\n                              \"payrollCalendarID\":\"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                              \"updatedDateUTC\":\"2020-02-13T16:23:31\",\n                              \"createdDateUTC\":\"2020-02-10T10:00:24\",\n                              \"niCategory\":\"A\",\n                              \"employeeNumber\":\"01\",\n                              \"endDate\":null\n                          }\n                        }'\n    put:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: updateEmployee\n      x-hasPayrollUkProblem: true\n      summary: updates employee\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeObject'\n              example: '{\n                        \"id\": \"eebef848-5fa2-42c2-a10f-4dc47a9cf82a\",\n                        \"providerName\": \"java-sdk-oauth2-dev-02\",\n                        \"dateTimeUTC\": \"2020-03-25T17:03:50.710258\",\n                        \"httpStatusCode\": \"OK\",\n                        \"pagination\": null,\n                        \"problem\": null,\n                        \"employee\": {\n                          \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                          \"title\": \"Mr\",\n                          \"firstName\": \"Mike\",\n                          \"lastName\": \"Johnllsbkrhwopson\",\n                          \"dateOfBirth\": \"1999-01-01T00:00:00\",\n                          \"gender\": \"M\",\n                          \"email\": \"84044@starkindustries.com\",\n                          \"phoneNumber\": null,\n                          \"startDate\": \"2020-02-03T00:00:00\",\n                          \"nationalInsuranceNumber\": null,\n                          \"address\": {\n                            \"addressLine1\": \"101 Green St\",\n                            \"addressLine2\": null,\n                            \"city\": \"San Francisco\",\n                            \"county\": null,\n                            \"countryName\": null,\n                            \"postCode\": \"6TGR4F\"\n                          },\n                          \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                          \"updatedDateUTC\": \"2020-03-25T17:03:50\",\n                          \"createdDateUTC\": \"2020-02-10T10:00:24\",\n                          \"niCategory\": null,\n                          \"employeeNumber\": null,\n                          \"endDate\": null\n                        }\n                      }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n            example: '{\n                        \"title\":\"Mr\",\n                        \"firstName\":\"Mike\",\n                        \"lastName\":\"Johnllsbkrhwopson\",\n                        \"dateOfBirth\":\"1999-01-01\",\n                        \"address\":{\n                            \"addressLine1\":\"101 Green St\",\n                            \"city\":\"San Francisco\",\n                            \"postCode\":\"6TGR4F\",\n                            \"country\":\"UK\"\n                        },\n                        \"email\":\"84044@starkindustries.com\",\n                        \"gender\":\"M\"\n                      }'\n  /Employees/{EmployeeId}/Employment:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post: \n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: createEmployment\n      x-hasPayrollUkProblem: true\n      summary: creates employment\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmploymentObject'\n              example: '{\n                          \"id\": \"0160a355-1e6d-4fdc-9532-c0857feaa515\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-26T18:09:11.6235442\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"employment\": {\n                            \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                            \"startDate\": \"2020-04-01T00:00:00\",\n                            \"niCategory\": \"A\",\n                            \"employeeNumber\": \"123ABC\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employment'\n            example: '{\n                        \"PayrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                        \"StartDate\": \"2020-04-01\",\n                        \"EmployeeNumber\": \"123ABC\",\n                        \"NICategory\": \"A\"\n                      }'\n  /Employees/{EmployeeId}/Tax:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read,payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeTax\n      x-hasPayrollUkProblem: true\n      summary: searches tax records for an employee \n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeTaxObject'\n              example: '{\n                          \"id\": \"a8577248-393a-4e7a-8a03-b43b90800b69\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-27T00:14:41.2462046\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"employeeTax\": {\n                            \"starterType\": \"New Employee with P45\",\n                            \"starterDeclaration\": \"B.) This is currently their only job\",\n                            \"taxCode\": \"1185L\",\n                            \"w1M1\": false,\n                            \"previousTaxablePay\": 2000,\n                            \"previousTaxPaid\": 200,\n                            \"studentLoanDeduction\": null,\n                            \"hasPostGraduateLoans\": false,\n                            \"isDirector\": false,\n                            \"directorshipStartDate\": null,\n                            \"nicCalculationMethod\": null\n                          }\n                        }'\n  /Employees/{EmployeeId}/ukopeningbalances:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read,payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeOpeningBalances\n      x-hasPayrollUkProblem: true\n      summary: retrieve employee openingbalances\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeOpeningBalancesObject'\n              example: '{\n                          \"id\": \"ab1c33de-1927-4210-bf4f-2a55965cb4a9\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-27T01:13:00.6591505\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"openingBalances\": {\n                            \"statutoryAdoptionPay\": 10,\n                            \"statutoryMaternityPay\": 10,\n                            \"statutoryPaternityPay\": 10,\n                            \"statutorySharedParentalPay\": 10,\n                            \"statutorySickPay\": 10,\n                            \"priorEmployeeNumber\": \"10.0\"\n                          }\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: createEmployeeOpeningBalances\n      x-hasPayrollUkProblem: true\n      summary: creates employee opening balances\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeOpeningBalancesObject'\n              example: '{\n                          \"id\": \"0d30ef37-2fb4-4925-b563-faaee361c9cd\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-27T01:06:14.47566\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"openingBalances\": null\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeOpeningBalances'\n            example: '{\n                        \"statutoryAdoptionPay\": 10,\n                        \"statutoryMaternityPay\": 10,\n                        \"statutoryPaternityPay\": 10,\n                        \"statutorySharedParentalPay\": 10,\n                        \"statutorySickPay\": 10,\n                        \"priorEmployeeNumber\": 10\n                      }'\n    put:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: updateEmployeeOpeningBalances\n      x-hasPayrollUkProblem: true\n      summary: updates employee opening balances\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeOpeningBalancesObject'\n              example: '{\n                          \"id\": \"21953776-783c-426c-bf15-cbde997839c4\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-27T15:45:09.7078637\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"openingBalances\": null\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeOpeningBalances'\n            example: '{\n                        \"statutoryAdoptionPay\": 20,\n                        \"statutoryMaternityPay\": 20,\n                        \"statutoryPaternityPay\": 20,\n                        \"statutorySharedParentalPay\": 20,\n                        \"statutorySickPay\": 20,\n                        \"priorEmployeeNumber\": 20\n                      }'\n  /Employees/{EmployeeId}/Leave:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read,payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeLeaves\n      x-hasPayrollUkProblem: true\n      summary: search employee leave records\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaves'\n              example: '{\n                        \"id\": \"e4d42712-4876-4b32-987d-1f62538089de\",\n                        \"providerName\": \"java-sdk-oauth2-dev-02\",\n                        \"dateTimeUTC\": \"2020-03-27T15:58:16.0929399\",\n                        \"httpStatusCode\": \"OK\",\n                        \"pagination\": null,\n                        \"problem\": null,\n                        \"leave\": [\n                          {\n                            \"leaveID\": \"384bf62a-5884-484d-b675-a3ad9c662f8e\",\n                            \"leaveTypeID\": \"ed08dffe-788e-4b24-9630-f0fa2f4d164c\",\n                            \"description\": \"Vacation to Majorca\",\n                            \"startDate\": \"2020-02-17T00:00:00\",\n                            \"endDate\": \"2020-02-21T00:00:00\",\n                            \"periods\": [\n                              {\n                                \"periodStartDate\": \"2020-02-17T00:00:00\",\n                                \"periodEndDate\": \"2020-02-23T00:00:00\",\n                                \"numberOfUnits\": 40,\n                                \"periodStatus\": \"Approved\"\n                              }\n                            ],\n                            \"updatedDateUTC\": \"2020-02-10T10:15:53\"\n                          }\n                        ]\n                      }'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: createEmployeeLeave\n      x-hasPayrollUkProblem: true\n      summary: creates employee leave records\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveObject'\n              example: '{\n                          \"id\": \"ef91410a-2be1-42cc-86db-e625344a82e9\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-31T04:32:57.0247198\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leave\": {\n                            \"leaveID\": \"bdfedc6b-363b-4801-8ba6-9a074d400b31\",\n                            \"leaveTypeID\": \"1d2778ee-86ea-45c0-bbf8-1045485f6b3f\",\n                            \"description\": \"Creating a Desription\",\n                            \"startDate\": \"2020-03-24T00:00:00\",\n                            \"endDate\": \"2020-03-26T00:00:00\",\n                            \"periods\": [\n                              {\n                                \"periodStartDate\": \"2020-03-23T00:00:00\",\n                                \"periodEndDate\": \"2020-03-29T00:00:00\",\n                                \"numberOfUnits\": 24,\n                                \"periodStatus\": \"Approved\"\n                              }\n                            ],\n                            \"updatedDateUTC\": \"2020-03-31T04:32:56.9537857\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeLeave'\n            example: '{\n                        \"leaveTypeID\": \"1d2778ee-86ea-45c0-bbf8-1045485f6b3f\",\n                        \"description\": \"Creating a Desription\",\n                        \"startDate\": \"2020-03-24\",\n                        \"endDate\": \"2020-03-26\"\n                      }'\n  /Employees/{EmployeeId}/Leave/{LeaveID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read,payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeLeave\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single employee leave record\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: LeaveID\n          in: path\n          required: true\n          description: Leave id for single object\n          schema: \n            type: string\n            format: uuid\n            example: c4be24e5-e840-4c92-9eaa-2d86cd596314\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveObject'\n              example: '{\n                          \"id\": \"6ae25805-fef3-4c9b-9e69-9ccc71a6a8da\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-27T19:58:03.8455417\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leave\": {\n                            \"leaveID\": \"384bf62a-5884-484d-b675-a3ad9c662f8e\",\n                            \"leaveTypeID\": \"ed08dffe-788e-4b24-9630-f0fa2f4d164c\",\n                            \"description\": \"Vacation to Majorca\",\n                            \"startDate\": \"2020-02-17T00:00:00\",\n                            \"endDate\": \"2020-02-21T00:00:00\",\n                            \"periods\": [\n                              {\n                                \"periodStartDate\": \"2020-02-17T00:00:00\",\n                                \"periodEndDate\": \"2020-02-23T00:00:00\",\n                                \"numberOfUnits\": 40,\n                                \"periodStatus\": \"Approved\"\n                              }\n                            ],\n                            \"updatedDateUTC\": \"2020-02-10T10:15:53\"\n                          }\n                        }'\n    put:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: updateEmployeeLeave\n      x-hasPayrollUkProblem: true\n      summary: updates employee leave records\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: LeaveID\n          in: path\n          required: true\n          description: Leave id for single object\n          schema: \n            type: string\n            format: uuid\n            example: c4be24e5-e840-4c92-9eaa-2d86cd596314  \n      responses:\n        '200':\n          description: successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveObject'\n              example: '{\n                          \"id\": \"ea115d89-61a0-4a2d-ad77-e3c63a2b401f\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-17T18:18:30.5118218\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leave\": {\n                            \"leaveID\": \"8340b795-50c1-428e-9fda-90badf081ab4\",\n                            \"leaveTypeID\": \"ed08dffe-788e-4b24-9630-f0fa2f4d164c\",\n                            \"description\": \"Creating a Description\",\n                            \"startDate\": \"2020-04-24T00:00:00\",\n                            \"endDate\": \"2020-04-26T00:00:00\",\n                            \"periods\": [\n                              {\n                                \"periodStartDate\": \"2020-04-20T00:00:00\",\n                                \"periodEndDate\": \"2020-04-26T00:00:00\",\n                                \"numberOfUnits\": 1,\n                                \"periodStatus\": \"Approved\"\n                              }\n                            ],\n                            \"updatedDateUTC\": \"2020-04-17T18:18:30.614537\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeLeave'\n            example: '{\n                        \"leaveTypeID\": \"ed08dffe-788e-4b24-9630-f0fa2f4d164c\",\n                        \"description\": \"Creating a Description\",\n                        \"startDate\": \"2020-04-24\",\n                        \"endDate\": \"2020-04-26\",\n                        \"periods\": [\n                          {\n                            \"periodStartDate\": \"2020-04-20\",\n                            \"periodEndDate\": \"2020-04-26\",\n                            \"numberOfUnits\": 1,\n                            \"periodStatus\": \"Approved\"\n                          }\n                        ]\n                      }'\n    delete:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: deleteEmployeeLeave\n      x-hasPayrollUkProblem: true\n      summary: deletes an employee leave record\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: LeaveID\n          in: path\n          required: true\n          description: Leave id for single object\n          schema: \n            type: string\n            format: uuid\n            example: c4be24e5-e840-4c92-9eaa-2d86cd596314  \n      responses:\n        '200':\n          description: successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveObject'\n              example: '{\n                          \"id\": \"b0ab87f6-bbca-4c81-b616-c545592f6988\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-31T04:11:42.422139\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null\n                        }'\n  /Employees/{EmployeeId}/LeaveBalances:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read,payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeLeaveBalances\n      x-hasPayrollUkProblem: true\n      summary: search employee leave balances\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveBalances'\n              example: '{\n                          \"id\": \"a9b96d49-fc15-4e25-8b62-818462ea6dbd\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-31T04:45:06.125346\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 2\n                          },\n                          \"problem\": null,\n                          \"leaveBalances\": [\n                            {\n                              \"name\": \"Holiday\",\n                              \"leaveTypeID\": \"ed08dffe-788e-4b24-9630-f0fa2f4d164c\",\n                              \"balance\": 32,\n                              \"typeOfUnits\": \"Hours\"\n                            },\n                            {\n                              \"name\": \"Parental Leave\",\n                              \"leaveTypeID\": \"1d2778ee-86ea-45c0-bbf8-1045485f6b3f\",\n                              \"balance\": -80,\n                              \"typeOfUnits\": \"Hours\"\n                            }\n                          ]\n                        }'\n  /Employees/{EmployeeId}/StatutoryLeaveBalance:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read,payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeStatutoryLeaveBalances\n      x-hasPayrollUkProblem: true\n      summary: search employee leave balances\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: LeaveType\n          in: query\n          description: Filter by the type of statutory leave\n          schema:\n            type: string\n          example: sick\n        - name: AsOfDate\n          in: query\n          description: The date from which to calculate balance remaining. If not specified, current date UTC is used.\n          schema:\n            type: string\n            format: date\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeStatutoryLeaveBalanceObject'\n              example: '{\n                          \"id\": \"ee863df3-c394-4102-bb91-2b14de404c1c\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-31T05:03:47.418497\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leaveBalance\": {\n                            \"leaveType\": \"Sick\",\n                            \"balanceRemaining\": 1120,\n                            \"units\": \"Hours\"\n                          }\n                        }'\n  /statutoryleaves/summary/{EmployeeId}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read,payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getStatutoryLeaveSummary\n      x-hasPayrollUkProblem: true\n      summary: retrieve a summary of statutory leaves for an employee\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: activeOnly\n          in: query\n          description: Filter response with leaves that are currently active or yet to be taken. If not specified, all leaves (past, current, and future scheduled) are returned\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeStatutoryLeavesSummaries'\n              example: '{\n                        \"id\": \"1908f4d1-b85d-4d6d-a885-6b6e2922ad03\",\n                        \"providerName\": \"java-sdk-oauth2-dev-02\",\n                        \"dateTimeUTC\": \"2020-04-02T19:47:06.0791382\",\n                        \"httpStatusCode\": \"OK\",\n                        \"pagination\": null,\n                        \"problem\": null,\n                        \"statutoryLeaves\": [\n                          {\n                            \"statutoryLeaveID\": \"17f4c3c7-d65c-4572-9118-03798f26f813\",\n                            \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                            \"type\": \"Sick\",\n                            \"endDate\": \"2020-04-01\",\n                            \"startDate\": \"2020-03-28\",\n                            \"isEntitled\": false,\n                            \"status\": \"Pending\"\n                          }\n                        ]\n                      }'\n  /StatutoryLeaves/Sick:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: createEmployeeStatutorySickLeave\n      x-hasPayrollUkProblem: true\n      summary: creates employee statutory sick leave records\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeStatutorySickLeaveObject'\n              example: '{\n                          \"id\": \"35c840a3-04aa-43f1-9171-f7eaf4fd4454\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-20T18:59:28.3440854\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"statutorySickLeave\": {\n                            \"statutoryLeaveID\": \"a2b5a1fb-ae21-47b4-876d-0b61fa6b37ab\",\n                            \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                            \"leaveTypeID\": \"aab78802-e9d3-4bbd-bc87-df858054988f\",\n                            \"startDate\": \"2020-04-21\",\n                            \"endDate\": \"2020-04-24\",\n                            \"workPattern\": [\n                              \"Monday\",\n                              \"Tuesday\",\n                              \"Wednesday\",\n                              \"Thursday\",\n                              \"Friday\"\n                            ],\n                            \"isPregnancyRelated\": false,\n                            \"sufficientNotice\": true,\n                            \"isEntitled\": false,\n                            \"entitlementWeeksRequested\": 0.8,\n                            \"entitlementWeeksQualified\": 27.2,\n                            \"entitlementWeeksRemaining\": 26.4,\n                            \"overlapsWithOtherLeave\": false,\n                            \"entitlementFailureReasons\": [\n                              \"NotQualifiedInPreviousPiw\"\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeStatutorySickLeave'\n            example: '{\n                        \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                        \"leaveTypeID\": \"aab78802-e9d3-4bbd-bc87-df858054988f\",\n                        \"startDate\": \"2020-04-21\",\n                        \"endDate\": \"2020-04-24\",\n                        \"workPattern\": [\n                          \"Monday\",\n                          \"Tuesday\",\n                          \"Wednesday\",\n                          \"Thursday\",\n                          \"Friday\"\n                        ],\n                        \"isPregnancyRelated\": false,\n                        \"sufficientNotice\": true\n                      }'\n  /StatutoryLeaves/Sick/{StatutorySickLeaveID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read,payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeStatutorySickLeave\n      x-hasPayrollUkProblem: true\n      summary: retrieve a statutory sick leave for an employee\n      parameters:\n        - name: StatutorySickLeaveID\n          in: path\n          required: true\n          description: Statutory sick leave id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeStatutorySickLeaveObject'\n              example: '{\n                          \"id\": \"c484213d-6225-4ede-bc5e-e81ef350af41\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-17T18:31:49.3895522\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"statutorySickLeave\": {\n                            \"statutoryLeaveID\": \"17f4c3c7-d65c-4572-9118-03798f26f813\",\n                            \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                            \"leaveTypeID\": \"054a2b5e-fe51-4494-9486-3e3130323c69\",\n                            \"startDate\": \"2020-03-28\",\n                            \"endDate\": \"2020-04-01\",\n                            \"workPattern\": [\n                              \"Monday\",\n                              \"Tuesday\",\n                              \"Wednesday\",\n                              \"Thursday\",\n                              \"Friday\"\n                            ],\n                            \"isPregnancyRelated\": false,\n                            \"sufficientNotice\": true,\n                            \"isEntitled\": false,\n                            \"entitlementWeeksRequested\": 0.6,\n                            \"entitlementWeeksQualified\": 28,\n                            \"entitlementWeeksRemaining\": 0,\n                            \"overlapsWithOtherLeave\": false,\n                            \"entitlementFailureReasons\": [\n                              \"AweLowerThanLel\"\n                            ]\n                          }\n                        }'\n  /Employees/{EmployeeId}/LeavePeriods:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read, payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeLeavePeriods\n      x-hasPayrollUkProblem: true\n      summary: searches employee leave periods\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - in: query\n          name: startDate\n          description: Filter by start date\n          schema:\n            type: string\n            format: date\n        - in: query\n          name: endDate\n          description: Filter by end date\n          schema:\n            type: string\n            format: date\n          example: Johnson\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeavePeriods'\n              example: '{\n                        \"id\": \"a31df805-68d1-4054-9542-797ec758abd2\",\n                        \"providerName\": \"java-sdk-oauth2-dev-02\",\n                        \"dateTimeUTC\": \"2020-04-07T20:33:42.1904008\",\n                        \"httpStatusCode\": \"OK\",\n                        \"pagination\": null,\n                        \"problem\": null,\n                        \"periods\": [\n                          {\n                            \"periodStartDate\": \"2020-02-24T00:00:00\",\n                            \"periodEndDate\": \"2020-03-01T00:00:00\",\n                            \"numberOfUnits\": 40,\n                            \"periodStatus\": null\n                          },\n                          {\n                            \"periodStartDate\": \"2020-03-02T00:00:00\",\n                            \"periodEndDate\": \"2020-03-08T00:00:00\",\n                            \"numberOfUnits\": 32,\n                            \"periodStatus\": null\n                          }\n                        ]\n                      }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /Employees/{EmployeeId}/LeaveTypes:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read, payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeLeaveTypes\n      x-hasPayrollUkProblem: true\n      summary: searches employee leave types\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveTypes'\n              example: '{\n                          \"id\": \"d86959c6-94f5-437a-9367-581cb145fc4f\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-27T16:25:56.2931034\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leaveTypes\": [\n                            {\n                              \"leaveTypeID\": \"ed08dffe-788e-4b24-9630-f0fa2f4d164c\",\n                              \"scheduleOfAccrual\": \"OnAnniversaryDate\",\n                              \"hoursAccruedAnnually\": 200,\n                              \"maximumToAccrue\": 0,\n                              \"openingBalance\": 72,\n                              \"rateAccruedHourly\": 0\n                            }\n                          ]\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: createEmployeeLeaveType\n      x-hasPayrollUkProblem: true\n      summary: creates employee leave type records\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeeLeaveTypeObject'\n              example: '{\n                          \"id\": \"3245e4c9-1ec5-4f3e-b659-fdb722733060\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-20T20:24:25.8151387\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leaveType\": {\n                            \"leaveTypeID\": \"4918f233-bd31-43f9-9633-bcc6de1178f2\",\n                            \"scheduleOfAccrual\": \"BeginningOfCalendarYear\",\n                            \"hoursAccruedAnnually\": 10,\n                            \"maximumToAccrue\": 0,\n                            \"openingBalance\": 0,\n                            \"rateAccruedHourly\": 0\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmployeeLeaveType'\n            example: '{\n                        \"leaveTypeID\": \"4918f233-bd31-43f9-9633-bcc6de1178f2\",\n                        \"scheduleOfAccrual\": \"BeginningOfCalendarYear\",\n                        \"hoursAccruedAnnually\": 10\n                      }'\n  /Employees/{EmployeeId}/PaymentMethods:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read, payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeePaymentMethod\n      x-hasPayrollUkProblem: true\n      summary: retrieves an employee's payment method\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentMethodObject'\n              example: '{\n                          \"id\": \"33c27fe9-de53-4114-8455-a6392add88b8\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-13T18:22:18.9003328\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"paymentMethod\": {\n                            \"paymentMethod\": \"Electronically\",\n                            \"bankAccounts\": [\n                              {\n                                \"accountName\": \"Oliver Furniss - Santander\",\n                                \"accountNumber\": \"12345678\",\n                                \"sortCode\": \"111111\"\n                              }\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: createEmployeePaymentMethod\n      x-hasPayrollUkProblem: true\n      summary: creates employee payment method\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentMethodObject'\n              example: '{\n                          \"id\": \"6c5eab91-8f3c-4569-a5ce-ab4eec112d35\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-13T18:48:16.6038123\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"paymentMethod\": {\n                            \"paymentMethod\": \"Electronically\",\n                            \"bankAccounts\": [\n                              {\n                                \"accountName\": \"Sid BofA\",\n                                \"accountNumber\": \"24987654\",\n                                \"sortCode\": \"287654\"\n                              }\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentMethod'\n            example: '{\n                        \"paymentMethod\": \"Electronically\",\n                        \"bankAccounts\": [\n                          {\n                            \"accountName\": \"Sid BofA\",\n                            \"accountNumber\": \"24987654\",\n                            \"sortCode\": \"287654\"\n                          }\n                        ]\n                      }'\n  /Employees/{EmployeeId}/PayTemplates:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read, payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeePayTemplate\n      x-hasPayrollUkProblem: true\n      summary: searches employee pay templates\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeePayTemplateObject'\n              example: '{\n                          \"id\": \"3138be2b-96d9-44d0-a01e-80fd527555c8\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-17T15:10:54.4464048\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 0,\n                            \"itemCount\": 0\n                          },\n                          \"problem\": null,\n                          \"payTemplate\": {\n                            \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                            \"earningTemplates\": [\n                              {\n                                \"payTemplateEarningID\": \"4e2a0753-56b9-423d-8068-624473bd1c00\",\n                                \"ratePerUnit\": 25,\n                                \"numberOfUnits\": 10,\n                                \"fixedAmount\": null,\n                                \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                \"name\": \"Regular Hours\"\n                              }\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  # 503\n  /Employees/{EmployeeId}/PayTemplates/earnings:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: createEmployeeEarningsTemplate\n      x-hasPayrollUkProblem: true\n      summary: creates employee earnings template records\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsTemplateObject'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EarningsTemplate'\n  /Employees/{EmployeeId}/PayTemplates/earnings/{PayTemplateEarningID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    put:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: updateEmployeeEarningsTemplate\n      x-hasPayrollUkProblem: true\n      summary: updates employee earnings template records\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: PayTemplateEarningID\n          in: path\n          required: true\n          description:  Id for single pay template earnings object\n          schema: \n            type: string\n            format: uuid\n            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsTemplateObject'\n              example: '{\n                          \"id\": \"39603f09-e06f-4cd4-8291-e3ad1df8b35b\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-17T15:52:35.0247503\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"earningTemplate\": {\n                            \"payTemplateEarningID\": \"4e2a0753-56b9-423d-8068-624473bd1c00\",\n                            \"ratePerUnit\": 30,\n                            \"numberOfUnits\": 4,\n                            \"fixedAmount\": null,\n                            \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                            \"name\": \"Regular Hours\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EarningsTemplate'\n            example: '{\n                        \"ratePerUnit\": 30,\n                        \"numberOfUnits\": 4,\n                        \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\"\n                      }'\n    delete:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: deleteEmployeeEarningsTemplate\n      summary: deletes an employee earnings template record\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: PayTemplateEarningID\n          in: path\n          required: true\n          description:  Id for single pay template earnings object\n          schema: \n            type: string\n            format: uuid\n            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        '200':\n          description: deletion successful\n  /Employees/{EmployeeId}/paytemplateearnings:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: createMultipleEmployeeEarningsTemplate\n      x-hasPayrollUkProblem: true\n      summary: creates multiple employee earnings template records\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmployeePayTemplates'\n              example: '{\n                        \"id\": \"1c08b529-0827-4e91-a6a1-c479765aa65f\",\n                        \"providerName\": \"java-sdk-oauth2-dev-02\",\n                        \"dateTimeUTC\": \"2020-04-17T16:56:35.6264368\",\n                        \"httpStatusCode\": \"OK\",\n                        \"pagination\": null,\n                        \"problem\": null,\n                        \"earningTemplates\": [\n                          {\n                            \"payTemplateEarningID\": \"6b32533d-1111-4a92-ac52-7641315a1719\",\n                            \"ratePerUnit\": 20,\n                            \"numberOfUnits\": 8,\n                            \"fixedAmount\": null,\n                            \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                            \"name\": \"Regular Hours\"\n                          },\n                          {\n                            \"payTemplateEarningID\": \"b8b16366-6a60-4b72-97c1-57af555da375\",\n                            \"ratePerUnit\": 20,\n                            \"numberOfUnits\": 8,\n                            \"fixedAmount\": null,\n                            \"earningsRateID\": \"973365f3-66b2-4c33-8ae6-14b75f78f68b\",\n                            \"name\": \"Overtime Hours\"\n                          }\n                        ]\n                      }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EarningsTemplates'\n            example: '[\n                        {\n                            \"ratePerUnit\":20.0,\n                            \"numberOfUnits\":8.0,\n                            \"earningsRateID\":\"87f5b43a-cf51-4b74-92de-94c819e82d27\"\n                        },\n                        {\n                            \"ratePerUnit\":20.0,\n                            \"numberOfUnits\":8.0,\n                            \"earningsRateID\":\"973365f3-66b2-4c33-8ae6-14b75f78f68b\"\n                        }\n                      ]'\n  /Benefits:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getBenefits\n      x-hasPayrollUkProblem: true\n      summary: searches benefits\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Benefits'\n              example: '{\n                          \"id\": \"079865dc-f3df-4783-98a9-67db747ab82c\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-15T18:45:03.617089\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 1\n                          },\n                          \"problem\": null,\n                          \"benefits\": [\n                            {\n                              \"id\": \"17ee7e28-9f4c-4675-9590-cc0547c9f7ac\",\n                              \"name\": \"Mind The Gap Pensions\",\n                              \"category\": \"StakeholderPension\",\n                              \"liabilityAccountId\": \"d659ebbf-0760-4e07-a1fb-8de6b9ecdff9\",\n                              \"expenseAccountId\": \"edda7154-dfc8-4486-a82b-e5e955408eaa\",\n                              \"standardAmount\": null,\n                              \"percentage\": 3,\n                              \"calculationType\": \"PercentageOfGross\",\n                              \"currentRecord\": true,\n                              \"showBalanceToEmployee\": false,\n                              \"subjectToNIC\": null,\n                              \"subjectToPension\": null,\n                              \"subjectToTax\": null,\n                              \"isCalculatingOnQualifyingEarnings\": null\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: createBenefit\n      x-hasPayrollUkProblem: true\n      summary: create a new benefit\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BenefitObject'\n              example: '{\n                          \"id\": \"95352407-6477-42f1-bd9c-bab28af8b0d9\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-15T18:59:01.5812362\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"benefit\": {\n                            \"id\": \"d295bf25-fb61-4f91-9b62-a9ae87633746\",\n                            \"name\": \"My Big Bennie\",\n                            \"category\": \"StakeholderPension\",\n                            \"liabilityAccountId\": \"e0faa299-ca0d-4b0a-9e32-0dfabdf9179a\",\n                            \"expenseAccountId\": \"4b03500d-32fd-4616-8d70-e1e56e0519c6\",\n                            \"standardAmount\": null,\n                            \"percentage\": 25,\n                            \"calculationType\": \"PercentageOfGross\",\n                            \"currentRecord\": true,\n                            \"showBalanceToEmployee\": true,\n                            \"subjectToNIC\": null,\n                            \"subjectToPension\": null,\n                            \"subjectToTax\": null,\n                            \"isCalculatingOnQualifyingEarnings\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Benefit'\n            example: '{\n                        \"name\": \"My Big Bennie\",\n                        \"category\": \"StakeholderPension\",\n                        \"liabilityAccountId\": \"e0faa299-ca0d-4b0a-9e32-0dfabdf9179a\",\n                        \"expenseAccountId\": \"4b03500d-32fd-4616-8d70-e1e56e0519c6\",\n                        \"standardAmount\": 50,\n                        \"percentage\": 25,\n                        \"calculationType\": \"PercentageOfGross\"\n                      }'\n  /Benefits/{id}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getBenefit\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single benefit by id\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: Identifier for the benefit\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BenefitObject'\n              example: '{\n                          \"id\": \"e7959d7b-370d-47e5-bb15-4b68f136ddae\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-15T18:45:04.5134277\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"benefit\": {\n                            \"id\": \"17ee7e28-9f4c-4675-9590-cc0547c9f7ac\",\n                            \"name\": \"Mind The Gap Pensions\",\n                            \"category\": \"StakeholderPension\",\n                            \"liabilityAccountId\": \"d659ebbf-0760-4e07-a1fb-8de6b9ecdff9\",\n                            \"expenseAccountId\": \"edda7154-dfc8-4486-a82b-e5e955408eaa\",\n                            \"standardAmount\": null,\n                            \"percentage\": 3,\n                            \"calculationType\": \"PercentageOfGross\",\n                            \"currentRecord\": true,\n                            \"showBalanceToEmployee\": false,\n                            \"subjectToNIC\": null,\n                            \"subjectToPension\": null,\n                            \"subjectToTax\": null,\n                            \"isCalculatingOnQualifyingEarnings\": null\n                          }\n                        }'\n  /Deductions:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getDeductions\n      x-hasPayrollUkProblem: true\n      summary: searches deductions\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deductions'\n              example: '{\n                          \"id\": \"846b81f3-7192-4a78-a05c-ae5d2c402546\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-20T20:57:39.6123797\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 2\n                          },\n                          \"problem\": null,\n                          \"deductions\": [\n                            {\n                              \"deductionId\": \"7c736d59-a624-4584-920b-e9910d2887a0\",\n                              \"deductionName\": \"Mind The Gap Pensions (NPA)\",\n                              \"deductionCategory\": \"StakeholderPension\",\n                              \"liabilityAccountId\": \"d659ebbf-0760-4e07-a1fb-8de6b9ecdff9\",\n                              \"currentRecord\": true,\n                              \"standardAmount\": null,\n                              \"reducesSuperLiability\": null,\n                              \"reducesTaxLiability\": null,\n                              \"calculationType\": \"PercentageOfGross\",\n                              \"percentage\": 5,\n                              \"subjectToNIC\": null,\n                              \"subjectToTax\": null,\n                              \"isReducedByBasicRate\": null,\n                              \"applyToPensionCalculations\": null,\n                              \"isCalculatingOnQualifyingEarnings\": null,\n                              \"isPension\": null\n                            },\n                            {\n                              \"deductionId\": \"49f301d4-2746-43a6-ba4a-e7001b5b83fc\",\n                              \"deductionName\": \"Post-Tax Pension\",\n                              \"deductionCategory\": \"StakeholderPensionPostTax\",\n                              \"liabilityAccountId\": \"d659ebbf-0760-4e07-a1fb-8de6b9ecdff9\",\n                              \"currentRecord\": true,\n                              \"standardAmount\": null,\n                              \"reducesSuperLiability\": null,\n                              \"reducesTaxLiability\": null,\n                              \"calculationType\": \"PercentageOfGross\",\n                              \"percentage\": 0,\n                              \"subjectToNIC\": null,\n                              \"subjectToTax\": null,\n                              \"isReducedByBasicRate\": null,\n                              \"applyToPensionCalculations\": false,\n                              \"isCalculatingOnQualifyingEarnings\": null,\n                              \"isPension\": true\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: createDeduction\n      x-hasPayrollUkProblem: true\n      summary: create a new deduction\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeductionObject'\n              example: '{\n                          \"id\": \"26cf94f5-6b62-4f76-8e89-44e4d0062566\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-20T23:03:00.7012103\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"deduction\": {\n                            \"deductionId\": \"b3695b29-750f-4957-98b4-678e4a529043\",\n                            \"deductionName\": \"My new deducation\",\n                            \"deductionCategory\": \"SalarySacrifice\",\n                            \"liabilityAccountId\": \"e0faa299-ca0d-4b0a-9e32-0dfabdf9179a\",\n                            \"currentRecord\": true,\n                            \"standardAmount\": null,\n                            \"reducesSuperLiability\": null,\n                            \"reducesTaxLiability\": null,\n                            \"calculationType\": \"FixedAmount\",\n                            \"percentage\": null,\n                            \"subjectToNIC\": null,\n                            \"subjectToTax\": null,\n                            \"isReducedByBasicRate\": null,\n                            \"applyToPensionCalculations\": null,\n                            \"isCalculatingOnQualifyingEarnings\": null,\n                            \"isPension\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Deduction'\n            example: '{\n                        \"deductionName\": \"My new deducation\",\n                        \"deductionCategory\": \"SalarySacrifice\",\n                        \"liabilityAccountId\": \"e0faa299-ca0d-4b0a-9e32-0dfabdf9179a\",\n                        \"calculationType\": \"FixedAmount\"\n                      }'\n  /Deductions/{deductionId}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getDeduction\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single deduction by id\n      parameters:\n        - in: path\n          name: deductionId\n          required: true\n          description: Identifier for the deduction\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeductionObject'\n              example: '{\n                          \"id\": \"addf44c5-5a3b-4d25-a61c-4e9e85cb27b3\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-20T22:42:54.5394384\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"deduction\": {\n                            \"deductionId\": \"7c736d59-a624-4584-920b-e9910d2887a0\",\n                            \"deductionName\": \"Mind The Gap Pensions (NPA)\",\n                            \"deductionCategory\": \"StakeholderPension\",\n                            \"liabilityAccountId\": \"d659ebbf-0760-4e07-a1fb-8de6b9ecdff9\",\n                            \"currentRecord\": true,\n                            \"standardAmount\": null,\n                            \"reducesSuperLiability\": null,\n                            \"reducesTaxLiability\": null,\n                            \"calculationType\": \"PercentageOfGross\",\n                            \"percentage\": 5,\n                            \"subjectToNIC\": null,\n                            \"subjectToTax\": null,\n                            \"isReducedByBasicRate\": null,\n                            \"applyToPensionCalculations\": null,\n                            \"isCalculatingOnQualifyingEarnings\": null,\n                            \"isPension\": null\n                          }\n                        }'\n  # NZ PAYROLL\n  # /StatutoryDeductions:\n  #   parameters:\n  #     - $ref: '#/components/parameters/requiredHeader'\n  #   get:\n  #     security:\n  #       - OAuth2: [payroll.settings.read, payroll.settings]\n  #     tags:\n  #       - PayrollNZ\n  #     operationId: getStatutoryDeductions\n  #     summary: searches statutory deductions\n  #     parameters:\n  #       - in: query\n  #         name: page\n  #         description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n  #         schema:\n  #           type: integer\n  #     responses:\n  #       '200':\n  #         description: search results matching criteria\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/StatutoryDeductions'\n  # /StatutoryDeductions/{Id}:\n  #   parameters:\n  #     - $ref: '#/components/parameters/requiredHeader'\n  #   get:\n  #     security:\n  #       - OAuth2: [payroll.settings.read, payroll.settings]\n  #     tags:\n  #       - PayrollUk\n  #     operationId: getStatutoryDeduction\n  #     summary: retrieve a single statutory deduction by id\n  #     parameters:\n  #       - in: path\n  #         name: Id\n  #         required: true\n  #         description: Identifier for the statutory deduction\n  #         schema:\n  #           type: string\n  #           format: uuid\n  #     responses:\n  #       '200':\n  #         description: search results matching criteria\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/Benefit'\n  /EarningsOrders:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getEarningsOrders\n      x-hasPayrollUkProblem: true\n      summary: searches earnings orders\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsOrders'\n              example: '{\n                          \"id\": \"5bf85b65-c2de-4632-8e5e-cc0ab3d18ff0\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-20T23:21:36.0480051\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 8\n                          },\n                          \"problem\": null,\n                          \"statutoryDeductions\": [\n                            {\n                              \"id\": \"d00d0128-500b-4685-8332-8fc8743a395c\",\n                              \"name\": \"AEO (maintenance)\",\n                              \"liabilityAccountId\": \"921237ae-76ff-4f4c-bf70-5c3c177b149d\",\n                              \"statutoryDeductionCategory\": \"PriorityOrder\",\n                              \"currentRecord\": true\n                            },\n                            {\n                              \"id\": \"f7a63612-a68d-431e-96d4-3fd0708e46b5\",\n                              \"name\": \"AEO (fines)\",\n                              \"liabilityAccountId\": \"921237ae-76ff-4f4c-bf70-5c3c177b149d\",\n                              \"statutoryDeductionCategory\": \"PriorityOrder\",\n                              \"currentRecord\": true\n                            },\n                            {\n                              \"id\": \"dabd9a53-25ac-4349-9fb3-8005ea781574\",\n                              \"name\": \"AEO (civil debts)\",\n                              \"liabilityAccountId\": \"921237ae-76ff-4f4c-bf70-5c3c177b149d\",\n                              \"statutoryDeductionCategory\": \"NonPriorityOrder\",\n                              \"currentRecord\": true\n                            },\n                            {\n                              \"id\": \"73ae94bb-182c-4242-8d67-1a281597ca9c\",\n                              \"name\": \"CTAEO\",\n                              \"liabilityAccountId\": \"921237ae-76ff-4f4c-bf70-5c3c177b149d\",\n                              \"statutoryDeductionCategory\": \"PriorityOrder\",\n                              \"currentRecord\": true\n                            },\n                            {\n                              \"id\": \"649a3c59-3937-43d2-b0e4-5e8942f17ffa\",\n                              \"name\": \"Child Support DEO\",\n                              \"liabilityAccountId\": \"921237ae-76ff-4f4c-bf70-5c3c177b149d\",\n                              \"statutoryDeductionCategory\": \"PriorityOrder\",\n                              \"currentRecord\": true\n                            },\n                            {\n                              \"id\": \"d4a4441f-452a-4067-97ac-ded4d157c319\",\n                              \"name\": \"Earnings Arrestment (Scotland)\",\n                              \"liabilityAccountId\": \"921237ae-76ff-4f4c-bf70-5c3c177b149d\",\n                              \"statutoryDeductionCategory\": \"TableBased\",\n                              \"currentRecord\": true\n                            },\n                            {\n                              \"id\": \"deec134a-2378-439c-89db-a71fa57fb28a\",\n                              \"name\": \"Conjoined Arrestment Order (Scotland)\",\n                              \"liabilityAccountId\": \"921237ae-76ff-4f4c-bf70-5c3c177b149d\",\n                              \"statutoryDeductionCategory\": \"TableBased\",\n                              \"currentRecord\": true\n                            },\n                            {\n                              \"id\": \"750c7c89-0579-45b4-becc-221a52119bd4\",\n                              \"name\": \"Current Maintenance Arrest (Scotland)\",\n                              \"liabilityAccountId\": \"921237ae-76ff-4f4c-bf70-5c3c177b149d\",\n                              \"statutoryDeductionCategory\": \"NonPriorityOrder\",\n                              \"currentRecord\": true\n                            }\n                          ]\n                        }'\n  /EarningsOrders/{id}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getEarningsOrder\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single deduction by id\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: Identifier for the deduction\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsOrderObject'\n              example: '{\n                          \"id\": \"e0fd1c57-e9d0-4c3f-9a1a-0355ddf7c060\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-20T23:37:30.3398526\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"statutoryDeduction\": {\n                            \"id\": \"d00d0128-500b-4685-8332-8fc8743a395c\",\n                            \"name\": \"AEO (maintenance)\",\n                            \"liabilityAccountId\": \"921237ae-76ff-4f4c-bf70-5c3c177b149d\",\n                            \"statutoryDeductionCategory\": \"PriorityOrder\",\n                            \"currentRecord\": true\n                          }\n                        }'\n  /EarningsRates:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getEarningsRates\n      x-hasPayrollUkProblem: true\n      summary: searches earnings rates\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsRates'\n              example: '{\n                        \"id\": \"fbe7a960-fad3-4293-8de9-0fabfbea615f\",\n                        \"providerName\": \"java-sdk-oauth2-dev-02\",\n                        \"dateTimeUTC\": \"2020-04-15T15:00:05.2418623\",\n                        \"httpStatusCode\": \"OK\",\n                        \"pagination\": {\n                          \"page\": 1,\n                          \"pageSize\": 100,\n                          \"pageCount\": 1,\n                          \"itemCount\": 13\n                        },\n                        \"problem\": null,\n                        \"earningsRates\": [\n                          {\n                            \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                            \"name\": \"Regular Hours\",\n                            \"earningsType\": \"RegularEarnings\",\n                            \"rateType\": \"RatePerUnit\",\n                            \"typeOfUnits\": \"hours\",\n                            \"currentRecord\": true,\n                            \"expenseAccountID\": \"81da553d-c6c6-411e-95df-cc4ac8f7e1c2\",\n                            \"fixedAmount\": null,\n                            \"ratePerUnit\": null,\n                            \"multipleOfOrdinaryEarningsRate\": null\n                          },\n                          {\n                            \"earningsRateID\": \"973365f3-66b2-4c33-8ae6-14b75f78f68b\",\n                            \"name\": \"Overtime Hours\",\n                            \"earningsType\": \"OvertimeEarnings\",\n                            \"rateType\": \"MultipleOfOrdinaryEarningsRate\",\n                            \"typeOfUnits\": null,\n                            \"currentRecord\": true,\n                            \"expenseAccountID\": \"81da553d-c6c6-411e-95df-cc4ac8f7e1c2\",\n                            \"fixedAmount\": null,\n                            \"ratePerUnit\": null,\n                            \"multipleOfOrdinaryEarningsRate\": 1.5\n                          }\n                        ]\n                      }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: createEarningsRate\n      x-hasPayrollUkProblem: true\n      summary: create a new earnings rate\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsRateObject'\n              example: '{\n                          \"id\": \"cc5341dd-c652-47f0-b8a3-67a22617ca7b\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-15T18:12:04.6341065\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"earningsRate\": {\n                            \"earningsRateID\": \"fcf811a8-3843-4e87-8431-c62e83158aef\",\n                            \"name\": \"My Earnings Rate\",\n                            \"earningsType\": \"RegularEarnings\",\n                            \"rateType\": \"RatePerUnit\",\n                            \"typeOfUnits\": \"hours\",\n                            \"currentRecord\": true,\n                            \"expenseAccountID\": \"4b03500d-32fd-4616-8d70-e1e56e0519c6\",\n                            \"fixedAmount\": null,\n                            \"ratePerUnit\": null,\n                            \"multipleOfOrdinaryEarningsRate\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EarningsRate'\n            example: '{\n                        \"name\": \"My Earnings Rate\",\n                        \"earningsType\": \"RegularEarnings\",\n                        \"rateType\": \"RatePerUnit\",\n                        \"typeOfUnits\": \"hours\",\n                        \"expenseAccountID\": \"4b03500d-32fd-4616-8d70-e1e56e0519c6\"\n                      }'\n  /EarningsRates/{EarningsRateID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getEarningsRate\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single earnings rates by id\n      parameters:\n        - in: path\n          name: EarningsRateID\n          required: true\n          description: Identifier for the earnings rate\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsRateObject'\n              example: '{\n                          \"id\": \"85375ff5-6ccf-4d8c-a976-0531c94597de\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-15T16:54:51.8240698\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"earningsRate\": {\n                            \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                            \"name\": \"Regular Hours\",\n                            \"earningsType\": \"RegularEarnings\",\n                            \"rateType\": \"RatePerUnit\",\n                            \"typeOfUnits\": \"hours\",\n                            \"currentRecord\": true,\n                            \"expenseAccountID\": \"81da553d-c6c6-411e-95df-cc4ac8f7e1c2\",\n                            \"fixedAmount\": null,\n                            \"ratePerUnit\": null,\n                            \"multipleOfOrdinaryEarningsRate\": null\n                          }\n                        }'\n  /LeaveTypes:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getLeaveTypes\n      x-hasPayrollUkProblem: true\n      summary: searches leave types\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n        - in: query\n          name: ActiveOnly\n          description: Filters leave types by active status. By default the API returns all leave types.\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaveTypes'\n              example: '{\n                          \"id\": \"cb429b37-78d3-4b15-9788-83cbd1fd3f72\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-27T18:32:57.9928041\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 12\n                          },\n                          \"problem\": null,\n                          \"leaveTypes\": [\n                            {\n                              \"leaveTypeID\": \"ed08dffe-788e-4b24-9630-f0fa2f4d164c\",\n                              \"name\": \"Holiday\",\n                              \"isPaidLeave\": true,\n                              \"showOnPayslip\": true,\n                              \"updatedDateUTC\": \"2020-02-13T15:56:11\",\n                              \"isStatutoryLeave\": false,\n                              \"isActive\": true\n                            },\n                            {\n                              \"leaveTypeID\": \"1d2778ee-86ea-45c0-bbf8-1045485f6b3f\",\n                              \"name\": \"Parental Leave\",\n                              \"isPaidLeave\": true,\n                              \"showOnPayslip\": true,\n                              \"updatedDateUTC\": \"2020-03-27T18:19:53\",\n                              \"isStatutoryLeave\": false,\n                              \"isActive\": true\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: createLeaveType\n      x-hasPayrollUkProblem: true\n      summary: create a new leave type\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaveTypeObject'\n              example: '{\n                          \"id\": \"89aeb982-d6e8-45dd-a853-fcaee4fc99cc\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-21T02:59:35.5461123\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leaveType\": {\n                            \"leaveTypeID\": \"4c027a23-6e7b-4547-808b-c34b2b140fef\",\n                            \"name\": \"My opebvwbfxf Leave\",\n                            \"isPaidLeave\": false,\n                            \"showOnPayslip\": true,\n                            \"updatedDateUTC\": \"2020-04-21T02:59:35.3831249\",\n                            \"isStatutoryLeave\": null,\n                            \"isActive\": true\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LeaveType'\n            example: '{\n                        \"name\": \"My opebvwbfxf Leave\",\n                        \"isPaidLeave\": false,\n                        \"showOnPayslip\": true\n                      }'\n  /LeaveTypes/{LeaveTypeID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getLeaveType\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single leave type by id\n      parameters:\n        - in: path\n          name: LeaveTypeID\n          required: true\n          description: Identifier for the leave type\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaveTypeObject'\n              example: '{\n                          \"id\": \"684454f6-d808-46e0-b83d-5593a560b9d0\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-21T02:59:34.9401664\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"leaveType\": {\n                            \"leaveTypeID\": \"ed08dffe-788e-4b24-9630-f0fa2f4d164c\",\n                            \"name\": \"Holiday\",\n                            \"isPaidLeave\": true,\n                            \"showOnPayslip\": true,\n                            \"updatedDateUTC\": \"2020-04-20T20:14:31\",\n                            \"isStatutoryLeave\": false,\n                            \"isActive\": true\n                          }\n                        }'\n  /Reimbursements:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getReimbursements\n      x-hasPayrollUkProblem: true\n      summary: searches reimbursements\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Reimbursements'\n              example: '{\n                          \"id\": \"eea19a1d-a714-41c0-8730-94b6d4fbac84\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-15T00:17:27.1947108\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 5\n                          },\n                          \"problem\": null,\n                          \"reimbursements\": [\n                            {\n                              \"reimbursementID\": \"fef6115f-1606-4a74-be54-312d46b0eb0e\",\n                              \"name\": \"Travel Allowance\",\n                              \"accountID\": \"c7b73345-7f25-428a-bb97-7b20a1470a53\",\n                              \"currentRecord\": true\n                            },\n                            {\n                              \"reimbursementID\": \"8e8d7849-26e1-41d1-a41f-7e1d0bfa147b\",\n                              \"name\": \"Mileage\",\n                              \"accountID\": \"0be1631e-cc7e-4c27-951f-308c3307c0fe\",\n                              \"currentRecord\": true\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: createReimbursement\n      x-hasPayrollUkProblem: true\n      summary: create a new reimbursement\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReimbursementObject'\n              example: '{\n                          \"id\": \"310ecff7-8577-4e05-98a3-3ce7ecb2868a\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-15T00:43:39.0988382\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"reimbursement\": {\n                            \"reimbursementID\": \"2b1b587a-39f6-43f8-9dd9-a858314333c8\",\n                            \"name\": \"My new Reimburse\",\n                            \"accountID\": \"9ee28149-32a9-4661-8eab-a28738696983\",\n                            \"currentRecord\": true\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Reimbursement'\n            example: '{\n                        \"name\": \"My new Reimburse\",\n                        \"accountID\": \"9ee28149-32a9-4661-8eab-a28738696983\"\n                      }'\n  /Reimbursements/{ReimbursementID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getReimbursement\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single reimbursement by id\n      parameters:\n        - in: path\n          name: ReimbursementID\n          required: true\n          description: Identifier for the reimbursement\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReimbursementObject'\n              example: '{\n                          \"id\": \"9c727a87-a96b-4998-b7e7-6b79347915cc\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-21T03:05:16.5248369\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"reimbursement\": {\n                            \"reimbursementID\": \"fef6115f-1606-4a74-be54-312d46b0eb0e\",\n                            \"name\": \"Travel Allowance\",\n                            \"accountID\": \"c7b73345-7f25-428a-bb97-7b20a1470a53\",\n                            \"currentRecord\": true\n                          }\n                        }'\n  /Timesheets:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.timesheets.read, payroll.timesheets]\n      tags:\n        - PayrollUk\n      operationId: getTimesheets\n      x-hasPayrollUkProblem: true\n      summary: searches timesheets\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n        - in: query\n          name: employeeId\n          description: By default get Timesheets will return the timesheets for all employees in an organization. You can add GET https://…/timesheets?filter=employeeId=={EmployeeId} to get only the timesheets of a particular employee.\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: payrollCalendarId\n          description: By default get Timesheets will return all the timesheets for an organization. You can add GET https://…/timesheets?filter=payrollCalendarId=={PayrollCalendarID} to filter the timesheets by payroll calendar id\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Timesheets'\n              example: '{\n                          \"id\": \"d81c2087-3ecb-4d91-b775-73d85f593370\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-13T21:54:01.8865016\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 1\n                          },\n                          \"problem\": null,\n                          \"timesheets\": [\n                            {\n                              \"timesheetID\": \"0c94d453-3d8c-4167-8c25-b4025121d18b\",\n                              \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                              \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                              \"startDate\": \"2020-04-13T00:00:00\",\n                              \"endDate\": \"2020-04-19T00:00:00\",\n                              \"status\": \"Approved\",\n                              \"totalHours\": 16,\n                              \"updatedDateUTC\": \"2020-04-13T21:53:39\"\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollUk\n      operationId: createTimesheet\n      x-hasPayrollUkProblem: true\n      summary: create a new timesheet\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetObject'\n              example: '{\n                          \"id\": \"ef0aa7e2-6f7f-43f6-9186-af670dce7c69\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-21T03:07:37.0148822\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheet\": {\n                            \"timesheetID\": \"88d2038a-06f7-4b8a-bdab-809804c0aa1d\",\n                            \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                            \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                            \"startDate\": \"2020-04-13T00:00:00\",\n                            \"endDate\": \"2020-04-19T00:00:00\",\n                            \"status\": \"Draft\",\n                            \"totalHours\": 14,\n                            \"updatedDateUTC\": \"2020-04-21T03:07:36.8132834\",\n                            \"timesheetLines\": [\n                              {\n                                \"timesheetLineID\": \"03060d0c-b14a-4339-aced-51cb2e5313b7\",\n                                \"date\": \"2020-04-15T00:00:00\",\n                                \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 6\n                              },\n                              {\n                                \"timesheetLineID\": \"53ebdb54-b604-4d15-8c42-5162a7fe88e6\",\n                                \"date\": \"2020-04-13T00:00:00\",\n                                \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 8\n                              }\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Timesheet'\n            example: '{\n                        \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                        \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                        \"startDate\": \"2020-04-13\",\n                        \"endDate\": \"2020-04-19\",\n                        \"timesheetLines\": [\n                          {\n                            \"date\": \"2020-04-13\",\n                            \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                            \"numberOfUnits\": 8\n                          },\n                          {\n                            \"date\": \"2020-04-15\",\n                            \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                            \"numberOfUnits\": 6\n                          }\n                        ]\n                      }'\n  /Timesheets/{TimesheetID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.timesheets.read, timesheets.settings]\n      tags:\n        - PayrollUk\n      operationId: getTimesheet\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single timesheet by id\n      parameters:\n        - in: path\n          name: TimesheetID\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetObject'\n              example: '{\n                          \"id\": \"504259ac-df26-482e-bd0a-d792d96453bb\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-14T16:41:00.5013526\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheet\": {\n                            \"timesheetID\": \"25c59963-5df2-43c3-88f6-25a3caa63084\",\n                            \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                            \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                            \"startDate\": \"2020-04-13T00:00:00\",\n                            \"endDate\": \"2020-04-19T00:00:00\",\n                            \"status\": \"Draft\",\n                            \"totalHours\": 14,\n                            \"updatedDateUTC\": \"2020-04-14T16:31:35\",\n                            \"timesheetLines\": [\n                              {\n                                \"timesheetLineID\": \"6cc1e5c3-f080-4dbc-a82b-bea256ef939f\",\n                                \"date\": \"2020-04-13T00:00:00\",\n                                \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 8\n                              },\n                              {\n                                \"timesheetLineID\": \"3d900df1-9859-492b-9b00-155860158c0d\",\n                                \"date\": \"2020-04-15T00:00:00\",\n                                \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 6\n                              }\n                            ]\n                          }\n                        }'\n    delete:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollUk\n      operationId: deleteTimesheet\n      summary: delete a timesheet\n      parameters:\n        - in: path\n          name: TimesheetID\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetLine'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /Timesheets/{TimesheetID}/Lines:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollUk\n      operationId: createTimesheetLine\n      x-hasPayrollUkProblem: true\n      summary: create a new timesheet line\n      parameters:\n        - in: path\n          name: TimesheetID\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetLineObject'\n              example: '{\n                          \"id\": \"cf701261-529e-47cd-8156-5ec9ab3394ff\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-14T17:19:22.8599292\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheetLine\": {\n                            \"timesheetLineID\": \"56fce87e-7f0d-4c19-8f74-7f5656651c81\",\n                            \"date\": \"2020-04-14T00:00:00\",\n                            \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                            \"trackingItemID\": null,\n                            \"numberOfUnits\": 1\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimesheetLine'\n            example: '{\n                        \"date\": \"2020-04-14\",\n                        \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                        \"numberOfUnits\": 1\n                      }'\n  /Timesheets/{TimesheetID}/Approve:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollUk\n      operationId: approveTimesheet\n      x-hasPayrollUkProblem: true\n      summary: approve a timesheet\n      parameters:\n        - in: path\n          name: TimesheetID\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetObject'\n              example: '{\n                        \"id\": \"94c27148-2749-4d85-bc1a-986e6de230ae\",\n                        \"providerName\": \"java-sdk-oauth2-dev-02\",\n                        \"dateTimeUTC\": \"2020-06-01T20:32:19.7577043\",\n                        \"httpStatusCode\": \"OK\",\n                        \"pagination\": null,\n                        \"problem\": null,\n                        \"timesheet\": {\n                          \"timesheetID\": \"62bd8b5f-8e90-4868-a0e6-62f994f7d659\",\n                          \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                          \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                          \"startDate\": \"2020-04-13T00:00:00\",\n                          \"endDate\": \"2020-04-19T00:00:00\",\n                          \"status\": \"Approved\",\n                          \"totalHours\": 9,\n                          \"updatedDateUTC\": \"2020-06-01T20:32:19.9534744\",\n                          \"timesheetLines\": [\n                            {\n                              \"timesheetLineID\": \"ce6db38f-efe9-49dc-ae42-7e6bad3cb167\",\n                              \"date\": \"2020-04-14T00:00:00\",\n                              \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                              \"trackingItemID\": null,\n                              \"numberOfUnits\": 2\n                            },\n                            {\n                              \"timesheetLineID\": \"bc8004d2-5965-4f4e-8e46-0519040b4a05\",\n                              \"date\": \"2020-04-15T00:00:00\",\n                              \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                              \"trackingItemID\": null,\n                              \"numberOfUnits\": 6\n                            },\n                            {\n                              \"timesheetLineID\": \"fd00cd5a-7d0c-4cb7-85ff-66bd3ed2439a\",\n                              \"date\": \"2020-04-14T00:00:00\",\n                              \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                              \"trackingItemID\": null,\n                              \"numberOfUnits\": 1\n                            }\n                          ]\n                        }\n                      }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /Timesheets/{TimesheetID}/RevertToDraft:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollUk\n      operationId: revertTimesheet\n      x-hasPayrollUkProblem: true\n      summary: revert a timesheet to draft\n      parameters:\n        - in: path\n          name: TimesheetID\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetObject'\n              example: '{\n                          \"id\": \"a774530a-a50c-4480-a094-358cf80a7d98\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-14T17:49:23.1119111\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheet\": {\n                            \"timesheetID\": \"0fd483c0-3302-48c6-bbd5-7247c9a02460\",\n                            \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                            \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                            \"startDate\": \"2020-04-13T00:00:00\",\n                            \"endDate\": \"2020-04-19T00:00:00\",\n                            \"status\": \"Draft\",\n                            \"totalHours\": 15,\n                            \"updatedDateUTC\": \"2020-04-14T17:49:23.2188538\",\n                            \"timesheetLines\": [\n                              {\n                                \"timesheetLineID\": \"17a08549-1ed1-416b-83e2-c65040119a02\",\n                                \"date\": \"2020-04-13T00:00:00\",\n                                \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 8\n                              },\n                              {\n                                \"timesheetLineID\": \"0e912b7d-dc3f-4b95-a466-3f0f5c8581cb\",\n                                \"date\": \"2020-04-15T00:00:00\",\n                                \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 6\n                              },\n                              {\n                                \"timesheetLineID\": \"d0faac99-f2d4-42b9-ab00-9c2bc6e8fe3a\",\n                                \"date\": \"2020-04-14T00:00:00\",\n                                \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                \"trackingItemID\": null,\n                                \"numberOfUnits\": 1\n                              }\n                            ]\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /Timesheets/{TimesheetID}/Lines/{TimesheetLineID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    put:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollUk\n      operationId: updateTimesheetLine\n      x-hasPayrollUkProblem: true\n      summary: update a timesheet line\n      parameters:\n        - in: path\n          name: TimesheetID\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n        - in: path\n          name: TimesheetLineID\n          required: true\n          description: Identifier for the timesheet line\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetLineObject'\n              example: '{\n                          \"id\": \"582b87a6-14f3-409b-be89-f9b9c49db983\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-14T18:07:30.718153\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"timesheetLine\": {\n                            \"timesheetLineID\": \"c88edcad-af32-4536-a682-9a4772c21c8d\",\n                            \"date\": \"2020-04-14T00:00:00\",\n                            \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                            \"trackingItemID\": null,\n                            \"numberOfUnits\": 2\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimesheetLine'\n            example: '{\n                        \"date\": \"2020-04-14\",\n                        \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                        \"numberOfUnits\": 2\n                      }'\n    delete:\n      security:\n        - OAuth2: [payroll.timesheets]\n      tags:\n        - PayrollUk\n      operationId: deleteTimesheetLine\n      summary: delete a timesheet line\n      parameters:\n        - in: path\n          name: TimesheetID\n          required: true\n          description: Identifier for the timesheet\n          schema:\n            type: string\n            format: uuid\n        - in: path\n          name: TimesheetLineID\n          required: true\n          description: Identifier for the timesheet line\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimesheetLine'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n  /PayRunCalendars:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getPayRunCalendars\n      x-hasPayrollUkProblem: true\n      summary: searches payrun calendars\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunCalendars'\n              example: '{\n                          \"id\": \"f66c8da6-06c1-47c7-a415-366cb3991858\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-03-25T18:39:43.9215965\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 3\n                          },\n                          \"problem\": null,\n                          \"payRunCalendars\": [\n                            {\n                              \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                              \"name\": \"Weekly \",\n                              \"calendarType\": \"Weekly\",\n                              \"periodStartDate\": \"2020-02-10T00:00:00\",\n                              \"periodEndDate\": \"2020-02-16T00:00:00\",\n                              \"paymentDate\": \"2020-02-17T00:00:00\",\n                              \"updatedDateUTC\": \"2020-02-13T16:53:54\"\n                            },\n                            {\n                              \"payrollCalendarID\": \"d45bc68f-59d6-4000-929d-1058dcfa79e1\",\n                              \"name\": \"Fortnightly \",\n                              \"calendarType\": \"Fortnightly\",\n                              \"periodStartDate\": \"2020-02-03T00:00:00\",\n                              \"periodEndDate\": \"2020-02-16T00:00:00\",\n                              \"paymentDate\": \"2020-02-10T00:00:00\",\n                              \"updatedDateUTC\": \"2020-02-10T10:02:09\"\n                            },\n                            {\n                              \"payrollCalendarID\": \"5e813d9e-949c-461f-8a89-e9ee8955a254\",\n                              \"name\": \"Monthly \",\n                              \"calendarType\": \"Monthly\",\n                              \"periodStartDate\": \"2020-03-03T00:00:00\",\n                              \"periodEndDate\": \"2020-04-02T00:00:00\",\n                              \"paymentDate\": \"2020-03-31T00:00:00\",\n                              \"updatedDateUTC\": \"2020-02-13T16:54:07\"\n                            }\n                          ]\n                        }'\n    post:\n      security:\n        - OAuth2: [payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: createPayRunCalendar\n      x-hasPayrollUkProblem: true\n      summary: create a new payrun calendar\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunCalendarObject'\n              example: '{\n                          \"id\": \"ef25e7f2-b5d6-454c-8147-396c373565dd\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-13T17:01:06.2708245\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"payRunCalendar\": {\n                            \"payrollCalendarID\": \"5f29322d-9123-49be-bef0-9b14c35653d1\",\n                            \"name\": \"My Weekly Cal\",\n                            \"calendarType\": \"Weekly\",\n                            \"periodStartDate\": \"2020-05-01T00:00:00\",\n                            \"periodEndDate\": \"2020-05-07T00:00:00\",\n                            \"paymentDate\": \"2020-05-15T00:00:00\",\n                            \"updatedDateUTC\": \"2020-04-13T17:01:06.4944331\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PayRunCalendar'\n            example: '{\n                        \"name\": \"My Weekly Cal\",\n                        \"calendarType\": \"Weekly\",\n                        \"periodStartDate\": \"2020-05-01\",\n                        \"paymentDate\": \"2020-05-15\"\n                      }'\n  /PayRunCalendars/{PayRunCalendarID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, payroll.settings]\n      tags:\n        - PayrollUk\n      operationId: getPayRunCalendar\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single payrun calendar by id\n      parameters:\n        - in: path\n          name: PayRunCalendarID\n          required: true\n          description: Identifier for the payrun calendars\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunCalendarObject'\n              example: '{\n                          \"id\": \"dae942a3-b4fb-4b24-839b-14e1073f8cca\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-13T16:48:49.6902155\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"payRunCalendar\": {\n                            \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                            \"name\": \"Weekly \",\n                            \"calendarType\": \"Weekly\",\n                            \"periodStartDate\": \"2020-02-10T00:00:00\",\n                            \"periodEndDate\": \"2020-02-16T00:00:00\",\n                            \"paymentDate\": \"2020-02-17T00:00:00\",\n                            \"updatedDateUTC\": \"2020-02-13T16:53:54\"\n                          }\n                        }'\n  /Employees/{EmployeeId}/SalaryAndWages:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get: \n      security:\n        - OAuth2: [payroll.employees.read, payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeSalaryAndWages\n      x-hasPayrollUkProblem: true\n      summary: retrieves an employee's salary and wages\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SalaryAndWages'\n              example: '{\n                          \"id\": \"56273e64-dff0-4542-96f3-54ad3ac27431\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-10T22:47:38.8995493\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 1\n                          },\n                          \"problem\": null,\n                          \"salaryAndWages\": [\n                            {\n                              \"salaryAndWagesID\": \"49c33012-c1ac-456c-91fd-cb7e6db6f5fe\",\n                              \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                              \"numberOfUnitsPerWeek\": 40,\n                              \"ratePerUnit\": null,\n                              \"numberOfUnitsPerDay\": null,\n                              \"daysPerWeek\": null,\n                              \"effectiveFrom\": \"2020-04-01T00:00:00\",\n                              \"annualSalary\": 25000,\n                              \"status\": \"Active\",\n                              \"paymentType\": \"Salary\"\n                            }\n                          ]\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n    post:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: createEmployeeSalaryAndWage\n      x-hasPayrollUkProblem: true\n      summary: creates employee salary and wage record\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SalaryAndWageObject'\n              example: '{\n                          \"id\": \"a15f15ec-a8ed-420b-82f6-1546a9bf6d57\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-10T23:46:35.2234544\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"salaryAndWages\": {\n                            \"salaryAndWagesID\": \"1477fc72-b38d-4c0e-a46e-8657f0f32340\",\n                            \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                            \"numberOfUnitsPerWeek\": 2,\n                            \"ratePerUnit\": null,\n                            \"numberOfUnitsPerDay\": 2,\n                            \"daysPerWeek\": null,\n                            \"effectiveFrom\": \"2020-05-01T00:00:00\",\n                            \"annualSalary\": 100,\n                            \"status\": \"Pending\",\n                            \"paymentType\": \"Salary\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SalaryAndWage'\n            example: '{\n                        \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                        \"numberOfUnitsPerWeek\": 2,\n                        \"ratePerUnit\": 10,\n                        \"numberOfUnitsPerDay\": 2,\n                        \"effectiveFrom\": \"2020-05-01\",\n                        \"annualSalary\": 100,\n                        \"status\": \"ACTIVE\",\n                        \"paymentType\": \"Salary\"\n                      }'\n  /Employees/{EmployeeId}/SalaryAndWages/{SalaryAndWagesID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.employees, payroll.employees.read]\n      tags:\n        - PayrollUk\n      operationId: getEmployeeSalaryAndWage\n      x-hasPayrollUkProblem: true\n      summary: get employee salary and wages record by id\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: SalaryAndWagesID\n          in: path\n          required: true\n          description:  Id for single pay template earnings object\n          schema: \n            type: string\n            format: uuid\n            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SalaryAndWages'\n              example: '{\n                          \"id\": \"cd4f35e7-5062-494a-96c4-f81e9083b0b9\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-10T23:21:48.6291438\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"salaryAndWages\": [\n                            {\n                              \"salaryAndWagesID\": \"49c33012-c1ac-456c-91fd-cb7e6db6f5fe\",\n                              \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                              \"numberOfUnitsPerWeek\": 40,\n                              \"ratePerUnit\": null,\n                              \"numberOfUnitsPerDay\": null,\n                              \"daysPerWeek\": null,\n                              \"effectiveFrom\": \"2020-04-01T00:00:00\",\n                              \"annualSalary\": 25000,\n                              \"status\": \"Active\",\n                              \"paymentType\": \"Salary\"\n                            }\n                          ]\n                        }'\n    put:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: updateEmployeeSalaryAndWage\n      x-hasPayrollUkProblem: true\n      summary: updates employee salary and wages record\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: SalaryAndWagesID\n          in: path\n          required: true\n          description:  Id for single pay template earnings object\n          schema: \n            type: string\n            format: uuid\n            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SalaryAndWageObject'\n              example: '{\n                          \"id\": \"d12a31ee-e094-4e67-9092-0d5e1d7569a6\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-13T16:39:11.7310047\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"salaryAndWages\": {\n                            \"salaryAndWagesID\": \"e9c7f567-b0a0-483c-b45f-d072e399352b\",\n                            \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                            \"numberOfUnitsPerWeek\": 3,\n                            \"ratePerUnit\": null,\n                            \"numberOfUnitsPerDay\": null,\n                            \"daysPerWeek\": null,\n                            \"effectiveFrom\": \"2020-05-15T00:00:00\",\n                            \"annualSalary\": 101,\n                            \"status\": \"Pending\",\n                            \"paymentType\": \"Salary\"\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SalaryAndWage'\n            example: '{\n                        \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                        \"numberOfUnitsPerWeek\": 3,\n                        \"ratePerUnit\": 11,\n                        \"effectiveFrom\": \"2020-05-15\",\n                        \"annualSalary\": 101,\n                        \"status\": \"ACTIVE\",\n                        \"paymentType\": \"Salary\"\n                      }'\n    delete:\n      security:\n        - OAuth2: [payroll.employees]\n      tags:\n        - PayrollUk\n      operationId: deleteEmployeeSalaryAndWage\n      summary: deletes an employee salary and wages record\n      parameters:\n        - name: EmployeeId\n          in: path\n          required: true\n          description: Employee id for single object\n          schema: \n            type: string\n            format: uuid\n            example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c\n        - name: SalaryAndWagesID\n          in: path\n          required: true\n          description:  Id for single salary and wages object\n          schema: \n            type: string\n            format: uuid\n            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      responses:\n        '200':\n          description: deletion successful\n  /PayRuns:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.payruns.read, payroll.payruns]\n      tags:\n        - PayrollUk\n      operationId: getPayRuns\n      x-hasPayrollUkProblem: true\n      summary: searches pay runs\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n        - in: query\n          name: status\n          description: By default get payruns will return all the payruns for an organization. You can add GET https://api.xero.com/payroll.xro/2.0/payRuns?statu={PayRunStatus} to filter the payruns by status.\n          schema:\n            type: string\n            enum:\n              - Draft\n              - Posted\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRuns'\n              example: '{\n                          \"id\": \"d748445b-fd11-4832-a85a-905fbfcf3d7c\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-10T21:55:55.0725037\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 2\n                          },\n                          \"problem\": null,\n                          \"payRuns\": [\n                            {\n                              \"payRunID\": \"e0a59d82-6229-4be4-9d66-49891b4d933e\",\n                              \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                              \"periodStartDate\": \"2020-02-03T00:00:00\",\n                              \"periodEndDate\": \"2020-02-09T00:00:00\",\n                              \"paymentDate\": \"2020-02-10T00:00:00\",\n                              \"totalCost\": 490.39,\n                              \"totalPay\": 376.92,\n                              \"payRunStatus\": \"Draft\",\n                              \"payRunType\": \"Scheduled\",\n                              \"calendarType\": \"Weekly\",\n                              \"postedDateTime\": null,\n                              \"payslipMessage\": null\n                            },\n                            {\n                              \"payRunID\": \"ea4f0a14-2c41-4583-9845-9e455972b326\",\n                              \"payrollCalendarID\": \"5e813d9e-949c-461f-8a89-e9ee8955a254\",\n                              \"periodStartDate\": \"2020-02-03T00:00:00\",\n                              \"periodEndDate\": \"2020-03-02T00:00:00\",\n                              \"paymentDate\": \"2020-02-28T00:00:00\",\n                              \"totalCost\": 1502.08,\n                              \"totalPay\": 1294.65,\n                              \"payRunStatus\": \"Posted\",\n                              \"payRunType\": \"Scheduled\",\n                              \"calendarType\": \"Monthly\",\n                              \"postedDateTime\": \"2020-02-13T16:54:11\",\n                              \"payslipMessage\": null\n                            }\n                          ]\n                        }'\n  /PayRuns/{PayRunID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.payruns.read, payroll.payruns]\n      tags:\n        - PayrollUk\n      operationId: getPayRun\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single pay run by id\n      parameters:\n        - in: path\n          name: PayRunID\n          required: true\n          description: Identifier for the pay run\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunObject'\n              example: '{\n                          \"id\": \"84471d62-74b6-4b21-845c-6d1e6f031172\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-10T21:55:55.745211\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"payRun\": {\n                            \"payRunID\": \"e0a59d82-6229-4be4-9d66-49891b4d933e\",\n                            \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                            \"periodStartDate\": \"2020-02-03T00:00:00\",\n                            \"periodEndDate\": \"2020-02-09T00:00:00\",\n                            \"paymentDate\": \"2020-02-10T00:00:00\",\n                            \"totalCost\": 490.39,\n                            \"totalPay\": 376.92,\n                            \"payRunStatus\": \"Draft\",\n                            \"payRunType\": \"Scheduled\",\n                            \"calendarType\": \"Weekly\",\n                            \"postedDateTime\": null,\n                            \"paySlips\": [\n                              {\n                                \"paySlipID\": \"ed3fb9b3-e9a1-44fa-a224-8be49facbbe8\",\n                                \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                                \"lastEdited\": null,\n                                \"firstName\": \"Mike\",\n                                \"lastName\": \"Johnpitragibigson\",\n                                \"totalEarnings\": 480.77,\n                                \"grossEarnings\": 480.77,\n                                \"totalPay\": 386.54,\n                                \"totalEmployerTaxes\": 0,\n                                \"totalEmployeeTaxes\": 94.23,\n                                \"totalDeductions\": 9.62,\n                                \"totalReimbursements\": 0,\n                                \"totalCourtOrders\": 0,\n                                \"totalBenefits\": 9.62,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": null\n                              }\n                            ],\n                            \"payslipMessage\": null,\n                            \"invalidPayeeIDs\": null\n                          }\n                        }'\n    put:\n      security:\n        - OAuth2: [payroll.payruns]\n      tags:\n        - PayrollUk\n      operationId: updatePayRun\n      x-hasPayrollUkProblem: true\n      summary: update a pay run\n      parameters:\n        - in: path\n          name: PayRunID\n          required: true\n          description: Identifier for the pay run\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayRunObject'\n              example: '{\n                          \"id\": \"f567524d-34d6-412b-97e3-f97152c1bbc2\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-06-03T18:33:25.3607921\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"payRun\": {\n                            \"payRunID\": \"e0a59d82-6229-4be4-9d66-49891b4d933e\",\n                            \"payrollCalendarID\": \"216d80e6-af55-47b1-b718-9457c3f5d2fe\",\n                            \"periodStartDate\": \"2020-02-03T00:00:00\",\n                            \"periodEndDate\": \"2020-02-09T00:00:00\",\n                            \"paymentDate\": \"2020-05-01T00:00:00\",\n                            \"totalCost\": 523.79,\n                            \"totalPay\": 445.04,\n                            \"payRunStatus\": \"Draft\",\n                            \"payRunType\": \"Scheduled\",\n                            \"calendarType\": \"Weekly\",\n                            \"postedDateTime\": null,\n                            \"paySlips\": [\n                              {\n                                \"paySlipID\": \"ed3fb9b3-e9a1-44fa-a224-8be49facbbe8\",\n                                \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                                \"lastEdited\": null,\n                                \"firstName\": \"Mike\",\n                                \"lastName\": \"Johncfvhitgezvson\",\n                                \"totalEarnings\": 480.77,\n                                \"grossEarnings\": 480.77,\n                                \"totalPay\": 445.04,\n                                \"totalEmployerTaxes\": 43.02,\n                                \"totalEmployeeTaxes\": 35.73,\n                                \"totalDeductions\": 0,\n                                \"totalReimbursements\": 0,\n                                \"totalCourtOrders\": 0,\n                                \"totalBenefits\": 0,\n                                \"bacsHash\": null,\n                                \"paymentMethod\": \"Electronically\"\n                              }\n                            ],\n                            \"payslipMessage\": null,\n                            \"invalidPayeeIDs\": null\n                          }\n                        }'\n        '400':\n          description: validation error for a bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PayRun'\n            example: '{\n                        \"paymentDate\": \"2020-05-01\"\n                      }'\n  /Payslips:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.payslip.read, payroll.payslip]\n      tags:\n        - PayrollUk\n      operationId: getPayslips\n      x-hasPayrollUkProblem: true\n      summary: searches payslips\n      parameters:\n        - in: query\n          name: page\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 100.\n          schema:\n            type: integer\n        - in: query\n          required: true\n          name: PayRunID\n          description: PayrunID which specifies the containing payrun of payslips to retrieve. By default, the API does not group payslips by payrun.\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Payslips'\n              example: '{\n                          \"id\": \"c07aa280-478b-48b5-a778-499cf95c9781\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-10T21:50:46.3775117\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": {\n                            \"page\": 1,\n                            \"pageSize\": 100,\n                            \"pageCount\": 1,\n                            \"itemCount\": 1\n                          },\n                          \"problem\": null,\n                          \"paySlips\": [\n                            {\n                              \"paySlipID\": \"ed3fb9b3-e9a1-44fa-a224-8be49facbbe8\",\n                              \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                              \"payRunID\": \"e0a59d82-6229-4be4-9d66-49891b4d933e\",\n                              \"lastEdited\": null,\n                              \"firstName\": \"Mike\",\n                              \"lastName\": \"Johnpitragibigson\",\n                              \"totalEarnings\": 480.77,\n                              \"grossEarnings\": 480.77,\n                              \"totalPay\": 386.54,\n                              \"totalEmployerTaxes\": 0,\n                              \"totalEmployeeTaxes\": 94.23,\n                              \"totalDeductions\": 9.62,\n                              \"totalReimbursements\": 0,\n                              \"totalCourtOrders\": 0,\n                              \"totalBenefits\": 9.62,\n                              \"bacsHash\": null,\n                              \"paymentMethod\": null,\n                              \"earningsLines\": [\n                                {\n                                  \"earningsLineID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                  \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                  \"displayName\": \"Regular Hours\",\n                                  \"ratePerUnit\": 12.019231,\n                                  \"numberOfUnits\": 40,\n                                  \"fixedAmount\": null,\n                                  \"amount\": 480.77,\n                                  \"isLinkedToTimesheet\": false,\n                                  \"isAverageDailyPayRate\": null\n                                }\n                              ],\n                              \"leaveEarningsLines\": [],\n                              \"timesheetEarningsLines\": [],\n                              \"deductionLines\": [],\n                              \"reimbursementLines\": [],\n                              \"leaveAccrualLines\": [\n                                {\n                                  \"leaveTypeID\": \"ed08dffe-788e-4b24-9630-f0fa2f4d164c\",\n                                  \"numberOfUnits\": 0\n                                }\n                              ],\n                              \"benefitLines\": [],\n                              \"paymentLines\": [\n                                {\n                                  \"paymentLineID\": \"08ceb312-07af-4ce0-ae9a-176532f07009\",\n                                  \"amount\": 384.3,\n                                  \"accountNumber\": null,\n                                  \"sortCode\": null,\n                                  \"accountName\": null\n                                }\n                              ],\n                              \"employeeTaxLines\": [\n                                {\n                                  \"taxLineID\": \"e7dc717a-4399-4702-9e15-adb87e568dc9\",\n                                  \"description\": \"PAYE\",\n                                  \"amount\": 48.6,\n                                  \"globalTaxTypeID\": 1,\n                                  \"manualAdjustment\": false\n                                },\n                                {\n                                  \"taxLineID\": \"c774af0b-4776-4c81-9c96-ad18e4b35f40\",\n                                  \"description\": \"Employee National Insurance Contribution\",\n                                  \"amount\": 38.25,\n                                  \"globalTaxTypeID\": 2,\n                                  \"manualAdjustment\": false\n                                }\n                              ],\n                              \"employerTaxLines\": [\n                                {\n                                  \"taxLineID\": \"8de7a488-57ed-4d58-b76a-d9f9460ebded\",\n                                  \"description\": \"Employer National Insurance Contribution\",\n                                  \"amount\": 43.99,\n                                  \"globalTaxTypeID\": 3,\n                                  \"manualAdjustment\": false\n                                }\n                              ],\n                              \"courtOrderLines\": []\n                            }\n                          ]\n                        }'\n  /Payslips/{PayslipID}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.payslip.read, payroll.payslip]\n      tags:\n        - PayrollUk\n      operationId: getPaySlip\n      x-hasPayrollUkProblem: true\n      summary: retrieve a single payslip by id\n      parameters:\n        - in: path\n          name: PayslipID\n          required: true\n          description: Identifier for the payslip\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayslipObject'\n              example: '{\n                          \"id\": \"80c558c3-bc7a-48d0-91b2-20b8ec784f0d\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-10T22:04:35.1798025\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"paySlip\": {\n                            \"paySlipID\": \"ed3fb9b3-e9a1-44fa-a224-8be49facbbe8\",\n                            \"employeeID\": \"aad6b292-7b94-408b-93f6-e489867e3fb0\",\n                            \"payRunID\": \"e0a59d82-6229-4be4-9d66-49891b4d933e\",\n                            \"lastEdited\": null,\n                            \"firstName\": \"Mike\",\n                            \"lastName\": \"Johnpitragibigson\",\n                            \"totalEarnings\": 480.77,\n                            \"grossEarnings\": 480.77,\n                            \"totalPay\": 386.54,\n                            \"totalEmployerTaxes\": 0,\n                            \"totalEmployeeTaxes\": 94.23,\n                            \"totalDeductions\": 9.62,\n                            \"totalReimbursements\": 0,\n                            \"totalCourtOrders\": 0,\n                            \"totalBenefits\": 9.62,\n                            \"bacsHash\": null,\n                            \"paymentMethod\": null,\n                            \"earningsLines\": [\n                              {\n                                \"earningsLineID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                \"earningsRateID\": \"87f5b43a-cf51-4b74-92de-94c819e82d27\",\n                                \"displayName\": \"Regular Hours\",\n                                \"ratePerUnit\": 12.019231,\n                                \"numberOfUnits\": 40,\n                                \"fixedAmount\": null,\n                                \"amount\": 480.77,\n                                \"isLinkedToTimesheet\": false,\n                                \"isAverageDailyPayRate\": null\n                              }\n                            ],\n                            \"leaveEarningsLines\": [],\n                            \"timesheetEarningsLines\": [],\n                            \"deductionLines\": [],\n                            \"reimbursementLines\": [],\n                            \"leaveAccrualLines\": [\n                              {\n                                \"leaveTypeID\": \"ed08dffe-788e-4b24-9630-f0fa2f4d164c\",\n                                \"numberOfUnits\": 0\n                              }\n                            ],\n                            \"benefitLines\": [],\n                            \"paymentLines\": [\n                              {\n                                \"paymentLineID\": \"08ceb312-07af-4ce0-ae9a-176532f07009\",\n                                \"amount\": 384.3,\n                                \"accountNumber\": null,\n                                \"sortCode\": null,\n                                \"accountName\": null\n                              }\n                            ],\n                            \"employeeTaxLines\": [\n                              {\n                                \"taxLineID\": \"e7dc717a-4399-4702-9e15-adb87e568dc9\",\n                                \"description\": \"PAYE\",\n                                \"amount\": 48.6,\n                                \"globalTaxTypeID\": 1,\n                                \"manualAdjustment\": false\n                              },\n                              {\n                                \"taxLineID\": \"c774af0b-4776-4c81-9c96-ad18e4b35f40\",\n                                \"description\": \"Employee National Insurance Contribution\",\n                                \"amount\": 38.25,\n                                \"globalTaxTypeID\": 2,\n                                \"manualAdjustment\": false\n                              }\n                            ],\n                            \"employerTaxLines\": [\n                              {\n                                \"taxLineID\": \"8de7a488-57ed-4d58-b76a-d9f9460ebded\",\n                                \"description\": \"Employer National Insurance Contribution\",\n                                \"amount\": 43.99,\n                                \"globalTaxTypeID\": 3,\n                                \"manualAdjustment\": false\n                              }\n                            ],\n                            \"courtOrderLines\": []\n                          }\n                        }'\n  /Settings:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, settings.payslip]\n      tags:\n        - PayrollUk\n      operationId: getSettings\n      x-hasPayrollUkProblem: true\n      summary: searches settings\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Settings'\n              example: '{\n                        \"id\": \"3cb41871-980a-47e4-878f-7c576b0d3677\",\n                        \"providerName\": \"java-sdk-oauth2-dev-02\",\n                        \"dateTimeUTC\": \"2020-04-10T21:27:04.8905569\",\n                        \"httpStatusCode\": \"OK\",\n                        \"pagination\": null,\n                        \"problem\": null,\n                        \"settings\": {\n                          \"accounts\": [\n                            {\n                              \"accountID\": \"9ee28149-32a9-4661-8eab-a28738696983\",\n                              \"type\": \"WAGESPAYABLE\",\n                              \"code\": \"814\",\n                              \"name\": \"Wages Payable - Payroll\"\n                            },\n                            {\n                              \"accountID\": \"81da553d-c6c6-411e-95df-cc4ac8f7e1c2\",\n                              \"type\": \"WAGESEXPENSE\",\n                              \"code\": \"477\",\n                              \"name\": \"Salaries\"\n                            },\n                            {\n                              \"accountID\": \"bd9e85e0-0478-433d-ae9f-0b3c4f04bfe4\",\n                              \"type\": \"BANK\",\n                              \"code\": \"090\",\n                              \"name\": \"Business Bank Account\"\n                            },\n                            {\n                              \"accountID\": \"43072840-e67b-45df-8b90-f52ebedb2779\",\n                              \"type\": \"PAYELIABILITY\",\n                              \"code\": \"825\",\n                              \"name\": \"PAYE Payable\"\n                            },\n                            {\n                              \"accountID\": \"a2377a9f-f5bd-4327-8f85-e3461b591912\",\n                              \"type\": \"NICLIABILITY\",\n                              \"code\": \"826\",\n                              \"name\": \"NIC Payable\"\n                            },\n                            {\n                              \"accountID\": \"4e24254c-2770-433d-9845-8925ded5e14a\",\n                              \"type\": \"EMPLOYERSNIC\",\n                              \"code\": \"479\",\n                              \"name\": \"Employers National Insurance\"\n                            },\n                            {\n                              \"accountID\": \"9ee28149-32a9-4661-8eab-a28738696983\",\n                              \"type\": \"PAYEECONTRIBUTION\",\n                              \"code\": \"814\",\n                              \"name\": \"Wages Payable - Payroll\"\n                            }\n                          ]\n                        }\n                      }'\n  /settings/trackingCategories:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [payroll.settings.read, settings.payslip]\n      tags:\n        - PayrollUk\n      operationId: getTrackingCategories\n      x-hasPayrollUkProblem: true\n      summary: searches tracking categories\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrackingCategories'\n              example: '{\n                          \"id\": \"e56628f7-a25e-4d23-88c5-56e2895e2143\",\n                          \"providerName\": \"java-sdk-oauth2-dev-02\",\n                          \"dateTimeUTC\": \"2020-04-10T21:13:21.498344\",\n                          \"httpStatusCode\": \"OK\",\n                          \"pagination\": null,\n                          \"problem\": null,\n                          \"trackingCategories\": {\n                            \"employeeGroupsTrackingCategoryID\": \"9d8ad8f6-0d0f-41e0-8851-ef47e8b54ae6\",\n                            \"timesheetTrackingCategoryID\": \"1d7d2015-10e7-4ecb-8b44-f331c8b63e2d\"\n                          }\n                        }'\ncomponents:\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      description: For more information visit https://developer.xero.com/documentation/oauth2/overview\n      flows: \n        authorizationCode:\n          authorizationUrl: 'https://login.xero.com/identity/connect/authorize'\n          tokenUrl: 'https://identity.xero.com/connect/token'\n          scopes:\n            payroll.employees: Grant read-write access to payroll employees\n            payroll.employees.read: Grant read-only access to payroll employees\n            payroll.payruns: Grant read-write access to payroll payruns\n            payroll.payruns.read: Grant read-only access to payroll payruns\n            payroll.payslip: Grant read-write access to payroll payslips\n            payroll.payslip.read: Grant read-only access to payroll payslips\n            payroll.settings: Grant read-write access to payroll settings\n            payroll.settings.read: Grant read-only access to payroll settings\n            payroll.timesheets: Grant read-write access to payroll timesheets\n            payroll.timesheets.read: Grant read-only access to payroll timesheets\n  parameters:\n    requiredHeader: \n      in: header\n      name: Xero-Tenant-Id\n      description: Xero identifier for Tenant\n      schema:\n        type: string\n      required: true \n  schemas:\n    Pagination:\n      properties:\n        page:\n          type: integer\n          example: 1\n        pageSize:\n          type: integer\n          example: 10\n        pageCount:\n          type: integer\n          example: 1\n        itemCount:\n          type: integer\n          example: 2\n    Problem:\n      description: The object returned for a bad request\n      type: object\n      properties:\n        type: \n          description: The type of error format \n          type: string\n          example: application/problem+json\n        title:\n          description: The type of the error\n          type: string\n          example: BadRequest\n        status:\n          description: The error status code \n          type: string\n          example: 400\n        detail:\n          description: A description of the error\n          type: string\n          example: Validation error occurred.\n        instance: \n          type: string\n        invalidFields:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvalidField'\n    InvalidField:\n      type: object\n      properties:\n        name:\n          description: The name of the field that caused the error\n          type: string\n          example: DateOfBirth\n        reason:\n          description: The reason the error occurred\n          type: string\n          example: The Date of Birth is required.  \n    Employees:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        employees:\n          type: array\n          items:\n            $ref: '#/components/schemas/Employee'\n    EmployeeObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        employee:\n          $ref: '#/components/schemas/Employee'\n        problem:\n          $ref: '#/components/schemas/Problem'\n    Employee:\n      type: object\n      required:\n        - Title\n        - FirstName\n        - LastName\n        - DateOfBirth\n        - Gender\n        - Address\n      properties:\n        employeeID:\n          description:  Xero unique identifier for the employee\n          type: string\n          format: uuid\n          example: d90457c4-f1be-4f2e-b4e3-f766390a7e30\n        title:\n          description: Title of the employee\n          type: string\n          example: Mrs\n        firstName:\n          description: First name of employee\n          type: string\n          example: Karen\n        lastName:\n          description: Last name of employee\n          type: string\n          example: Jones\n        dateOfBirth:\n          description: Date of birth of the employee (YYYY-MM-DD)\n          type: string\n          format: date\n          example: 2019-01-02  \n          x-is-date: true \n        address:\n          $ref: '#/components/schemas/Address'\n        email:\n          description: The email address for the employee\n          type: string\n          example: developer@me.com\n        gender:\n          description: The employee’s gender\n          type: string\n          enum:\n          - M  \n          - F \n          example: F\n        phoneNumber:\n          description: Employee phone number\n          type: string\n          example: 415-555-1212\n        startDate:\n          description: Employment start date of the employee at the time it was requested\n          type: string\n          format: date\n          example: 2020-01-19\n          x-is-date: true\n        endDate:\n          description: Employment end date of the employee at the time it was requested\n          type: string\n          format: date\n          example: 2020-01-19\n          x-is-date: true\n        payrollCalendarID:\n          description: Xero unique identifier for the payroll calendar of the employee\n          type: string\n          format: uuid\n        updatedDateUTC:\n          description: UTC timestamp of last update to the employee\n          type: string\n          format: date-time\n          x-is-datetime: true\n        createdDateUTC:\n          description: UTC timestamp when the employee was created in Xero\n          type: string\n          format: date-time\n          x-is-datetime: true\n        nationalInsuranceNumber:\n          description: National insurance number of the employee\n          type: string\n          example: AB123456C\n    EmploymentObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        employment:\n          $ref: '#/components/schemas/Employment'\n    Employment:\n      type: object\n      required:\n        - PayrollCalendarID\n        - StartDate\n        - EmployeeNumber\n        - NICategory\n      properties:\n        payrollCalendarID:\n          description: Xero unique identifier for the payroll calendar of the employee\n          type: string\n          format: uuid\n        startDate:\n          description: Start date of the employment (YYYY-MM-DD)\n          type: string\n          format: date\n          x-is-date: true \n        employeeNumber:\n          description: The employment number of the employee\n          type: string\n          example: 007\n        niCategory:\n          description: The NI Category of the employee\n          type: string\n          enum:\n          - A\n          - B\n          - C\n          - H\n          - J\n          - M\n          - Z\n          - X\n          example: A\n    EmployeeTaxObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        employeeTax:\n          $ref: '#/components/schemas/EmployeeTax'\n    EmployeeTax:\n      type: object\n      properties:\n        starterType:\n          description: The Starter type.\n          type: string\n          example: New Employee with P45\n        starterDeclaration:\n          description: Starter declaration.\n          type: string\n          example: B.) This is currently their only job\n        taxCode:\n          description: The Tax code.\n          type: string\n          example: 1185L\n        w1M1:\n          description:   Describes whether the tax settings is W1M1\n          type: boolean\n        previousTaxablePay:\n          description: The previous taxable pay\n          type: number\n          format: double\n        previousTaxPaid:\n          description: The tax amount previously paid  \n          type: number\n          format: double\n        studentLoanDeduction:\n          description: The employee's student loan deduction type  \n          type: string\n          example: Plan Type 2\n        hasPostGraduateLoans:\n          description: Describes whether the employee has post graduate loans\n          type: boolean\n        isDirector:\n          description: Describes whether the employee is director\n          type: boolean\n        directorshipStartDate:\n          description: The directorship start date\n          type: string\n          format: date\n          x-is-date: true \n        nicCalculationMethod:\n          description: NICs calculation method\n          type: string\n          example: Annualized\n    EmployeeOpeningBalancesObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        openingBalances:\n          $ref: '#/components/schemas/EmployeeOpeningBalances'\n    EmployeeOpeningBalances:\n      type: object\n      properties:\n        statutoryAdoptionPay:\n          description: The total accumulated statutory adoption pay amount received by the employee for current fiscal year to date\n          type: number\n          format: double\n        statutoryMaternityPay:\n          description: The total accumulated statutory maternity pay amount received by the employee for current fiscal year to date\n          type: number\n          format: double\n        statutoryPaternityPay:\n          description: The total accumulated statutory paternity pay amount received by the employee for current fiscal year to date\n          type: number\n          format: double\n        statutorySharedParentalPay:\n          description: The total accumulated statutory shared parental pay amount received by the employee for current fiscal year to date\n          type: number\n          format: double\n        statutorySickPay:\n          description: The total accumulated statutory sick pay amount received by the employee for current fiscal year to date  \n          type: number\n          format: double\n        priorEmployeeNumber:\n          description: The unique employee number issued by the employee's former employer\n          type: number\n          format: double\n    EmployeeLeaves:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leave:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeLeave'\n    EmployeeLeaveObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leave:\n          $ref: '#/components/schemas/EmployeeLeave'\n    EmployeeLeave:\n      type: object\n      required:\n        - leaveTypeID\n        - description\n        - startDate\n        - endDate\n      properties:\n        leaveID:\n          description: The Xero identifier for LeaveType\n          type: string\n          format: uuid\n        leaveTypeID:\n          description: The Xero identifier for LeaveType\n          type: string\n          format: uuid\n        description:\n          description: The description of the leave  (max length = 50)\n          type: string\n        startDate:\n          description: Start date of the leave (YYYY-MM-DD)  \n          type: string\n          format: date\n          x-is-date: true \n        endDate:\n          description:   End date of the leave (YYYY-MM-DD)\n          type: string\n          format: date\n          x-is-date: true \n        periods:\n          description: The leave period information. The StartDate, EndDate and NumberOfUnits needs to be specified when you do not want to calculate NumberOfUnits automatically. Using incorrect period StartDate and EndDate will result in automatic computation of the NumberOfUnits.\n          type: array\n          items:\n            $ref: '#/components/schemas/LeavePeriod'\n        updatedDateUTC:\n          description: UTC timestamp of last update to the leave type note\n          type: string\n          format: date-time\n          x-is-datetime: true\n    LeavePeriods:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        periods:\n          type: array\n          items:\n            $ref: '#/components/schemas/LeavePeriod'\n    LeavePeriod:\n      type: object\n      properties:\n        periodStartDate:\n          description: The Pay Period Start Date (YYYY-MM-DD)\n          type: string\n          format: date\n          x-is-date: true \n        periodEndDate:\n          description:   The Pay Period End Date (YYYY-MM-DD)\n          type: string\n          format: date\n          x-is-date: true \n        numberOfUnits:\n          description: The Number of Units for the leave\n          type: number\n          format: double\n        periodStatus:\n          description: Period Status\n          type: string\n          enum:\n          - Approved\n          - Completed\n    EmployeeLeaveBalances:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveBalances:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeLeaveBalance'\n    EmployeeLeaveBalance:\n      type: object\n      properties:\n        name:\n          description: Name of the leave type.  \n          type: string\n          example: Holiday\n        leaveTypeID:\n          description: The Xero identifier for leave type\n          type: string\n          format: uuid\n        balance:\n          description: The employees current balance for the corresponding leave type.\n          type: number\n          format: double\n        typeOfUnits:\n          description: The type of the units of the leave.\n          type: string\n          example: hours\n    EmployeeStatutoryLeaveBalanceObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveBalance:\n          $ref: '#/components/schemas/EmployeeStatutoryLeaveBalance'\n    EmployeeStatutoryLeaveBalance:\n      type: object\n      properties:\n        leaveType: \n          description: The type of statutory leave\n          type: string\n          enum:\n          - Sick\n          - Adoption\n          - Maternity\n          - Paternity\n          - Sharedparental\n        balanceRemaining:\n          description: The balance remaining for the corresponding leave type as of specified date.\n          type: number\n          format: double\n        units:\n          description: The units will be \"Hours\"\n          type: string\n          enum:\n          - Hours\n    EmployeeStatutoryLeavesSummaries:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutoryLeaves:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeStatutoryLeaveSummary'\n    EmployeeStatutoryLeaveSummary:\n      type: object\n      properties:\n        statutoryLeaveID:\n          description: The unique identifier (guid) of a statutory leave.  \n          type: string\n          format: uuid\n        employeeID:\n          description: The unique identifier (guid) of the employee  \n          type: string\n          format: uuid\n        type:\n          description: The category of statutory leave\n          type: string\n          enum:\n            - Sick\n            - Adoption\n            - Maternity\n            - Paternity\n            - Sharedparental\n        startDate:\n          description: The date when the leave starts  \n          type: string\n          format: date\n          x-is-date: true \n        endDate: \n          description: The date when the leave ends  \n          type: string\n          format: date\n          x-is-date: true \n        isEntitled:\n          description: Whether the leave was entitled to receive payment  \n          type: boolean\n        status:\n          description: The status of the leave\n          type: string\n          enum:\n            - Pending\n            - In-Progress\n            - Completed\n    EmployeeStatutorySickLeaves:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutorySickLeave:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeStatutorySickLeave'\n    EmployeeStatutorySickLeaveObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutorySickLeave:\n          $ref: '#/components/schemas/EmployeeStatutorySickLeave'\n    EmployeeStatutorySickLeave:\n      type: object\n      required:\n        - employeeID\n        - startDate\n        - endDate\n        - workPattern\n        - leaveTypeID\n        - isPregnancyRelated\n        - sufficientNotice\n      properties:\n        statutoryLeaveID:\n          description: The unique identifier (guid) of a statutory leave  \n          type: string\n          format: uuid\n        employeeID:\n          description: The unique identifier (guid) of the employee  \n          type: string\n          format: uuid\n        leaveTypeID:\n          description: The unique identifier (guid) of the \"Statutory Sick Leave (non-pensionable)\" pay item  \n          type: string\n          format: uuid\n        startDate:\n          description: The date when the leave starts  \n          type: string\n          format: date\n          x-is-date: true \n        endDate:\n          description: The date when the leave ends  \n          type: string\n          format: date\n          x-is-date: true \n        type:\n          description: the type of statutory leave\n          type: string\n          example: \"Sick\"\n        status:\n          description: the type of statutory leave\n          type: string\n          example: \"Pending\"\n        workPattern:\n          description: The days of the work week the employee is scheduled to work at the time the leave is taken  \n          type: array\n          items:\n            type: string\n        isPregnancyRelated:\n          description: Whether the sick leave was pregnancy related  \n          type: boolean\n        sufficientNotice:\n          description: Whether the employee provided sufficent notice and documentation as required by the employer supporting the sick leave request  \n          type: boolean\n        isEntitled:\n          description: Whether the leave was entitled to receive payment  \n          type: boolean\n        entitlementWeeksRequested:\n          description: The amount of requested time (in weeks)  \n          type: number\n          format: double\n        entitlementWeeksQualified:\n          description: The amount of statutory sick leave time off (in weeks) that is available to take at the time the leave was requested  \n          type: number\n          format: double\n        entitlementWeeksRemaining:\n          description: A calculated amount of time (in weeks) that remains for the statutory sick leave period  \n          type: number\n          format: double\n        overlapsWithOtherLeave:\n          description: Whether another leave (Paternity, Shared Parental specifically) occurs during the requested leave's period. While this is allowed it could affect payment amounts\n          type: boolean\n        entitlementFailureReasons:\n          description: If the leave requested was considered \"not entitled\", the reasons why are listed here. \n          type: array\n          items:\n            type: string\n            enum:\n            - UnableToCalculateAwe\n            - AweLowerThanLel\n            - NotQualifiedInPreviousPiw\n            - ExceededMaximumEntitlementWeeksOfSsp\n            - ExceededMaximumDurationOfPiw\n            - SufficientNoticeNotGiven\n    EmployeeLeaveTypes:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeLeaveType'\n    EmployeeLeaveTypeObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveType:\n          $ref: '#/components/schemas/EmployeeLeaveType'\n    EmployeeLeaveType:\n      type: object\n      required:\n        - leaveTypeID\n        - scheduleOfAccrual\n      properties:\n        leaveTypeID:\n          description: The Xero identifier for leave type\n          type: string\n          format: uuid\n        scheduleOfAccrual:\n          description: The schedule of accrual\n          type: string\n          enum:\n            - BeginningOfCalendarYear\n            - OnAnniversaryDate\n            - EachPayPeriod  \n            - OnHourWorked\n        hoursAccruedAnnually:\n          description: The number of hours accrued for the leave annually. This is 0 when the scheduleOfAccrual chosen is \"OnHourWorked\"\n          type: number\n          format: double\n        maximumToAccrue:\n          description: The maximum number of hours that can be accrued for the leave  \n          type: number\n          format: double\n        openingBalance:\n          description: The initial number of hours assigned when the leave was added to the employee  \n          type: number\n          format: double\n        rateAccruedHourly:\n          description: The number of hours added to the leave balance for every hour worked by the employee. This is normally 0, unless the scheduleOfAccrual chosen is \"OnHourWorked\"\n          type: number\n          format: double\n    EmployeePayTemplateObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payTemplate:\n          $ref: '#/components/schemas/EmployeePayTemplate'\n    EmployeePayTemplates:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        earningTemplates:\n          $ref: '#/components/schemas/EarningsTemplates'\n    EmployeePayTemplate:\n      type: object\n      required:\n        - EarningTemplates\n      properties:\n        employeeID:\n          description: Unique identifier for the employee\n          type: string\n          format: uuid\n        earningTemplates:\n          $ref: '#/components/schemas/EarningsTemplates'\n    EarningsTemplates:\n      type: array\n      items:\n        $ref: '#/components/schemas/EarningsTemplate'\n    EarningsTemplateObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        earningTemplate:\n          $ref: '#/components/schemas/EarningsTemplate'\n    EarningsTemplate:\n      type: object\n      properties:\n        payTemplateEarningID:\n          description: The Xero identifier for the earnings template\n          type: string\n          format: uuid\n        ratePerUnit:\n          description: The rate per unit  \n          type: number\n          format: double\n        numberOfUnits:\n          description: The rate per unit  \n          type: number\n          format: double\n        fixedAmount:\n          description: The fixed amount per period  \n          type: number\n          format: double\n        earningsRateID:\n          description: The corresponding earnings rate identifier  \n          type: string\n          format: uuid\n        name:\n          description: The read-only name of the Earning Template.\n          type: string\n    Benefits:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        benefits:\n          type: array\n          items:\n            $ref: '#/components/schemas/Benefit'\n    BenefitObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        benefit:\n          $ref: '#/components/schemas/Benefit'\n    Benefit:\n      type: object\n      required:\n        - name\n        - category\n        - liabilityAccountId\n        - expenseAccountId\n        - calculationType\n        - percentage\n        - standardAmount\n      properties:\n        id:\n          description: unique identifier in Xero\n          type: string\n          format: uuid\n        name:\n          description: Name of the employer pension\n          type: string\n        category:\n          description: Category type of the employer pension\n          type: string\n          enum:\n          - StakeholderPension\n          - Other\n        liabilityAccountId:\n          description: Xero identifier for Liability Account\n          type: string\n          format: uuid\n        expenseAccountId:\n          description: Xero identifier for Expense Account\n          type: string\n          format: uuid\n        standardAmount:\n          description: Standard amount of the employer pension\n          type: number\n          format: double\n        percentage:\n          description: Percentage of gross of the employer pension\n          type: number\n          format: double\n        calculationType:\n          description: Calculation Type of the employer pension (FixedAmount or PercentageOfGross).\n          type: string\n          enum:\n            - FixedAmount\n            - PercentageOfGross\n        currentRecord:\n          description: Identifier of a record is active or not.\n          type: boolean\n        subjectToNIC:\n          description: Identifier of subject To NIC\n          type: boolean\n        subjectToPension:\n          description: Identifier of subject To pension\n          type: boolean\n        subjectToTax:\n          description: Identifier of subject To Tax\n          type: boolean\n        isCalculatingOnQualifyingEarnings:\n          description: Identifier of calculating on qualifying earnings\n          type: boolean\n        showBalanceToEmployee:\n          description: display the balance to employee\n          type: boolean\n    Deductions:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        deductions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Deduction'\n    DeductionObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        deduction:\n          $ref: '#/components/schemas/Deduction'\n    Deduction:\n      type: object\n      required:\n        - deductionName\n        - deductionCategory\n        - liabilityAccountId\n        - calculationType\n      properties:\n        deductionId:\n          description: The Xero identifier for Deduction\n          type: string\n          format: uuid\n        deductionName:\n          description: Name of the deduction\n          type: string\n        deductionCategory:\n          description: Deduction Category type\n          type: string\n          enum:\n            - StakeholderPension\n            - StakeholderPensionPostTax\n            - ChildCareVoucher\n            - SalarySacrifice\n            - UkOther\n        liabilityAccountId:\n          description: Xero identifier for Liability Account\n          type: string\n          format: uuid\n        currentRecord:\n          description: Identifier of a record is active or not.\n          type: boolean\n        standardAmount:\n          description: Standard amount of the deduction\n          type: number\n          format: double\n        reducesSuperLiability:\n          description: Identifier of reduces super liability\n          type: boolean\n        reducesTaxLiability:\n          description: Identifier of reduces tax liability\n          type: boolean\n        calculationType:\n          description: determine the calculation type whether fixed amount or percentage of gross\n          type: string\n          enum:\n            - FixedAmount\n            - PercentageOfGross\n        percentage:\n          description: Percentage of gross\n          type: number\n          format: double\n        subjectToNIC:\n          description: Identifier of subject To NIC\n          type: boolean\n        subjectToTax:\n          description: Identifier of subject To Tax\n          type: boolean\n        isReducedByBasicRate:\n          description: Identifier of reduced by basic rate applicable or not\n          type: boolean\n        applyToPensionCalculations:\n          description: Identifier for apply to pension calculations\n          type: boolean\n        isCalculatingOnQualifyingEarnings:\n          description: Identifier of calculating on qualifying earnings\n          type: boolean\n        isPension:\n          description: Identifier of applicable for pension or not\n          type: boolean\n    StatutoryDeductions:\n      type: array\n      items:\n        $ref: '#/components/schemas/StatutoryDeduction'\n    StatutoryDeduction:\n      type: object\n      properties:\n        id:\n          description: The Xero identifier for earnings order\n          type: string\n          format: uuid\n        name:\n          description: Name of the earnings order\n          type: string\n        statutoryDeductionCategory:\n          $ref: '#/components/schemas/StatutoryDeductionCategory'\n        liabilityAccountId:\n          description: Xero identifier for Liability Account\n          type: string\n          format: uuid\n        currentRecord:\n          description: Identifier of a record is active or not.\n          type: boolean\n    StatutoryDeductionCategory:\n      description: Statutory Deduction Category\n      type: string\n      enum:\n      - AdditionalStudentLoan\n      - ChildSupport\n      - CourtFines\n      - Creditor\n      - FederalLevy\n      - InlandRevenueArrears\n      - KiwiSaver\n      - MsdRepayments\n      - NonPriorityOrder\n      - PriorityOrder\n      - TableBased\n      - StudentLoan           \n      - VoluntaryStudentLoan\n      - USChildSupport\n    EarningsOrders:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutoryDeductions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EarningsOrder'\n    EarningsOrderObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        statutoryDeduction:\n          $ref: '#/components/schemas/EarningsOrder'\n    EarningsOrder:\n      type: object\n      required:\n        - name\n      properties:\n        id:\n          description: Xero unique identifier for an earning rate\n          type: string\n          format: uuid\n        name:\n          description: Name of the earning order\n          type: string\n        statutoryDeductionCategory:\n          $ref: '#/components/schemas/StatutoryDeductionCategory'\n        liabilityAccountId:\n          description: Xero identifier for Liability Account\n          type: string\n          format: uuid\n        currentRecord:\n          description: Identifier of a record is active or not.\n          type: boolean\n          default: true\n    EarningsRates:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        earningsRates:\n          type: array\n          items:\n            $ref: '#/components/schemas/EarningsRate'\n    EarningsRateObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        earningsRate:\n          $ref: '#/components/schemas/EarningsRate'\n    EarningsRate:\n      type: object\n      required:\n        - name\n        - earningsType\n        - rateType\n        - typeOfUnits\n        - expenseAccountID\n      properties:\n        earningsRateID:\n          description: Xero unique identifier for an earning rate\n          type: string\n          format: uuid\n        name:\n          description: Name of the earning rate\n          type: string\n        earningsType:\n          description: Indicates how an employee will be paid when taking this type of earning\n          type: string\n          enum:\n            - OvertimeEarnings\n            - Allowance\n            - RegularEarnings\n            - Commission\n            - Bonus\n            - Tips(Direct)\n            - Tips(Non-Direct)\n            - Backpay\n            - OtherEarnings\n            - LumpSum\n        rateType:\n          description: Indicates the type of the earning rate\n          type: string\n          enum:\n            - RatePerUnit\n            - MultipleOfOrdinaryEarningsRate\n            - FixedAmount\n        typeOfUnits:\n          description: The type of units used to record earnings\n          type: string\n        currentRecord:\n          description: Indicates whether an earning type is active\n          type: boolean\n        expenseAccountID:\n          description: The account that will be used for the earnings rate\n          type: string\n          format: uuid\n        ratePerUnit:\n          description: Default rate per unit (optional). Only applicable if RateType is RatePerUnit\n          type: number\n          format: double\n        multipleOfOrdinaryEarningsRate:\n          description: This is the multiplier used to calculate the rate per unit, based on the employee’s ordinary earnings rate. For example, for time and a half enter 1.5. Only applicable if RateType is MultipleOfOrdinaryEarningsRate\n          type: number\n          format: double\n        fixedAmount:\n          description: Optional Fixed Rate Amount. Applicable for FixedAmount Rate\n          type: number\n          format: double\n    LeaveTypes:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/LeaveType'\n    LeaveTypeObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        leaveType:\n          $ref: '#/components/schemas/LeaveType'\n    LeaveType:\n      type: object\n      required:\n        - name\n        - isPaidLeave\n        - showOnPayslip\n      properties:\n        leaveID:\n          description: Xero unique identifier for the leave\n          type: string\n          format: uuid\n        leaveTypeID:\n          description: Xero unique identifier for the leave type\n          type: string\n          format: uuid\n        name:\n          description: Name of the leave type\n          type: string\n        isPaidLeave:\n          description: Indicate that an employee will be paid when taking this type of leave\n          type: boolean\n        showOnPayslip:\n          description: Indicate that a balance for this leave type to be shown on the employee’s payslips\n          type: boolean\n        updatedDateUTC:\n          description: UTC timestamp of last update to the leave type note\n          type: string\n          format: date-time\n          x-is-datetime: true \n        isActive:\n          description: Shows whether the leave type is active or not\n          type: boolean\n        isStatutoryLeave:\n          description: Shows whether the leave type is a statutory leave type or not\n          type: boolean\n    Reimbursements:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        reimbursements:\n          type: array\n          items:\n            $ref: '#/components/schemas/Reimbursement'\n    ReimbursementObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        reimbursement:\n          $ref: '#/components/schemas/Reimbursement'\n    Reimbursement:\n      type: object\n      required:\n        - name\n        - accountID\n      properties:\n        reimbursementID:\n          description: Xero unique identifier for a reimbursement\n          type: string\n          format: uuid\n        name:\n          description: Name of the reimbursement\n          type: string\n        accountID:\n          description: Xero unique identifier for the account used for the reimbursement\n          type: string\n          format: uuid\n        currentRecord:\n          description: Indicates that whether the reimbursement is active\n          type: boolean\n    Timesheets:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        timesheets:\n          type: array\n          items:\n            $ref: '#/components/schemas/Timesheet'\n    TimesheetObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        timesheet:\n          $ref: '#/components/schemas/Timesheet'\n    Timesheet:\n      type: object\n      required:\n        - payrollCalendarID\n        - employeeID\n        - startDate\n        - endDate\n      properties:\n        timesheetID:\n          description: The Xero identifier for a Timesheet\n          type: string\n          format: uuid \n        payrollCalendarID:\n          description: The Xero identifier for the Payroll Calandar that the Timesheet applies to\n          type: string\n          format: uuid \n        employeeID:\n          description: The Xero identifier for the Employee that the Timesheet is for\n          type: string\n          format: uuid \n        startDate:\n          description: The Start Date of the Timesheet period (YYYY-MM-DD)\n          type: string\n          format: date \n          x-is-date: true \n        endDate:\n          description: The End Date of the Timesheet period (YYYY-MM-DD)\n          type: string\n          format: date \n          x-is-date: true \n        status:\n          description: Status of the timesheet\n          type: string\n          enum:\n            - Draft\n            - Approved\n            - Completed\n        totalHours:\n          description: The Total Hours of the Timesheet\n          type: number\n          format: double \n        updatedDateUTC:\n          description: The UTC date time that the Timesheet was last updated\n          type: string\n          format: date-time\n          x-is-datetime: true\n        timesheetLines:\n          $ref: '#/components/schemas/TimesheetLines'\n    TimesheetLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/TimesheetLine'\n    TimesheetLineObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        timesheetLine:\n          $ref: '#/components/schemas/TimesheetLine'\n    TimesheetLine:\n      type: object\n      required:\n        - date\n        - earningsRateID\n        - numberOfUnits\n      properties:\n        timesheetLineID:\n          description: The Xero identifier for a Timesheet Line\n          type: string\n          format: uuid \n        date:\n          description: The Date that this Timesheet Line is for (YYYY-MM-DD)\n          type: string\n          format: date \n          x-is-date: true \n        earningsRateID:\n          description: The Xero identifier for the Earnings Rate that the Timesheet is for\n          type: string\n          format: uuid \n        trackingItemID:\n          description: The Xero identifier for the Tracking Item that the Timesheet is for\n          type: string\n          format: uuid \n        numberOfUnits:\n          description: The Number of Units of the Timesheet Line\n          type: number\n          format: double \n    PayRunCalendars:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payRunCalendars:\n          type: array\n          items:\n            $ref: '#/components/schemas/PayRunCalendar'\n    PayRunCalendarObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payRunCalendar:\n          $ref: '#/components/schemas/PayRunCalendar'\n    PayRunCalendar:\n      type: object\n      required:\n        - name\n        - calendarType\n        - periodStartDate\n        - paymentDate\n      properties:\n        payrollCalendarID:\n          description: Xero unique identifier for the payroll calendar\n          type: string\n          format: uuid \n        name:\n          description: Name of the calendar\n          type: string\n        calendarType:\n          description: Type of the calendar\n          type: string\n          enum:\n            - Weekly\n            - Fortnightly\n            - FourWeekly\n            - Monthly\n            - Annual\n            - Quarterly\n        periodStartDate:\n          description: Period start date of the calendar\n          type: string\n          format: date\n          x-is-date: true \n        periodEndDate:\n          description: Period end date of the calendar\n          type: string\n          format: date\n          x-is-date: true \n        paymentDate:\n          description: Payment date of the calendar\n          type: string\n          format: date\n          x-is-date: true \n        updatedDateUTC:\n          description: UTC timestamp of the last update to the pay run calendar\n          type: string\n          format: date-time\n          x-is-datetime: true \n    PaymentMethodObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        paymentMethod:\n          $ref: '#/components/schemas/PaymentMethod'\n    PaymentMethod:\n      type: object\n      required:\n        - paymentMethod\n      properties:\n        paymentMethod:\n          description: The payment method code\n          type: string\n          enum:\n            - Cheque\n            - Electronically\n            - Manual\n        bankAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/BankAccount'\n    SalaryAndWages:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        salaryAndWages:\n          type: array\n          items:\n            $ref: '#/components/schemas/SalaryAndWage'\n    SalaryAndWageObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        salaryAndWages:\n          $ref: '#/components/schemas/SalaryAndWage'\n    SalaryAndWage:\n      type: object\n      required:\n        - earningsRateID\n        - numberOfUnitsPerWeek\n        - ratePerUnit\n        - numberOfUnitsPerDay\n        - effectiveFrom\n        - annualSalary\n        - status\n        - paymentType\n      properties:\n        salaryAndWagesID:\n          description: Xero unique identifier for a salary and wages record\n          type: string\n          format: uuid \n        earningsRateID:\n          description: Xero unique identifier for an earnings rate\n          type: string\n          format: uuid \n        numberOfUnitsPerWeek:\n          description: The Number of Units per week for the corresponding salary and wages\n          type: number\n          format: double \n        ratePerUnit:\n          description: The rate of each unit for the corresponding salary and wages\n          type: number\n          format: double \n        numberOfUnitsPerDay:\n          description: The Number of Units per day for the corresponding salary and wages\n          type: number\n          format: double \n        effectiveFrom:\n          description: The effective date of the corresponding salary and wages\n          type: string\n          format: date \n          x-is-date: true \n        annualSalary:\n          description: The annual salary\n          type: number\n          format: double \n        status:\n          description: The current status of the corresponding salary and wages\n          type: string\n          enum:\n            - Active\n            - Pending\n        paymentType:\n          description: The type of the payment of the corresponding salary and wages\n          type: string\n          enum:\n            - Salary\n    PayRuns:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payRuns:\n          type: array\n          items:\n            $ref: '#/components/schemas/PayRun'\n    PayRunObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        payRun:\n          $ref: '#/components/schemas/PayRun'\n    PayRun:\n      type: object\n      properties:\n        payRunID:\n          description: Xero unique identifier for the pay run\n          type: string\n          format: uuid \n        payrollCalendarID:\n          description: Xero unique identifier for the payroll calendar\n          type: string\n          format: uuid \n        periodStartDate:\n          description: Period start date of the payroll calendar\n          type: string\n          format: date \n          x-is-date: true\n        periodEndDate:\n          description: Period end date of the payroll calendar\n          type: string\n          format: date \n          x-is-date: true \n        paymentDate:\n          description: Payment date of the pay run\n          type: string\n          format: date \n          x-is-date: true \n        totalCost:\n          description: Total cost of the pay run\n          type: number\n          format: double \n        totalPay:\n          description: Total pay of the pay run\n          type: number\n          format: double \n        payRunStatus:\n          description: Pay run status\n          type: string\n          enum:\n          - Draft\n          - Posted\n        payRunType:\n          description: Pay run type\n          type: string\n          enum:\n          - Scheduled\n          - Unscheduled\n          - EarlierYearUpdate\n        calendarType:\n          description: Calendar type of the pay run\n          type: string\n          enum:\n          - Weekly\n          - Fortnightly\n          - FourWeekly\n          - Monthly\n          - Annual\n          - Quarterly\n        postedDateTime:\n          description: Posted date time of the pay run\n          type: string\n          format: date \n          x-is-date: true \n        paySlips:\n          type: array\n          items:\n            $ref: '#/components/schemas/Payslip'\n    PayslipObject:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        paySlip:\n          $ref: '#/components/schemas/Payslip'\n    Payslips:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        paySlips:\n          type: array\n          items:\n            $ref: '#/components/schemas/Payslip'\n    Payslip:\n      type: object\n      properties:\n        paySlipID:\n          description: The Xero identifier for a Payslip\n          type: string\n          format: uuid \n        employeeID:\n          description: The Xero identifier for payroll employee\n          type: string\n          format: uuid \n        payRunID:\n          description: The Xero identifier for the associated payrun\n          type: string\n          format: uuid \n        lastEdited:\n          description: The date payslip was last updated\n          type: string\n          format: date \n          x-is-datetime: true \n        firstName:\n          description: Employee first name\n          type: string\n        lastName:\n          description: Employee last name\n          type: string\n        totalEarnings:\n          description: Total earnings before any deductions. Same as gross earnings for UK.\n          type: number\n          format: double \n        grossEarnings:\n          description: Total earnings before any deductions. Same as total earnings for UK.\n          type: number\n          format: double \n        totalPay:\n          description: The employee net pay\n          type: number\n          format: double \n        totalEmployerTaxes:\n          description: The employer's tax obligation\n          type: number\n          format: double \n        totalEmployeeTaxes:\n          description: The part of an employee's earnings that is deducted for tax purposes\n          type: number\n          format: double \n        totalDeductions:\n          description: Total amount subtracted from an employee's earnings to reach total pay\n          type: number\n          format: double \n        totalReimbursements:\n          description: Total reimbursements are nontaxable payments to an employee used to repay out-of-pocket expenses when the person incurs those expenses through employment\n          type: number\n          format: double \n        totalCourtOrders:\n          description: Total amounts required by law to subtract from the employee's earnings\n          type: number\n          format: double \n        totalBenefits:\n          description: Benefits (also called fringe benefits, perquisites or perks) are various non-earnings compensations provided to employees in addition to their normal earnings or salaries\n          type: number\n          format: double \n        bacsHash:\n          description: BACS Service User Number\n          type: string \n        paymentMethod:\n          description: The payment method code\n          type: string\n          enum:\n            - Cheque\n            - Electronically\n            - Manual\n        earningsLines:\n          $ref: '#/components/schemas/EarningsLines'\n        leaveEarningsLines:\n          $ref: '#/components/schemas/LeaveEarningsLines'\n        timesheetEarningsLines:\n          $ref: '#/components/schemas/TimesheetEarningsLines'\n        deductionLines:\n          $ref: '#/components/schemas/DeductionLines'\n        reimbursementLines:\n          $ref: '#/components/schemas/ReimbursementLines'\n        leaveAccrualLines:\n          $ref: '#/components/schemas/LeaveAccrualLines'\n        benefitLines:\n          $ref: '#/components/schemas/BenefitLines'\n        paymentLines:\n          $ref: '#/components/schemas/PaymentLines'\n        employeeTaxLines:\n          $ref: '#/components/schemas/TaxLines'\n        courtOrderLines:\n          $ref: '#/components/schemas/CourtOrderLines'\n    EarningsLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/EarningsLine'\n    EarningsLine:\n      type: object\n      properties:\n        earningsLineID:\n          description: Xero identifier for payroll earnings line\n          type: string\n          format: uuid\n        earningsRateID:\n          description: Xero identifier for payroll earnings rate\n          type: string\n          format: uuid \n        displayName:\n          description: name of earnings rate for display in UI\n          type: string\n        ratePerUnit:\n          description: Rate per unit for earnings line\n          type: number\n          format: double \n        numberOfUnits:\n          description: Earnings number of units\n          type: number\n          format: double \n        fixedAmount:\n          description: Earnings fixed amount. Only applicable if the EarningsRate RateType is Fixed\n          type: number\n          format: double \n        amount:\n          description: The amount of the earnings line.\n          type: number\n          format: double \n        isLinkedToTimesheet:\n          description: Identifies if the earnings is taken from the timesheet. False for earnings line\n          type: boolean\n        isAverageDailyPayRate:\n          description: Identifies if the earnings is using an average daily pay rate\n          type: boolean\n    LeaveEarningsLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/LeaveEarningsLine'\n    LeaveEarningsLine:\n      type: object\n      properties:\n        earningsRateID:\n          description: Xero identifier for payroll leave earnings rate\n          type: string\n          format: uuid \n        ratePerUnit:\n          description: Rate per unit for leave earnings line\n          type: number\n          format: double \n        numberOfUnits:\n          description: Leave earnings number of units\n          type: number\n          format: double \n        fixedAmount:\n          description: Leave earnings fixed amount. Only applicable if the EarningsRate RateType is Fixed\n          type: number\n          format: double \n        amount:\n          description: The amount of the earnings line.\n          type: number\n          format: double \n        isLinkedToTimesheet:\n          description: Identifies if the leave earnings is taken from the timesheet. False for leave earnings line\n          type: boolean\n    TimesheetEarningsLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/TimesheetEarningsLine'\n    TimesheetEarningsLine:\n      type: object\n      properties:\n        earningsRateID:\n          description: Xero identifier for payroll timesheet earnings rate\n          type: string\n          format: uuid \n        ratePerUnit:\n          description: Rate per unit for timesheet earnings line\n          type: number\n          format: double \n        numberOfUnits:\n          description: Timesheet earnings number of units\n          type: number\n          format: double \n        fixedAmount:\n          description: Timesheet earnings fixed amount. Only applicable if the EarningsRate RateType is Fixed\n          type: number\n          format: double \n        amount:\n          description: The amount of the timesheet earnings line.\n          type: number\n          format: double \n        isLinkedToTimesheet:\n          description: Identifies if the timesheet earnings is taken from the timesheet. False for leave earnings line\n          type: boolean\n    DeductionLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeductionLine'\n    DeductionLine:\n      type: object\n      properties:\n        deductionTypeID:\n          description: Xero identifier for payroll deduction\n          type: string\n          format: uuid \n        amount:\n          description: The amount of the deduction line\n          type: number\n          format: double \n        subjectToTax:\n          description: Identifies if the deduction is subject to tax\n          type: boolean\n        percentage:\n          description: Deduction rate percentage\n          type: number\n          format: double \n    ReimbursementLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReimbursementLine'\n    ReimbursementLine:\n      type: object\n      properties:\n        reimbursementTypeID:\n          description: Xero identifier for payroll reimbursement\n          type: string\n          format: uuid\n        description:\n          description: Reimbursement line description\n          type: string\n        amount:\n          description: Reimbursement amount\n          type: number\n          format: double\n    LeaveAccrualLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/LeaveAccrualLine'\n    LeaveAccrualLine:\n      type: object\n      properties:\n        leaveTypeID:\n          description: Xero identifier for the Leave type\n          type: string\n          format: uuid \n        numberOfUnits:\n          description: Leave accrual number of units\n          type: number\n          format: double \n    BenefitLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/BenefitLine'\n    BenefitLine:\n      type: object\n      properties:\n        benefitTypeID:\n          description: Xero identifier for payroll benefit type\n          type: string\n          format: uuid \n        displayName:\n          description: Benefit display name\n          type: string \n        amount:\n          description: The amount of the benefit line.\n          type: number\n          format: double \n        fixedAmount:\n          description: Benefit fixed amount\n          type: number\n          format: double \n        percentage:\n          description: Benefit rate percentage\n          type: number\n          format: double \n    PaymentLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/PaymentLine'\n    PaymentLine:\n      type: object\n      properties:\n        paymentLineID:\n          description: Xero identifier for payroll payment line\n          type: string\n          format: uuid \n        amount:\n          description: The amount of the payment line\n          type: number\n          format: double \n        accountNumber:\n          description: The account number\n          type: string\n        sortCode:\n          description: The account sort code\n          type: string \n        accountName:\n          description: The account name\n          type: string\n    TaxLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/TaxLine'\n    TaxLine:\n      type: object\n      properties:\n        taxLineID:\n          description: Xero identifier for payroll tax line\n          type: string\n          format: uuid\n        description:\n          description: Tax line description\n          type: string\n        isEmployerTax:\n          description: Identifies if the amount is paid for by the employee or employer. True if employer pays the tax\n          type: boolean\n        amount:\n          description: The amount of the tax line\n          type: number\n          format: double \n        globalTaxTypeID: \n          description: Tax type ID\n          type: string\n        manualAdjustment: \n          description: Identifies if the tax line is a manual adjustment\n          type: boolean\n    CourtOrderLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/CourtOrderLine'\n    CourtOrderLine:\n      type: object\n      properties:\n        courtOrderTypeID:\n          description: Xero identifier for payroll court order type\n          type: string\n          format: uuid \n        amount:\n          description: Amount\n          type: number\n          format: double \n    Settings:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        settings:\n          $ref: '#/components/schemas/Accounts'\n    Accounts:\n      type: object\n      properties:\n        accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Account'\n    Account:\n      type: object\n      properties:\n        accountID:\n          description: The Xero identifier for Settings.\n          type: string\n          format: uuid \n        type:\n          description: The assigned AccountType\n          type: string\n          enum:\n          - BANK\n          - EMPLOYERSNIC\n          - NICLIABILITY\n          - PAYEECONTRIBUTION\n          - PAYELIABILITY\n          - WAGESPAYABLE\n          - WAGESEXPENSE\n        code:\n          description: A unique 3 digit number for each Account\n          type: string\n        name:\n          description: Name of the Account.\n          type: string\n    Address:\n      type: object\n      required:\n        - addressLine1\n        - city\n        - postCode\n      properties:\n        addressLine1:\n          description: Address line 1 for employee home address\n          type: string\n          example: 123 Main St\n        addressLine2:\n          description: Address line 2 for employee home address\n          type: string\n          example: Apt 4\n        city:\n          description: Suburb for employee home address\n          type: string\n          example: Fulham\n        postCode:\n          description: PostCode for employee home address\n          type: string\n          example: SW6 6EY\n        countryName:\n          description: Country of HomeAddress\n          type: string\n          example: United Kingdom\n    BankAccounts:\n      type: array\n      items:\n        $ref: '#/components/schemas/BankAccount'\n    BankAccount:\n      type: object\n      required:\n        - accountName\n        - accountNumber\n        - sortCode\n      properties:\n        accountName:\n          description: Bank account name (max length = 32)\n          type: string\n        accountNumber:\n          description: Bank account number (digits only; max length = 8)\n          type: string\n        sortCode:\n          description: Bank account sort code (6 digits)\n          type: string\n    TrackingCategories:\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        problem:\n          $ref: '#/components/schemas/Problem'\n        trackingCategories:\n          $ref: '#/components/schemas/TrackingCategory'\n    TrackingCategory:\n      type: object\n      properties:\n        employeeGroupsTrackingCategoryID:\n          description: The Xero identifier for Employee groups tracking category.\n          type: string\n          format: uuid\n        timesheetTrackingCategoryID:\n          description: The Xero identifier for Timesheet tracking category.\n          type: string\n          format: uuid"
		}
	},
	"Error": "buildIR: make ir: path \"/Settings\": get: security: security \"OAuth2\" (index 0): flow \"authorizationCode\": unknown scope \"settings.payslip\"",
	"NotImplemented": [
		"oauth2 security"
	]
}