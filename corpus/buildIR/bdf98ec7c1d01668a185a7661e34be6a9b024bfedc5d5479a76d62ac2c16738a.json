{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "internal/connector/internal/api/private/api/openapi.yaml",
			"byteSize": 30528,
			"content": "openapi: 3.0.0\ninfo:\n  description: Connector Service Fleet Manager apis that are used by internal services.\n  title: Connector Service Fleet Manager Private APIs\n  version: 0.0.3\nservers:\n- description: Main (production) server\n  url: https://api.openshift.com\n- description: Staging server\n  url: https://api.stage.openshift.com\n- description: localhost\n  url: http://localhost:8000\n- description: current domain\n  url: /\ntags:\n- description: only accessible by connector fleet shard agents\n  name: Connector Clusters Agent\npaths:\n  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/status:\n    put:\n      description: Update the status of a connector cluster\n      operationId: updateKafkaConnectorClusterStatus\n      parameters:\n      - description: The id of the connector cluster\n        explode: false\n        in: path\n        name: connector_cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectorClusterStatus'\n        description: Cluster status update data\n        required: true\n      responses:\n        \"200\":\n          description: Cluster status is updated\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n      security:\n      - Bearer: []\n      summary: Update the status of a connector cluster\n      tags:\n      - Connector Clusters Agent\n  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments:\n    get:\n      description: Returns a list of connector deployments assigned to the cluster.\n      operationId: getClusterAsignedConnectorDeployments\n      parameters:\n      - description: The id of the connector cluster\n        explode: false\n        in: path\n        name: connector_cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page index\n        examples:\n          page:\n            value: \"1\"\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n      - description: Number of items in each page\n        examples:\n          size:\n            value: \"100\"\n        in: query\n        name: size\n        required: false\n        schema:\n          type: string\n      - description: filters the connectors to those with a version greater than the\n          given value\n        explode: true\n        in: query\n        name: gt_version\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      - description: watch for changes to the resources and return them as a stream\n          of watch events. Specify gt_version to specify the starting point.\n        explode: true\n        in: query\n        name: watch\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorDeploymentList'\n            application/json;stream=watch:\n              schema:\n                $ref: '#/components/schemas/ConnectorDeploymentWatchEvent'\n          description: A list of connector\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of connector deployments assigned to the cluster.\n      tags:\n      - Connector Clusters Agent\n  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}:\n    get:\n      description: Returns a list of connector deployments assigned to the cluster.\n      operationId: getClusterAsignedConnectorDeploymentById\n      parameters:\n      - description: The id of the connector cluster\n        explode: false\n        in: path\n        name: connector_cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The id of the deployment\n        explode: false\n        in: path\n        name: deployment_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorDeployment'\n          description: A connector deployment\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"410\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: deployment has been deleted\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of connector deployments assigned to the cluster.\n      tags:\n      - Connector Clusters Agent\n  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}/status:\n    put:\n      description: update the connector deployment status\n      operationId: updateConnectorDeploymentStatus\n      parameters:\n      - description: The id of the connector cluster\n        explode: false\n        in: path\n        name: connector_cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The id of the deployment\n        explode: false\n        in: path\n        name: deployment_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectorDeploymentStatus'\n        required: true\n      responses:\n        \"200\":\n          description: Cluster status is updated\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n        \"410\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: deployment has been deleted\n      security:\n      - Bearer: []\n      summary: update the connector deployment status\n      tags:\n      - Connector Clusters Agent\n  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces:\n    get:\n      description: Returns all connector namespaces assigned to the cluster.\n      operationId: getClusterAsignedConnectorNamespaces\n      parameters:\n      - description: The id of the connector cluster\n        explode: false\n        in: path\n        name: connector_cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page index\n        examples:\n          page:\n            value: \"1\"\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n      - description: Number of items in each page\n        examples:\n          size:\n            value: \"100\"\n        in: query\n        name: size\n        required: false\n        schema:\n          type: string\n      - description: filters the connectors to those with a version greater than the\n          given value\n        explode: true\n        in: query\n        name: gt_version\n        required: false\n        schema:\n          format: int64\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorNamespaceDeploymentList'\n          description: All connector namespaces in cluster\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"410\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: cluster has been deleted\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns all connector namespaces assigned to the cluster.\n      tags:\n      - Connector Clusters Agent\n  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces/{namespace_id}:\n    get:\n      description: Returns a connector namespace assigned to the cluster.\n      operationId: getClusterAsignedConnectorNamespaceById\n      parameters:\n      - description: The id of the connector cluster\n        explode: false\n        in: path\n        name: connector_cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The id of the namespace\n        explode: false\n        in: path\n        name: namespace_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorNamespaceDeployment'\n          description: A connector namespace\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"410\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: namespace has been deleted\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a connector namespace assigned to the cluster.\n      tags:\n      - Connector Clusters Agent\n  /api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces/{namespace_id}/status:\n    put:\n      description: update the connector namespace status\n      operationId: updateConnectorNamespaceStatus\n      parameters:\n      - description: The id of the connector cluster\n        explode: false\n        in: path\n        name: connector_cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The id of the namespace\n        explode: false\n        in: path\n        name: namespace_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectorNamespaceDeploymentStatus'\n        required: true\n      responses:\n        \"200\":\n          description: Cluster status is updated\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n        \"410\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: namespace has been deleted\n      security:\n      - Bearer: []\n      summary: update the connector namespace status\n      tags:\n      - Connector Clusters Agent\ncomponents:\n  examples:\n    \"400InvalidIdExample\":\n      value:\n        id: \"21\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/21\n        code: KAFKAS-MGMT-21\n        reason: Bad request\n        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv\n    \"404Example\":\n      value:\n        id: \"404\"\n        kind: Error\n        href: /api/connector_mgmt/v1/errors/7\n        code: CONNECTOR-MGMT-7\n        reason: The requested resource doesn't exist\n    \"401Example\":\n      value:\n        id: \"11\"\n        kind: Error\n        href: /api/connector_mgmt/v1/errors/11\n        code: CONNECTOR-MGMT-11\n        reason: 'Unable to verify JWT token: Required authorization token not found'\n        operation_id: 1iY3UhEhwmXBpWPfI2lNekpd4ZD\n    \"500Example\":\n      value:\n        id: \"9\"\n        kind: Error\n        href: /api/connector_mgmt/v1/errors/9\n        code: CONNECTOR-MGMT-9\n        reason: Unspecified error\n        operation_id: 1ieELvF9jMQY6YghfM9gGRsHvEW\n  schemas:\n    MetaV1Condition:\n      example:\n        reason: reason\n        last_transition_time: last_transition_time\n        type: type\n        message: message\n        status: status\n      properties:\n        type:\n          type: string\n        reason:\n          type: string\n        message:\n          type: string\n        status:\n          type: string\n        last_transition_time:\n          type: string\n      type: object\n    WatchEvent:\n      properties:\n        type:\n          type: string\n        error:\n          $ref: '#/components/schemas/Error'\n        object:\n          nullable: true\n          type: object\n      required:\n      - type\n      type: object\n    ConnectorDeployment:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/ConnectorDeployment_allOf'\n      description: Holds the deployment configuration of a connector\n    ConnectorDeploymentSpec:\n      description: Holds the deployment specification of a connector\n      properties:\n        service_account:\n          $ref: '#/components/schemas/ServiceAccount'\n        kafka:\n          $ref: '#/components/schemas/KafkaConnectionSettings'\n        schema_registry:\n          $ref: '#/components/schemas/SchemaRegistryConnectionSettings'\n        connector_id:\n          type: string\n        connector_resource_version:\n          format: int64\n          type: integer\n        connector_type_id:\n          type: string\n        namespace_id:\n          type: string\n        connector_spec:\n          type: object\n        operator_id:\n          description: an optional operator id that the connector should be run under.\n          type: string\n        desired_state:\n          $ref: '#/components/schemas/ConnectorDesiredState'\n        shard_metadata:\n          type: object\n      type: object\n    ConnectorDeploymentStatus:\n      description: The status of connector deployment\n      example:\n        operators:\n          available:\n            id: id\n            type: type\n            version: version\n          assigned:\n            id: id\n            type: type\n            version: version\n        conditions:\n        - reason: reason\n          last_transition_time: last_transition_time\n          type: type\n          message: message\n          status: status\n        - reason: reason\n          last_transition_time: last_transition_time\n          type: type\n          message: message\n          status: status\n        resource_version: 0\n      properties:\n        phase:\n          $ref: '#/components/schemas/ConnectorState'\n        resource_version:\n          format: int64\n          type: integer\n        operators:\n          $ref: '#/components/schemas/ConnectorDeploymentStatus_operators'\n        conditions:\n          items:\n            $ref: '#/components/schemas/MetaV1Condition'\n          type: array\n      type: object\n    ConnectorDeploymentList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/ConnectorDeploymentList_allOf'\n    ConnectorDeploymentWatchEvent:\n      allOf:\n      - $ref: '#/components/schemas/WatchEvent'\n      - $ref: '#/components/schemas/ConnectorDeploymentWatchEvent_allOf'\n    ConnectorOperator:\n      description: identifies an operator that runs on the fleet shards used to manage\n        connectors.\n      example:\n        id: id\n        type: type\n        version: version\n      properties:\n        id:\n          description: the id of the operator\n          type: string\n        type:\n          description: the type of the operator\n          type: string\n        version:\n          description: the version of the operator\n          type: string\n    ConnectorClusterStatus:\n      description: Schema for the request to update a data plane cluster's status\n      example:\n        operators:\n        - namespace: namespace\n          operator:\n            id: id\n            type: type\n            version: version\n          status: status\n        - namespace: namespace\n          operator:\n            id: id\n            type: type\n            version: version\n          status: status\n        conditions:\n        - reason: reason\n          last_transition_time: last_transition_time\n          type: type\n          message: message\n          status: status\n        - reason: reason\n          last_transition_time: last_transition_time\n          type: type\n          message: message\n          status: status\n        version: version\n        namespaces:\n        - connectors_deployed: 0\n          id: id\n          conditions:\n          - reason: reason\n            last_transition_time: last_transition_time\n            type: type\n            message: message\n            status: status\n          - reason: reason\n            last_transition_time: last_transition_time\n            type: type\n            message: message\n            status: status\n          version: version\n        - connectors_deployed: 0\n          id: id\n          conditions:\n          - reason: reason\n            last_transition_time: last_transition_time\n            type: type\n            message: message\n            status: status\n          - reason: reason\n            last_transition_time: last_transition_time\n            type: type\n            message: message\n            status: status\n          version: version\n      properties:\n        phase:\n          $ref: '#/components/schemas/ConnectorClusterState'\n        version:\n          type: string\n        conditions:\n          items:\n            $ref: '#/components/schemas/MetaV1Condition'\n          type: array\n        operators:\n          description: the list of installed operators\n          items:\n            $ref: '#/components/schemas/ConnectorClusterStatus_operators'\n          type: array\n        namespaces:\n          items:\n            $ref: '#/components/schemas/ConnectorNamespaceDeploymentStatus'\n          type: array\n      type: object\n    ConnectorNamespaceDeploymentList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/ConnectorNamespaceDeploymentList_allOf'\n    ConnectorNamespaceDeployment:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/ConnectorNamespaceMeta'\n      - $ref: '#/components/schemas/ConnectorNamespaceDeployment_allOf'\n      description: A connector namespace deployment\n    ConnectorNamespaceDeploymentStatus:\n      description: Schema for the request to update a data plane namespaces' status\n      example:\n        connectors_deployed: 0\n        id: id\n        conditions:\n        - reason: reason\n          last_transition_time: last_transition_time\n          type: type\n          message: message\n          status: status\n        - reason: reason\n          last_transition_time: last_transition_time\n          type: type\n          message: message\n          status: status\n        version: version\n      properties:\n        id:\n          type: string\n        phase:\n          $ref: '#/components/schemas/ConnectorNamespaceState'\n        version:\n          type: string\n        connectors_deployed:\n          format: int32\n          type: integer\n        conditions:\n          items:\n            $ref: '#/components/schemas/MetaV1Condition'\n          type: array\n      required:\n      - connectors_deployed\n      - id\n      - phase\n      - version\n      type: object\n    Error:\n      nullable: true\n      properties:\n        reason:\n          type: string\n        operation_id:\n          type: string\n        id:\n          type: string\n        kind:\n          type: string\n        href:\n          type: string\n        code:\n          type: string\n      required:\n      - code\n      - href\n      - id\n      - kind\n      - reason\n      type: object\n    ObjectReference:\n      properties:\n        id:\n          type: string\n        kind:\n          type: string\n        href:\n          type: string\n      type: object\n    ServiceAccount:\n      properties:\n        client_id:\n          type: string\n        client_secret:\n          type: string\n      required:\n      - client_id\n      - client_secret\n    KafkaConnectionSettings:\n      allOf:\n      - $ref: '#/components/schemas/ServiceConnectionSettings'\n      description: Holds the configuration to connect to a Kafka Instance.\n    ServiceConnectionSettings:\n      properties:\n        id:\n          type: string\n        url:\n          type: string\n      required:\n      - id\n      - url\n    SchemaRegistryConnectionSettings:\n      allOf:\n      - $ref: '#/components/schemas/ServiceConnectionSettings'\n      description: Holds the configuration to connect to a Schem Registry Instance.\n    ConnectorDesiredState:\n      enum:\n      - unassigned\n      - ready\n      - stopped\n      - deleted\n      type: string\n    ConnectorState:\n      enum:\n      - assigning\n      - assigned\n      - updating\n      - ready\n      - stopped\n      - failed\n      - deleting\n      - deleted\n      - provisioning\n      - deprovisioning\n      type: string\n    List:\n      properties:\n        kind:\n          type: string\n        page:\n          type: integer\n        size:\n          type: integer\n        total:\n          type: integer\n        items:\n          items:\n            $ref: '#/components/schemas/ObjectReference'\n          type: array\n      required:\n      - items\n      - kind\n      - page\n      - size\n      - total\n      type: object\n    ConnectorClusterState:\n      enum:\n      - disconnected\n      - ready\n      - deleting\n      type: string\n    ConnectorNamespaceMeta:\n      allOf:\n      - $ref: '#/components/schemas/ObjectMeta'\n      - $ref: '#/components/schemas/ConnectorNamespaceRequestMeta'\n      - $ref: '#/components/schemas/ConnectorNamespaceMeta_allOf'\n    ObjectMeta:\n      properties:\n        owner:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        modified_at:\n          format: date-time\n          type: string\n      type: object\n    ConnectorNamespaceRequestMeta:\n      properties:\n        name:\n          description: Namespace name must match pattern `^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$`,\n            or it may be empty to be auto-generated.\n          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$\n          type: string\n        annotations:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    ConnectorNamespaceQuota:\n      properties:\n        connectors:\n          format: int32\n          type: integer\n        memory_requests:\n          description: Memory quota for limits or requests\n          pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\n          type: string\n        memory_limits:\n          description: Memory quota for limits or requests\n          pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\n          type: string\n        cpu_requests:\n          description: CPU quota for limits or requests\n          pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\n          type: string\n        cpu_limits:\n          description: CPU quota for limits or requests\n          pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\n          type: string\n      type: object\n    MemoryQuota:\n      description: Memory quota for limits or requests\n      pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\n      type: string\n    CpuQuota:\n      description: CPU quota for limits or requests\n      pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\n      type: string\n    ConnectorNamespaceTenant:\n      properties:\n        kind:\n          $ref: '#/components/schemas/ConnectorNamespaceTenantKind'\n        id:\n          description: Either user or organisation id depending on the value of kind\n          type: string\n      required:\n      - id\n      - kind\n      type: object\n    ConnectorNamespaceTenantKind:\n      enum:\n      - user\n      - organisation\n      type: string\n    ConnectorNamespaceStatus:\n      properties:\n        state:\n          $ref: '#/components/schemas/ConnectorNamespaceState'\n        version:\n          type: string\n        connectors_deployed:\n          format: int32\n          type: integer\n        error:\n          type: string\n      required:\n      - connectors_deployed\n      - state\n      type: object\n    ConnectorNamespaceState:\n      enum:\n      - disconnected\n      - ready\n      - deleting\n      - deleted\n      type: string\n    ConnectorDeployment_allOf_metadata:\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        resource_version:\n          format: int64\n          type: integer\n        resolved_secrets:\n          type: boolean\n      required:\n      - created_at\n      - resolved_secrets\n      - resource_version\n      - updated_at\n    ConnectorDeployment_allOf:\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ConnectorDeployment_allOf_metadata'\n        spec:\n          $ref: '#/components/schemas/ConnectorDeploymentSpec'\n        status:\n          $ref: '#/components/schemas/ConnectorDeploymentStatus'\n    ConnectorDeploymentStatus_operators:\n      example:\n        available:\n          id: id\n          type: type\n          version: version\n        assigned:\n          id: id\n          type: type\n          version: version\n      properties:\n        assigned:\n          $ref: '#/components/schemas/ConnectorOperator'\n        available:\n          $ref: '#/components/schemas/ConnectorOperator'\n    ConnectorDeploymentList_allOf:\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/ConnectorDeployment'\n          type: array\n    ConnectorDeploymentWatchEvent_allOf:\n      properties:\n        object:\n          $ref: '#/components/schemas/ConnectorDeployment'\n    ConnectorClusterStatus_operators:\n      example:\n        namespace: namespace\n        operator:\n          id: id\n          type: type\n          version: version\n        status: status\n      properties:\n        operator:\n          $ref: '#/components/schemas/ConnectorOperator'\n        namespace:\n          description: the namespace to which the operator has been installed\n          type: string\n        status:\n          description: the status of the operator\n          type: string\n    ConnectorNamespaceDeploymentList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/ConnectorNamespaceDeployment'\n          type: array\n    ConnectorNamespaceDeployment_allOf:\n      properties:\n        name:\n          type: string\n        cluster_id:\n          type: string\n        expiration:\n          description: Namespace expiration timestamp in RFC 3339 format\n          type: string\n        tenant:\n          $ref: '#/components/schemas/ConnectorNamespaceTenant'\n        status:\n          $ref: '#/components/schemas/ConnectorNamespaceStatus'\n      required:\n      - cluster_id\n      - id\n      - name\n      - resource_version\n      - status\n      - tenant\n    ConnectorNamespaceMeta_allOf:\n      properties:\n        resource_version:\n          format: int64\n          type: integer\n        quota:\n          $ref: '#/components/schemas/ConnectorNamespaceQuota'\n  securitySchemes:\n    Bearer:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager@3b36d45dd22dafe7a5594193781b8808534f785a/-/blob/internal/connector/internal/api/private/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager/blob/3b36d45dd22dafe7a5594193781b8808534f785a/internal/connector/internal/api/private/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments\": get: responses: code 200: contents: application/json: generate schema: allOf: merge properties: try to merge conflicting property schemas: merge item schema: schema type mismatch:  and object"
}