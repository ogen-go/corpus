{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Archive-42/starred-repos"
		},
		"file": {
			"name": "store-spec3.yaml",
			"size": 0,
			"path": "medusa/docs/api/store-spec3.yaml",
			"byteSize": 134432,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Medusa Storefront API\n  license:\n    name: MIT\ntags:\n  - name: Auth\n    description: \u003e-\n      Auth endpoints allows authorization of admin Users and manages their\n      sessions.\n  - name: Cart\n    x-resourceId: cart\n  - name: Collection\n    x-resourceId: product_collection\n  - name: Customer\n    x-resourceId: customer\n  - name: Discount\n    x-resourceId: discount\n  - name: Gift Card\n    x-resourceId: gift_card\n  - name: Notification\n    x-resourceId: notification\n  - name: Order\n    x-resourceId: order\n  - name: Product\n    x-resourceId: product\n  - name: Region\n    x-resourceId: region\n  - name: Return\n    x-resourceId: return\n  - name: Shipping Option\n    x-resourceId: shipping_option\n  - name: Shipping Profile\n    x-resourceId: shipping_profile\n  - name: Swap\n    x-resourceId: swap\n  - name: Product Variant\n    x-resourceId: product_variant\nservers:\n  - url: \"https://api.medusa-commerce.com/store\"\npaths:\n  /auth:\n    post:\n      operationId: PostAuth\n      summary: Authenticate Customer\n      description: \u003e-\n        Logs a Customer in and authorizes them to view their details. Successful\n        authentication will set a session cookie in the Customer's browser.\n      parameters: []\n      tags:\n        - Auth\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/customer\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - password\n              properties:\n                email:\n                  type: string\n                  description: The Customer's email.\n                password:\n                  type: string\n                  description: The Customer's password.\n    delete:\n      operationId: DeleteAuth\n      summary: Log out\n      description: Destroys a Customer's authenticated session.\n      tags:\n        - Auth\n      responses:\n        \"200\":\n          description: OK\n    get:\n      operationId: GetAuth\n      summary: Get Session\n      description: Gets the currently logged in Customer.\n      tags:\n        - Auth\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/customer\"\n  \"/auth/{email}\":\n    get:\n      operationId: GetAuthEmail\n      summary: Check if email has account\n      description: Checks if a Customer with the given email has signed up.\n      parameters:\n        - in: path\n          name: email\n          required: true\n          description: The Customer's email.\n          schema:\n            type: string\n      tags:\n        - Auth\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  exists:\n                    type: boolean\n  \"/carts/{id}/shipping-methods\":\n    post:\n      operationId: PostCartsCartShippingMethod\n      description: Adds a Shipping Method to the Cart.\n      summary: Add a Shipping Method\n      tags:\n        - Cart\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The cart id.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - option_id\n              properties:\n                option_id:\n                  type: string\n                  description: id of the shipping option to create the method from\n                data:\n                  type: object\n                  description: \u003e-\n                    Used to hold any data that the shipping method may need to\n                    process the fulfillment of the order. Look at the\n                    documentation for your installed fulfillment providers to\n                    find out what to send.\n  \"/carts/{id}/complete\":\n    post:\n      summary: Complete a Cart\n      operationId: PostCartsCartComplete\n      description: \u003e-\n        Completes a cart. The following steps will be performed. Payment\n        authorization is attempted and if more work is required, we simply\n        return the cart for further updates. If payment is authorized and order\n        is not yet created, we make sure to do so. The completion of a cart can\n        be performed idempotently with a provided header `Idempotency-Key`. If\n        not provided, we will generate one for the request.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The Cart id.\n          schema:\n            type: string\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: \u003e-\n            If a cart was successfully authorized, but requires further action\n            from the user the response body will contain the cart with an\n            updated payment session. If the Cart was successfully completed the\n            response body will contain the newly created Order.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: object\n                    properties:\n                      order:\n                        $ref: \"#/components/schemas/order\"\n                  - type: object\n                    properties:\n                      cart:\n                        $ref: \"#/components/schemas/cart\"\n  /carts:\n    post:\n      summary: Create a Cart\n      operationId: PostCart\n      description: \u003e-\n        Creates a Cart within the given region and with the initial items. If no\n        `region_id` is provided the cart will be associated with the first\n        Region available. If no items are provided the cart will be empty after\n        creation. If a user is logged in the cart's customer id and email will\n        be set.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                region_id:\n                  type: string\n                  description: The id of the Region to create the Cart in.\n                country_code:\n                  type: string\n                  description: The 2 character ISO country code to create the Cart in.\n                items:\n                  description: \u003e-\n                    An optional array of `variant_id`, `quantity` pairs to\n                    generate Line Items from.\n                  type: array\n                  items:\n                    properties:\n                      variant_id:\n                        description: \u003e-\n                          The id of the Product Variant to generate a Line Item\n                          from.\n                        type: string\n                      quantity:\n                        description: The quantity of the Product Variant to add\n                        type: integer\n                context:\n                  description: \u003e-\n                    An optional object to provide context to the Cart. The\n                    `context` field is automatically populated with `ip` and\n                    `user_agent`\n                  type: object\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: Successfully created a new Cart\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n  \"/carts/{id}/line-items\":\n    post:\n      operationId: PostCartsCartLineItems\n      summary: Add a Line Item\n      description: \u003e-\n        Generates a Line Item with a given Product Variant and adds it to the\n        Cart\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Cart to add the Line Item to.\n          schema:\n            type: string\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - variant_id\n                - quantity\n              properties:\n                variant_id:\n                  type: string\n                  description: \u003e-\n                    The id of the Product Variant to generate the Line Item\n                    from.\n                quantity:\n                  type: integer\n                  description: The quantity of the Product Variant to add to the Line Item.\n                metadata:\n                  type: object\n                  description: \u003e-\n                    An optional key-value map with additional details about the\n                    Line Item.\n  \"/carts/{id}/payment-sessions\":\n    post:\n      operationId: PostCartsCartPaymentSessions\n      summary: Initialize Payment Sessions\n      description: \u003e-\n        Creates Payment Sessions for each of the available Payment Providers in\n        the Cart's Region.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Cart.\n          schema:\n            type: string\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n  \"/carts/{id}/discounts/{code}\":\n    delete:\n      operationId: DeleteCartsCartDiscountsDiscount\n      description: Removes a Discount from a Cart.\n      summary: Remove Discount from Cart\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Cart.\n          schema:\n            type: string\n        - in: path\n          name: code\n          required: true\n          description: The unique Discount code.\n          schema:\n            type: string\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n  \"/carts/{id}/line-items/{line_id}\":\n    delete:\n      operationId: DeleteCartsCartLineItemsItem\n      summary: Delete a Line Item\n      description: Removes a Line Item from a Cart.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Cart.\n          schema:\n            type: string\n        - in: path\n          name: line_id\n          required: true\n          description: The id of the Line Item.\n          schema:\n            type: string\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n    post:\n      operationId: PostCartsCartLineItemsItem\n      summary: Update a Line Item\n      description: Updates a Line Item if the desired quantity can be fulfilled.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Cart.\n          schema:\n            type: string\n        - in: path\n          name: line_id\n          required: true\n          description: The id of the Line Item.\n          schema:\n            type: string\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - quantity\n              properties:\n                quantity:\n                  type: integer\n                  description: The quantity to set the Line Item to.\n  \"/carts/{id}/payment-sessions/{provider_id}\":\n    delete:\n      operationId: DeleteCartsCartPaymentSessionsSession\n      summary: Delete a Payment Session\n      description: \u003e-\n        Deletes a Payment Session on a Cart. May be useful if a payment has\n        failed.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Cart.\n          schema:\n            type: string\n        - in: path\n          name: provider_id\n          required: true\n          description: \u003e-\n            The id of the Payment Provider used to create the Payment Session to\n            be deleted.\n          schema:\n            type: string\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n    post:\n      operationId: PostCartsCartPaymentSessionUpdate\n      summary: Update a Payment Session\n      description: Updates a Payment Session with additional data.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Cart.\n          schema:\n            type: string\n        - in: path\n          name: provider_id\n          required: true\n          description: The id of the payment provider.\n          schema:\n            type: string\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - provider_id\n                - data\n              properties:\n                provider_id:\n                  type: string\n                  description: \u003e-\n                    The id of the Payment Provider responsible for the Payment\n                    Session to update.\n                data:\n                  type: object\n                  description: The data to update the payment session with.\n  \"/carts/{id}\":\n    get:\n      operationId: GetCartsCart\n      summary: Retrieve a Cart\n      description: Retrieves a Cart.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Cart.\n          schema:\n            type: string\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n  \"/carts/{id}/payment-session\":\n    post:\n      operationId: PostCartsCartPaymentSession\n      summary: Select a Payment Session\n      description: \u003e-\n        Selects a Payment Session as the session intended to be used towards the\n        completion of the Cart.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Cart.\n          schema:\n            type: string\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - provider_id\n              properties:\n                provider_id:\n                  type: string\n                  description: The id of the Payment Provider.\n  \"/store/carts/{id}\":\n    post:\n      operationId: PostCartsCart\n      summary: Update a Cart\"\n      description: Updates a Cart.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Cart.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                region_id:\n                  type: string\n                  description: The id of the Region to create the Cart in.\n                country_code:\n                  type: string\n                  description: The 2 character ISO country code to create the Cart in.\n                email:\n                  type: string\n                  description: An email to be used on the Cart.\n                billing_address:\n                  description: The Address to be used for billing purposes.\n                  anyOf:\n                    - $ref: \"#/components/schemas/address\"\n                shipping_address:\n                  description: The Address to be used for shipping.\n                  anyOf:\n                    - $ref: \"#/components/schemas/address\"\n                gift_cards:\n                  description: An array of Gift Card codes to add to the Cart.\n                  type: array\n                  items:\n                    properties:\n                      code:\n                        description: The code that a Gift Card is identified by.\n                        type: string\n                discounts:\n                  description: An array of Discount codes to add to the Cart.\n                  type: array\n                  items:\n                    properties:\n                      code:\n                        description: The code that a Discount is identifed by.\n                        type: string\n                customer_id:\n                  description: The id of the Customer to associate the Cart with.\n                  type: string\n                context:\n                  description: An optional object to provide context to the Cart.\n                  type: object\n      tags:\n        - Cart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  cart:\n                    $ref: \"#/components/schemas/cart\"\n  \"/collections/{id}\":\n    get:\n      operationId: GetCollectionsCollection\n      summary: Retrieve a Product Collection\n      description: Retrieves a Product Collection.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Product Collection\n          schema:\n            type: string\n      tags:\n        - Collection\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  collection:\n                    $ref: \"#/components/schemas/product_collection\"\n  /collections:\n    get:\n      operationId: GetCollections\n      summary: List Product Collections\n      description: Retrieve a list of Product Collection.\n      tags:\n        - Collection\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  collection:\n                    $ref: \"#/components/schemas/product_collection\"\n  \"/customers/{id}/addresses\":\n    post:\n      operationId: PostCustomersCustomerAddresses\n      summary: Add a Shipping Address\n      description: Adds a Shipping Address to a Customer's saved addresses.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The Customer id.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address:\n                  description: The Address to add to the Customer.\n                  anyOf:\n                    - $ref: \"#/components/schemas/address\"\n      tags:\n        - Customer\n      responses:\n        \"200\":\n          description: A successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/customer\"\n  /customers:\n    post:\n      operationId: PostCustomers\n      summary: Create a Customer\n      description: Creates a Customer account.\n      parameters: []\n      tags:\n        - Customer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/customer\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - first_name\n                - last_name\n                - password\n              properties:\n                email:\n                  type: string\n                  description: The Customer's email address.\n                first_name:\n                  type: string\n                  description: The Customer's first name.\n                last_name:\n                  type: string\n                  description: The Customer's last name.\n                password:\n                  type: string\n                  description: The Customer's password for login.\n                phone:\n                  type: string\n                  description: The Customer's phone number.\n  \"/customers/{id}/addresses/{address_id}\":\n    delete:\n      operationId: DeleteCustomersCustomerAddressesAddress\n      summary: Delete an Address\n      description: Removes an Address from the Customer's saved addresse.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Customer.\n          schema:\n            type: string\n        - in: path\n          name: address_id\n          required: true\n          description: The id of the Address to remove.\n          schema:\n            type: string\n      tags:\n        - Customer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/customer\"\n  /customers/me:\n    get:\n      operationId: GetCustomersCustomer\n      summary: Retrieves a Customer\n      description: \u003e-\n        Retrieves a Customer - the Customer must be logged in to retrieve their\n        details.\n      tags:\n        - Customer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/customer\"\n    post:\n      operationId: PostCustomersCustomer\n      summary: Update Customer details\n      description: Updates a Customer's saved details.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                first_name:\n                  description: The Customer's first name.\n                  type: string\n                last_name:\n                  description: The Customer's last name.\n                  type: string\n                billing_address:\n                  description: The Address to be used for billing purposes.\n                  anyOf:\n                    - $ref: \"#/components/schemas/address\"\n                password:\n                  description: The Customer's password.\n                  type: string\n                phone:\n                  description: The Customer's phone number.\n                  type: string\n                email:\n                  description: The email of the customer.\n                  type: string\n                metadata:\n                  description: Metadata about the customer.\n                  type: object\n      tags:\n        - Customer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/customer\"\n  /customers/me/payment-methods:\n    get:\n      operationId: GetCustomersCustomerPaymentMethods\n      summary: Retrieve saved payment methods\n      description: \u003e-\n        Retrieves a list of a Customer's saved payment methods. Payment methods\n        are saved with Payment Providers and it is their responsibility to fetch\n        saved methods.\n      tags:\n        - Customer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  payment_methods:\n                    type: array\n                    items:\n                      properties:\n                        provider_id:\n                          type: string\n                          description: \u003e-\n                            The id of the Payment Provider where the payment\n                            method is saved.\n                        data:\n                          type: object\n                          description: \u003e-\n                            The data needed for the Payment Provider to use the\n                            saved payment method.\n  /customers/me/orders:\n    get:\n      operationId: GetCustomersCustomerOrders\n      summary: Retrieve Customer Orders\n      description: Retrieves a list of a Customer's Orders.\n      tags:\n        - Customer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  payment_methods:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/order\"\n  /customers/password-token:\n    post:\n      operationId: PostCustomersCustomerPasswordToken\n      summary: Creates a reset password token\n      description: \u003e-\n        Creates a reset password token to be used in a subsequent\n        /reset-password request. The password token should be sent out of band\n        e.g. via email and will not be returned.\n      tags:\n        - Customer\n      responses:\n        \"204\":\n          description: OK\n  /customers/reset-password:\n    post:\n      operationId: PostCustomersResetPassword\n      summary: Resets Customer password\n      description: \u003e-\n        Resets a Customer's password using a password token created by a\n        previous /password-token request.\n      parameters: []\n      tags:\n        - Customer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/customer\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - token\n                - password\n              properties:\n                email:\n                  type: string\n                  description: The Customer's email.\n                token:\n                  type: string\n                  description: The password token created by a /password-token request.\n                password:\n                  type: string\n                  description: The new password to set for the Customer.\n  \"/customers/me/addresses/{address_id}\":\n    post:\n      operationId: PostCustomersCustomerAddressesAddress\n      summary: Update a Shipping Address\n      description: Updates a Customer's saved Shipping Address.\n      parameters:\n        - in: path\n          name: address_id\n          required: true\n          description: The id of the Address to update.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address:\n                  description: The updated Address.\n                  anyOf:\n                    - $ref: \"#/components/schemas/address\"\n      tags:\n        - Customer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/customer\"\n  \"/gift-cards/{code}\":\n    get:\n      operationId: GetGiftCardsCode\n      summary: Retrieve Gift Card by Code\n      description: Retrieves a Gift Card by its associated unqiue code.\n      parameters:\n        - in: path\n          name: code\n          required: true\n          description: The unique Gift Card code.\n          schema:\n            type: string\n      tags:\n        - Gift Card\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    description: The id of the Gift Card\n                  code:\n                    description: The code of the Gift Card\n                  value:\n                    description: The original value of the Gift Card.\n                  balance:\n                    description: The current balanace of the Gift Card\n                  region:\n                    $ref: \"#/components/schemas/region\"\n  \"/orders/cart/{cart_id}\":\n    get:\n      operationId: GetOrdersOrderCartId\n      summary: Retrieves Order by Cart id\n      description: \u003e-\n        Retrieves an Order by the id of the Cart that was used to create the\n        Order.\n      parameters:\n        - in: path\n          name: cart_id\n          required: true\n          description: The id of Cart.\n          schema:\n            type: string\n      tags:\n        - Order\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  order:\n                    $ref: \"#/components/schemas/order\"\n  \"/orders/{id}\":\n    get:\n      operationId: GetOrdersOrder\n      summary: Retrieves an Order\n      description: Retrieves an Order\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Order.\n          schema:\n            type: string\n      tags:\n        - Order\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/customer\"\n  /orders:\n    get:\n      operationId: GetOrders\n      summary: Look Up an Order\n      description: \u003e-\n        Looks for an Order with a given `display_id`, `email` pair. The\n        `display_id`, `email` pair must match in order for the Order to be\n        returned.\n      parameters:\n        - in: query\n          name: display_id\n          required: true\n          description: The display id given to the Order.\n          schema:\n            type: number\n        - in: query\n          name: email\n          required: true\n          description: The email of the Order with the given display_id.\n          schema:\n            type: string\n      tags:\n        - Order\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  order:\n                    $ref: \"#/components/schemas/order\"\n  \"/products/{id}\":\n    get:\n      operationId: GetProductsProduct\n      summary: Retrieves a Product\n      description: Retrieves a Product.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Product.\n          schema:\n            type: string\n      tags:\n        - Product\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  product:\n                    $ref: \"#/components/schemas/product\"\n  /products:\n    get:\n      operationId: GetProducts\n      summary: List Products\n      description: Retrieves a list of Products.\n      tags:\n        - Product\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  count:\n                    description: The total number of Products.\n                    type: integer\n                  offset:\n                    description: The offset for pagination.\n                    type: integer\n                  limit:\n                    description: \"The maxmimum number of Products to return,\"\n                    type: integer\n                  products:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/product\"\n  \"/regions/{id}\":\n    get:\n      operationId: GetRegionsRegion\n      summary: Retrieves a Region\n      description: Retrieves a Region.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Region.\n          schema:\n            type: string\n      tags:\n        - Region\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  region:\n                    $ref: \"#/components/schemas/region\"\n  /regions:\n    get:\n      operationId: GetRegions\n      summary: List Regions\n      description: Retrieves a list of Regions.\n      tags:\n        - Region\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  count:\n                    description: The total number of regions.\n                    type: integer\n                  offset:\n                    description: The offset for pagination.\n                    type: integer\n                  limit:\n                    description: \"The maxmimum number of regions to return,\"\n                    type: integer\n                  regions:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/region\"\n  \"/return-reasons/{id}\":\n    get:\n      operationId: GetReturnReasonsReason\n      summary: Retrieve a Return Reason\n      description: Retrieves a Return Reason.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          description: The id of the Return Reason.\n          schema:\n            type: string\n      tags:\n        - Return Reason\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  return_reason:\n                    $ref: \"#/components/schemas/return_reason\"\n  /return-reasons:\n    get:\n      operationId: GetReturnReasons\n      summary: List Return Reasons\n      description: Retrieves a list of Return Reasons.\n      tags:\n        - Return Reason\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  return_reasons:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/return_reason\"\n  /shipping-options:\n    get:\n      operationId: GetShippingOptions\n      summary: Retrieve Shipping Options\n      description: Retrieves a list of Shipping Options.\n      parameters:\n        - in: query\n          name: is_return\n          description: \u003e-\n            Whether return Shipping Options should be included. By default all\n            Shipping Options are returned.\n          schema:\n            type: boolean\n        - in: query\n          name: product_ids\n          description: A comma separated list of Product ids to filter Shipping Options by.\n          schema:\n            type: string\n        - in: query\n          name: region_id\n          description: the Region to retrieve Shipping Options from.\n          schema:\n            type: string\n      tags:\n        - Shipping Option\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  shipping_options:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/shipping_option\"\n  \"/shipping-options/{cart_id}\":\n    get:\n      operationId: GetShippingOptionsCartId\n      summary: Retrieve Shipping Options for Cart\n      description: Retrieves a list of Shipping Options available to a cart.\n      parameters:\n        - in: path\n          name: cart_id\n          required: true\n          description: The id of the Cart.\n          schema:\n            type: string\n      tags:\n        - Shipping Option\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  shipping_options:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/shipping_option\"\n  /returns:\n    post:\n      operationId: PostReturns\n      summary: Create Return\n      description: Creates a Return for an Order.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                order_id:\n                  type: string\n                  description: The id of the Order to create the Return from.\n                items:\n                  description: The items to include in the Return.\n                  type: array\n                  items:\n                    properties:\n                      item_id:\n                        description: The id of the Line Item from the Order.\n                        type: string\n                      quantity:\n                        description: The quantity to return.\n                        type: integer\n                return_shipping:\n                  description: \u003e-\n                    If the Return is to be handled by the store operator the\n                    Customer can choose a Return Shipping Method. Alternatvely\n                    the Customer can handle the Return themselves.\n                  type: object\n                  properties:\n                    option_id:\n                      type: string\n                      description: \u003e-\n                        The id of the Shipping Option to create the Shipping\n                        Method from.\n      tags:\n        - Return\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  return:\n                    $ref: \"#/components/schemas/return\"\n  /swaps:\n    post:\n      operationId: PostSwaps\n      summary: Create a Swap\n      description: \u003e-\n        Creates a Swap on an Order by providing some items to return along with\n        some items to send back\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                order_id:\n                  type: string\n                  description: The id of the Order to create the Swap for.\n                return_items:\n                  description: The items to include in the Return.\n                  type: array\n                  items:\n                    properties:\n                      item_id:\n                        description: The id of the Line Item from the Order.\n                        type: string\n                      quantity:\n                        description: The quantity to return.\n                        type: integer\n                return_shipping_option:\n                  type: string\n                  description: \u003e-\n                    The id of the Shipping Option to create the Shipping Method\n                    from.\n                additional_items:\n                  description: The items to exchange the returned items to.\n                  type: array\n                  items:\n                    properties:\n                      variant_id:\n                        description: The id of the Product Variant to send.\n                        type: string\n                      quantity:\n                        description: The quantity to send of the variant.\n                        type: integer\n      tags:\n        - Swap\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  swap:\n                    $ref: \"#/components/schemas/swap\"\n  \"/swaps/{cart_id}\":\n    get:\n      operationId: GetSwapsSwapCartId\n      summary: Retrieve Swap by Cart id\n      description: Retrieves a Swap by the id of the Cart used to confirm the Swap.\n      parameters:\n        - in: path\n          name: cart_id\n          required: true\n          description: The id of the Cart\n          schema:\n            type: string\n      tags:\n        - Swap\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  swap:\n                    $ref: \"#/components/schemas/swap\"\n  \"/variants/{variant_id}\":\n    get:\n      operationId: GetVariantsVariant\n      summary: Retrieve a Product Variant\n      description: Retrieves a Product Variant by id\n      parameters:\n        - in: path\n          name: variant_id\n          required: true\n          description: The id of the Product Variant.\n          schema:\n            type: string\n      tags:\n        - Product Variant\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  variant:\n                    $ref: \"#/components/schemas/product_variant\"\n  /variants:\n    get:\n      operationId: GetVariants\n      summary: Retrieve Product Variants\n      description: Retrieves a list of Product Variants\n      parameters:\n        - in: query\n          name: ids\n          description: A comma separated list of Product Variant ids to filter by.\n          schema:\n            type: string\n      tags:\n        - Product Variant\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  variants:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/product_variant\"\ncomponents:\n  schemas:\n    address:\n      title: Address\n      description: An address.\n      x-resourceId: address\n      properties:\n        id:\n          type: string\n        customer_id:\n          type: string\n        company:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        address_1:\n          type: string\n        address_2:\n          type: string\n        city:\n          type: string\n        country_code:\n          type: string\n        country:\n          $ref: \"#/components/schemas/country\"\n    cart:\n      title: Cart\n      description: Represents a user cart\n      x-resourceId: cart\n      properties:\n        id:\n          type: string\n        email:\n          type: string\n        billing_address_id:\n          type: string\n        billing_address:\n          $ref: \"#/components/schemas/address\"\n        shipping_address_id:\n          type: string\n        shipping_address:\n          $ref: \"#/components/schemas/address\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/line_item\"\n        region_id:\n          type: string\n        region:\n          $ref: \"#/components/schemas/region\"\n        discounts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/region\"\n        gift_cards:\n          type: array\n          items:\n            $ref: \"#/components/schemas/gift_card\"\n        customer_id:\n          type: string\n        customer:\n          $ref: \"#/components/schemas/customer\"\n        payment_session:\n          $ref: \"#/components/schemas/payment_session\"\n        payment_sessions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/payment_session\"\n        payment:\n          $ref: \"#/components/schemas/payment\"\n        shipping_methods:\n          type: array\n          items:\n            $ref: \"#/components/schemas/shipping_method\"\n        type:\n          type: string\n          enum:\n            - default\n            - swap\n            - payment_link\n        completed_at:\n          type: string\n          format: date-time\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        deleted_at:\n          type: string\n          format: date-time\n        metadata:\n          type: object\n        shipping_total:\n          type: integer\n        discount_total:\n          type: integer\n        tax_total:\n          type: integer\n        subtotal:\n          type: integer\n        refundable_amount:\n          type: integer\n        gift_card_total:\n          type: integer\n    claim_image:\n      title: Claim Image\n      description: Represents photo documentation of a claim.\n      x-resourceId: claim_image\n      properties:\n        id:\n          type: string\n        claim_item_id:\n          type: string\n        url:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        deleted_at:\n          type: string\n          format: date-time\n        metadata:\n          type: object\n    claim_item:\n      title: Claim Item\n      description: \u003e-\n        Represents a claimed item along with information about the reasons for\n        the claim.\n      x-resourceId: claim_item\n      properties:\n        id:\n          type: string\n        images:\n          type: array\n          items:\n            $ref: \"#/components/schemas/claim_image\"\n        claim_order_id:\n          type: string\n        item_id:\n          type: string\n        item:\n          description: The Line Item that the claim refers to\n          $ref: \"#/components/schemas/line_item\"\n        variant_id:\n          type: string\n        variant:\n          description: The Product Variant that is claimed.\n          $ref: \"#/components/schemas/product_variant\"\n        reason:\n          description: The reason for the claim\n          type: string\n          enum:\n            - missing_item\n            - wrong_item\n            - production_failure\n            - other\n        note:\n          description: \"An optional note about the claim, for additional information\"\n          type: string\n        quantity:\n          description: \u003e-\n            The quantity of the item that is being claimed; must be less than or\n            equal to the amount purchased in the original order.\n          type: integer\n        tags:\n          description: User defined tags for easy filtering and grouping.\n          type: array\n          items:\n            $ref: \"#/components/schemas/claim_tag\"\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        deleted_at:\n          type: string\n          format: date-time\n        metadata:\n          type: object\n    claim_order:\n      title: Claim Order\n      description: \u003e-\n        Claim Orders represent a group of faulty or missing items. Each claim\n        order consists of a subset of items associated with an original order,\n        and can contain additional information about fulfillments and returns.\n      x-resourceId: claim_order\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n            - refund\n            - replace\n        payment_status:\n          type: string\n          enum:\n            - na\n            - not_refunded\n            - refunded\n        fulfillment_status:\n          type: string\n          enum:\n            - not_fulfilled\n            - partially_fulfilled\n            - fulfilled\n            - partially_shipped\n            - shipped\n            - partially_returned\n            - returned\n            - canceled\n            - requires_action\n        claim_items:\n          description: The items that have been claimed\n          type: array\n          items:\n            $ref: \"#/components/schemas/claim_item\"\n        additional_items:\n          description: \u003e-\n            Refers to the new items to be shipped when the claim order has the\n            type `replace`\n          type: array\n          items:\n            $ref: \"#/components/schemas/line_item\"\n        order_id:\n          description: The id of the order that the claim comes from.\n          type: string\n        return_order:\n          description: Holds information about the return if the claim is to be returned\n          $ref: \"#/components/schemas/return\"\n        shipping_address_id:\n          description: The id of the address that the new items should be shipped to\n          type: string\n        shipping_address:\n          description: The address that the new items should be shipped to\n          $ref: \"#/components/schemas/address\"\n        shipping_methods:\n          description: The shipping methods that the claim order will be shipped with.\n          type: array\n          items:\n            $ref: \"#/components/schemas/shipping_method\"\n        fulfillments:\n          description: The fulfillments of the new items to be shipped\n          type: array\n          items:\n            $ref: \"#/components/schemas/fulfillment\"\n        refund_amount:\n          description: The amount that will be refunded in conjunction with the claim\n          type: integer\n        canceled_at:\n          description: The date with timezone at which the Swap was canceled.\n          type: string\n          format: date-time\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        deleted_at:\n          type: string\n          format: date-time\n        no_notification:\n          description: \u003e-\n            Flag for describing whether or not notifications related to this\n            should be send.\n          type: boolean\n        metadata:\n          type: object\n    claim_tag:\n      title: Claim Tag\n      description: \u003e-\n        Claim Tags are user defined tags that can be assigned to claim items for\n        easy filtering and grouping.\n      x-resourceId: claim_tag\n      properties:\n        id:\n          description: The id of the claim tag. Will be prefixed by `ctag_`.\n          type: string\n        value:\n          description: The value that the claim tag holds\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        update_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    country:\n      title: Country\n      description: Country details\n      x-resourceId: country\n      properties:\n        id:\n          description: The database id of the country\n          type: integer\n        iso_2:\n          description: The 2 character ISO code for the country.\n          type: string\n        iso_3:\n          description: The 3 character ISO code for the country.\n          type: string\n        num_code:\n          description: The numerical ISO code for the country.\n          type: string\n        name:\n          description: The normalized country name; in upper case.\n          type: string\n        display_name:\n          description: The country name appropriate for display.\n          type: string\n    currency:\n      title: Currency\n      description: Currency\n      x-resourceId: currency\n      properties:\n        code:\n          description: The 3 character ISO code for the currency.\n          type: string\n        symbol:\n          description: The symbol used to indicate the currency.\n          type: string\n        symbol_native:\n          description: The native symbol used to indicate the currency.\n          type: string\n        name:\n          description: The written name of the currency\n          type: string\n    custom_shipping_option:\n      title: Custom Shipping Option\n      description: \u003e-\n        Custom Shipping Options are 'overriden' Shipping Options. Store managers\n        can attach a Custom Shipping Option to a cart in order to set a custom\n        price for a particular Shipping Option\n      x-resourceId: custom_shipping_option\n      properties:\n        id:\n          description: \u003e-\n            The id of the Custom Shipping Option. This value will be prefixed\n            with `cso_`.\n          type: string\n        price:\n          description: \u003e-\n            The custom price set that will override the shipping option's\n            original price\n          type: integer\n        shipping_option_id:\n          description: \u003e-\n            The id of the Shipping Option that the custom shipping option\n            overrides\n          anyOf:\n            - $ref: \"#/components/schemas/shipping_option\"\n        cart_id:\n          description: The id of the Cart that the custom shipping option is attached to\n          anyOf:\n            - $ref: \"#/components/schemas/cart\"\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    customer:\n      title: Customer\n      description: Represents a customer\n      x-resourceId: customer\n      properties:\n        id:\n          type: string\n        email:\n          type: string\n        billing_address_id:\n          type: string\n        billing_address:\n          description: The Customer's billing address.\n          anyOf:\n            - $ref: \"#/components/schemas/address\"\n        shipping_addresses:\n          type: array\n          items:\n            $ref: \"#/components/schemas/address\"\n        first_name:\n          type: string\n        last_name:\n          type: string\n        phone:\n          type: string\n        has_account:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        deleted_at:\n          type: string\n          format: date-time\n        metadata:\n          type: object\n    discount_rule:\n      title: Discount Rule\n      description: \u003e-\n        Holds the rules that governs how a Discount is calculated when applied\n        to a Cart.\n      x-resourceId: discount_rule\n      properties:\n        id:\n          description: The id of the Discount Rule. Will be prefixed by `dru_`.\n          type: string\n        type:\n          description: \u003e-\n            The type of the Discount, can be `fixed` for discounts that reduce\n            the price by a fixed amount, `percentage` for percentage reductions\n            or `free_shipping` for shipping vouchers.\n          type: string\n          enum:\n            - fixed\n            - percentage\n            - free_shipping\n        description:\n          description: A short description of the discount\n          type: string\n        value:\n          description: \u003e-\n            The value that the discount represents; this will depend on the type\n            of the discount\n          type: integer\n        allocation:\n          description: The scope that the discount should apply to.\n          type: string\n          enum:\n            - total\n            - item\n        valid_for:\n          description: A set of Products that the discount can be used for.\n          type: array\n          items:\n            $ref: \"#/components/schemas/product\"\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        update_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    discount:\n      title: Discount\n      description: \u003e-\n        Represents a discount that can be applied to a cart for promotional\n        purposes.\n      x-resourceId: discount\n      properties:\n        id:\n          description: The id of the Discount. Will be prefixed by `disc_`.\n          type: string\n        code:\n          description: \u003e-\n            A unique code for the discount - this will be used by the customer\n            to apply the discount\n          type: string\n        is_dynamic:\n          description: \u003e-\n            A flag to indicate if multiple instances of the discount can be\n            generated. I.e. for newsletter discounts\n          type: boolean\n        rule:\n          description: The Discount Rule that governs the behaviour of the Discount\n          anyOf:\n            - $ref: \"#/components/schemas/discount_rule\"\n        is_disabled:\n          description: \u003e-\n            Whether the Discount has been disabled. Disabled discounts cannot be\n            applied to carts\n          type: boolean\n        parent_discount_id:\n          description: \u003e-\n            The Discount that the discount was created from. This will always be\n            a dynamic discount\n          type: string\n        starts_at:\n          description: The time at which the discount can be used.\n          type: string\n          format: date-time\n        ends_at:\n          description: The time at which the discount can no longer be used.\n          type: string\n          format: date-time\n        regions:\n          description: The Regions in which the Discount can be used\n          type: array\n          items:\n            $ref: \"#/components/schemas/region\"\n        usage_limit:\n          description: The maximum number of times that a discount can be used.\n          type: integer\n        usage_count:\n          description: The number of times a discount has been used.\n          type: integer\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    draft-order:\n      title: DraftOrder\n      description: Represents a draft order\n      x-resourceId: draft-order\n      properties:\n        id:\n          type: string\n        status:\n          type: string\n          enum:\n            - open\n            - completed\n        display_id:\n          type: string\n        cart_id:\n          type: string\n        cart:\n          anyOf:\n            - $ref: \"#/components/schemas/cart\"\n        order_id:\n          type: string\n        order:\n          anyOf:\n            - $ref: \"#/components/schemas/order\"\n        canceled_at:\n          type: string\n          format: date-time\n        created_at:\n          type: string\n          format: date-time\n        update_at:\n          type: string\n          format: date-time\n        deleted_at:\n          type: string\n          format: date-time\n        completed_at:\n          type: string\n          format: date-time\n        no_notification_order:\n          type: boolean\n        metadata:\n          type: object\n        idempotency_key:\n          type: string\n    fulfillment_item:\n      title: Fulfillment Item\n      description: \u003e-\n        Correlates a Line Item with a Fulfillment, keeping track of the quantity\n        of the Line Item.\n      x-resourceId: fulfillment_item\n      properties:\n        fulfillment_id:\n          description: The id of the Fulfillment that the Fulfillment Item belongs to.\n          type: string\n        item_id:\n          description: The id of the Line Item that the Fulfillment Item references.\n          type: string\n        item:\n          description: The Line Item that the Fulfillment Item references.\n          anyOf:\n            - $ref: \"#/components/schemas/line_item\"\n        quantity:\n          description: The quantity of the Line Item that is included in the Fulfillment.\n          type: integer\n    fulfillment_provider:\n      title: Fulfillment Provider\n      description: \u003e-\n        Represents a fulfillment provider plugin and holds its installation\n        status.\n      x-resourceId: fulfillment_provider\n      properties:\n        id:\n          description: The id of the fulfillment provider as given by the plugin.\n          type: string\n        is_installed:\n          description: \u003e-\n            Whether the plugin is installed in the current version. Plugins that\n            are no longer installed are not deleted by will have this field set\n            to `false`.\n          type: boolean\n    fulfillment:\n      title: Fulfillment\n      description: \u003e-\n        Fulfillments are created once store operators can prepare the purchased\n        goods. Fulfillments will eventually be shipped and hold information\n        about how to track shipments. Fulfillments are created through a\n        provider, which is typically an external shipping aggregator, shipping\n        partner og 3PL, most plugins will have asynchronous communications with\n        these providers through webhooks in order to automatically update and\n        synchronize the state of Fulfillments.\n      x-resourceId: fulfillment\n      properties:\n        id:\n          description: The id of the Fulfillment. This value will be prefixed by `ful_`.\n          type: string\n        claim_order_id:\n          description: The id of the Claim that the Fulfillment belongs to.\n          type: string\n        swap_id:\n          description: The id of the Swap that the Fulfillment belongs to.\n          type: string\n        order_id:\n          description: The id of the Order that the Fulfillment belongs to.\n          type: string\n        provider_id:\n          description: \u003e-\n            The id of the Fulfillment Provider responsible for handling the\n            fulfillment\n          type: string\n        items:\n          description: \u003e-\n            The Fulfillment Items in the Fulfillment - these hold information\n            about how many of each Line Item has been fulfilled.\n          type: array\n          items:\n            $ref: \"#/components/schemas/fulfillment_item\"\n        tracking_links:\n          description: \u003e-\n            The Tracking Links that can be used to track the status of the\n            Fulfillment, these will usually be provided by the Fulfillment\n            Provider.\n          type: array\n          items:\n            $ref: \"#/components/schemas/tracking_link\"\n        tracking_numbers:\n          deprecated: true\n          description: \u003e-\n            The tracking numbers that can be used to track the status of the\n            fulfillment.\n          type: array\n          items:\n            type: string\n        shipped_at:\n          description: The date with timezone at which the Fulfillment was shipped.\n          type: string\n          format: date-time\n        no_notification:\n          description: \u003e-\n            Flag for describing whether or not notifications related to this\n            should be send.\n          type: boolean\n        canceled_at:\n          description: The date with timezone at which the Fulfillment was canceled.\n          type: string\n          format: date-time\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    gift_card_transaction:\n      title: Gift Card Transaction\n      description: \u003e-\n        Gift Card Transactions are created once a Customer uses a Gift Card to\n        pay for their Order\n      x-resourceId: gift_card_transaction\n      properties:\n        id:\n          description: \u003e-\n            The id of the Gift Card Transaction. This value will be prefixed by\n            `gct_`.\n          type: string\n        gift_card_id:\n          description: The id of the Gift Card that was used in the transaction.\n          type: string\n        gift_card:\n          description: The Gift Card that was used in the transaction.\n          anyOf:\n            - $ref: \"#/components/schemas/gift_card\"\n        order_id:\n          description: The id of the Order that the Gift Card was used to pay for.\n          type: string\n        amount:\n          description: The amount that was used from the Gift Card.\n          type: integer\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n    gift_card:\n      title: Gift Card\n      description: \u003e-\n        Gift Cards are redeemable and represent a value that can be used towards\n        the payment of an Order.\n      x-resourceId: gift_card\n      properties:\n        id:\n          description: The id of the Gift Card. This value will be prefixed by `gift_`.\n          type: string\n        code:\n          description: \u003e-\n            The unique code that identifies the Gift Card. This is used by the\n            Customer to redeem the value of the Gift Card.\n          type: string\n        value:\n          description: The value that the Gift Card represents.\n          type: integer\n        balance:\n          description: The remaining value on the Gift Card.\n          type: integer\n        region_id:\n          description: The id of the Region in which the Gift Card is available.\n          type: string\n        region:\n          description: The Region in which the Gift Card is available.\n          anyOf:\n            - $ref: \"#/components/schemas/region\"\n        order_id:\n          description: The id of the Order that the Gift Card was purchased in.\n          type: string\n        is_disabled:\n          description: \u003e-\n            Whether the Gift Card has been disabled. Disabled Gift Cards cannot\n            be applied to carts.\n          type: boolean\n        ends_at:\n          description: The time at which the Gift Card can no longer be used.\n          type: string\n          format: date-time\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    image:\n      title: Image\n      description: Images holds a reference to a URL at which the image file can be found.\n      x-resourceId: image\n      properties:\n        id:\n          description: The id of the Image. This value will be prefixed by `img_`.\n          type: string\n        url:\n          description: The URL at which the image file can be found.\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        update_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    line_item:\n      title: Line Item\n      description: \u003e-\n        Line Items represent purchasable units that can be added to a Cart for\n        checkout. When Line Items are purchased they will get copied to the\n        resulting order and can eventually be referenced in Fulfillments and\n        Returns. Line Items may also be created when processing Swaps and\n        Claims.\n      x-resourceId: line_item\n      properties:\n        id:\n          description: The id of the Line Item. This value will be prefixed by `item_`.\n          type: string\n        cart_id:\n          description: The id of the Cart that the Line Item belongs to.\n          type: string\n        order_id:\n          description: The id of the Order that the Line Item belongs to.\n          type: string\n        swap_id:\n          description: The id of the Swap that the Line Item belongs to.\n          type: string\n        claim_order_id:\n          description: The id of the Claim that the Line Item belongs to.\n          type: string\n        title:\n          description: \u003e-\n            The title of the Line Item, this should be easily identifiable by\n            the Customer.\n          type: string\n        description:\n          description: A more detailed description of the contents of the Line Item.\n          type: string\n        thumbnail:\n          description: A URL string to a small image of the contents of the Line Item.\n          type: string\n        is_giftcard:\n          description: Flag to indicate if the Line Item is a Gift Card.\n          type: boolean\n        should_merge:\n          description: \u003e-\n            Flag to indicate if new Line Items with the same variant should be\n            merged or added as an additional Line Item.\n          type: boolean\n        allow_discounts:\n          description: \u003e-\n            Flag to indicate if the Line Item should be included when doing\n            discount calculations.\n          type: boolean\n        unit_price:\n          description: \u003e-\n            The price of one unit of the content in the Line Item. This should\n            be in the currency defined by the Cart/Order/Swap/Claim that the\n            Line Item belongs to.\n          type: boolean\n        variant_id:\n          description: The id of the Product Variant contained in the Line Item.\n          type: string\n        variant:\n          description: The Product Variant contained in the Line Item.\n          anyOf:\n            - $ref: \"#/components/schemas/product_variant\"\n        quantity:\n          description: The quantity of the content in the Line Item.\n          type: integer\n        fulfilled_quantity:\n          description: The quantity of the Line Item that has been fulfilled.\n          type: integer\n        returned_quantity:\n          description: The quantity of the Line Item that has been returned.\n          type: integer\n        shipped_quantity:\n          description: The quantity of the Line Item that has been shipped.\n          type: integer\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n        refundable:\n          description: \u003e-\n            The amount that can be refunded from the given Line Item. Takes\n            taxes and discounts into consideration.\n          type: integer\n    money_amount:\n      title: Money Amount\n      description: \u003e-\n        Money Amounts represents an amount that a given Product Variant can be\n        purcased for. Each Money Amount either has a Currency or Region\n        associated with it to indicate the pricing in a given Currency or, for\n        fully region-based pricing, the given price in a specific Region. If\n        region-based pricing is used the amount will be in the currency defined\n        for the Reigon.\n      x-resourceId: money_amount\n      properties:\n        id:\n          description: The id of the Money Amount. This value will be prefixed by `ma_`.\n          type: string\n        currency_code:\n          description: The 3 character currency code that the Money Amount is given in.\n          type: string\n        amount:\n          description: \u003e-\n            The amount in the smallest currecny unit (e.g. cents 100 cents to\n            charge $1) that the Product Variant will cost.\n          type: integer\n        sale_amount:\n          description: \u003e-\n            An optional sale amount that the Product Variant will be available\n            for when defined.\n          type: integer\n        variant_id:\n          description: The id of the Product Variant that the Money Amount belongs to.\n          type: string\n        region_id:\n          description: The id of the Region that the Money Amount is defined for.\n          type: string\n        region:\n          description: The Region that the Money Amount is defined for.\n          anyOf:\n            - $ref: \"#/components/schemas/region\"\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n    note:\n      title: Note\n      description: \u003e-\n        Notes are elements which we can use in association with different\n        resources to allow users to describe additional information in relation\n        to these.\n      x-resourceId: note\n      properties:\n        id:\n          description: The id of the Note. This value will be prefixed by `note_`.\n          type: string\n        resource_type:\n          description: The type of resource that the Note refers to.\n          type: string\n        resource_id:\n          description: The id of the resource that the Note refers to.\n          type: string\n        value:\n          description: The contents of the note.\n          type: string\n        author:\n          description: The author of the note.\n          anyOf:\n            - $ref: \"#/components/schemas/user\"\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    notification_provider:\n      title: Notification Provider\n      description: \u003e-\n        Represents a notification provider plugin and holds its installation\n        status.\n      x-resourceId: notification_provider\n      properties:\n        id:\n          description: The id of the notification provider as given by the plugin.\n          type: string\n        is_installed:\n          description: \u003e-\n            Whether the plugin is installed in the current version. Plugins that\n            are no longer installed are not deleted by will have this field set\n            to `false`.\n          type: boolean\n    notification:\n      title: Notification\n      description: \u003e-\n        Notifications a communications sent via Notification Providers as a\n        reaction to internal events such as `order.placed`. Notifications can be\n        used to show a chronological timeline for communications sent to a\n        Customer regarding an Order, and enables resends.\n      x-resourceId: notification\n      properties:\n        id:\n          description: The id of the Notification. This value will be prefixed by `noti_`.\n          type: string\n        event_name:\n          description: The name of the event that the notification was sent for.\n          type: string\n        resource_type:\n          description: The type of resource that the Notification refers to.\n          type: string\n        resource_id:\n          description: The id of the resource that the Notification refers to.\n          type: string\n        customer_id:\n          description: The id of the Customer that the Notification was sent to.\n          type: string\n        customer:\n          description: The Customer that the Notification was sent to.\n          anyOf:\n            - $ref: \"#/components/schemas/customer\"\n        to:\n          description: \u003e-\n            The address that the Notification was sent to. This will usually be\n            an email address, but represent other addresses such as a chat bot\n            user id\n          type: string\n        data:\n          description: \u003e-\n            The data that the Notification was sent with. This contains all the\n            data necessary for the Notification Provider to initiate a resend.\n          type: object\n        parent_id:\n          description: The id of the Notification that was originally sent.\n          type: string\n        resends:\n          description: \u003e-\n            The resends that have been completed after the original\n            Notification.\n          type: array\n          items:\n            $ref: \"#/components/schemas/notification_resend\"\n        provider_id:\n          description: The id of the Notification Provider that handles the Notification.\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n    notification_resend:\n      title: Notification Resend\n      description: A resend of a Notification.\n      x-resourceId: notification_resend\n      properties:\n        id:\n          description: The id of the Notification. This value will be prefixed by `noti_`.\n          type: string\n        event_name:\n          description: The name of the event that the notification was sent for.\n          type: string\n        resource_type:\n          description: The type of resource that the Notification refers to.\n          type: string\n        resource_id:\n          description: The id of the resource that the Notification refers to.\n          type: string\n        to:\n          description: \u003e-\n            The address that the Notification was sent to. This will usually be\n            an email address, but represent other addresses such as a chat bot\n            user id\n          type: string\n        data:\n          description: \u003e-\n            The data that the Notification was sent with. This contains all the\n            data necessary for the Notification Provider to initiate a resend.\n          type: object\n        parent_id:\n          description: The id of the Notification that was originally sent.\n          type: string\n        provider_id:\n          description: The id of the Notification Provider that handles the Notification.\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n    order:\n      title: Order\n      description: Represents an order\n      x-resourceId: order\n      properties:\n        id:\n          type: string\n        status:\n          type: string\n          enum:\n            - pending\n            - completed\n            - archived\n            - canceled\n            - requires_action\n        fulfillment_status:\n          type: string\n          enum:\n            - not_fulfilled\n            - partially_fulfilled\n            - fulfilled\n            - partially_shipped\n            - shipped\n            - partially_returned\n            - returned\n            - canceled\n            - requires_action\n        payment_status:\n          type: string\n          enum:\n            - not_paid\n            - awaiting\n            - captured\n            - partially_refunded\n            - refuneded\n            - canceled\n            - requires_action\n        display_id:\n          type: integer\n        cart_id:\n          type: string\n        currency_code:\n          type: string\n        tax_rate:\n          type: integer\n        discounts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/discount\"\n        email:\n          type: string\n        billing_address_id:\n          type: string\n        billing_address:\n          anyOf:\n            - $ref: \"#/components/schemas/address\"\n        shipping_address_id:\n          type: string\n        shipping_address:\n          anyOf:\n            - $ref: \"#/components/schemas/address\"\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/line_item\"\n        region_id:\n          type: string\n        region:\n          anyOf:\n            - $ref: \"#/components/schemas/region\"\n        gift_cards:\n          type: array\n          items:\n            $ref: \"#/components/schemas/gift_card\"\n        customer_id:\n          type: string\n        customer:\n          anyOf:\n            - $ref: \"#/components/schemas/customer\"\n        payment_session:\n          anyOf:\n            - $ref: \"#/components/schemas/payment_session\"\n        payment_sessions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/payment_session\"\n        payments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/payment\"\n        shipping_methods:\n          type: array\n          items:\n            $ref: \"#/components/schemas/shipping_method\"\n        fulfillments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/fulfillment\"\n        returns:\n          type: array\n          items:\n            $ref: \"#/components/schemas/return\"\n        claims:\n          type: array\n          items:\n            $ref: \"#/components/schemas/claim_order\"\n        refunds:\n          type: array\n          items:\n            $ref: \"#/components/schemas/refund\"\n        swaps:\n          type: array\n          items:\n            $ref: \"#/components/schemas/refund\"\n        gift_card_transactions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/gift_card_transaction\"\n        canceled_at:\n          type: string\n          format: date-time\n        created_at:\n          type: string\n          format: date-time\n        update_at:\n          type: string\n          format: date-time\n        deleted_at:\n          type: string\n          format: date-time\n        metadata:\n          type: object\n        shipping_total:\n          type: integer\n        discount_total:\n          type: integer\n        tax_total:\n          type: integer\n        subtotal:\n          type: integer\n        refundable_amount:\n          type: integer\n        gift_card_total:\n          type: integer\n        paid_total:\n          type: integer\n        no_notification:\n          description: \u003e-\n            Flag for describing whether or not notifications related to this\n            should be send.\n          type: boolean\n    payment_provider:\n      title: Payment Provider\n      description: Represents a Payment Provider plugin and holds its installation status.\n      x-resourceId: payment_provider\n      properties:\n        id:\n          description: The id of the payment provider as given by the plugin.\n          type: string\n        is_installed:\n          description: \u003e-\n            Whether the plugin is installed in the current version. Plugins that\n            are no longer installed are not deleted by will have this field set\n            to `false`.\n          type: boolean\n    payment_session:\n      title: Payment Session\n      description: \u003e-\n        Payment Sessions are created when a Customer initilizes the checkout\n        flow, and can be used to hold the state of a payment flow. Each Payment\n        Session is controlled by a Payment Provider, who is responsible for the\n        communication with external payment services. Authorized Payment\n        Sessions will eventually get promoted to Payments to indicate that they\n        are authorized for capture/refunds/etc.\n      x-resourceId: payment_session\n      properties:\n        id:\n          description: \u003e-\n            The id of the Payment Session. This value will be prefixed with\n            `ps_`.\n          type: string\n        cart_id:\n          description: The id of the Cart that the Payment Session is created for.\n          type: string\n        provider_id:\n          description: \u003e-\n            The id of the Payment Provider that is responsible for the Payment\n            Session\n          type: string\n        is_selected:\n          description: \u003e-\n            A flag to indicate if the Payment Session has been selected as the\n            method that will be used to complete the purchase.\n          type: boolean\n        status:\n          description: \u003e-\n            Indicates the status of the Payment Session. Will default to\n            `pending`, and will eventually become `authorized`. Payment Sessions\n            may have the status of `requires_more` to indicate that further\n            actions are to be completed by the Customer.\n          type: string\n          enum:\n            - authorized\n            - pending\n            - requires_more\n            - error\n            - canceled\n        data:\n          description: \u003e-\n            The data required for the Payment Provider to identify, modify and\n            process the Payment Session. Typically this will be an object that\n            holds an id to the external payment session, but can be an empty\n            object if the Payment Provider doesn't hold any state.\n          type: object\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n    payment:\n      title: Payment\n      description: \u003e-\n        Payments represent an amount authorized with a given payment method,\n        Payments can be captured, canceled or refunded.\n      x-resourceId: payment\n      properties:\n        id:\n          description: The id of the Payment. This value will be prefixed with `pay_`.\n          type: string\n        swap_id:\n          description: The id of the Swap that the Payment is used for.\n          type: string\n        order_id:\n          description: The id of the Order that the Payment is used for.\n          type: string\n        cart_id:\n          description: The id of the Cart that the Payment Session is created for.\n          type: string\n        amount:\n          description: The amount that the Payment has been authorized for.\n          type: integer\n        currency_code:\n          description: The 3 character ISO currency code that the Payment is completed in.\n          type: string\n        amount_refunded:\n          description: \u003e-\n            The amount of the original Payment amount that has been refunded\n            back to the Customer.\n          type: integer\n        provider_id:\n          description: The id of the Payment Provider that is responsible for the Payment\n          type: string\n        data:\n          description: \u003e-\n            The data required for the Payment Provider to identify, modify and\n            process the Payment. Typically this will be an object that holds an\n            id to the external payment session, but can be an empty object if\n            the Payment Provider doesn't hold any state.\n          type: object\n        captured_at:\n          description: The date with timezone at which the Payment was captured.\n          type: string\n          format: date-time\n        canceled_at:\n          description: The date with timezone at which the Payment was canceled.\n          type: string\n          format: date-time\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    product_collection:\n      title: Product Collection\n      description: Product Collections represents a group of Products that are related.\n      x-resourceId: product_collection\n      properties:\n        id:\n          description: \u003e-\n            The id of the Product Collection. This value will be prefixed with\n            `pcol_`.\n          type: string\n        title:\n          description: The title that the Product Collection is identified by.\n          type: string\n        handle:\n          description: \u003e-\n            A unique string that identifies the Product Collection - can for\n            example be used in slug structures.\n          type: string\n        products:\n          description: The Products contained in the Product Collection.\n          type: array\n          items:\n            type: object\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    product_option_value:\n      title: Product Option Value\n      description: \u003e-\n        A value given to a Product Variant's option set. Product Variant have a\n        Product Option Value for each of the Product Options defined on the\n        Product.\n      x-resourceId: product_option_value\n      properties:\n        id:\n          description: \u003e-\n            The id of the Product Option Value. This value will be prefixed with\n            `optval_`.\n          type: string\n        value:\n          description: \u003e-\n            The value that the Product Variant has defined for the specific\n            Product Option (e.g. if the Product Option is \"Size\" this value\n            could be \"Small\", \"Medium\" or \"Large\").\n          type: string\n        option_id:\n          description: \u003e-\n            The id of the Product Option that the Product Option Value is\n            defined for.\n          type: string\n        variant_id:\n          description: \u003e-\n            The id of the Product Variant that the Product Option Value is\n            defined for.\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    product_option:\n      title: Product Option\n      description: \u003e-\n        Product Options define properties that may vary between different\n        variants of a Product. Common Product Options are \"Size\" and \"Color\",\n        but Medusa doesn't limit what Product Options that can be defined.\n      x-resourceId: product_option\n      properties:\n        id:\n          description: \u003e-\n            The id of the Product Option. This value will be prefixed with\n            `opt_`.\n          type: string\n        title:\n          description: The title that the Product Option is defined by (e.g. \"Size\").\n          type: string\n        values:\n          description: The Product Option Values that are defined for the Product Option.\n          type: array\n          items:\n            $ref: \"#/components/schemas/product_option_value\"\n        product_id:\n          description: The id of the Product that the Product Option is defined for.\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    product_tag:\n      title: Product Tag\n      description: Product Tags can be added to Products for easy filtering and grouping.\n      x-resourceId: product_tag\n      properties:\n        id:\n          description: The id of the Product Tag. This value will be prefixed with `ptag_`.\n          type: string\n        value:\n          description: The value that the Product Tag represents (e.g. \"Pants\").\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    product_type:\n      title: Product Type\n      description: \u003e-\n        Product Type can be added to Products for filtering and reporting\n        purposes.\n      x-resourceId: product_type\n      properties:\n        id:\n          description: \u003e-\n            The id of the Product Type. This value will be prefixed with\n            `ptyp_`.\n          type: string\n        value:\n          description: The value that the Product Type represents (e.g. \"Clothing\").\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    product_variant:\n      title: Product Variant\n      description: \u003e-\n        Product Variants represent a Product with a specific set of Product\n        Option configurations. The maximum number of Product Variants that a\n        Product can have is given by the number of available Product Option\n        combinations.\n      x-resourceId: product_variant\n      properties:\n        id:\n          description: \u003e-\n            The id of the Product Variant. This value will be prefixed with\n            `variant_`.\n          type: string\n        title:\n          description: \u003e-\n            A title that can be displayed for easy identification of the Product\n            Variant.\n          type: string\n        product_id:\n          description: The id of the Product that the Product Variant belongs to.\n          type: string\n        prices:\n          description: \u003e-\n            The Money Amounts defined for the Product Variant. Each Money Amount\n            represents a price in a given currency or a price in a specific\n            Region.\n          type: array\n          items:\n            $ref: \"#/components/schemas/money_amount\"\n        sku:\n          description: \u003e-\n            The unique stock keeping unit used to identify the Product Variant.\n            This will usually be a unqiue identifer for the item that is to be\n            shipped, and can be referenced across multiple systems.\n          type: string\n        barcode:\n          description: \u003e-\n            A generic field for a GTIN number that can be used to identify the\n            Product Variant.\n          type: string\n        ean:\n          description: \u003e-\n            An EAN barcode number that can be used to identify the Product\n            Variant.\n          type: string\n        upc:\n          description: \u003e-\n            A UPC barcode number that can be used to identify the Product\n            Variant.\n          type: string\n        inventory_quantity:\n          description: The current quantity of the item that is stocked.\n          type: integer\n        allow_backorder:\n          description: \u003e-\n            Whether the Product Variant should be purchasable when\n            `inventory_quantity` is 0.\n          type: boolean\n        manage_inventory:\n          description: Whether Medusa should manage inventory for the Product Variant.\n          type: boolean\n        hs_code:\n          description: \u003e-\n            The Harmonized System code of the Product Variant. May be used by\n            Fulfillment Providers to pass customs information to shipping\n            carriers.\n          type: string\n        origin_country:\n          description: \u003e-\n            The country in which the Product Variant was produced. May be used\n            by Fulfillment Providers to pass customs information to shipping\n            carriers.\n          type: string\n        mid_code:\n          description: \u003e-\n            The Manufacturers Identification code that identifies the\n            manufacturer of the Product Variant. May be used by Fulfillment\n            Providers to pass customs information to shipping carriers.\n          type: string\n        material:\n          description: \u003e-\n            The material and composition that the Product Variant is made of,\n            May be used by Fulfillment Providers to pass customs information to\n            shipping carriers.\n          type: string\n        weight:\n          description: \u003e-\n            The weight of the Product Variant. May be used in shipping rate\n            calculations.\n          type: string\n        height:\n          description: \u003e-\n            The height of the Product Variant. May be used in shipping rate\n            calculations.\n          type: string\n        width:\n          description: \u003e-\n            The width of the Product Variant. May be used in shipping rate\n            calculations.\n          type: string\n        length:\n          description: \u003e-\n            The length of the Product Variant. May be used in shipping rate\n            calculations.\n          type: string\n        options:\n          description: The Product Option Values specified for the Product Variant.\n          type: array\n          items:\n            $ref: \"#/components/schemas/product_option_value\"\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    product:\n      title: Product\n      description: \u003e-\n        Products are a grouping of Product Variants that have common properties\n        such as images and descriptions. Products can have multiple options\n        which define the properties that Product Variants differ by.\n      x-resourceId: product\n      properties:\n        id:\n          description: The id of the Product. This value will be prefixed with `prod_`.\n          type: string\n        title:\n          description: \u003e-\n            A title that can be displayed for easy identification of the\n            Product.\n          type: string\n        subtitle:\n          description: \u003e-\n            An optional subtitle that can be used to further specify the\n            Product.\n          type: string\n        description:\n          description: A short description of the Product.\n          type: string\n        handle:\n          description: A unique identifier for the Product (e.g. for slug structure).\n          type: string\n        is_giftcard:\n          description: \u003e-\n            Whether the Product represents a Gift Card. Products that represent\n            Gift Cards will automatically generate a redeemable Gift Card code\n            once they are purchased.\n          type: boolean\n        discountable:\n          description: \u003e-\n            Whether the Product can be discounted. Discounts will not apply to\n            Line Items of this Product when this flag is set to `false`.\n          type: boolean\n        images:\n          description: Images of the Product\n          type: array\n          items:\n            $ref: \"#/components/schemas/image\"\n        thumbnail:\n          description: A URL to an image file that can be used to identify the Product.\n          type: string\n        options:\n          description: \u003e-\n            The Product Options that are defined for the Product. Product\n            Variants of the Product will have a unique combination of Product\n            Option Values.\n          type: array\n          items:\n            $ref: \"#/components/schemas/product_option\"\n        variants:\n          description: \u003e-\n            The Product Variants that belong to the Product. Each will have a\n            unique combination of Product Option Values.\n          type: array\n          items:\n            $ref: \"#/components/schemas/product_variant\"\n        profile_id:\n          description: \u003e-\n            The id of the Shipping Profile that the Product belongs to. Shipping\n            Profiles have a set of defined Shipping Options that can be used to\n            Fulfill a given set of Products.\n          type: string\n        hs_code:\n          description: \u003e-\n            The Harmonized System code of the Product Variant. May be used by\n            Fulfillment Providers to pass customs information to shipping\n            carriers.\n          type: string\n        origin_country:\n          description: \u003e-\n            The country in which the Product Variant was produced. May be used\n            by Fulfillment Providers to pass customs information to shipping\n            carriers.\n          type: string\n        mid_code:\n          description: \u003e-\n            The Manufacturers Identification code that identifies the\n            manufacturer of the Product Variant. May be used by Fulfillment\n            Providers to pass customs information to shipping carriers.\n          type: string\n        material:\n          description: \u003e-\n            The material and composition that the Product Variant is made of,\n            May be used by Fulfillment Providers to pass customs information to\n            shipping carriers.\n          type: string\n        weight:\n          description: \u003e-\n            The weight of the Product Variant. May be used in shipping rate\n            calculations.\n          type: string\n        height:\n          description: \u003e-\n            The height of the Product Variant. May be used in shipping rate\n            calculations.\n          type: string\n        width:\n          description: \u003e-\n            The width of the Product Variant. May be used in shipping rate\n            calculations.\n          type: string\n        length:\n          description: \u003e-\n            The length of the Product Variant. May be used in shipping rate\n            calculations.\n          type: string\n        type:\n          description: The Product Type of the Product (e.g. \"Clothing\")\n          anyOf:\n            - $ref: \"#/components/schemas/product_type\"\n        collection:\n          description: The Product Collection that the Product belongs to (e.g. \"SS20\")\n          anyOf:\n            - $ref: \"#/components/schemas/product_collection\"\n        tags:\n          description: The Product Tags assigned to the Product.\n          type: array\n          items:\n            $ref: \"#/components/schemas/product_tag\"\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    refund:\n      title: Refund\n      description: \u003e-\n        Refund represent an amount of money transfered back to the Customer for\n        a given reason. Refunds may occur in relation to Returns, Swaps and\n        Claims, but can also be initiated by a store operator.\n      x-resourceId: refund\n      properties:\n        id:\n          description: The id of the Refund. This value will be prefixed with `ref_`.\n          type: string\n        order_id:\n          description: The id of the Order that the Refund is related to.\n          type: string\n        amount:\n          description: The amount that has be refunded to the Customer.\n          type: integer\n        note:\n          description: An optional note explaining why the amount was refunded.\n          type: string\n        reason:\n          description: \u003e-\n            The reason given for the Refund, will automatically be set when\n            processed as part of a Swap, Claim or Return.\n          type: string\n          enum:\n            - discount\n            - return\n            - swap\n            - claim\n            - other\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    region:\n      title: Region\n      description: \u003e-\n        Regions hold settings for how Customers in a given geographical location\n        shop. The is, for example, where currencies and tax rates are defined. A\n        Region can consist of multiple countries to accomodate common shopping\n        settings across countries.\n      x-resourceId: region\n      properties:\n        id:\n          description: The id of the Region. This value will be prefixed with `reg_`.\n          type: string\n        name:\n          description: \u003e-\n            The name of the region as displayed to the customer. If the Region\n            only has one country it is recommended to write the country name.\n          type: string\n        currency_code:\n          description: \u003e-\n            The 3 character ISO currency code that Customers will shop in in the\n            Region.\n          type: string\n        tax_rate:\n          description: The tax rate that should be charged on purchases in the Region.\n          type: number\n        tax_code:\n          description: \u003e-\n            The tax code used on purchases in the Region. This may be used by\n            other systems for accounting purposes.\n          type: string\n        countries:\n          description: The countries that are included in the Region.\n          type: array\n          items:\n            $ref: \"#/components/schemas/country\"\n        payment_providers:\n          description: \u003e-\n            The Payment Providers that can be used to process Payments in the\n            Region.\n          type: array\n          items:\n            $ref: \"#/components/schemas/payment_provider\"\n        fulfillment_providers:\n          description: \u003e-\n            The Fulfillment Providers that can be used to fulfill orders in the\n            Region.\n          type: array\n          items:\n            $ref: \"#/components/schemas/fulfillment_provider\"\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    return_item:\n      title: Return Item\n      description: \u003e-\n        Correlates a Line Item with a Return, keeping track of the quantity of\n        the Line Item that will be returned.\n      x-resourceId: return_item\n      properties:\n        return_id:\n          description: The id of the Return that the Return Item belongs to.\n          type: string\n        item_id:\n          description: The id of the Line Item that the Return Item references.\n          type: string\n        item:\n          description: The Line Item that the Return Item references.\n          anyOf:\n            - $ref: \"#/components/schemas/line_item\"\n        quantity:\n          description: The quantity of the Line Item that is included in the Return.\n          type: integer\n        is_requested:\n          description: \u003e-\n            Whether the Return Item was requested initially or received\n            unexpectedly in the warehouse.\n          type: boolean\n        requested_quantity:\n          description: The quantity that was originally requested to be returned.\n          type: integer\n        recieved_quantity:\n          description: The quantity that was received in the warehouse.\n          type: integer\n        reason:\n          description: The reason for returning the item.\n          anyOf:\n            - $ref: \"#/components/schemas/return_reason\"\n        note:\n          description: An optional note with additional details about the Return.\n          type: string\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    return_reason:\n      title: Return Reason\n      description: \u003e-\n        A Reason for why a given product is returned. A Return Reason can be\n        used on Return Items in order to indicate why a Line Item was returned.\n      x-resourceId: return_reason\n      properties:\n        id:\n          description: The id of the Return Reason will start with `rr_`.\n          type: string\n        description:\n          description: A description of the Reason.\n          type: string\n        label:\n          description: A text that can be displayed to the Customer as a reason.\n          type: string\n        value:\n          description: The value to identify the reason by.\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    return:\n      title: Return\n      description: \u003e-\n        Return orders hold information about Line Items that a Customer wishes\n        to send back, along with how the items will be returned. Returns can be\n        used as part of a Swap.\n      x-resourceId: return\n      properties:\n        id:\n          description: The id of the Return. This value will be prefixed with `ret_`.\n          type: string\n        status:\n          description: Status of the Return.\n          type: string\n          enum:\n            - requested\n            - received\n            - requires_action\n        items:\n          description: \u003e-\n            The Return Items that will be shipped back to the warehouse. type:\n            array items: $ref:\n        swap_id:\n          description: The id of the Swap that the Return is a part of.\n          type: string\n        order_id:\n          description: The id of the Order that the Return is made from.\n          type: string\n        claim_order_id:\n          description: The id of the Claim that the Return is a part of.\n          type: string\n        shipping_method:\n          description: \u003e-\n            The Shipping Method that will be used to send the Return back. Can\n            be null if the Customer facilitates the return shipment themselves.\n          anyOf:\n            - $ref: \"#/components/schemas/shipping_method\"\n        shipping_data:\n          description: \u003e-\n            Data about the return shipment as provided by the Fulfilment\n            Provider that handles the return shipment.\n          type: object\n        refund_amount:\n          description: The amount that should be refunded as a result of the return.\n          type: integer\n        received_at:\n          description: The date with timezone at which the return was received.\n          type: string\n          format: date-time\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        no_notification:\n          description: \u003e-\n            When set to true, no notification will be sent related to this\n            return.\n          type: boolean\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    shipping_method:\n      title: Shipping Method\n      description: \u003e-\n        Shipping Methods represent a way in which an Order or Return can be\n        shipped. Shipping Methods are built from a Shipping Option, but may\n        contain additional details, that can be necessary for the Fulfillment\n        Provider to handle the shipment.\n      x-resourceId: shipping_method\n      properties:\n        id:\n          description: \u003e-\n            The id of the Shipping Method. This value will be prefixed with\n            `sm_`.\n          type: string\n        shipping_option_id:\n          description: \u003e-\n            The id of the Shipping Option that the Shipping Method is built\n            from.\n          type: string\n        shipping_option:\n          description: The Shipping Option that the Shipping Method is built from.\n          anyOf:\n            - $ref: \"#/components/schemas/shipping_option\"\n        order_id:\n          description: The id of the Order that the Shipping Method is used on.\n          type: string\n        return_id:\n          description: The id of the Return that the Shipping Method is used on.\n          type: string\n        swap_id:\n          description: The id of the Swap that the Shipping Method is used on.\n          type: string\n        cart_id:\n          description: The id of the Cart that the Shipping Method is used on.\n          type: string\n        claim_order_id:\n          description: The id of the Claim that the Shipping Method is used on.\n          type: string\n        price:\n          description: \u003e-\n            The amount to charge for the Shipping Method. The currency of the\n            price is defined by the Region that the Order that the Shipping\n            Method belongs to is a part of.\n          type: integer\n        data:\n          description: \u003e-\n            Additional data that the Fulfillment Provider needs to fulfill the\n            shipment. This is used in combination with the Shipping Options\n            data, and may contain information such as a drop point id.\n          type: object\n    shipping_option_requirement:\n      title: Shipping Option Requirement\n      description: \u003e-\n        A requirement that a Cart must satisfy for the Shipping Option to be\n        available to the Cart.\n      x-resourceId: shipping_option_requirement\n      properties:\n        id:\n          description: \u003e-\n            The id of the Shipping Option Requirement. This value will be\n            prefixed with `sor_`.\n          type: string\n        shipping_option_id:\n          description: \u003e-\n            The id of the Shipping Option that the Shipping Option Requirement\n            belongs to.\n          type: string\n        type:\n          description: \u003e-\n            The type of the requirement, this defines how the value will be\n            compared to the Cart's total. `min_subtotal` requirements define the\n            minimum subtotal that is needed for the Shipping Option to be\n            available, while the `max_subtotal` defines the maximum subtotal\n            that the Cart can have for the Shipping Option to be available.\n          type: string\n          enum:\n            - min_subtotal\n            - max_subtotal\n        amount:\n          description: The amount to compare the Cart subtotal to.\n          type: integer\n    shipping_option:\n      title: Shipping Option\n      description: \u003e-\n        Shipping Options represent a way in which an Order or Return can be\n        shipped. Shipping Options have an associated Fulfillment Provider that\n        will be used when the fulfillment of an Order is initiated. Shipping\n        Options themselves cannot be added to Carts, but serve as a template for\n        Shipping Methods. This distinction makes it possible to customize\n        individual Shipping Methods with additional information.\n      x-resourceId: shipping_option\n      properties:\n        id:\n          description: \u003e-\n            The id of the Shipping Option. This value will be prefixed with\n            `so_`.\n          type: string\n        name:\n          description: \u003e-\n            The name given to the Shipping Option - this may be displayed to the\n            Customer.\n          type: string\n        region_id:\n          description: The id of the Region that the Shipping Option belongs to.\n          type: string\n        region:\n          description: The id of the Region that the Shipping Option belongs to.\n          anyOf:\n            - $ref: \"#/components/schemas/region\"\n        profile_id:\n          description: \u003e-\n            The id of the Shipping Profile that the Shipping Option belongs to.\n            Shipping Profiles have a set of defined Shipping Options that can be\n            used to Fulfill a given set of Products.\n          type: string\n        provider_id:\n          description: \u003e-\n            The id of the Fulfillment Provider, that will be used to process\n            Fulfillments from the Shipping Option.\n          type: string\n        price_type:\n          description: \u003e-\n            The type of pricing calculation that is used when creatin Shipping\n            Methods from the Shipping Option. Can be `flat_rate` for fixed\n            prices or `calculated` if the Fulfillment Provider can provide price\n            calulations.\n          type: string\n          enum:\n            - flat_rate\n            - calculated\n        amount:\n          description: \u003e-\n            The amount to charge for shipping when the Shipping Option price\n            type is `flat_rate`.\n          type: integer\n        is_return:\n          description: \u003e-\n            Flag to indicate if the Shipping Option can be used for Return\n            shipments.\n          type: boolean\n        requirements:\n          description: \u003e-\n            The requirements that must be satisfied for the Shipping Option to\n            be available for a Cart.\n          type: array\n          items:\n            $ref: \"#/components/schemas/shipping_option_requirement\"\n        data:\n          description: \u003e-\n            The data needed for the Fulfillment Provider to identify the\n            Shipping Option.\n          type: object\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    shipping_profile:\n      title: Shipping Profile\n      description: \u003e-\n        Shipping Profiles have a set of defined Shipping Options that can be\n        used to fulfill a given set of Products.\n      x-resourceId: shipping_profile\n      properties:\n        id:\n          description: \u003e-\n            The id of the Shipping Profile. This value will be prefixed with\n            `sp_`.\n          type: string\n        name:\n          description: \u003e-\n            The name given to the Shipping profile - this may be displayed to\n            the Customer.\n          type: string\n        type:\n          description: \u003e-\n            The type of the Shipping Profile, may be `default`, `gift_card` or\n            `custom`.\n          type: string\n          enum:\n            - default\n            - gift_card\n            - custom\n        products:\n          description: The Products that the Shipping Profile defines Shipping Options for.\n          type: array\n          items:\n            $ref: \"#/components/schemas/product\"\n        shipping_options:\n          description: \u003e-\n            The Shipping Options that can be used to fulfill the Products in the\n            Shipping Profile.\n          type: array\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/shipping_option\"\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    store:\n      title: Store\n      description: \"Holds settings for the Store, such as name, currencies, etc.\"\n      x-resourceId: store\n      properties:\n        id:\n          description: The id of the Store. This value will be prefixed with `store_`.\n          type: string\n        name:\n          description: The name of the Store - this may be displayed to the Customer.\n          type: string\n        default_currency_code:\n          description: \u003e-\n            The default currency code used when no other currency code is\n            specified.\n          type: string\n        currencies:\n          description: The currencies that are enabled for the Store.\n          type: array\n          items:\n            $ref: \"#/components/schemas/currency\"\n        swap_link_template:\n          description: \u003e-\n            A template to generate Swap links from use {{cart_id}} to include\n            the Swap's `cart_id` in the link.\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    swap:\n      title: Swap\n      description: \u003e-\n        Swaps can be created when a Customer wishes to exchange Products that\n        they have purchased to different Products. Swaps consist of a Return of\n        previously purchased Products and a Fulfillment of new Products, the\n        amount paid for the Products being returned will be used towards payment\n        for the new Products. In the case where the amount paid for the the\n        Products being returned exceed the amount to be paid for the new\n        Products, a Refund will be issued for the difference.\n      x-resourceId: swap\n      properties:\n        id:\n          description: The id of the Swap. This value will be prefixed with `swap_`.\n          type: string\n        fulfillment_status:\n          description: The status of the Fulfillment of the Swap.\n          type: string\n          enum:\n            - not_fulfilled\n            - partially_fulfilled\n            - fulfilled\n            - partially_shipped\n            - shipped\n            - partially_returned\n            - returned\n            - canceled\n            - requires_action\n        payment_status:\n          description: \u003e-\n            The status of the Payment of the Swap. The payment may either refer\n            to the refund of an amount or the authorization of a new amount.\n          type: string\n          enum:\n            - not_paid\n            - awaiting\n            - captured\n            - canceled\n            - difference_refunded\n            - requires_action\n        order_id:\n          description: \u003e-\n            The id of the Order where the Line Items to be returned where\n            purchased.\n          type: string\n        additional_items:\n          description: The new Line Items to ship to the Customer.\n          type: array\n          items:\n            $ref: \"#/components/schemas/line_item\"\n        return_order:\n          description: The Return that is issued for the return part of the Swap.\n          anyOf:\n            - $ref: \"#/components/schemas/return\"\n        fulfillments:\n          description: The Fulfillments used to send the new Line Items.\n          type: array\n          items:\n            $ref: \"#/components/schemas/fulfillment\"\n        payment:\n          description: \u003e-\n            The Payment authorized when the Swap requires an additional amount\n            to be charged from the Customer.\n          anyOf:\n            - $ref: \"#/components/schemas/payment\"\n        difference_due:\n          description: \u003e-\n            The difference that is paid or refunded as a result of the Swap. May\n            be negative when the amount paid for the returned items exceed the\n            total of the new Products.\n          type: integer\n        shipping_address:\n          description: \u003e-\n            The Address to send the new Line Items to - in most cases this will\n            be the same as the shipping address on the Order.\n          anyOf:\n            - $ref: \"#/components/schemas/address\"\n        shipping_methods:\n          description: The Shipping Methods used to fulfill the addtional items purchased.\n          type: array\n          items:\n            $ref: \"#/components/schemas/shipping_method\"\n        cart_id:\n          description: The id of the Cart that the Customer will use to confirm the Swap.\n          type: string\n        allow_backorder:\n          description: \"If true, swaps can be completed with items out of stock\"\n          type: boolean\n        confirmed_at:\n          description: \u003e-\n            The date with timezone at which the Swap was confirmed by the\n            Customer.\n          type: string\n          format: date-time\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        canceled_at:\n          description: The date with timezone at which the Swap was canceled.\n          type: string\n          format: date-time\n        no_notification:\n          description: \"If set to true, no notification will be sent related to this swap\"\n          type: boolean\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    tracking_link:\n      title: Tracking Link\n      description: \u003e-\n        Tracking Link holds information about tracking numbers for a\n        Fulfillment. Tracking Links can optionally contain a URL that can be\n        visited to see the status of the shipment.\n      x-resourceId: tracking_link\n      properties:\n        id:\n          description: \u003e-\n            The id of the Tracking Link. This value will be prefixed with\n            `tlink_`.\n          type: string\n        url:\n          description: The URL at which the status of the shipment can be tracked.\n          type: string\n        tracking_number:\n          description: The tracking number given by the shipping carrier.\n          type: string\n        fulfillment_id:\n          description: The id of the Fulfillment that the Tracking Link references.\n          type: string\n        created_at:\n          description: The date with timezone at which the resource was created.\n          type: string\n          format: date-time\n        updated_at:\n          description: The date with timezone at which the resource was last updated.\n          type: string\n          format: date-time\n        deleted_at:\n          description: The date with timezone at which the resource was deleted.\n          type: string\n          format: date-time\n        metadata:\n          description: An optional key-value map with additional information.\n          type: object\n    user:\n      title: User\n      description: Represents a User who can manage store settings.\n      x-resourceId: user\n      properties:\n        id:\n          description: The unique id of the User. This will be prefixed with `usr_`\n          type: string\n        email:\n          description: The email of the User\n          type: string\n        first_name:\n          type: string\n        last_name:\n          description: The Customer's billing address.\n          anyOf:\n            - $ref: \"#/components/schemas/address\"\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        deleted_at:\n          type: string\n          format: date-time\n        metadata:\n          type: object\n"
		}
	},
	"Error": "buildIR: make ir: path \"/orders/cart/{cart_id}\": get: responses: 200: contents: application/json: schema: save schema types: save referenced type: reference \"#/components/schemas/product_collection\" type name conflict: \"ProductCollection\""
}