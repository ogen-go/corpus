{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PRODYNA/capt-mifune"
		},
		"file": {
			"name": "mifune.openapi.yaml",
			"size": 0,
			"path": "ui/src/openapi/mifune.openapi.yaml",
			"byteSize": 19467,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  title: Mifune API\n  version: 1.0.0-SNAPSHOT\nsecurity:\n- access_token: []\ntags:\n- name: admin\n- name: domain\n- name: graph\n- name: node\n- name: relation\npaths:\n  /api/apocalypse:\n    get:\n      tags:\n      - admin\n      summary: Reset the whole database\n      description: |\n        Remove all nodes and relation and delete each constraint and index\n      responses:\n        \"200\":\n          description: OK\n          content:\n            text/event-stream:\n              schema:\n                type: array\n                items:\n                  type: string\n  /api/data:\n    post:\n      tags:\n      - Data Resource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  additionalProperties:\n                    type: object\n  /api/data/domain/{domainId}/keys:\n    get:\n      tags:\n      - Data Resource\n      parameters:\n      - name: domainId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /api/graph:\n    get:\n      tags:\n      - graph\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Graph'\n    post:\n      tags:\n      - graph\n      responses:\n        \"201\":\n          description: Created\n  /api/graph/domain:\n    post:\n      tags:\n      - domain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainCreate'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Domain'\n  /api/graph/domain/fn/count:\n    get:\n      tags:\n      - domain\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  format: int64\n                  type: integer\n  /api/graph/domain/fn/statistics:\n    get:\n      tags:\n      - graph\n      responses:\n        \"200\":\n          description: OK\n          content:\n            text/event-stream:\n              schema:\n                type: array\n                items:\n                  type: object\n                  additionalProperties:\n                    format: int64\n                    type: integer\n  /api/graph/domain/{domainId}/clear:\n    delete:\n      tags:\n      - graph\n      parameters:\n      - name: domainId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n  /api/graph/domain/{domainId}/import:\n    get:\n      tags:\n      - graph\n      parameters:\n      - name: domainId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n    delete:\n      tags:\n      - graph\n      parameters:\n      - name: domainId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n  /api/graph/domain/{domainId}/mapping:\n    get:\n      tags:\n      - graph\n      parameters:\n      - name: domainId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: string\n  /api/graph/domain/{id}:\n    get:\n      tags:\n      - domain\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Domain'\n    put:\n      tags:\n      - domain\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainUpdate'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Domain'\n    delete:\n      tags:\n      - domain\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphDelta'\n  /api/graph/domains:\n    get:\n      tags:\n      - domain\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Domain'\n  /api/graph/node:\n    post:\n      tags:\n      - node\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NodeCreate'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphDelta'\n  /api/graph/node/{id}:\n    put:\n      tags:\n      - node\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NodeUpdate'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphDelta'\n    delete:\n      tags:\n      - node\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphDelta'\n  /api/graph/relation:\n    post:\n      tags:\n      - relation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationCreate'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphDelta'\n  /api/graph/relation/{id}:\n    put:\n      tags:\n      - relation\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationUpdate'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphDelta'\n    delete:\n      tags:\n      - relation\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UUID'\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphDelta'\n  /api/graph/reset:\n    post:\n      tags:\n      - graph\n      responses:\n        \"201\":\n          description: Created\n  /api/graph/stats:\n    get:\n      tags:\n      - graph\n      responses:\n        \"200\":\n          description: OK\n          content:\n            text/event-stream:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GraphStatistics'\n  /api/sources:\n    get:\n      tags:\n      - Source Resource\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Source'\n    post:\n      tags:\n      - Source Resource\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/MultipartBody'\n      responses:\n        \"200\":\n          description: OK\ncomponents:\n  schemas:\n    Domain:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUID'\n        name:\n          type: string\n        rootNodeId:\n          $ref: '#/components/schemas/UUID'\n        file:\n          type: string\n        columnMapping:\n          type: object\n          additionalProperties:\n            type: string\n        modelValid:\n          type: boolean\n        mappingValid:\n          type: boolean\n    DomainCreate:\n      type: object\n      properties:\n        name:\n          type: string\n        rootNodeId:\n          $ref: '#/components/schemas/UUID'\n        file:\n          type: string\n        columnMapping:\n          type: object\n          additionalProperties:\n            type: string\n    DomainUpdate:\n      type: object\n      properties:\n        name:\n          type: string\n        rootNodeId:\n          $ref: '#/components/schemas/UUID'\n        file:\n          type: string\n        columnMapping:\n          type: object\n          additionalProperties:\n            type: string\n    FileUpload:\n      type: object\n    Filter:\n      type: object\n      properties:\n        function:\n          $ref: '#/components/schemas/FilterFunction'\n        property:\n          type: string\n        value:\n          type: object\n          anyOf:\n          - format: int32\n            type: integer\n          - format: int64\n            type: integer\n          - format: float\n            type: number\n          - type: boolean\n          - type: string\n    FilterFunction:\n      enum:\n      - EQUAL\n      - GREATER\n      - LESS\n      type: string\n    Graph:\n      type: object\n      properties:\n        domains:\n          type: array\n          items:\n            $ref: '#/components/schemas/Domain'\n        nodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Node'\n        relations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Relation'\n    GraphDelta:\n      type: object\n      properties:\n        trigger:\n          $ref: '#/components/schemas/UUID'\n        changedDomains:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Domain'\n        removedDomains:\n          uniqueItems: true\n          type: array\n          items:\n            format: uuid\n            pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n            type: string\n        changedNodes:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Node'\n        removedNodes:\n          uniqueItems: true\n          type: array\n          items:\n            format: uuid\n            pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n            type: string\n        changedRelations:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Relation'\n        removedRelations:\n          uniqueItems: true\n          type: array\n          items:\n            format: uuid\n            pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n            type: string\n    GraphStatistics:\n      type: object\n      properties:\n        nodes:\n          format: int64\n          type: integer\n        relations:\n          format: int64\n          type: integer\n    MultipartBody:\n      type: object\n      properties:\n        file:\n          $ref: '#/components/schemas/FileUpload'\n        name:\n          type: string\n    Node:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUID'\n        label:\n          type: string\n        domainIds:\n          uniqueItems: true\n          type: array\n          items:\n            format: uuid\n            pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n            type: string\n        color:\n          type: string\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Property'\n    NodeCreate:\n      required:\n      - label\n      type: object\n      properties:\n        label:\n          pattern: \\S\n          type: string\n          nullable: false\n        domainIds:\n          minItems: 1\n          uniqueItems: true\n          type: array\n          items:\n            format: uuid\n            pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n            type: string\n        color:\n          type: string\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Property'\n    NodeUpdate:\n      required:\n      - label\n      type: object\n      properties:\n        label:\n          pattern: \\S\n          type: string\n          nullable: false\n        domainIds:\n          minItems: 1\n          uniqueItems: true\n          type: array\n          items:\n            format: uuid\n            pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n            type: string\n        color:\n          type: string\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Property'\n    Property:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/PropertyType'\n        primary:\n          type: boolean\n    PropertyType:\n      enum:\n      - int\n      - long\n      - double\n      - float\n      - string\n      - boolean\n      - date\n      type: string\n    Query:\n      type: object\n      properties:\n        nodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/QueryNode'\n        relations:\n          type: array\n          items:\n            $ref: '#/components/schemas/QueryRelation'\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/QueryResultDefinition'\n        orders:\n          type: array\n          items:\n            type: string\n        filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/Filter'\n        distinct:\n          type: boolean\n        limit:\n          format: int64\n          type: integer\n    QueryFunction:\n      enum:\n      - avg\n      - count\n      - hierarchyCalculation\n      - max\n      - min\n      - sum\n      - value\n      type: string\n    QueryNode:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUID'\n        varName:\n          type: string\n        nodeId:\n          $ref: '#/components/schemas/UUID'\n    QueryRelation:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUID'\n        varName:\n          type: string\n        relationId:\n          $ref: '#/components/schemas/UUID'\n        sourceId:\n          $ref: '#/components/schemas/UUID'\n        targetId:\n          $ref: '#/components/schemas/UUID'\n        depth:\n          type: string\n    QueryResultDefinition:\n      type: object\n      properties:\n        name:\n          type: string\n        function:\n          $ref: '#/components/schemas/QueryFunction'\n        parameters:\n          type: array\n          items:\n            type: string\n    Relation:\n      required:\n      - type\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UUID'\n        sourceId:\n          $ref: '#/components/schemas/UUID'\n        targetId:\n          $ref: '#/components/schemas/UUID'\n        domainIds:\n          uniqueItems: true\n          type: array\n          items:\n            format: uuid\n            pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n            type: string\n        type:\n          pattern: \\S\n          type: string\n          nullable: false\n        primary:\n          type: boolean\n        multiple:\n          type: boolean\n        color:\n          type: string\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Property'\n    RelationCreate:\n      required:\n      - type\n      - sourceId\n      - targetId\n      - domainIds\n      type: object\n      properties:\n        type:\n          pattern: \\S\n          type: string\n          nullable: false\n        sourceId:\n          allOf:\n          - $ref: '#/components/schemas/UUID'\n          - nullable: false\n        targetId:\n          allOf:\n          - $ref: '#/components/schemas/UUID'\n          - nullable: false\n        domainIds:\n          minItems: 1\n          uniqueItems: true\n          type: array\n          items:\n            format: uuid\n            pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n            type: string\n          nullable: false\n        primary:\n          type: boolean\n        multiple:\n          type: boolean\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Property'\n    RelationUpdate:\n      required:\n      - type\n      - domainIds\n      type: object\n      properties:\n        type:\n          pattern: \\S\n          type: string\n          nullable: false\n        domainIds:\n          minItems: 1\n          uniqueItems: true\n          type: array\n          items:\n            format: uuid\n            pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n            type: string\n          nullable: false\n        primary:\n          type: boolean\n        multiple:\n          type: boolean\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Property'\n    Source:\n      type: object\n      properties:\n        name:\n          type: string\n        header:\n          type: array\n          items:\n            type: string\n    UUID:\n      format: uuid\n      pattern: \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\"\n      type: string\n  securitySchemes:\n    access_token:\n      type: http\n      scheme: Bearer\n",
			"canonicalURL": "/github.com/PRODYNA/capt-mifune@2a52ac59bf93cd57ad9b4ba4b3cf7e8bd18d5f5f/-/blob/ui/src/openapi/mifune.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PRODYNA/capt-mifune/blob/2a52ac59bf93cd57ad9b4ba4b3cf7e8bd18d5f5f/ui/src/openapi/mifune.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/api/graph/relation\": post: requestBody: contents: application/json: generate schema: field sourceId: allOf: schema type mismatch: string and ",
	"NotImplemented": [
		"complex anyOf",
		"http security scheme",
		"unsupported content types"
	]
}