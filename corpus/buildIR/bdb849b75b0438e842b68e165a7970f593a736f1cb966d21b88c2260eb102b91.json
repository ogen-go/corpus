{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mojaloop/pisp-project"
		},
		"file": {
			"name": "api_spec.yaml",
			"size": 0,
			"path": "docker-local/ml-testing-toolkit/spec_files/api_definitions/thirdparty_sdk_outbound_0.1.1/api_spec.yaml",
			"byteSize": 71415,
			"content": "openapi: 3.0.1\ninfo:\n  title: Mojaloop Thirdparty Outbound SDK\n  description: \u003e\n    Specification for the Thirdparty Outbound SDK API.\n\n    This API is a synchronous API which makes integrating with the Mojaloop 3rd\n    Party API easier. \n\n    Please see other documentation on\n    https://github.com/mojaloop/thirdparty-sdk for more information.\n  license:\n    name: Apache 2.0\n  version: 0.1.1\nservers:\n  - url: 'http://sandbox.mojaloop.io/switch-ttk-backend'\n    description: The mock 3p-scheme-adapter server running in the Mojaloop Sandbox\n  - url: 'http://localhost:15000'\n    description: A locally running TTK instance\npaths:\n  /health:\n    get:\n      tags:\n        - health\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '405':\n          $ref: '#/components/responses/405'\n        '406':\n          $ref: '#/components/responses/406'\n        '501':\n          $ref: '#/components/responses/501'\n        '503':\n          $ref: '#/components/responses/503'\n      operationId: HealthGet\n      summary: Health check endpoint\n      description: \u003e-\n        The HTTP request GET /health is used to return the current status of the\n        API.\n  /metrics:\n    get:\n      tags:\n        - health\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '405':\n          $ref: '#/components/responses/405'\n        '406':\n          $ref: '#/components/responses/406'\n        '501':\n          $ref: '#/components/responses/501'\n        '503':\n          $ref: '#/components/responses/503'\n      operationId: MetricsGet\n      summary: Prometheus metrics endpoint\n      description: The HTTP request GET /metrics is used to return metrics for the API.\n  /thirdpartyTransaction/partyLookup:\n    post:\n      operationId: ThirdpartyTransactionPartyLookup\n      summary: Thirdparty transaction party lookup.\n      description: \u003e\n        The HTTP request `POST /thirdpartyTransaction/partyLookup` is used to\n        lookup information regarding the requested Party, defined by `Type`,\n        `ID` and optionally `SubId`.\n      tags:\n        - thirdpartyRequests\n      requestBody:\n        description: Thirdparty transaction party lookup body.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ThirdpartyTransactionPartyLookupRequest'\n            example:\n              transactionRequestId: b51ec534-ee48-4575-b6a9-ead2955b8069\n              payee:\n                partyIdType: MSISDN\n                partyIdentifier: '16135551212'\n      responses:\n        '200':\n          $ref: '#/components/responses/ThirdpartyTransactionPartyLookupResponse'\n        default:\n          $ref: '#/components/responses/400'\n  '/thirdpartyTransaction/{ID}/initiate':\n    post:\n      operationId: ThirdpartyTransactionIDInitiate\n      summary: Initiates a third party transaction.\n      description: \u003e\n        The HTTP request `POST /thirdpartyTransaction/{ID}/initiate` is sent to\n        the Switch to initiate a third party request transaction.\n      tags:\n        - thirdpartyRequests\n      parameters:\n        - $ref: '#/components/parameters/ID'\n      requestBody:\n        description: Thirdparty transaction initiate request body.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ThirdpartyTransactionIDInitiateRequest'\n            example:\n              payee:\n                name: Bob bobbington\n                partyIdInfo:\n                  fspId: dfspb\n                  partyIdType: MSISDN\n                  partyIdentifier: '16135551212'\n              payer:\n                partyIdType: THIRD_PARTY_LINK\n                partyIdentifier: '16135551212'\n                fspId: dfspa\n              amountType: RECEIVE\n              amount:\n                currency: USD\n                amount: '123.47'\n              transactionType:\n                scenario: DEPOSIT\n                initiator: PAYER\n                initiatorType: CONSUMER\n              expiration: '2021-05-24T08:38:08.699-04:00'\n      responses:\n        '200':\n          $ref: '#/components/responses/ThirdpartyTransactionIDInitiateResponse'\n        default:\n          $ref: '#/components/responses/400'\n  '/thirdpartyTransaction/{ID}/approve':\n    post:\n      operationId: ThirdpartyTransactionIDApprove\n      summary: Approve a third party transaction.\n      description: \u003e\n        The HTTP request `POST /thirdpartyTransaction/{ID}/approve` is used to\n        approve a third party transaction .\n      tags:\n        - thirdpartyRequests\n      parameters:\n        - $ref: '#/components/parameters/ID'\n      requestBody:\n        description: \u003e-\n          Thirdparty transaction approve request body contains Authorization\n          details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ThirdpartyTransactionIDApproveRequest'\n            example:\n              authorizationResponse:\n                authenticationInfo:\n                  authentication: U2F\n                  authenticationValue:\n                    pinValue: xxxxxxxxxxx\n                    counter: '1'\n                responseType: ENTERED\n      responses:\n        '200':\n          $ref: '#/components/responses/ThirdpartyTransactionIDApproveResponse'\n        default:\n          $ref: '#/components/responses/400'\n  /linking/providers:\n    get:\n      operationId: GetLinkingProviders\n      summary: GetLinkingProviders\n      description: \u003e\n        The HTTP request `GET /linking/providers` is used to retrieve a list of\n        thirdparty enabled DFSP identifiers.\n      tags:\n        - linking\n      responses:\n        '200':\n          $ref: '#/components/responses/LinkingProvidersResponse'\n        default:\n          $ref: '#/components/responses/400'\n  '/linking/accounts/{fspId}/{userId}':\n    get:\n      operationId: GetLinkingAccountsByUserId\n      summary: GetLinkingAccountsByUserId\n      description: \u003e\n        The HTTP request `GET /linking/accounts/{fspId}/{userId}` is used to\n        retrieve the list of potential accounts available for linking.\n      tags:\n        - linking\n      parameters:\n        - name: fspId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/FspId'\n        - name: userId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/AccountId'\n      responses:\n        '200':\n          $ref: '#/components/responses/AccountsByUserIdResponse'\n        default:\n          $ref: '#/components/responses/400'\n  /linking/request-consent:\n    post:\n      operationId: PostLinkingRequestConsent\n      summary: PostLinkingRequestConsent\n      description: \u003e\n        The HTTP request `POST /linking/request-consent` is used to by a PISP to\n        ask\n\n        a specific DFSP to start the process of establishing consent between\n        three parties.\n\n\n        - The PISP\n\n        - The DFSP\n\n        - A user presumed to be a customer of 'The DFSP'\n      tags:\n        - linking\n      requestBody:\n        description: Consent requests validate request details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkingRequestConsentPostRequest'\n            example:\n              consentRequestId: f6ab43b0-71cc-49f9-b763-2ac3f05ac8c1\n              toParticipantId: dfspa\n              accounts:\n                - accountNickname: SpeXXXXXXXXnt\n                  id: dfspa.username.5678\n                  currency: USD\n              actions:\n                - accounts.transfer\n              userId: username1234\n              callbackUri: 'pisp-app://callback'\n      responses:\n        '200':\n          $ref: '#/components/responses/LinkingRequestConsentResponse'\n        default:\n          $ref: '#/components/responses/400'\n  '/linking/request-consent/{ID}/authenticate':\n    patch:\n      operationId: PatchLinkingRequestConsentIDAuthenticate\n      summary: 'Outbound PATCH /linking/request-consent/{ID}/authenticate endpoint'\n      description: \u003e\n        Used in the authentication phase of account linking.\n\n        Used by the PISP to pass an Auth token on behalf of the user to the DFSP\n        to establish a chain of trust.\n      tags:\n        - linking\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/CorrelationId'\n      requestBody:\n        description: Linking request consent authenticate request details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkingRequestConsentIDAuthenticateRequest'\n            example:\n              authToken: '123456'\n      responses:\n        '200':\n          $ref: '#/components/responses/LinkingRequestConsentIDAuthenticateResponse'\n        default:\n          $ref: '#/components/responses/400'\n  '/linking/request-consent/{ID}/pass-credential':\n    post:\n      operationId: PostLinkingRequestConsentIDPassCredential\n      summary: 'Outbound POST /linking/request-consent/{ID}/pass-credential endpoint'\n      description: \u003e\n        Used in the credential registration phase of account linking.\n\n        Used by the PISP to pass an credential on behalf of the user to the\n        DFSP.\n      tags:\n        - linking\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/CorrelationId'\n      requestBody:\n        description: Linking request consent pass credential request details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \u003e-\n                #/components/schemas/LinkingRequestConsentIDPassCredentialRequest\n            example:\n              credential:\n                credentialType: FIDO\n                status: PENDING\n                payload:\n                  id: \u003e-\n                    HskU2gw4np09IUtYNHnxMM696jJHqvccUdBmd0xP6XEWwH0xLei1PUzDJCM19SZ3A2Ex0fNLw0nc2hrIlFnAtw\n                  rawId: \u003e-\n                    HskU2gw4np09IUtYNHnxMM696jJHqvccUdBmd0xP6XEWwH0xLei1PUzDJCM19SZ3A2Ex0fNLw0nc2hrIlFnAtw==\n                  response:\n                    clientDataJSON: \u003e-\n                      eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiWXpSaFpHRmlZak16WlRrek1EWmlNRE00TURnNE1UTXlZV1ptWTJSbE5UVTJZelV3WkRneVpqWXdNMlkwTnpjeE1XRTVOVEV3WW1ZelltVmxaalprTmciLCJvcmlnaW4iOiJodHRwOi8vbG9jYWxob3N0OjQyMTgxIiwiY3Jvc3NPcmlnaW4iOmZhbHNlfQ==\n                    attestationObject: \u003e-\n                      o2NmbXRmcGFja2VkZ2F0dFN0bXSjY2FsZyZjc2lnWEcwRQIhAN2JDPPTse/45EHSqSpEJiiok5sns+HqdJch3+gsL09VAiAh7W7ZhQC8gMIkgwcA+S4rQkaHoHnP9AkkohaKCuuA62N4NWOBWQLBMIICvTCCAaWgAwIBAgIECwXNUzANBgkqhkiG9w0BAQsFADAuMSwwKgYDVQQDEyNZdWJpY28gVTJGIFJvb3QgQ0EgU2VyaWFsIDQ1NzIwMDYzMTAgFw0xNDA4MDEwMDAwMDBaGA8yMDUwMDkwNDAwMDAwMFowbjELMAkGA1UEBhMCU0UxEjAQBgNVBAoMCVl1YmljbyBBQjEiMCAGA1UECwwZQXV0aGVudGljYXRvciBBdHRlc3RhdGlvbjEnMCUGA1UEAwweWXViaWNvIFUyRiBFRSBTZXJpYWwgMTg0OTI5NjE5MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIRpvsbWJJcsKwRhffCrjqLSIEBR5sR7/9VXgfZdRvSsXaiUt7lns44WZIFuz6ii/j9f8fadcBUJyrkhY5ZH8WqNsMGowIgYJKwYBBAGCxAoCBBUxLjMuNi4xLjQuMS40MTQ4Mi4xLjEwEwYLKwYBBAGC5RwCAQEEBAMCBDAwIQYLKwYBBAGC5RwBAQQEEgQQFJogIY72QTOWuIH41bfx9TAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQA+/qPfPSrgclePfgTQ3VpLaNsBr+hjLhi04LhzQxiRGWwYS+vB1TOiPXeLsQQIwbmqQU51doVbCTaXGLNIr1zvbLAwhnLWH7i9m4ahCqaCzowtTvCQ7VBUGP5T1M4eYnoo83IDCVjQj/pZG8QYgOGOigztGoWAf5CWcUF6C0UyFbONwUcqJEl2QLToa/7E8VRjm4W46IAUljYkODVZASv8h3wLROx9p5TSBlSymtwdulxQe/DKbfNSvM3edA0up+EIJKLOOU+QTR2ZQV46fEW1/ih6m8vcaY6L3NW0eYpc7TXeijUJAgoUtya/vzmnRAecuY9bncoJt8PrvL2ir2kDaGF1dGhEYXRhWMRJlg3liA6MaHQ0Fw9kdmBbj+SuuaKGMseZXPO6gx2XY0EAAAAEFJogIY72QTOWuIH41bfx9QBAHskU2gw4np09IUtYNHnxMM696jJHqvccUdBmd0xP6XEWwH0xLei1PUzDJCM19SZ3A2Ex0fNLw0nc2hrIlFnAt6UBAgMmIAEhWCBYz+SV6fSy7ZjFzdj+SWxaMbfaw4ZT+wYgClN3v93kVSJYIGSzY41DNLrh1jXp4J53qCnq4+b9HYXud/0UEsZquDeV\n                  type: public-key\n      responses:\n        '200':\n          $ref: '#/components/responses/LinkingRequestConsentIDPassCredentialResponse'\n        default:\n          $ref: '#/components/responses/400'\ncomponents:\n  responses:\n    '200':\n      description: OK\n    '400':\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '401':\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '403':\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '404':\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '405':\n      description: Method Not Allowed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '406':\n      description: Not Acceptable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '501':\n      description: Not Implemented\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '503':\n      description: Service Unavailable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    ThirdpartyTransactionPartyLookupResponse:\n      description: ThirdpartyTransaction partyLookup response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ThirdpartyTransactionPartyLookupResponse'\n          example:\n            currentState: partyLookupSuccess\n            party:\n              partyIdInfo:\n                partyIdType: MSISDN\n                partyIdentifier: '16135551212'\n                fspId: dfspb\n              name: Bob bobbington\n    ThirdpartyTransactionIDInitiateResponse:\n      description: ThirdpartyTransactionIDInitiate response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ThirdpartyTransactionIDInitiateResponse'\n          example:\n            currentState: authorizationReceived\n            authorization:\n              authenticationType: U2F\n              retriesLeft: '1'\n              amount:\n                currency: USD\n                amount: '10.00'\n              transactionId: 1234-1234-1234-1234\n              transactionRequestId: 1234-1234-1234-1234\n              quote:\n                transferAmount:\n                  currency: USD\n                  amount: '10.00'\n                expiration: '2022-01-01T08:38:08.699-04:00'\n                ilpPacket: \u003e-\n                  AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA\n                condition: f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pH\n    ThirdpartyTransactionIDApproveResponse:\n      description: ThirdpartyTransactionIDApproveResponse\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ThirdpartyTransactionIDApproveResponse'\n          example:\n            transactionStatus:\n              transactionId: 8f6b2a9c-df32-4248-b115-799beada85ec\n              transactionRequestState: ACCEPTED\n            currentState: transactionStatusReceived\n    LinkingProvidersResponse:\n      description: |\n        Response body of GET /linking/providers\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LinkingProvidersResponse'\n          example:\n            providers:\n              - dfspa\n              - dfspb\n            currentState: providersLookupSuccess\n    AccountsByUserIdResponse:\n      description: \u003e\n        response body of GET /accounts/{ID} \n\n        derived from UpdateAccountsByUserId by Inbound Service via Pub/Sub\n        channel\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AccountsIDPutResponse'\n          example:\n            - accountNickname: dfspa.user.nickname1\n              id: dfspa.username.1234\n              currency: ZAR\n            - accountNickname: dfspa.user.nickname2\n              id: dfspa.username.5678\n              currency: USD\n    LinkingRequestConsentResponse:\n      description: |\n        Response body of POST /linking/request-consent.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LinkingRequestConsentResponse'\n          example:\n            channelResponse:\n              consentRequestId: f6ab43b0-71cc-49f9-b763-2ac3f05ac8c1\n              scopes:\n                - accountId: dfspa.username.1234\n                  actions:\n                    - accounts.getBalance\n                    - accounts.transfer\n                - accountId: dfspa.username.5678\n                  actions:\n                    - accounts.getBalance\n                    - accounts.transfer\n              authChannels:\n                - OTP\n              callbackUri: 'pisp-app://callback...'\n            currentState: OTPAuthenticationChannelResponseReceived\n    LinkingRequestConsentIDAuthenticateResponse:\n      description: Linking request consent authenticate response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LinkingRequestConsentIDAuthenticateResponse'\n          example:\n            consent:\n              consentId: 76059a0a-684f-4002-a880-b01159afe119\n              consentRequestId: f6ab43b0-71cc-49f9-b763-2ac3f05ac8c1\n              scopes:\n                - accountId: dfspa.username.5678\n                  actions:\n                    - accounts.transfer\n            challenge: c4adabb33e9306b038088132affcde556c50d82f603f47711a9510bf3beef6d6\n            currentState: consentReceivedAwaitingCredential\n    LinkingRequestConsentIDPassCredentialResponse:\n      description: Linking request consent pass credential response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LinkingRequestConsentIDPassCredentialResponse'\n          example:\n            credential:\n              status: VERIFIED\n            currentState: accountsLinked\n  headers:\n    Content-Length:\n      required: false\n      schema:\n        type: integer\n      description: \u003e-\n        The `Content-Length` header field indicates the anticipated size of the\n        payload body. Only sent if there is a body.\n\n\n        **Note:** The API supports a maximum size of 5242880 bytes (5\n        Megabytes).\n    Content-Type:\n      schema:\n        type: string\n      required: true\n      description: \u003e-\n        The `Content-Type` header indicates the specific version of the API used\n        to send the payload body.\n  schemas:\n    ErrorCode:\n      title: ErrorCode\n      type: string\n      pattern: '^[1-9]\\d{3}$'\n      description: \u003e-\n        The API data type ErrorCode is a JSON String of four characters,\n        consisting of digits only. Negative numbers are not allowed. A leading\n        zero is not allowed. Each error code in the API is a four-digit number,\n        for example, 1234, where the first number (1 in the example) represents\n        the high-level error category, the second number (2 in the example)\n        represents the low-level error category, and the last two numbers (34 in\n        the example) represent the specific error.\n      example: '5100'\n    ErrorDescription:\n      title: ErrorDescription\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Error description string.\n    ExtensionKey:\n      title: ExtensionKey\n      type: string\n      minLength: 1\n      maxLength: 32\n      description: Extension key.\n    ExtensionValue:\n      title: ExtensionValue\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Extension value.\n    Extension:\n      title: Extension\n      type: object\n      description: Data model for the complex type Extension.\n      properties:\n        key:\n          $ref: '#/components/schemas/ExtensionKey'\n        value:\n          $ref: '#/components/schemas/ExtensionValue'\n      required:\n        - key\n        - value\n    ExtensionList:\n      title: ExtensionList\n      type: object\n      description: \u003e-\n        Data model for the complex type ExtensionList. An optional list of\n        extensions, specific to deployment.\n      properties:\n        extension:\n          type: array\n          items:\n            $ref: '#/components/schemas/Extension'\n          minItems: 1\n          maxItems: 16\n          description: Number of Extension elements.\n      required:\n        - extension\n    ErrorInformation:\n      title: ErrorInformation\n      type: object\n      description: Data model for the complex type ErrorInformation.\n      properties:\n        errorCode:\n          $ref: '#/components/schemas/ErrorCode'\n        errorDescription:\n          $ref: '#/components/schemas/ErrorDescription'\n        extensionList:\n          $ref: '#/components/schemas/ExtensionList'\n      required:\n        - errorCode\n        - errorDescription\n    ErrorInformationResponse:\n      title: ErrorInformationResponse\n      type: object\n      description: \u003e-\n        Data model for the complex type object that contains an optional element\n        ErrorInformation used along with 4xx and 5xx responses.\n      properties:\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n    PartyIdType:\n      title: PartyIdType\n      type: string\n      enum:\n        - MSISDN\n        - EMAIL\n        - PERSONAL_ID\n        - BUSINESS\n        - DEVICE\n        - ACCOUNT_ID\n        - IBAN\n        - ALIAS\n        - CONSENT\n        - THIRD_PARTY_LINK\n      description: \u003e\n        This is a variant based on FSPIOP `PartyIdType` specification.\n\n        Main difference being the CONSENT and THIRD_PARTY_LINK enums.\n\n\n        Below are the allowed values for the enumeration.\n\n        - MSISDN - An MSISDN (Mobile Station International Subscriber Directory\n\n        Number, that is, the phone number) is used as reference to a\n        participant.\n\n        The MSISDN identifier should be in international format according to the\n\n        [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).\n\n        Optionally, the MSISDN may be prefixed by a single plus sign, indicating\n        the\n\n        international prefix.\n\n        - EMAIL - An email is used as reference to a\n\n        participant. The format of the email should be according to the\n        informational\n\n        [RFC 3696](https://tools.ietf.org/html/rfc3696).\n\n        - PERSONAL_ID - A personal identifier is used as reference to a\n        participant.\n\n        Examples of personal identification are passport number, birth\n        certificate\n\n        number, and national registration number. The identifier number is added\n        in\n\n        the PartyIdentifier element. The personal identifier type is added in\n        the\n\n        PartySubIdOrType element.\n\n        - BUSINESS - A specific Business (for example, an organization or a\n        company)\n\n        is used as reference to a participant. The BUSINESS identifier can be in\n        any\n\n        format. To make a transaction connected to a specific username or bill\n        number\n\n        in a Business, the PartySubIdOrType element should be used.\n\n        - DEVICE - A specific device (for example, a POS or ATM) ID connected to\n        a\n\n        specific business or organization is used as reference to a Party.\n\n        For referencing a specific device under a specific business or\n        organization,\n\n        use the PartySubIdOrType element.\n\n        - ACCOUNT_ID - A bank account number or FSP account ID should be used as\n\n        reference to a participant. The ACCOUNT_ID identifier can be in any\n        format,\n\n        as formats can greatly differ depending on country and FSP.\n\n        - IBAN - A bank account number or FSP account ID is used as reference to\n        a\n\n        participant. The IBAN identifier can consist of up to 34 alphanumeric\n\n        characters and should be entered without whitespace.\n\n        - ALIAS An alias is used as reference to a participant. The alias should\n        be\n\n        created in the FSP as an alternative reference to an account owner.\n\n        Another example of an alias is a username in the FSP system.\n\n        The ALIAS identifier can be in any format. It is also possible to use\n        the\n\n        PartySubIdOrType element for identifying an account under an Alias\n        defined\n\n        by the PartyIdentifier.\n\n        - CONSENT - TBD\n\n        - THIRD_PARTY_LINK - TBD\n      example: PERSONAL_ID\n    PartyIdentifier:\n      title: PartyIdentifier\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Identifier of the Party.\n      example: '16135551212'\n    PartySubIdOrType:\n      title: PartySubIdOrType\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: \u003e-\n        Either a sub-identifier of a PartyIdentifier, or a sub-type of the\n        PartyIdType, normally a PersonalIdentifierType.\n    FspId:\n      title: FspId\n      type: string\n      minLength: 1\n      maxLength: 32\n      description: FSP identifier.\n    PartyIdInfo:\n      title: PartyIdInfo\n      type: object\n      description: Data model for the complex type PartyIdInfo.\n      properties:\n        partyIdType:\n          $ref: '#/components/schemas/PartyIdType'\n        partyIdentifier:\n          $ref: '#/components/schemas/PartyIdentifier'\n        partySubIdOrType:\n          $ref: '#/components/schemas/PartySubIdOrType'\n        fspId:\n          $ref: '#/components/schemas/FspId'\n        extensionList:\n          $ref: '#/components/schemas/ExtensionList'\n      required:\n        - partyIdType\n        - partyIdentifier\n    CorrelationId:\n      title: CorrelationId\n      type: string\n      pattern: \u003e-\n        ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\n      description: \u003e-\n        Identifier that correlates all messages of the same sequence. The API\n        data type UUID (Universally Unique Identifier) is a JSON String in\n        canonical format, conforming to [RFC\n        4122](https://tools.ietf.org/html/rfc4122), that is restricted by a\n        regular expression for interoperability reasons. A UUID is always 36\n        characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).\n      example: b51ec534-ee48-4575-b6a9-ead2955b8069\n    ThirdpartyTransactionPartyLookupRequest:\n      type: object\n      description: ThirdpartyTransaction partyLookup request\n      properties:\n        payee:\n          $ref: '#/components/schemas/PartyIdInfo'\n        transactionRequestId:\n          $ref: '#/components/schemas/CorrelationId'\n      required:\n        - payee\n        - transactionRequestId\n    ThirdpartyTransactionPartyLookupState:\n      title: ThirdpartyTransactionPartyLookupState\n      description: state of thirdparty transaction partyLookup phase\n      type: string\n      enum:\n        - start\n        - partyLookupSuccess\n        - partyLookupFailure\n        - errored\n    ThirdpartyTransactionPartyLookupResponseError:\n      title: ThirdpartyTransactionPartyLookupResponseError\n      type: object\n      properties:\n        currentState:\n          $ref: '#/components/schemas/ThirdpartyTransactionPartyLookupState'\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n      required:\n        - errorInformation\n        - currentState\n    MerchantClassificationCode:\n      title: MerchantClassificationCode\n      type: string\n      pattern: '^[\\d]{1,4}$'\n      description: \u003e-\n        A limited set of pre-defined numbers. This list would be a limited set\n        of numbers identifying a set of popular merchant types like School Fees,\n        Pubs and Restaurants, Groceries, etc.\n    PartyName:\n      title: PartyName\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Name of the Party. Could be a real name or a nickname.\n    FirstName:\n      title: FirstName\n      type: string\n      minLength: 1\n      maxLength: 128\n      pattern: \u003e-\n        ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n        .,''-]{1,128}$\n      description: First name of the Party (Name Type).\n      example: Henrik\n    MiddleName:\n      title: MiddleName\n      type: string\n      minLength: 1\n      maxLength: 128\n      pattern: \u003e-\n        ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n        .,''-]{1,128}$\n      description: Middle name of the Party (Name Type).\n      example: Johannes\n    LastName:\n      title: LastName\n      type: string\n      minLength: 1\n      maxLength: 128\n      pattern: \u003e-\n        ^(?!\\s*$)[\\p{L}\\p{gc=Mark}\\p{digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}\n        .,''-]{1,128}$\n      description: Last name of the Party (Name Type).\n      example: Karlsson\n    PartyComplexName:\n      title: PartyComplexName\n      type: object\n      description: Data model for the complex type PartyComplexName.\n      properties:\n        firstName:\n          $ref: '#/components/schemas/FirstName'\n        middleName:\n          $ref: '#/components/schemas/MiddleName'\n        lastName:\n          $ref: '#/components/schemas/LastName'\n    DateOfBirth:\n      title: DateofBirth (type Date)\n      type: string\n      pattern: \u003e-\n        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$\n      description: Date of Birth of the Party.\n      example: '1966-06-16'\n    PartyPersonalInfo:\n      title: PartyPersonalInfo\n      type: object\n      description: Data model for the complex type PartyPersonalInfo.\n      properties:\n        complexName:\n          $ref: '#/components/schemas/PartyComplexName'\n        dateOfBirth:\n          $ref: '#/components/schemas/DateOfBirth'\n    ThirdpartyTransactionPartyLookupResponseSuccess:\n      title: ThirdpartyTransactionPartyLookupResponseSuccess\n      type: object\n      properties:\n        currentState:\n          $ref: '#/components/schemas/ThirdpartyTransactionPartyLookupState'\n        party:\n          type: object\n          properties:\n            partyIdInfo:\n              $ref: '#/components/schemas/PartyIdInfo'\n            merchantClassificationCode:\n              $ref: '#/components/schemas/MerchantClassificationCode'\n            name:\n              $ref: '#/components/schemas/PartyName'\n            personalInfo:\n              $ref: '#/components/schemas/PartyPersonalInfo'\n      required:\n        - party\n        - currentState\n    ThirdpartyTransactionPartyLookupResponse:\n      oneOf:\n        - $ref: '#/components/schemas/ThirdpartyTransactionPartyLookupResponseError'\n        - $ref: '#/components/schemas/ThirdpartyTransactionPartyLookupResponseSuccess'\n    Party:\n      title: Party\n      type: object\n      description: Data model for the complex type Party.\n      properties:\n        partyIdInfo:\n          $ref: '#/components/schemas/PartyIdInfo'\n        merchantClassificationCode:\n          $ref: '#/components/schemas/MerchantClassificationCode'\n        name:\n          $ref: '#/components/schemas/PartyName'\n        personalInfo:\n          $ref: '#/components/schemas/PartyPersonalInfo'\n      required:\n        - partyIdInfo\n    PartyIdTypeTPLink:\n      title: PartyIdTypeTPLink\n      type: string\n      enum:\n        - THIRD_PARTY_LINK\n      description: \u003e\n        This is a variant based on FSPIOP `PartyIdType` specification.\n\n        This validation interface should be use by `POST\n        /thirdpartyRequests/transactions`\n\n        - THIRD_PARTY_LINK - is the DFSP's internal reference which allows DFSP\n        to find out the corresponding consent\n      example: PERSONAL_ID\n    PartyIdInfoTPLink:\n      title: PartyIdInfo\n      type: object\n      description: Data model for the complex type PartyIdInfo.\n      properties:\n        partyIdType:\n          $ref: '#/components/schemas/PartyIdTypeTPLink'\n        partyIdentifier:\n          $ref: '#/components/schemas/PartyIdentifier'\n        partySubIdOrType:\n          $ref: '#/components/schemas/PartySubIdOrType'\n        fspId:\n          $ref: '#/components/schemas/FspId'\n        extensionList:\n          $ref: '#/components/schemas/ExtensionList'\n      required:\n        - partyIdType\n        - partyIdentifier\n    AmountType:\n      title: AmountType\n      type: string\n      enum:\n        - SEND\n        - RECEIVE\n      description: \u003e-\n        Below are the allowed values for the enumeration AmountType.\n\n        - SEND - Amount the Payer would like to send, that is, the amount that\n        should be withdrawn from the Payer account including any fees.\n\n        - RECEIVE - Amount the Payer would like the Payee to receive, that is,\n        the amount that should be sent to the receiver exclusive of any fees.\n      example: RECEIVE\n    Currency:\n      title: Currency\n      description: \u003e-\n        The currency codes defined in [ISO\n        4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter\n        alphabetic codes are used as the standard naming representation for\n        currencies.\n      type: string\n      minLength: 3\n      maxLength: 3\n      enum:\n        - AED\n        - AFN\n        - ALL\n        - AMD\n        - ANG\n        - AOA\n        - ARS\n        - AUD\n        - AWG\n        - AZN\n        - BAM\n        - BBD\n        - BDT\n        - BGN\n        - BHD\n        - BIF\n        - BMD\n        - BND\n        - BOB\n        - BRL\n        - BSD\n        - BTN\n        - BWP\n        - BYN\n        - BZD\n        - CAD\n        - CDF\n        - CHF\n        - CLP\n        - CNY\n        - COP\n        - CRC\n        - CUC\n        - CUP\n        - CVE\n        - CZK\n        - DJF\n        - DKK\n        - DOP\n        - DZD\n        - EGP\n        - ERN\n        - ETB\n        - EUR\n        - FJD\n        - FKP\n        - GBP\n        - GEL\n        - GGP\n        - GHS\n        - GIP\n        - GMD\n        - GNF\n        - GTQ\n        - GYD\n        - HKD\n        - HNL\n        - HRK\n        - HTG\n        - HUF\n        - IDR\n        - ILS\n        - IMP\n        - INR\n        - IQD\n        - IRR\n        - ISK\n        - JEP\n        - JMD\n        - JOD\n        - JPY\n        - KES\n        - KGS\n        - KHR\n        - KMF\n        - KPW\n        - KRW\n        - KWD\n        - KYD\n        - KZT\n        - LAK\n        - LBP\n        - LKR\n        - LRD\n        - LSL\n        - LYD\n        - MAD\n        - MDL\n        - MGA\n        - MKD\n        - MMK\n        - MNT\n        - MOP\n        - MRO\n        - MUR\n        - MVR\n        - MWK\n        - MXN\n        - MYR\n        - MZN\n        - NAD\n        - NGN\n        - NIO\n        - NOK\n        - NPR\n        - NZD\n        - OMR\n        - PAB\n        - PEN\n        - PGK\n        - PHP\n        - PKR\n        - PLN\n        - PYG\n        - QAR\n        - RON\n        - RSD\n        - RUB\n        - RWF\n        - SAR\n        - SBD\n        - SCR\n        - SDG\n        - SEK\n        - SGD\n        - SHP\n        - SLL\n        - SOS\n        - SPL\n        - SRD\n        - STD\n        - SVC\n        - SYP\n        - SZL\n        - THB\n        - TJS\n        - TMT\n        - TND\n        - TOP\n        - TRY\n        - TTD\n        - TVD\n        - TWD\n        - TZS\n        - UAH\n        - UGX\n        - USD\n        - UYU\n        - UZS\n        - VEF\n        - VND\n        - VUV\n        - WST\n        - XAF\n        - XCD\n        - XDR\n        - XOF\n        - XPF\n        - YER\n        - ZAR\n        - ZMW\n        - ZWD\n    Amount:\n      title: Amount\n      type: string\n      pattern: '^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$'\n      description: \u003e-\n        The API data type Amount is a JSON String in a canonical format that is\n        restricted by a regular expression for interoperability reasons. This\n        pattern does not allow any trailing zeroes at all, but allows an amount\n        without a minor currency unit. It also only allows four digits in the\n        minor currency unit; a negative value is not allowed. Using more than 18\n        digits in the major currency unit is not allowed.\n      example: '123.45'\n    Money:\n      title: Money\n      type: object\n      description: Data model for the complex type Money.\n      properties:\n        currency:\n          $ref: '#/components/schemas/Currency'\n        amount:\n          $ref: '#/components/schemas/Amount'\n      required:\n        - currency\n        - amount\n    TransactionScenario:\n      title: TransactionScenario\n      type: string\n      enum:\n        - DEPOSIT\n        - WITHDRAWAL\n        - TRANSFER\n        - PAYMENT\n        - REFUND\n      description: \u003e-\n        Below are the allowed values for the enumeration.\n\n        - DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a\n        normal scenario, electronic funds are transferred from a Business\n        account to a Consumer account, and physical cash is given from the\n        Consumer to the Business User.\n\n        - WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction.\n        In a normal scenario, electronic funds are transferred from a Consumer’s\n        account to a Business account, and physical cash is given from the\n        Business User to the Consumer.\n\n        - TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to\n        Consumer) transaction.\n\n        - PAYMENT - Usually used for performing a transaction from a Consumer to\n        a Merchant or Organization, but could also be for a B2B (Business to\n        Business) payment. The transaction could be online for a purchase in an\n        Internet store, in a physical store where both the Consumer and Business\n        User are present, a bill payment, a donation, and so on.\n\n        - REFUND - Used for performing a refund of transaction.\n      example: DEPOSIT\n    TransactionSubScenario:\n      title: TransactionSubScenario\n      type: string\n      pattern: '^[A-Z_]{1,32}$'\n      description: \u003e-\n        Possible sub-scenario, defined locally within the scheme (UndefinedEnum\n        Type).\n      example: LOCALLY_DEFINED_SUBSCENARIO\n    TransactionInitiator:\n      title: TransactionInitiator\n      type: string\n      enum:\n        - PAYER\n        - PAYEE\n      description: \u003e-\n        Below are the allowed values for the enumeration.\n\n        - PAYER - Sender of funds is initiating the transaction. The account to\n        send from is either owned by the Payer or is connected to the Payer in\n        some way.\n\n        - PAYEE - Recipient of the funds is initiating the transaction by\n        sending a transaction request. The Payer must approve the transaction,\n        either automatically by a pre-generated OTP or by pre-approval of the\n        Payee, or by manually approving in his or her own Device.\n      example: PAYEE\n    TransactionInitiatorType:\n      title: TransactionInitiatorType\n      type: string\n      enum:\n        - CONSUMER\n        - AGENT\n        - BUSINESS\n        - DEVICE\n      description: |-\n        Below are the allowed values for the enumeration.\n        - CONSUMER - Consumer is the initiator of the transaction.\n        - AGENT - Agent is the initiator of the transaction.\n        - BUSINESS - Business is the initiator of the transaction.\n        - DEVICE - Device is the initiator of the transaction.\n      example: CONSUMER\n    RefundReason:\n      title: RefundReason\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Reason for the refund.\n      example: Free text indicating reason for the refund.\n    Refund:\n      title: Refund\n      type: object\n      description: Data model for the complex type Refund.\n      properties:\n        originalTransactionId:\n          $ref: '#/components/schemas/CorrelationId'\n        refundReason:\n          $ref: '#/components/schemas/RefundReason'\n      required:\n        - originalTransactionId\n    BalanceOfPayments:\n      title: BalanceOfPayments\n      type: string\n      pattern: '^[1-9]\\d{2}$'\n      description: \u003e-\n        (BopCode) The API data type\n        [BopCode](https://www.imf.org/external/np/sta/bopcode/) is a JSON String\n        of 3 characters, consisting of digits only. Negative numbers are not\n        allowed. A leading zero is not allowed.\n      example: '123'\n    TransactionType:\n      title: TransactionType\n      type: object\n      description: Data model for the complex type TransactionType.\n      properties:\n        scenario:\n          $ref: '#/components/schemas/TransactionScenario'\n        subScenario:\n          $ref: '#/components/schemas/TransactionSubScenario'\n        initiator:\n          $ref: '#/components/schemas/TransactionInitiator'\n        initiatorType:\n          $ref: '#/components/schemas/TransactionInitiatorType'\n        refundInfo:\n          $ref: '#/components/schemas/Refund'\n        balanceOfPayments:\n          $ref: '#/components/schemas/BalanceOfPayments'\n      required:\n        - scenario\n        - initiator\n        - initiatorType\n    ThirdpartyTransactionIDInitiateRequest:\n      title: ThirdpartyTransactionIDInitiateRequest\n      type: object\n      description: \u003e-\n        The object sent in the POST `/thirdpartyTransaction/{ID}/initiate`\n        request.\n      properties:\n        payee:\n          $ref: '#/components/schemas/Party'\n        payer:\n          $ref: '#/components/schemas/PartyIdInfoTPLink'\n        amountType:\n          $ref: '#/components/schemas/AmountType'\n        amount:\n          $ref: '#/components/schemas/Money'\n        transactionType:\n          $ref: '#/components/schemas/TransactionType'\n        expiration:\n          type: string\n          example: '2016-05-24T08:38:08.699-04:00'\n      required:\n        - payee\n        - payer\n        - amountType\n        - amount\n        - transactionType\n        - expiration\n    ThirdpartyTransactionIDInitiateState:\n      title: ThirdpartyTransactionIDInitiateState\n      description: state of thirdparty transaction for initiate phase\n      type: string\n      enum:\n        - partyLookupSuccess\n        - authorizationReceived\n        - errored\n    ThirdpartyTransactionIDInitiateResponseError:\n      title: ThirdpartyTransactionIDInitateResponseError\n      type: object\n      properties:\n        currentState:\n          $ref: '#/components/schemas/ThirdpartyTransactionIDInitiateState'\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n      required:\n        - currentState\n        - errorInformation\n    DateTime:\n      title: DateTime\n      type: string\n      pattern: \u003e-\n        ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$\n      description: \u003e-\n        The API data type DateTime is a JSON String in a lexical format that is\n        restricted by a regular expression for interoperability reasons. The\n        format is according to [ISO\n        8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed\n        in a combined date, time and time zone format. A more readable version\n        of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are\n        \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z\n        indicates Zulu time zone, same as UTC).\n      example: '2016-05-24T08:38:08.699-04:00'\n    ThirdpartyRequestsAuthorizationsPostRequest:\n      title: ThirdpartyRequestsAuthorizationsPostRequest\n      description: POST /thirdpartyRequests/authorizations request object.\n      type: object\n      properties:\n        authorizationRequestId:\n          $ref: '#/components/schemas/CorrelationId'\n        transactionRequestId:\n          $ref: '#/components/schemas/CorrelationId'\n        challenge:\n          type: string\n          description: The challenge that the PISP's client is to sign\n        transferAmount:\n          allOf:\n            - $ref: '#/components/schemas/Money'\n          description: \u003e-\n            The amount that will be debited from the sending customer’s  account\n            as a consequence of the transaction.\n        payeeReceiveAmount:\n          allOf:\n            - $ref: '#/components/schemas/Money'\n          description: \u003e-\n            The amount that will be credited to the receiving customer’s \n            account as a consequence of the transaction.\n        fees:\n          allOf:\n            - $ref: '#/components/schemas/Money'\n          description: \u003e-\n            The amount of fees that the paying customer will be charged as part\n            of the transaction.\n        payer:\n          allOf:\n            - $ref: '#/components/schemas/PartyIdInfo'\n          description: \u003e-\n            Information about the Payer type, id, sub-type/id, FSP Id in the\n            proposed financial transaction.\n        payee:\n          allOf:\n            - $ref: '#/components/schemas/Party'\n          description: Information about the Payee in the proposed financial transaction.\n        transactionType:\n          $ref: '#/components/schemas/TransactionType'\n        expiration:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n          description: \u003e-\n            The time by which the transfer must be completed, set by the payee\n            DFSP.\n        extensionList:\n          $ref: '#/components/schemas/ExtensionList'\n      required:\n        - authorizationRequestId\n        - transactionRequestId\n        - challenge\n        - transferAmount\n        - payeeReceiveAmount\n        - fees\n        - payer\n        - payee\n        - transactionType\n        - expiration\n      additionalProperties: false\n    ThirdpartyTransactionIDInitiateResponseSuccess:\n      title: ThirdpartyTransactionIDInitateResponseSuccess\n      type: object\n      properties:\n        currentState:\n          $ref: '#/components/schemas/ThirdpartyTransactionIDInitiateState'\n        authorization:\n          $ref: '#/components/schemas/ThirdpartyRequestsAuthorizationsPostRequest'\n      required:\n        - currentState\n        - authorization\n    ThirdpartyTransactionIDInitiateResponse:\n      oneOf:\n        - $ref: '#/components/schemas/ThirdpartyTransactionIDInitiateResponseError'\n        - $ref: '#/components/schemas/ThirdpartyTransactionIDInitiateResponseSuccess'\n    SignedPayloadTypeGeneric:\n      title: SignedPayloadTypeGeneric\n      type: string\n      enum:\n        - GENERIC\n      description: Describes a challenge that has been signed with a private key\n    BinaryString:\n      type: string\n      pattern: '^[A-Za-z0-9-_]+[=]{0,2}$'\n      description: \u003e-\n        The API data type BinaryString is a JSON String. The string is a\n        base64url  encoding of a string of raw bytes, where padding (character\n        ‘=’) is added at the end of the data if needed to ensure that the string\n        is a multiple of 4 characters. The length restriction indicates the\n        allowed number of characters.\n    ThirdpartyRequestsAuthorizationsIDPutResponseGeneric:\n      title: ThirdpartyRequestsAuthorizationsIDPutResponseGeneric\n      type: object\n      description: \u003e-\n        The object sent in the PUT /thirdpartyRequests/authorizations/{ID}\n        callback.\n      properties:\n        signedPayloadType:\n          $ref: '#/components/schemas/SignedPayloadTypeGeneric'\n        signedPayload:\n          $ref: '#/components/schemas/BinaryString'\n      required:\n        - signedPayloadType\n        - authenticationValue\n    SignedPayloadTypeFIDO:\n      title: SignedPayloadTypeFIDO\n      type: string\n      enum:\n        - FIDO\n      description: Describes a challenge that has been signed with FIDO Attestation flows\n    FIDOPublicKeyCredentialAssertion:\n      title: FIDOPublicKeyCredentialAssertion\n      type: object\n      description: \u003e\n        An object sent in a `PUT /thirdpartyRequests/authorization/{ID}`\n        request.\n\n        based mostly on: https://webauthn.guide/#authentication\n\n        AuthenticatorAssertionResponse\n      properties:\n        id:\n          type: string\n          description: |\n            credential id: identifier of pair of keys, base64 encoded\n            https://w3c.github.io/webauthn/#ref-for-dom-credential-id\n          minLength: 59\n          maxLength: 118\n        rawId:\n          type: string\n          description: |\n            raw credential id: identifier of pair of keys, base64 encoded.\n          minLength: 59\n          maxLength: 118\n        response:\n          type: object\n          description: |\n            AuthenticatorAssertionResponse\n          properties:\n            authenticatorData:\n              type: string\n              description: |\n                Authenticator data object.\n              minLength: 49\n              maxLength: 256\n            clientDataJSON:\n              type: string\n              description: |\n                JSON string with client data.\n              minLength: 121\n              maxLength: 512\n            signature:\n              type: string\n              description: \u003e\n                The signature generated by the private key associated with this\n                credential.\n              minLength: 59\n              maxLength: 256\n            userHandle:\n              type: string\n              description: |\n                This field is optionally provided by the authenticator, and\n                represents the user.id that was supplied during registration.\n              minLength: 1\n              maxLength: 88\n          required:\n            - authenticatorData\n            - clientDataJSON\n            - signature\n          additionalProperties: false\n        type:\n          type: string\n          description: 'response type, we need only the type of public-key'\n          enum:\n            - public-key\n      required:\n        - id\n        - rawId\n        - response\n        - type\n      additionalProperties: false\n    ThirdpartyRequestsAuthorizationsIDPutResponseFIDO:\n      title: ThirdpartyRequestsAuthorizationsIDPutResponseFIDO\n      type: object\n      description: \u003e-\n        The object sent in the PUT /thirdpartyRequests/authorizations/{ID}\n        callback.\n      properties:\n        signedPayloadType:\n          $ref: '#/components/schemas/SignedPayloadTypeFIDO'\n        signedPayload:\n          $ref: '#/components/schemas/FIDOPublicKeyCredentialAssertion'\n      required:\n        - signedPayloadType\n        - signedPayload\n    ThirdpartyTransactionIDApproveRequest:\n      title: ThirdpartyTransactionIDApproveRequest\n      type: object\n      properties:\n        authorizationResponse:\n          oneOf:\n            - $ref: \u003e-\n                #/components/schemas/ThirdpartyRequestsAuthorizationsIDPutResponseGeneric\n            - $ref: \u003e-\n                #/components/schemas/ThirdpartyRequestsAuthorizationsIDPutResponseFIDO\n      required:\n        - authorizationResponse\n    ThirdpartyTransactionIDApproveState:\n      title: ThirdpartyTransactionIDApproveState\n      description: state of thirdparty transaction\n      type: string\n      enum:\n        - authorizationReceived\n        - transactionStatusReceived\n        - errored\n    ThirdpartyTransactionIDApproveResponseError:\n      title: ThirdpartyTransactionIDApproveResponseError\n      type: object\n      properties:\n        currentState:\n          $ref: '#/components/schemas/ThirdpartyTransactionIDApproveState'\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n      required:\n        - currentState\n        - errorInformation\n    TransactionRequestState:\n      title: TransactionRequestState\n      type: string\n      enum:\n        - RECEIVED\n        - PENDING\n        - ACCEPTED\n        - REJECTED\n      description: |-\n        Below are the allowed values for the enumeration.\n        - RECEIVED - Payer FSP has received the transaction from the Payee FSP.\n        - PENDING - Payer FSP has sent the transaction request to the Payer.\n        - ACCEPTED - Payer has approved the transaction.\n        - REJECTED - Payer has rejected the transaction.\n    ThirdpartyTransactionIDApproveResponseSuccess:\n      title: ThirdpartyTransactionIDApproveResponseSuccess\n      type: object\n      properties:\n        transactionStatus:\n          type: object\n          properties:\n            transactionId:\n              $ref: '#/components/schemas/CorrelationId'\n            transactionRequestState:\n              $ref: '#/components/schemas/TransactionRequestState'\n          required:\n            - transactionId\n            - transactionRequestState\n        currentState:\n          $ref: '#/components/schemas/ThirdpartyTransactionIDApproveState'\n      required:\n        - currentState\n        - transactionStatus\n    ThirdpartyTransactionIDApproveResponse:\n      oneOf:\n        - $ref: '#/components/schemas/ThirdpartyTransactionIDApproveResponseError'\n        - $ref: '#/components/schemas/ThirdpartyTransactionIDApproveResponseSuccess'\n    LinkingProvidersState:\n      title: LinkingProvidersState\n      description: State of GET /linking/providers request\n      type: string\n      enum:\n        - start\n        - errored\n        - providersLookupSuccess\n    LinkingProvidersResponseError:\n      title: LinkingProvidersResponseError\n      type: object\n      properties:\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n        currentState:\n          $ref: '#/components/schemas/LinkingProvidersState'\n      required:\n        - errorInformation\n        - currentState\n    LinkingProvidersResponseSuccess:\n      title: LinkingProvidersResponseSuccess\n      type: object\n      properties:\n        providers:\n          type: array\n          items:\n            $ref: '#/components/schemas/FspId'\n        currentState:\n          $ref: '#/components/schemas/LinkingProvidersState'\n      required:\n        - providers\n        - currentState\n    LinkingProvidersResponse:\n      oneOf:\n        - $ref: '#/components/schemas/LinkingProvidersResponseError'\n        - $ref: '#/components/schemas/LinkingProvidersResponseSuccess'\n    AccountId:\n      title: AccountId\n      type: string\n      description: \u003e\n        A long-lived unique account identifier provided by the DFSP. This MUST\n        NOT\n\n        be Bank Account Number or anything that may expose a User's private bank\n\n        account information.\n      pattern: '^([0-9A-Za-z_~\\-\\.]+[0-9A-Za-z_~\\-])$'\n      minLength: 1\n      maxLength: 1023\n    Name:\n      title: Name\n      type: string\n      pattern: '^(?!\\s*$)[\\w .,''-]{1,128}$'\n      description: \u003e-\n        The API data type Name is a JSON String, restricted by a regular\n        expression to avoid characters which are generally not used in a name.\n\n\n        Regular Expression - The regular expression for restricting the Name\n        type is \"^(?!\\s*$)[\\w .,'-]{1,128}$\". The restriction does not allow a\n        string consisting of whitespace only, all Unicode characters are\n        allowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,)\n        and space characters ( ).\n\n\n        **Note:** In some programming languages, Unicode support must be\n        specifically enabled. For example, if Java is used, the flag\n        UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters.\n    Account:\n      title: Account\n      type: object\n      description: Data model for the complex type Account.\n      properties:\n        accountNickname:\n          $ref: '#/components/schemas/Name'\n        id:\n          $ref: '#/components/schemas/AccountId'\n        currency:\n          $ref: '#/components/schemas/Currency'\n      required:\n        - accountNickname\n        - id\n        - currency\n    AccountsIDPutResponse:\n      title: AccountsIDPutResponse\n      type: object\n      description: 'The object sent in a `PUT /accounts/{ID}` request.'\n      properties:\n        accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Account'\n      required:\n        - accounts\n    ConsentScopeType:\n      title: ConsentScopeType\n      type: string\n      enum:\n        - accounts.getBalance\n        - accounts.transfer\n      description: |\n        The scopes requested for a ConsentRequest.\n        - \"accounts.getBalance\" - Get the balance of a given account.\n        - \"accounts.transfer\" - Initiate a transfer from an account.\n    LinkingRequestConsentPostRequest:\n      title: LinkingRequestConsentPostRequest\n      type: object\n      description: The object sent in a `POST /linking/request-consent` request.\n      properties:\n        toParticipantId:\n          type: string\n        consentRequestId:\n          $ref: '#/components/schemas/CorrelationId'\n        accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Account'\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConsentScopeType'\n        userId:\n          type: string\n          description: ID used to associate request with GET /accounts request.\n        callbackUri:\n          type: string\n          description: \u003e-\n            The callback uri that the user will be redirected to after\n            completing the WEB auth channel.\n      required:\n        - toParticipantId\n        - consentRequestId\n        - accounts\n        - userId\n        - callbackUri\n        - actions\n    LinkingRequestConsentState:\n      title: LinkingRequestConsentState\n      description: State of `POST /linking/request-consent` request\n      type: string\n      enum:\n        - start\n        - errored\n        - success\n        - OTPAuthenticationChannelResponseRecieved\n        - WebAuthenticationChannelResponseRecieved\n    LinkingRequestConsentResponseError:\n      title: LinkingRequestConsentResponseError\n      type: object\n      properties:\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n        currentState:\n          $ref: '#/components/schemas/LinkingRequestConsentState'\n      required:\n        - errorInformation\n        - currentState\n    Scope:\n      title: Scope\n      type: object\n      description: Scope + Account Identifier mapping for a Consent.\n      example: |\n        {\n          accountId: \"dfsp.username.5678\",\n          actions: [ \"accounts.transfer\", \"accounts.getBalance\" ]\n        }\n      properties:\n        accountId:\n          $ref: '#/components/schemas/AccountId'\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConsentScopeType'\n      required:\n        - accountId\n        - actions\n    ConsentRequestChannelTypeWeb:\n      title: ConsentRequestChannelTypeWeb\n      type: string\n      enum:\n        - WEB\n      description: |\n        The web auth channel being used for PUT consentRequest/{ID} request.\n    ConsentRequestsIDPutResponseWeb:\n      title: ConsentRequestsIDPutResponseWeb\n      type: object\n      description: \u003e\n        The object sent in a `PUT /consentRequests/{ID}` request.\n\n\n        Schema used in the request consent phase of the account linking web\n        flow,\n\n        the result is the PISP being instructed on a specific URL where this\n\n        supposed user should be redirected. This URL should be a place where\n\n        the user can prove their identity (e.g., by logging in).\n      properties:\n        consentRequestId:\n          $ref: '#/components/schemas/CorrelationId'\n        scopes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Scope'\n        authChannels:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConsentRequestChannelTypeWeb'\n        callbackUri:\n          type: string\n          description: \u003e-\n            The callback uri that the user will be redirected to after\n            completing the WEB auth channel.\n        authUri:\n          type: string\n          description: \u003e-\n            The callback uri that the pisp app redirects to for user to complete\n            their login.\n      required:\n        - consentRequestId\n        - scopes\n        - authChannels\n        - callbackUri\n        - authUri\n      additionalProperties: false\n    ConsentRequestChannelTypeOTP:\n      title: ConsentRequestChannelTypeOTP\n      type: string\n      enum:\n        - OTP\n      description: |\n        The OTP auth channel being used for PUT consentRequest/{ID} request.\n    ConsentRequestsIDPutResponseOTP:\n      title: ConsentRequestsIDPutResponseOTP\n      type: object\n      description: \u003e\n        The object sent in a `PUT /consentRequests/{ID}` request.\n\n\n        Schema used in the request consent phase of the account linking OTP/SMS\n        flow.\n      properties:\n        consentRequestId:\n          $ref: '#/components/schemas/CorrelationId'\n        scopes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Scope'\n        authChannels:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConsentRequestChannelTypeOTP'\n        callbackUri:\n          type: string\n          description: \u003e-\n            The callback uri that the user will be redirected to after\n            completing the WEB auth channel.\n      required:\n        - consentRequestId\n        - scopes\n        - authChannels\n        - callbackUri\n      additionalProperties: false\n    LinkingRequestConsentResponseSuccess:\n      title: LinkingRequestConsentResponseSuccess\n      type: object\n      properties:\n        channelResponse:\n          oneOf:\n            - $ref: '#/components/schemas/ConsentRequestsIDPutResponseWeb'\n            - $ref: '#/components/schemas/ConsentRequestsIDPutResponseOTP'\n        currentState:\n          $ref: '#/components/schemas/LinkingRequestConsentState'\n      required:\n        - channelResponse\n        - currentState\n    LinkingRequestConsentResponse:\n      oneOf:\n        - $ref: '#/components/schemas/LinkingRequestConsentResponseError'\n        - $ref: '#/components/schemas/LinkingRequestConsentResponseSuccess'\n    LinkingRequestConsentIDAuthenticateRequest:\n      title: LinkingRequestConsentIDAuthenticateRequest\n      description: 'PATCH /linking/request-consent/{ID}/authenticate Request object'\n      type: object\n      properties:\n        authToken:\n          type: string\n      required:\n        - authToken\n      additionalProperties: false\n    LinkingRequestConsentIDAuthenticateState:\n      title: LinkingRequestConsentIDAuthenticateState\n      description: State of PATCH linking request consent Authenticate\n      type: string\n      enum:\n        - errored\n        - consentReceivedAwaitingCredential\n    LinkingRequestConsentIDAuthenticateResponseError:\n      title: LinkingRequestConsentIDAuthenticateResponseError\n      type: object\n      properties:\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n        currentState:\n          $ref: '#/components/schemas/LinkingRequestConsentIDAuthenticateState'\n      required:\n        - errorInformation\n        - currentState\n    ConsentsPostRequestPISP:\n      title: ConsentPostRequestPISP\n      type: object\n      description: \u003e-\n        The object sent in a `POST /consents` request to PISP by DFSP to ask for\n        delivering the credential object.\n      properties:\n        consentId:\n          allOf:\n            - $ref: '#/components/schemas/CorrelationId'\n          description: |\n            Common ID between the PISP and FSP for the Consent object\n            decided by the DFSP who creates the Consent\n            This field is REQUIRED for POST /consent.\n        consentRequestId:\n          allOf:\n            - $ref: '#/components/schemas/CorrelationId'\n          description: |\n            The id of the ConsentRequest that was used to initiate the\n            creation of this Consent.\n        scopes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Scope'\n      required:\n        - consentId\n        - scopes\n        - consentRequestId\n    LinkingRequestConsentIDAuthenticateResponseSuccess:\n      title: LinkingRequestConsentIDAuthenticateResponse\n      type: object\n      properties:\n        consent:\n          $ref: '#/components/schemas/ConsentsPostRequestPISP'\n        challenge:\n          type: string\n        currentState:\n          $ref: '#/components/schemas/LinkingRequestConsentIDAuthenticateState'\n      required:\n        - consent\n        - challenge\n        - currentState\n    LinkingRequestConsentIDAuthenticateResponse:\n      oneOf:\n        - $ref: \u003e-\n            #/components/schemas/LinkingRequestConsentIDAuthenticateResponseError\n        - $ref: \u003e-\n            #/components/schemas/LinkingRequestConsentIDAuthenticateResponseSuccess\n    FIDOPublicKeyCredentialAttestation:\n      title: FIDOPublicKeyCredentialAttestation\n      type: object\n      description: \u003e\n        An object sent in a `PUT /consents/{ID}` request.\n\n        Based on https://w3c.github.io/webauthn/#iface-pkcredential\n\n        and mostly on: https://webauthn.guide/#registration\n\n        AuthenticatorAttestationResponse\n\n        https://w3c.github.io/webauthn/#dom-authenticatorattestationresponse-attestationobject\n      properties:\n        id:\n          type: string\n          description: |\n            credential id: identifier of pair of keys, base64 encoded\n            https://w3c.github.io/webauthn/#ref-for-dom-credential-id\n          minLength: 59\n          maxLength: 118\n        rawId:\n          type: string\n          description: |\n            raw credential id: identifier of pair of keys, base64 encoded\n          minLength: 59\n          maxLength: 118\n        response:\n          type: object\n          description: |\n            AuthenticatorAttestationResponse\n          properties:\n            clientDataJSON:\n              type: string\n              description: |\n                JSON string with client data\n              minLength: 121\n              maxLength: 512\n            attestationObject:\n              type: string\n              description: |\n                CBOR.encoded attestation object\n              minLength: 306\n              maxLength: 2048\n          required:\n            - clientDataJSON\n            - attestationObject\n          additionalProperties: false\n        type:\n          type: string\n          description: 'response type, we need only the type of public-key'\n          enum:\n            - public-key\n      required:\n        - id\n        - rawId\n        - response\n        - type\n      additionalProperties: false\n    LinkingRequestConsentIDPassCredentialRequest:\n      title: LinkingRequestConsentIDPassCredentialRequest\n      description: 'POST /linking/request-consent/{ID}/pass-credential request object'\n      type: object\n      properties:\n        credential:\n          type: object\n          properties:\n            payload:\n              $ref: '#/components/schemas/FIDOPublicKeyCredentialAttestation'\n          required:\n            - payload\n      required:\n        - credential\n      additionalProperties: false\n    LinkingRequestConsentIDPassCredentialState:\n      title: LinkingRequestConsentIDPassCredentialState\n      description: State of post linking request consent pass credential\n      type: string\n      enum:\n        - errored\n        - accountsLinked\n    LinkingRequestConsentIDPassCredentialResponseError:\n      title: LinkingRequestConsentIDPassCredentialResponseError\n      type: object\n      properties:\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n        currentState:\n          $ref: '#/components/schemas/LinkingRequestConsentIDPassCredentialState'\n      required:\n        - errorInformation\n        - currentState\n    ConsentStatusTypeVerified:\n      title: ConsentStatusType\n      type: string\n      enum:\n        - VERIFIED\n      description: |\n        The status of the Consent.\n        - \"VERIFIED\" - The Consent is valid and verified.\n    LinkingRequestConsentIDPassCredentialResponseSuccess:\n      title: LinkingRequestConsentIDPassCredentialResponseSuccess\n      type: object\n      properties:\n        credential:\n          type: object\n          properties:\n            status:\n              $ref: '#/components/schemas/ConsentStatusTypeVerified'\n          required:\n            - status\n        currentState:\n          $ref: '#/components/schemas/LinkingRequestConsentIDPassCredentialState'\n      required:\n        - credential\n        - currentState\n    LinkingRequestConsentIDPassCredentialResponse:\n      oneOf:\n        - $ref: \u003e-\n            #/components/schemas/LinkingRequestConsentIDPassCredentialResponseError\n        - $ref: \u003e-\n            #/components/schemas/LinkingRequestConsentIDPassCredentialResponseSuccess\n  parameters:\n    ID:\n      name: ID\n      in: path\n      required: true\n      schema:\n        type: string\n      description: The identifier value.\n",
			"canonicalURL": "/github.com/mojaloop/pisp-project@4ca8daa097a2f713ad986ef67e5ee45554dfb59d/-/blob/docker-local/ml-testing-toolkit/spec_files/api_definitions/thirdparty_sdk_outbound_0.1.1/api_spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mojaloop/pisp-project/blob/4ca8daa097a2f713ad986ef67e5ee45554dfb59d/docker-local/ml-testing-toolkit/spec_files/api_definitions/thirdparty_sdk_outbound_0.1.1/api_spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: path \"/linking/accounts/{fspId}/{userId}\": get: responses: 200: contents: application/json: generate schema: field accounts: item: field accountNickname: string validator: pattern: error parsing regexp: invalid or unsupported Perl syntax: `(?!`",
	"NotImplemented": [
		"discriminator inference"
	]
}